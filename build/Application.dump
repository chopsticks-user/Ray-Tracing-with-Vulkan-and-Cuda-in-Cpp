
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	48 83 ec 08          	sub    $0x8,%rsp
    5004:	48 8b 05 c5 3f 03 00 	mov    0x33fc5(%rip),%rax        # 38fd0 <__gmon_start__@Base>
    500b:	48 85 c0             	test   %rax,%rax
    500e:	74 02                	je     5012 <_init+0x12>
    5010:	ff d0                	call   *%rax
    5012:	48 83 c4 08          	add    $0x8,%rsp
    5016:	c3                   	ret

Disassembly of section .plt:

0000000000005020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    5020:	ff 35 ca 3f 03 00    	push   0x33fca(%rip)        # 38ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 cc 3f 03 00    	jmp    *0x33fcc(%rip)        # 38ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    5030:	ff 25 ca 3f 03 00    	jmp    *0x33fca(%rip)        # 39000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    5036:	68 00 00 00 00       	push   $0x0
    503b:	e9 e0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005040 <vkAllocateDescriptorSets@plt>:
    5040:	ff 25 c2 3f 03 00    	jmp    *0x33fc2(%rip)        # 39008 <vkAllocateDescriptorSets@Base>
    5046:	68 01 00 00 00       	push   $0x1
    504b:	e9 d0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005050 <_ZNSt6chrono3_V212system_clock3nowEv@plt>:
    5050:	ff 25 ba 3f 03 00    	jmp    *0x33fba(%rip)        # 39010 <_ZNSt6chrono3_V212system_clock3nowEv@GLIBCXX_3.4.19>
    5056:	68 02 00 00 00       	push   $0x2
    505b:	e9 c0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    5060:	ff 25 b2 3f 03 00    	jmp    *0x33fb2(%rip)        # 39018 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    5066:	68 03 00 00 00       	push   $0x3
    506b:	e9 b0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005070 <vkCmdEndRenderPass@plt>:
    5070:	ff 25 aa 3f 03 00    	jmp    *0x33faa(%rip)        # 39020 <vkCmdEndRenderPass@Base>
    5076:	68 04 00 00 00       	push   $0x4
    507b:	e9 a0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005080 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    5080:	ff 25 a2 3f 03 00    	jmp    *0x33fa2(%rip)        # 39028 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    5086:	68 05 00 00 00       	push   $0x5
    508b:	e9 90 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005090 <_ZNSaIcED2Ev@plt>:
    5090:	ff 25 9a 3f 03 00    	jmp    *0x33f9a(%rip)        # 39030 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    5096:	68 06 00 00 00       	push   $0x6
    509b:	e9 80 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    50a0:	ff 25 92 3f 03 00    	jmp    *0x33f92(%rip)        # 39038 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    50a6:	68 07 00 00 00       	push   $0x7
    50ab:	e9 70 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050b0 <vkGetBufferMemoryRequirements@plt>:
    50b0:	ff 25 8a 3f 03 00    	jmp    *0x33f8a(%rip)        # 39040 <vkGetBufferMemoryRequirements@Base>
    50b6:	68 08 00 00 00       	push   $0x8
    50bb:	e9 60 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    50c0:	ff 25 82 3f 03 00    	jmp    *0x33f82(%rip)        # 39048 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    50c6:	68 09 00 00 00       	push   $0x9
    50cb:	e9 50 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050d0 <_ZNSolsEm@plt>:
    50d0:	ff 25 7a 3f 03 00    	jmp    *0x33f7a(%rip)        # 39050 <_ZNSolsEm@GLIBCXX_3.4>
    50d6:	68 0a 00 00 00       	push   $0xa
    50db:	e9 40 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050e0 <vkDeviceWaitIdle@plt>:
    50e0:	ff 25 72 3f 03 00    	jmp    *0x33f72(%rip)        # 39058 <vkDeviceWaitIdle@Base>
    50e6:	68 0b 00 00 00       	push   $0xb
    50eb:	e9 30 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    50f0:	ff 25 6a 3f 03 00    	jmp    *0x33f6a(%rip)        # 39060 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    50f6:	68 0c 00 00 00       	push   $0xc
    50fb:	e9 20 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005100 <vkCreateDescriptorPool@plt>:
    5100:	ff 25 62 3f 03 00    	jmp    *0x33f62(%rip)        # 39068 <vkCreateDescriptorPool@Base>
    5106:	68 0d 00 00 00       	push   $0xd
    510b:	e9 10 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005110 <_ZNKSt10filesystem7__cxx114path5_List13_Impl_deleterclEPNS2_5_ImplE@plt>:
    5110:	ff 25 5a 3f 03 00    	jmp    *0x33f5a(%rip)        # 39070 <_ZNKSt10filesystem7__cxx114path5_List13_Impl_deleterclEPNS2_5_ImplE@GLIBCXX_3.4.26>
    5116:	68 0e 00 00 00       	push   $0xe
    511b:	e9 00 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005120 <vkDestroySwapchainKHR@plt>:
    5120:	ff 25 52 3f 03 00    	jmp    *0x33f52(%rip)        # 39078 <vkDestroySwapchainKHR@Base>
    5126:	68 0f 00 00 00       	push   $0xf
    512b:	e9 f0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005130 <vkDestroySemaphore@plt>:
    5130:	ff 25 4a 3f 03 00    	jmp    *0x33f4a(%rip)        # 39080 <vkDestroySemaphore@Base>
    5136:	68 10 00 00 00       	push   $0x10
    513b:	e9 e0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005140 <glfwDestroyWindow@plt>:
    5140:	ff 25 42 3f 03 00    	jmp    *0x33f42(%rip)        # 39088 <glfwDestroyWindow@Base>
    5146:	68 11 00 00 00       	push   $0x11
    514b:	e9 d0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005150 <_ZSt17__throw_bad_allocv@plt>:
    5150:	ff 25 3a 3f 03 00    	jmp    *0x33f3a(%rip)        # 39090 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    5156:	68 12 00 00 00       	push   $0x12
    515b:	e9 c0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005160 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    5160:	ff 25 32 3f 03 00    	jmp    *0x33f32(%rip)        # 39098 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    5166:	68 13 00 00 00       	push   $0x13
    516b:	e9 b0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005170 <_ZNSt13runtime_errorC1EPKc@plt>:
    5170:	ff 25 2a 3f 03 00    	jmp    *0x33f2a(%rip)        # 390a0 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    5176:	68 14 00 00 00       	push   $0x14
    517b:	e9 a0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005180 <vkGetPhysicalDeviceProperties@plt>:
    5180:	ff 25 22 3f 03 00    	jmp    *0x33f22(%rip)        # 390a8 <vkGetPhysicalDeviceProperties@Base>
    5186:	68 15 00 00 00       	push   $0x15
    518b:	e9 90 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005190 <vkCmdDrawIndexed@plt>:
    5190:	ff 25 1a 3f 03 00    	jmp    *0x33f1a(%rip)        # 390b0 <vkCmdDrawIndexed@Base>
    5196:	68 16 00 00 00       	push   $0x16
    519b:	e9 80 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051a0 <__cxa_begin_catch@plt>:
    51a0:	ff 25 12 3f 03 00    	jmp    *0x33f12(%rip)        # 390b8 <__cxa_begin_catch@CXXABI_1.3>
    51a6:	68 17 00 00 00       	push   $0x17
    51ab:	e9 70 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051b0 <vkAcquireNextImageKHR@plt>:
    51b0:	ff 25 0a 3f 03 00    	jmp    *0x33f0a(%rip)        # 390c0 <vkAcquireNextImageKHR@Base>
    51b6:	68 18 00 00 00       	push   $0x18
    51bb:	e9 60 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    51c0:	ff 25 02 3f 03 00    	jmp    *0x33f02(%rip)        # 390c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    51c6:	68 19 00 00 00       	push   $0x19
    51cb:	e9 50 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051d0 <vkCreateCommandPool@plt>:
    51d0:	ff 25 fa 3e 03 00    	jmp    *0x33efa(%rip)        # 390d0 <vkCreateCommandPool@Base>
    51d6:	68 1a 00 00 00       	push   $0x1a
    51db:	e9 40 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt>:
    51e0:	ff 25 f2 3e 03 00    	jmp    *0x33ef2(%rip)        # 390d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@GLIBCXX_3.4.21>
    51e6:	68 1b 00 00 00       	push   $0x1b
    51eb:	e9 30 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051f0 <strlen@plt>:
    51f0:	ff 25 ea 3e 03 00    	jmp    *0x33eea(%rip)        # 390e0 <strlen@GLIBC_2.2.5>
    51f6:	68 1c 00 00 00       	push   $0x1c
    51fb:	e9 20 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005200 <memcmp@plt>:
    5200:	ff 25 e2 3e 03 00    	jmp    *0x33ee2(%rip)        # 390e8 <memcmp@GLIBC_2.2.5>
    5206:	68 1d 00 00 00       	push   $0x1d
    520b:	e9 10 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005210 <vkCreateGraphicsPipelines@plt>:
    5210:	ff 25 da 3e 03 00    	jmp    *0x33eda(%rip)        # 390f0 <vkCreateGraphicsPipelines@Base>
    5216:	68 1e 00 00 00       	push   $0x1e
    521b:	e9 00 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005220 <__cxa_allocate_exception@plt>:
    5220:	ff 25 d2 3e 03 00    	jmp    *0x33ed2(%rip)        # 390f8 <__cxa_allocate_exception@CXXABI_1.3>
    5226:	68 1f 00 00 00       	push   $0x1f
    522b:	e9 f0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005230 <vkDestroyBuffer@plt>:
    5230:	ff 25 ca 3e 03 00    	jmp    *0x33eca(%rip)        # 39100 <vkDestroyBuffer@Base>
    5236:	68 20 00 00 00       	push   $0x20
    523b:	e9 e0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005240 <glfwSetWindowUserPointer@plt>:
    5240:	ff 25 c2 3e 03 00    	jmp    *0x33ec2(%rip)        # 39108 <glfwSetWindowUserPointer@Base>
    5246:	68 21 00 00 00       	push   $0x21
    524b:	e9 d0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005250 <_ZSt20__throw_length_errorPKc@plt>:
    5250:	ff 25 ba 3e 03 00    	jmp    *0x33eba(%rip)        # 39110 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    5256:	68 22 00 00 00       	push   $0x22
    525b:	e9 c0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005260 <vkEnumeratePhysicalDevices@plt>:
    5260:	ff 25 b2 3e 03 00    	jmp    *0x33eb2(%rip)        # 39118 <vkEnumeratePhysicalDevices@Base>
    5266:	68 23 00 00 00       	push   $0x23
    526b:	e9 b0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005270 <memset@plt>:
    5270:	ff 25 aa 3e 03 00    	jmp    *0x33eaa(%rip)        # 39120 <memset@GLIBC_2.2.5>
    5276:	68 24 00 00 00       	push   $0x24
    527b:	e9 a0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005280 <vkCmdBindDescriptorSets@plt>:
    5280:	ff 25 a2 3e 03 00    	jmp    *0x33ea2(%rip)        # 39128 <vkCmdBindDescriptorSets@Base>
    5286:	68 25 00 00 00       	push   $0x25
    528b:	e9 90 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005290 <_ZNSaIcEC1ERKS_@plt>:
    5290:	ff 25 9a 3e 03 00    	jmp    *0x33e9a(%rip)        # 39130 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    5296:	68 26 00 00 00       	push   $0x26
    529b:	e9 80 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052a0 <vkWaitForFences@plt>:
    52a0:	ff 25 92 3e 03 00    	jmp    *0x33e92(%rip)        # 39138 <vkWaitForFences@Base>
    52a6:	68 27 00 00 00       	push   $0x27
    52ab:	e9 70 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052b0 <glfwWaitEvents@plt>:
    52b0:	ff 25 8a 3e 03 00    	jmp    *0x33e8a(%rip)        # 39140 <glfwWaitEvents@Base>
    52b6:	68 28 00 00 00       	push   $0x28
    52bb:	e9 60 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052c0 <vkGetSwapchainImagesKHR@plt>:
    52c0:	ff 25 82 3e 03 00    	jmp    *0x33e82(%rip)        # 39148 <vkGetSwapchainImagesKHR@Base>
    52c6:	68 29 00 00 00       	push   $0x29
    52cb:	e9 50 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    52d0:	ff 25 7a 3e 03 00    	jmp    *0x33e7a(%rip)        # 39150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    52d6:	68 2a 00 00 00       	push   $0x2a
    52db:	e9 40 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052e0 <vkCreateRenderPass@plt>:
    52e0:	ff 25 72 3e 03 00    	jmp    *0x33e72(%rip)        # 39158 <vkCreateRenderPass@Base>
    52e6:	68 2b 00 00 00       	push   $0x2b
    52eb:	e9 30 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052f0 <__cxa_guard_release@plt>:
    52f0:	ff 25 6a 3e 03 00    	jmp    *0x33e6a(%rip)        # 39160 <__cxa_guard_release@CXXABI_1.3>
    52f6:	68 2c 00 00 00       	push   $0x2c
    52fb:	e9 20 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005300 <__assert_fail@plt>:
    5300:	ff 25 62 3e 03 00    	jmp    *0x33e62(%rip)        # 39168 <__assert_fail@GLIBC_2.2.5>
    5306:	68 2d 00 00 00       	push   $0x2d
    530b:	e9 10 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    5310:	ff 25 5a 3e 03 00    	jmp    *0x33e5a(%rip)        # 39170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    5316:	68 2e 00 00 00       	push   $0x2e
    531b:	e9 00 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005320 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    5320:	ff 25 52 3e 03 00    	jmp    *0x33e52(%rip)        # 39178 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    5326:	68 2f 00 00 00       	push   $0x2f
    532b:	e9 f0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    5330:	ff 25 4a 3e 03 00    	jmp    *0x33e4a(%rip)        # 39180 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    5336:	68 30 00 00 00       	push   $0x30
    533b:	e9 e0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005340 <_ZSt19__throw_logic_errorPKc@plt>:
    5340:	ff 25 42 3e 03 00    	jmp    *0x33e42(%rip)        # 39188 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    5346:	68 31 00 00 00       	push   $0x31
    534b:	e9 d0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005350 <__cxa_free_exception@plt>:
    5350:	ff 25 3a 3e 03 00    	jmp    *0x33e3a(%rip)        # 39190 <__cxa_free_exception@CXXABI_1.3>
    5356:	68 32 00 00 00       	push   $0x32
    535b:	e9 c0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005360 <vkFreeCommandBuffers@plt>:
    5360:	ff 25 32 3e 03 00    	jmp    *0x33e32(%rip)        # 39198 <vkFreeCommandBuffers@Base>
    5366:	68 33 00 00 00       	push   $0x33
    536b:	e9 b0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005370 <cosf@plt>:
    5370:	ff 25 2a 3e 03 00    	jmp    *0x33e2a(%rip)        # 391a0 <cosf@GLIBC_2.2.5>
    5376:	68 34 00 00 00       	push   $0x34
    537b:	e9 a0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005380 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    5380:	ff 25 22 3e 03 00    	jmp    *0x33e22(%rip)        # 391a8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    5386:	68 35 00 00 00       	push   $0x35
    538b:	e9 90 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005390 <glfwGetRequiredInstanceExtensions@plt>:
    5390:	ff 25 1a 3e 03 00    	jmp    *0x33e1a(%rip)        # 391b0 <glfwGetRequiredInstanceExtensions@Base>
    5396:	68 36 00 00 00       	push   $0x36
    539b:	e9 80 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053a0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    53a0:	ff 25 12 3e 03 00    	jmp    *0x33e12(%rip)        # 391b8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    53a6:	68 37 00 00 00       	push   $0x37
    53ab:	e9 70 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053b0 <vkCreateShaderModule@plt>:
    53b0:	ff 25 0a 3e 03 00    	jmp    *0x33e0a(%rip)        # 391c0 <vkCreateShaderModule@Base>
    53b6:	68 38 00 00 00       	push   $0x38
    53bb:	e9 60 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    53c0:	ff 25 02 3e 03 00    	jmp    *0x33e02(%rip)        # 391c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    53c6:	68 39 00 00 00       	push   $0x39
    53cb:	e9 50 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053d0 <vkUnmapMemory@plt>:
    53d0:	ff 25 fa 3d 03 00    	jmp    *0x33dfa(%rip)        # 391d0 <vkUnmapMemory@Base>
    53d6:	68 3a 00 00 00       	push   $0x3a
    53db:	e9 40 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053e0 <memcpy@plt>:
    53e0:	ff 25 f2 3d 03 00    	jmp    *0x33df2(%rip)        # 391d8 <memcpy@GLIBC_2.14>
    53e6:	68 3b 00 00 00       	push   $0x3b
    53eb:	e9 30 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053f0 <vkDestroyDevice@plt>:
    53f0:	ff 25 ea 3d 03 00    	jmp    *0x33dea(%rip)        # 391e0 <vkDestroyDevice@Base>
    53f6:	68 3c 00 00 00       	push   $0x3c
    53fb:	e9 20 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005400 <vkCreatePipelineLayout@plt>:
    5400:	ff 25 e2 3d 03 00    	jmp    *0x33de2(%rip)        # 391e8 <vkCreatePipelineLayout@Base>
    5406:	68 3d 00 00 00       	push   $0x3d
    540b:	e9 10 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005410 <sinf@plt>:
    5410:	ff 25 da 3d 03 00    	jmp    *0x33dda(%rip)        # 391f0 <sinf@GLIBC_2.2.5>
    5416:	68 3e 00 00 00       	push   $0x3e
    541b:	e9 00 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005420 <vkEnumerateInstanceExtensionProperties@plt>:
    5420:	ff 25 d2 3d 03 00    	jmp    *0x33dd2(%rip)        # 391f8 <vkEnumerateInstanceExtensionProperties@Base>
    5426:	68 3f 00 00 00       	push   $0x3f
    542b:	e9 f0 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    5430:	ff 25 ca 3d 03 00    	jmp    *0x33dca(%rip)        # 39200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    5436:	68 40 00 00 00       	push   $0x40
    543b:	e9 e0 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005440 <glfwWindowHint@plt>:
    5440:	ff 25 c2 3d 03 00    	jmp    *0x33dc2(%rip)        # 39208 <glfwWindowHint@Base>
    5446:	68 41 00 00 00       	push   $0x41
    544b:	e9 d0 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005450 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    5450:	ff 25 ba 3d 03 00    	jmp    *0x33dba(%rip)        # 39210 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    5456:	68 42 00 00 00       	push   $0x42
    545b:	e9 c0 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005460 <vkCmdBindPipeline@plt>:
    5460:	ff 25 b2 3d 03 00    	jmp    *0x33db2(%rip)        # 39218 <vkCmdBindPipeline@Base>
    5466:	68 43 00 00 00       	push   $0x43
    546b:	e9 b0 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005470 <__cxa_atexit@plt>:
    5470:	ff 25 aa 3d 03 00    	jmp    *0x33daa(%rip)        # 39220 <__cxa_atexit@GLIBC_2.2.5>
    5476:	68 44 00 00 00       	push   $0x44
    547b:	e9 a0 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005480 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    5480:	ff 25 a2 3d 03 00    	jmp    *0x33da2(%rip)        # 39228 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    5486:	68 45 00 00 00       	push   $0x45
    548b:	e9 90 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005490 <vkMapMemory@plt>:
    5490:	ff 25 9a 3d 03 00    	jmp    *0x33d9a(%rip)        # 39230 <vkMapMemory@Base>
    5496:	68 46 00 00 00       	push   $0x46
    549b:	e9 80 fb ff ff       	jmp    5020 <_init+0x20>

00000000000054a0 <vkFreeMemory@plt>:
    54a0:	ff 25 92 3d 03 00    	jmp    *0x33d92(%rip)        # 39238 <vkFreeMemory@Base>
    54a6:	68 47 00 00 00       	push   $0x47
    54ab:	e9 70 fb ff ff       	jmp    5020 <_init+0x20>

00000000000054b0 <vkAllocateCommandBuffers@plt>:
    54b0:	ff 25 8a 3d 03 00    	jmp    *0x33d8a(%rip)        # 39240 <vkAllocateCommandBuffers@Base>
    54b6:	68 48 00 00 00       	push   $0x48
    54bb:	e9 60 fb ff ff       	jmp    5020 <_init+0x20>

00000000000054c0 <vkGetPhysicalDeviceProperties2@plt>:
    54c0:	ff 25 82 3d 03 00    	jmp    *0x33d82(%rip)        # 39248 <vkGetPhysicalDeviceProperties2@Base>
    54c6:	68 49 00 00 00       	push   $0x49
    54cb:	e9 50 fb ff ff       	jmp    5020 <_init+0x20>

00000000000054d0 <vkGetInstanceProcAddr@plt>:
    54d0:	ff 25 7a 3d 03 00    	jmp    *0x33d7a(%rip)        # 39250 <vkGetInstanceProcAddr@Base>
    54d6:	68 4a 00 00 00       	push   $0x4a
    54db:	e9 40 fb ff ff       	jmp    5020 <_init+0x20>

00000000000054e0 <glfwPollEvents@plt>:
    54e0:	ff 25 72 3d 03 00    	jmp    *0x33d72(%rip)        # 39258 <glfwPollEvents@Base>
    54e6:	68 4b 00 00 00       	push   $0x4b
    54eb:	e9 30 fb ff ff       	jmp    5020 <_init+0x20>

00000000000054f0 <vkDestroyRenderPass@plt>:
    54f0:	ff 25 6a 3d 03 00    	jmp    *0x33d6a(%rip)        # 39260 <vkDestroyRenderPass@Base>
    54f6:	68 4c 00 00 00       	push   $0x4c
    54fb:	e9 20 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005500 <vkCreateBuffer@plt>:
    5500:	ff 25 62 3d 03 00    	jmp    *0x33d62(%rip)        # 39268 <vkCreateBuffer@Base>
    5506:	68 4d 00 00 00       	push   $0x4d
    550b:	e9 10 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    5510:	ff 25 5a 3d 03 00    	jmp    *0x33d5a(%rip)        # 39270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    5516:	68 4e 00 00 00       	push   $0x4e
    551b:	e9 00 fb ff ff       	jmp    5020 <_init+0x20>

0000000000005520 <_Znwm@plt>:
    5520:	ff 25 52 3d 03 00    	jmp    *0x33d52(%rip)        # 39278 <_Znwm@GLIBCXX_3.4>
    5526:	68 4f 00 00 00       	push   $0x4f
    552b:	e9 f0 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005530 <vkBeginCommandBuffer@plt>:
    5530:	ff 25 4a 3d 03 00    	jmp    *0x33d4a(%rip)        # 39280 <vkBeginCommandBuffer@Base>
    5536:	68 50 00 00 00       	push   $0x50
    553b:	e9 e0 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005540 <_ZdlPvm@plt>:
    5540:	ff 25 42 3d 03 00    	jmp    *0x33d42(%rip)        # 39288 <_ZdlPvm@CXXABI_1.3.9>
    5546:	68 51 00 00 00       	push   $0x51
    554b:	e9 d0 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005550 <vkDestroyInstance@plt>:
    5550:	ff 25 3a 3d 03 00    	jmp    *0x33d3a(%rip)        # 39290 <vkDestroyInstance@Base>
    5556:	68 52 00 00 00       	push   $0x52
    555b:	e9 c0 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005560 <glfwTerminate@plt>:
    5560:	ff 25 32 3d 03 00    	jmp    *0x33d32(%rip)        # 39298 <glfwTerminate@Base>
    5566:	68 53 00 00 00       	push   $0x53
    556b:	e9 b0 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005570 <vkCreateImageView@plt>:
    5570:	ff 25 2a 3d 03 00    	jmp    *0x33d2a(%rip)        # 392a0 <vkCreateImageView@Base>
    5576:	68 54 00 00 00       	push   $0x54
    557b:	e9 a0 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005580 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    5580:	ff 25 22 3d 03 00    	jmp    *0x33d22(%rip)        # 392a8 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    5586:	68 55 00 00 00       	push   $0x55
    558b:	e9 90 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005590 <_ZNSolsEPFRSoS_E@plt>:
    5590:	ff 25 1a 3d 03 00    	jmp    *0x33d1a(%rip)        # 392b0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    5596:	68 56 00 00 00       	push   $0x56
    559b:	e9 80 fa ff ff       	jmp    5020 <_init+0x20>

00000000000055a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    55a0:	ff 25 12 3d 03 00    	jmp    *0x33d12(%rip)        # 392b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    55a6:	68 57 00 00 00       	push   $0x57
    55ab:	e9 70 fa ff ff       	jmp    5020 <_init+0x20>

00000000000055b0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    55b0:	ff 25 0a 3d 03 00    	jmp    *0x33d0a(%rip)        # 392c0 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    55b6:	68 58 00 00 00       	push   $0x58
    55bb:	e9 60 fa ff ff       	jmp    5020 <_init+0x20>

00000000000055c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    55c0:	ff 25 02 3d 03 00    	jmp    *0x33d02(%rip)        # 392c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    55c6:	68 59 00 00 00       	push   $0x59
    55cb:	e9 50 fa ff ff       	jmp    5020 <_init+0x20>

00000000000055d0 <_ZNSaIcED1Ev@plt>:
    55d0:	ff 25 fa 3c 03 00    	jmp    *0x33cfa(%rip)        # 392d0 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    55d6:	68 5a 00 00 00       	push   $0x5a
    55db:	e9 40 fa ff ff       	jmp    5020 <_init+0x20>

00000000000055e0 <vkDestroyFence@plt>:
    55e0:	ff 25 f2 3c 03 00    	jmp    *0x33cf2(%rip)        # 392d8 <vkDestroyFence@Base>
    55e6:	68 5b 00 00 00       	push   $0x5b
    55eb:	e9 30 fa ff ff       	jmp    5020 <_init+0x20>

00000000000055f0 <vkDestroyPipeline@plt>:
    55f0:	ff 25 ea 3c 03 00    	jmp    *0x33cea(%rip)        # 392e0 <vkDestroyPipeline@Base>
    55f6:	68 5c 00 00 00       	push   $0x5c
    55fb:	e9 20 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005600 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    5600:	ff 25 e2 3c 03 00    	jmp    *0x33ce2(%rip)        # 392e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    5606:	68 5d 00 00 00       	push   $0x5d
    560b:	e9 10 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005610 <vkUpdateDescriptorSets@plt>:
    5610:	ff 25 da 3c 03 00    	jmp    *0x33cda(%rip)        # 392f0 <vkUpdateDescriptorSets@Base>
    5616:	68 5e 00 00 00       	push   $0x5e
    561b:	e9 00 fa ff ff       	jmp    5020 <_init+0x20>

0000000000005620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    5620:	ff 25 d2 3c 03 00    	jmp    *0x33cd2(%rip)        # 392f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    5626:	68 5f 00 00 00       	push   $0x5f
    562b:	e9 f0 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005630 <vkEnumerateInstanceLayerProperties@plt>:
    5630:	ff 25 ca 3c 03 00    	jmp    *0x33cca(%rip)        # 39300 <vkEnumerateInstanceLayerProperties@Base>
    5636:	68 60 00 00 00       	push   $0x60
    563b:	e9 e0 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcmRKS3_@plt>:
    5640:	ff 25 c2 3c 03 00    	jmp    *0x33cc2(%rip)        # 39308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcmRKS3_@GLIBCXX_3.4.21>
    5646:	68 61 00 00 00       	push   $0x61
    564b:	e9 d0 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005650 <glfwInit@plt>:
    5650:	ff 25 ba 3c 03 00    	jmp    *0x33cba(%rip)        # 39310 <glfwInit@Base>
    5656:	68 62 00 00 00       	push   $0x62
    565b:	e9 c0 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    5660:	ff 25 b2 3c 03 00    	jmp    *0x33cb2(%rip)        # 39318 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    5666:	68 63 00 00 00       	push   $0x63
    566b:	e9 b0 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005670 <vkBindBufferMemory@plt>:
    5670:	ff 25 aa 3c 03 00    	jmp    *0x33caa(%rip)        # 39320 <vkBindBufferMemory@Base>
    5676:	68 64 00 00 00       	push   $0x64
    567b:	e9 a0 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005680 <vkCreateSwapchainKHR@plt>:
    5680:	ff 25 a2 3c 03 00    	jmp    *0x33ca2(%rip)        # 39328 <vkCreateSwapchainKHR@Base>
    5686:	68 65 00 00 00       	push   $0x65
    568b:	e9 90 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005690 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    5690:	ff 25 9a 3c 03 00    	jmp    *0x33c9a(%rip)        # 39330 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    5696:	68 66 00 00 00       	push   $0x66
    569b:	e9 80 f9 ff ff       	jmp    5020 <_init+0x20>

00000000000056a0 <vkDestroyShaderModule@plt>:
    56a0:	ff 25 92 3c 03 00    	jmp    *0x33c92(%rip)        # 39338 <vkDestroyShaderModule@Base>
    56a6:	68 67 00 00 00       	push   $0x67
    56ab:	e9 70 f9 ff ff       	jmp    5020 <_init+0x20>

00000000000056b0 <vkCreateInstance@plt>:
    56b0:	ff 25 8a 3c 03 00    	jmp    *0x33c8a(%rip)        # 39340 <vkCreateInstance@Base>
    56b6:	68 68 00 00 00       	push   $0x68
    56bb:	e9 60 f9 ff ff       	jmp    5020 <_init+0x20>

00000000000056c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    56c0:	ff 25 82 3c 03 00    	jmp    *0x33c82(%rip)        # 39348 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    56c6:	68 69 00 00 00       	push   $0x69
    56cb:	e9 50 f9 ff ff       	jmp    5020 <_init+0x20>

00000000000056d0 <vkCreateFence@plt>:
    56d0:	ff 25 7a 3c 03 00    	jmp    *0x33c7a(%rip)        # 39350 <vkCreateFence@Base>
    56d6:	68 6a 00 00 00       	push   $0x6a
    56db:	e9 40 f9 ff ff       	jmp    5020 <_init+0x20>

00000000000056e0 <vkResetCommandBuffer@plt>:
    56e0:	ff 25 72 3c 03 00    	jmp    *0x33c72(%rip)        # 39358 <vkResetCommandBuffer@Base>
    56e6:	68 6b 00 00 00       	push   $0x6b
    56eb:	e9 30 f9 ff ff       	jmp    5020 <_init+0x20>

00000000000056f0 <vkDestroyPipelineLayout@plt>:
    56f0:	ff 25 6a 3c 03 00    	jmp    *0x33c6a(%rip)        # 39360 <vkDestroyPipelineLayout@Base>
    56f6:	68 6c 00 00 00       	push   $0x6c
    56fb:	e9 20 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005700 <_ZNSi4readEPcl@plt>:
    5700:	ff 25 62 3c 03 00    	jmp    *0x33c62(%rip)        # 39368 <_ZNSi4readEPcl@GLIBCXX_3.4>
    5706:	68 6d 00 00 00       	push   $0x6d
    570b:	e9 10 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005710 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    5710:	ff 25 5a 3c 03 00    	jmp    *0x33c5a(%rip)        # 39370 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    5716:	68 6e 00 00 00       	push   $0x6e
    571b:	e9 00 f9 ff ff       	jmp    5020 <_init+0x20>

0000000000005720 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    5720:	ff 25 52 3c 03 00    	jmp    *0x33c52(%rip)        # 39378 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    5726:	68 6f 00 00 00       	push   $0x6f
    572b:	e9 f0 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005730 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    5730:	ff 25 4a 3c 03 00    	jmp    *0x33c4a(%rip)        # 39380 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    5736:	68 70 00 00 00       	push   $0x70
    573b:	e9 e0 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005740 <vkQueueSubmit@plt>:
    5740:	ff 25 42 3c 03 00    	jmp    *0x33c42(%rip)        # 39388 <vkQueueSubmit@Base>
    5746:	68 71 00 00 00       	push   $0x71
    574b:	e9 d0 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005750 <vkGetDeviceQueue@plt>:
    5750:	ff 25 3a 3c 03 00    	jmp    *0x33c3a(%rip)        # 39390 <vkGetDeviceQueue@Base>
    5756:	68 72 00 00 00       	push   $0x72
    575b:	e9 c0 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005760 <_ZNSolsEj@plt>:
    5760:	ff 25 32 3c 03 00    	jmp    *0x33c32(%rip)        # 39398 <_ZNSolsEj@GLIBCXX_3.4>
    5766:	68 73 00 00 00       	push   $0x73
    576b:	e9 b0 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005770 <vkCreateFramebuffer@plt>:
    5770:	ff 25 2a 3c 03 00    	jmp    *0x33c2a(%rip)        # 393a0 <vkCreateFramebuffer@Base>
    5776:	68 74 00 00 00       	push   $0x74
    577b:	e9 a0 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005780 <glfwGetWindowUserPointer@plt>:
    5780:	ff 25 22 3c 03 00    	jmp    *0x33c22(%rip)        # 393a8 <glfwGetWindowUserPointer@Base>
    5786:	68 75 00 00 00       	push   $0x75
    578b:	e9 90 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005790 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    5790:	ff 25 1a 3c 03 00    	jmp    *0x33c1a(%rip)        # 393b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    5796:	68 76 00 00 00       	push   $0x76
    579b:	e9 80 f8 ff ff       	jmp    5020 <_init+0x20>

00000000000057a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    57a0:	ff 25 12 3c 03 00    	jmp    *0x33c12(%rip)        # 393b8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    57a6:	68 77 00 00 00       	push   $0x77
    57ab:	e9 70 f8 ff ff       	jmp    5020 <_init+0x20>

00000000000057b0 <vkEnumerateDeviceExtensionProperties@plt>:
    57b0:	ff 25 0a 3c 03 00    	jmp    *0x33c0a(%rip)        # 393c0 <vkEnumerateDeviceExtensionProperties@Base>
    57b6:	68 78 00 00 00       	push   $0x78
    57bb:	e9 60 f8 ff ff       	jmp    5020 <_init+0x20>

00000000000057c0 <vkCreateSemaphore@plt>:
    57c0:	ff 25 02 3c 03 00    	jmp    *0x33c02(%rip)        # 393c8 <vkCreateSemaphore@Base>
    57c6:	68 79 00 00 00       	push   $0x79
    57cb:	e9 50 f8 ff ff       	jmp    5020 <_init+0x20>

00000000000057d0 <vkCmdBeginRenderPass@plt>:
    57d0:	ff 25 fa 3b 03 00    	jmp    *0x33bfa(%rip)        # 393d0 <vkCmdBeginRenderPass@Base>
    57d6:	68 7a 00 00 00       	push   $0x7a
    57db:	e9 40 f8 ff ff       	jmp    5020 <_init+0x20>

00000000000057e0 <vkDestroyCommandPool@plt>:
    57e0:	ff 25 f2 3b 03 00    	jmp    *0x33bf2(%rip)        # 393d8 <vkDestroyCommandPool@Base>
    57e6:	68 7b 00 00 00       	push   $0x7b
    57eb:	e9 30 f8 ff ff       	jmp    5020 <_init+0x20>

00000000000057f0 <vkCmdBindIndexBuffer@plt>:
    57f0:	ff 25 ea 3b 03 00    	jmp    *0x33bea(%rip)        # 393e0 <vkCmdBindIndexBuffer@Base>
    57f6:	68 7c 00 00 00       	push   $0x7c
    57fb:	e9 20 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005800 <vkCmdBindVertexBuffers@plt>:
    5800:	ff 25 e2 3b 03 00    	jmp    *0x33be2(%rip)        # 393e8 <vkCmdBindVertexBuffers@Base>
    5806:	68 7d 00 00 00       	push   $0x7d
    580b:	e9 10 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005810 <_ZNSaIcEC2ERKS_@plt>:
    5810:	ff 25 da 3b 03 00    	jmp    *0x33bda(%rip)        # 393f0 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    5816:	68 7e 00 00 00       	push   $0x7e
    581b:	e9 00 f8 ff ff       	jmp    5020 <_init+0x20>

0000000000005820 <vkCmdCopyBuffer@plt>:
    5820:	ff 25 d2 3b 03 00    	jmp    *0x33bd2(%rip)        # 393f8 <vkCmdCopyBuffer@Base>
    5826:	68 7f 00 00 00       	push   $0x7f
    582b:	e9 f0 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005830 <tanf@plt>:
    5830:	ff 25 ca 3b 03 00    	jmp    *0x33bca(%rip)        # 39400 <tanf@GLIBC_2.2.5>
    5836:	68 80 00 00 00       	push   $0x80
    583b:	e9 e0 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005840 <__cxa_rethrow@plt>:
    5840:	ff 25 c2 3b 03 00    	jmp    *0x33bc2(%rip)        # 39408 <__cxa_rethrow@CXXABI_1.3>
    5846:	68 81 00 00 00       	push   $0x81
    584b:	e9 d0 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005850 <vkCreateDevice@plt>:
    5850:	ff 25 ba 3b 03 00    	jmp    *0x33bba(%rip)        # 39410 <vkCreateDevice@Base>
    5856:	68 82 00 00 00       	push   $0x82
    585b:	e9 c0 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005860 <glfwSetFramebufferSizeCallback@plt>:
    5860:	ff 25 b2 3b 03 00    	jmp    *0x33bb2(%rip)        # 39418 <glfwSetFramebufferSizeCallback@Base>
    5866:	68 83 00 00 00       	push   $0x83
    586b:	e9 b0 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005870 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@plt>:
    5870:	ff 25 aa 3b 03 00    	jmp    *0x33baa(%rip)        # 39420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@GLIBCXX_3.4.21>
    5876:	68 84 00 00 00       	push   $0x84
    587b:	e9 a0 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005880 <_ZNSt8ios_base4InitC1Ev@plt>:
    5880:	ff 25 a2 3b 03 00    	jmp    *0x33ba2(%rip)        # 39428 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    5886:	68 85 00 00 00       	push   $0x85
    588b:	e9 90 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005890 <glfwCreateWindowSurface@plt>:
    5890:	ff 25 9a 3b 03 00    	jmp    *0x33b9a(%rip)        # 39430 <glfwCreateWindowSurface@Base>
    5896:	68 86 00 00 00       	push   $0x86
    589b:	e9 80 f7 ff ff       	jmp    5020 <_init+0x20>

00000000000058a0 <vkResetFences@plt>:
    58a0:	ff 25 92 3b 03 00    	jmp    *0x33b92(%rip)        # 39438 <vkResetFences@Base>
    58a6:	68 87 00 00 00       	push   $0x87
    58ab:	e9 70 f7 ff ff       	jmp    5020 <_init+0x20>

00000000000058b0 <glfwCreateWindow@plt>:
    58b0:	ff 25 8a 3b 03 00    	jmp    *0x33b8a(%rip)        # 39440 <glfwCreateWindow@Base>
    58b6:	68 88 00 00 00       	push   $0x88
    58bb:	e9 60 f7 ff ff       	jmp    5020 <_init+0x20>

00000000000058c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    58c0:	ff 25 82 3b 03 00    	jmp    *0x33b82(%rip)        # 39448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    58c6:	68 89 00 00 00       	push   $0x89
    58cb:	e9 50 f7 ff ff       	jmp    5020 <_init+0x20>

00000000000058d0 <_ZNSt10filesystem12current_pathB5cxx11Ev@plt>:
    58d0:	ff 25 7a 3b 03 00    	jmp    *0x33b7a(%rip)        # 39450 <_ZNSt10filesystem12current_pathB5cxx11Ev@GLIBCXX_3.4.26>
    58d6:	68 8a 00 00 00       	push   $0x8a
    58db:	e9 40 f7 ff ff       	jmp    5020 <_init+0x20>

00000000000058e0 <vkDestroyDescriptorSetLayout@plt>:
    58e0:	ff 25 72 3b 03 00    	jmp    *0x33b72(%rip)        # 39458 <vkDestroyDescriptorSetLayout@Base>
    58e6:	68 8b 00 00 00       	push   $0x8b
    58eb:	e9 30 f7 ff ff       	jmp    5020 <_init+0x20>

00000000000058f0 <vkQueuePresentKHR@plt>:
    58f0:	ff 25 6a 3b 03 00    	jmp    *0x33b6a(%rip)        # 39460 <vkQueuePresentKHR@Base>
    58f6:	68 8c 00 00 00       	push   $0x8c
    58fb:	e9 20 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005900 <vkGetPhysicalDeviceMemoryProperties@plt>:
    5900:	ff 25 62 3b 03 00    	jmp    *0x33b62(%rip)        # 39468 <vkGetPhysicalDeviceMemoryProperties@Base>
    5906:	68 8d 00 00 00       	push   $0x8d
    590b:	e9 10 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005910 <glfwGetFramebufferSize@plt>:
    5910:	ff 25 5a 3b 03 00    	jmp    *0x33b5a(%rip)        # 39470 <glfwGetFramebufferSize@Base>
    5916:	68 8e 00 00 00       	push   $0x8e
    591b:	e9 00 f7 ff ff       	jmp    5020 <_init+0x20>

0000000000005920 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    5920:	ff 25 52 3b 03 00    	jmp    *0x33b52(%rip)        # 39478 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    5926:	68 8f 00 00 00       	push   $0x8f
    592b:	e9 f0 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005930 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    5930:	ff 25 4a 3b 03 00    	jmp    *0x33b4a(%rip)        # 39480 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    5936:	68 90 00 00 00       	push   $0x90
    593b:	e9 e0 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005940 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    5940:	ff 25 42 3b 03 00    	jmp    *0x33b42(%rip)        # 39488 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    5946:	68 91 00 00 00       	push   $0x91
    594b:	e9 d0 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005950 <memmove@plt>:
    5950:	ff 25 3a 3b 03 00    	jmp    *0x33b3a(%rip)        # 39490 <memmove@GLIBC_2.2.5>
    5956:	68 92 00 00 00       	push   $0x92
    595b:	e9 c0 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005960 <__cxa_end_catch@plt>:
    5960:	ff 25 32 3b 03 00    	jmp    *0x33b32(%rip)        # 39498 <__cxa_end_catch@CXXABI_1.3>
    5966:	68 93 00 00 00       	push   $0x93
    596b:	e9 b0 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005970 <vkAllocateMemory@plt>:
    5970:	ff 25 2a 3b 03 00    	jmp    *0x33b2a(%rip)        # 394a0 <vkAllocateMemory@Base>
    5976:	68 94 00 00 00       	push   $0x94
    597b:	e9 a0 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005980 <vkDestroyFramebuffer@plt>:
    5980:	ff 25 22 3b 03 00    	jmp    *0x33b22(%rip)        # 394a8 <vkDestroyFramebuffer@Base>
    5986:	68 95 00 00 00       	push   $0x95
    598b:	e9 90 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005990 <__cxa_throw@plt>:
    5990:	ff 25 1a 3b 03 00    	jmp    *0x33b1a(%rip)        # 394b0 <__cxa_throw@CXXABI_1.3>
    5996:	68 96 00 00 00       	push   $0x96
    599b:	e9 80 f6 ff ff       	jmp    5020 <_init+0x20>

00000000000059a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    59a0:	ff 25 12 3b 03 00    	jmp    *0x33b12(%rip)        # 394b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    59a6:	68 97 00 00 00       	push   $0x97
    59ab:	e9 70 f6 ff ff       	jmp    5020 <_init+0x20>

00000000000059b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    59b0:	ff 25 0a 3b 03 00    	jmp    *0x33b0a(%rip)        # 394c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    59b6:	68 98 00 00 00       	push   $0x98
    59bb:	e9 60 f6 ff ff       	jmp    5020 <_init+0x20>

00000000000059c0 <_ZNSolsEi@plt>:
    59c0:	ff 25 02 3b 03 00    	jmp    *0x33b02(%rip)        # 394c8 <_ZNSolsEi@GLIBCXX_3.4>
    59c6:	68 99 00 00 00       	push   $0x99
    59cb:	e9 50 f6 ff ff       	jmp    5020 <_init+0x20>

00000000000059d0 <_ZNSi5tellgEv@plt>:
    59d0:	ff 25 fa 3a 03 00    	jmp    *0x33afa(%rip)        # 394d0 <_ZNSi5tellgEv@GLIBCXX_3.4>
    59d6:	68 9a 00 00 00       	push   $0x9a
    59db:	e9 40 f6 ff ff       	jmp    5020 <_init+0x20>

00000000000059e0 <vkQueueWaitIdle@plt>:
    59e0:	ff 25 f2 3a 03 00    	jmp    *0x33af2(%rip)        # 394d8 <vkQueueWaitIdle@Base>
    59e6:	68 9b 00 00 00       	push   $0x9b
    59eb:	e9 30 f6 ff ff       	jmp    5020 <_init+0x20>

00000000000059f0 <vkDestroySurfaceKHR@plt>:
    59f0:	ff 25 ea 3a 03 00    	jmp    *0x33aea(%rip)        # 394e0 <vkDestroySurfaceKHR@Base>
    59f6:	68 9c 00 00 00       	push   $0x9c
    59fb:	e9 20 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005a00 <_Unwind_Resume@plt>:
    5a00:	ff 25 e2 3a 03 00    	jmp    *0x33ae2(%rip)        # 394e8 <_Unwind_Resume@GCC_3.0>
    5a06:	68 9d 00 00 00       	push   $0x9d
    5a0b:	e9 10 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005a10 <_ZNSaIcEC1Ev@plt>:
    5a10:	ff 25 da 3a 03 00    	jmp    *0x33ada(%rip)        # 394f0 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    5a16:	68 9e 00 00 00       	push   $0x9e
    5a1b:	e9 00 f6 ff ff       	jmp    5020 <_init+0x20>

0000000000005a20 <vkDestroyImageView@plt>:
    5a20:	ff 25 d2 3a 03 00    	jmp    *0x33ad2(%rip)        # 394f8 <vkDestroyImageView@Base>
    5a26:	68 9f 00 00 00       	push   $0x9f
    5a2b:	e9 f0 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    5a30:	ff 25 ca 3a 03 00    	jmp    *0x33aca(%rip)        # 39500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    5a36:	68 a0 00 00 00       	push   $0xa0
    5a3b:	e9 e0 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a40 <vkCreateDescriptorSetLayout@plt>:
    5a40:	ff 25 c2 3a 03 00    	jmp    *0x33ac2(%rip)        # 39508 <vkCreateDescriptorSetLayout@Base>
    5a46:	68 a1 00 00 00       	push   $0xa1
    5a4b:	e9 d0 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a50 <__cxa_guard_acquire@plt>:
    5a50:	ff 25 ba 3a 03 00    	jmp    *0x33aba(%rip)        # 39510 <__cxa_guard_acquire@CXXABI_1.3>
    5a56:	68 a2 00 00 00       	push   $0xa2
    5a5b:	e9 c0 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a60 <sqrtf@plt>:
    5a60:	ff 25 b2 3a 03 00    	jmp    *0x33ab2(%rip)        # 39518 <sqrtf@GLIBC_2.2.5>
    5a66:	68 a3 00 00 00       	push   $0xa3
    5a6b:	e9 b0 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a70 <_ZNSt9exceptionD2Ev@plt>:
    5a70:	ff 25 aa 3a 03 00    	jmp    *0x33aaa(%rip)        # 39520 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    5a76:	68 a4 00 00 00       	push   $0xa4
    5a7b:	e9 a0 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a80 <glfwWindowShouldClose@plt>:
    5a80:	ff 25 a2 3a 03 00    	jmp    *0x33aa2(%rip)        # 39528 <glfwWindowShouldClose@Base>
    5a86:	68 a5 00 00 00       	push   $0xa5
    5a8b:	e9 90 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005a90 <vkDestroyDescriptorPool@plt>:
    5a90:	ff 25 9a 3a 03 00    	jmp    *0x33a9a(%rip)        # 39530 <vkDestroyDescriptorPool@Base>
    5a96:	68 a6 00 00 00       	push   $0xa6
    5a9b:	e9 80 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005aa0 <vkEndCommandBuffer@plt>:
    5aa0:	ff 25 92 3a 03 00    	jmp    *0x33a92(%rip)        # 39538 <vkEndCommandBuffer@Base>
    5aa6:	68 a7 00 00 00       	push   $0xa7
    5aab:	e9 70 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005ab0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@plt>:
    5ab0:	ff 25 8a 3a 03 00    	jmp    *0x33a8a(%rip)        # 39540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@GLIBCXX_3.4.21>
    5ab6:	68 a8 00 00 00       	push   $0xa8
    5abb:	e9 60 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005ac0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    5ac0:	ff 25 82 3a 03 00    	jmp    *0x33a82(%rip)        # 39548 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    5ac6:	68 a9 00 00 00       	push   $0xa9
    5acb:	e9 50 f5 ff ff       	jmp    5020 <_init+0x20>

0000000000005ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    5ad0:	ff 25 7a 3a 03 00    	jmp    *0x33a7a(%rip)        # 39550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    5ad6:	68 aa 00 00 00       	push   $0xaa
    5adb:	e9 40 f5 ff ff       	jmp    5020 <_init+0x20>

Disassembly of section .plt.got:

0000000000005ae0 <__cxa_finalize@plt>:
    5ae0:	ff 25 ba 34 03 00    	jmp    *0x334ba(%rip)        # 38fa0 <__cxa_finalize@GLIBC_2.2.5>
    5ae6:	66 90                	xchg   %ax,%ax

0000000000005ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    5ae8:	ff 25 c2 34 03 00    	jmp    *0x334c2(%rip)        # 38fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    5aee:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000005af0 <_start>:
    5af0:	31 ed                	xor    %ebp,%ebp
    5af2:	49 89 d1             	mov    %rdx,%r9
    5af5:	5e                   	pop    %rsi
    5af6:	48 89 e2             	mov    %rsp,%rdx
    5af9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    5afd:	50                   	push   %rax
    5afe:	54                   	push   %rsp
    5aff:	45 31 c0             	xor    %r8d,%r8d
    5b02:	31 c9                	xor    %ecx,%ecx
    5b04:	48 8d 3d 83 01 00 00 	lea    0x183(%rip),%rdi        # 5c8e <main>
    5b0b:	ff 15 a7 34 03 00    	call   *0x334a7(%rip)        # 38fb8 <__libc_start_main@GLIBC_2.34>
    5b11:	f4                   	hlt
    5b12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b19:	00 00 00 
    5b1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005b20 <deregister_tm_clones>:
    5b20:	48 8d 3d 51 3a 03 00 	lea    0x33a51(%rip),%rdi        # 39578 <__TMC_END__>
    5b27:	48 8d 05 4a 3a 03 00 	lea    0x33a4a(%rip),%rax        # 39578 <__TMC_END__>
    5b2e:	48 39 f8             	cmp    %rdi,%rax
    5b31:	74 15                	je     5b48 <deregister_tm_clones+0x28>
    5b33:	48 8b 05 8e 34 03 00 	mov    0x3348e(%rip),%rax        # 38fc8 <_ITM_deregisterTMCloneTable@Base>
    5b3a:	48 85 c0             	test   %rax,%rax
    5b3d:	74 09                	je     5b48 <deregister_tm_clones+0x28>
    5b3f:	ff e0                	jmp    *%rax
    5b41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b48:	c3                   	ret
    5b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005b50 <register_tm_clones>:
    5b50:	48 8d 3d 21 3a 03 00 	lea    0x33a21(%rip),%rdi        # 39578 <__TMC_END__>
    5b57:	48 8d 35 1a 3a 03 00 	lea    0x33a1a(%rip),%rsi        # 39578 <__TMC_END__>
    5b5e:	48 29 fe             	sub    %rdi,%rsi
    5b61:	48 89 f0             	mov    %rsi,%rax
    5b64:	48 c1 ee 3f          	shr    $0x3f,%rsi
    5b68:	48 c1 f8 03          	sar    $0x3,%rax
    5b6c:	48 01 c6             	add    %rax,%rsi
    5b6f:	48 d1 fe             	sar    %rsi
    5b72:	74 14                	je     5b88 <register_tm_clones+0x38>
    5b74:	48 8b 05 5d 34 03 00 	mov    0x3345d(%rip),%rax        # 38fd8 <_ITM_registerTMCloneTable@Base>
    5b7b:	48 85 c0             	test   %rax,%rax
    5b7e:	74 08                	je     5b88 <register_tm_clones+0x38>
    5b80:	ff e0                	jmp    *%rax
    5b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5b88:	c3                   	ret
    5b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005b90 <__do_global_dtors_aux>:
    5b90:	f3 0f 1e fa          	endbr64
    5b94:	80 3d f5 3a 03 00 00 	cmpb   $0x0,0x33af5(%rip)        # 39690 <completed.0>
    5b9b:	75 2b                	jne    5bc8 <__do_global_dtors_aux+0x38>
    5b9d:	55                   	push   %rbp
    5b9e:	48 83 3d fa 33 03 00 	cmpq   $0x0,0x333fa(%rip)        # 38fa0 <__cxa_finalize@GLIBC_2.2.5>
    5ba5:	00 
    5ba6:	48 89 e5             	mov    %rsp,%rbp
    5ba9:	74 0c                	je     5bb7 <__do_global_dtors_aux+0x27>
    5bab:	48 8b 3d ae 39 03 00 	mov    0x339ae(%rip),%rdi        # 39560 <__dso_handle>
    5bb2:	e8 29 ff ff ff       	call   5ae0 <__cxa_finalize@plt>
    5bb7:	e8 64 ff ff ff       	call   5b20 <deregister_tm_clones>
    5bbc:	c6 05 cd 3a 03 00 01 	movb   $0x1,0x33acd(%rip)        # 39690 <completed.0>
    5bc3:	5d                   	pop    %rbp
    5bc4:	c3                   	ret
    5bc5:	0f 1f 00             	nopl   (%rax)
    5bc8:	c3                   	ret
    5bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005bd0 <frame_dummy>:
    5bd0:	f3 0f 1e fa          	endbr64
    5bd4:	e9 77 ff ff ff       	jmp    5b50 <register_tm_clones>

0000000000005bd9 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

int protected_main() {
    5bd9:	55                   	push   %rbp
    5bda:	48 89 e5             	mov    %rsp,%rbp
    5bdd:	53                   	push   %rbx
    5bde:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
  VulkanApp app;
    5be5:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    5bec:	48 89 c7             	mov    %rax,%rdi
    5bef:	e8 72 de 00 00       	call   13a66 <_ZN9VulkanAppC1Ev>
  app.run();
    5bf4:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    5bfb:	48 89 c7             	mov    %rax,%rdi
    5bfe:	e8 f9 e5 00 00       	call   141fc <_ZN9VulkanApp3runEv>
  app.writeInfo(vkh::absoluteDirectory + "/info.log");
    5c03:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c07:	48 8d 15 2e da 01 00 	lea    0x1da2e(%rip),%rdx        # 2363c <_ZN9__gnu_cxxL21__default_lock_policyE+0x4>
    5c0e:	48 8d 0d 8b 3a 03 00 	lea    0x33a8b(%rip),%rcx        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
    5c15:	48 89 ce             	mov    %rcx,%rsi
    5c18:	48 89 c7             	mov    %rax,%rdi
    5c1b:	e8 8e 05 00 00       	call   61ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
    5c20:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5c24:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    5c2b:	48 89 d6             	mov    %rdx,%rsi
    5c2e:	48 89 c7             	mov    %rax,%rdi
    5c31:	e8 10 e6 00 00       	call   14246 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    5c36:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c3a:	48 89 c7             	mov    %rax,%rdi
    5c3d:	e8 a6 fe ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  return EXIT_SUCCESS;
    5c42:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    5c47:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    5c4e:	48 89 c7             	mov    %rax,%rdi
    5c51:	e8 06 e2 00 00       	call   13e5c <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    5c56:	89 d8                	mov    %ebx,%eax
    5c58:	eb 2e                	jmp    5c88 <_Z14protected_mainv+0xaf>
  app.writeInfo(vkh::absoluteDirectory + "/info.log");
    5c5a:	48 89 c3             	mov    %rax,%rbx
    5c5d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c61:	48 89 c7             	mov    %rax,%rdi
    5c64:	e8 7f fe ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c69:	eb 03                	jmp    5c6e <_Z14protected_mainv+0x95>
}
    5c6b:	48 89 c3             	mov    %rax,%rbx
    5c6e:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    5c75:	48 89 c7             	mov    %rax,%rdi
    5c78:	e8 df e1 00 00       	call   13e5c <_ZN9VulkanAppD1Ev>
    5c7d:	48 89 d8             	mov    %rbx,%rax
    5c80:	48 89 c7             	mov    %rax,%rdi
    5c83:	e8 78 fd ff ff       	call   5a00 <_Unwind_Resume@plt>
    5c88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c8c:	c9                   	leave
    5c8d:	c3                   	ret

0000000000005c8e <main>:

int main() {
    5c8e:	55                   	push   %rbp
    5c8f:	48 89 e5             	mov    %rsp,%rbp
    5c92:	53                   	push   %rbx
    5c93:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    5c97:	e8 3d ff ff ff       	call   5bd9 <_Z14protected_mainv>
    5c9c:	e9 aa 00 00 00       	jmp    5d4b <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    5ca1:	b8 01 00 00 00       	mov    $0x1,%eax
    5ca6:	e9 a0 00 00 00       	jmp    5d4b <main+0xbd>
  } catch (const std::exception &e) {
    5cab:	48 83 fa 01          	cmp    $0x1,%rdx
    5caf:	75 49                	jne    5cfa <main+0x6c>
    5cb1:	48 89 c7             	mov    %rax,%rdi
    5cb4:	e8 e7 f4 ff ff       	call   51a0 <__cxa_begin_catch@plt>
    5cb9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    5cbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cc1:	48 8b 00             	mov    (%rax),%rax
    5cc4:	48 83 c0 10          	add    $0x10,%rax
    5cc8:	48 8b 10             	mov    (%rax),%rdx
    5ccb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ccf:	48 89 c7             	mov    %rax,%rdi
    5cd2:	ff d2                	call   *%rdx
    5cd4:	48 89 c6             	mov    %rax,%rsi
    5cd7:	48 8d 05 a2 38 03 00 	lea    0x338a2(%rip),%rax        # 39580 <_ZSt4cerr@GLIBCXX_3.4>
    5cde:	48 89 c7             	mov    %rax,%rdi
    5ce1:	e8 2a f8 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    5ce6:	be 0a 00 00 00       	mov    $0xa,%esi
    5ceb:	48 89 c7             	mov    %rax,%rdi
    5cee:	e8 6d f9 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    5cf3:	e8 68 fc ff ff       	call   5960 <__cxa_end_catch@plt>
    5cf8:	eb a7                	jmp    5ca1 <main+0x13>
    5cfa:	48 89 c7             	mov    %rax,%rdi
    5cfd:	e8 9e f4 ff ff       	call   51a0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    5d02:	48 8d 05 3d d9 01 00 	lea    0x1d93d(%rip),%rax        # 23646 <_ZN9__gnu_cxxL21__default_lock_policyE+0xe>
    5d09:	48 89 c6             	mov    %rax,%rsi
    5d0c:	48 8d 05 6d 38 03 00 	lea    0x3386d(%rip),%rax        # 39580 <_ZSt4cerr@GLIBCXX_3.4>
    5d13:	48 89 c7             	mov    %rax,%rdi
    5d16:	e8 f5 f7 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    5d1b:	e8 40 fc ff ff       	call   5960 <__cxa_end_catch@plt>
    5d20:	e9 7c ff ff ff       	jmp    5ca1 <main+0x13>
  } catch (...) {
    5d25:	48 89 c3             	mov    %rax,%rbx
    5d28:	e8 33 fc ff ff       	call   5960 <__cxa_end_catch@plt>
    5d2d:	48 89 d8             	mov    %rbx,%rax
    5d30:	48 89 c7             	mov    %rax,%rdi
    5d33:	e8 c8 fc ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
    5d38:	48 89 c3             	mov    %rax,%rbx
    5d3b:	e8 20 fc ff ff       	call   5960 <__cxa_end_catch@plt>
    5d40:	48 89 d8             	mov    %rbx,%rax
    5d43:	48 89 c7             	mov    %rax,%rdi
    5d46:	e8 b5 fc ff ff       	call   5a00 <_Unwind_Resume@plt>
    5d4b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d4f:	c9                   	leave
    5d50:	c3                   	ret

0000000000005d51 <_Z41__static_initialization_and_destruction_0ii>:
    5d51:	55                   	push   %rbp
    5d52:	48 89 e5             	mov    %rsp,%rbp
    5d55:	41 57                	push   %r15
    5d57:	41 56                	push   %r14
    5d59:	41 55                	push   %r13
    5d5b:	41 54                	push   %r12
    5d5d:	53                   	push   %rbx
    5d5e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    5d65:	89 bd 2c ff ff ff    	mov    %edi,-0xd4(%rbp)
    5d6b:	89 b5 28 ff ff ff    	mov    %esi,-0xd8(%rbp)
    5d71:	83 bd 2c ff ff ff 01 	cmpl   $0x1,-0xd4(%rbp)
    5d78:	0f 85 59 03 00 00    	jne    60d7 <_Z41__static_initialization_and_destruction_0ii+0x386>
    5d7e:	81 bd 28 ff ff ff ff 	cmpl   $0xffff,-0xd8(%rbp)
    5d85:	ff 00 00 
    5d88:	0f 85 49 03 00 00    	jne    60d7 <_Z41__static_initialization_and_destruction_0ii+0x386>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    5d8e:	48 8d 05 fc 38 03 00 	lea    0x338fc(%rip),%rax        # 39691 <_ZStL8__ioinit>
    5d95:	48 89 c7             	mov    %rax,%rdi
    5d98:	e8 e3 fa ff ff       	call   5880 <_ZNSt8ios_base4InitC1Ev@plt>
    5d9d:	48 8d 05 bc 37 03 00 	lea    0x337bc(%rip),%rax        # 39560 <__dso_handle>
    5da4:	48 89 c2             	mov    %rax,%rdx
    5da7:	48 8d 05 e3 38 03 00 	lea    0x338e3(%rip),%rax        # 39691 <_ZStL8__ioinit>
    5dae:	48 89 c6             	mov    %rax,%rsi
    5db1:	48 8b 05 28 32 03 00 	mov    0x33228(%rip),%rax        # 38fe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    5db8:	48 89 c7             	mov    %rax,%rdi
    5dbb:	e8 b0 f6 ff ff       	call   5470 <__cxa_atexit@plt>

#include <filesystem>

namespace vkh {

inline const std::string absoluteDirectory =
    5dc0:	48 8d 05 31 39 03 00 	lea    0x33931(%rip),%rax        # 396f8 <_ZGVN3vkh17absoluteDirectoryB5cxx11E>
    5dc7:	0f b6 00             	movzbl (%rax),%eax
    5dca:	84 c0                	test   %al,%al
    5dcc:	75 64                	jne    5e32 <_Z41__static_initialization_and_destruction_0ii+0xe1>
    5dce:	48 8d 05 23 39 03 00 	lea    0x33923(%rip),%rax        # 396f8 <_ZGVN3vkh17absoluteDirectoryB5cxx11E>
    5dd5:	c6 00 01             	movb   $0x1,(%rax)
    std::filesystem::current_path().string();
    5dd8:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    5ddf:	48 89 c7             	mov    %rax,%rdi
    5de2:	e8 e9 fa ff ff       	call   58d0 <_ZNSt10filesystem12current_pathB5cxx11Ev@plt>
inline const std::string absoluteDirectory =
    5de7:	48 8d 15 b2 38 03 00 	lea    0x338b2(%rip),%rdx        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
    5dee:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    5df5:	48 89 c6             	mov    %rax,%rsi
    5df8:	48 89 d7             	mov    %rdx,%rdi
    5dfb:	e8 48 03 00 00       	call   6148 <_ZNKSt10filesystem7__cxx114path6stringEv>
    std::filesystem::current_path().string();
    5e00:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    5e07:	48 89 c7             	mov    %rax,%rdi
    5e0a:	e8 0d 03 00 00       	call   611c <_ZNSt10filesystem7__cxx114pathD1Ev>
inline const std::string absoluteDirectory =
    5e0f:	48 8d 05 4a 37 03 00 	lea    0x3374a(%rip),%rax        # 39560 <__dso_handle>
    5e16:	48 89 c2             	mov    %rax,%rdx
    5e19:	48 8d 05 80 38 03 00 	lea    0x33880(%rip),%rax        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
    5e20:	48 89 c6             	mov    %rax,%rsi
    5e23:	48 8b 05 86 31 03 00 	mov    0x33186(%rip),%rax        # 38fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    5e2a:	48 89 c7             	mov    %rax,%rdi
    5e2d:	e8 3e f6 ff ff       	call   5470 <__cxa_atexit@plt>
#include <vector>
#include <vkh.hpp>

namespace shader {

inline const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
    5e32:	48 8d 05 c7 38 03 00 	lea    0x338c7(%rip),%rax        # 39700 <_ZGVN6shader16triangle_indicesE>
    5e39:	0f b6 00             	movzbl (%rax),%eax
    5e3c:	84 c0                	test   %al,%al
    5e3e:	0f 85 b9 00 00 00    	jne    5efd <_Z41__static_initialization_and_destruction_0ii+0x1ac>
    5e44:	48 8d 05 b5 38 03 00 	lea    0x338b5(%rip),%rax        # 39700 <_ZGVN6shader16triangle_indicesE>
    5e4b:	c6 00 01             	movb   $0x1,(%rax)
    5e4e:	66 c7 85 62 ff ff ff 	movw   $0x0,-0x9e(%rbp)
    5e55:	00 00 
    5e57:	66 c7 85 64 ff ff ff 	movw   $0x1,-0x9c(%rbp)
    5e5e:	01 00 
    5e60:	66 c7 85 66 ff ff ff 	movw   $0x2,-0x9a(%rbp)
    5e67:	02 00 
    5e69:	66 c7 85 68 ff ff ff 	movw   $0x2,-0x98(%rbp)
    5e70:	02 00 
    5e72:	66 c7 85 6a ff ff ff 	movw   $0x3,-0x96(%rbp)
    5e79:	03 00 
    5e7b:	66 c7 85 6c ff ff ff 	movw   $0x0,-0x94(%rbp)
    5e82:	00 00 
    5e84:	48 8d 85 62 ff ff ff 	lea    -0x9e(%rbp),%rax
    5e8b:	49 89 c6             	mov    %rax,%r14
    5e8e:	41 bf 06 00 00 00    	mov    $0x6,%r15d
    5e94:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    5e9b:	48 89 c7             	mov    %rax,%rdi
    5e9e:	e8 27 04 00 00       	call   62ca <_ZNSaItEC1Ev>
    5ea3:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    5eaa:	4c 89 f6             	mov    %r14,%rsi
    5ead:	4c 89 ff             	mov    %r15,%rdi
    5eb0:	4c 89 f1             	mov    %r14,%rcx
    5eb3:	4c 89 fb             	mov    %r15,%rbx
    5eb6:	48 89 da             	mov    %rbx,%rdx
    5eb9:	48 89 c1             	mov    %rax,%rcx
    5ebc:	48 8d 05 fd 37 03 00 	lea    0x337fd(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
    5ec3:	48 89 c7             	mov    %rax,%rdi
    5ec6:	e8 37 04 00 00       	call   6302 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
    5ecb:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    5ed2:	48 89 c7             	mov    %rax,%rdi
    5ed5:	e8 0c 04 00 00       	call   62e6 <_ZNSaItED1Ev>
    5eda:	48 8d 05 7f 36 03 00 	lea    0x3367f(%rip),%rax        # 39560 <__dso_handle>
    5ee1:	48 89 c2             	mov    %rax,%rdx
    5ee4:	48 8d 05 d5 37 03 00 	lea    0x337d5(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
    5eeb:	48 89 c6             	mov    %rax,%rsi
    5eee:	48 8d 05 31 15 00 00 	lea    0x1531(%rip),%rax        # 7426 <_ZNSt6vectorItSaItEED1Ev>
    5ef5:	48 89 c7             	mov    %rax,%rdi
    5ef8:	e8 73 f5 ff ff       	call   5470 <__cxa_atexit@plt>
inline const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
    5efd:	48 8d 05 04 38 03 00 	lea    0x33804(%rip),%rax        # 39708 <_ZGVN6shader19triangle_index_dataE>
    5f04:	0f b6 00             	movzbl (%rax),%eax
    5f07:	84 c0                	test   %al,%al
    5f09:	0f 85 c8 01 00 00    	jne    60d7 <_Z41__static_initialization_and_destruction_0ii+0x386>
    5f0f:	48 8d 05 f2 37 03 00 	lea    0x337f2(%rip),%rax        # 39708 <_ZGVN6shader19triangle_index_dataE>
    5f16:	c6 00 01             	movb   $0x1,(%rax)
    {{-0.5f, -0.5f}, {1.0f, 0.0f, 0.0f}},
    {{0.5f, -0.5f}, {0.0f, 1.0f, 0.0f}},
    {{0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}},
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
    5f19:	f3 0f 10 05 73 d7 01 	movss  0x1d773(%rip),%xmm0        # 23694 <_ZN9__gnu_cxxL21__default_lock_policyE+0x5c>
    5f20:	00 
    5f21:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
    5f28:	ff 
    5f29:	f3 0f 10 05 63 d7 01 	movss  0x1d763(%rip),%xmm0        # 23694 <_ZN9__gnu_cxxL21__default_lock_policyE+0x5c>
    5f30:	00 
    5f31:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
    5f38:	ff 
    5f39:	f3 0f 10 05 57 d7 01 	movss  0x1d757(%rip),%xmm0        # 23698 <_ZN9__gnu_cxxL21__default_lock_policyE+0x60>
    5f40:	00 
    5f41:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
    5f48:	ff 
    5f49:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f4d:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
    5f54:	ff 
    5f55:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f59:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    5f5e:	f3 0f 10 05 36 d7 01 	movss  0x1d736(%rip),%xmm0        # 2369c <_ZN9__gnu_cxxL21__default_lock_policyE+0x64>
    5f65:	00 
    5f66:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    5f6b:	f3 0f 10 05 21 d7 01 	movss  0x1d721(%rip),%xmm0        # 23694 <_ZN9__gnu_cxxL21__default_lock_policyE+0x5c>
    5f72:	00 
    5f73:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    5f78:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f7c:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
    5f81:	f3 0f 10 05 0f d7 01 	movss  0x1d70f(%rip),%xmm0        # 23698 <_ZN9__gnu_cxxL21__default_lock_policyE+0x60>
    5f88:	00 
    5f89:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
    5f8e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5f92:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
    5f97:	f3 0f 10 05 fd d6 01 	movss  0x1d6fd(%rip),%xmm0        # 2369c <_ZN9__gnu_cxxL21__default_lock_policyE+0x64>
    5f9e:	00 
    5f9f:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
    5fa4:	f3 0f 10 05 f0 d6 01 	movss  0x1d6f0(%rip),%xmm0        # 2369c <_ZN9__gnu_cxxL21__default_lock_policyE+0x64>
    5fab:	00 
    5fac:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
    5fb1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5fb5:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    5fba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5fbe:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    5fc3:	f3 0f 10 05 cd d6 01 	movss  0x1d6cd(%rip),%xmm0        # 23698 <_ZN9__gnu_cxxL21__default_lock_policyE+0x60>
    5fca:	00 
    5fcb:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    5fd0:	f3 0f 10 05 bc d6 01 	movss  0x1d6bc(%rip),%xmm0        # 23694 <_ZN9__gnu_cxxL21__default_lock_policyE+0x5c>
    5fd7:	00 
    5fd8:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    5fdd:	f3 0f 10 05 b7 d6 01 	movss  0x1d6b7(%rip),%xmm0        # 2369c <_ZN9__gnu_cxxL21__default_lock_policyE+0x64>
    5fe4:	00 
    5fe5:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    5fea:	f3 0f 10 05 a6 d6 01 	movss  0x1d6a6(%rip),%xmm0        # 23698 <_ZN9__gnu_cxxL21__default_lock_policyE+0x60>
    5ff1:	00 
    5ff2:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    5ff7:	f3 0f 10 05 99 d6 01 	movss  0x1d699(%rip),%xmm0        # 23698 <_ZN9__gnu_cxxL21__default_lock_policyE+0x60>
    5ffe:	00 
    5fff:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    6004:	f3 0f 10 05 8c d6 01 	movss  0x1d68c(%rip),%xmm0        # 23698 <_ZN9__gnu_cxxL21__default_lock_policyE+0x60>
    600b:	00 
    600c:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    6011:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    6018:	49 89 c4             	mov    %rax,%r12
    601b:	41 bd 04 00 00 00    	mov    $0x4,%r13d
    6021:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6025:	48 89 c7             	mov    %rax,%rdi
    6028:	e8 5d 03 00 00       	call   638a <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
    602d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6031:	4c 89 e6             	mov    %r12,%rsi
    6034:	4c 89 ef             	mov    %r13,%rdi
    6037:	4c 89 e1             	mov    %r12,%rcx
    603a:	4c 89 eb             	mov    %r13,%rbx
    603d:	48 89 da             	mov    %rbx,%rdx
    6040:	48 89 c1             	mov    %rax,%rcx
    6043:	48 8d 05 96 36 03 00 	lea    0x33696(%rip),%rax        # 396e0 <_ZN6shader19triangle_index_dataE>
    604a:	48 89 c7             	mov    %rax,%rdi
    604d:	e8 70 03 00 00       	call   63c2 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
    6052:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6056:	48 89 c7             	mov    %rax,%rdi
    6059:	e8 48 03 00 00       	call   63a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
inline const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
    605e:	48 8d 05 fb 34 03 00 	lea    0x334fb(%rip),%rax        # 39560 <__dso_handle>
    6065:	48 89 c2             	mov    %rax,%rdx
    6068:	48 8d 05 71 36 03 00 	lea    0x33671(%rip),%rax        # 396e0 <_ZN6shader19triangle_index_dataE>
    606f:	48 89 c6             	mov    %rax,%rsi
    6072:	48 8d 05 f1 13 00 00 	lea    0x13f1(%rip),%rax        # 746a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    6079:	48 89 c7             	mov    %rax,%rdi
    607c:	e8 ef f3 ff ff       	call   5470 <__cxa_atexit@plt>
    6081:	eb 54                	jmp    60d7 <_Z41__static_initialization_and_destruction_0ii+0x386>
    std::filesystem::current_path().string();
    6083:	48 89 c3             	mov    %rax,%rbx
    6086:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    608d:	48 89 c7             	mov    %rax,%rdi
    6090:	e8 87 00 00 00       	call   611c <_ZNSt10filesystem7__cxx114pathD1Ev>
    6095:	48 89 d8             	mov    %rbx,%rax
    6098:	48 89 c7             	mov    %rax,%rdi
    609b:	e8 60 f9 ff ff       	call   5a00 <_Unwind_Resume@plt>
inline const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
    60a0:	48 89 c3             	mov    %rax,%rbx
    60a3:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    60aa:	48 89 c7             	mov    %rax,%rdi
    60ad:	e8 34 02 00 00       	call   62e6 <_ZNSaItED1Ev>
    60b2:	48 89 d8             	mov    %rbx,%rax
    60b5:	48 89 c7             	mov    %rax,%rdi
    60b8:	e8 43 f9 ff ff       	call   5a00 <_Unwind_Resume@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
    60bd:	48 89 c3             	mov    %rax,%rbx
    60c0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    60c4:	48 89 c7             	mov    %rax,%rdi
    60c7:	e8 da 02 00 00       	call   63a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    60cc:	48 89 d8             	mov    %rbx,%rax
    60cf:	48 89 c7             	mov    %rax,%rdi
    60d2:	e8 29 f9 ff ff       	call   5a00 <_Unwind_Resume@plt>
    60d7:	90                   	nop
    60d8:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    60df:	5b                   	pop    %rbx
    60e0:	41 5c                	pop    %r12
    60e2:	41 5d                	pop    %r13
    60e4:	41 5e                	pop    %r14
    60e6:	41 5f                	pop    %r15
    60e8:	5d                   	pop    %rbp
    60e9:	c3                   	ret

00000000000060ea <_GLOBAL__sub_I__Z14protected_mainv>:
    60ea:	55                   	push   %rbp
    60eb:	48 89 e5             	mov    %rsp,%rbp
    60ee:	be ff ff 00 00       	mov    $0xffff,%esi
    60f3:	bf 01 00 00 00       	mov    $0x1,%edi
    60f8:	e8 54 fc ff ff       	call   5d51 <_Z41__static_initialization_and_destruction_0ii>
    60fd:	5d                   	pop    %rbp
    60fe:	c3                   	ret
    60ff:	90                   	nop

0000000000006100 <_ZNSt10filesystem7__cxx114path5_ListD1Ev>:
      _List();
      _List(const _List&);
      _List(_List&&) = default;
      _List& operator=(const _List&);
      _List& operator=(_List&&) = default;
      ~_List() = default;
    6100:	55                   	push   %rbp
    6101:	48 89 e5             	mov    %rsp,%rbp
    6104:	48 83 ec 10          	sub    $0x10,%rsp
    6108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    610c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6110:	48 89 c7             	mov    %rax,%rdi
    6113:	e8 f8 00 00 00       	call   6210 <_ZNSt10unique_ptrINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEED1Ev>
    6118:	90                   	nop
    6119:	c9                   	leave
    611a:	c3                   	ret
    611b:	90                   	nop

000000000000611c <_ZNSt10filesystem7__cxx114pathD1Ev>:
    ~path() = default;
    611c:	55                   	push   %rbp
    611d:	48 89 e5             	mov    %rsp,%rbp
    6120:	48 83 ec 10          	sub    $0x10,%rsp
    6124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    612c:	48 83 c0 20          	add    $0x20,%rax
    6130:	48 89 c7             	mov    %rax,%rdi
    6133:	e8 c8 ff ff ff       	call   6100 <_ZNSt10filesystem7__cxx114path5_ListD1Ev>
    6138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    613c:	48 89 c7             	mov    %rax,%rdi
    613f:	e8 a4 f9 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6144:	90                   	nop
    6145:	c9                   	leave
    6146:	c3                   	ret
    6147:	90                   	nop

0000000000006148 <_ZNKSt10filesystem7__cxx114path6stringEv>:
      else
	return _S_str_convert<_CharT, _Traits>(_M_pathname, __a);
    }

  inline std::string
  path::string() const { return string<char>(); }
    6148:	55                   	push   %rbp
    6149:	48 89 e5             	mov    %rsp,%rbp
    614c:	53                   	push   %rbx
    614d:	48 83 ec 28          	sub    $0x28,%rsp
    6151:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6155:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6159:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    615d:	48 89 c7             	mov    %rax,%rdi
    6160:	e8 ab f8 ff ff       	call   5a10 <_ZNSaIcEC1Ev@plt>
    6165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6169:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    616d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6171:	48 89 ce             	mov    %rcx,%rsi
    6174:	48 89 c7             	mov    %rax,%rdi
    6177:	e8 f8 00 00 00       	call   6274 <_ZNKSt10filesystem7__cxx114path6stringIcSt11char_traitsIcESaIcEEENSt7__cxx1112basic_stringIT_T0_T1_EERKSA_>
    617c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6180:	48 89 c7             	mov    %rax,%rdi
    6183:	e8 48 f4 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    6188:	eb 1a                	jmp    61a4 <_ZNKSt10filesystem7__cxx114path6stringEv+0x5c>
    618a:	48 89 c3             	mov    %rax,%rbx
    618d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6191:	48 89 c7             	mov    %rax,%rdi
    6194:	e8 37 f4 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    6199:	48 89 d8             	mov    %rbx,%rax
    619c:	48 89 c7             	mov    %rax,%rdi
    619f:	e8 5c f8 ff ff       	call   5a00 <_Unwind_Resume@plt>
    61a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61ac:	c9                   	leave
    61ad:	c3                   	ret

00000000000061ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>:
   *  @return  New string with @a __lhs followed by @a __rhs.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    61ae:	55                   	push   %rbp
    61af:	48 89 e5             	mov    %rsp,%rbp
    61b2:	53                   	push   %rbx
    61b3:	48 83 ec 28          	sub    $0x28,%rsp
    61b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      const _CharT* __rhs)
    {
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
    61c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    61c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61cb:	48 89 d6             	mov    %rdx,%rsi
    61ce:	48 89 c7             	mov    %rax,%rdi
    61d1:	e8 0a f0 ff ff       	call   51e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt>
      __str.append(__rhs);
    61d6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61de:	48 89 d6             	mov    %rdx,%rsi
    61e1:	48 89 c7             	mov    %rax,%rdi
    61e4:	e8 c7 f8 ff ff       	call   5ab0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@plt>
      return __str;
    61e9:	eb 1a                	jmp    6205 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_+0x57>
    }
    61eb:	48 89 c3             	mov    %rax,%rbx
    61ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61f2:	48 89 c7             	mov    %rax,%rdi
    61f5:	e8 ee f8 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    61fa:	48 89 d8             	mov    %rbx,%rax
    61fd:	48 89 c7             	mov    %rax,%rdi
    6200:	e8 fb f7 ff ff       	call   5a00 <_Unwind_Resume@plt>
    6205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6209:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    620d:	c9                   	leave
    620e:	c3                   	ret
    620f:	90                   	nop

0000000000006210 <_ZNSt10unique_ptrINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEED1Ev>:

      /// Destructor, invokes the deleter if the stored pointer is not null.
#if __cplusplus > 202002L && __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~unique_ptr() noexcept
    6210:	55                   	push   %rbp
    6211:	48 89 e5             	mov    %rsp,%rbp
    6214:	53                   	push   %rbx
    6215:	48 83 ec 28          	sub    $0x28,%rsp
    6219:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	auto& __ptr = _M_t._M_ptr();
    621d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6221:	48 89 c7             	mov    %rax,%rdi
    6224:	e8 21 02 00 00       	call   644a <_ZNSt15__uniq_ptr_implINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEE6_M_ptrEv>
    6229:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    622d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6231:	48 8b 00             	mov    (%rax),%rax
    6234:	48 85 c0             	test   %rax,%rax
    6237:	74 29                	je     6262 <_ZNSt10unique_ptrINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    6239:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    623d:	48 89 c7             	mov    %rax,%rdi
    6240:	e8 1f 02 00 00       	call   6464 <_ZNSt10unique_ptrINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEE11get_deleterEv>
    6245:	48 89 c3             	mov    %rax,%rbx
    6248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    624c:	48 89 c7             	mov    %rax,%rdi
    624f:	e8 2a 02 00 00       	call   647e <_ZSt4moveIRPNSt10filesystem7__cxx114path5_List5_ImplEEONSt16remove_referenceIT_E4typeEOS8_>
    6254:	48 8b 00             	mov    (%rax),%rax
    6257:	48 89 c6             	mov    %rax,%rsi
    625a:	48 89 df             	mov    %rbx,%rdi
    625d:	e8 ae ee ff ff       	call   5110 <_ZNKSt10filesystem7__cxx114path5_List13_Impl_deleterclEPNS2_5_ImplE@plt>
	__ptr = pointer();
    6262:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6266:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    626d:	90                   	nop
    626e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6272:	c9                   	leave
    6273:	c3                   	ret

0000000000006274 <_ZNKSt10filesystem7__cxx114path6stringIcSt11char_traitsIcESaIcEEENSt7__cxx1112basic_stringIT_T0_T1_EERKSA_>:
    path::string(const _Allocator& __a) const
    6274:	55                   	push   %rbp
    6275:	48 89 e5             	mov    %rsp,%rbp
    6278:	53                   	push   %rbx
    6279:	48 83 ec 28          	sub    $0x28,%rsp
    627d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6281:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6285:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	return { _M_pathname.c_str(), _M_pathname.length(), __a };
    6289:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    628d:	48 89 c7             	mov    %rax,%rdi
    6290:	e8 2b ef ff ff       	call   51c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    6295:	48 89 c3             	mov    %rax,%rbx
    6298:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    629c:	48 89 c7             	mov    %rax,%rdi
    629f:	e8 cc f5 ff ff       	call   5870 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@plt>
    62a4:	48 89 c6             	mov    %rax,%rsi
    62a7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    62ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62af:	48 89 d1             	mov    %rdx,%rcx
    62b2:	48 89 f2             	mov    %rsi,%rdx
    62b5:	48 89 de             	mov    %rbx,%rsi
    62b8:	48 89 c7             	mov    %rax,%rdi
    62bb:	e8 80 f3 ff ff       	call   5640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcmRKS3_@plt>
    }
    62c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    62c8:	c9                   	leave
    62c9:	c3                   	ret

00000000000062ca <_ZNSaItEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    62ca:	55                   	push   %rbp
    62cb:	48 89 e5             	mov    %rsp,%rbp
    62ce:	48 83 ec 10          	sub    $0x10,%rsp
    62d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62da:	48 89 c7             	mov    %rax,%rdi
    62dd:	e8 c4 01 00 00       	call   64a6 <_ZNSt15__new_allocatorItEC1Ev>
    62e2:	90                   	nop
    62e3:	c9                   	leave
    62e4:	c3                   	ret
    62e5:	90                   	nop

00000000000062e6 <_ZNSaItED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    62e6:	55                   	push   %rbp
    62e7:	48 89 e5             	mov    %rsp,%rbp
    62ea:	48 83 ec 10          	sub    $0x10,%rsp
    62ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f6:	48 89 c7             	mov    %rax,%rdi
    62f9:	e8 b4 01 00 00       	call   64b2 <_ZNSt15__new_allocatorItED1Ev>
    62fe:	90                   	nop
    62ff:	c9                   	leave
    6300:	c3                   	ret
    6301:	90                   	nop

0000000000006302 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    6302:	55                   	push   %rbp
    6303:	48 89 e5             	mov    %rsp,%rbp
    6306:	53                   	push   %rbx
    6307:	48 83 ec 38          	sub    $0x38,%rsp
    630b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    630f:	48 89 f0             	mov    %rsi,%rax
    6312:	48 89 d6             	mov    %rdx,%rsi
    6315:	48 89 f2             	mov    %rsi,%rdx
    6318:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    631c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    6320:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    6324:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6328:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    632c:	48 89 d6             	mov    %rdx,%rsi
    632f:	48 89 c7             	mov    %rax,%rdi
    6332:	e8 a3 01 00 00       	call   64da <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    6337:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    633b:	48 89 c7             	mov    %rax,%rdi
    633e:	e8 1b 02 00 00       	call   655e <_ZNKSt16initializer_listItE3endEv>
    6343:	48 89 c3             	mov    %rax,%rbx
    6346:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    634a:	48 89 c7             	mov    %rax,%rdi
    634d:	e8 fa 01 00 00       	call   654c <_ZNKSt16initializer_listItE5beginEv>
    6352:	48 89 c1             	mov    %rax,%rcx
    6355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6359:	48 89 da             	mov    %rbx,%rdx
    635c:	48 89 ce             	mov    %rcx,%rsi
    635f:	48 89 c7             	mov    %rax,%rdi
    6362:	e8 5d 02 00 00       	call   65c4 <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    6367:	eb 1a                	jmp    6383 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_+0x81>
    6369:	48 89 c3             	mov    %rax,%rbx
    636c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6370:	48 89 c7             	mov    %rax,%rdi
    6373:	e8 88 01 00 00       	call   6500 <_ZNSt12_Vector_baseItSaItEED1Ev>
    6378:	48 89 d8             	mov    %rbx,%rax
    637b:	48 89 c7             	mov    %rax,%rdi
    637e:	e8 7d f6 ff ff       	call   5a00 <_Unwind_Resume@plt>
    6383:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6387:	c9                   	leave
    6388:	c3                   	ret
    6389:	90                   	nop

000000000000638a <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    638a:	55                   	push   %rbp
    638b:	48 89 e5             	mov    %rsp,%rbp
    638e:	48 83 ec 10          	sub    $0x10,%rsp
    6392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    639a:	48 89 c7             	mov    %rax,%rdi
    639d:	e8 d0 02 00 00       	call   6672 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>
    63a2:	90                   	nop
    63a3:	c9                   	leave
    63a4:	c3                   	ret
    63a5:	90                   	nop

00000000000063a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    63a6:	55                   	push   %rbp
    63a7:	48 89 e5             	mov    %rsp,%rbp
    63aa:	48 83 ec 10          	sub    $0x10,%rsp
    63ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b6:	48 89 c7             	mov    %rax,%rdi
    63b9:	e8 c0 02 00 00       	call   667e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>
    63be:	90                   	nop
    63bf:	c9                   	leave
    63c0:	c3                   	ret
    63c1:	90                   	nop

00000000000063c2 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>:
      vector(initializer_list<value_type> __l,
    63c2:	55                   	push   %rbp
    63c3:	48 89 e5             	mov    %rsp,%rbp
    63c6:	53                   	push   %rbx
    63c7:	48 83 ec 38          	sub    $0x38,%rsp
    63cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    63cf:	48 89 f0             	mov    %rsi,%rax
    63d2:	48 89 d6             	mov    %rdx,%rsi
    63d5:	48 89 f2             	mov    %rsi,%rdx
    63d8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    63dc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    63e0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    63e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63e8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    63ec:	48 89 d6             	mov    %rdx,%rsi
    63ef:	48 89 c7             	mov    %rax,%rdi
    63f2:	e8 af 02 00 00       	call   66a6 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>
	_M_range_initialize(__l.begin(), __l.end(),
    63f7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    63fb:	48 89 c7             	mov    %rax,%rdi
    63fe:	e8 33 03 00 00       	call   6736 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>
    6403:	48 89 c3             	mov    %rax,%rbx
    6406:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    640a:	48 89 c7             	mov    %rax,%rdi
    640d:	e8 12 03 00 00       	call   6724 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    6412:	48 89 c1             	mov    %rax,%rcx
    6415:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6419:	48 89 da             	mov    %rbx,%rdx
    641c:	48 89 ce             	mov    %rcx,%rsi
    641f:	48 89 c7             	mov    %rax,%rdi
    6422:	e8 83 03 00 00       	call   67aa <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>
      }
    6427:	eb 1a                	jmp    6443 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_+0x81>
    6429:	48 89 c3             	mov    %rax,%rbx
    642c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6430:	48 89 c7             	mov    %rax,%rdi
    6433:	e8 94 02 00 00       	call   66cc <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    6438:	48 89 d8             	mov    %rbx,%rax
    643b:	48 89 c7             	mov    %rax,%rdi
    643e:	e8 bd f5 ff ff       	call   5a00 <_Unwind_Resume@plt>
    6443:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6447:	c9                   	leave
    6448:	c3                   	ret
    6449:	90                   	nop

000000000000644a <_ZNSt15__uniq_ptr_implINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    644a:	55                   	push   %rbp
    644b:	48 89 e5             	mov    %rsp,%rbp
    644e:	48 83 ec 10          	sub    $0x10,%rsp
    6452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    645a:	48 89 c7             	mov    %rax,%rdi
    645d:	e8 02 04 00 00       	call   6864 <_ZSt3getILm0EJPNSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    6462:	c9                   	leave
    6463:	c3                   	ret

0000000000006464 <_ZNSt10unique_ptrINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEE11get_deleterEv>:
      { return _M_t._M_ptr(); }

      /// Return a reference to the stored deleter.
      _GLIBCXX23_CONSTEXPR
      deleter_type&
      get_deleter() noexcept
    6464:	55                   	push   %rbp
    6465:	48 89 e5             	mov    %rsp,%rbp
    6468:	48 83 ec 10          	sub    $0x10,%rsp
    646c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6474:	48 89 c7             	mov    %rax,%rdi
    6477:	e8 10 00 00 00       	call   648c <_ZNSt15__uniq_ptr_implINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEE10_M_deleterEv>
    647c:	c9                   	leave
    647d:	c3                   	ret

000000000000647e <_ZSt4moveIRPNSt10filesystem7__cxx114path5_List5_ImplEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    647e:	55                   	push   %rbp
    647f:	48 89 e5             	mov    %rsp,%rbp
    6482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    648a:	5d                   	pop    %rbp
    648b:	c3                   	ret

000000000000648c <_ZNSt15__uniq_ptr_implINSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    648c:	55                   	push   %rbp
    648d:	48 89 e5             	mov    %rsp,%rbp
    6490:	48 83 ec 10          	sub    $0x10,%rsp
    6494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    649c:	48 89 c7             	mov    %rax,%rdi
    649f:	e8 da 03 00 00       	call   687e <_ZSt3getILm1EJPNSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    64a4:	c9                   	leave
    64a5:	c3                   	ret

00000000000064a6 <_ZNSt15__new_allocatorItEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    64a6:	55                   	push   %rbp
    64a7:	48 89 e5             	mov    %rsp,%rbp
    64aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ae:	90                   	nop
    64af:	5d                   	pop    %rbp
    64b0:	c3                   	ret
    64b1:	90                   	nop

00000000000064b2 <_ZNSt15__new_allocatorItED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    64b2:	55                   	push   %rbp
    64b3:	48 89 e5             	mov    %rsp,%rbp
    64b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ba:	90                   	nop
    64bb:	5d                   	pop    %rbp
    64bc:	c3                   	ret
    64bd:	90                   	nop

00000000000064be <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>:
      struct _Vector_impl
    64be:	55                   	push   %rbp
    64bf:	48 89 e5             	mov    %rsp,%rbp
    64c2:	48 83 ec 10          	sub    $0x10,%rsp
    64c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ce:	48 89 c7             	mov    %rax,%rdi
    64d1:	e8 10 fe ff ff       	call   62e6 <_ZNSaItED1Ev>
    64d6:	90                   	nop
    64d7:	c9                   	leave
    64d8:	c3                   	ret
    64d9:	90                   	nop

00000000000064da <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    64da:	55                   	push   %rbp
    64db:	48 89 e5             	mov    %rsp,%rbp
    64de:	48 83 ec 10          	sub    $0x10,%rsp
    64e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    64ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64f2:	48 89 d6             	mov    %rdx,%rsi
    64f5:	48 89 c7             	mov    %rax,%rdi
    64f8:	e8 9b 03 00 00       	call   6898 <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>
    64fd:	90                   	nop
    64fe:	c9                   	leave
    64ff:	c3                   	ret

0000000000006500 <_ZNSt12_Vector_baseItSaItEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6500:	55                   	push   %rbp
    6501:	48 89 e5             	mov    %rsp,%rbp
    6504:	48 83 ec 10          	sub    $0x10,%rsp
    6508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    650c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6510:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6518:	48 8b 00             	mov    (%rax),%rax
    651b:	48 29 c2             	sub    %rax,%rdx
    651e:	48 89 d0             	mov    %rdx,%rax
    6521:	48 d1 f8             	sar    %rax
	_M_deallocate(_M_impl._M_start,
    6524:	48 89 c2             	mov    %rax,%rdx
    6527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    652b:	48 8b 08             	mov    (%rax),%rcx
    652e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6532:	48 89 ce             	mov    %rcx,%rsi
    6535:	48 89 c7             	mov    %rax,%rdi
    6538:	e8 8d 03 00 00       	call   68ca <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>
      }
    653d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6541:	48 89 c7             	mov    %rax,%rdi
    6544:	e8 75 ff ff ff       	call   64be <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>
    6549:	90                   	nop
    654a:	c9                   	leave
    654b:	c3                   	ret

000000000000654c <_ZNKSt16initializer_listItE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    654c:	55                   	push   %rbp
    654d:	48 89 e5             	mov    %rsp,%rbp
    6550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6558:	48 8b 00             	mov    (%rax),%rax
    655b:	5d                   	pop    %rbp
    655c:	c3                   	ret
    655d:	90                   	nop

000000000000655e <_ZNKSt16initializer_listItE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    655e:	55                   	push   %rbp
    655f:	48 89 e5             	mov    %rsp,%rbp
    6562:	53                   	push   %rbx
    6563:	48 83 ec 18          	sub    $0x18,%rsp
    6567:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    656b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    656f:	48 89 c7             	mov    %rax,%rdi
    6572:	e8 d5 ff ff ff       	call   654c <_ZNKSt16initializer_listItE5beginEv>
    6577:	48 89 c3             	mov    %rax,%rbx
    657a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    657e:	48 89 c7             	mov    %rax,%rdi
    6581:	e8 7a 03 00 00       	call   6900 <_ZNKSt16initializer_listItE4sizeEv>
    6586:	48 01 c0             	add    %rax,%rax
    6589:	48 01 d8             	add    %rbx,%rax
    658c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6590:	c9                   	leave
    6591:	c3                   	ret

0000000000006592 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    6592:	55                   	push   %rbp
    6593:	48 89 e5             	mov    %rsp,%rbp
    6596:	48 83 ec 10          	sub    $0x10,%rsp
    659a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    659e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    65a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    65a6:	48 89 c7             	mov    %rax,%rdi
    65a9:	e8 64 03 00 00       	call   6912 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    65ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65b6:	48 89 d6             	mov    %rdx,%rsi
    65b9:	48 89 c7             	mov    %rax,%rdi
    65bc:	e8 5c 03 00 00       	call   691d <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    65c1:	c9                   	leave
    65c2:	c3                   	ret
    65c3:	90                   	nop

00000000000065c4 <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    65c4:	55                   	push   %rbp
    65c5:	48 89 e5             	mov    %rsp,%rbp
    65c8:	53                   	push   %rbx
    65c9:	48 83 ec 38          	sub    $0x38,%rsp
    65cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    65d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    65d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    65d9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    65dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    65e1:	48 89 d6             	mov    %rdx,%rsi
    65e4:	48 89 c7             	mov    %rax,%rdi
    65e7:	e8 a6 ff ff ff       	call   6592 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    65ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    65f0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    65f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65f8:	48 89 c7             	mov    %rax,%rdi
    65fb:	e8 96 03 00 00       	call   6996 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    6600:	48 89 c2             	mov    %rax,%rdx
    6603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6607:	48 89 d6             	mov    %rdx,%rsi
    660a:	48 89 c7             	mov    %rax,%rdi
    660d:	e8 24 03 00 00       	call   6936 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>
    6612:	48 89 c6             	mov    %rax,%rsi
    6615:	48 89 df             	mov    %rbx,%rdi
    6618:	e8 87 03 00 00       	call   69a4 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>
    661d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6621:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6628:	48 8b 00             	mov    (%rax),%rax
    662b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    662f:	48 01 d2             	add    %rdx,%rdx
    6632:	48 01 c2             	add    %rax,%rdx
    6635:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6639:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    663d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6641:	48 89 c7             	mov    %rax,%rdi
    6644:	e8 4d 03 00 00       	call   6996 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    6649:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    664c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6650:	48 8b 10             	mov    (%rax),%rdx
    6653:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6657:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    665b:	48 89 c7             	mov    %rax,%rdi
    665e:	e8 74 03 00 00       	call   69d7 <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    6663:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6667:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    666b:	90                   	nop
    666c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6670:	c9                   	leave
    6671:	c3                   	ret

0000000000006672 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6672:	55                   	push   %rbp
    6673:	48 89 e5             	mov    %rsp,%rbp
    6676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    667a:	90                   	nop
    667b:	5d                   	pop    %rbp
    667c:	c3                   	ret
    667d:	90                   	nop

000000000000667e <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    667e:	55                   	push   %rbp
    667f:	48 89 e5             	mov    %rsp,%rbp
    6682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6686:	90                   	nop
    6687:	5d                   	pop    %rbp
    6688:	c3                   	ret
    6689:	90                   	nop

000000000000668a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    668a:	55                   	push   %rbp
    668b:	48 89 e5             	mov    %rsp,%rbp
    668e:	48 83 ec 10          	sub    $0x10,%rsp
    6692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    669a:	48 89 c7             	mov    %rax,%rdi
    669d:	e8 04 fd ff ff       	call   63a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    66a2:	90                   	nop
    66a3:	c9                   	leave
    66a4:	c3                   	ret
    66a5:	90                   	nop

00000000000066a6 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ERKS5_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    66a6:	55                   	push   %rbp
    66a7:	48 89 e5             	mov    %rsp,%rbp
    66aa:	48 83 ec 10          	sub    $0x10,%rsp
    66ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    66b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66be:	48 89 d6             	mov    %rdx,%rsi
    66c1:	48 89 c7             	mov    %rax,%rdi
    66c4:	e8 3f 03 00 00       	call   6a08 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>
    66c9:	90                   	nop
    66ca:	c9                   	leave
    66cb:	c3                   	ret

00000000000066cc <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    66cc:	55                   	push   %rbp
    66cd:	48 89 e5             	mov    %rsp,%rbp
    66d0:	48 83 ec 10          	sub    $0x10,%rsp
    66d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    66d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    66e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e4:	48 8b 00             	mov    (%rax),%rax
    66e7:	48 29 c2             	sub    %rax,%rdx
    66ea:	48 c1 fa 02          	sar    $0x2,%rdx
    66ee:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    66f5:	cc cc cc 
    66f8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    66fc:	48 89 c2             	mov    %rax,%rdx
    66ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6703:	48 8b 08             	mov    (%rax),%rcx
    6706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    670a:	48 89 ce             	mov    %rcx,%rsi
    670d:	48 89 c7             	mov    %rax,%rdi
    6710:	e8 25 03 00 00       	call   6a3a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>
      }
    6715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6719:	48 89 c7             	mov    %rax,%rdi
    671c:	e8 69 ff ff ff       	call   668a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implD1Ev>
    6721:	90                   	nop
    6722:	c9                   	leave
    6723:	c3                   	ret

0000000000006724 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>:
      begin() const noexcept { return _M_array; }
    6724:	55                   	push   %rbp
    6725:	48 89 e5             	mov    %rsp,%rbp
    6728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    672c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6730:	48 8b 00             	mov    (%rax),%rax
    6733:	5d                   	pop    %rbp
    6734:	c3                   	ret
    6735:	90                   	nop

0000000000006736 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE3endEv>:
      end() const noexcept { return begin() + size(); }
    6736:	55                   	push   %rbp
    6737:	48 89 e5             	mov    %rsp,%rbp
    673a:	53                   	push   %rbx
    673b:	48 83 ec 18          	sub    $0x18,%rsp
    673f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6743:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6747:	48 89 c7             	mov    %rax,%rdi
    674a:	e8 d5 ff ff ff       	call   6724 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE5beginEv>
    674f:	48 89 c3             	mov    %rax,%rbx
    6752:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6756:	48 89 c7             	mov    %rax,%rdi
    6759:	e8 12 03 00 00       	call   6a70 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>
    675e:	48 89 c2             	mov    %rax,%rdx
    6761:	48 89 d0             	mov    %rdx,%rax
    6764:	48 c1 e0 02          	shl    $0x2,%rax
    6768:	48 01 d0             	add    %rdx,%rax
    676b:	48 c1 e0 02          	shl    $0x2,%rax
    676f:	48 01 d8             	add    %rbx,%rax
    6772:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6776:	c9                   	leave
    6777:	c3                   	ret

0000000000006778 <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>:
    distance(_InputIterator __first, _InputIterator __last)
    6778:	55                   	push   %rbp
    6779:	48 89 e5             	mov    %rsp,%rbp
    677c:	48 83 ec 10          	sub    $0x10,%rsp
    6780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    6788:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    678c:	48 89 c7             	mov    %rax,%rdi
    678f:	e8 ee 02 00 00       	call   6a82 <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>
      return std::__distance(__first, __last,
    6794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6798:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    679c:	48 89 d6             	mov    %rdx,%rsi
    679f:	48 89 c7             	mov    %rax,%rdi
    67a2:	e8 e6 02 00 00       	call   6a8d <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>
    }
    67a7:	c9                   	leave
    67a8:	c3                   	ret
    67a9:	90                   	nop

00000000000067aa <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_range_initializeIPKS4_EEvT_SA_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    67aa:	55                   	push   %rbp
    67ab:	48 89 e5             	mov    %rsp,%rbp
    67ae:	53                   	push   %rbx
    67af:	48 83 ec 38          	sub    $0x38,%rsp
    67b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    67b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    67bb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    67bf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    67c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    67c7:	48 89 d6             	mov    %rdx,%rsi
    67ca:	48 89 c7             	mov    %rax,%rdi
    67cd:	e8 a6 ff ff ff       	call   6778 <_ZSt8distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_>
    67d2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    67d6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    67da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67de:	48 89 c7             	mov    %rax,%rdi
    67e1:	e8 32 03 00 00       	call   6b18 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    67e6:	48 89 c2             	mov    %rax,%rdx
    67e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67ed:	48 89 d6             	mov    %rdx,%rsi
    67f0:	48 89 c7             	mov    %rax,%rdi
    67f3:	e8 c0 02 00 00       	call   6ab8 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>
    67f8:	48 89 c6             	mov    %rax,%rsi
    67fb:	48 89 df             	mov    %rbx,%rdi
    67fe:	e8 23 03 00 00       	call   6b26 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>
    6803:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6807:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    680a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    680e:	48 8b 08             	mov    (%rax),%rcx
    6811:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6815:	48 89 d0             	mov    %rdx,%rax
    6818:	48 c1 e0 02          	shl    $0x2,%rax
    681c:	48 01 d0             	add    %rdx,%rax
    681f:	48 c1 e0 02          	shl    $0x2,%rax
    6823:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6827:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    682b:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    682f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6833:	48 89 c7             	mov    %rax,%rdi
    6836:	e8 dd 02 00 00       	call   6b18 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    683b:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    683e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6842:	48 8b 10             	mov    (%rax),%rdx
    6845:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6849:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    684d:	48 89 c7             	mov    %rax,%rdi
    6850:	e8 04 03 00 00       	call   6b59 <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>
	  this->_M_impl._M_finish =
    6855:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6859:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    685d:	90                   	nop
    685e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6862:	c9                   	leave
    6863:	c3                   	ret

0000000000006864 <_ZSt3getILm0EJPNSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    __get_helper(const tuple<_Types...>&) = delete;

  /// Return a reference to the ith element of a tuple.
  template<size_t __i, typename... _Elements>
    constexpr __tuple_element_t<__i, tuple<_Elements...>>&
    get(tuple<_Elements...>& __t) noexcept
    6864:	55                   	push   %rbp
    6865:	48 89 e5             	mov    %rsp,%rbp
    6868:	48 83 ec 10          	sub    $0x10,%rsp
    686c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    6870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6874:	48 89 c7             	mov    %rax,%rdi
    6877:	e8 0e 03 00 00       	call   6b8a <_ZSt12__get_helperILm0EPNSt10filesystem7__cxx114path5_List5_ImplEJNS3_13_Impl_deleterEEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    687c:	c9                   	leave
    687d:	c3                   	ret

000000000000687e <_ZSt3getILm1EJPNSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    687e:	55                   	push   %rbp
    687f:	48 89 e5             	mov    %rsp,%rbp
    6882:	48 83 ec 10          	sub    $0x10,%rsp
    6886:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    688a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    688e:	48 89 c7             	mov    %rax,%rdi
    6891:	e8 0e 03 00 00       	call   6ba4 <_ZSt12__get_helperILm1ENSt10filesystem7__cxx114path5_List13_Impl_deleterEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    6896:	c9                   	leave
    6897:	c3                   	ret

0000000000006898 <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6898:	55                   	push   %rbp
    6899:	48 89 e5             	mov    %rsp,%rbp
    689c:	48 83 ec 10          	sub    $0x10,%rsp
    68a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    68a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b0:	48 89 d6             	mov    %rdx,%rsi
    68b3:	48 89 c7             	mov    %rax,%rdi
    68b6:	e8 03 03 00 00       	call   6bbe <_ZNSaItEC1ERKS_>
    68bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68bf:	48 89 c7             	mov    %rax,%rdi
    68c2:	e8 1d 03 00 00       	call   6be4 <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>
	{ }
    68c7:	90                   	nop
    68c8:	c9                   	leave
    68c9:	c3                   	ret

00000000000068ca <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>:
      _M_deallocate(pointer __p, size_t __n)
    68ca:	55                   	push   %rbp
    68cb:	48 89 e5             	mov    %rsp,%rbp
    68ce:	48 83 ec 20          	sub    $0x20,%rsp
    68d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    68de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    68e3:	74 17                	je     68fc <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    68e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68f1:	48 89 ce             	mov    %rcx,%rsi
    68f4:	48 89 c7             	mov    %rax,%rdi
    68f7:	e8 16 03 00 00       	call   6c12 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>
      }
    68fc:	90                   	nop
    68fd:	c9                   	leave
    68fe:	c3                   	ret
    68ff:	90                   	nop

0000000000006900 <_ZNKSt16initializer_listItE4sizeEv>:
      size() const noexcept { return _M_len; }
    6900:	55                   	push   %rbp
    6901:	48 89 e5             	mov    %rsp,%rbp
    6904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    690c:	48 8b 40 08          	mov    0x8(%rax),%rax
    6910:	5d                   	pop    %rbp
    6911:	c3                   	ret

0000000000006912 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    6912:	55                   	push   %rbp
    6913:	48 89 e5             	mov    %rsp,%rbp
    6916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    691a:	90                   	nop
    691b:	5d                   	pop    %rbp
    691c:	c3                   	ret

000000000000691d <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    691d:	55                   	push   %rbp
    691e:	48 89 e5             	mov    %rsp,%rbp
    6921:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6925:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    6929:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    692d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6931:	48 d1 f8             	sar    %rax
    }
    6934:	5d                   	pop    %rbp
    6935:	c3                   	ret

0000000000006936 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6936:	55                   	push   %rbp
    6937:	48 89 e5             	mov    %rsp,%rbp
    693a:	53                   	push   %rbx
    693b:	48 83 ec 28          	sub    $0x28,%rsp
    693f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6943:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6947:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    694b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    694f:	48 89 d6             	mov    %rdx,%rsi
    6952:	48 89 c7             	mov    %rax,%rdi
    6955:	e8 64 02 00 00       	call   6bbe <_ZNSaItEC1ERKS_>
    695a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    695e:	48 89 c7             	mov    %rax,%rdi
    6961:	e8 da 02 00 00       	call   6c40 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>
    6966:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    696a:	0f 92 c3             	setb   %bl
    696d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6971:	48 89 c7             	mov    %rax,%rdi
    6974:	e8 6d f9 ff ff       	call   62e6 <_ZNSaItED1Ev>
    6979:	84 db                	test   %bl,%bl
    697b:	74 0f                	je     698c <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    697d:	48 8d 05 dc cc 01 00 	lea    0x1ccdc(%rip),%rax        # 23660 <_ZN9__gnu_cxxL21__default_lock_policyE+0x28>
    6984:	48 89 c7             	mov    %rax,%rdi
    6987:	e8 c4 e8 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    698c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6990:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6994:	c9                   	leave
    6995:	c3                   	ret

0000000000006996 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6996:	55                   	push   %rbp
    6997:	48 89 e5             	mov    %rsp,%rbp
    699a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    699e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69a2:	5d                   	pop    %rbp
    69a3:	c3                   	ret

00000000000069a4 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    69a4:	55                   	push   %rbp
    69a5:	48 89 e5             	mov    %rsp,%rbp
    69a8:	48 83 ec 10          	sub    $0x10,%rsp
    69ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    69b4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    69b9:	74 15                	je     69d0 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x2c>
    69bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69c3:	48 89 d6             	mov    %rdx,%rsi
    69c6:	48 89 c7             	mov    %rax,%rdi
    69c9:	e8 b4 02 00 00       	call   6c82 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>
    69ce:	eb 05                	jmp    69d5 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x31>
    69d0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    69d5:	c9                   	leave
    69d6:	c3                   	ret

00000000000069d7 <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    69d7:	55                   	push   %rbp
    69d8:	48 89 e5             	mov    %rsp,%rbp
    69db:	48 83 ec 20          	sub    $0x20,%rsp
    69df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    69eb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    69ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69fb:	48 89 ce             	mov    %rcx,%rsi
    69fe:	48 89 c7             	mov    %rax,%rdi
    6a01:	e8 a6 02 00 00       	call   6cac <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>
    }
    6a06:	c9                   	leave
    6a07:	c3                   	ret

0000000000006a08 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE12_Vector_implC1ERKS5_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6a08:	55                   	push   %rbp
    6a09:	48 89 e5             	mov    %rsp,%rbp
    6a0c:	48 83 ec 10          	sub    $0x10,%rsp
    6a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6a18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a20:	48 89 d6             	mov    %rdx,%rsi
    6a23:	48 89 c7             	mov    %rax,%rdi
    6a26:	e8 b7 02 00 00       	call   6ce2 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    6a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a2f:	48 89 c7             	mov    %rax,%rdi
    6a32:	e8 d1 02 00 00       	call   6d08 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>
	{ }
    6a37:	90                   	nop
    6a38:	c9                   	leave
    6a39:	c3                   	ret

0000000000006a3a <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m>:
      _M_deallocate(pointer __p, size_t __n)
    6a3a:	55                   	push   %rbp
    6a3b:	48 89 e5             	mov    %rsp,%rbp
    6a3e:	48 83 ec 20          	sub    $0x20,%rsp
    6a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6a4e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6a53:	74 17                	je     6a6c <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE13_M_deallocateEPS4_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a61:	48 89 ce             	mov    %rcx,%rsi
    6a64:	48 89 c7             	mov    %rax,%rdi
    6a67:	e8 ca 02 00 00       	call   6d36 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>
      }
    6a6c:	90                   	nop
    6a6d:	c9                   	leave
    6a6e:	c3                   	ret
    6a6f:	90                   	nop

0000000000006a70 <_ZNKSt16initializer_listIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE4sizeEv>:
    6a70:	55                   	push   %rbp
    6a71:	48 89 e5             	mov    %rsp,%rbp
    6a74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7c:	48 8b 40 08          	mov    0x8(%rax),%rax
    6a80:	5d                   	pop    %rbp
    6a81:	c3                   	ret

0000000000006a82 <_ZSt19__iterator_categoryIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_>:
    __iterator_category(const _Iter&)
    6a82:	55                   	push   %rbp
    6a83:	48 89 e5             	mov    %rsp,%rbp
    6a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6a8a:	90                   	nop
    6a8b:	5d                   	pop    %rbp
    6a8c:	c3                   	ret

0000000000006a8d <_ZSt10__distanceIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEENSt15iterator_traitsIT_E15difference_typeES8_S8_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    6a8d:	55                   	push   %rbp
    6a8e:	48 89 e5             	mov    %rsp,%rbp
    6a91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a95:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    6a99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a9d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6aa1:	48 c1 f8 02          	sar    $0x2,%rax
    6aa5:	48 89 c2             	mov    %rax,%rdx
    6aa8:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    6aaf:	cc cc cc 
    6ab2:	48 0f af c2          	imul   %rdx,%rax
    }
    6ab6:	5d                   	pop    %rbp
    6ab7:	c3                   	ret

0000000000006ab8 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6ab8:	55                   	push   %rbp
    6ab9:	48 89 e5             	mov    %rsp,%rbp
    6abc:	53                   	push   %rbx
    6abd:	48 83 ec 28          	sub    $0x28,%rsp
    6ac1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ac5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6ac9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6acd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6ad1:	48 89 d6             	mov    %rdx,%rsi
    6ad4:	48 89 c7             	mov    %rax,%rdi
    6ad7:	e8 06 02 00 00       	call   6ce2 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>
    6adc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6ae0:	48 89 c7             	mov    %rax,%rdi
    6ae3:	e8 7c 02 00 00       	call   6d64 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>
    6ae8:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6aec:	0f 92 c3             	setb   %bl
    6aef:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6af3:	48 89 c7             	mov    %rax,%rdi
    6af6:	e8 ab f8 ff ff       	call   63a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
    6afb:	84 db                	test   %bl,%bl
    6afd:	74 0f                	je     6b0e <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_S_check_init_lenEmRKS5_+0x56>
	  __throw_length_error(
    6aff:	48 8d 05 5a cb 01 00 	lea    0x1cb5a(%rip),%rax        # 23660 <_ZN9__gnu_cxxL21__default_lock_policyE+0x28>
    6b06:	48 89 c7             	mov    %rax,%rdi
    6b09:	e8 42 e7 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6b0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6b12:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b16:	c9                   	leave
    6b17:	c3                   	ret

0000000000006b18 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6b18:	55                   	push   %rbp
    6b19:	48 89 e5             	mov    %rsp,%rbp
    6b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b24:	5d                   	pop    %rbp
    6b25:	c3                   	ret

0000000000006b26 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6b26:	55                   	push   %rbp
    6b27:	48 89 e5             	mov    %rsp,%rbp
    6b2a:	48 83 ec 10          	sub    $0x10,%rsp
    6b2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6b36:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6b3b:	74 15                	je     6b52 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x2c>
    6b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b45:	48 89 d6             	mov    %rdx,%rsi
    6b48:	48 89 c7             	mov    %rax,%rdi
    6b4b:	e8 56 02 00 00       	call   6da6 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>
    6b50:	eb 05                	jmp    6b57 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_allocateEm+0x31>
    6b52:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6b57:	c9                   	leave
    6b58:	c3                   	ret

0000000000006b59 <_ZSt22__uninitialized_copy_aIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_S4_ET0_T_S9_S8_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    6b59:	55                   	push   %rbp
    6b5a:	48 89 e5             	mov    %rsp,%rbp
    6b5d:	48 83 ec 20          	sub    $0x20,%rsp
    6b61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b69:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6b6d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    6b71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b75:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b7d:	48 89 ce             	mov    %rcx,%rsi
    6b80:	48 89 c7             	mov    %rax,%rdi
    6b83:	e8 48 02 00 00       	call   6dd0 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    }
    6b88:	c9                   	leave
    6b89:	c3                   	ret

0000000000006b8a <_ZSt12__get_helperILm0EPNSt10filesystem7__cxx114path5_List5_ImplEJNS3_13_Impl_deleterEEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    6b8a:	55                   	push   %rbp
    6b8b:	48 89 e5             	mov    %rsp,%rbp
    6b8e:	48 83 ec 10          	sub    $0x10,%rsp
    6b92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    6b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b9a:	48 89 c7             	mov    %rax,%rdi
    6b9d:	e8 63 02 00 00       	call   6e05 <_ZNSt11_Tuple_implILm0EJPNSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEEE7_M_headERS7_>
    6ba2:	c9                   	leave
    6ba3:	c3                   	ret

0000000000006ba4 <_ZSt12__get_helperILm1ENSt10filesystem7__cxx114path5_List13_Impl_deleterEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    6ba4:	55                   	push   %rbp
    6ba5:	48 89 e5             	mov    %rsp,%rbp
    6ba8:	48 83 ec 10          	sub    $0x10,%rsp
    6bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    6bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bb4:	48 89 c7             	mov    %rax,%rdi
    6bb7:	e8 63 02 00 00       	call   6e1f <_ZNSt11_Tuple_implILm1EJNSt10filesystem7__cxx114path5_List13_Impl_deleterEEE7_M_headERS5_>
    6bbc:	c9                   	leave
    6bbd:	c3                   	ret

0000000000006bbe <_ZNSaItEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6bbe:	55                   	push   %rbp
    6bbf:	48 89 e5             	mov    %rsp,%rbp
    6bc2:	48 83 ec 10          	sub    $0x10,%rsp
    6bc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6bce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bd6:	48 89 d6             	mov    %rdx,%rsi
    6bd9:	48 89 c7             	mov    %rax,%rdi
    6bdc:	e8 59 02 00 00       	call   6e3a <_ZNSt15__new_allocatorItEC1ERKS0_>
    6be1:	90                   	nop
    6be2:	c9                   	leave
    6be3:	c3                   	ret

0000000000006be4 <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6be4:	55                   	push   %rbp
    6be5:	48 89 e5             	mov    %rsp,%rbp
    6be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bf0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bfb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6c02:	00 
    6c03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c07:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6c0e:	00 
	{ }
    6c0f:	90                   	nop
    6c10:	5d                   	pop    %rbp
    6c11:	c3                   	ret

0000000000006c12 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6c12:	55                   	push   %rbp
    6c13:	48 89 e5             	mov    %rsp,%rbp
    6c16:	48 83 ec 20          	sub    $0x20,%rsp
    6c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6c26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c2a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c32:	48 89 ce             	mov    %rcx,%rsi
    6c35:	48 89 c7             	mov    %rax,%rdi
    6c38:	e8 0d 02 00 00       	call   6e4a <_ZNSt15__new_allocatorItE10deallocateEPtm>
    6c3d:	90                   	nop
    6c3e:	c9                   	leave
    6c3f:	c3                   	ret

0000000000006c40 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6c40:	55                   	push   %rbp
    6c41:	48 89 e5             	mov    %rsp,%rbp
    6c44:	48 83 ec 20          	sub    $0x20,%rsp
    6c48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    6c4c:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    6c53:	ff ff 3f 
    6c56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c5e:	48 89 c7             	mov    %rax,%rdi
    6c61:	e8 11 02 00 00       	call   6e77 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>
    6c66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6c6a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6c6e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6c72:	48 89 d6             	mov    %rdx,%rsi
    6c75:	48 89 c7             	mov    %rax,%rdi
    6c78:	e8 14 02 00 00       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    6c7d:	48 8b 00             	mov    (%rax),%rax
      }
    6c80:	c9                   	leave
    6c81:	c3                   	ret

0000000000006c82 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6c82:	55                   	push   %rbp
    6c83:	48 89 e5             	mov    %rsp,%rbp
    6c86:	48 83 ec 10          	sub    $0x10,%rsp
    6c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6c92:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c9a:	ba 00 00 00 00       	mov    $0x0,%edx
    6c9f:	48 89 ce             	mov    %rcx,%rsi
    6ca2:	48 89 c7             	mov    %rax,%rdi
    6ca5:	e8 12 02 00 00       	call   6ebc <_ZNSt15__new_allocatorItE8allocateEmPKv>
    6caa:	c9                   	leave
    6cab:	c3                   	ret

0000000000006cac <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    6cac:	55                   	push   %rbp
    6cad:	48 89 e5             	mov    %rsp,%rbp
    6cb0:	48 83 ec 30          	sub    $0x30,%rsp
    6cb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6cb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6cbc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6cc0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    6cc4:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    6cc8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6ccc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cd4:	48 89 ce             	mov    %rcx,%rsi
    6cd7:	48 89 c7             	mov    %rax,%rdi
    6cda:	e8 36 02 00 00       	call   6f15 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>
    }
    6cdf:	c9                   	leave
    6ce0:	c3                   	ret
    6ce1:	90                   	nop

0000000000006ce2 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1ERKS4_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6ce2:	55                   	push   %rbp
    6ce3:	48 89 e5             	mov    %rsp,%rbp
    6ce6:	48 83 ec 10          	sub    $0x10,%rsp
    6cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6cf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cfa:	48 89 d6             	mov    %rdx,%rsi
    6cfd:	48 89 c7             	mov    %rax,%rdi
    6d00:	e8 3d 02 00 00       	call   6f42 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>
    6d05:	90                   	nop
    6d06:	c9                   	leave
    6d07:	c3                   	ret

0000000000006d08 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6d08:	55                   	push   %rbp
    6d09:	48 89 e5             	mov    %rsp,%rbp
    6d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d14:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6d1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d1f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6d26:	00 
    6d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d2b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6d32:	00 
	{ }
    6d33:	90                   	nop
    6d34:	5d                   	pop    %rbp
    6d35:	c3                   	ret

0000000000006d36 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE10deallocateERS5_PS4_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6d36:	55                   	push   %rbp
    6d37:	48 89 e5             	mov    %rsp,%rbp
    6d3a:	48 83 ec 20          	sub    $0x20,%rsp
    6d3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6d4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6d4e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6d52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d56:	48 89 ce             	mov    %rcx,%rsi
    6d59:	48 89 c7             	mov    %rax,%rdi
    6d5c:	e8 f1 01 00 00       	call   6f52 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>
    6d61:	90                   	nop
    6d62:	c9                   	leave
    6d63:	c3                   	ret

0000000000006d64 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_S_max_sizeERKS5_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6d64:	55                   	push   %rbp
    6d65:	48 89 e5             	mov    %rsp,%rbp
    6d68:	48 83 ec 20          	sub    $0x20,%rsp
    6d6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6d70:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    6d77:	66 66 06 
    6d7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6d7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d82:	48 89 c7             	mov    %rax,%rdi
    6d85:	e8 02 02 00 00       	call   6f8c <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>
    6d8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6d8e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6d92:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6d96:	48 89 d6             	mov    %rdx,%rsi
    6d99:	48 89 c7             	mov    %rax,%rdi
    6d9c:	e8 f0 00 00 00       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    6da1:	48 8b 00             	mov    (%rax),%rax
      }
    6da4:	c9                   	leave
    6da5:	c3                   	ret

0000000000006da6 <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8allocateERS5_m>:
      allocate(allocator_type& __a, size_type __n)
    6da6:	55                   	push   %rbp
    6da7:	48 89 e5             	mov    %rsp,%rbp
    6daa:	48 83 ec 10          	sub    $0x10,%rsp
    6dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6db2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6db6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbe:	ba 00 00 00 00       	mov    $0x0,%edx
    6dc3:	48 89 ce             	mov    %rcx,%rsi
    6dc6:	48 89 c7             	mov    %rax,%rdi
    6dc9:	e8 d8 01 00 00       	call   6fa6 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>
    6dce:	c9                   	leave
    6dcf:	c3                   	ret

0000000000006dd0 <_ZSt18uninitialized_copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    6dd0:	55                   	push   %rbp
    6dd1:	48 89 e5             	mov    %rsp,%rbp
    6dd4:	48 83 ec 30          	sub    $0x30,%rsp
    6dd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6ddc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6de0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6de4:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    6de8:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    6dec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6df0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6df4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6df8:	48 89 ce             	mov    %rcx,%rsi
    6dfb:	48 89 c7             	mov    %rax,%rdi
    6dfe:	e8 0e 02 00 00       	call   7011 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>
    }
    6e03:	c9                   	leave
    6e04:	c3                   	ret

0000000000006e05 <_ZNSt11_Tuple_implILm0EJPNSt10filesystem7__cxx114path5_List5_ImplENS3_13_Impl_deleterEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    6e05:	55                   	push   %rbp
    6e06:	48 89 e5             	mov    %rsp,%rbp
    6e09:	48 83 ec 10          	sub    $0x10,%rsp
    6e0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e15:	48 89 c7             	mov    %rax,%rdi
    6e18:	e8 21 02 00 00       	call   703e <_ZNSt10_Head_baseILm0EPNSt10filesystem7__cxx114path5_List5_ImplELb0EE7_M_headERS6_>
    6e1d:	c9                   	leave
    6e1e:	c3                   	ret

0000000000006e1f <_ZNSt11_Tuple_implILm1EJNSt10filesystem7__cxx114path5_List13_Impl_deleterEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    6e1f:	55                   	push   %rbp
    6e20:	48 89 e5             	mov    %rsp,%rbp
    6e23:	48 83 ec 10          	sub    $0x10,%rsp
    6e27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e2f:	48 89 c7             	mov    %rax,%rdi
    6e32:	e8 15 02 00 00       	call   704c <_ZNSt10_Head_baseILm1ENSt10filesystem7__cxx114path5_List13_Impl_deleterELb1EE7_M_headERS5_>
    6e37:	c9                   	leave
    6e38:	c3                   	ret
    6e39:	90                   	nop

0000000000006e3a <_ZNSt15__new_allocatorItEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6e3a:	55                   	push   %rbp
    6e3b:	48 89 e5             	mov    %rsp,%rbp
    6e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e46:	90                   	nop
    6e47:	5d                   	pop    %rbp
    6e48:	c3                   	ret
    6e49:	90                   	nop

0000000000006e4a <_ZNSt15__new_allocatorItE10deallocateEPtm>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6e4a:	55                   	push   %rbp
    6e4b:	48 89 e5             	mov    %rsp,%rbp
    6e4e:	48 83 ec 20          	sub    $0x20,%rsp
    6e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6e5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e62:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6e66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6e6a:	48 89 d6             	mov    %rdx,%rsi
    6e6d:	48 89 c7             	mov    %rax,%rdi
    6e70:	e8 cb e6 ff ff       	call   5540 <_ZdlPvm@plt>
      }
    6e75:	c9                   	leave
    6e76:	c3                   	ret

0000000000006e77 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6e77:	55                   	push   %rbp
    6e78:	48 89 e5             	mov    %rsp,%rbp
    6e7b:	48 83 ec 10          	sub    $0x10,%rsp
    6e7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
    6e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e87:	48 89 c7             	mov    %rax,%rdi
    6e8a:	e8 cb 01 00 00       	call   705a <_ZNKSt15__new_allocatorItE8max_sizeEv>
#else
	return size_t(-1) / sizeof(value_type);
#endif
      }
    6e8f:	c9                   	leave
    6e90:	c3                   	ret

0000000000006e91 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    6e91:	55                   	push   %rbp
    6e92:	48 89 e5             	mov    %rsp,%rbp
    6e95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    6e9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ea1:	48 8b 10             	mov    (%rax),%rdx
    6ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ea8:	48 8b 00             	mov    (%rax),%rax
    6eab:	48 39 c2             	cmp    %rax,%rdx
    6eae:	73 06                	jae    6eb6 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    6eb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6eb4:	eb 04                	jmp    6eba <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    6eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    6eba:	5d                   	pop    %rbp
    6ebb:	c3                   	ret

0000000000006ebc <_ZNSt15__new_allocatorItE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6ebc:	55                   	push   %rbp
    6ebd:	48 89 e5             	mov    %rsp,%rbp
    6ec0:	48 83 ec 20          	sub    $0x20,%rsp
    6ec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ec8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ecc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ed4:	48 89 c7             	mov    %rax,%rdi
    6ed7:	e8 98 01 00 00       	call   7074 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    6edc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6ee0:	0f 92 c0             	setb   %al
    6ee3:	0f b6 c0             	movzbl %al,%eax
    6ee6:	48 85 c0             	test   %rax,%rax
    6ee9:	0f 95 c0             	setne  %al
    6eec:	84 c0                	test   %al,%al
    6eee:	74 13                	je     6f03 <_ZNSt15__new_allocatorItE8allocateEmPKv+0x47>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6ef0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ef4:	48 85 c0             	test   %rax,%rax
    6ef7:	79 05                	jns    6efe <_ZNSt15__new_allocatorItE8allocateEmPKv+0x42>
	      std::__throw_bad_array_new_length();
    6ef9:	e8 a2 e4 ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6efe:	e8 4d e2 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6f03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f07:	48 01 c0             	add    %rax,%rax
    6f0a:	48 89 c7             	mov    %rax,%rdi
    6f0d:	e8 0e e6 ff ff       	call   5520 <_Znwm@plt>
    6f12:	90                   	nop
      }
    6f13:	c9                   	leave
    6f14:	c3                   	ret

0000000000006f15 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    6f15:	55                   	push   %rbp
    6f16:	48 89 e5             	mov    %rsp,%rbp
    6f19:	48 83 ec 20          	sub    $0x20,%rsp
    6f1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    6f29:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f2d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f35:	48 89 ce             	mov    %rcx,%rsi
    6f38:	48 89 c7             	mov    %rax,%rdi
    6f3b:	e8 48 01 00 00       	call   7088 <_ZSt4copyIPKtPtET0_T_S4_S3_>
    6f40:	c9                   	leave
    6f41:	c3                   	ret

0000000000006f42 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEC1ERKS5_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6f42:	55                   	push   %rbp
    6f43:	48 89 e5             	mov    %rsp,%rbp
    6f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f4e:	90                   	nop
    6f4f:	5d                   	pop    %rbp
    6f50:	c3                   	ret
    6f51:	90                   	nop

0000000000006f52 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE10deallocateEPS4_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6f52:	55                   	push   %rbp
    6f53:	48 89 e5             	mov    %rsp,%rbp
    6f56:	48 83 ec 20          	sub    $0x20,%rsp
    6f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6f66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f6a:	48 89 d0             	mov    %rdx,%rax
    6f6d:	48 c1 e0 02          	shl    $0x2,%rax
    6f71:	48 01 d0             	add    %rdx,%rax
    6f74:	48 c1 e0 02          	shl    $0x2,%rax
    6f78:	48 89 c2             	mov    %rax,%rdx
    6f7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f7f:	48 89 d6             	mov    %rdx,%rsi
    6f82:	48 89 c7             	mov    %rax,%rdi
    6f85:	e8 b6 e5 ff ff       	call   5540 <_ZdlPvm@plt>
      }
    6f8a:	c9                   	leave
    6f8b:	c3                   	ret

0000000000006f8c <_ZNSt16allocator_traitsISaIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEE8max_sizeERKS5_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6f8c:	55                   	push   %rbp
    6f8d:	48 89 e5             	mov    %rsp,%rbp
    6f90:	48 83 ec 10          	sub    $0x10,%rsp
    6f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f9c:	48 89 c7             	mov    %rax,%rdi
    6f9f:	e8 30 01 00 00       	call   70d4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>
      }
    6fa4:	c9                   	leave
    6fa5:	c3                   	ret

0000000000006fa6 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6fa6:	55                   	push   %rbp
    6fa7:	48 89 e5             	mov    %rsp,%rbp
    6faa:	48 83 ec 20          	sub    $0x20,%rsp
    6fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6fb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fbe:	48 89 c7             	mov    %rax,%rdi
    6fc1:	e8 28 01 00 00       	call   70ee <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    6fc6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6fca:	0f 92 c0             	setb   %al
    6fcd:	0f b6 c0             	movzbl %al,%eax
    6fd0:	48 85 c0             	test   %rax,%rax
    6fd3:	0f 95 c0             	setne  %al
    6fd6:	84 c0                	test   %al,%al
    6fd8:	74 1a                	je     6ff4 <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6fda:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    6fe1:	cc cc 0c 
    6fe4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6fe8:	73 05                	jae    6fef <_ZNSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6fea:	e8 b1 e3 ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6fef:	e8 5c e1 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6ff4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ff8:	48 89 d0             	mov    %rdx,%rax
    6ffb:	48 c1 e0 02          	shl    $0x2,%rax
    6fff:	48 01 d0             	add    %rdx,%rax
    7002:	48 c1 e0 02          	shl    $0x2,%rax
    7006:	48 89 c7             	mov    %rax,%rdi
    7009:	e8 12 e5 ff ff       	call   5520 <_Znwm@plt>
    700e:	90                   	nop
      }
    700f:	c9                   	leave
    7010:	c3                   	ret

0000000000007011 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEPS6_EET0_T_SB_SA_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    7011:	55                   	push   %rbp
    7012:	48 89 e5             	mov    %rsp,%rbp
    7015:	48 83 ec 20          	sub    $0x20,%rsp
    7019:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    701d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7021:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    7025:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7029:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    702d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7031:	48 89 ce             	mov    %rcx,%rsi
    7034:	48 89 c7             	mov    %rax,%rdi
    7037:	e8 c6 00 00 00       	call   7102 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>
    703c:	c9                   	leave
    703d:	c3                   	ret

000000000000703e <_ZNSt10_Head_baseILm0EPNSt10filesystem7__cxx114path5_List5_ImplELb0EE7_M_headERS6_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    703e:	55                   	push   %rbp
    703f:	48 89 e5             	mov    %rsp,%rbp
    7042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    704a:	5d                   	pop    %rbp
    704b:	c3                   	ret

000000000000704c <_ZNSt10_Head_baseILm1ENSt10filesystem7__cxx114path5_List13_Impl_deleterELb1EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    704c:	55                   	push   %rbp
    704d:	48 89 e5             	mov    %rsp,%rbp
    7050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7058:	5d                   	pop    %rbp
    7059:	c3                   	ret

000000000000705a <_ZNKSt15__new_allocatorItE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    705a:	55                   	push   %rbp
    705b:	48 89 e5             	mov    %rsp,%rbp
    705e:	48 83 ec 10          	sub    $0x10,%rsp
    7062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    706a:	48 89 c7             	mov    %rax,%rdi
    706d:	e8 02 00 00 00       	call   7074 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    7072:	c9                   	leave
    7073:	c3                   	ret

0000000000007074 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7074:	55                   	push   %rbp
    7075:	48 89 e5             	mov    %rsp,%rbp
    7078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    707c:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    7083:	ff ff 3f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    7086:	5d                   	pop    %rbp
    7087:	c3                   	ret

0000000000007088 <_ZSt4copyIPKtPtET0_T_S4_S3_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    7088:	55                   	push   %rbp
    7089:	48 89 e5             	mov    %rsp,%rbp
    708c:	53                   	push   %rbx
    708d:	48 83 ec 28          	sub    $0x28,%rsp
    7091:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7095:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7099:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    709d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    70a1:	48 89 c7             	mov    %rax,%rdi
    70a4:	e8 a4 00 00 00       	call   714d <_ZSt12__miter_baseIPKtET_S2_>
    70a9:	48 89 c3             	mov    %rax,%rbx
    70ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70b0:	48 89 c7             	mov    %rax,%rdi
    70b3:	e8 95 00 00 00       	call   714d <_ZSt12__miter_baseIPKtET_S2_>
    70b8:	48 89 c1             	mov    %rax,%rcx
    70bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70bf:	48 89 c2             	mov    %rax,%rdx
    70c2:	48 89 de             	mov    %rbx,%rsi
    70c5:	48 89 cf             	mov    %rcx,%rdi
    70c8:	e8 8e 00 00 00       	call   715b <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>
    }
    70cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70d1:	c9                   	leave
    70d2:	c3                   	ret
    70d3:	90                   	nop

00000000000070d4 <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    70d4:	55                   	push   %rbp
    70d5:	48 89 e5             	mov    %rsp,%rbp
    70d8:	48 83 ec 10          	sub    $0x10,%rsp
    70dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    70e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70e4:	48 89 c7             	mov    %rax,%rdi
    70e7:	e8 02 00 00 00       	call   70ee <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>
    70ec:	c9                   	leave
    70ed:	c3                   	ret

00000000000070ee <_ZNKSt15__new_allocatorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    70ee:	55                   	push   %rbp
    70ef:	48 89 e5             	mov    %rsp,%rbp
    70f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    70f6:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    70fd:	66 66 06 
      }
    7100:	5d                   	pop    %rbp
    7101:	c3                   	ret

0000000000007102 <_ZSt4copyIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET0_T_S9_S8_>:
    copy(_II __first, _II __last, _OI __result)
    7102:	55                   	push   %rbp
    7103:	48 89 e5             	mov    %rsp,%rbp
    7106:	53                   	push   %rbx
    7107:	48 83 ec 28          	sub    $0x28,%rsp
    710b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    710f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7113:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    7117:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    711b:	48 89 c7             	mov    %rax,%rdi
    711e:	e8 a2 00 00 00       	call   71c5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    7123:	48 89 c3             	mov    %rax,%rbx
    7126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    712a:	48 89 c7             	mov    %rax,%rdi
    712d:	e8 93 00 00 00       	call   71c5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    7132:	48 89 c1             	mov    %rax,%rcx
    7135:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7139:	48 89 c2             	mov    %rax,%rdx
    713c:	48 89 de             	mov    %rbx,%rsi
    713f:	48 89 cf             	mov    %rcx,%rdi
    7142:	e8 8c 00 00 00       	call   71d3 <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    }
    7147:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    714b:	c9                   	leave
    714c:	c3                   	ret

000000000000714d <_ZSt12__miter_baseIPKtET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    714d:	55                   	push   %rbp
    714e:	48 89 e5             	mov    %rsp,%rbp
    7151:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7159:	5d                   	pop    %rbp
    715a:	c3                   	ret

000000000000715b <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    715b:	55                   	push   %rbp
    715c:	48 89 e5             	mov    %rsp,%rbp
    715f:	41 54                	push   %r12
    7161:	53                   	push   %rbx
    7162:	48 83 ec 20          	sub    $0x20,%rsp
    7166:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    716a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    716e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    7172:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7176:	48 89 c7             	mov    %rax,%rdi
    7179:	e8 cd 00 00 00       	call   724b <_ZSt12__niter_baseIPtET_S1_>
    717e:	49 89 c4             	mov    %rax,%r12
    7181:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7185:	48 89 c7             	mov    %rax,%rdi
    7188:	e8 b0 00 00 00       	call   723d <_ZSt12__niter_baseIPKtET_S2_>
    718d:	48 89 c3             	mov    %rax,%rbx
    7190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7194:	48 89 c7             	mov    %rax,%rdi
    7197:	e8 a1 00 00 00       	call   723d <_ZSt12__niter_baseIPKtET_S2_>
    719c:	4c 89 e2             	mov    %r12,%rdx
    719f:	48 89 de             	mov    %rbx,%rsi
    71a2:	48 89 c7             	mov    %rax,%rdi
    71a5:	e8 af 00 00 00       	call   7259 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>
    71aa:	48 89 c2             	mov    %rax,%rdx
    71ad:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    71b1:	48 89 d6             	mov    %rdx,%rsi
    71b4:	48 89 c7             	mov    %rax,%rdi
    71b7:	e8 ca 00 00 00       	call   7286 <_ZSt12__niter_wrapIPtET_RKS1_S1_>
    }
    71bc:	48 83 c4 20          	add    $0x20,%rsp
    71c0:	5b                   	pop    %rbx
    71c1:	41 5c                	pop    %r12
    71c3:	5d                   	pop    %rbp
    71c4:	c3                   	ret

00000000000071c5 <_ZSt12__miter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __miter_base(_Iterator __it)
    71c5:	55                   	push   %rbp
    71c6:	48 89 e5             	mov    %rsp,%rbp
    71c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    71cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d1:	5d                   	pop    %rbp
    71d2:	c3                   	ret

00000000000071d3 <_ZSt13__copy_move_aILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    71d3:	55                   	push   %rbp
    71d4:	48 89 e5             	mov    %rsp,%rbp
    71d7:	41 54                	push   %r12
    71d9:	53                   	push   %rbx
    71da:	48 83 ec 20          	sub    $0x20,%rsp
    71de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    71e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    71e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    71ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71ee:	48 89 c7             	mov    %rax,%rdi
    71f1:	e8 b0 00 00 00       	call   72a6 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>
    71f6:	49 89 c4             	mov    %rax,%r12
    71f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71fd:	48 89 c7             	mov    %rax,%rdi
    7200:	e8 93 00 00 00       	call   7298 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    7205:	48 89 c3             	mov    %rax,%rbx
    7208:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    720c:	48 89 c7             	mov    %rax,%rdi
    720f:	e8 84 00 00 00       	call   7298 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>
    7214:	4c 89 e2             	mov    %r12,%rdx
    7217:	48 89 de             	mov    %rbx,%rsi
    721a:	48 89 c7             	mov    %rax,%rdi
    721d:	e8 92 00 00 00       	call   72b4 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    7222:	48 89 c2             	mov    %rax,%rdx
    7225:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7229:	48 89 d6             	mov    %rdx,%rsi
    722c:	48 89 c7             	mov    %rax,%rdi
    722f:	e8 ad 00 00 00       	call   72e1 <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>
    }
    7234:	48 83 c4 20          	add    $0x20,%rsp
    7238:	5b                   	pop    %rbx
    7239:	41 5c                	pop    %r12
    723b:	5d                   	pop    %rbp
    723c:	c3                   	ret

000000000000723d <_ZSt12__niter_baseIPKtET_S2_>:
    __niter_base(_Iterator __it)
    723d:	55                   	push   %rbp
    723e:	48 89 e5             	mov    %rsp,%rbp
    7241:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7249:	5d                   	pop    %rbp
    724a:	c3                   	ret

000000000000724b <_ZSt12__niter_baseIPtET_S1_>:
    __niter_base(_Iterator __it)
    724b:	55                   	push   %rbp
    724c:	48 89 e5             	mov    %rsp,%rbp
    724f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7257:	5d                   	pop    %rbp
    7258:	c3                   	ret

0000000000007259 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    7259:	55                   	push   %rbp
    725a:	48 89 e5             	mov    %rsp,%rbp
    725d:	48 83 ec 20          	sub    $0x20,%rsp
    7261:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7265:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7269:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    726d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7271:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7279:	48 89 ce             	mov    %rcx,%rsi
    727c:	48 89 c7             	mov    %rax,%rdi
    727f:	e8 6f 00 00 00       	call   72f3 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>
    7284:	c9                   	leave
    7285:	c3                   	ret

0000000000007286 <_ZSt12__niter_wrapIPtET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    7286:	55                   	push   %rbp
    7287:	48 89 e5             	mov    %rsp,%rbp
    728a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    728e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    7292:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7296:	5d                   	pop    %rbp
    7297:	c3                   	ret

0000000000007298 <_ZSt12__niter_baseIPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S7_>:
    __niter_base(_Iterator __it)
    7298:	55                   	push   %rbp
    7299:	48 89 e5             	mov    %rsp,%rbp
    729c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    72a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72a4:	5d                   	pop    %rbp
    72a5:	c3                   	ret

00000000000072a6 <_ZSt12__niter_baseIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_S6_>:
    __niter_base(_Iterator __it)
    72a6:	55                   	push   %rbp
    72a7:	48 89 e5             	mov    %rsp,%rbp
    72aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    72ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72b2:	5d                   	pop    %rbp
    72b3:	c3                   	ret

00000000000072b4 <_ZSt14__copy_move_a1ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    72b4:	55                   	push   %rbp
    72b5:	48 89 e5             	mov    %rsp,%rbp
    72b8:	48 83 ec 20          	sub    $0x20,%rsp
    72bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    72c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    72d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72d4:	48 89 ce             	mov    %rcx,%rsi
    72d7:	48 89 c7             	mov    %rax,%rdi
    72da:	e8 41 00 00 00       	call   7320 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>
    72df:	c9                   	leave
    72e0:	c3                   	ret

00000000000072e1 <_ZSt12__niter_wrapIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEET_RKS6_S6_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    72e1:	55                   	push   %rbp
    72e2:	48 89 e5             	mov    %rsp,%rbp
    72e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    72ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72f1:	5d                   	pop    %rbp
    72f2:	c3                   	ret

00000000000072f3 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    72f3:	55                   	push   %rbp
    72f4:	48 89 e5             	mov    %rsp,%rbp
    72f7:	48 83 ec 20          	sub    $0x20,%rsp
    72fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7303:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    7307:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    730b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    730f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7313:	48 89 ce             	mov    %rcx,%rsi
    7316:	48 89 c7             	mov    %rax,%rdi
    7319:	e8 2f 00 00 00       	call   734d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>
    }
    731e:	c9                   	leave
    731f:	c3                   	ret

0000000000007320 <_ZSt14__copy_move_a2ILb0EPKN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEPS4_ET1_T0_S9_S8_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    7320:	55                   	push   %rbp
    7321:	48 89 e5             	mov    %rsp,%rbp
    7324:	48 83 ec 20          	sub    $0x20,%rsp
    7328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    732c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7330:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    7334:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7338:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    733c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7340:	48 89 ce             	mov    %rcx,%rsi
    7343:	48 89 c7             	mov    %rax,%rdi
    7346:	e8 58 00 00 00       	call   73a3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>
    }
    734b:	c9                   	leave
    734c:	c3                   	ret

000000000000734d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    734d:	55                   	push   %rbp
    734e:	48 89 e5             	mov    %rsp,%rbp
    7351:	48 83 ec 30          	sub    $0x30,%rsp
    7355:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7359:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    735d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    7361:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7365:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    7369:	48 d1 f8             	sar    %rax
    736c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    7370:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7375:	74 1b                	je     7392 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_+0x45>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    7377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    737b:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    737f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7383:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7387:	48 89 ce             	mov    %rcx,%rsi
    738a:	48 89 c7             	mov    %rax,%rdi
    738d:	e8 be e5 ff ff       	call   5950 <memmove@plt>
	  return __result + _Num;
    7392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7396:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    739a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    739e:	48 01 d0             	add    %rdx,%rax
	}
    73a1:	c9                   	leave
    73a2:	c3                   	ret

00000000000073a3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    73a3:	55                   	push   %rbp
    73a4:	48 89 e5             	mov    %rsp,%rbp
    73a7:	48 83 ec 30          	sub    $0x30,%rsp
    73ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    73af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    73b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    73b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73bb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    73bf:	48 c1 f8 02          	sar    $0x2,%rax
    73c3:	48 89 c2             	mov    %rax,%rdx
    73c6:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    73cd:	cc cc cc 
    73d0:	48 0f af c2          	imul   %rdx,%rax
    73d4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    73d8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    73dd:	74 28                	je     7407 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN3vkh6VertexILNS3_11PositionDimE0ELNS3_8ColorDimE0EEEEEPT_PKS8_SB_S9_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    73df:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    73e3:	48 89 d0             	mov    %rdx,%rax
    73e6:	48 c1 e0 02          	shl    $0x2,%rax
    73ea:	48 01 d0             	add    %rdx,%rax
    73ed:	48 c1 e0 02          	shl    $0x2,%rax
    73f1:	48 89 c2             	mov    %rax,%rdx
    73f4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    73f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73fc:	48 89 ce             	mov    %rcx,%rsi
    73ff:	48 89 c7             	mov    %rax,%rdi
    7402:	e8 49 e5 ff ff       	call   5950 <memmove@plt>
	  return __result + _Num;
    7407:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    740b:	48 89 d0             	mov    %rdx,%rax
    740e:	48 c1 e0 02          	shl    $0x2,%rax
    7412:	48 01 d0             	add    %rdx,%rax
    7415:	48 c1 e0 02          	shl    $0x2,%rax
    7419:	48 89 c2             	mov    %rax,%rdx
    741c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7420:	48 01 d0             	add    %rdx,%rax
	}
    7423:	c9                   	leave
    7424:	c3                   	ret
    7425:	90                   	nop

0000000000007426 <_ZNSt6vectorItSaItEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7426:	55                   	push   %rbp
    7427:	48 89 e5             	mov    %rsp,%rbp
    742a:	48 83 ec 10          	sub    $0x10,%rsp
    742e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7436:	48 89 c7             	mov    %rax,%rdi
    7439:	e8 58 f5 ff ff       	call   6996 <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    743e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7445:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    744d:	48 8b 00             	mov    (%rax),%rax
    7450:	48 89 ce             	mov    %rcx,%rsi
    7453:	48 89 c7             	mov    %rax,%rdi
    7456:	e8 53 00 00 00       	call   74ae <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>
      }
    745b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    745f:	48 89 c7             	mov    %rax,%rdi
    7462:	e8 99 f0 ff ff       	call   6500 <_ZNSt12_Vector_baseItSaItEED1Ev>
    7467:	90                   	nop
    7468:	c9                   	leave
    7469:	c3                   	ret

000000000000746a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    746a:	55                   	push   %rbp
    746b:	48 89 e5             	mov    %rsp,%rbp
    746e:	48 83 ec 10          	sub    $0x10,%rsp
    7472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    747a:	48 89 c7             	mov    %rax,%rdi
    747d:	e8 96 f6 ff ff       	call   6b18 <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE19_M_get_Tp_allocatorEv>
    7482:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7489:	48 8b 48 08          	mov    0x8(%rax),%rcx
    748d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7491:	48 8b 00             	mov    (%rax),%rax
    7494:	48 89 ce             	mov    %rcx,%rsi
    7497:	48 89 c7             	mov    %rax,%rdi
    749a:	e8 39 00 00 00       	call   74d8 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>
      }
    749f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74a3:	48 89 c7             	mov    %rax,%rdi
    74a6:	e8 21 f2 ff ff       	call   66cc <_ZNSt12_Vector_baseIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
    74ab:	90                   	nop
    74ac:	c9                   	leave
    74ad:	c3                   	ret

00000000000074ae <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    74ae:	55                   	push   %rbp
    74af:	48 89 e5             	mov    %rsp,%rbp
    74b2:	48 83 ec 20          	sub    $0x20,%rsp
    74b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    74be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    74c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    74c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74ca:	48 89 d6             	mov    %rdx,%rsi
    74cd:	48 89 c7             	mov    %rax,%rdi
    74d0:	e8 2d 00 00 00       	call   7502 <_ZSt8_DestroyIPtEvT_S1_>
    }
    74d5:	90                   	nop
    74d6:	c9                   	leave
    74d7:	c3                   	ret

00000000000074d8 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEES4_EvT_S6_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    74d8:	55                   	push   %rbp
    74d9:	48 89 e5             	mov    %rsp,%rbp
    74dc:	48 83 ec 20          	sub    $0x20,%rsp
    74e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    74e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    74ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    74f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74f4:	48 89 d6             	mov    %rdx,%rsi
    74f7:	48 89 c7             	mov    %rax,%rdi
    74fa:	e8 29 00 00 00       	call   7528 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>
    }
    74ff:	90                   	nop
    7500:	c9                   	leave
    7501:	c3                   	ret

0000000000007502 <_ZSt8_DestroyIPtEvT_S1_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7502:	55                   	push   %rbp
    7503:	48 89 e5             	mov    %rsp,%rbp
    7506:	48 83 ec 10          	sub    $0x10,%rsp
    750a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    750e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    7512:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    751a:	48 89 d6             	mov    %rdx,%rsi
    751d:	48 89 c7             	mov    %rax,%rdi
    7520:	e8 29 00 00 00       	call   754e <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>
    }
    7525:	90                   	nop
    7526:	c9                   	leave
    7527:	c3                   	ret

0000000000007528 <_ZSt8_DestroyIPN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEEEvT_S6_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7528:	55                   	push   %rbp
    7529:	48 89 e5             	mov    %rsp,%rbp
    752c:	48 83 ec 10          	sub    $0x10,%rsp
    7530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7534:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7538:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    753c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7540:	48 89 d6             	mov    %rdx,%rsi
    7543:	48 89 c7             	mov    %rax,%rdi
    7546:	e8 12 00 00 00       	call   755d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>
    }
    754b:	90                   	nop
    754c:	c9                   	leave
    754d:	c3                   	ret

000000000000754e <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    754e:	55                   	push   %rbp
    754f:	48 89 e5             	mov    %rsp,%rbp
    7552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7556:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    755a:	90                   	nop
    755b:	5d                   	pop    %rbp
    755c:	c3                   	ret

000000000000755d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN3vkh6VertexILNS2_11PositionDimE0ELNS2_8ColorDimE0EEEEEvT_S8_>:
    755d:	55                   	push   %rbp
    755e:	48 89 e5             	mov    %rsp,%rbp
    7561:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7565:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7569:	90                   	nop
    756a:	5d                   	pop    %rbp
    756b:	c3                   	ret

000000000000756c <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

VkCommandBuffer
allocateCommandBuffer(VkDevice device,
                      const VkCommandBufferAllocateInfo *pAllocateInfo) {
    756c:	55                   	push   %rbp
    756d:	48 89 e5             	mov    %rsp,%rbp
    7570:	41 54                	push   %r12
    7572:	53                   	push   %rbx
    7573:	48 83 ec 20          	sub    $0x20,%rsp
    7577:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    757b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (pAllocateInfo->commandBufferCount != 1) {
    757f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7583:	8b 40 1c             	mov    0x1c(%rax),%eax
    7586:	83 f8 01             	cmp    $0x1,%eax
    7589:	74 3b                	je     75c6 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0x5a>
    throw std::runtime_error(
        "VkCommandBufferAllocateInfo::commandBufferCount != 1, use "
        "{allocateCommandBuffers} instead.");
    758b:	bf 10 00 00 00       	mov    $0x10,%edi
    7590:	e8 8b dc ff ff       	call   5220 <__cxa_allocate_exception@plt>
    7595:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7598:	48 8d 05 31 c7 01 00 	lea    0x1c731(%rip),%rax        # 23cd0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    759f:	48 89 c6             	mov    %rax,%rsi
    75a2:	48 89 df             	mov    %rbx,%rdi
    75a5:	e8 c6 db ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
        "{allocateCommandBuffers} instead.");
    75aa:	48 8b 05 0f 1a 03 00 	mov    0x31a0f(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    75b1:	48 89 c2             	mov    %rax,%rdx
    75b4:	48 8d 05 85 17 03 00 	lea    0x31785(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    75bb:	48 89 c6             	mov    %rax,%rsi
    75be:	48 89 df             	mov    %rbx,%rdi
    75c1:	e8 ca e3 ff ff       	call   5990 <__cxa_throw@plt>
  }
  VkCommandBuffer commandBuffer;
  if (vkAllocateCommandBuffers(device, pAllocateInfo, &commandBuffer) !=
    75c6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    75ca:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    75ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75d2:	48 89 ce             	mov    %rcx,%rsi
    75d5:	48 89 c7             	mov    %rax,%rdi
    75d8:	e8 d3 de ff ff       	call   54b0 <vkAllocateCommandBuffers@plt>
    75dd:	85 c0                	test   %eax,%eax
    75df:	0f 95 c0             	setne  %al
    75e2:	84 c0                	test   %al,%al
    75e4:	74 3b                	je     7621 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    75e6:	bf 10 00 00 00       	mov    $0x10,%edi
    75eb:	e8 30 dc ff ff       	call   5220 <__cxa_allocate_exception@plt>
    75f0:	48 89 c3             	mov    %rax,%rbx
    75f3:	48 8d 05 36 c7 01 00 	lea    0x1c736(%rip),%rax        # 23d30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    75fa:	48 89 c6             	mov    %rax,%rsi
    75fd:	48 89 df             	mov    %rbx,%rdi
    7600:	e8 6b db ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    7605:	48 8b 05 b4 19 03 00 	mov    0x319b4(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    760c:	48 89 c2             	mov    %rax,%rdx
    760f:	48 8d 05 2a 17 03 00 	lea    0x3172a(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7616:	48 89 c6             	mov    %rax,%rsi
    7619:	48 89 df             	mov    %rbx,%rdi
    761c:	e8 6f e3 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return commandBuffer;
    7621:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7625:	eb 2c                	jmp    7653 <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xe7>
        "{allocateCommandBuffers} instead.");
    7627:	49 89 c4             	mov    %rax,%r12
    762a:	48 89 df             	mov    %rbx,%rdi
    762d:	e8 1e dd ff ff       	call   5350 <__cxa_free_exception@plt>
    7632:	4c 89 e0             	mov    %r12,%rax
    7635:	48 89 c7             	mov    %rax,%rdi
    7638:	e8 c3 e3 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    763d:	49 89 c4             	mov    %rax,%r12
    7640:	48 89 df             	mov    %rbx,%rdi
    7643:	e8 08 dd ff ff       	call   5350 <__cxa_free_exception@plt>
    7648:	4c 89 e0             	mov    %r12,%rax
    764b:	48 89 c7             	mov    %rax,%rdi
    764e:	e8 ad e3 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    7653:	48 83 c4 20          	add    $0x20,%rsp
    7657:	5b                   	pop    %rbx
    7658:	41 5c                	pop    %r12
    765a:	5d                   	pop    %rbp
    765b:	c3                   	ret

000000000000765c <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    765c:	55                   	push   %rbp
    765d:	48 89 e5             	mov    %rsp,%rbp
    7660:	41 54                	push   %r12
    7662:	53                   	push   %rbx
    7663:	48 83 ec 30          	sub    $0x30,%rsp
    7667:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    766b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    766f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    7673:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7677:	8b 40 1c             	mov    0x1c(%rax),%eax
    767a:	89 c3                	mov    %eax,%ebx
    767c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7680:	48 89 c7             	mov    %rax,%rdi
    7683:	e8 1c 02 00 00       	call   78a4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    7688:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    768c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7690:	48 89 de             	mov    %rbx,%rsi
    7693:	48 89 c7             	mov    %rax,%rdi
    7696:	e8 41 02 00 00       	call   78dc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    769b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    769f:	48 89 c7             	mov    %rax,%rdi
    76a2:	e8 19 02 00 00       	call   78c0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    76a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76ab:	48 89 c7             	mov    %rax,%rdi
    76ae:	e8 e3 02 00 00       	call   7996 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    76b3:	48 89 c2             	mov    %rax,%rdx
    76b6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    76ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76be:	48 89 ce             	mov    %rcx,%rsi
    76c1:	48 89 c7             	mov    %rax,%rdi
    76c4:	e8 e7 dd ff ff       	call   54b0 <vkAllocateCommandBuffers@plt>
    76c9:	85 c0                	test   %eax,%eax
    76cb:	0f 95 c0             	setne  %al
    76ce:	84 c0                	test   %al,%al
    76d0:	74 7f                	je     7751 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    76d2:	bf 10 00 00 00       	mov    $0x10,%edi
    76d7:	e8 44 db ff ff       	call   5220 <__cxa_allocate_exception@plt>
    76dc:	48 89 c3             	mov    %rax,%rbx
    76df:	48 8d 05 4a c6 01 00 	lea    0x1c64a(%rip),%rax        # 23d30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    76e6:	48 89 c6             	mov    %rax,%rsi
    76e9:	48 89 df             	mov    %rbx,%rdi
    76ec:	e8 7f da ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    76f1:	48 8b 05 c8 18 03 00 	mov    0x318c8(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    76f8:	48 89 c2             	mov    %rax,%rdx
    76fb:	48 8d 05 3e 16 03 00 	lea    0x3163e(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7702:	48 89 c6             	mov    %rax,%rsi
    7705:	48 89 df             	mov    %rbx,%rdi
    7708:	e8 83 e2 ff ff       	call   5990 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    770d:	48 89 c3             	mov    %rax,%rbx
    7710:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7714:	48 89 c7             	mov    %rax,%rdi
    7717:	e8 a4 01 00 00       	call   78c0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    771c:	48 89 d8             	mov    %rbx,%rax
    771f:	48 89 c7             	mov    %rax,%rdi
    7722:	e8 d9 e2 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    7727:	49 89 c4             	mov    %rax,%r12
    772a:	48 89 df             	mov    %rbx,%rdi
    772d:	e8 1e dc ff ff       	call   5350 <__cxa_free_exception@plt>
    7732:	4c 89 e3             	mov    %r12,%rbx
    7735:	eb 03                	jmp    773a <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    7737:	48 89 c3             	mov    %rax,%rbx
    773a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    773e:	48 89 c7             	mov    %rax,%rdi
    7741:	e8 0c 02 00 00       	call   7952 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    7746:	48 89 d8             	mov    %rbx,%rax
    7749:	48 89 c7             	mov    %rax,%rdi
    774c:	e8 af e2 ff ff       	call   5a00 <_Unwind_Resume@plt>
  return commandBuffers;
    7751:	90                   	nop
}
    7752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7756:	48 83 c4 30          	add    $0x30,%rsp
    775a:	5b                   	pop    %rbx
    775b:	41 5c                	pop    %r12
    775d:	5d                   	pop    %rbp
    775e:	c3                   	ret

000000000000775f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    775f:	55                   	push   %rbp
    7760:	48 89 e5             	mov    %rsp,%rbp
    7763:	41 54                	push   %r12
    7765:	53                   	push   %rbx
    7766:	48 83 ec 10          	sub    $0x10,%rsp
    776a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    776e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    7772:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7776:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    777a:	48 89 d6             	mov    %rdx,%rsi
    777d:	48 89 c7             	mov    %rax,%rdi
    7780:	e8 ab dd ff ff       	call   5530 <vkBeginCommandBuffer@plt>
    7785:	85 c0                	test   %eax,%eax
    7787:	0f 95 c0             	setne  %al
    778a:	84 c0                	test   %al,%al
    778c:	74 51                	je     77df <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    778e:	bf 10 00 00 00       	mov    $0x10,%edi
    7793:	e8 88 da ff ff       	call   5220 <__cxa_allocate_exception@plt>
    7798:	48 89 c3             	mov    %rax,%rbx
    779b:	48 8d 05 b6 c5 01 00 	lea    0x1c5b6(%rip),%rax        # 23d58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    77a2:	48 89 c6             	mov    %rax,%rsi
    77a5:	48 89 df             	mov    %rbx,%rdi
    77a8:	e8 c3 d9 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    77ad:	48 8b 05 0c 18 03 00 	mov    0x3180c(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    77b4:	48 89 c2             	mov    %rax,%rdx
    77b7:	48 8d 05 82 15 03 00 	lea    0x31582(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77be:	48 89 c6             	mov    %rax,%rsi
    77c1:	48 89 df             	mov    %rbx,%rdi
    77c4:	e8 c7 e1 ff ff       	call   5990 <__cxa_throw@plt>
    77c9:	49 89 c4             	mov    %rax,%r12
    77cc:	48 89 df             	mov    %rbx,%rdi
    77cf:	e8 7c db ff ff       	call   5350 <__cxa_free_exception@plt>
    77d4:	4c 89 e0             	mov    %r12,%rax
    77d7:	48 89 c7             	mov    %rax,%rdi
    77da:	e8 21 e2 ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
}
    77df:	90                   	nop
    77e0:	48 83 c4 10          	add    $0x10,%rsp
    77e4:	5b                   	pop    %rbx
    77e5:	41 5c                	pop    %r12
    77e7:	5d                   	pop    %rbp
    77e8:	c3                   	ret

00000000000077e9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    77e9:	55                   	push   %rbp
    77ea:	48 89 e5             	mov    %rsp,%rbp
    77ed:	41 54                	push   %r12
    77ef:	53                   	push   %rbx
    77f0:	48 83 ec 10          	sub    $0x10,%rsp
    77f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    77f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77fc:	48 89 c7             	mov    %rax,%rdi
    77ff:	e8 9c e2 ff ff       	call   5aa0 <vkEndCommandBuffer@plt>
    7804:	85 c0                	test   %eax,%eax
    7806:	0f 95 c0             	setne  %al
    7809:	84 c0                	test   %al,%al
    780b:	74 51                	je     785e <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    780d:	bf 10 00 00 00       	mov    $0x10,%edi
    7812:	e8 09 da ff ff       	call   5220 <__cxa_allocate_exception@plt>
    7817:	48 89 c3             	mov    %rax,%rbx
    781a:	48 8d 05 57 c5 01 00 	lea    0x1c557(%rip),%rax        # 23d78 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    7821:	48 89 c6             	mov    %rax,%rsi
    7824:	48 89 df             	mov    %rbx,%rdi
    7827:	e8 44 d9 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    782c:	48 8b 05 8d 17 03 00 	mov    0x3178d(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7833:	48 89 c2             	mov    %rax,%rdx
    7836:	48 8d 05 03 15 03 00 	lea    0x31503(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    783d:	48 89 c6             	mov    %rax,%rsi
    7840:	48 89 df             	mov    %rbx,%rdi
    7843:	e8 48 e1 ff ff       	call   5990 <__cxa_throw@plt>
    7848:	49 89 c4             	mov    %rax,%r12
    784b:	48 89 df             	mov    %rbx,%rdi
    784e:	e8 fd da ff ff       	call   5350 <__cxa_free_exception@plt>
    7853:	4c 89 e0             	mov    %r12,%rax
    7856:	48 89 c7             	mov    %rax,%rdi
    7859:	e8 a2 e1 ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
}
    785e:	90                   	nop
    785f:	48 83 c4 10          	add    $0x10,%rsp
    7863:	5b                   	pop    %rbx
    7864:	41 5c                	pop    %r12
    7866:	5d                   	pop    %rbp
    7867:	c3                   	ret

0000000000007868 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    7868:	55                   	push   %rbp
    7869:	48 89 e5             	mov    %rsp,%rbp
    786c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7870:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7874:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7878:	5d                   	pop    %rbp
    7879:	c3                   	ret

000000000000787a <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    787a:	55                   	push   %rbp
    787b:	48 89 e5             	mov    %rsp,%rbp
    787e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7886:	5d                   	pop    %rbp
    7887:	c3                   	ret

0000000000007888 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7888:	55                   	push   %rbp
    7889:	48 89 e5             	mov    %rsp,%rbp
    788c:	48 83 ec 10          	sub    $0x10,%rsp
    7890:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7894:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7898:	48 89 c7             	mov    %rax,%rdi
    789b:	e8 20 00 00 00       	call   78c0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    78a0:	90                   	nop
    78a1:	c9                   	leave
    78a2:	c3                   	ret
    78a3:	90                   	nop

00000000000078a4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    78a4:	55                   	push   %rbp
    78a5:	48 89 e5             	mov    %rsp,%rbp
    78a8:	48 83 ec 10          	sub    $0x10,%rsp
    78ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78b4:	48 89 c7             	mov    %rax,%rdi
    78b7:	e8 4c 01 00 00       	call   7a08 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    78bc:	90                   	nop
    78bd:	c9                   	leave
    78be:	c3                   	ret
    78bf:	90                   	nop

00000000000078c0 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    78c0:	55                   	push   %rbp
    78c1:	48 89 e5             	mov    %rsp,%rbp
    78c4:	48 83 ec 10          	sub    $0x10,%rsp
    78c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78d0:	48 89 c7             	mov    %rax,%rdi
    78d3:	e8 3c 01 00 00       	call   7a14 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    78d8:	90                   	nop
    78d9:	c9                   	leave
    78da:	c3                   	ret
    78db:	90                   	nop

00000000000078dc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    78dc:	55                   	push   %rbp
    78dd:	48 89 e5             	mov    %rsp,%rbp
    78e0:	53                   	push   %rbx
    78e1:	48 83 ec 28          	sub    $0x28,%rsp
    78e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    78ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    78f1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    78f5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    78f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78fd:	48 89 d6             	mov    %rdx,%rsi
    7900:	48 89 c7             	mov    %rax,%rdi
    7903:	e8 17 01 00 00       	call   7a1f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    7908:	48 89 c1             	mov    %rax,%rcx
    790b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    790f:	48 89 c2             	mov    %rax,%rdx
    7912:	48 89 ce             	mov    %rcx,%rsi
    7915:	48 89 df             	mov    %rbx,%rdi
    7918:	e8 63 01 00 00       	call   7a80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    791d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7925:	48 89 d6             	mov    %rdx,%rsi
    7928:	48 89 c7             	mov    %rax,%rdi
    792b:	e8 ae 01 00 00       	call   7ade <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    7930:	eb 1a                	jmp    794c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    7932:	48 89 c3             	mov    %rax,%rbx
    7935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7939:	48 89 c7             	mov    %rax,%rdi
    793c:	e8 79 00 00 00       	call   79ba <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    7941:	48 89 d8             	mov    %rbx,%rax
    7944:	48 89 c7             	mov    %rax,%rdi
    7947:	e8 b4 e0 ff ff       	call   5a00 <_Unwind_Resume@plt>
    794c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7950:	c9                   	leave
    7951:	c3                   	ret

0000000000007952 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7952:	55                   	push   %rbp
    7953:	48 89 e5             	mov    %rsp,%rbp
    7956:	48 83 ec 10          	sub    $0x10,%rsp
    795a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    795e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7962:	48 89 c7             	mov    %rax,%rdi
    7965:	e8 b4 01 00 00       	call   7b1e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    796a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    796d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7971:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7975:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7979:	48 8b 00             	mov    (%rax),%rax
    797c:	48 89 ce             	mov    %rcx,%rsi
    797f:	48 89 c7             	mov    %rax,%rdi
    7982:	e8 a5 01 00 00       	call   7b2c <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    7987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    798b:	48 89 c7             	mov    %rax,%rdi
    798e:	e8 27 00 00 00       	call   79ba <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    7993:	90                   	nop
    7994:	c9                   	leave
    7995:	c3                   	ret

0000000000007996 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7996:	55                   	push   %rbp
    7997:	48 89 e5             	mov    %rsp,%rbp
    799a:	48 83 ec 10          	sub    $0x10,%rsp
    799e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    79a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79a6:	48 8b 10             	mov    (%rax),%rdx
    79a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ad:	48 89 d6             	mov    %rdx,%rsi
    79b0:	48 89 c7             	mov    %rax,%rdi
    79b3:	e8 9e 01 00 00       	call   7b56 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    79b8:	c9                   	leave
    79b9:	c3                   	ret

00000000000079ba <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    79ba:	55                   	push   %rbp
    79bb:	48 89 e5             	mov    %rsp,%rbp
    79be:	48 83 ec 10          	sub    $0x10,%rsp
    79c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    79c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ca:	48 8b 50 10          	mov    0x10(%rax),%rdx
    79ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79d2:	48 8b 00             	mov    (%rax),%rax
    79d5:	48 29 c2             	sub    %rax,%rdx
    79d8:	48 89 d0             	mov    %rdx,%rax
    79db:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    79df:	48 89 c2             	mov    %rax,%rdx
    79e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79e6:	48 8b 08             	mov    (%rax),%rcx
    79e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79ed:	48 89 ce             	mov    %rcx,%rsi
    79f0:	48 89 c7             	mov    %rax,%rdi
    79f3:	e8 96 01 00 00       	call   7b8e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    79f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79fc:	48 89 c7             	mov    %rax,%rdi
    79ff:	e8 84 fe ff ff       	call   7888 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    7a04:	90                   	nop
    7a05:	c9                   	leave
    7a06:	c3                   	ret
    7a07:	90                   	nop

0000000000007a08 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7a08:	55                   	push   %rbp
    7a09:	48 89 e5             	mov    %rsp,%rbp
    7a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a10:	90                   	nop
    7a11:	5d                   	pop    %rbp
    7a12:	c3                   	ret
    7a13:	90                   	nop

0000000000007a14 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7a14:	55                   	push   %rbp
    7a15:	48 89 e5             	mov    %rsp,%rbp
    7a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a1c:	90                   	nop
    7a1d:	5d                   	pop    %rbp
    7a1e:	c3                   	ret

0000000000007a1f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7a1f:	55                   	push   %rbp
    7a20:	48 89 e5             	mov    %rsp,%rbp
    7a23:	53                   	push   %rbx
    7a24:	48 83 ec 28          	sub    $0x28,%rsp
    7a28:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7a2c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    7a30:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7a34:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a38:	48 89 d6             	mov    %rdx,%rsi
    7a3b:	48 89 c7             	mov    %rax,%rdi
    7a3e:	e8 25 01 00 00       	call   7b68 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    7a43:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a47:	48 89 c7             	mov    %rax,%rdi
    7a4a:	e8 74 01 00 00       	call   7bc3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    7a4f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7a53:	0f 92 c3             	setb   %bl
    7a56:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a5a:	48 89 c7             	mov    %rax,%rdi
    7a5d:	e8 5e fe ff ff       	call   78c0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    7a62:	84 db                	test   %bl,%bl
    7a64:	74 0f                	je     7a75 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    7a66:	48 8d 05 2b c3 01 00 	lea    0x1c32b(%rip),%rax        # 23d98 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    7a6d:	48 89 c7             	mov    %rax,%rdi
    7a70:	e8 db d7 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    7a75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7a79:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a7d:	c9                   	leave
    7a7e:	c3                   	ret
    7a7f:	90                   	nop

0000000000007a80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7a80:	55                   	push   %rbp
    7a81:	48 89 e5             	mov    %rsp,%rbp
    7a84:	53                   	push   %rbx
    7a85:	48 83 ec 28          	sub    $0x28,%rsp
    7a89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7a91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    7a95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a99:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7a9d:	48 89 d6             	mov    %rdx,%rsi
    7aa0:	48 89 c7             	mov    %rax,%rdi
    7aa3:	e8 5e 01 00 00       	call   7c06 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    7aa8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7aac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ab0:	48 89 d6             	mov    %rdx,%rsi
    7ab3:	48 89 c7             	mov    %rax,%rdi
    7ab6:	e8 7d 01 00 00       	call   7c38 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    7abb:	eb 1a                	jmp    7ad7 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    7abd:	48 89 c3             	mov    %rax,%rbx
    7ac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ac4:	48 89 c7             	mov    %rax,%rdi
    7ac7:	e8 bc fd ff ff       	call   7888 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    7acc:	48 89 d8             	mov    %rbx,%rax
    7acf:	48 89 c7             	mov    %rax,%rdi
    7ad2:	e8 29 df ff ff       	call   5a00 <_Unwind_Resume@plt>
    7ad7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7adb:	c9                   	leave
    7adc:	c3                   	ret
    7add:	90                   	nop

0000000000007ade <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7ade:	55                   	push   %rbp
    7adf:	48 89 e5             	mov    %rsp,%rbp
    7ae2:	48 83 ec 10          	sub    $0x10,%rsp
    7ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7aea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7af2:	48 89 c7             	mov    %rax,%rdi
    7af5:	e8 24 00 00 00       	call   7b1e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    7afa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b01:	48 8b 00             	mov    (%rax),%rax
    7b04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b08:	48 89 ce             	mov    %rcx,%rsi
    7b0b:	48 89 c7             	mov    %rax,%rdi
    7b0e:	e8 7b 01 00 00       	call   7c8e <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7b13:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7b17:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7b1b:	90                   	nop
    7b1c:	c9                   	leave
    7b1d:	c3                   	ret

0000000000007b1e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7b1e:	55                   	push   %rbp
    7b1f:	48 89 e5             	mov    %rsp,%rbp
    7b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b2a:	5d                   	pop    %rbp
    7b2b:	c3                   	ret

0000000000007b2c <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7b2c:	55                   	push   %rbp
    7b2d:	48 89 e5             	mov    %rsp,%rbp
    7b30:	48 83 ec 20          	sub    $0x20,%rsp
    7b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7b40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b48:	48 89 d6             	mov    %rdx,%rsi
    7b4b:	48 89 c7             	mov    %rax,%rdi
    7b4e:	e8 64 01 00 00       	call   7cb7 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    7b53:	90                   	nop
    7b54:	c9                   	leave
    7b55:	c3                   	ret

0000000000007b56 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    7b56:	55                   	push   %rbp
    7b57:	48 89 e5             	mov    %rsp,%rbp
    7b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7b62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b66:	5d                   	pop    %rbp
    7b67:	c3                   	ret

0000000000007b68 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    7b68:	55                   	push   %rbp
    7b69:	48 89 e5             	mov    %rsp,%rbp
    7b6c:	48 83 ec 10          	sub    $0x10,%rsp
    7b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    7b78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b80:	48 89 d6             	mov    %rdx,%rsi
    7b83:	48 89 c7             	mov    %rax,%rdi
    7b86:	e8 53 01 00 00       	call   7cde <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    7b8b:	90                   	nop
    7b8c:	c9                   	leave
    7b8d:	c3                   	ret

0000000000007b8e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    7b8e:	55                   	push   %rbp
    7b8f:	48 89 e5             	mov    %rsp,%rbp
    7b92:	48 83 ec 20          	sub    $0x20,%rsp
    7b96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    7ba2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7ba7:	74 17                	je     7bc0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7bb1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7bb5:	48 89 ce             	mov    %rcx,%rsi
    7bb8:	48 89 c7             	mov    %rax,%rdi
    7bbb:	e8 2d 01 00 00       	call   7ced <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    7bc0:	90                   	nop
    7bc1:	c9                   	leave
    7bc2:	c3                   	ret

0000000000007bc3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7bc3:	55                   	push   %rbp
    7bc4:	48 89 e5             	mov    %rsp,%rbp
    7bc7:	48 83 ec 20          	sub    $0x20,%rsp
    7bcb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7bcf:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7bd6:	ff ff 0f 
    7bd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7bdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7be1:	48 89 c7             	mov    %rax,%rdi
    7be4:	e8 32 01 00 00       	call   7d1b <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    7be9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7bed:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7bf1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7bf5:	48 89 d6             	mov    %rdx,%rsi
    7bf8:	48 89 c7             	mov    %rax,%rdi
    7bfb:	e8 91 f2 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    7c00:	48 8b 00             	mov    (%rax),%rax
      }
    7c03:	c9                   	leave
    7c04:	c3                   	ret
    7c05:	90                   	nop

0000000000007c06 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7c06:	55                   	push   %rbp
    7c07:	48 89 e5             	mov    %rsp,%rbp
    7c0a:	48 83 ec 10          	sub    $0x10,%rsp
    7c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7c16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c1e:	48 89 d6             	mov    %rdx,%rsi
    7c21:	48 89 c7             	mov    %rax,%rdi
    7c24:	e8 3f ff ff ff       	call   7b68 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    7c29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c2d:	48 89 c7             	mov    %rax,%rdi
    7c30:	e8 01 01 00 00       	call   7d36 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    7c35:	90                   	nop
    7c36:	c9                   	leave
    7c37:	c3                   	ret

0000000000007c38 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7c38:	55                   	push   %rbp
    7c39:	48 89 e5             	mov    %rsp,%rbp
    7c3c:	48 83 ec 10          	sub    $0x10,%rsp
    7c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7c48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c50:	48 89 d6             	mov    %rdx,%rsi
    7c53:	48 89 c7             	mov    %rax,%rdi
    7c56:	e8 09 01 00 00       	call   7d64 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    7c5b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c5f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c66:	48 8b 10             	mov    (%rax),%rdx
    7c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c6d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c75:	48 8b 00             	mov    (%rax),%rax
    7c78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c7c:	48 c1 e2 03          	shl    $0x3,%rdx
    7c80:	48 01 c2             	add    %rax,%rdx
    7c83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c87:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7c8b:	90                   	nop
    7c8c:	c9                   	leave
    7c8d:	c3                   	ret

0000000000007c8e <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7c8e:	55                   	push   %rbp
    7c8f:	48 89 e5             	mov    %rsp,%rbp
    7c92:	48 83 ec 20          	sub    $0x20,%rsp
    7c96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    7ca2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7caa:	48 89 d6             	mov    %rdx,%rsi
    7cad:	48 89 c7             	mov    %rax,%rdi
    7cb0:	e8 e2 00 00 00       	call   7d97 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    7cb5:	c9                   	leave
    7cb6:	c3                   	ret

0000000000007cb7 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7cb7:	55                   	push   %rbp
    7cb8:	48 89 e5             	mov    %rsp,%rbp
    7cbb:	48 83 ec 10          	sub    $0x10,%rsp
    7cbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7cc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ccf:	48 89 d6             	mov    %rdx,%rsi
    7cd2:	48 89 c7             	mov    %rax,%rdi
    7cd5:	e8 e6 00 00 00       	call   7dc0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    7cda:	90                   	nop
    7cdb:	c9                   	leave
    7cdc:	c3                   	ret
    7cdd:	90                   	nop

0000000000007cde <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    7cde:	55                   	push   %rbp
    7cdf:	48 89 e5             	mov    %rsp,%rbp
    7ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ce6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7cea:	90                   	nop
    7ceb:	5d                   	pop    %rbp
    7cec:	c3                   	ret

0000000000007ced <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7ced:	55                   	push   %rbp
    7cee:	48 89 e5             	mov    %rsp,%rbp
    7cf1:	48 83 ec 20          	sub    $0x20,%rsp
    7cf5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cf9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7cfd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7d01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7d05:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d0d:	48 89 ce             	mov    %rcx,%rsi
    7d10:	48 89 c7             	mov    %rax,%rdi
    7d13:	e8 b8 00 00 00       	call   7dd0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    7d18:	90                   	nop
    7d19:	c9                   	leave
    7d1a:	c3                   	ret

0000000000007d1b <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7d1b:	55                   	push   %rbp
    7d1c:	48 89 e5             	mov    %rsp,%rbp
    7d1f:	48 83 ec 10          	sub    $0x10,%rsp
    7d23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d2b:	48 89 c7             	mov    %rax,%rdi
    7d2e:	e8 cf 00 00 00       	call   7e02 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    7d33:	c9                   	leave
    7d34:	c3                   	ret
    7d35:	90                   	nop

0000000000007d36 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7d36:	55                   	push   %rbp
    7d37:	48 89 e5             	mov    %rsp,%rbp
    7d3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d42:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d4d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7d54:	00 
    7d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d59:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7d60:	00 
	{ }
    7d61:	90                   	nop
    7d62:	5d                   	pop    %rbp
    7d63:	c3                   	ret

0000000000007d64 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7d64:	55                   	push   %rbp
    7d65:	48 89 e5             	mov    %rsp,%rbp
    7d68:	48 83 ec 10          	sub    $0x10,%rsp
    7d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7d74:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7d79:	74 15                	je     7d90 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    7d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d83:	48 89 d6             	mov    %rdx,%rsi
    7d86:	48 89 c7             	mov    %rax,%rdi
    7d89:	e8 8e 00 00 00       	call   7e1c <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    7d8e:	eb 05                	jmp    7d95 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    7d90:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7d95:	c9                   	leave
    7d96:	c3                   	ret

0000000000007d97 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7d97:	55                   	push   %rbp
    7d98:	48 89 e5             	mov    %rsp,%rbp
    7d9b:	48 83 ec 20          	sub    $0x20,%rsp
    7d9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7da3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7da7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7dab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7daf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7db3:	48 89 d6             	mov    %rdx,%rsi
    7db6:	48 89 c7             	mov    %rax,%rdi
    7db9:	e8 88 00 00 00       	call   7e46 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    7dbe:	c9                   	leave
    7dbf:	c3                   	ret

0000000000007dc0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7dc0:	55                   	push   %rbp
    7dc1:	48 89 e5             	mov    %rsp,%rbp
    7dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7dcc:	90                   	nop
    7dcd:	5d                   	pop    %rbp
    7dce:	c3                   	ret
    7dcf:	90                   	nop

0000000000007dd0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7dd0:	55                   	push   %rbp
    7dd1:	48 89 e5             	mov    %rsp,%rbp
    7dd4:	48 83 ec 20          	sub    $0x20,%rsp
    7dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ddc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7de0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7de4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7de8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7def:	00 
    7df0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7df4:	48 89 d6             	mov    %rdx,%rsi
    7df7:	48 89 c7             	mov    %rax,%rdi
    7dfa:	e8 41 d7 ff ff       	call   5540 <_ZdlPvm@plt>
      }
    7dff:	c9                   	leave
    7e00:	c3                   	ret
    7e01:	90                   	nop

0000000000007e02 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7e02:	55                   	push   %rbp
    7e03:	48 89 e5             	mov    %rsp,%rbp
    7e06:	48 83 ec 10          	sub    $0x10,%rsp
    7e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e12:	48 89 c7             	mov    %rax,%rdi
    7e15:	e8 8a 00 00 00       	call   7ea4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    7e1a:	c9                   	leave
    7e1b:	c3                   	ret

0000000000007e1c <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7e1c:	55                   	push   %rbp
    7e1d:	48 89 e5             	mov    %rsp,%rbp
    7e20:	48 83 ec 10          	sub    $0x10,%rsp
    7e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7e2c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e34:	ba 00 00 00 00       	mov    $0x0,%edx
    7e39:	48 89 ce             	mov    %rcx,%rsi
    7e3c:	48 89 c7             	mov    %rax,%rdi
    7e3f:	e8 74 00 00 00       	call   7eb8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    7e44:	c9                   	leave
    7e45:	c3                   	ret

0000000000007e46 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7e46:	55                   	push   %rbp
    7e47:	48 89 e5             	mov    %rsp,%rbp
    7e4a:	48 83 ec 20          	sub    $0x20,%rsp
    7e4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e52:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7e56:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7e5b:	74 40                	je     7e9d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7e5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e61:	48 89 c7             	mov    %rax,%rdi
    7e64:	e8 b0 00 00 00       	call   7f19 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    7e69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e71:	48 89 c7             	mov    %rax,%rdi
    7e74:	e8 ae 00 00 00       	call   7f27 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    7e79:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7e7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e82:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7e86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7e8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e8e:	48 89 ce             	mov    %rcx,%rsi
    7e91:	48 89 c7             	mov    %rax,%rdi
    7e94:	e8 b5 00 00 00       	call   7f4e <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    7e99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7e9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7ea1:	c9                   	leave
    7ea2:	c3                   	ret
    7ea3:	90                   	nop

0000000000007ea4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7ea4:	55                   	push   %rbp
    7ea5:	48 89 e5             	mov    %rsp,%rbp
    7ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7eac:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7eb3:	ff ff 0f 
      }
    7eb6:	5d                   	pop    %rbp
    7eb7:	c3                   	ret

0000000000007eb8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7eb8:	55                   	push   %rbp
    7eb9:	48 89 e5             	mov    %rsp,%rbp
    7ebc:	48 83 ec 20          	sub    $0x20,%rsp
    7ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ec4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ec8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ed0:	48 89 c7             	mov    %rax,%rdi
    7ed3:	e8 cc ff ff ff       	call   7ea4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    7ed8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7edc:	0f 92 c0             	setb   %al
    7edf:	0f b6 c0             	movzbl %al,%eax
    7ee2:	48 85 c0             	test   %rax,%rax
    7ee5:	0f 95 c0             	setne  %al
    7ee8:	84 c0                	test   %al,%al
    7eea:	74 1a                	je     7f06 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7eec:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7ef3:	ff ff 1f 
    7ef6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7efa:	73 05                	jae    7f01 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7efc:	e8 9f d4 ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7f01:	e8 4a d2 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7f06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f0a:	48 c1 e0 03          	shl    $0x3,%rax
    7f0e:	48 89 c7             	mov    %rax,%rdi
    7f11:	e8 0a d6 ff ff       	call   5520 <_Znwm@plt>
    7f16:	90                   	nop
      }
    7f17:	c9                   	leave
    7f18:	c3                   	ret

0000000000007f19 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7f19:	55                   	push   %rbp
    7f1a:	48 89 e5             	mov    %rsp,%rbp
    7f1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f25:	5d                   	pop    %rbp
    7f26:	c3                   	ret

0000000000007f27 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7f27:	55                   	push   %rbp
    7f28:	48 89 e5             	mov    %rsp,%rbp
    7f2b:	48 83 ec 10          	sub    $0x10,%rsp
    7f2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f37:	48 89 c6             	mov    %rax,%rsi
    7f3a:	bf 08 00 00 00       	mov    $0x8,%edi
    7f3f:	e8 24 f9 ff ff       	call   7868 <_ZnwmPv>
    7f44:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    7f4b:	90                   	nop
    7f4c:	c9                   	leave
    7f4d:	c3                   	ret

0000000000007f4e <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7f4e:	55                   	push   %rbp
    7f4f:	48 89 e5             	mov    %rsp,%rbp
    7f52:	48 83 ec 20          	sub    $0x20,%rsp
    7f56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    7f62:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7f66:	48 89 c7             	mov    %rax,%rdi
    7f69:	e8 24 00 00 00       	call   7f92 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7f6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7f72:	48 89 c7             	mov    %rax,%rdi
    7f75:	e8 00 f9 ff ff       	call   787a <_ZSt17__size_to_integerm>
    7f7a:	48 89 c1             	mov    %rax,%rcx
    7f7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f85:	48 89 ce             	mov    %rcx,%rsi
    7f88:	48 89 c7             	mov    %rax,%rdi
    7f8b:	e8 0d 00 00 00       	call   7f9d <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    7f90:	c9                   	leave
    7f91:	c3                   	ret

0000000000007f92 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    7f92:	55                   	push   %rbp
    7f93:	48 89 e5             	mov    %rsp,%rbp
    7f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7f9a:	90                   	nop
    7f9b:	5d                   	pop    %rbp
    7f9c:	c3                   	ret

0000000000007f9d <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7f9d:	55                   	push   %rbp
    7f9e:	48 89 e5             	mov    %rsp,%rbp
    7fa1:	48 83 ec 20          	sub    $0x20,%rsp
    7fa5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fa9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7fad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7fb1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7fb6:	75 06                	jne    7fbe <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7fb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fbc:	eb 3a                	jmp    7ff8 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    7fbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fc2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7fc9:	00 
    7fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7fd2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fda:	48 89 ce             	mov    %rcx,%rsi
    7fdd:	48 89 c7             	mov    %rax,%rdi
    7fe0:	e8 15 00 00 00       	call   7ffa <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    7fe5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fe9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ff0:	00 
    7ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff5:	48 01 d0             	add    %rdx,%rax
    }
    7ff8:	c9                   	leave
    7ff9:	c3                   	ret

0000000000007ffa <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    7ffa:	55                   	push   %rbp
    7ffb:	48 89 e5             	mov    %rsp,%rbp
    7ffe:	48 83 ec 20          	sub    $0x20,%rsp
    8002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    800a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    800e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8012:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    801a:	48 89 ce             	mov    %rcx,%rsi
    801d:	48 89 c7             	mov    %rax,%rdi
    8020:	e8 03 00 00 00       	call   8028 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    8025:	90                   	nop
    8026:	c9                   	leave
    8027:	c3                   	ret

0000000000008028 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8028:	55                   	push   %rbp
    8029:	48 89 e5             	mov    %rsp,%rbp
    802c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8030:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8034:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    8038:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    803c:	48 8b 00             	mov    (%rax),%rax
    803f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    8043:	eb 10                	jmp    8055 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    8045:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8049:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    804d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    8050:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    8055:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8059:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    805d:	75 e6                	jne    8045 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    805f:	90                   	nop
    8060:	90                   	nop
    8061:	5d                   	pop    %rbp
    8062:	c3                   	ret

0000000000008063 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    8063:	55                   	push   %rbp
    8064:	48 89 e5             	mov    %rsp,%rbp
    8067:	48 83 ec 20          	sub    $0x20,%rsp
    806b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    806e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8071:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    8075:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    8079:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    807d:	be 00 00 00 00       	mov    $0x0,%esi
    8082:	bf 01 20 02 00       	mov    $0x22001,%edi
    8087:	e8 b4 d3 ff ff       	call   5440 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
  return glfwCreateWindow(width, height, title, monitor, share);
    808c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    8090:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    8094:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8098:	8b 75 f8             	mov    -0x8(%rbp),%esi
    809b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    809e:	49 89 f8             	mov    %rdi,%r8
    80a1:	89 c7                	mov    %eax,%edi
    80a3:	e8 08 d8 ff ff       	call   58b0 <glfwCreateWindow@plt>
}
    80a8:	c9                   	leave
    80a9:	c3                   	ret

00000000000080aa <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    80aa:	55                   	push   %rbp
    80ab:	48 89 e5             	mov    %rsp,%rbp
    80ae:	41 54                	push   %r12
    80b0:	53                   	push   %rbx
    80b1:	48 83 ec 20          	sub    $0x20,%rsp
    80b5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    80b9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    80bd:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    80c1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    80c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80c9:	48 89 ce             	mov    %rcx,%rsi
    80cc:	48 89 c7             	mov    %rax,%rdi
    80cf:	e8 dc d5 ff ff       	call   56b0 <vkCreateInstance@plt>
    80d4:	85 c0                	test   %eax,%eax
    80d6:	0f 95 c0             	setne  %al
    80d9:	84 c0                	test   %al,%al
    80db:	74 3b                	je     8118 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    80dd:	bf 10 00 00 00       	mov    $0x10,%edi
    80e2:	e8 39 d1 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    80e7:	48 89 c3             	mov    %rax,%rbx
    80ea:	48 8d 05 0f c3 01 00 	lea    0x1c30f(%rip),%rax        # 24400 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    80f1:	48 89 c6             	mov    %rax,%rsi
    80f4:	48 89 df             	mov    %rbx,%rdi
    80f7:	e8 74 d0 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    80fc:	48 8b 05 bd 0e 03 00 	mov    0x30ebd(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8103:	48 89 c2             	mov    %rax,%rdx
    8106:	48 8d 05 33 0c 03 00 	lea    0x30c33(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    810d:	48 89 c6             	mov    %rax,%rsi
    8110:	48 89 df             	mov    %rbx,%rdi
    8113:	e8 78 d8 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return instance;
    8118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    811c:	eb 16                	jmp    8134 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    811e:	49 89 c4             	mov    %rax,%r12
    8121:	48 89 df             	mov    %rbx,%rdi
    8124:	e8 27 d2 ff ff       	call   5350 <__cxa_free_exception@plt>
    8129:	4c 89 e0             	mov    %r12,%rax
    812c:	48 89 c7             	mov    %rax,%rdi
    812f:	e8 cc d8 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8134:	48 83 c4 20          	add    $0x20,%rsp
    8138:	5b                   	pop    %rbx
    8139:	41 5c                	pop    %r12
    813b:	5d                   	pop    %rbp
    813c:	c3                   	ret

000000000000813d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    813d:	55                   	push   %rbp
    813e:	48 89 e5             	mov    %rsp,%rbp
    8141:	41 54                	push   %r12
    8143:	53                   	push   %rbx
    8144:	48 83 ec 30          	sub    $0x30,%rsp
    8148:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    814c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8150:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    8154:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8158:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    815c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    8160:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8164:	48 89 c7             	mov    %rax,%rdi
    8167:	e8 e4 d6 ff ff       	call   5850 <vkCreateDevice@plt>
    816c:	85 c0                	test   %eax,%eax
    816e:	0f 95 c0             	setne  %al
    8171:	84 c0                	test   %al,%al
    8173:	74 3b                	je     81b0 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    8175:	bf 10 00 00 00       	mov    $0x10,%edi
    817a:	e8 a1 d0 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    817f:	48 89 c3             	mov    %rax,%rbx
    8182:	48 8d 05 97 c2 01 00 	lea    0x1c297(%rip),%rax        # 24420 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    8189:	48 89 c6             	mov    %rax,%rsi
    818c:	48 89 df             	mov    %rbx,%rdi
    818f:	e8 dc cf ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    8194:	48 8b 05 25 0e 03 00 	mov    0x30e25(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    819b:	48 89 c2             	mov    %rax,%rdx
    819e:	48 8d 05 9b 0b 03 00 	lea    0x30b9b(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    81a5:	48 89 c6             	mov    %rax,%rsi
    81a8:	48 89 df             	mov    %rbx,%rdi
    81ab:	e8 e0 d7 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return device;
    81b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81b4:	eb 16                	jmp    81cc <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    81b6:	49 89 c4             	mov    %rax,%r12
    81b9:	48 89 df             	mov    %rbx,%rdi
    81bc:	e8 8f d1 ff ff       	call   5350 <__cxa_free_exception@plt>
    81c1:	4c 89 e0             	mov    %r12,%rax
    81c4:	48 89 c7             	mov    %rax,%rdi
    81c7:	e8 34 d8 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    81cc:	48 83 c4 30          	add    $0x30,%rsp
    81d0:	5b                   	pop    %rbx
    81d1:	41 5c                	pop    %r12
    81d3:	5d                   	pop    %rbp
    81d4:	c3                   	ret

00000000000081d5 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    81d5:	55                   	push   %rbp
    81d6:	48 89 e5             	mov    %rsp,%rbp
    81d9:	41 54                	push   %r12
    81db:	53                   	push   %rbx
    81dc:	48 83 ec 30          	sub    $0x30,%rsp
    81e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    81e4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    81e8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    81ec:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    81f0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    81f4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    81f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81fc:	48 89 c7             	mov    %rax,%rdi
    81ff:	e8 8c d6 ff ff       	call   5890 <glfwCreateWindowSurface@plt>
    8204:	85 c0                	test   %eax,%eax
    8206:	0f 95 c0             	setne  %al
    8209:	84 c0                	test   %al,%al
    820b:	74 3b                	je     8248 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    820d:	bf 10 00 00 00       	mov    $0x10,%edi
    8212:	e8 09 d0 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    8217:	48 89 c3             	mov    %rax,%rbx
    821a:	48 8d 05 27 c2 01 00 	lea    0x1c227(%rip),%rax        # 24448 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    8221:	48 89 c6             	mov    %rax,%rsi
    8224:	48 89 df             	mov    %rbx,%rdi
    8227:	e8 44 cf ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    822c:	48 8b 05 8d 0d 03 00 	mov    0x30d8d(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8233:	48 89 c2             	mov    %rax,%rdx
    8236:	48 8d 05 03 0b 03 00 	lea    0x30b03(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    823d:	48 89 c6             	mov    %rax,%rsi
    8240:	48 89 df             	mov    %rbx,%rdi
    8243:	e8 48 d7 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return surface;
    8248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    824c:	eb 16                	jmp    8264 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    824e:	49 89 c4             	mov    %rax,%r12
    8251:	48 89 df             	mov    %rbx,%rdi
    8254:	e8 f7 d0 ff ff       	call   5350 <__cxa_free_exception@plt>
    8259:	4c 89 e0             	mov    %r12,%rax
    825c:	48 89 c7             	mov    %rax,%rdi
    825f:	e8 9c d7 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8264:	48 83 c4 30          	add    $0x30,%rsp
    8268:	5b                   	pop    %rbx
    8269:	41 5c                	pop    %r12
    826b:	5d                   	pop    %rbp
    826c:	c3                   	ret

000000000000826d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    826d:	55                   	push   %rbp
    826e:	48 89 e5             	mov    %rsp,%rbp
    8271:	41 54                	push   %r12
    8273:	53                   	push   %rbx
    8274:	48 83 ec 30          	sub    $0x30,%rsp
    8278:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    827c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8280:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    8284:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    828b:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    828c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8290:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8294:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    8298:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    829c:	48 89 c7             	mov    %rax,%rdi
    829f:	e8 dc d3 ff ff       	call   5680 <vkCreateSwapchainKHR@plt>
    82a4:	85 c0                	test   %eax,%eax
    82a6:	0f 95 c0             	setne  %al
    82a9:	84 c0                	test   %al,%al
    82ab:	74 3b                	je     82e8 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    82ad:	bf 10 00 00 00       	mov    $0x10,%edi
    82b2:	e8 69 cf ff ff       	call   5220 <__cxa_allocate_exception@plt>
    82b7:	48 89 c3             	mov    %rax,%rbx
    82ba:	48 8d 05 a8 c1 01 00 	lea    0x1c1a8(%rip),%rax        # 24469 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x71>
    82c1:	48 89 c6             	mov    %rax,%rsi
    82c4:	48 89 df             	mov    %rbx,%rdi
    82c7:	e8 a4 ce ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    82cc:	48 8b 05 ed 0c 03 00 	mov    0x30ced(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    82d3:	48 89 c2             	mov    %rax,%rdx
    82d6:	48 8d 05 63 0a 03 00 	lea    0x30a63(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    82dd:	48 89 c6             	mov    %rax,%rsi
    82e0:	48 89 df             	mov    %rbx,%rdi
    82e3:	e8 a8 d6 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return swapchain;
    82e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82ec:	eb 16                	jmp    8304 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    82ee:	49 89 c4             	mov    %rax,%r12
    82f1:	48 89 df             	mov    %rbx,%rdi
    82f4:	e8 57 d0 ff ff       	call   5350 <__cxa_free_exception@plt>
    82f9:	4c 89 e0             	mov    %r12,%rax
    82fc:	48 89 c7             	mov    %rax,%rdi
    82ff:	e8 fc d6 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8304:	48 83 c4 30          	add    $0x30,%rsp
    8308:	5b                   	pop    %rbx
    8309:	41 5c                	pop    %r12
    830b:	5d                   	pop    %rbp
    830c:	c3                   	ret

000000000000830d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    830d:	55                   	push   %rbp
    830e:	48 89 e5             	mov    %rsp,%rbp
    8311:	41 54                	push   %r12
    8313:	53                   	push   %rbx
    8314:	48 83 ec 30          	sub    $0x30,%rsp
    8318:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    831c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8320:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    8324:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8328:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    832c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    8330:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8334:	48 89 c7             	mov    %rax,%rdi
    8337:	e8 34 d2 ff ff       	call   5570 <vkCreateImageView@plt>
    833c:	85 c0                	test   %eax,%eax
    833e:	0f 95 c0             	setne  %al
    8341:	84 c0                	test   %al,%al
    8343:	74 3b                	je     8380 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    8345:	bf 10 00 00 00       	mov    $0x10,%edi
    834a:	e8 d1 ce ff ff       	call   5220 <__cxa_allocate_exception@plt>
    834f:	48 89 c3             	mov    %rax,%rbx
    8352:	48 8d 05 2f c1 01 00 	lea    0x1c12f(%rip),%rax        # 24488 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    8359:	48 89 c6             	mov    %rax,%rsi
    835c:	48 89 df             	mov    %rbx,%rdi
    835f:	e8 0c ce ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    8364:	48 8b 05 55 0c 03 00 	mov    0x30c55(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    836b:	48 89 c2             	mov    %rax,%rdx
    836e:	48 8d 05 cb 09 03 00 	lea    0x309cb(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8375:	48 89 c6             	mov    %rax,%rsi
    8378:	48 89 df             	mov    %rbx,%rdi
    837b:	e8 10 d6 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return imageView;
    8380:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8384:	eb 16                	jmp    839c <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    8386:	49 89 c4             	mov    %rax,%r12
    8389:	48 89 df             	mov    %rbx,%rdi
    838c:	e8 bf cf ff ff       	call   5350 <__cxa_free_exception@plt>
    8391:	4c 89 e0             	mov    %r12,%rax
    8394:	48 89 c7             	mov    %rax,%rdi
    8397:	e8 64 d6 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    839c:	48 83 c4 30          	add    $0x30,%rsp
    83a0:	5b                   	pop    %rbx
    83a1:	41 5c                	pop    %r12
    83a3:	5d                   	pop    %rbp
    83a4:	c3                   	ret

00000000000083a5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    83a5:	55                   	push   %rbp
    83a6:	48 89 e5             	mov    %rsp,%rbp
    83a9:	41 54                	push   %r12
    83ab:	53                   	push   %rbx
    83ac:	48 83 ec 60          	sub    $0x60,%rsp
    83b0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    83b4:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    83b8:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    83bc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    83c0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    83c4:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    83c8:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    83cd:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    83d4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    83d8:	48 89 c7             	mov    %rax,%rdi
    83db:	e8 02 07 00 00       	call   8ae2 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    83e0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    83e4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    83e8:	48 89 c7             	mov    %rax,%rdi
    83eb:	e8 12 07 00 00       	call   8b02 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    83f0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    83f4:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    83fb:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    83fc:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    8400:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    8404:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    8408:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    840c:	48 89 c7             	mov    %rax,%rdi
    840f:	e8 9c cf ff ff       	call   53b0 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    8414:	85 c0                	test   %eax,%eax
    8416:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    8419:	84 c0                	test   %al,%al
    841b:	74 3b                	je     8458 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    841d:	bf 10 00 00 00       	mov    $0x10,%edi
    8422:	e8 f9 cd ff ff       	call   5220 <__cxa_allocate_exception@plt>
    8427:	48 89 c3             	mov    %rax,%rbx
    842a:	48 8d 05 77 c0 01 00 	lea    0x1c077(%rip),%rax        # 244a8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb0>
    8431:	48 89 c6             	mov    %rax,%rsi
    8434:	48 89 df             	mov    %rbx,%rdi
    8437:	e8 34 cd ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    843c:	48 8b 05 7d 0b 03 00 	mov    0x30b7d(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8443:	48 89 c2             	mov    %rax,%rdx
    8446:	48 8d 05 f3 08 03 00 	lea    0x308f3(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    844d:	48 89 c6             	mov    %rax,%rsi
    8450:	48 89 df             	mov    %rbx,%rdi
    8453:	e8 38 d5 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return shaderModule;
    8458:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    845c:	eb 16                	jmp    8474 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    845e:	49 89 c4             	mov    %rax,%r12
    8461:	48 89 df             	mov    %rbx,%rdi
    8464:	e8 e7 ce ff ff       	call   5350 <__cxa_free_exception@plt>
    8469:	4c 89 e0             	mov    %r12,%rax
    846c:	48 89 c7             	mov    %rax,%rdi
    846f:	e8 8c d5 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8474:	48 83 c4 60          	add    $0x60,%rsp
    8478:	5b                   	pop    %rbx
    8479:	41 5c                	pop    %r12
    847b:	5d                   	pop    %rbp
    847c:	c3                   	ret

000000000000847d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    847d:	55                   	push   %rbp
    847e:	48 89 e5             	mov    %rsp,%rbp
    8481:	41 54                	push   %r12
    8483:	53                   	push   %rbx
    8484:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    848b:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    8492:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    8499:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    84a0:	be 04 00 00 00       	mov    $0x4,%esi
    84a5:	bf 02 00 00 00       	mov    $0x2,%edi
    84aa:	e8 db 05 00 00       	call   8a8a <_ZStorSt13_Ios_OpenmodeS_>
    84af:	89 c2                	mov    %eax,%edx
    84b1:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    84b8:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    84bf:	48 89 ce             	mov    %rcx,%rsi
    84c2:	48 89 c7             	mov    %rax,%rdi
    84c5:	e8 66 d4 ff ff       	call   5930 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    84ca:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    84d1:	48 89 c7             	mov    %rax,%rdi
    84d4:	e8 47 d4 ff ff       	call   5920 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    84d9:	83 f0 01             	xor    $0x1,%eax
    84dc:	84 c0                	test   %al,%al
    84de:	74 61                	je     8541 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    84e0:	bf 10 00 00 00       	mov    $0x10,%edi
    84e5:	e8 36 cd ff ff       	call   5220 <__cxa_allocate_exception@plt>
    84ea:	48 89 c3             	mov    %rax,%rbx
    84ed:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    84f1:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    84f8:	48 8d 0d c9 bf 01 00 	lea    0x1bfc9(%rip),%rcx        # 244c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    84ff:	48 89 ce             	mov    %rcx,%rsi
    8502:	48 89 c7             	mov    %rax,%rdi
    8505:	e8 1c 06 00 00       	call   8b26 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    850a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    850e:	48 89 c6             	mov    %rax,%rsi
    8511:	48 89 df             	mov    %rbx,%rdi
    8514:	e8 27 d4 ff ff       	call   5940 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    8519:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    851d:	48 89 c7             	mov    %rax,%rdi
    8520:	e8 c3 d5 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    8525:	48 8b 05 94 0a 03 00 	mov    0x30a94(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    852c:	48 89 c2             	mov    %rax,%rdx
    852f:	48 8d 05 0a 08 03 00 	lea    0x3080a(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8536:	48 89 c6             	mov    %rax,%rsi
    8539:	48 89 df             	mov    %rbx,%rdi
    853c:	e8 4f d4 ff ff       	call   5990 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    8541:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    8548:	48 89 c7             	mov    %rax,%rdi
    854b:	e8 80 d4 ff ff       	call   59d0 <_ZNSi5tellgEv@plt>
    8550:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    8554:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    8558:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    855c:	48 89 c7             	mov    %rax,%rdi
    855f:	e8 c4 06 00 00       	call   8c28 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    8564:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    8568:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    856c:	48 89 c7             	mov    %rax,%rdi
    856f:	e8 9c d4 ff ff       	call   5a10 <_ZNSaIcEC1Ev@plt>
    8574:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    8578:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    857c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    8583:	48 89 ce             	mov    %rcx,%rsi
    8586:	48 89 c7             	mov    %rax,%rdi
    8589:	e8 ac 06 00 00       	call   8c3a <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    858e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8592:	48 89 c7             	mov    %rax,%rdi
    8595:	e8 36 d0 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    859a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    859e:	be 00 00 00 00       	mov    $0x0,%esi
    85a3:	48 89 c7             	mov    %rax,%rdi
    85a6:	e8 49 07 00 00       	call   8cf4 <_ZNSt4fposI11__mbstate_tEC1El>
    85ab:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    85af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    85b3:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    85ba:	48 89 ce             	mov    %rcx,%rsi
    85bd:	48 89 c7             	mov    %rax,%rdi
    85c0:	e8 4b d1 ff ff       	call   5710 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    85c5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    85c9:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    85d0:	48 89 c7             	mov    %rax,%rdi
    85d3:	e8 4c 07 00 00       	call   8d24 <_ZNSt6vectorIcSaIcEE4dataEv>
    85d8:	48 89 c1             	mov    %rax,%rcx
    85db:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    85e2:	48 89 da             	mov    %rbx,%rdx
    85e5:	48 89 ce             	mov    %rcx,%rsi
    85e8:	48 89 c7             	mov    %rax,%rdi
    85eb:	e8 10 d1 ff ff       	call   5700 <_ZNSi4readEPcl@plt>
  file.close();
    85f0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    85f7:	48 89 c7             	mov    %rax,%rdi
    85fa:	e8 a1 ca ff ff       	call   50a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    85ff:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    8606:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    860d:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    8614:	48 89 ce             	mov    %rcx,%rsi
    8617:	48 89 c7             	mov    %rax,%rdi
    861a:	e8 86 fd ff ff       	call   83a5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    861f:	48 89 c3             	mov    %rax,%rbx
    8622:	90                   	nop
}
    8623:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    862a:	48 89 c7             	mov    %rax,%rdi
    862d:	e8 7e 06 00 00       	call   8cb0 <_ZNSt6vectorIcSaIcEED1Ev>
    8632:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    8639:	48 89 c7             	mov    %rax,%rdi
    863c:	e8 af ca ff ff       	call   50f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    8641:	48 89 d8             	mov    %rbx,%rax
    8644:	eb 63                	jmp    86a9 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    8646:	49 89 c4             	mov    %rax,%r12
    8649:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    864d:	48 89 c7             	mov    %rax,%rdi
    8650:	e8 93 d4 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    8655:	eb 03                	jmp    865a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    8657:	49 89 c4             	mov    %rax,%r12
    865a:	48 89 df             	mov    %rbx,%rdi
    865d:	e8 ee cc ff ff       	call   5350 <__cxa_free_exception@plt>
    8662:	4c 89 e3             	mov    %r12,%rbx
    8665:	eb 28                	jmp    868f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    8667:	48 89 c3             	mov    %rax,%rbx
    866a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    866e:	48 89 c7             	mov    %rax,%rdi
    8671:	e8 5a cf ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    8676:	eb 17                	jmp    868f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    8678:	48 89 c3             	mov    %rax,%rbx
    867b:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    8682:	48 89 c7             	mov    %rax,%rdi
    8685:	e8 26 06 00 00       	call   8cb0 <_ZNSt6vectorIcSaIcEED1Ev>
    868a:	eb 03                	jmp    868f <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    868c:	48 89 c3             	mov    %rax,%rbx
    868f:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    8696:	48 89 c7             	mov    %rax,%rdi
    8699:	e8 52 ca ff ff       	call   50f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    869e:	48 89 d8             	mov    %rbx,%rax
    86a1:	48 89 c7             	mov    %rax,%rdi
    86a4:	e8 57 d3 ff ff       	call   5a00 <_Unwind_Resume@plt>
    86a9:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    86b0:	5b                   	pop    %rbx
    86b1:	41 5c                	pop    %r12
    86b3:	5d                   	pop    %rbp
    86b4:	c3                   	ret

00000000000086b5 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    86b5:	55                   	push   %rbp
    86b6:	48 89 e5             	mov    %rsp,%rbp
    86b9:	41 54                	push   %r12
    86bb:	53                   	push   %rbx
    86bc:	48 83 ec 30          	sub    $0x30,%rsp
    86c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    86c4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    86c8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    86cc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    86d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    86d4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    86d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    86dc:	48 89 c7             	mov    %rax,%rdi
    86df:	e8 1c cd ff ff       	call   5400 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    86e4:	85 c0                	test   %eax,%eax
    86e6:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    86e9:	84 c0                	test   %al,%al
    86eb:	74 3b                	je     8728 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    86ed:	bf 10 00 00 00       	mov    $0x10,%edi
    86f2:	e8 29 cb ff ff       	call   5220 <__cxa_allocate_exception@plt>
    86f7:	48 89 c3             	mov    %rax,%rbx
    86fa:	48 8d 05 d7 bd 01 00 	lea    0x1bdd7(%rip),%rax        # 244d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    8701:	48 89 c6             	mov    %rax,%rsi
    8704:	48 89 df             	mov    %rbx,%rdi
    8707:	e8 64 ca ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    870c:	48 8b 05 ad 08 03 00 	mov    0x308ad(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8713:	48 89 c2             	mov    %rax,%rdx
    8716:	48 8d 05 23 06 03 00 	lea    0x30623(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    871d:	48 89 c6             	mov    %rax,%rsi
    8720:	48 89 df             	mov    %rbx,%rdi
    8723:	e8 68 d2 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return pipelineLayout;
    8728:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    872c:	eb 16                	jmp    8744 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    872e:	49 89 c4             	mov    %rax,%r12
    8731:	48 89 df             	mov    %rbx,%rdi
    8734:	e8 17 cc ff ff       	call   5350 <__cxa_free_exception@plt>
    8739:	4c 89 e0             	mov    %r12,%rax
    873c:	48 89 c7             	mov    %rax,%rdi
    873f:	e8 bc d2 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8744:	48 83 c4 30          	add    $0x30,%rsp
    8748:	5b                   	pop    %rbx
    8749:	41 5c                	pop    %r12
    874b:	5d                   	pop    %rbp
    874c:	c3                   	ret

000000000000874d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    874d:	55                   	push   %rbp
    874e:	48 89 e5             	mov    %rsp,%rbp
    8751:	41 54                	push   %r12
    8753:	53                   	push   %rbx
    8754:	48 83 ec 30          	sub    $0x30,%rsp
    8758:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    875c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8760:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    8764:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8768:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    876c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    8770:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8774:	48 89 c7             	mov    %rax,%rdi
    8777:	e8 64 cb ff ff       	call   52e0 <vkCreateRenderPass@plt>
    877c:	85 c0                	test   %eax,%eax
    877e:	0f 95 c0             	setne  %al
    8781:	84 c0                	test   %al,%al
    8783:	74 3b                	je     87c0 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    8785:	bf 10 00 00 00       	mov    $0x10,%edi
    878a:	e8 91 ca ff ff       	call   5220 <__cxa_allocate_exception@plt>
    878f:	48 89 c3             	mov    %rax,%rbx
    8792:	48 8d 05 3f bd 01 00 	lea    0x1bd3f(%rip),%rax        # 244d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    8799:	48 89 c6             	mov    %rax,%rsi
    879c:	48 89 df             	mov    %rbx,%rdi
    879f:	e8 cc c9 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    87a4:	48 8b 05 15 08 03 00 	mov    0x30815(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    87ab:	48 89 c2             	mov    %rax,%rdx
    87ae:	48 8d 05 8b 05 03 00 	lea    0x3058b(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    87b5:	48 89 c6             	mov    %rax,%rsi
    87b8:	48 89 df             	mov    %rbx,%rdi
    87bb:	e8 d0 d1 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return renderPass;
    87c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87c4:	eb 16                	jmp    87dc <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    87c6:	49 89 c4             	mov    %rax,%r12
    87c9:	48 89 df             	mov    %rbx,%rdi
    87cc:	e8 7f cb ff ff       	call   5350 <__cxa_free_exception@plt>
    87d1:	4c 89 e0             	mov    %r12,%rax
    87d4:	48 89 c7             	mov    %rax,%rdi
    87d7:	e8 24 d2 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    87dc:	48 83 c4 30          	add    $0x30,%rsp
    87e0:	5b                   	pop    %rbx
    87e1:	41 5c                	pop    %r12
    87e3:	5d                   	pop    %rbp
    87e4:	c3                   	ret

00000000000087e5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    87e5:	55                   	push   %rbp
    87e6:	48 89 e5             	mov    %rsp,%rbp
    87e9:	41 54                	push   %r12
    87eb:	53                   	push   %rbx
    87ec:	48 83 ec 30          	sub    $0x30,%rsp
    87f0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    87f4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    87f8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    87fc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8800:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8804:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    8808:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    880c:	48 89 c7             	mov    %rax,%rdi
    880f:	e8 5c cf ff ff       	call   5770 <vkCreateFramebuffer@plt>
    8814:	85 c0                	test   %eax,%eax
    8816:	0f 95 c0             	setne  %al
    8819:	84 c0                	test   %al,%al
    881b:	74 3b                	je     8858 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    881d:	bf 10 00 00 00       	mov    $0x10,%edi
    8822:	e8 f9 c9 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    8827:	48 89 c3             	mov    %rax,%rbx
    882a:	48 8d 05 c9 bc 01 00 	lea    0x1bcc9(%rip),%rax        # 244fa <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x102>
    8831:	48 89 c6             	mov    %rax,%rsi
    8834:	48 89 df             	mov    %rbx,%rdi
    8837:	e8 34 c9 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    883c:	48 8b 05 7d 07 03 00 	mov    0x3077d(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8843:	48 89 c2             	mov    %rax,%rdx
    8846:	48 8d 05 f3 04 03 00 	lea    0x304f3(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    884d:	48 89 c6             	mov    %rax,%rsi
    8850:	48 89 df             	mov    %rbx,%rdi
    8853:	e8 38 d1 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return framebuffer;
    8858:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    885c:	eb 16                	jmp    8874 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    885e:	49 89 c4             	mov    %rax,%r12
    8861:	48 89 df             	mov    %rbx,%rdi
    8864:	e8 e7 ca ff ff       	call   5350 <__cxa_free_exception@plt>
    8869:	4c 89 e0             	mov    %r12,%rax
    886c:	48 89 c7             	mov    %rax,%rdi
    886f:	e8 8c d1 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8874:	48 83 c4 30          	add    $0x30,%rsp
    8878:	5b                   	pop    %rbx
    8879:	41 5c                	pop    %r12
    887b:	5d                   	pop    %rbp
    887c:	c3                   	ret

000000000000887d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    887d:	55                   	push   %rbp
    887e:	48 89 e5             	mov    %rsp,%rbp
    8881:	41 54                	push   %r12
    8883:	53                   	push   %rbx
    8884:	48 83 ec 30          	sub    $0x30,%rsp
    8888:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    888c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8890:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    8894:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    889b:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    889c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    88a0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    88a4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    88a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88ac:	48 89 c7             	mov    %rax,%rdi
    88af:	e8 1c c9 ff ff       	call   51d0 <vkCreateCommandPool@plt>
    88b4:	85 c0                	test   %eax,%eax
    88b6:	0f 95 c0             	setne  %al
    88b9:	84 c0                	test   %al,%al
    88bb:	74 3b                	je     88f8 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    88bd:	bf 10 00 00 00       	mov    $0x10,%edi
    88c2:	e8 59 c9 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    88c7:	48 89 c3             	mov    %rax,%rbx
    88ca:	48 8d 05 47 bc 01 00 	lea    0x1bc47(%rip),%rax        # 24518 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x120>
    88d1:	48 89 c6             	mov    %rax,%rsi
    88d4:	48 89 df             	mov    %rbx,%rdi
    88d7:	e8 94 c8 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    88dc:	48 8b 05 dd 06 03 00 	mov    0x306dd(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    88e3:	48 89 c2             	mov    %rax,%rdx
    88e6:	48 8d 05 53 04 03 00 	lea    0x30453(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    88ed:	48 89 c6             	mov    %rax,%rsi
    88f0:	48 89 df             	mov    %rbx,%rdi
    88f3:	e8 98 d0 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return commandPool;
    88f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88fc:	eb 16                	jmp    8914 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    88fe:	49 89 c4             	mov    %rax,%r12
    8901:	48 89 df             	mov    %rbx,%rdi
    8904:	e8 47 ca ff ff       	call   5350 <__cxa_free_exception@plt>
    8909:	4c 89 e0             	mov    %r12,%rax
    890c:	48 89 c7             	mov    %rax,%rdi
    890f:	e8 ec d0 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8914:	48 83 c4 30          	add    $0x30,%rsp
    8918:	5b                   	pop    %rbx
    8919:	41 5c                	pop    %r12
    891b:	5d                   	pop    %rbp
    891c:	c3                   	ret

000000000000891d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    891d:	55                   	push   %rbp
    891e:	48 89 e5             	mov    %rsp,%rbp
    8921:	41 54                	push   %r12
    8923:	53                   	push   %rbx
    8924:	48 83 ec 30          	sub    $0x30,%rsp
    8928:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    892c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8930:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    8934:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    8938:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    893c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    8940:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8944:	48 89 c7             	mov    %rax,%rdi
    8947:	e8 74 ce ff ff       	call   57c0 <vkCreateSemaphore@plt>
    894c:	85 c0                	test   %eax,%eax
    894e:	0f 95 c0             	setne  %al
    8951:	84 c0                	test   %al,%al
    8953:	74 3b                	je     8990 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    8955:	bf 10 00 00 00       	mov    $0x10,%edi
    895a:	e8 c1 c8 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    895f:	48 89 c3             	mov    %rax,%rbx
    8962:	48 8d 05 ce bb 01 00 	lea    0x1bbce(%rip),%rax        # 24537 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13f>
    8969:	48 89 c6             	mov    %rax,%rsi
    896c:	48 89 df             	mov    %rbx,%rdi
    896f:	e8 fc c7 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    8974:	48 8b 05 45 06 03 00 	mov    0x30645(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    897b:	48 89 c2             	mov    %rax,%rdx
    897e:	48 8d 05 bb 03 03 00 	lea    0x303bb(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8985:	48 89 c6             	mov    %rax,%rsi
    8988:	48 89 df             	mov    %rbx,%rdi
    898b:	e8 00 d0 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return semaphore;
    8990:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8994:	eb 16                	jmp    89ac <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    8996:	49 89 c4             	mov    %rax,%r12
    8999:	48 89 df             	mov    %rbx,%rdi
    899c:	e8 af c9 ff ff       	call   5350 <__cxa_free_exception@plt>
    89a1:	4c 89 e0             	mov    %r12,%rax
    89a4:	48 89 c7             	mov    %rax,%rdi
    89a7:	e8 54 d0 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    89ac:	48 83 c4 30          	add    $0x30,%rsp
    89b0:	5b                   	pop    %rbx
    89b1:	41 5c                	pop    %r12
    89b3:	5d                   	pop    %rbp
    89b4:	c3                   	ret

00000000000089b5 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    89b5:	55                   	push   %rbp
    89b6:	48 89 e5             	mov    %rsp,%rbp
    89b9:	41 54                	push   %r12
    89bb:	53                   	push   %rbx
    89bc:	48 83 ec 30          	sub    $0x30,%rsp
    89c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    89c4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    89c8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    89cc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    89d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    89d4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    89d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89dc:	48 89 c7             	mov    %rax,%rdi
    89df:	e8 ec cc ff ff       	call   56d0 <vkCreateFence@plt>
    89e4:	85 c0                	test   %eax,%eax
    89e6:	0f 95 c0             	setne  %al
    89e9:	84 c0                	test   %al,%al
    89eb:	74 3b                	je     8a28 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    89ed:	bf 10 00 00 00       	mov    $0x10,%edi
    89f2:	e8 29 c8 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    89f7:	48 89 c3             	mov    %rax,%rbx
    89fa:	48 8d 05 52 bb 01 00 	lea    0x1bb52(%rip),%rax        # 24553 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x15b>
    8a01:	48 89 c6             	mov    %rax,%rsi
    8a04:	48 89 df             	mov    %rbx,%rdi
    8a07:	e8 64 c7 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    8a0c:	48 8b 05 ad 05 03 00 	mov    0x305ad(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8a13:	48 89 c2             	mov    %rax,%rdx
    8a16:	48 8d 05 23 03 03 00 	lea    0x30323(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8a1d:	48 89 c6             	mov    %rax,%rsi
    8a20:	48 89 df             	mov    %rbx,%rdi
    8a23:	e8 68 cf ff ff       	call   5990 <__cxa_throw@plt>
  }
  return fence;
    8a28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a2c:	eb 16                	jmp    8a44 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    8a2e:	49 89 c4             	mov    %rax,%r12
    8a31:	48 89 df             	mov    %rbx,%rdi
    8a34:	e8 17 c9 ff ff       	call   5350 <__cxa_free_exception@plt>
    8a39:	4c 89 e0             	mov    %r12,%rax
    8a3c:	48 89 c7             	mov    %rax,%rdi
    8a3f:	e8 bc cf ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    8a44:	48 83 c4 30          	add    $0x30,%rsp
    8a48:	5b                   	pop    %rbx
    8a49:	41 5c                	pop    %r12
    8a4b:	5d                   	pop    %rbp
    8a4c:	c3                   	ret

0000000000008a4d <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    8a4d:	55                   	push   %rbp
    8a4e:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    8a51:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    8a56:	5d                   	pop    %rbp
    8a57:	c3                   	ret

0000000000008a58 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    8a58:	55                   	push   %rbp
    8a59:	48 89 e5             	mov    %rsp,%rbp
    8a5c:	48 83 ec 10          	sub    $0x10,%rsp
    8a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    8a64:	e8 e4 ff ff ff       	call   8a4d <_ZSt23__is_constant_evaluatedv>
    8a69:	84 c0                	test   %al,%al
    8a6b:	74 0e                	je     8a7b <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    8a6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a71:	48 89 c7             	mov    %rax,%rdi
    8a74:	e8 23 00 00 00       	call   8a9c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    8a79:	eb 0d                	jmp    8a88 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    8a7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a7f:	48 89 c7             	mov    %rax,%rdi
    8a82:	e8 69 c7 ff ff       	call   51f0 <strlen@plt>
    8a87:	90                   	nop
      }
    8a88:	c9                   	leave
    8a89:	c3                   	ret

0000000000008a8a <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    8a8a:	55                   	push   %rbp
    8a8b:	48 89 e5             	mov    %rsp,%rbp
    8a8e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    8a91:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8a94:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8a97:	0b 45 f8             	or     -0x8(%rbp),%eax
    8a9a:	5d                   	pop    %rbp
    8a9b:	c3                   	ret

0000000000008a9c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    8a9c:	55                   	push   %rbp
    8a9d:	48 89 e5             	mov    %rsp,%rbp
    8aa0:	48 83 ec 20          	sub    $0x20,%rsp
    8aa4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    8aa8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8aaf:	00 
      while (!eq(__p[__i], char_type()))
    8ab0:	eb 05                	jmp    8ab7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    8ab2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    8ab7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    8abb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac3:	48 01 c2             	add    %rax,%rdx
    8ac6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    8aca:	48 89 c6             	mov    %rax,%rsi
    8acd:	48 89 d7             	mov    %rdx,%rdi
    8ad0:	e8 73 02 00 00       	call   8d48 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    8ad5:	83 f0 01             	xor    $0x1,%eax
    8ad8:	84 c0                	test   %al,%al
    8ada:	75 d6                	jne    8ab2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    8adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8ae0:	c9                   	leave
    8ae1:	c3                   	ret

0000000000008ae2 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8ae2:	55                   	push   %rbp
    8ae3:	48 89 e5             	mov    %rsp,%rbp
    8ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aee:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af6:	48 8b 00             	mov    (%rax),%rax
    8af9:	48 29 c2             	sub    %rax,%rdx
    8afc:	48 89 d0             	mov    %rdx,%rax
    8aff:	5d                   	pop    %rbp
    8b00:	c3                   	ret
    8b01:	90                   	nop

0000000000008b02 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    8b02:	55                   	push   %rbp
    8b03:	48 89 e5             	mov    %rsp,%rbp
    8b06:	48 83 ec 10          	sub    $0x10,%rsp
    8b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b12:	48 8b 10             	mov    (%rax),%rdx
    8b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b19:	48 89 d6             	mov    %rdx,%rsi
    8b1c:	48 89 c7             	mov    %rax,%rdi
    8b1f:	e8 46 02 00 00       	call   8d6a <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    8b24:	c9                   	leave
    8b25:	c3                   	ret

0000000000008b26 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    8b26:	55                   	push   %rbp
    8b27:	48 89 e5             	mov    %rsp,%rbp
    8b2a:	53                   	push   %rbx
    8b2b:	48 83 ec 38          	sub    $0x38,%rsp
    8b2f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8b33:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8b37:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    8b3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b3f:	48 89 c7             	mov    %rax,%rdi
    8b42:	e8 11 ff ff ff       	call   8a58 <_ZNSt11char_traitsIcE6lengthEPKc>
    8b47:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    8b4b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    8b4f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8b53:	48 89 d6             	mov    %rdx,%rsi
    8b56:	48 89 c7             	mov    %rax,%rdi
    8b59:	e8 02 c6 ff ff       	call   5160 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    8b5e:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    8b62:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    8b66:	48 89 d6             	mov    %rdx,%rsi
    8b69:	48 89 c7             	mov    %rax,%rdi
    8b6c:	e8 0b 02 00 00       	call   8d7c <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    8b71:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    8b75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b79:	48 89 d6             	mov    %rdx,%rsi
    8b7c:	48 89 c7             	mov    %rax,%rdi
    8b7f:	e8 1c ce ff ff       	call   59a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    8b84:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    8b88:	48 89 c7             	mov    %rax,%rdi
    8b8b:	e8 40 ca ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    8b90:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    8b94:	48 89 c7             	mov    %rax,%rdi
    8b97:	e8 34 ca ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    8b9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8ba0:	48 89 c7             	mov    %rax,%rdi
    8ba3:	e8 88 c7 ff ff       	call   5330 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    8ba8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bac:	48 01 c2             	add    %rax,%rdx
    8baf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bb3:	48 89 d6             	mov    %rdx,%rsi
    8bb6:	48 89 c7             	mov    %rax,%rdi
    8bb9:	e8 02 cd ff ff       	call   58c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    8bbe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bc2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    8bc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bca:	48 89 ce             	mov    %rcx,%rsi
    8bcd:	48 89 c7             	mov    %rax,%rdi
    8bd0:	e8 8b c4 ff ff       	call   5060 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    8bd5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8bd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bdd:	48 89 d6             	mov    %rdx,%rsi
    8be0:	48 89 c7             	mov    %rax,%rdi
    8be3:	e8 d8 ce ff ff       	call   5ac0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    8be8:	eb 34                	jmp    8c1e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    8bea:	48 89 c3             	mov    %rax,%rbx
    8bed:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    8bf1:	48 89 c7             	mov    %rax,%rdi
    8bf4:	e8 d7 c9 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    8bf9:	48 89 d8             	mov    %rbx,%rax
    8bfc:	48 89 c7             	mov    %rax,%rdi
    8bff:	e8 fc cd ff ff       	call   5a00 <_Unwind_Resume@plt>
    }
    8c04:	48 89 c3             	mov    %rax,%rbx
    8c07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c0b:	48 89 c7             	mov    %rax,%rdi
    8c0e:	e8 d5 ce ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    8c13:	48 89 d8             	mov    %rbx,%rax
    8c16:	48 89 c7             	mov    %rax,%rdi
    8c19:	e8 e2 cd ff ff       	call   5a00 <_Unwind_Resume@plt>
    8c1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c22:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c26:	c9                   	leave
    8c27:	c3                   	ret

0000000000008c28 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    8c28:	55                   	push   %rbp
    8c29:	48 89 e5             	mov    %rsp,%rbp
    8c2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c34:	48 8b 00             	mov    (%rax),%rax
    8c37:	5d                   	pop    %rbp
    8c38:	c3                   	ret
    8c39:	90                   	nop

0000000000008c3a <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8c3a:	55                   	push   %rbp
    8c3b:	48 89 e5             	mov    %rsp,%rbp
    8c3e:	53                   	push   %rbx
    8c3f:	48 83 ec 28          	sub    $0x28,%rsp
    8c43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c4b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8c4f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8c53:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c5b:	48 89 d6             	mov    %rdx,%rsi
    8c5e:	48 89 c7             	mov    %rax,%rdi
    8c61:	e8 3f 01 00 00       	call   8da5 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    8c66:	48 89 c1             	mov    %rax,%rcx
    8c69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c6d:	48 89 c2             	mov    %rax,%rdx
    8c70:	48 89 ce             	mov    %rcx,%rsi
    8c73:	48 89 df             	mov    %rbx,%rdi
    8c76:	e8 a7 01 00 00       	call   8e22 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    8c7b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c83:	48 89 d6             	mov    %rdx,%rsi
    8c86:	48 89 c7             	mov    %rax,%rdi
    8c89:	e8 36 02 00 00       	call   8ec4 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    8c8e:	eb 1a                	jmp    8caa <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    8c90:	48 89 c3             	mov    %rax,%rbx
    8c93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c97:	48 89 c7             	mov    %rax,%rdi
    8c9a:	e8 e1 01 00 00       	call   8e80 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    8c9f:	48 89 d8             	mov    %rbx,%rax
    8ca2:	48 89 c7             	mov    %rax,%rdi
    8ca5:	e8 56 cd ff ff       	call   5a00 <_Unwind_Resume@plt>
    8caa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cae:	c9                   	leave
    8caf:	c3                   	ret

0000000000008cb0 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8cb0:	55                   	push   %rbp
    8cb1:	48 89 e5             	mov    %rsp,%rbp
    8cb4:	48 83 ec 10          	sub    $0x10,%rsp
    8cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc0:	48 89 c7             	mov    %rax,%rdi
    8cc3:	e8 3c 02 00 00       	call   8f04 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    8cc8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ccf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd7:	48 8b 00             	mov    (%rax),%rax
    8cda:	48 89 ce             	mov    %rcx,%rsi
    8cdd:	48 89 c7             	mov    %rax,%rdi
    8ce0:	e8 2d 02 00 00       	call   8f12 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    8ce5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce9:	48 89 c7             	mov    %rax,%rdi
    8cec:	e8 8f 01 00 00       	call   8e80 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    8cf1:	90                   	nop
    8cf2:	c9                   	leave
    8cf3:	c3                   	ret

0000000000008cf4 <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    8cf4:	55                   	push   %rbp
    8cf5:	48 89 e5             	mov    %rsp,%rbp
    8cf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    8d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d08:	48 89 10             	mov    %rdx,(%rax)
    8d0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d0f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    8d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d1a:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    8d21:	90                   	nop
    8d22:	5d                   	pop    %rbp
    8d23:	c3                   	ret

0000000000008d24 <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8d24:	55                   	push   %rbp
    8d25:	48 89 e5             	mov    %rsp,%rbp
    8d28:	48 83 ec 10          	sub    $0x10,%rsp
    8d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d34:	48 8b 10             	mov    (%rax),%rdx
    8d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d3b:	48 89 d6             	mov    %rdx,%rsi
    8d3e:	48 89 c7             	mov    %rax,%rdi
    8d41:	e8 24 00 00 00       	call   8d6a <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    8d46:	c9                   	leave
    8d47:	c3                   	ret

0000000000008d48 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    8d48:	55                   	push   %rbp
    8d49:	48 89 e5             	mov    %rsp,%rbp
    8d4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    8d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d58:	0f b6 10             	movzbl (%rax),%edx
    8d5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d5f:	0f b6 00             	movzbl (%rax),%eax
    8d62:	38 c2                	cmp    %al,%dl
    8d64:	0f 94 c0             	sete   %al
    8d67:	5d                   	pop    %rbp
    8d68:	c3                   	ret
    8d69:	90                   	nop

0000000000008d6a <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8d6a:	55                   	push   %rbp
    8d6b:	48 89 e5             	mov    %rsp,%rbp
    8d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8d76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d7a:	5d                   	pop    %rbp
    8d7b:	c3                   	ret

0000000000008d7c <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    8d7c:	55                   	push   %rbp
    8d7d:	48 89 e5             	mov    %rsp,%rbp
    8d80:	48 83 ec 10          	sub    $0x10,%rsp
    8d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    8d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d94:	48 89 d6             	mov    %rdx,%rsi
    8d97:	48 89 c7             	mov    %rax,%rdi
    8d9a:	e8 a8 01 00 00       	call   8f47 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    8d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8da3:	c9                   	leave
    8da4:	c3                   	ret

0000000000008da5 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8da5:	55                   	push   %rbp
    8da6:	48 89 e5             	mov    %rsp,%rbp
    8da9:	53                   	push   %rbx
    8daa:	48 83 ec 28          	sub    $0x28,%rsp
    8dae:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8db2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8db6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8dba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8dbe:	48 89 d6             	mov    %rdx,%rsi
    8dc1:	48 89 c7             	mov    %rax,%rdi
    8dc4:	e8 c7 c4 ff ff       	call   5290 <_ZNSaIcEC1ERKS_@plt>
    8dc9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8dcd:	48 89 c7             	mov    %rax,%rdi
    8dd0:	e8 9b 01 00 00       	call   8f70 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    8dd5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8dd9:	0f 92 c3             	setb   %bl
    8ddc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8de0:	48 89 c7             	mov    %rax,%rdi
    8de3:	e8 e8 c7 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    8de8:	84 db                	test   %bl,%bl
    8dea:	74 0f                	je     8dfb <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    8dec:	48 8d 05 7d b7 01 00 	lea    0x1b77d(%rip),%rax        # 24570 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x178>
    8df3:	48 89 c7             	mov    %rax,%rdi
    8df6:	e8 55 c4 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8dfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8dff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e03:	c9                   	leave
    8e04:	c3                   	ret
    8e05:	90                   	nop

0000000000008e06 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    8e06:	55                   	push   %rbp
    8e07:	48 89 e5             	mov    %rsp,%rbp
    8e0a:	48 83 ec 10          	sub    $0x10,%rsp
    8e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e16:	48 89 c7             	mov    %rax,%rdi
    8e19:	e8 72 c2 ff ff       	call   5090 <_ZNSaIcED2Ev@plt>
    8e1e:	90                   	nop
    8e1f:	c9                   	leave
    8e20:	c3                   	ret
    8e21:	90                   	nop

0000000000008e22 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8e22:	55                   	push   %rbp
    8e23:	48 89 e5             	mov    %rsp,%rbp
    8e26:	53                   	push   %rbx
    8e27:	48 83 ec 28          	sub    $0x28,%rsp
    8e2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8e33:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8e37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e3f:	48 89 d6             	mov    %rdx,%rsi
    8e42:	48 89 c7             	mov    %rax,%rdi
    8e45:	e8 68 01 00 00       	call   8fb2 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    8e4a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8e4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e52:	48 89 d6             	mov    %rdx,%rsi
    8e55:	48 89 c7             	mov    %rax,%rdi
    8e58:	e8 87 01 00 00       	call   8fe4 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    8e5d:	eb 1a                	jmp    8e79 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    8e5f:	48 89 c3             	mov    %rax,%rbx
    8e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e66:	48 89 c7             	mov    %rax,%rdi
    8e69:	e8 98 ff ff ff       	call   8e06 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    8e6e:	48 89 d8             	mov    %rbx,%rax
    8e71:	48 89 c7             	mov    %rax,%rdi
    8e74:	e8 87 cb ff ff       	call   5a00 <_Unwind_Resume@plt>
    8e79:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e7d:	c9                   	leave
    8e7e:	c3                   	ret
    8e7f:	90                   	nop

0000000000008e80 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8e80:	55                   	push   %rbp
    8e81:	48 89 e5             	mov    %rsp,%rbp
    8e84:	48 83 ec 10          	sub    $0x10,%rsp
    8e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e90:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e98:	48 8b 00             	mov    (%rax),%rax
    8e9b:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    8e9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea2:	48 8b 08             	mov    (%rax),%rcx
    8ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea9:	48 89 ce             	mov    %rcx,%rsi
    8eac:	48 89 c7             	mov    %rax,%rdi
    8eaf:	e8 82 01 00 00       	call   9036 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    8eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eb8:	48 89 c7             	mov    %rax,%rdi
    8ebb:	e8 46 ff ff ff       	call   8e06 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    8ec0:	90                   	nop
    8ec1:	c9                   	leave
    8ec2:	c3                   	ret
    8ec3:	90                   	nop

0000000000008ec4 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8ec4:	55                   	push   %rbp
    8ec5:	48 89 e5             	mov    %rsp,%rbp
    8ec8:	48 83 ec 10          	sub    $0x10,%rsp
    8ecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ed0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed8:	48 89 c7             	mov    %rax,%rdi
    8edb:	e8 24 00 00 00       	call   8f04 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    8ee0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee7:	48 8b 00             	mov    (%rax),%rax
    8eea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8eee:	48 89 ce             	mov    %rcx,%rsi
    8ef1:	48 89 c7             	mov    %rax,%rdi
    8ef4:	e8 72 01 00 00       	call   906b <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8ef9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8efd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8f01:	90                   	nop
    8f02:	c9                   	leave
    8f03:	c3                   	ret

0000000000008f04 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8f04:	55                   	push   %rbp
    8f05:	48 89 e5             	mov    %rsp,%rbp
    8f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f10:	5d                   	pop    %rbp
    8f11:	c3                   	ret

0000000000008f12 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8f12:	55                   	push   %rbp
    8f13:	48 89 e5             	mov    %rsp,%rbp
    8f16:	48 83 ec 20          	sub    $0x20,%rsp
    8f1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8f26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f2e:	48 89 d6             	mov    %rdx,%rsi
    8f31:	48 89 c7             	mov    %rax,%rdi
    8f34:	e8 5b 01 00 00       	call   9094 <_ZSt8_DestroyIPcEvT_S1_>
    }
    8f39:	90                   	nop
    8f3a:	c9                   	leave
    8f3b:	c3                   	ret

0000000000008f3c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    8f3c:	55                   	push   %rbp
    8f3d:	48 89 e5             	mov    %rsp,%rbp
    8f40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8f44:	90                   	nop
    8f45:	5d                   	pop    %rbp
    8f46:	c3                   	ret

0000000000008f47 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    8f47:	55                   	push   %rbp
    8f48:	48 89 e5             	mov    %rsp,%rbp
    8f4b:	48 83 ec 10          	sub    $0x10,%rsp
    8f4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    8f57:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f5f:	48 89 d6             	mov    %rdx,%rsi
    8f62:	48 89 c7             	mov    %rax,%rdi
    8f65:	e8 26 c3 ff ff       	call   5290 <_ZNSaIcEC1ERKS_@plt>
    8f6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f6e:	c9                   	leave
    8f6f:	c3                   	ret

0000000000008f70 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    8f70:	55                   	push   %rbp
    8f71:	48 89 e5             	mov    %rsp,%rbp
    8f74:	48 83 ec 20          	sub    $0x20,%rsp
    8f78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    8f7c:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    8f83:	ff ff 7f 
    8f86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    8f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f8e:	48 89 c7             	mov    %rax,%rdi
    8f91:	e8 52 01 00 00       	call   90e8 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    8f96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    8f9a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    8f9e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8fa2:	48 89 d6             	mov    %rdx,%rsi
    8fa5:	48 89 c7             	mov    %rax,%rdi
    8fa8:	e8 e4 de ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    8fad:	48 8b 00             	mov    (%rax),%rax
      }
    8fb0:	c9                   	leave
    8fb1:	c3                   	ret

0000000000008fb2 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    8fb2:	55                   	push   %rbp
    8fb3:	48 89 e5             	mov    %rsp,%rbp
    8fb6:	48 83 ec 10          	sub    $0x10,%rsp
    8fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    8fc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fca:	48 89 d6             	mov    %rdx,%rsi
    8fcd:	48 89 c7             	mov    %rax,%rdi
    8fd0:	e8 3b c8 ff ff       	call   5810 <_ZNSaIcEC2ERKS_@plt>
    8fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd9:	48 89 c7             	mov    %rax,%rdi
    8fdc:	e8 21 01 00 00       	call   9102 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    8fe1:	90                   	nop
    8fe2:	c9                   	leave
    8fe3:	c3                   	ret

0000000000008fe4 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    8fe4:	55                   	push   %rbp
    8fe5:	48 89 e5             	mov    %rsp,%rbp
    8fe8:	48 83 ec 10          	sub    $0x10,%rsp
    8fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    8ff4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ffc:	48 89 d6             	mov    %rdx,%rsi
    8fff:	48 89 c7             	mov    %rax,%rdi
    9002:	e8 29 01 00 00       	call   9130 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    9007:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    900b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    900e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9012:	48 8b 10             	mov    (%rax),%rdx
    9015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9019:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    901d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9021:	48 8b 10             	mov    (%rax),%rdx
    9024:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9028:	48 01 c2             	add    %rax,%rdx
    902b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    902f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9033:	90                   	nop
    9034:	c9                   	leave
    9035:	c3                   	ret

0000000000009036 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    9036:	55                   	push   %rbp
    9037:	48 89 e5             	mov    %rsp,%rbp
    903a:	48 83 ec 20          	sub    $0x20,%rsp
    903e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9046:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    904a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    904f:	74 17                	je     9068 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9055:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9059:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    905d:	48 89 ce             	mov    %rcx,%rsi
    9060:	48 89 c7             	mov    %rax,%rdi
    9063:	e8 52 00 00 00       	call   90ba <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    9068:	90                   	nop
    9069:	c9                   	leave
    906a:	c3                   	ret

000000000000906b <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    906b:	55                   	push   %rbp
    906c:	48 89 e5             	mov    %rsp,%rbp
    906f:	48 83 ec 20          	sub    $0x20,%rsp
    9073:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9077:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    907b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    907f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9087:	48 89 d6             	mov    %rdx,%rsi
    908a:	48 89 c7             	mov    %rax,%rdi
    908d:	e8 d1 00 00 00       	call   9163 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    9092:	c9                   	leave
    9093:	c3                   	ret

0000000000009094 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9094:	55                   	push   %rbp
    9095:	48 89 e5             	mov    %rsp,%rbp
    9098:	48 83 ec 10          	sub    $0x10,%rsp
    909c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    90a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    90a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ac:	48 89 d6             	mov    %rdx,%rsi
    90af:	48 89 c7             	mov    %rax,%rdi
    90b2:	e8 d5 00 00 00       	call   918c <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    90b7:	90                   	nop
    90b8:	c9                   	leave
    90b9:	c3                   	ret

00000000000090ba <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    90ba:	55                   	push   %rbp
    90bb:	48 89 e5             	mov    %rsp,%rbp
    90be:	48 83 ec 20          	sub    $0x20,%rsp
    90c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    90ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    90ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    90d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90da:	48 89 ce             	mov    %rcx,%rsi
    90dd:	48 89 c7             	mov    %rax,%rdi
    90e0:	e8 c5 00 00 00       	call   91aa <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    90e5:	90                   	nop
    90e6:	c9                   	leave
    90e7:	c3                   	ret

00000000000090e8 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    90e8:	55                   	push   %rbp
    90e9:	48 89 e5             	mov    %rsp,%rbp
    90ec:	48 83 ec 10          	sub    $0x10,%rsp
    90f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    90f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90f8:	48 89 c7             	mov    %rax,%rdi
    90fb:	e8 d4 00 00 00       	call   91d4 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    9100:	c9                   	leave
    9101:	c3                   	ret

0000000000009102 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    9102:	55                   	push   %rbp
    9103:	48 89 e5             	mov    %rsp,%rbp
    9106:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    910a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    910e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9119:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9120:	00 
    9121:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9125:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    912c:	00 
	{ }
    912d:	90                   	nop
    912e:	5d                   	pop    %rbp
    912f:	c3                   	ret

0000000000009130 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    9130:	55                   	push   %rbp
    9131:	48 89 e5             	mov    %rsp,%rbp
    9134:	48 83 ec 10          	sub    $0x10,%rsp
    9138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    913c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    9140:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9145:	74 15                	je     915c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    9147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    914b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    914f:	48 89 d6             	mov    %rdx,%rsi
    9152:	48 89 c7             	mov    %rax,%rdi
    9155:	e8 94 00 00 00       	call   91ee <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    915a:	eb 05                	jmp    9161 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    915c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    9161:	c9                   	leave
    9162:	c3                   	ret

0000000000009163 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    9163:	55                   	push   %rbp
    9164:	48 89 e5             	mov    %rsp,%rbp
    9167:	48 83 ec 20          	sub    $0x20,%rsp
    916b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    916f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    9173:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    9177:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    917b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    917f:	48 89 d6             	mov    %rdx,%rsi
    9182:	48 89 c7             	mov    %rax,%rdi
    9185:	e8 8e 00 00 00       	call   9218 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    918a:	c9                   	leave
    918b:	c3                   	ret

000000000000918c <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    918c:	55                   	push   %rbp
    918d:	48 89 e5             	mov    %rsp,%rbp
    9190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9198:	90                   	nop
    9199:	5d                   	pop    %rbp
    919a:	c3                   	ret

000000000000919b <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    919b:	55                   	push   %rbp
    919c:	48 89 e5             	mov    %rsp,%rbp
    919f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    91a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91a7:	5d                   	pop    %rbp
    91a8:	c3                   	ret
    91a9:	90                   	nop

00000000000091aa <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    91aa:	55                   	push   %rbp
    91ab:	48 89 e5             	mov    %rsp,%rbp
    91ae:	48 83 ec 20          	sub    $0x20,%rsp
    91b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    91be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91c6:	48 89 d6             	mov    %rdx,%rsi
    91c9:	48 89 c7             	mov    %rax,%rdi
    91cc:	e8 6f c3 ff ff       	call   5540 <_ZdlPvm@plt>
      }
    91d1:	c9                   	leave
    91d2:	c3                   	ret
    91d3:	90                   	nop

00000000000091d4 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    91d4:	55                   	push   %rbp
    91d5:	48 89 e5             	mov    %rsp,%rbp
    91d8:	48 83 ec 10          	sub    $0x10,%rsp
    91dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    91e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e4:	48 89 c7             	mov    %rax,%rdi
    91e7:	e8 8a 00 00 00       	call   9276 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    91ec:	c9                   	leave
    91ed:	c3                   	ret

00000000000091ee <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    91ee:	55                   	push   %rbp
    91ef:	48 89 e5             	mov    %rsp,%rbp
    91f2:	48 83 ec 10          	sub    $0x10,%rsp
    91f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    91fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9206:	ba 00 00 00 00       	mov    $0x0,%edx
    920b:	48 89 ce             	mov    %rcx,%rsi
    920e:	48 89 c7             	mov    %rax,%rdi
    9211:	e8 74 00 00 00       	call   928a <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    9216:	c9                   	leave
    9217:	c3                   	ret

0000000000009218 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9218:	55                   	push   %rbp
    9219:	48 89 e5             	mov    %rsp,%rbp
    921c:	48 83 ec 20          	sub    $0x20,%rsp
    9220:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9224:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9228:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    922d:	74 40                	je     926f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    922f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9233:	48 89 c7             	mov    %rax,%rdi
    9236:	e8 60 ff ff ff       	call   919b <_ZSt11__addressofIcEPT_RS0_>
    923b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    923f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9243:	48 89 c7             	mov    %rax,%rdi
    9246:	e8 87 00 00 00       	call   92d2 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    924b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    9250:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9254:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9258:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    925c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9260:	48 89 ce             	mov    %rcx,%rsi
    9263:	48 89 c7             	mov    %rax,%rdi
    9266:	e8 8a 00 00 00       	call   92f5 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    926b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    926f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9273:	c9                   	leave
    9274:	c3                   	ret
    9275:	90                   	nop

0000000000009276 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9276:	55                   	push   %rbp
    9277:	48 89 e5             	mov    %rsp,%rbp
    927a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    927e:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    9285:	ff ff 7f 
      }
    9288:	5d                   	pop    %rbp
    9289:	c3                   	ret

000000000000928a <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    928a:	55                   	push   %rbp
    928b:	48 89 e5             	mov    %rsp,%rbp
    928e:	48 83 ec 20          	sub    $0x20,%rsp
    9292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    929a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    929e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a2:	48 89 c7             	mov    %rax,%rdi
    92a5:	e8 cc ff ff ff       	call   9276 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    92aa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    92ae:	0f 92 c0             	setb   %al
    92b1:	0f b6 c0             	movzbl %al,%eax
    92b4:	48 85 c0             	test   %rax,%rax
    92b7:	0f 95 c0             	setne  %al
    92ba:	84 c0                	test   %al,%al
    92bc:	74 05                	je     92c3 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    92be:	e8 8d be ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    92c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92c7:	48 89 c7             	mov    %rax,%rdi
    92ca:	e8 51 c2 ff ff       	call   5520 <_Znwm@plt>
    92cf:	90                   	nop
      }
    92d0:	c9                   	leave
    92d1:	c3                   	ret

00000000000092d2 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    92d2:	55                   	push   %rbp
    92d3:	48 89 e5             	mov    %rsp,%rbp
    92d6:	48 83 ec 10          	sub    $0x10,%rsp
    92da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    92de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92e2:	48 89 c6             	mov    %rax,%rsi
    92e5:	bf 01 00 00 00       	mov    $0x1,%edi
    92ea:	e8 79 e5 ff ff       	call   7868 <_ZnwmPv>
    92ef:	c6 00 00             	movb   $0x0,(%rax)
    }
    92f2:	90                   	nop
    92f3:	c9                   	leave
    92f4:	c3                   	ret

00000000000092f5 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    92f5:	55                   	push   %rbp
    92f6:	48 89 e5             	mov    %rsp,%rbp
    92f9:	48 83 ec 20          	sub    $0x20,%rsp
    92fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9301:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9305:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9309:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    930d:	48 89 c7             	mov    %rax,%rdi
    9310:	e8 27 fc ff ff       	call   8f3c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9315:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9319:	48 89 c7             	mov    %rax,%rdi
    931c:	e8 59 e5 ff ff       	call   787a <_ZSt17__size_to_integerm>
    9321:	48 89 c1             	mov    %rax,%rcx
    9324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9328:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    932c:	48 89 ce             	mov    %rcx,%rsi
    932f:	48 89 c7             	mov    %rax,%rdi
    9332:	e8 02 00 00 00       	call   9339 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    9337:	c9                   	leave
    9338:	c3                   	ret

0000000000009339 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9339:	55                   	push   %rbp
    933a:	48 89 e5             	mov    %rsp,%rbp
    933d:	48 83 ec 20          	sub    $0x20,%rsp
    9341:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9345:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9349:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    934d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9352:	75 06                	jne    935a <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9358:	eb 2a                	jmp    9384 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    935a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    935e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9362:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9366:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    936a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    936e:	48 89 ce             	mov    %rcx,%rsi
    9371:	48 89 c7             	mov    %rax,%rdi
    9374:	e8 0d 00 00 00       	call   9386 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    9379:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    937d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9381:	48 01 d0             	add    %rdx,%rax
    }
    9384:	c9                   	leave
    9385:	c3                   	ret

0000000000009386 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    9386:	55                   	push   %rbp
    9387:	48 89 e5             	mov    %rsp,%rbp
    938a:	48 83 ec 20          	sub    $0x20,%rsp
    938e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9392:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9396:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    939a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    939e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a6:	48 89 ce             	mov    %rcx,%rsi
    93a9:	48 89 c7             	mov    %rax,%rdi
    93ac:	e8 03 00 00 00       	call   93b4 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    93b1:	90                   	nop
    93b2:	c9                   	leave
    93b3:	c3                   	ret

00000000000093b4 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    93b4:	55                   	push   %rbp
    93b5:	48 89 e5             	mov    %rsp,%rbp
    93b8:	48 83 ec 30          	sub    $0x30,%rsp
    93bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    93c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    93c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    93cc:	0f b6 00             	movzbl (%rax),%eax
    93cf:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    93d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    93d6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    93da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    93de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    93e3:	74 19                	je     93fe <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    93e5:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    93e9:	0f b6 c8             	movzbl %al,%ecx
    93ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    93f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93f4:	89 ce                	mov    %ecx,%esi
    93f6:	48 89 c7             	mov    %rax,%rdi
    93f9:	e8 72 be ff ff       	call   5270 <memset@plt>
    }
    93fe:	90                   	nop
    93ff:	c9                   	leave
    9400:	c3                   	ret

0000000000009401 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    9401:	55                   	push   %rbp
    9402:	48 89 e5             	mov    %rsp,%rbp
    9405:	48 83 ec 10          	sub    $0x10,%rsp
    9409:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    940d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9411:	48 89 c7             	mov    %rax,%rdi
    9414:	e8 27 bd ff ff       	call   5140 <glfwDestroyWindow@plt>
    9419:	90                   	nop
    941a:	c9                   	leave
    941b:	c3                   	ret

000000000000941c <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    941c:	55                   	push   %rbp
    941d:	48 89 e5             	mov    %rsp,%rbp
    9420:	48 83 ec 10          	sub    $0x10,%rsp
    9424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9428:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    942c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9434:	48 89 d6             	mov    %rdx,%rsi
    9437:	48 89 c7             	mov    %rax,%rdi
    943a:	e8 11 c1 ff ff       	call   5550 <vkDestroyInstance@plt>
}
    943f:	90                   	nop
    9440:	c9                   	leave
    9441:	c3                   	ret

0000000000009442 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    9442:	55                   	push   %rbp
    9443:	48 89 e5             	mov    %rsp,%rbp
    9446:	48 83 ec 10          	sub    $0x10,%rsp
    944a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    944e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    9452:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    945a:	48 89 d6             	mov    %rdx,%rsi
    945d:	48 89 c7             	mov    %rax,%rdi
    9460:	e8 8b bf ff ff       	call   53f0 <vkDestroyDevice@plt>
}
    9465:	90                   	nop
    9466:	c9                   	leave
    9467:	c3                   	ret

0000000000009468 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    9468:	55                   	push   %rbp
    9469:	48 89 e5             	mov    %rsp,%rbp
    946c:	48 83 ec 20          	sub    $0x20,%rsp
    9470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9474:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9478:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    947c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9480:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9488:	48 89 ce             	mov    %rcx,%rsi
    948b:	48 89 c7             	mov    %rax,%rdi
    948e:	e8 5d c5 ff ff       	call   59f0 <vkDestroySurfaceKHR@plt>
}
    9493:	90                   	nop
    9494:	c9                   	leave
    9495:	c3                   	ret

0000000000009496 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    9496:	55                   	push   %rbp
    9497:	48 89 e5             	mov    %rsp,%rbp
    949a:	48 83 ec 20          	sub    $0x20,%rsp
    949e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    94aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94ae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b6:	48 89 ce             	mov    %rcx,%rsi
    94b9:	48 89 c7             	mov    %rax,%rdi
    94bc:	e8 5f bc ff ff       	call   5120 <vkDestroySwapchainKHR@plt>
}
    94c1:	90                   	nop
    94c2:	c9                   	leave
    94c3:	c3                   	ret

00000000000094c4 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    94c4:	55                   	push   %rbp
    94c5:	48 89 e5             	mov    %rsp,%rbp
    94c8:	48 83 ec 20          	sub    $0x20,%rsp
    94cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    94d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e4:	48 89 ce             	mov    %rcx,%rsi
    94e7:	48 89 c7             	mov    %rax,%rdi
    94ea:	e8 31 c5 ff ff       	call   5a20 <vkDestroyImageView@plt>
}
    94ef:	90                   	nop
    94f0:	c9                   	leave
    94f1:	c3                   	ret

00000000000094f2 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    94f2:	55                   	push   %rbp
    94f3:	48 89 e5             	mov    %rsp,%rbp
    94f6:	48 83 ec 20          	sub    $0x20,%rsp
    94fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9502:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    9506:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    950a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    950e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9512:	48 89 ce             	mov    %rcx,%rsi
    9515:	48 89 c7             	mov    %rax,%rdi
    9518:	e8 83 c1 ff ff       	call   56a0 <vkDestroyShaderModule@plt>
}
    951d:	90                   	nop
    951e:	c9                   	leave
    951f:	c3                   	ret

0000000000009520 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    9520:	55                   	push   %rbp
    9521:	48 89 e5             	mov    %rsp,%rbp
    9524:	48 83 ec 20          	sub    $0x20,%rsp
    9528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    952c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9530:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    9534:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9538:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    953c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9540:	48 89 ce             	mov    %rcx,%rsi
    9543:	48 89 c7             	mov    %rax,%rdi
    9546:	e8 a5 c1 ff ff       	call   56f0 <vkDestroyPipelineLayout@plt>
}
    954b:	90                   	nop
    954c:	c9                   	leave
    954d:	c3                   	ret

000000000000954e <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    954e:	55                   	push   %rbp
    954f:	48 89 e5             	mov    %rsp,%rbp
    9552:	48 83 ec 20          	sub    $0x20,%rsp
    9556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    955a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    955e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    9562:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9566:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    956a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    956e:	48 89 ce             	mov    %rcx,%rsi
    9571:	48 89 c7             	mov    %rax,%rdi
    9574:	e8 77 bf ff ff       	call   54f0 <vkDestroyRenderPass@plt>
}
    9579:	90                   	nop
    957a:	c9                   	leave
    957b:	c3                   	ret

000000000000957c <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    957c:	55                   	push   %rbp
    957d:	48 89 e5             	mov    %rsp,%rbp
    9580:	48 83 ec 20          	sub    $0x20,%rsp
    9584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9588:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    958c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    9590:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9594:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    959c:	48 89 ce             	mov    %rcx,%rsi
    959f:	48 89 c7             	mov    %rax,%rdi
    95a2:	e8 49 c0 ff ff       	call   55f0 <vkDestroyPipeline@plt>
}
    95a7:	90                   	nop
    95a8:	c9                   	leave
    95a9:	c3                   	ret

00000000000095aa <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    95aa:	55                   	push   %rbp
    95ab:	48 89 e5             	mov    %rsp,%rbp
    95ae:	48 83 ec 40          	sub    $0x40,%rsp
    95b2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    95b6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    95ba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    95be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    95c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ca:	48 89 c7             	mov    %rax,%rdi
    95cd:	e8 20 01 00 00       	call   96f2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    95d2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    95d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95da:	48 89 c7             	mov    %rax,%rdi
    95dd:	e8 36 01 00 00       	call   9718 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    95e2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    95e6:	eb 36                	jmp    961e <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    95e8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    95ec:	48 89 c7             	mov    %rax,%rdi
    95ef:	e8 a8 01 00 00       	call   979c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    95f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    95f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95fc:	48 8b 08             	mov    (%rax),%rcx
    95ff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9603:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9607:	48 89 ce             	mov    %rcx,%rsi
    960a:	48 89 c7             	mov    %rax,%rdi
    960d:	e8 de bf ff ff       	call   55f0 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    9612:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    9616:	48 89 c7             	mov    %rax,%rdi
    9619:	e8 5e 01 00 00       	call   977c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    961e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    9622:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    9626:	48 89 d6             	mov    %rdx,%rsi
    9629:	48 89 c7             	mov    %rax,%rdi
    962c:	e8 10 01 00 00       	call   9741 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    9631:	84 c0                	test   %al,%al
    9633:	75 b3                	jne    95e8 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    9635:	90                   	nop
    9636:	90                   	nop
    9637:	c9                   	leave
    9638:	c3                   	ret

0000000000009639 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    9639:	55                   	push   %rbp
    963a:	48 89 e5             	mov    %rsp,%rbp
    963d:	48 83 ec 20          	sub    $0x20,%rsp
    9641:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9645:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9649:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    964d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9651:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9659:	48 89 ce             	mov    %rcx,%rsi
    965c:	48 89 c7             	mov    %rax,%rdi
    965f:	e8 1c c3 ff ff       	call   5980 <vkDestroyFramebuffer@plt>
}
    9664:	90                   	nop
    9665:	c9                   	leave
    9666:	c3                   	ret

0000000000009667 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    9667:	55                   	push   %rbp
    9668:	48 89 e5             	mov    %rsp,%rbp
    966b:	48 83 ec 20          	sub    $0x20,%rsp
    966f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9673:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9677:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    967b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    967f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9687:	48 89 ce             	mov    %rcx,%rsi
    968a:	48 89 c7             	mov    %rax,%rdi
    968d:	e8 4e c1 ff ff       	call   57e0 <vkDestroyCommandPool@plt>
}
    9692:	90                   	nop
    9693:	c9                   	leave
    9694:	c3                   	ret

0000000000009695 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    9695:	55                   	push   %rbp
    9696:	48 89 e5             	mov    %rsp,%rbp
    9699:	48 83 ec 20          	sub    $0x20,%rsp
    969d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    96a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b5:	48 89 ce             	mov    %rcx,%rsi
    96b8:	48 89 c7             	mov    %rax,%rdi
    96bb:	e8 70 ba ff ff       	call   5130 <vkDestroySemaphore@plt>
}
    96c0:	90                   	nop
    96c1:	c9                   	leave
    96c2:	c3                   	ret

00000000000096c3 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    96c3:	55                   	push   %rbp
    96c4:	48 89 e5             	mov    %rsp,%rbp
    96c7:	48 83 ec 20          	sub    $0x20,%rsp
    96cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    96d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e3:	48 89 ce             	mov    %rcx,%rsi
    96e6:	48 89 c7             	mov    %rax,%rdi
    96e9:	e8 f2 be ff ff       	call   55e0 <vkDestroyFence@plt>
}
    96ee:	90                   	nop
    96ef:	c9                   	leave
    96f0:	c3                   	ret
    96f1:	90                   	nop

00000000000096f2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    96f2:	55                   	push   %rbp
    96f3:	48 89 e5             	mov    %rsp,%rbp
    96f6:	48 83 ec 20          	sub    $0x20,%rsp
    96fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    96fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9702:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9706:	48 89 d6             	mov    %rdx,%rsi
    9709:	48 89 c7             	mov    %rax,%rdi
    970c:	e8 9d 00 00 00       	call   97ae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9715:	c9                   	leave
    9716:	c3                   	ret
    9717:	90                   	nop

0000000000009718 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9718:	55                   	push   %rbp
    9719:	48 89 e5             	mov    %rsp,%rbp
    971c:	48 83 ec 20          	sub    $0x20,%rsp
    9720:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9724:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9728:	48 8d 50 08          	lea    0x8(%rax),%rdx
    972c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9730:	48 89 d6             	mov    %rdx,%rsi
    9733:	48 89 c7             	mov    %rax,%rdi
    9736:	e8 73 00 00 00       	call   97ae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    973b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973f:	c9                   	leave
    9740:	c3                   	ret

0000000000009741 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9741:	55                   	push   %rbp
    9742:	48 89 e5             	mov    %rsp,%rbp
    9745:	53                   	push   %rbx
    9746:	48 83 ec 18          	sub    $0x18,%rsp
    974a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    974e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    9752:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9756:	48 89 c7             	mov    %rax,%rdi
    9759:	e8 6e 00 00 00       	call   97cc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    975e:	48 8b 18             	mov    (%rax),%rbx
    9761:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9765:	48 89 c7             	mov    %rax,%rdi
    9768:	e8 5f 00 00 00       	call   97cc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    976d:	48 8b 00             	mov    (%rax),%rax
    9770:	48 39 c3             	cmp    %rax,%rbx
    9773:	0f 95 c0             	setne  %al
    9776:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    977a:	c9                   	leave
    977b:	c3                   	ret

000000000000977c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    977c:	55                   	push   %rbp
    977d:	48 89 e5             	mov    %rsp,%rbp
    9780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9788:	48 8b 00             	mov    (%rax),%rax
    978b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    978f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9793:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    979a:	5d                   	pop    %rbp
    979b:	c3                   	ret

000000000000979c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    979c:	55                   	push   %rbp
    979d:	48 89 e5             	mov    %rsp,%rbp
    97a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    97a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a8:	48 8b 00             	mov    (%rax),%rax
    97ab:	5d                   	pop    %rbp
    97ac:	c3                   	ret
    97ad:	90                   	nop

00000000000097ae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    97ae:	55                   	push   %rbp
    97af:	48 89 e5             	mov    %rsp,%rbp
    97b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    97ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97be:	48 8b 10             	mov    (%rax),%rdx
    97c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c5:	48 89 10             	mov    %rdx,(%rax)
    97c8:	90                   	nop
    97c9:	5d                   	pop    %rbp
    97ca:	c3                   	ret
    97cb:	90                   	nop

00000000000097cc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    97cc:	55                   	push   %rbp
    97cd:	48 89 e5             	mov    %rsp,%rbp
    97d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    97d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d8:	5d                   	pop    %rbp
    97d9:	c3                   	ret

00000000000097da <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    97da:	55                   	push   %rbp
    97db:	48 89 e5             	mov    %rsp,%rbp
    97de:	53                   	push   %rbx
    97df:	48 83 ec 28          	sub    $0x28,%rsp
    97e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    97e7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    97eb:	be 00 00 00 00       	mov    $0x0,%esi
    97f0:	48 89 c7             	mov    %rax,%rdi
    97f3:	e8 38 be ff ff       	call   5630 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    97f8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    97fb:	89 c3                	mov    %eax,%ebx
    97fd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9801:	48 89 c7             	mov    %rax,%rdi
    9804:	e8 47 11 00 00       	call   a950 <_ZNSaI17VkLayerPropertiesEC1Ev>
    9809:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    980d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9811:	48 89 de             	mov    %rbx,%rsi
    9814:	48 89 c7             	mov    %rax,%rdi
    9817:	e8 6c 11 00 00       	call   a988 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    981c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9820:	48 89 c7             	mov    %rax,%rdi
    9823:	e8 44 11 00 00       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    9828:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    982c:	48 89 c7             	mov    %rax,%rdi
    982f:	e8 0e 12 00 00       	call   aa42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    9834:	48 89 c2             	mov    %rax,%rdx
    9837:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    983b:	48 89 d6             	mov    %rdx,%rsi
    983e:	48 89 c7             	mov    %rax,%rdi
    9841:	e8 ea bd ff ff       	call   5630 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    9846:	eb 34                	jmp    987c <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    9848:	48 89 c3             	mov    %rax,%rbx
    984b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    984f:	48 89 c7             	mov    %rax,%rdi
    9852:	e8 15 11 00 00       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
    9857:	48 89 d8             	mov    %rbx,%rax
    985a:	48 89 c7             	mov    %rax,%rdi
    985d:	e8 9e c1 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    9862:	48 89 c3             	mov    %rax,%rbx
    9865:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9869:	48 89 c7             	mov    %rax,%rdi
    986c:	e8 8d 11 00 00       	call   a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    9871:	48 89 d8             	mov    %rbx,%rax
    9874:	48 89 c7             	mov    %rax,%rdi
    9877:	e8 84 c1 ff ff       	call   5a00 <_Unwind_Resume@plt>
    987c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9880:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9884:	c9                   	leave
    9885:	c3                   	ret

0000000000009886 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    9886:	55                   	push   %rbp
    9887:	48 89 e5             	mov    %rsp,%rbp
    988a:	41 54                	push   %r12
    988c:	53                   	push   %rbx
    988d:	48 83 ec 20          	sub    $0x20,%rsp
    9891:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9895:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    9899:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    989d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98a1:	ba 00 00 00 00       	mov    $0x0,%edx
    98a6:	48 89 ce             	mov    %rcx,%rsi
    98a9:	48 89 c7             	mov    %rax,%rdi
    98ac:	e8 6f bb ff ff       	call   5420 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    98b1:	85 c0                	test   %eax,%eax
    98b3:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    98b6:	84 c0                	test   %al,%al
    98b8:	74 3b                	je     98f5 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    98ba:	bf 10 00 00 00       	mov    $0x10,%edi
    98bf:	e8 5c b9 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    98c4:	48 89 c3             	mov    %rax,%rbx
    98c7:	48 8d 05 3a b9 01 00 	lea    0x1b93a(%rip),%rax        # 25208 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    98ce:	48 89 c6             	mov    %rax,%rsi
    98d1:	48 89 df             	mov    %rbx,%rdi
    98d4:	e8 97 b8 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    98d9:	48 8b 05 e0 f6 02 00 	mov    0x2f6e0(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    98e0:	48 89 c2             	mov    %rax,%rdx
    98e3:	48 8d 05 56 f4 02 00 	lea    0x2f456(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    98ea:	48 89 c6             	mov    %rax,%rsi
    98ed:	48 89 df             	mov    %rbx,%rdi
    98f0:	e8 9b c0 ff ff       	call   5990 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    98f5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    98f8:	89 c3                	mov    %eax,%ebx
    98fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98fe:	48 89 c7             	mov    %rax,%rdi
    9901:	e8 b8 11 00 00       	call   aabe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    9906:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    990a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    990e:	48 89 de             	mov    %rbx,%rsi
    9911:	48 89 c7             	mov    %rax,%rdi
    9914:	e8 dd 11 00 00       	call   aaf6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    9919:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    991d:	48 89 c7             	mov    %rax,%rdi
    9920:	e8 b5 11 00 00       	call   aada <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    9925:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9929:	48 89 c7             	mov    %rax,%rdi
    992c:	e8 7f 12 00 00       	call   abb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    9931:	48 89 c2             	mov    %rax,%rdx
    9934:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    9938:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    993c:	48 89 ce             	mov    %rcx,%rsi
    993f:	48 89 c7             	mov    %rax,%rdi
    9942:	e8 d9 ba ff ff       	call   5420 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    9947:	85 c0                	test   %eax,%eax
    9949:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    994c:	84 c0                	test   %al,%al
    994e:	0f 84 95 00 00 00    	je     99e9 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    9954:	bf 10 00 00 00       	mov    $0x10,%edi
    9959:	e8 c2 b8 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    995e:	48 89 c3             	mov    %rax,%rbx
    9961:	48 8d 05 a0 b8 01 00 	lea    0x1b8a0(%rip),%rax        # 25208 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    9968:	48 89 c6             	mov    %rax,%rsi
    996b:	48 89 df             	mov    %rbx,%rdi
    996e:	e8 fd b7 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    9973:	48 8b 05 46 f6 02 00 	mov    0x2f646(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    997a:	48 89 c2             	mov    %rax,%rdx
    997d:	48 8d 05 bc f3 02 00 	lea    0x2f3bc(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9984:	48 89 c6             	mov    %rax,%rsi
    9987:	48 89 df             	mov    %rbx,%rdi
    998a:	e8 01 c0 ff ff       	call   5990 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    998f:	49 89 c4             	mov    %rax,%r12
    9992:	48 89 df             	mov    %rbx,%rdi
    9995:	e8 b6 b9 ff ff       	call   5350 <__cxa_free_exception@plt>
    999a:	4c 89 e0             	mov    %r12,%rax
    999d:	48 89 c7             	mov    %rax,%rdi
    99a0:	e8 5b c0 ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    99a5:	48 89 c3             	mov    %rax,%rbx
    99a8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99ac:	48 89 c7             	mov    %rax,%rdi
    99af:	e8 26 11 00 00       	call   aada <_ZNSaI21VkExtensionPropertiesED1Ev>
    99b4:	48 89 d8             	mov    %rbx,%rax
    99b7:	48 89 c7             	mov    %rax,%rdi
    99ba:	e8 41 c0 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    99bf:	49 89 c4             	mov    %rax,%r12
    99c2:	48 89 df             	mov    %rbx,%rdi
    99c5:	e8 86 b9 ff ff       	call   5350 <__cxa_free_exception@plt>
    99ca:	4c 89 e3             	mov    %r12,%rbx
    99cd:	eb 03                	jmp    99d2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    99cf:	48 89 c3             	mov    %rax,%rbx
    99d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99d6:	48 89 c7             	mov    %rax,%rdi
    99d9:	e8 8e 11 00 00       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    99de:	48 89 d8             	mov    %rbx,%rax
    99e1:	48 89 c7             	mov    %rax,%rdi
    99e4:	e8 17 c0 ff ff       	call   5a00 <_Unwind_Resume@plt>
  return instanceExtensions;
    99e9:	90                   	nop
}
    99ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99ee:	48 83 c4 20          	add    $0x20,%rsp
    99f2:	5b                   	pop    %rbx
    99f3:	41 5c                	pop    %r12
    99f5:	5d                   	pop    %rbp
    99f6:	c3                   	ret

00000000000099f7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    99f7:	55                   	push   %rbp
    99f8:	48 89 e5             	mov    %rsp,%rbp
    99fb:	41 54                	push   %r12
    99fd:	53                   	push   %rbx
    99fe:	48 83 ec 30          	sub    $0x30,%rsp
    9a02:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9a06:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9a0a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    9a0e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9a12:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9a16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9a1a:	b9 00 00 00 00       	mov    $0x0,%ecx
    9a1f:	48 89 c7             	mov    %rax,%rdi
    9a22:	e8 89 bd ff ff       	call   57b0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    9a27:	85 c0                	test   %eax,%eax
    9a29:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    9a2c:	84 c0                	test   %al,%al
    9a2e:	74 3b                	je     9a6b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    9a30:	bf 10 00 00 00       	mov    $0x10,%edi
    9a35:	e8 e6 b7 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    9a3a:	48 89 c3             	mov    %rax,%rbx
    9a3d:	48 8d 05 ec b7 01 00 	lea    0x1b7ec(%rip),%rax        # 25230 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    9a44:	48 89 c6             	mov    %rax,%rsi
    9a47:	48 89 df             	mov    %rbx,%rdi
    9a4a:	e8 21 b7 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    9a4f:	48 8b 05 6a f5 02 00 	mov    0x2f56a(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9a56:	48 89 c2             	mov    %rax,%rdx
    9a59:	48 8d 05 e0 f2 02 00 	lea    0x2f2e0(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9a60:	48 89 c6             	mov    %rax,%rsi
    9a63:	48 89 df             	mov    %rbx,%rdi
    9a66:	e8 25 bf ff ff       	call   5990 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    9a6b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9a6e:	89 c3                	mov    %eax,%ebx
    9a70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9a74:	48 89 c7             	mov    %rax,%rdi
    9a77:	e8 42 10 00 00       	call   aabe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    9a7c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    9a80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a84:	48 89 de             	mov    %rbx,%rsi
    9a87:	48 89 c7             	mov    %rax,%rdi
    9a8a:	e8 67 10 00 00       	call   aaf6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    9a8f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9a93:	48 89 c7             	mov    %rax,%rdi
    9a96:	e8 3f 10 00 00       	call   aada <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    9a9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a9f:	48 89 c7             	mov    %rax,%rdi
    9aa2:	e8 09 11 00 00       	call   abb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    9aa7:	48 89 c1             	mov    %rax,%rcx
    9aaa:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    9aae:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9ab2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9ab6:	48 89 c7             	mov    %rax,%rdi
    9ab9:	e8 f2 bc ff ff       	call   57b0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    9abe:	85 c0                	test   %eax,%eax
    9ac0:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    9ac3:	84 c0                	test   %al,%al
    9ac5:	0f 84 95 00 00 00    	je     9b60 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    9acb:	bf 10 00 00 00       	mov    $0x10,%edi
    9ad0:	e8 4b b7 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    9ad5:	48 89 c3             	mov    %rax,%rbx
    9ad8:	48 8d 05 51 b7 01 00 	lea    0x1b751(%rip),%rax        # 25230 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30>
    9adf:	48 89 c6             	mov    %rax,%rsi
    9ae2:	48 89 df             	mov    %rbx,%rdi
    9ae5:	e8 86 b6 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    9aea:	48 8b 05 cf f4 02 00 	mov    0x2f4cf(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9af1:	48 89 c2             	mov    %rax,%rdx
    9af4:	48 8d 05 45 f2 02 00 	lea    0x2f245(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9afb:	48 89 c6             	mov    %rax,%rsi
    9afe:	48 89 df             	mov    %rbx,%rdi
    9b01:	e8 8a be ff ff       	call   5990 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    9b06:	49 89 c4             	mov    %rax,%r12
    9b09:	48 89 df             	mov    %rbx,%rdi
    9b0c:	e8 3f b8 ff ff       	call   5350 <__cxa_free_exception@plt>
    9b11:	4c 89 e0             	mov    %r12,%rax
    9b14:	48 89 c7             	mov    %rax,%rdi
    9b17:	e8 e4 be ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    9b1c:	48 89 c3             	mov    %rax,%rbx
    9b1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b23:	48 89 c7             	mov    %rax,%rdi
    9b26:	e8 af 0f 00 00       	call   aada <_ZNSaI21VkExtensionPropertiesED1Ev>
    9b2b:	48 89 d8             	mov    %rbx,%rax
    9b2e:	48 89 c7             	mov    %rax,%rdi
    9b31:	e8 ca be ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    9b36:	49 89 c4             	mov    %rax,%r12
    9b39:	48 89 df             	mov    %rbx,%rdi
    9b3c:	e8 0f b8 ff ff       	call   5350 <__cxa_free_exception@plt>
    9b41:	4c 89 e3             	mov    %r12,%rbx
    9b44:	eb 03                	jmp    9b49 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    9b46:	48 89 c3             	mov    %rax,%rbx
    9b49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b4d:	48 89 c7             	mov    %rax,%rdi
    9b50:	e8 17 10 00 00       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    9b55:	48 89 d8             	mov    %rbx,%rax
    9b58:	48 89 c7             	mov    %rax,%rdi
    9b5b:	e8 a0 be ff ff       	call   5a00 <_Unwind_Resume@plt>
  return deviceExtensions;
    9b60:	90                   	nop
}
    9b61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b65:	48 83 c4 30          	add    $0x30,%rsp
    9b69:	5b                   	pop    %rbx
    9b6a:	41 5c                	pop    %r12
    9b6c:	5d                   	pop    %rbp
    9b6d:	c3                   	ret

0000000000009b6e <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    9b6e:	55                   	push   %rbp
    9b6f:	48 89 e5             	mov    %rsp,%rbp
    9b72:	53                   	push   %rbx
    9b73:	48 83 ec 38          	sub    $0x38,%rsp
    9b77:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    9b7b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    9b7f:	48 89 c7             	mov    %rax,%rdi
    9b82:	e8 09 b8 ff ff       	call   5390 <glfwGetRequiredInstanceExtensions@plt>
    9b87:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    9b8b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    9b8e:	89 c3                	mov    %eax,%ebx
    9b90:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    9b94:	48 89 c7             	mov    %rax,%rdi
    9b97:	e8 90 10 00 00       	call   ac2c <_ZNSaIPKcEC1Ev>
    9b9c:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    9ba0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9ba4:	48 89 de             	mov    %rbx,%rsi
    9ba7:	48 89 c7             	mov    %rax,%rdi
    9baa:	e8 b5 10 00 00       	call   ac64 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    9baf:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    9bb3:	48 89 c7             	mov    %rax,%rdi
    9bb6:	e8 8d 10 00 00       	call   ac48 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    9bbb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    9bc2:	eb 2e                	jmp    9bf2 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    9bc4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9bc7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9bce:	00 
    9bcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9bd3:	48 01 d0             	add    %rdx,%rax
    9bd6:	48 8b 18             	mov    (%rax),%rbx
    9bd9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9bdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9be0:	48 89 d6             	mov    %rdx,%rsi
    9be3:	48 89 c7             	mov    %rax,%rdi
    9be6:	e8 ef 10 00 00       	call   acda <_ZNSt6vectorIPKcSaIS1_EEixEm>
    9beb:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    9bee:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9bf2:	8b 45 d8             	mov    -0x28(%rbp),%eax
    9bf5:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    9bf8:	72 ca                	jb     9bc4 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    9bfa:	eb 1a                	jmp    9c16 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    9bfc:	48 89 c3             	mov    %rax,%rbx
    9bff:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    9c03:	48 89 c7             	mov    %rax,%rdi
    9c06:	e8 3d 10 00 00       	call   ac48 <_ZNSaIPKcED1Ev>
    9c0b:	48 89 d8             	mov    %rbx,%rax
    9c0e:	48 89 c7             	mov    %rax,%rdi
    9c11:	e8 ea bd ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    9c16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9c1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c1e:	c9                   	leave
    9c1f:	c3                   	ret

0000000000009c20 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    9c20:	55                   	push   %rbp
    9c21:	48 89 e5             	mov    %rsp,%rbp
    9c24:	53                   	push   %rbx
    9c25:	48 83 ec 28          	sub    $0x28,%rsp
    9c29:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    9c2d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    9c31:	be 00 00 00 00       	mov    $0x0,%esi
    9c36:	48 89 c7             	mov    %rax,%rdi
    9c39:	e8 f2 b9 ff ff       	call   5630 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    9c3e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9c41:	89 c3                	mov    %eax,%ebx
    9c43:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9c47:	48 89 c7             	mov    %rax,%rdi
    9c4a:	e8 01 0d 00 00       	call   a950 <_ZNSaI17VkLayerPropertiesEC1Ev>
    9c4f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    9c53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c57:	48 89 de             	mov    %rbx,%rsi
    9c5a:	48 89 c7             	mov    %rax,%rdi
    9c5d:	e8 26 0d 00 00       	call   a988 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    9c62:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9c66:	48 89 c7             	mov    %rax,%rdi
    9c69:	e8 fe 0c 00 00       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    9c6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c72:	48 89 c7             	mov    %rax,%rdi
    9c75:	e8 c8 0d 00 00       	call   aa42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    9c7a:	48 89 c2             	mov    %rax,%rdx
    9c7d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    9c81:	48 89 d6             	mov    %rdx,%rsi
    9c84:	48 89 c7             	mov    %rax,%rdi
    9c87:	e8 a4 b9 ff ff       	call   5630 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    9c8c:	eb 34                	jmp    9cc2 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    9c8e:	48 89 c3             	mov    %rax,%rbx
    9c91:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9c95:	48 89 c7             	mov    %rax,%rdi
    9c98:	e8 cf 0c 00 00       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
    9c9d:	48 89 d8             	mov    %rbx,%rax
    9ca0:	48 89 c7             	mov    %rax,%rdi
    9ca3:	e8 58 bd ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    9ca8:	48 89 c3             	mov    %rax,%rbx
    9cab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9caf:	48 89 c7             	mov    %rax,%rdi
    9cb2:	e8 47 0d 00 00       	call   a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    9cb7:	48 89 d8             	mov    %rbx,%rax
    9cba:	48 89 c7             	mov    %rax,%rdi
    9cbd:	e8 3e bd ff ff       	call   5a00 <_Unwind_Resume@plt>
    9cc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cc6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9cca:	c9                   	leave
    9ccb:	c3                   	ret

0000000000009ccc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    9ccc:	55                   	push   %rbp
    9ccd:	48 89 e5             	mov    %rsp,%rbp
    9cd0:	41 54                	push   %r12
    9cd2:	53                   	push   %rbx
    9cd3:	48 83 ec 20          	sub    $0x20,%rsp
    9cd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9cdb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    9cdf:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    9ce3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9ce7:	ba 00 00 00 00       	mov    $0x0,%edx
    9cec:	48 89 ce             	mov    %rcx,%rsi
    9cef:	48 89 c7             	mov    %rax,%rdi
    9cf2:	e8 69 b5 ff ff       	call   5260 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    9cf7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9cfa:	85 c0                	test   %eax,%eax
    9cfc:	75 3b                	jne    9d39 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    9cfe:	bf 10 00 00 00       	mov    $0x10,%edi
    9d03:	e8 18 b5 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    9d08:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    9d0b:	48 8d 05 46 b5 01 00 	lea    0x1b546(%rip),%rax        # 25258 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x58>
    9d12:	48 89 c6             	mov    %rax,%rsi
    9d15:	48 89 df             	mov    %rbx,%rdi
    9d18:	e8 53 b4 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    9d1d:	48 8b 05 9c f2 02 00 	mov    0x2f29c(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9d24:	48 89 c2             	mov    %rax,%rdx
    9d27:	48 8d 05 12 f0 02 00 	lea    0x2f012(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9d2e:	48 89 c6             	mov    %rax,%rsi
    9d31:	48 89 df             	mov    %rbx,%rdi
    9d34:	e8 57 bc ff ff       	call   5990 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    9d39:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9d3c:	89 c3                	mov    %eax,%ebx
    9d3e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d42:	48 89 c7             	mov    %rax,%rdi
    9d45:	e8 fe 0f 00 00       	call   ad48 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    9d4a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    9d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d52:	48 89 de             	mov    %rbx,%rsi
    9d55:	48 89 c7             	mov    %rax,%rdi
    9d58:	e8 23 10 00 00       	call   ad80 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    9d5d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d61:	48 89 c7             	mov    %rax,%rdi
    9d64:	e8 fb 0f 00 00       	call   ad64 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    9d69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d6d:	48 89 c7             	mov    %rax,%rdi
    9d70:	e8 c5 10 00 00       	call   ae3a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    9d75:	48 89 c2             	mov    %rax,%rdx
    9d78:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    9d7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9d80:	48 89 ce             	mov    %rcx,%rsi
    9d83:	48 89 c7             	mov    %rax,%rdi
    9d86:	e8 d5 b4 ff ff       	call   5260 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    9d8b:	85 c0                	test   %eax,%eax
    9d8d:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    9d90:	84 c0                	test   %al,%al
    9d92:	0f 84 95 00 00 00    	je     9e2d <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    9d98:	bf 10 00 00 00       	mov    $0x10,%edi
    9d9d:	e8 7e b4 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    9da2:	48 89 c3             	mov    %rax,%rbx
    9da5:	48 8d 05 e4 b4 01 00 	lea    0x1b4e4(%rip),%rax        # 25290 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x90>
    9dac:	48 89 c6             	mov    %rax,%rsi
    9daf:	48 89 df             	mov    %rbx,%rdi
    9db2:	e8 b9 b3 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    9db7:	48 8b 05 02 f2 02 00 	mov    0x2f202(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9dbe:	48 89 c2             	mov    %rax,%rdx
    9dc1:	48 8d 05 78 ef 02 00 	lea    0x2ef78(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9dc8:	48 89 c6             	mov    %rax,%rsi
    9dcb:	48 89 df             	mov    %rbx,%rdi
    9dce:	e8 bd bb ff ff       	call   5990 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    9dd3:	49 89 c4             	mov    %rax,%r12
    9dd6:	48 89 df             	mov    %rbx,%rdi
    9dd9:	e8 72 b5 ff ff       	call   5350 <__cxa_free_exception@plt>
    9dde:	4c 89 e0             	mov    %r12,%rax
    9de1:	48 89 c7             	mov    %rax,%rdi
    9de4:	e8 17 bc ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    9de9:	48 89 c3             	mov    %rax,%rbx
    9dec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9df0:	48 89 c7             	mov    %rax,%rdi
    9df3:	e8 6c 0f 00 00       	call   ad64 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9df8:	48 89 d8             	mov    %rbx,%rax
    9dfb:	48 89 c7             	mov    %rax,%rdi
    9dfe:	e8 fd bb ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    9e03:	49 89 c4             	mov    %rax,%r12
    9e06:	48 89 df             	mov    %rbx,%rdi
    9e09:	e8 42 b5 ff ff       	call   5350 <__cxa_free_exception@plt>
    9e0e:	4c 89 e3             	mov    %r12,%rbx
    9e11:	eb 03                	jmp    9e16 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    9e13:	48 89 c3             	mov    %rax,%rbx
    9e16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e1a:	48 89 c7             	mov    %rax,%rdi
    9e1d:	e8 d4 0f 00 00       	call   adf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    9e22:	48 89 d8             	mov    %rbx,%rax
    9e25:	48 89 c7             	mov    %rax,%rdi
    9e28:	e8 d3 bb ff ff       	call   5a00 <_Unwind_Resume@plt>
  return physicalDevices;
    9e2d:	90                   	nop
}
    9e2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e32:	48 83 c4 20          	add    $0x20,%rsp
    9e36:	5b                   	pop    %rbx
    9e37:	41 5c                	pop    %r12
    9e39:	5d                   	pop    %rbp
    9e3a:	c3                   	ret

0000000000009e3b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    9e3b:	55                   	push   %rbp
    9e3c:	48 89 e5             	mov    %rsp,%rbp
    9e3f:	48 83 ec 10          	sub    $0x10,%rsp
    9e43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    9e4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e53:	48 89 d6             	mov    %rdx,%rsi
    9e56:	48 89 c7             	mov    %rax,%rdi
    9e59:	e8 22 b3 ff ff       	call   5180 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    9e5e:	90                   	nop
}
    9e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e63:	c9                   	leave
    9e64:	c3                   	ret

0000000000009e65 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    9e65:	55                   	push   %rbp
    9e66:	48 89 e5             	mov    %rsp,%rbp
    9e69:	48 83 ec 20          	sub    $0x20,%rsp
    9e6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e71:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e75:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    9e79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e7d:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    9e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e8b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    9e8f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e97:	48 89 d6             	mov    %rdx,%rsi
    9e9a:	48 89 c7             	mov    %rax,%rdi
    9e9d:	e8 1e b6 ff ff       	call   54c0 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    9ea2:	90                   	nop
}
    9ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea7:	c9                   	leave
    9ea8:	c3                   	ret

0000000000009ea9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    9ea9:	55                   	push   %rbp
    9eaa:	48 89 e5             	mov    %rsp,%rbp
    9ead:	53                   	push   %rbx
    9eae:	48 83 ec 28          	sub    $0x28,%rsp
    9eb2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9eb6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    9eba:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    9ebe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9ec2:	ba 00 00 00 00       	mov    $0x0,%edx
    9ec7:	48 89 ce             	mov    %rcx,%rsi
    9eca:	48 89 c7             	mov    %rax,%rdi
    9ecd:	e8 ae b4 ff ff       	call   5380 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    9ed2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9ed5:	89 c3                	mov    %eax,%ebx
    9ed7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9edb:	48 89 c7             	mov    %rax,%rdi
    9ede:	e8 c9 0f 00 00       	call   aeac <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    9ee3:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    9ee7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9eeb:	48 89 de             	mov    %rbx,%rsi
    9eee:	48 89 c7             	mov    %rax,%rdi
    9ef1:	e8 ee 0f 00 00       	call   aee4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    9ef6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9efa:	48 89 c7             	mov    %rax,%rdi
    9efd:	e8 c6 0f 00 00       	call   aec8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    9f02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f06:	48 89 c7             	mov    %rax,%rdi
    9f09:	e8 90 10 00 00       	call   af9e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    9f0e:	48 89 c2             	mov    %rax,%rdx
    9f11:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    9f15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9f19:	48 89 ce             	mov    %rcx,%rsi
    9f1c:	48 89 c7             	mov    %rax,%rdi
    9f1f:	e8 5c b4 ff ff       	call   5380 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    9f24:	eb 34                	jmp    9f5a <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    9f26:	48 89 c3             	mov    %rax,%rbx
    9f29:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9f2d:	48 89 c7             	mov    %rax,%rdi
    9f30:	e8 93 0f 00 00       	call   aec8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9f35:	48 89 d8             	mov    %rbx,%rax
    9f38:	48 89 c7             	mov    %rax,%rdi
    9f3b:	e8 c0 ba ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    9f40:	48 89 c3             	mov    %rax,%rbx
    9f43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f47:	48 89 c7             	mov    %rax,%rdi
    9f4a:	e8 0b 10 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    9f4f:	48 89 d8             	mov    %rbx,%rax
    9f52:	48 89 c7             	mov    %rax,%rdi
    9f55:	e8 a6 ba ff ff       	call   5a00 <_Unwind_Resume@plt>
    9f5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f5e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f62:	c9                   	leave
    9f63:	c3                   	ret

0000000000009f64 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    9f64:	55                   	push   %rbp
    9f65:	48 89 e5             	mov    %rsp,%rbp
    9f68:	53                   	push   %rbx
    9f69:	48 83 ec 68          	sub    $0x68,%rsp
    9f6d:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    9f71:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    9f75:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9f79:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    9f7d:	48 89 d6             	mov    %rdx,%rsi
    9f80:	48 89 c7             	mov    %rax,%rdi
    9f83:	e8 21 ff ff ff       	call   9ea9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    9f88:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9f8c:	48 89 c7             	mov    %rax,%rdi
    9f8f:	e8 86 10 00 00       	call   b01a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    9f94:	48 89 c3             	mov    %rax,%rbx
    9f97:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    9f9b:	48 89 c7             	mov    %rax,%rdi
    9f9e:	e8 a5 10 00 00       	call   b048 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    9fa3:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    9fa7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9fab:	48 89 de             	mov    %rbx,%rsi
    9fae:	48 89 c7             	mov    %rax,%rdi
    9fb1:	e8 ca 10 00 00       	call   b080 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    9fb6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    9fba:	48 89 c7             	mov    %rax,%rdi
    9fbd:	e8 a2 10 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    9fc2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9fc9:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    9fca:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9fce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9fd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fd6:	48 89 c7             	mov    %rax,%rdi
    9fd9:	e8 5c 11 00 00       	call   b13a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    9fde:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    9fe2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9fe6:	48 89 c7             	mov    %rax,%rdi
    9fe9:	e8 72 11 00 00       	call   b160 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    9fee:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    9ff2:	eb 4e                	jmp    a042 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    9ff4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    9ff8:	48 89 c7             	mov    %rax,%rdi
    9ffb:	e8 e4 11 00 00       	call   b1e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    a000:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    a004:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a008:	8b 00                	mov    (%rax),%eax
    a00a:	83 e0 01             	and    $0x1,%eax
    a00d:	85 c0                	test   %eax,%eax
    a00f:	74 25                	je     a036 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    a011:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a015:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a019:	48 89 d6             	mov    %rdx,%rsi
    a01c:	48 89 c7             	mov    %rax,%rdi
    a01f:	e8 d2 11 00 00       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    a024:	48 89 c2             	mov    %rax,%rdx
    a027:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a02b:	48 89 c6             	mov    %rax,%rsi
    a02e:	48 89 d7             	mov    %rdx,%rdi
    a031:	e8 ea 11 00 00       	call   b220 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    a036:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a03a:	48 89 c7             	mov    %rax,%rdi
    a03d:	e8 82 11 00 00       	call   b1c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    a042:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    a046:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a04a:	48 89 d6             	mov    %rdx,%rsi
    a04d:	48 89 c7             	mov    %rax,%rdi
    a050:	e8 34 11 00 00       	call   b189 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a055:	84 c0                	test   %al,%al
    a057:	75 9b                	jne    9ff4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    a059:	90                   	nop
}
    a05a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a05e:	48 89 c7             	mov    %rax,%rdi
    a061:	e8 f4 0e 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    a066:	eb 26                	jmp    a08e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    a068:	48 89 c3             	mov    %rax,%rbx
    a06b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a06f:	48 89 c7             	mov    %rax,%rdi
    a072:	e8 ed 0f 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    a077:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a07b:	48 89 c7             	mov    %rax,%rdi
    a07e:	e8 d7 0e 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    a083:	48 89 d8             	mov    %rbx,%rax
    a086:	48 89 c7             	mov    %rax,%rdi
    a089:	e8 72 b9 ff ff       	call   5a00 <_Unwind_Resume@plt>
    a08e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a092:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a096:	c9                   	leave
    a097:	c3                   	ret

000000000000a098 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    a098:	55                   	push   %rbp
    a099:	48 89 e5             	mov    %rsp,%rbp
    a09c:	53                   	push   %rbx
    a09d:	48 83 ec 68          	sub    $0x68,%rsp
    a0a1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    a0a5:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    a0a9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a0ad:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    a0b1:	48 89 d6             	mov    %rdx,%rsi
    a0b4:	48 89 c7             	mov    %rax,%rdi
    a0b7:	e8 ed fd ff ff       	call   9ea9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    a0bc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a0c0:	48 89 c7             	mov    %rax,%rdi
    a0c3:	e8 52 0f 00 00       	call   b01a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    a0c8:	48 89 c3             	mov    %rax,%rbx
    a0cb:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a0cf:	48 89 c7             	mov    %rax,%rdi
    a0d2:	e8 71 0f 00 00       	call   b048 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    a0d7:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    a0db:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a0df:	48 89 de             	mov    %rbx,%rsi
    a0e2:	48 89 c7             	mov    %rax,%rdi
    a0e5:	e8 96 0f 00 00       	call   b080 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    a0ea:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a0ee:	48 89 c7             	mov    %rax,%rdi
    a0f1:	e8 6e 0f 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    a0f6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    a0fd:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    a0fe:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a102:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a106:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a10a:	48 89 c7             	mov    %rax,%rdi
    a10d:	e8 28 10 00 00       	call   b13a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    a112:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    a116:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a11a:	48 89 c7             	mov    %rax,%rdi
    a11d:	e8 3e 10 00 00       	call   b160 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    a122:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a126:	eb 53                	jmp    a17b <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    a128:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a12c:	48 89 c7             	mov    %rax,%rdi
    a12f:	e8 b0 10 00 00       	call   b1e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    a134:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    a138:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a13c:	8b 00                	mov    (%rax),%eax
    a13e:	83 e0 02             	and    $0x2,%eax
    a141:	85 c0                	test   %eax,%eax
    a143:	74 25                	je     a16a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    a145:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a149:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a14d:	48 89 d6             	mov    %rdx,%rsi
    a150:	48 89 c7             	mov    %rax,%rdi
    a153:	e8 9e 10 00 00       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    a158:	48 89 c2             	mov    %rax,%rdx
    a15b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a15f:	48 89 c6             	mov    %rax,%rsi
    a162:	48 89 d7             	mov    %rdx,%rdi
    a165:	e8 b6 10 00 00       	call   b220 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    a16a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    a16f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a173:	48 89 c7             	mov    %rax,%rdi
    a176:	e8 49 10 00 00       	call   b1c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    a17b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    a17f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a183:	48 89 d6             	mov    %rdx,%rsi
    a186:	48 89 c7             	mov    %rax,%rdi
    a189:	e8 fb 0f 00 00       	call   b189 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a18e:	84 c0                	test   %al,%al
    a190:	75 96                	jne    a128 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    a192:	90                   	nop
}
    a193:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a197:	48 89 c7             	mov    %rax,%rdi
    a19a:	e8 bb 0d 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    a19f:	eb 26                	jmp    a1c7 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    a1a1:	48 89 c3             	mov    %rax,%rbx
    a1a4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a1a8:	48 89 c7             	mov    %rax,%rdi
    a1ab:	e8 b4 0e 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    a1b0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a1b4:	48 89 c7             	mov    %rax,%rdi
    a1b7:	e8 9e 0d 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    a1bc:	48 89 d8             	mov    %rbx,%rax
    a1bf:	48 89 c7             	mov    %rax,%rdi
    a1c2:	e8 39 b8 ff ff       	call   5a00 <_Unwind_Resume@plt>
    a1c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a1cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a1cf:	c9                   	leave
    a1d0:	c3                   	ret

000000000000a1d1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    a1d1:	55                   	push   %rbp
    a1d2:	48 89 e5             	mov    %rsp,%rbp
    a1d5:	53                   	push   %rbx
    a1d6:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    a1dd:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    a1e1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    a1e5:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    a1ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a1f0:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    a1f4:	48 89 d6             	mov    %rdx,%rsi
    a1f7:	48 89 c7             	mov    %rax,%rdi
    a1fa:	e8 aa fc ff ff       	call   9ea9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    a1ff:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a203:	48 89 c7             	mov    %rax,%rdi
    a206:	e8 0f 0e 00 00       	call   b01a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    a20b:	48 89 c3             	mov    %rax,%rbx
    a20e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a212:	48 89 c7             	mov    %rax,%rdi
    a215:	e8 2e 0e 00 00       	call   b048 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    a21a:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    a21e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a222:	48 89 de             	mov    %rbx,%rsi
    a225:	48 89 c7             	mov    %rax,%rdi
    a228:	e8 53 0e 00 00       	call   b080 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    a22d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a231:	48 89 c7             	mov    %rax,%rdi
    a234:	e8 2b 0e 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    a239:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    a240:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a244:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a248:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a24c:	48 89 c7             	mov    %rax,%rdi
    a24f:	e8 e6 0e 00 00       	call   b13a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    a254:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    a258:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a25c:	48 89 c7             	mov    %rax,%rdi
    a25f:	e8 fc 0e 00 00       	call   b160 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    a264:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a268:	eb 6c                	jmp    a2d6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    a26a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a26e:	48 89 c7             	mov    %rax,%rdi
    a271:	e8 6e 0f 00 00       	call   b1e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    a276:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    a27a:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    a281:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    a285:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    a28c:	8b 75 ec             	mov    -0x14(%rbp),%esi
    a28f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a293:	48 89 c7             	mov    %rax,%rdi
    a296:	e8 15 b3 ff ff       	call   55b0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    a29b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    a29e:	85 c0                	test   %eax,%eax
    a2a0:	74 24                	je     a2c6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    a2a2:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a2a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a2a9:	48 89 d6             	mov    %rdx,%rsi
    a2ac:	48 89 c7             	mov    %rax,%rdi
    a2af:	e8 42 0f 00 00       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    a2b4:	48 89 c2             	mov    %rax,%rdx
    a2b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2bb:	48 89 c6             	mov    %rax,%rsi
    a2be:	48 89 d7             	mov    %rdx,%rdi
    a2c1:	e8 5a 0f 00 00       	call   b220 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    a2c6:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    a2ca:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a2ce:	48 89 c7             	mov    %rax,%rdi
    a2d1:	e8 ee 0e 00 00       	call   b1c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    a2d6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    a2da:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a2de:	48 89 d6             	mov    %rdx,%rsi
    a2e1:	48 89 c7             	mov    %rax,%rdi
    a2e4:	e8 a0 0e 00 00       	call   b189 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a2e9:	84 c0                	test   %al,%al
    a2eb:	0f 85 79 ff ff ff    	jne    a26a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    a2f1:	90                   	nop
}
    a2f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a2f6:	48 89 c7             	mov    %rax,%rdi
    a2f9:	e8 5c 0c 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    a2fe:	eb 37                	jmp    a337 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    a300:	48 89 c3             	mov    %rax,%rbx
    a303:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    a307:	48 89 c7             	mov    %rax,%rdi
    a30a:	e8 55 0d 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    a30f:	eb 0f                	jmp    a320 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    a311:	48 89 c3             	mov    %rax,%rbx
    a314:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a318:	48 89 c7             	mov    %rax,%rdi
    a31b:	e8 d6 0d 00 00       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    a320:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a324:	48 89 c7             	mov    %rax,%rdi
    a327:	e8 2e 0c 00 00       	call   af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    a32c:	48 89 d8             	mov    %rbx,%rax
    a32f:	48 89 c7             	mov    %rax,%rdi
    a332:	e8 c9 b6 ff ff       	call   5a00 <_Unwind_Resume@plt>
    a337:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a33b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a33f:	c9                   	leave
    a340:	c3                   	ret

000000000000a341 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    a341:	55                   	push   %rbp
    a342:	48 89 e5             	mov    %rsp,%rbp
    a345:	41 54                	push   %r12
    a347:	53                   	push   %rbx
    a348:	48 83 ec 20          	sub    $0x20,%rsp
    a34c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a350:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a354:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    a358:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a35c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a360:	0f 11 00             	movups %xmm0,(%rax)
    a363:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    a367:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    a36b:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    a370:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a374:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    a378:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a37c:	48 89 ce             	mov    %rcx,%rsi
    a37f:	48 89 c7             	mov    %rax,%rdi
    a382:	e8 c9 b0 ff ff       	call   5450 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    a387:	85 c0                	test   %eax,%eax
    a389:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    a38c:	84 c0                	test   %al,%al
    a38e:	74 51                	je     a3e1 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    a390:	bf 10 00 00 00       	mov    $0x10,%edi
    a395:	e8 86 ae ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a39a:	48 89 c3             	mov    %rax,%rbx
    a39d:	48 8d 05 14 af 01 00 	lea    0x1af14(%rip),%rax        # 252b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb8>
    a3a4:	48 89 c6             	mov    %rax,%rsi
    a3a7:	48 89 df             	mov    %rbx,%rdi
    a3aa:	e8 c1 ad ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a3af:	48 8b 05 0a ec 02 00 	mov    0x2ec0a(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a3b6:	48 89 c2             	mov    %rax,%rdx
    a3b9:	48 8d 05 80 e9 02 00 	lea    0x2e980(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a3c0:	48 89 c6             	mov    %rax,%rsi
    a3c3:	48 89 df             	mov    %rbx,%rdi
    a3c6:	e8 c5 b5 ff ff       	call   5990 <__cxa_throw@plt>
    a3cb:	49 89 c4             	mov    %rax,%r12
    a3ce:	48 89 df             	mov    %rbx,%rdi
    a3d1:	e8 7a af ff ff       	call   5350 <__cxa_free_exception@plt>
    a3d6:	4c 89 e0             	mov    %r12,%rax
    a3d9:	48 89 c7             	mov    %rax,%rdi
    a3dc:	e8 1f b6 ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    a3e1:	90                   	nop
}
    a3e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3e6:	48 83 c4 20          	add    $0x20,%rsp
    a3ea:	5b                   	pop    %rbx
    a3eb:	41 5c                	pop    %r12
    a3ed:	5d                   	pop    %rbp
    a3ee:	c3                   	ret

000000000000a3ef <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    a3ef:	55                   	push   %rbp
    a3f0:	48 89 e5             	mov    %rsp,%rbp
    a3f3:	41 54                	push   %r12
    a3f5:	53                   	push   %rbx
    a3f6:	48 83 ec 30          	sub    $0x30,%rsp
    a3fa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a3fe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a402:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    a406:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    a40a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a40e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a412:	b9 00 00 00 00       	mov    $0x0,%ecx
    a417:	48 89 c7             	mov    %rax,%rdi
    a41a:	e8 01 b3 ff ff       	call   5720 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    a41f:	85 c0                	test   %eax,%eax
    a421:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    a424:	84 c0                	test   %al,%al
    a426:	74 3b                	je     a463 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    a428:	bf 10 00 00 00       	mov    $0x10,%edi
    a42d:	e8 ee ad ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a432:	48 89 c3             	mov    %rax,%rbx
    a435:	48 8d 05 a4 ae 01 00 	lea    0x1aea4(%rip),%rax        # 252e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    a43c:	48 89 c6             	mov    %rax,%rsi
    a43f:	48 89 df             	mov    %rbx,%rdi
    a442:	e8 29 ad ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a447:	48 8b 05 72 eb 02 00 	mov    0x2eb72(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a44e:	48 89 c2             	mov    %rax,%rdx
    a451:	48 8d 05 e8 e8 02 00 	lea    0x2e8e8(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a458:	48 89 c6             	mov    %rax,%rsi
    a45b:	48 89 df             	mov    %rbx,%rdi
    a45e:	e8 2d b5 ff ff       	call   5990 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    a463:	8b 45 e8             	mov    -0x18(%rbp),%eax
    a466:	89 c3                	mov    %eax,%ebx
    a468:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a46c:	48 89 c7             	mov    %rax,%rdi
    a46f:	e8 84 0e 00 00       	call   b2f8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    a474:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a478:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a47c:	48 89 de             	mov    %rbx,%rsi
    a47f:	48 89 c7             	mov    %rax,%rdi
    a482:	e8 a9 0e 00 00       	call   b330 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    a487:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a48b:	48 89 c7             	mov    %rax,%rdi
    a48e:	e8 81 0e 00 00       	call   b314 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    a493:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a497:	48 89 c7             	mov    %rax,%rdi
    a49a:	e8 4b 0f 00 00       	call   b3ea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    a49f:	48 89 c1             	mov    %rax,%rcx
    a4a2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    a4a6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a4aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a4ae:	48 89 c7             	mov    %rax,%rdi
    a4b1:	e8 6a b2 ff ff       	call   5720 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    a4b6:	85 c0                	test   %eax,%eax
    a4b8:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    a4bb:	84 c0                	test   %al,%al
    a4bd:	0f 84 95 00 00 00    	je     a558 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    a4c3:	bf 10 00 00 00       	mov    $0x10,%edi
    a4c8:	e8 53 ad ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a4cd:	48 89 c3             	mov    %rax,%rbx
    a4d0:	48 8d 05 09 ae 01 00 	lea    0x1ae09(%rip),%rax        # 252e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe0>
    a4d7:	48 89 c6             	mov    %rax,%rsi
    a4da:	48 89 df             	mov    %rbx,%rdi
    a4dd:	e8 8e ac ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a4e2:	48 8b 05 d7 ea 02 00 	mov    0x2ead7(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a4e9:	48 89 c2             	mov    %rax,%rdx
    a4ec:	48 8d 05 4d e8 02 00 	lea    0x2e84d(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a4f3:	48 89 c6             	mov    %rax,%rsi
    a4f6:	48 89 df             	mov    %rbx,%rdi
    a4f9:	e8 92 b4 ff ff       	call   5990 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    a4fe:	49 89 c4             	mov    %rax,%r12
    a501:	48 89 df             	mov    %rbx,%rdi
    a504:	e8 47 ae ff ff       	call   5350 <__cxa_free_exception@plt>
    a509:	4c 89 e0             	mov    %r12,%rax
    a50c:	48 89 c7             	mov    %rax,%rdi
    a50f:	e8 ec b4 ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    a514:	48 89 c3             	mov    %rax,%rbx
    a517:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a51b:	48 89 c7             	mov    %rax,%rdi
    a51e:	e8 f1 0d 00 00       	call   b314 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    a523:	48 89 d8             	mov    %rbx,%rax
    a526:	48 89 c7             	mov    %rax,%rdi
    a529:	e8 d2 b4 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    a52e:	49 89 c4             	mov    %rax,%r12
    a531:	48 89 df             	mov    %rbx,%rdi
    a534:	e8 17 ae ff ff       	call   5350 <__cxa_free_exception@plt>
    a539:	4c 89 e3             	mov    %r12,%rbx
    a53c:	eb 03                	jmp    a541 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    a53e:	48 89 c3             	mov    %rax,%rbx
    a541:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a545:	48 89 c7             	mov    %rax,%rdi
    a548:	e8 59 0e 00 00       	call   b3a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    a54d:	48 89 d8             	mov    %rbx,%rax
    a550:	48 89 c7             	mov    %rax,%rdi
    a553:	e8 a8 b4 ff ff       	call   5a00 <_Unwind_Resume@plt>
  return surfaceFormats;
    a558:	90                   	nop
}
    a559:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a55d:	48 83 c4 30          	add    $0x30,%rsp
    a561:	5b                   	pop    %rbx
    a562:	41 5c                	pop    %r12
    a564:	5d                   	pop    %rbp
    a565:	c3                   	ret

000000000000a566 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    a566:	55                   	push   %rbp
    a567:	48 89 e5             	mov    %rsp,%rbp
    a56a:	41 54                	push   %r12
    a56c:	53                   	push   %rbx
    a56d:	48 83 ec 30          	sub    $0x30,%rsp
    a571:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a575:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a579:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    a57d:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    a581:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a585:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a589:	b9 00 00 00 00       	mov    $0x0,%ecx
    a58e:	48 89 c7             	mov    %rax,%rdi
    a591:	e8 9a b1 ff ff       	call   5730 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    a596:	85 c0                	test   %eax,%eax
    a598:	0f 95 c0             	setne  %al
    a59b:	84 c0                	test   %al,%al
    a59d:	74 3b                	je     a5da <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    a59f:	bf 10 00 00 00       	mov    $0x10,%edi
    a5a4:	e8 77 ac ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a5a9:	48 89 c3             	mov    %rax,%rbx
    a5ac:	48 8d 05 55 ad 01 00 	lea    0x1ad55(%rip),%rax        # 25308 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    a5b3:	48 89 c6             	mov    %rax,%rsi
    a5b6:	48 89 df             	mov    %rbx,%rdi
    a5b9:	e8 b2 ab ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a5be:	48 8b 05 fb e9 02 00 	mov    0x2e9fb(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a5c5:	48 89 c2             	mov    %rax,%rdx
    a5c8:	48 8d 05 71 e7 02 00 	lea    0x2e771(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a5cf:	48 89 c6             	mov    %rax,%rsi
    a5d2:	48 89 df             	mov    %rbx,%rdi
    a5d5:	e8 b6 b3 ff ff       	call   5990 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    a5da:	8b 45 e8             	mov    -0x18(%rbp),%eax
    a5dd:	89 c3                	mov    %eax,%ebx
    a5df:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a5e3:	48 89 c7             	mov    %rax,%rdi
    a5e6:	e8 71 0e 00 00       	call   b45c <_ZNSaI16VkPresentModeKHREC1Ev>
    a5eb:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a5ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5f3:	48 89 de             	mov    %rbx,%rsi
    a5f6:	48 89 c7             	mov    %rax,%rdi
    a5f9:	e8 96 0e 00 00       	call   b494 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    a5fe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a602:	48 89 c7             	mov    %rax,%rdi
    a605:	e8 6e 0e 00 00       	call   b478 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    a60a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a60e:	48 89 c7             	mov    %rax,%rdi
    a611:	e8 38 0f 00 00       	call   b54e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    a616:	48 89 c1             	mov    %rax,%rcx
    a619:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    a61d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a621:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a625:	48 89 c7             	mov    %rax,%rdi
    a628:	e8 03 b1 ff ff       	call   5730 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    a62d:	85 c0                	test   %eax,%eax
    a62f:	0f 95 c0             	setne  %al
    a632:	84 c0                	test   %al,%al
    a634:	0f 84 95 00 00 00    	je     a6cf <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    a63a:	bf 10 00 00 00       	mov    $0x10,%edi
    a63f:	e8 dc ab ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a644:	48 89 c3             	mov    %rax,%rbx
    a647:	48 8d 05 ba ac 01 00 	lea    0x1acba(%rip),%rax        # 25308 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x108>
    a64e:	48 89 c6             	mov    %rax,%rsi
    a651:	48 89 df             	mov    %rbx,%rdi
    a654:	e8 17 ab ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a659:	48 8b 05 60 e9 02 00 	mov    0x2e960(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a660:	48 89 c2             	mov    %rax,%rdx
    a663:	48 8d 05 d6 e6 02 00 	lea    0x2e6d6(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a66a:	48 89 c6             	mov    %rax,%rsi
    a66d:	48 89 df             	mov    %rbx,%rdi
    a670:	e8 1b b3 ff ff       	call   5990 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    a675:	49 89 c4             	mov    %rax,%r12
    a678:	48 89 df             	mov    %rbx,%rdi
    a67b:	e8 d0 ac ff ff       	call   5350 <__cxa_free_exception@plt>
    a680:	4c 89 e0             	mov    %r12,%rax
    a683:	48 89 c7             	mov    %rax,%rdi
    a686:	e8 75 b3 ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    a68b:	48 89 c3             	mov    %rax,%rbx
    a68e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a692:	48 89 c7             	mov    %rax,%rdi
    a695:	e8 de 0d 00 00       	call   b478 <_ZNSaI16VkPresentModeKHRED1Ev>
    a69a:	48 89 d8             	mov    %rbx,%rax
    a69d:	48 89 c7             	mov    %rax,%rdi
    a6a0:	e8 5b b3 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    a6a5:	49 89 c4             	mov    %rax,%r12
    a6a8:	48 89 df             	mov    %rbx,%rdi
    a6ab:	e8 a0 ac ff ff       	call   5350 <__cxa_free_exception@plt>
    a6b0:	4c 89 e3             	mov    %r12,%rbx
    a6b3:	eb 03                	jmp    a6b8 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    a6b5:	48 89 c3             	mov    %rax,%rbx
    a6b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6bc:	48 89 c7             	mov    %rax,%rdi
    a6bf:	e8 46 0e 00 00       	call   b50a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    a6c4:	48 89 d8             	mov    %rbx,%rax
    a6c7:	48 89 c7             	mov    %rax,%rdi
    a6ca:	e8 31 b3 ff ff       	call   5a00 <_Unwind_Resume@plt>
  return presentModes;
    a6cf:	90                   	nop
}
    a6d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6d4:	48 83 c4 30          	add    $0x30,%rsp
    a6d8:	5b                   	pop    %rbx
    a6d9:	41 5c                	pop    %r12
    a6db:	5d                   	pop    %rbp
    a6dc:	c3                   	ret

000000000000a6dd <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    a6dd:	55                   	push   %rbp
    a6de:	48 89 e5             	mov    %rsp,%rbp
    a6e1:	41 54                	push   %r12
    a6e3:	53                   	push   %rbx
    a6e4:	48 83 ec 30          	sub    $0x30,%rsp
    a6e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a6ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a6f0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    a6f4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    a6f8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a6fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a700:	b9 00 00 00 00       	mov    $0x0,%ecx
    a705:	48 89 c7             	mov    %rax,%rdi
    a708:	e8 b3 ab ff ff       	call   52c0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    a70d:	85 c0                	test   %eax,%eax
    a70f:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    a712:	84 c0                	test   %al,%al
    a714:	74 3b                	je     a751 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    a716:	bf 10 00 00 00       	mov    $0x10,%edi
    a71b:	e8 00 ab ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a720:	48 89 c3             	mov    %rax,%rbx
    a723:	48 8d 05 0e ac 01 00 	lea    0x1ac0e(%rip),%rax        # 25338 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    a72a:	48 89 c6             	mov    %rax,%rsi
    a72d:	48 89 df             	mov    %rbx,%rdi
    a730:	e8 3b aa ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a735:	48 8b 05 84 e8 02 00 	mov    0x2e884(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a73c:	48 89 c2             	mov    %rax,%rdx
    a73f:	48 8d 05 fa e5 02 00 	lea    0x2e5fa(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a746:	48 89 c6             	mov    %rax,%rsi
    a749:	48 89 df             	mov    %rbx,%rdi
    a74c:	e8 3f b2 ff ff       	call   5990 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    a751:	8b 45 e8             	mov    -0x18(%rbp),%eax
    a754:	89 c3                	mov    %eax,%ebx
    a756:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a75a:	48 89 c7             	mov    %rax,%rdi
    a75d:	e8 5e 0e 00 00       	call   b5c0 <_ZNSaIP9VkImage_TEC1Ev>
    a762:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a766:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a76a:	48 89 de             	mov    %rbx,%rsi
    a76d:	48 89 c7             	mov    %rax,%rdi
    a770:	e8 83 0e 00 00       	call   b5f8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    a775:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a779:	48 89 c7             	mov    %rax,%rdi
    a77c:	e8 5b 0e 00 00       	call   b5dc <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    a781:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a785:	48 89 c7             	mov    %rax,%rdi
    a788:	e8 25 0f 00 00       	call   b6b2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    a78d:	48 89 c1             	mov    %rax,%rcx
    a790:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    a794:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a798:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a79c:	48 89 c7             	mov    %rax,%rdi
    a79f:	e8 1c ab ff ff       	call   52c0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    a7a4:	85 c0                	test   %eax,%eax
    a7a6:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    a7a9:	84 c0                	test   %al,%al
    a7ab:	0f 84 95 00 00 00    	je     a846 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    a7b1:	bf 10 00 00 00       	mov    $0x10,%edi
    a7b6:	e8 65 aa ff ff       	call   5220 <__cxa_allocate_exception@plt>
    a7bb:	48 89 c3             	mov    %rax,%rbx
    a7be:	48 8d 05 73 ab 01 00 	lea    0x1ab73(%rip),%rax        # 25338 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x138>
    a7c5:	48 89 c6             	mov    %rax,%rsi
    a7c8:	48 89 df             	mov    %rbx,%rdi
    a7cb:	e8 a0 a9 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    a7d0:	48 8b 05 e9 e7 02 00 	mov    0x2e7e9(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a7d7:	48 89 c2             	mov    %rax,%rdx
    a7da:	48 8d 05 5f e5 02 00 	lea    0x2e55f(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a7e1:	48 89 c6             	mov    %rax,%rsi
    a7e4:	48 89 df             	mov    %rbx,%rdi
    a7e7:	e8 a4 b1 ff ff       	call   5990 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    a7ec:	49 89 c4             	mov    %rax,%r12
    a7ef:	48 89 df             	mov    %rbx,%rdi
    a7f2:	e8 59 ab ff ff       	call   5350 <__cxa_free_exception@plt>
    a7f7:	4c 89 e0             	mov    %r12,%rax
    a7fa:	48 89 c7             	mov    %rax,%rdi
    a7fd:	e8 fe b1 ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    a802:	48 89 c3             	mov    %rax,%rbx
    a805:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a809:	48 89 c7             	mov    %rax,%rdi
    a80c:	e8 cb 0d 00 00       	call   b5dc <_ZNSaIP9VkImage_TED1Ev>
    a811:	48 89 d8             	mov    %rbx,%rax
    a814:	48 89 c7             	mov    %rax,%rdi
    a817:	e8 e4 b1 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    a81c:	49 89 c4             	mov    %rax,%r12
    a81f:	48 89 df             	mov    %rbx,%rdi
    a822:	e8 29 ab ff ff       	call   5350 <__cxa_free_exception@plt>
    a827:	4c 89 e3             	mov    %r12,%rbx
    a82a:	eb 03                	jmp    a82f <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    a82c:	48 89 c3             	mov    %rax,%rbx
    a82f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a833:	48 89 c7             	mov    %rax,%rdi
    a836:	e8 33 0e 00 00       	call   b66e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    a83b:	48 89 d8             	mov    %rbx,%rax
    a83e:	48 89 c7             	mov    %rax,%rdi
    a841:	e8 ba b1 ff ff       	call   5a00 <_Unwind_Resume@plt>
  return swapchainImages;
    a846:	90                   	nop
}
    a847:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a84b:	48 83 c4 30          	add    $0x30,%rsp
    a84f:	5b                   	pop    %rbx
    a850:	41 5c                	pop    %r12
    a852:	5d                   	pop    %rbp
    a853:	c3                   	ret

000000000000a854 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    a854:	55                   	push   %rbp
    a855:	48 89 e5             	mov    %rsp,%rbp
    a858:	48 83 ec 10          	sub    $0x10,%rsp
    a85c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a864:	48 89 c7             	mov    %rax,%rdi
    a867:	e8 00 01 00 00       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
    a86c:	90                   	nop
    a86d:	c9                   	leave
    a86e:	c3                   	ret
    a86f:	90                   	nop

000000000000a870 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    a870:	55                   	push   %rbp
    a871:	48 89 e5             	mov    %rsp,%rbp
    a874:	48 83 ec 10          	sub    $0x10,%rsp
    a878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a87c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a880:	48 89 c7             	mov    %rax,%rdi
    a883:	e8 52 02 00 00       	call   aada <_ZNSaI21VkExtensionPropertiesED1Ev>
    a888:	90                   	nop
    a889:	c9                   	leave
    a88a:	c3                   	ret
    a88b:	90                   	nop

000000000000a88c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    a88c:	55                   	push   %rbp
    a88d:	48 89 e5             	mov    %rsp,%rbp
    a890:	48 83 ec 10          	sub    $0x10,%rsp
    a894:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a89c:	48 89 c7             	mov    %rax,%rdi
    a89f:	e8 a4 03 00 00       	call   ac48 <_ZNSaIPKcED1Ev>
    a8a4:	90                   	nop
    a8a5:	c9                   	leave
    a8a6:	c3                   	ret
    a8a7:	90                   	nop

000000000000a8a8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    a8a8:	55                   	push   %rbp
    a8a9:	48 89 e5             	mov    %rsp,%rbp
    a8ac:	48 83 ec 10          	sub    $0x10,%rsp
    a8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b8:	48 89 c7             	mov    %rax,%rdi
    a8bb:	e8 a4 04 00 00       	call   ad64 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    a8c0:	90                   	nop
    a8c1:	c9                   	leave
    a8c2:	c3                   	ret
    a8c3:	90                   	nop

000000000000a8c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    a8c4:	55                   	push   %rbp
    a8c5:	48 89 e5             	mov    %rsp,%rbp
    a8c8:	48 83 ec 10          	sub    $0x10,%rsp
    a8cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8d4:	48 89 c7             	mov    %rax,%rdi
    a8d7:	e8 ec 05 00 00       	call   aec8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    a8dc:	90                   	nop
    a8dd:	c9                   	leave
    a8de:	c3                   	ret
    a8df:	90                   	nop

000000000000a8e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    a8e0:	55                   	push   %rbp
    a8e1:	48 89 e5             	mov    %rsp,%rbp
    a8e4:	48 83 ec 10          	sub    $0x10,%rsp
    a8e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f0:	48 89 c7             	mov    %rax,%rdi
    a8f3:	e8 6c 07 00 00       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    a8f8:	90                   	nop
    a8f9:	c9                   	leave
    a8fa:	c3                   	ret
    a8fb:	90                   	nop

000000000000a8fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    a8fc:	55                   	push   %rbp
    a8fd:	48 89 e5             	mov    %rsp,%rbp
    a900:	48 83 ec 10          	sub    $0x10,%rsp
    a904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a90c:	48 89 c7             	mov    %rax,%rdi
    a90f:	e8 00 0a 00 00       	call   b314 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    a914:	90                   	nop
    a915:	c9                   	leave
    a916:	c3                   	ret
    a917:	90                   	nop

000000000000a918 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    a918:	55                   	push   %rbp
    a919:	48 89 e5             	mov    %rsp,%rbp
    a91c:	48 83 ec 10          	sub    $0x10,%rsp
    a920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a928:	48 89 c7             	mov    %rax,%rdi
    a92b:	e8 48 0b 00 00       	call   b478 <_ZNSaI16VkPresentModeKHRED1Ev>
    a930:	90                   	nop
    a931:	c9                   	leave
    a932:	c3                   	ret
    a933:	90                   	nop

000000000000a934 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    a934:	55                   	push   %rbp
    a935:	48 89 e5             	mov    %rsp,%rbp
    a938:	48 83 ec 10          	sub    $0x10,%rsp
    a93c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a944:	48 89 c7             	mov    %rax,%rdi
    a947:	e8 90 0c 00 00       	call   b5dc <_ZNSaIP9VkImage_TED1Ev>
    a94c:	90                   	nop
    a94d:	c9                   	leave
    a94e:	c3                   	ret
    a94f:	90                   	nop

000000000000a950 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a950:	55                   	push   %rbp
    a951:	48 89 e5             	mov    %rsp,%rbp
    a954:	48 83 ec 10          	sub    $0x10,%rsp
    a958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a95c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a960:	48 89 c7             	mov    %rax,%rdi
    a963:	e8 bc 0d 00 00       	call   b724 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    a968:	90                   	nop
    a969:	c9                   	leave
    a96a:	c3                   	ret
    a96b:	90                   	nop

000000000000a96c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a96c:	55                   	push   %rbp
    a96d:	48 89 e5             	mov    %rsp,%rbp
    a970:	48 83 ec 10          	sub    $0x10,%rsp
    a974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a978:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a97c:	48 89 c7             	mov    %rax,%rdi
    a97f:	e8 ac 0d 00 00       	call   b730 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    a984:	90                   	nop
    a985:	c9                   	leave
    a986:	c3                   	ret
    a987:	90                   	nop

000000000000a988 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a988:	55                   	push   %rbp
    a989:	48 89 e5             	mov    %rsp,%rbp
    a98c:	53                   	push   %rbx
    a98d:	48 83 ec 28          	sub    $0x28,%rsp
    a991:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a995:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a999:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a99d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a9a1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a9a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9a9:	48 89 d6             	mov    %rdx,%rsi
    a9ac:	48 89 c7             	mov    %rax,%rdi
    a9af:	e8 87 0d 00 00       	call   b73b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    a9b4:	48 89 c1             	mov    %rax,%rcx
    a9b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a9bb:	48 89 c2             	mov    %rax,%rdx
    a9be:	48 89 ce             	mov    %rcx,%rsi
    a9c1:	48 89 df             	mov    %rbx,%rdi
    a9c4:	e8 d3 0d 00 00       	call   b79c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    a9c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a9cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9d1:	48 89 d6             	mov    %rdx,%rsi
    a9d4:	48 89 c7             	mov    %rax,%rdi
    a9d7:	e8 1e 0e 00 00       	call   b7fa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    a9dc:	eb 1a                	jmp    a9f8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    a9de:	48 89 c3             	mov    %rax,%rbx
    a9e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9e5:	48 89 c7             	mov    %rax,%rdi
    a9e8:	e8 79 00 00 00       	call   aa66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    a9ed:	48 89 d8             	mov    %rbx,%rax
    a9f0:	48 89 c7             	mov    %rax,%rdi
    a9f3:	e8 08 b0 ff ff       	call   5a00 <_Unwind_Resume@plt>
    a9f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a9fc:	c9                   	leave
    a9fd:	c3                   	ret

000000000000a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a9fe:	55                   	push   %rbp
    a9ff:	48 89 e5             	mov    %rsp,%rbp
    aa02:	48 83 ec 10          	sub    $0x10,%rsp
    aa06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    aa0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa0e:	48 89 c7             	mov    %rax,%rdi
    aa11:	e8 24 0e 00 00       	call   b83a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    aa16:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    aa19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa1d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    aa21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa25:	48 8b 00             	mov    (%rax),%rax
    aa28:	48 89 ce             	mov    %rcx,%rsi
    aa2b:	48 89 c7             	mov    %rax,%rdi
    aa2e:	e8 15 0e 00 00       	call   b848 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    aa33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa37:	48 89 c7             	mov    %rax,%rdi
    aa3a:	e8 27 00 00 00       	call   aa66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    aa3f:	90                   	nop
    aa40:	c9                   	leave
    aa41:	c3                   	ret

000000000000aa42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    aa42:	55                   	push   %rbp
    aa43:	48 89 e5             	mov    %rsp,%rbp
    aa46:	48 83 ec 10          	sub    $0x10,%rsp
    aa4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    aa4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa52:	48 8b 10             	mov    (%rax),%rdx
    aa55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa59:	48 89 d6             	mov    %rdx,%rsi
    aa5c:	48 89 c7             	mov    %rax,%rdi
    aa5f:	e8 0e 0e 00 00       	call   b872 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    aa64:	c9                   	leave
    aa65:	c3                   	ret

000000000000aa66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    aa66:	55                   	push   %rbp
    aa67:	48 89 e5             	mov    %rsp,%rbp
    aa6a:	48 83 ec 10          	sub    $0x10,%rsp
    aa6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    aa72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa76:	48 8b 50 10          	mov    0x10(%rax),%rdx
    aa7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa7e:	48 8b 00             	mov    (%rax),%rax
    aa81:	48 29 c2             	sub    %rax,%rdx
    aa84:	48 c1 fa 03          	sar    $0x3,%rdx
    aa88:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    aa8f:	fc c0 0f 
    aa92:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    aa96:	48 89 c2             	mov    %rax,%rdx
    aa99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa9d:	48 8b 08             	mov    (%rax),%rcx
    aaa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaa4:	48 89 ce             	mov    %rcx,%rsi
    aaa7:	48 89 c7             	mov    %rax,%rdi
    aaaa:	e8 fb 0d 00 00       	call   b8aa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    aaaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aab3:	48 89 c7             	mov    %rax,%rdi
    aab6:	e8 99 fd ff ff       	call   a854 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    aabb:	90                   	nop
    aabc:	c9                   	leave
    aabd:	c3                   	ret

000000000000aabe <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    aabe:	55                   	push   %rbp
    aabf:	48 89 e5             	mov    %rsp,%rbp
    aac2:	48 83 ec 10          	sub    $0x10,%rsp
    aac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aace:	48 89 c7             	mov    %rax,%rdi
    aad1:	e8 0a 0e 00 00       	call   b8e0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    aad6:	90                   	nop
    aad7:	c9                   	leave
    aad8:	c3                   	ret
    aad9:	90                   	nop

000000000000aada <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    aada:	55                   	push   %rbp
    aadb:	48 89 e5             	mov    %rsp,%rbp
    aade:	48 83 ec 10          	sub    $0x10,%rsp
    aae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaea:	48 89 c7             	mov    %rax,%rdi
    aaed:	e8 fa 0d 00 00       	call   b8ec <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    aaf2:	90                   	nop
    aaf3:	c9                   	leave
    aaf4:	c3                   	ret
    aaf5:	90                   	nop

000000000000aaf6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    aaf6:	55                   	push   %rbp
    aaf7:	48 89 e5             	mov    %rsp,%rbp
    aafa:	53                   	push   %rbx
    aafb:	48 83 ec 28          	sub    $0x28,%rsp
    aaff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ab07:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    ab0b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ab0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ab13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab17:	48 89 d6             	mov    %rdx,%rsi
    ab1a:	48 89 c7             	mov    %rax,%rdi
    ab1d:	e8 d5 0d 00 00       	call   b8f7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    ab22:	48 89 c1             	mov    %rax,%rcx
    ab25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab29:	48 89 c2             	mov    %rax,%rdx
    ab2c:	48 89 ce             	mov    %rcx,%rsi
    ab2f:	48 89 df             	mov    %rbx,%rdi
    ab32:	e8 21 0e 00 00       	call   b958 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    ab37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab3f:	48 89 d6             	mov    %rdx,%rsi
    ab42:	48 89 c7             	mov    %rax,%rdi
    ab45:	e8 6c 0e 00 00       	call   b9b6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    ab4a:	eb 1a                	jmp    ab66 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    ab4c:	48 89 c3             	mov    %rax,%rbx
    ab4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab53:	48 89 c7             	mov    %rax,%rdi
    ab56:	e8 79 00 00 00       	call   abd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    ab5b:	48 89 d8             	mov    %rbx,%rax
    ab5e:	48 89 c7             	mov    %rax,%rdi
    ab61:	e8 9a ae ff ff       	call   5a00 <_Unwind_Resume@plt>
    ab66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ab6a:	c9                   	leave
    ab6b:	c3                   	ret

000000000000ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    ab6c:	55                   	push   %rbp
    ab6d:	48 89 e5             	mov    %rsp,%rbp
    ab70:	48 83 ec 10          	sub    $0x10,%rsp
    ab74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    ab78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab7c:	48 89 c7             	mov    %rax,%rdi
    ab7f:	e8 72 0e 00 00       	call   b9f6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ab84:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    ab87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab8b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ab8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab93:	48 8b 00             	mov    (%rax),%rax
    ab96:	48 89 ce             	mov    %rcx,%rsi
    ab99:	48 89 c7             	mov    %rax,%rdi
    ab9c:	e8 63 0e 00 00       	call   ba04 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    aba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba5:	48 89 c7             	mov    %rax,%rdi
    aba8:	e8 27 00 00 00       	call   abd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    abad:	90                   	nop
    abae:	c9                   	leave
    abaf:	c3                   	ret

000000000000abb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    abb0:	55                   	push   %rbp
    abb1:	48 89 e5             	mov    %rsp,%rbp
    abb4:	48 83 ec 10          	sub    $0x10,%rsp
    abb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    abbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc0:	48 8b 10             	mov    (%rax),%rdx
    abc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc7:	48 89 d6             	mov    %rdx,%rsi
    abca:	48 89 c7             	mov    %rax,%rdi
    abcd:	e8 5c 0e 00 00       	call   ba2e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    abd2:	c9                   	leave
    abd3:	c3                   	ret

000000000000abd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    abd4:	55                   	push   %rbp
    abd5:	48 89 e5             	mov    %rsp,%rbp
    abd8:	48 83 ec 10          	sub    $0x10,%rsp
    abdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    abe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abe4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    abe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abec:	48 8b 00             	mov    (%rax),%rax
    abef:	48 29 c2             	sub    %rax,%rdx
    abf2:	48 c1 fa 02          	sar    $0x2,%rdx
    abf6:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    abfd:	fc c0 0f 
    ac00:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    ac04:	48 89 c2             	mov    %rax,%rdx
    ac07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac0b:	48 8b 08             	mov    (%rax),%rcx
    ac0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac12:	48 89 ce             	mov    %rcx,%rsi
    ac15:	48 89 c7             	mov    %rax,%rdi
    ac18:	e8 49 0e 00 00       	call   ba66 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    ac1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac21:	48 89 c7             	mov    %rax,%rdi
    ac24:	e8 47 fc ff ff       	call   a870 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    ac29:	90                   	nop
    ac2a:	c9                   	leave
    ac2b:	c3                   	ret

000000000000ac2c <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ac2c:	55                   	push   %rbp
    ac2d:	48 89 e5             	mov    %rsp,%rbp
    ac30:	48 83 ec 10          	sub    $0x10,%rsp
    ac34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac3c:	48 89 c7             	mov    %rax,%rdi
    ac3f:	e8 58 0e 00 00       	call   ba9c <_ZNSt15__new_allocatorIPKcEC1Ev>
    ac44:	90                   	nop
    ac45:	c9                   	leave
    ac46:	c3                   	ret
    ac47:	90                   	nop

000000000000ac48 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    ac48:	55                   	push   %rbp
    ac49:	48 89 e5             	mov    %rsp,%rbp
    ac4c:	48 83 ec 10          	sub    $0x10,%rsp
    ac50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac58:	48 89 c7             	mov    %rax,%rdi
    ac5b:	e8 48 0e 00 00       	call   baa8 <_ZNSt15__new_allocatorIPKcED1Ev>
    ac60:	90                   	nop
    ac61:	c9                   	leave
    ac62:	c3                   	ret
    ac63:	90                   	nop

000000000000ac64 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    ac64:	55                   	push   %rbp
    ac65:	48 89 e5             	mov    %rsp,%rbp
    ac68:	53                   	push   %rbx
    ac69:	48 83 ec 28          	sub    $0x28,%rsp
    ac6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ac75:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    ac79:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ac7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ac81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac85:	48 89 d6             	mov    %rdx,%rsi
    ac88:	48 89 c7             	mov    %rax,%rdi
    ac8b:	e8 23 0e 00 00       	call   bab3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    ac90:	48 89 c1             	mov    %rax,%rcx
    ac93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac97:	48 89 c2             	mov    %rax,%rdx
    ac9a:	48 89 ce             	mov    %rcx,%rsi
    ac9d:	48 89 df             	mov    %rbx,%rdi
    aca0:	e8 6f 0e 00 00       	call   bb14 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    aca5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aca9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acad:	48 89 d6             	mov    %rdx,%rsi
    acb0:	48 89 c7             	mov    %rax,%rdi
    acb3:	e8 ba 0e 00 00       	call   bb72 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    acb8:	eb 1a                	jmp    acd4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    acba:	48 89 c3             	mov    %rax,%rbx
    acbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acc1:	48 89 c7             	mov    %rax,%rdi
    acc4:	e8 31 00 00 00       	call   acfa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    acc9:	48 89 d8             	mov    %rbx,%rax
    accc:	48 89 c7             	mov    %rax,%rdi
    accf:	e8 2c ad ff ff       	call   5a00 <_Unwind_Resume@plt>
    acd4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    acd8:	c9                   	leave
    acd9:	c3                   	ret

000000000000acda <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    acda:	55                   	push   %rbp
    acdb:	48 89 e5             	mov    %rsp,%rbp
    acde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ace2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    ace6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acea:	48 8b 00             	mov    (%rax),%rax
    aced:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    acf1:	48 c1 e2 03          	shl    $0x3,%rdx
    acf5:	48 01 d0             	add    %rdx,%rax
      }
    acf8:	5d                   	pop    %rbp
    acf9:	c3                   	ret

000000000000acfa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    acfa:	55                   	push   %rbp
    acfb:	48 89 e5             	mov    %rsp,%rbp
    acfe:	48 83 ec 10          	sub    $0x10,%rsp
    ad02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    ad06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad0a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ad0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad12:	48 8b 00             	mov    (%rax),%rax
    ad15:	48 29 c2             	sub    %rax,%rdx
    ad18:	48 89 d0             	mov    %rdx,%rax
    ad1b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    ad1f:	48 89 c2             	mov    %rax,%rdx
    ad22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad26:	48 8b 08             	mov    (%rax),%rcx
    ad29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad2d:	48 89 ce             	mov    %rcx,%rsi
    ad30:	48 89 c7             	mov    %rax,%rdi
    ad33:	e8 ae 0e 00 00       	call   bbe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    ad38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad3c:	48 89 c7             	mov    %rax,%rdi
    ad3f:	e8 48 fb ff ff       	call   a88c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    ad44:	90                   	nop
    ad45:	c9                   	leave
    ad46:	c3                   	ret
    ad47:	90                   	nop

000000000000ad48 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ad48:	55                   	push   %rbp
    ad49:	48 89 e5             	mov    %rsp,%rbp
    ad4c:	48 83 ec 10          	sub    $0x10,%rsp
    ad50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad58:	48 89 c7             	mov    %rax,%rdi
    ad5b:	e8 bc 0e 00 00       	call   bc1c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    ad60:	90                   	nop
    ad61:	c9                   	leave
    ad62:	c3                   	ret
    ad63:	90                   	nop

000000000000ad64 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    ad64:	55                   	push   %rbp
    ad65:	48 89 e5             	mov    %rsp,%rbp
    ad68:	48 83 ec 10          	sub    $0x10,%rsp
    ad6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad74:	48 89 c7             	mov    %rax,%rdi
    ad77:	e8 ac 0e 00 00       	call   bc28 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    ad7c:	90                   	nop
    ad7d:	c9                   	leave
    ad7e:	c3                   	ret
    ad7f:	90                   	nop

000000000000ad80 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    ad80:	55                   	push   %rbp
    ad81:	48 89 e5             	mov    %rsp,%rbp
    ad84:	53                   	push   %rbx
    ad85:	48 83 ec 28          	sub    $0x28,%rsp
    ad89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ad91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    ad95:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ad99:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ad9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ada1:	48 89 d6             	mov    %rdx,%rsi
    ada4:	48 89 c7             	mov    %rax,%rdi
    ada7:	e8 87 0e 00 00       	call   bc33 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    adac:	48 89 c1             	mov    %rax,%rcx
    adaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    adb3:	48 89 c2             	mov    %rax,%rdx
    adb6:	48 89 ce             	mov    %rcx,%rsi
    adb9:	48 89 df             	mov    %rbx,%rdi
    adbc:	e8 d3 0e 00 00       	call   bc94 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    adc1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    adc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adc9:	48 89 d6             	mov    %rdx,%rsi
    adcc:	48 89 c7             	mov    %rax,%rdi
    adcf:	e8 1e 0f 00 00       	call   bcf2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    add4:	eb 1a                	jmp    adf0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    add6:	48 89 c3             	mov    %rax,%rbx
    add9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    addd:	48 89 c7             	mov    %rax,%rdi
    ade0:	e8 79 00 00 00       	call   ae5e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ade5:	48 89 d8             	mov    %rbx,%rax
    ade8:	48 89 c7             	mov    %rax,%rdi
    adeb:	e8 10 ac ff ff       	call   5a00 <_Unwind_Resume@plt>
    adf0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    adf4:	c9                   	leave
    adf5:	c3                   	ret

000000000000adf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    adf6:	55                   	push   %rbp
    adf7:	48 89 e5             	mov    %rsp,%rbp
    adfa:	48 83 ec 10          	sub    $0x10,%rsp
    adfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    ae02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae06:	48 89 c7             	mov    %rax,%rdi
    ae09:	e8 24 0f 00 00       	call   bd32 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ae0e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    ae11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae15:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ae19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1d:	48 8b 00             	mov    (%rax),%rax
    ae20:	48 89 ce             	mov    %rcx,%rsi
    ae23:	48 89 c7             	mov    %rax,%rdi
    ae26:	e8 15 0f 00 00       	call   bd40 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    ae2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae2f:	48 89 c7             	mov    %rax,%rdi
    ae32:	e8 27 00 00 00       	call   ae5e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ae37:	90                   	nop
    ae38:	c9                   	leave
    ae39:	c3                   	ret

000000000000ae3a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    ae3a:	55                   	push   %rbp
    ae3b:	48 89 e5             	mov    %rsp,%rbp
    ae3e:	48 83 ec 10          	sub    $0x10,%rsp
    ae42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    ae46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4a:	48 8b 10             	mov    (%rax),%rdx
    ae4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae51:	48 89 d6             	mov    %rdx,%rsi
    ae54:	48 89 c7             	mov    %rax,%rdi
    ae57:	e8 0e 0f 00 00       	call   bd6a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    ae5c:	c9                   	leave
    ae5d:	c3                   	ret

000000000000ae5e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    ae5e:	55                   	push   %rbp
    ae5f:	48 89 e5             	mov    %rsp,%rbp
    ae62:	48 83 ec 10          	sub    $0x10,%rsp
    ae66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    ae6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ae72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae76:	48 8b 00             	mov    (%rax),%rax
    ae79:	48 29 c2             	sub    %rax,%rdx
    ae7c:	48 89 d0             	mov    %rdx,%rax
    ae7f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    ae83:	48 89 c2             	mov    %rax,%rdx
    ae86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae8a:	48 8b 08             	mov    (%rax),%rcx
    ae8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae91:	48 89 ce             	mov    %rcx,%rsi
    ae94:	48 89 c7             	mov    %rax,%rdi
    ae97:	e8 06 0f 00 00       	call   bda2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    ae9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aea0:	48 89 c7             	mov    %rax,%rdi
    aea3:	e8 00 fa ff ff       	call   a8a8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    aea8:	90                   	nop
    aea9:	c9                   	leave
    aeaa:	c3                   	ret
    aeab:	90                   	nop

000000000000aeac <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    aeac:	55                   	push   %rbp
    aead:	48 89 e5             	mov    %rsp,%rbp
    aeb0:	48 83 ec 10          	sub    $0x10,%rsp
    aeb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebc:	48 89 c7             	mov    %rax,%rdi
    aebf:	e8 14 0f 00 00       	call   bdd8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    aec4:	90                   	nop
    aec5:	c9                   	leave
    aec6:	c3                   	ret
    aec7:	90                   	nop

000000000000aec8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    aec8:	55                   	push   %rbp
    aec9:	48 89 e5             	mov    %rsp,%rbp
    aecc:	48 83 ec 10          	sub    $0x10,%rsp
    aed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aed8:	48 89 c7             	mov    %rax,%rdi
    aedb:	e8 04 0f 00 00       	call   bde4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    aee0:	90                   	nop
    aee1:	c9                   	leave
    aee2:	c3                   	ret
    aee3:	90                   	nop

000000000000aee4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    aee4:	55                   	push   %rbp
    aee5:	48 89 e5             	mov    %rsp,%rbp
    aee8:	53                   	push   %rbx
    aee9:	48 83 ec 28          	sub    $0x28,%rsp
    aeed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aef1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aef5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    aef9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    aefd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    af01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    af05:	48 89 d6             	mov    %rdx,%rsi
    af08:	48 89 c7             	mov    %rax,%rdi
    af0b:	e8 df 0e 00 00       	call   bdef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    af10:	48 89 c1             	mov    %rax,%rcx
    af13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af17:	48 89 c2             	mov    %rax,%rdx
    af1a:	48 89 ce             	mov    %rcx,%rsi
    af1d:	48 89 df             	mov    %rbx,%rdi
    af20:	e8 2b 0f 00 00       	call   be50 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    af25:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    af29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af2d:	48 89 d6             	mov    %rdx,%rsi
    af30:	48 89 c7             	mov    %rax,%rdi
    af33:	e8 76 0f 00 00       	call   beae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    af38:	eb 1a                	jmp    af54 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    af3a:	48 89 c3             	mov    %rax,%rbx
    af3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af41:	48 89 c7             	mov    %rax,%rdi
    af44:	e8 79 00 00 00       	call   afc2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    af49:	48 89 d8             	mov    %rbx,%rax
    af4c:	48 89 c7             	mov    %rax,%rdi
    af4f:	e8 ac aa ff ff       	call   5a00 <_Unwind_Resume@plt>
    af54:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    af58:	c9                   	leave
    af59:	c3                   	ret

000000000000af5a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    af5a:	55                   	push   %rbp
    af5b:	48 89 e5             	mov    %rsp,%rbp
    af5e:	48 83 ec 10          	sub    $0x10,%rsp
    af62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    af66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af6a:	48 89 c7             	mov    %rax,%rdi
    af6d:	e8 7c 0f 00 00       	call   beee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    af72:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    af75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af79:	48 8b 48 08          	mov    0x8(%rax),%rcx
    af7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af81:	48 8b 00             	mov    (%rax),%rax
    af84:	48 89 ce             	mov    %rcx,%rsi
    af87:	48 89 c7             	mov    %rax,%rdi
    af8a:	e8 6d 0f 00 00       	call   befc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    af8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af93:	48 89 c7             	mov    %rax,%rdi
    af96:	e8 27 00 00 00       	call   afc2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    af9b:	90                   	nop
    af9c:	c9                   	leave
    af9d:	c3                   	ret

000000000000af9e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    af9e:	55                   	push   %rbp
    af9f:	48 89 e5             	mov    %rsp,%rbp
    afa2:	48 83 ec 10          	sub    $0x10,%rsp
    afa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    afaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afae:	48 8b 10             	mov    (%rax),%rdx
    afb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb5:	48 89 d6             	mov    %rdx,%rsi
    afb8:	48 89 c7             	mov    %rax,%rdi
    afbb:	e8 66 0f 00 00       	call   bf26 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    afc0:	c9                   	leave
    afc1:	c3                   	ret

000000000000afc2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    afc2:	55                   	push   %rbp
    afc3:	48 89 e5             	mov    %rsp,%rbp
    afc6:	48 83 ec 10          	sub    $0x10,%rsp
    afca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    afce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afd2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    afd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afda:	48 8b 00             	mov    (%rax),%rax
    afdd:	48 29 c2             	sub    %rax,%rdx
    afe0:	48 c1 fa 03          	sar    $0x3,%rdx
    afe4:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    afeb:	aa aa aa 
    afee:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    aff2:	48 89 c2             	mov    %rax,%rdx
    aff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff9:	48 8b 08             	mov    (%rax),%rcx
    affc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b000:	48 89 ce             	mov    %rcx,%rsi
    b003:	48 89 c7             	mov    %rax,%rdi
    b006:	e8 53 0f 00 00       	call   bf5e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    b00b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b00f:	48 89 c7             	mov    %rax,%rdi
    b012:	e8 ad f8 ff ff       	call   a8c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    b017:	90                   	nop
    b018:	c9                   	leave
    b019:	c3                   	ret

000000000000b01a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    b01a:	55                   	push   %rbp
    b01b:	48 89 e5             	mov    %rsp,%rbp
    b01e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    b022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b026:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b02a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b02e:	48 8b 00             	mov    (%rax),%rax
    b031:	48 29 c2             	sub    %rax,%rdx
    b034:	48 c1 fa 03          	sar    $0x3,%rdx
    b038:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    b03f:	aa aa aa 
    b042:	48 0f af c2          	imul   %rdx,%rax
    b046:	5d                   	pop    %rbp
    b047:	c3                   	ret

000000000000b048 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    b048:	55                   	push   %rbp
    b049:	48 89 e5             	mov    %rsp,%rbp
    b04c:	48 83 ec 10          	sub    $0x10,%rsp
    b050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b058:	48 89 c7             	mov    %rax,%rdi
    b05b:	e8 34 0f 00 00       	call   bf94 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    b060:	90                   	nop
    b061:	c9                   	leave
    b062:	c3                   	ret
    b063:	90                   	nop

000000000000b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    b064:	55                   	push   %rbp
    b065:	48 89 e5             	mov    %rsp,%rbp
    b068:	48 83 ec 10          	sub    $0x10,%rsp
    b06c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b074:	48 89 c7             	mov    %rax,%rdi
    b077:	e8 24 0f 00 00       	call   bfa0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    b07c:	90                   	nop
    b07d:	c9                   	leave
    b07e:	c3                   	ret
    b07f:	90                   	nop

000000000000b080 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    b080:	55                   	push   %rbp
    b081:	48 89 e5             	mov    %rsp,%rbp
    b084:	53                   	push   %rbx
    b085:	48 83 ec 28          	sub    $0x28,%rsp
    b089:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b08d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b091:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    b095:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b099:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b09d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0a1:	48 89 d6             	mov    %rdx,%rsi
    b0a4:	48 89 c7             	mov    %rax,%rdi
    b0a7:	e8 ff 0e 00 00       	call   bfab <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    b0ac:	48 89 c1             	mov    %rax,%rcx
    b0af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b0b3:	48 89 c2             	mov    %rax,%rdx
    b0b6:	48 89 ce             	mov    %rcx,%rsi
    b0b9:	48 89 df             	mov    %rbx,%rdi
    b0bc:	e8 4b 0f 00 00       	call   c00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    b0c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b0c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0c9:	48 89 d6             	mov    %rdx,%rsi
    b0cc:	48 89 c7             	mov    %rax,%rdi
    b0cf:	e8 96 0f 00 00       	call   c06a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    b0d4:	eb 1a                	jmp    b0f0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    b0d6:	48 89 c3             	mov    %rax,%rbx
    b0d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0dd:	48 89 c7             	mov    %rax,%rdi
    b0e0:	e8 bb 01 00 00       	call   b2a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b0e5:	48 89 d8             	mov    %rbx,%rax
    b0e8:	48 89 c7             	mov    %rax,%rdi
    b0eb:	e8 10 a9 ff ff       	call   5a00 <_Unwind_Resume@plt>
    b0f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b0f4:	c9                   	leave
    b0f5:	c3                   	ret

000000000000b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    b0f6:	55                   	push   %rbp
    b0f7:	48 89 e5             	mov    %rsp,%rbp
    b0fa:	48 83 ec 10          	sub    $0x10,%rsp
    b0fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    b102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b106:	48 89 c7             	mov    %rax,%rdi
    b109:	e8 9c 0f 00 00       	call   c0aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    b10e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    b111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b115:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b11d:	48 8b 00             	mov    (%rax),%rax
    b120:	48 89 ce             	mov    %rcx,%rsi
    b123:	48 89 c7             	mov    %rax,%rdi
    b126:	e8 8d 0f 00 00       	call   c0b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    b12b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b12f:	48 89 c7             	mov    %rax,%rdi
    b132:	e8 69 01 00 00       	call   b2a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b137:	90                   	nop
    b138:	c9                   	leave
    b139:	c3                   	ret

000000000000b13a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    b13a:	55                   	push   %rbp
    b13b:	48 89 e5             	mov    %rsp,%rbp
    b13e:	48 83 ec 20          	sub    $0x20,%rsp
    b142:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    b146:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b14a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b14e:	48 89 d6             	mov    %rdx,%rsi
    b151:	48 89 c7             	mov    %rax,%rdi
    b154:	e8 89 0f 00 00       	call   c0e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    b159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b15d:	c9                   	leave
    b15e:	c3                   	ret
    b15f:	90                   	nop

000000000000b160 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    b160:	55                   	push   %rbp
    b161:	48 89 e5             	mov    %rsp,%rbp
    b164:	48 83 ec 20          	sub    $0x20,%rsp
    b168:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    b16c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b170:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b174:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b178:	48 89 d6             	mov    %rdx,%rsi
    b17b:	48 89 c7             	mov    %rax,%rdi
    b17e:	e8 5f 0f 00 00       	call   c0e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    b183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b187:	c9                   	leave
    b188:	c3                   	ret

000000000000b189 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    b189:	55                   	push   %rbp
    b18a:	48 89 e5             	mov    %rsp,%rbp
    b18d:	53                   	push   %rbx
    b18e:	48 83 ec 18          	sub    $0x18,%rsp
    b192:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b196:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    b19a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b19e:	48 89 c7             	mov    %rax,%rdi
    b1a1:	e8 5a 0f 00 00       	call   c100 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    b1a6:	48 8b 18             	mov    (%rax),%rbx
    b1a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b1ad:	48 89 c7             	mov    %rax,%rdi
    b1b0:	e8 4b 0f 00 00       	call   c100 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    b1b5:	48 8b 00             	mov    (%rax),%rax
    b1b8:	48 39 c3             	cmp    %rax,%rbx
    b1bb:	0f 95 c0             	setne  %al
    b1be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b1c2:	c9                   	leave
    b1c3:	c3                   	ret

000000000000b1c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    b1c4:	55                   	push   %rbp
    b1c5:	48 89 e5             	mov    %rsp,%rbp
    b1c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    b1cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d0:	48 8b 00             	mov    (%rax),%rax
    b1d3:	48 8d 50 18          	lea    0x18(%rax),%rdx
    b1d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1db:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    b1de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    b1e2:	5d                   	pop    %rbp
    b1e3:	c3                   	ret

000000000000b1e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    b1e4:	55                   	push   %rbp
    b1e5:	48 89 e5             	mov    %rsp,%rbp
    b1e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    b1ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1f0:	48 8b 00             	mov    (%rax),%rax
    b1f3:	5d                   	pop    %rbp
    b1f4:	c3                   	ret
    b1f5:	90                   	nop

000000000000b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    b1f6:	55                   	push   %rbp
    b1f7:	48 89 e5             	mov    %rsp,%rbp
    b1fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    b202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b206:	48 8b 08             	mov    (%rax),%rcx
    b209:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b20d:	48 89 d0             	mov    %rdx,%rax
    b210:	48 c1 e0 03          	shl    $0x3,%rax
    b214:	48 29 d0             	sub    %rdx,%rax
    b217:	48 c1 e0 02          	shl    $0x2,%rax
    b21b:	48 01 c8             	add    %rcx,%rax
      }
    b21e:	5d                   	pop    %rbp
    b21f:	c3                   	ret

000000000000b220 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    b220:	55                   	push   %rbp
    b221:	48 89 e5             	mov    %rsp,%rbp
    b224:	53                   	push   %rbx
    b225:	48 83 ec 18          	sub    $0x18,%rsp
    b229:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b22d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    b231:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b235:	48 89 c7             	mov    %rax,%rdi
    b238:	e8 d1 0e 00 00       	call   c10e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    b23d:	84 c0                	test   %al,%al
    b23f:	74 36                	je     b277 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    b241:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b245:	48 89 c7             	mov    %rax,%rdi
    b248:	e8 17 0f 00 00       	call   c164 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    b24d:	48 89 c3             	mov    %rax,%rbx
    b250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b254:	48 89 c7             	mov    %rax,%rdi
    b257:	e8 c4 0e 00 00       	call   c120 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    b25c:	48 89 c1             	mov    %rax,%rcx
    b25f:	48 8b 03             	mov    (%rbx),%rax
    b262:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    b266:	48 89 01             	mov    %rax,(%rcx)
    b269:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    b26d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    b271:	48 89 41 10          	mov    %rax,0x10(%rcx)
    b275:	eb 1e                	jmp    b295 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    b277:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b27b:	48 89 c7             	mov    %rax,%rdi
    b27e:	e8 e1 0e 00 00       	call   c164 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    b283:	48 89 c2             	mov    %rax,%rdx
    b286:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b28a:	48 89 d6             	mov    %rdx,%rsi
    b28d:	48 89 c7             	mov    %rax,%rdi
    b290:	e8 dd 0e 00 00       	call   c172 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    b295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b299:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b29d:	c9                   	leave
    b29e:	c3                   	ret
    b29f:	90                   	nop

000000000000b2a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    b2a0:	55                   	push   %rbp
    b2a1:	48 89 e5             	mov    %rsp,%rbp
    b2a4:	48 83 ec 10          	sub    $0x10,%rsp
    b2a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    b2ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2b0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b2b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2b8:	48 8b 00             	mov    (%rax),%rax
    b2bb:	48 29 c2             	sub    %rax,%rdx
    b2be:	48 c1 fa 02          	sar    $0x2,%rdx
    b2c2:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    b2c9:	db b6 6d 
    b2cc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    b2d0:	48 89 c2             	mov    %rax,%rdx
    b2d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d7:	48 8b 08             	mov    (%rax),%rcx
    b2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2de:	48 89 ce             	mov    %rcx,%rsi
    b2e1:	48 89 c7             	mov    %rax,%rdi
    b2e4:	e8 e3 0e 00 00       	call   c1cc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    b2e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ed:	48 89 c7             	mov    %rax,%rdi
    b2f0:	e8 eb f5 ff ff       	call   a8e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    b2f5:	90                   	nop
    b2f6:	c9                   	leave
    b2f7:	c3                   	ret

000000000000b2f8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    b2f8:	55                   	push   %rbp
    b2f9:	48 89 e5             	mov    %rsp,%rbp
    b2fc:	48 83 ec 10          	sub    $0x10,%rsp
    b300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b308:	48 89 c7             	mov    %rax,%rdi
    b30b:	e8 f2 0e 00 00       	call   c202 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    b310:	90                   	nop
    b311:	c9                   	leave
    b312:	c3                   	ret
    b313:	90                   	nop

000000000000b314 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    b314:	55                   	push   %rbp
    b315:	48 89 e5             	mov    %rsp,%rbp
    b318:	48 83 ec 10          	sub    $0x10,%rsp
    b31c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b324:	48 89 c7             	mov    %rax,%rdi
    b327:	e8 e2 0e 00 00       	call   c20e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    b32c:	90                   	nop
    b32d:	c9                   	leave
    b32e:	c3                   	ret
    b32f:	90                   	nop

000000000000b330 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    b330:	55                   	push   %rbp
    b331:	48 89 e5             	mov    %rsp,%rbp
    b334:	53                   	push   %rbx
    b335:	48 83 ec 28          	sub    $0x28,%rsp
    b339:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b33d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b341:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    b345:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b349:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b34d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b351:	48 89 d6             	mov    %rdx,%rsi
    b354:	48 89 c7             	mov    %rax,%rdi
    b357:	e8 bd 0e 00 00       	call   c219 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    b35c:	48 89 c1             	mov    %rax,%rcx
    b35f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b363:	48 89 c2             	mov    %rax,%rdx
    b366:	48 89 ce             	mov    %rcx,%rsi
    b369:	48 89 df             	mov    %rbx,%rdi
    b36c:	e8 09 0f 00 00       	call   c27a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    b371:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b375:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b379:	48 89 d6             	mov    %rdx,%rsi
    b37c:	48 89 c7             	mov    %rax,%rdi
    b37f:	e8 54 0f 00 00       	call   c2d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    b384:	eb 1a                	jmp    b3a0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    b386:	48 89 c3             	mov    %rax,%rbx
    b389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b38d:	48 89 c7             	mov    %rax,%rdi
    b390:	e8 79 00 00 00       	call   b40e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    b395:	48 89 d8             	mov    %rbx,%rax
    b398:	48 89 c7             	mov    %rax,%rdi
    b39b:	e8 60 a6 ff ff       	call   5a00 <_Unwind_Resume@plt>
    b3a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b3a4:	c9                   	leave
    b3a5:	c3                   	ret

000000000000b3a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    b3a6:	55                   	push   %rbp
    b3a7:	48 89 e5             	mov    %rsp,%rbp
    b3aa:	48 83 ec 10          	sub    $0x10,%rsp
    b3ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    b3b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3b6:	48 89 c7             	mov    %rax,%rdi
    b3b9:	e8 5a 0f 00 00       	call   c318 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b3be:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    b3c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b3c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3cd:	48 8b 00             	mov    (%rax),%rax
    b3d0:	48 89 ce             	mov    %rcx,%rsi
    b3d3:	48 89 c7             	mov    %rax,%rdi
    b3d6:	e8 4b 0f 00 00       	call   c326 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    b3db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3df:	48 89 c7             	mov    %rax,%rdi
    b3e2:	e8 27 00 00 00       	call   b40e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    b3e7:	90                   	nop
    b3e8:	c9                   	leave
    b3e9:	c3                   	ret

000000000000b3ea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    b3ea:	55                   	push   %rbp
    b3eb:	48 89 e5             	mov    %rsp,%rbp
    b3ee:	48 83 ec 10          	sub    $0x10,%rsp
    b3f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    b3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3fa:	48 8b 10             	mov    (%rax),%rdx
    b3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b401:	48 89 d6             	mov    %rdx,%rsi
    b404:	48 89 c7             	mov    %rax,%rdi
    b407:	e8 44 0f 00 00       	call   c350 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    b40c:	c9                   	leave
    b40d:	c3                   	ret

000000000000b40e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    b40e:	55                   	push   %rbp
    b40f:	48 89 e5             	mov    %rsp,%rbp
    b412:	48 83 ec 10          	sub    $0x10,%rsp
    b416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    b41a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b41e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b426:	48 8b 00             	mov    (%rax),%rax
    b429:	48 29 c2             	sub    %rax,%rdx
    b42c:	48 89 d0             	mov    %rdx,%rax
    b42f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    b433:	48 89 c2             	mov    %rax,%rdx
    b436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b43a:	48 8b 08             	mov    (%rax),%rcx
    b43d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b441:	48 89 ce             	mov    %rcx,%rsi
    b444:	48 89 c7             	mov    %rax,%rdi
    b447:	e8 3c 0f 00 00       	call   c388 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    b44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b450:	48 89 c7             	mov    %rax,%rdi
    b453:	e8 a4 f4 ff ff       	call   a8fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    b458:	90                   	nop
    b459:	c9                   	leave
    b45a:	c3                   	ret
    b45b:	90                   	nop

000000000000b45c <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    b45c:	55                   	push   %rbp
    b45d:	48 89 e5             	mov    %rsp,%rbp
    b460:	48 83 ec 10          	sub    $0x10,%rsp
    b464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b46c:	48 89 c7             	mov    %rax,%rdi
    b46f:	e8 4a 0f 00 00       	call   c3be <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    b474:	90                   	nop
    b475:	c9                   	leave
    b476:	c3                   	ret
    b477:	90                   	nop

000000000000b478 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    b478:	55                   	push   %rbp
    b479:	48 89 e5             	mov    %rsp,%rbp
    b47c:	48 83 ec 10          	sub    $0x10,%rsp
    b480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b488:	48 89 c7             	mov    %rax,%rdi
    b48b:	e8 3a 0f 00 00       	call   c3ca <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    b490:	90                   	nop
    b491:	c9                   	leave
    b492:	c3                   	ret
    b493:	90                   	nop

000000000000b494 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    b494:	55                   	push   %rbp
    b495:	48 89 e5             	mov    %rsp,%rbp
    b498:	53                   	push   %rbx
    b499:	48 83 ec 28          	sub    $0x28,%rsp
    b49d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b4a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    b4a9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b4ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b4b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4b5:	48 89 d6             	mov    %rdx,%rsi
    b4b8:	48 89 c7             	mov    %rax,%rdi
    b4bb:	e8 15 0f 00 00       	call   c3d5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    b4c0:	48 89 c1             	mov    %rax,%rcx
    b4c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b4c7:	48 89 c2             	mov    %rax,%rdx
    b4ca:	48 89 ce             	mov    %rcx,%rsi
    b4cd:	48 89 df             	mov    %rbx,%rdi
    b4d0:	e8 61 0f 00 00       	call   c436 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    b4d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b4d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4dd:	48 89 d6             	mov    %rdx,%rsi
    b4e0:	48 89 c7             	mov    %rax,%rdi
    b4e3:	e8 ac 0f 00 00       	call   c494 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    b4e8:	eb 1a                	jmp    b504 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    b4ea:	48 89 c3             	mov    %rax,%rbx
    b4ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4f1:	48 89 c7             	mov    %rax,%rdi
    b4f4:	e8 79 00 00 00       	call   b572 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    b4f9:	48 89 d8             	mov    %rbx,%rax
    b4fc:	48 89 c7             	mov    %rax,%rdi
    b4ff:	e8 fc a4 ff ff       	call   5a00 <_Unwind_Resume@plt>
    b504:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b508:	c9                   	leave
    b509:	c3                   	ret

000000000000b50a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    b50a:	55                   	push   %rbp
    b50b:	48 89 e5             	mov    %rsp,%rbp
    b50e:	48 83 ec 10          	sub    $0x10,%rsp
    b512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    b516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b51a:	48 89 c7             	mov    %rax,%rdi
    b51d:	e8 b2 0f 00 00       	call   c4d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b522:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    b525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b529:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b531:	48 8b 00             	mov    (%rax),%rax
    b534:	48 89 ce             	mov    %rcx,%rsi
    b537:	48 89 c7             	mov    %rax,%rdi
    b53a:	e8 a3 0f 00 00       	call   c4e2 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    b53f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b543:	48 89 c7             	mov    %rax,%rdi
    b546:	e8 27 00 00 00       	call   b572 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    b54b:	90                   	nop
    b54c:	c9                   	leave
    b54d:	c3                   	ret

000000000000b54e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    b54e:	55                   	push   %rbp
    b54f:	48 89 e5             	mov    %rsp,%rbp
    b552:	48 83 ec 10          	sub    $0x10,%rsp
    b556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    b55a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b55e:	48 8b 10             	mov    (%rax),%rdx
    b561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b565:	48 89 d6             	mov    %rdx,%rsi
    b568:	48 89 c7             	mov    %rax,%rdi
    b56b:	e8 9c 0f 00 00       	call   c50c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    b570:	c9                   	leave
    b571:	c3                   	ret

000000000000b572 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    b572:	55                   	push   %rbp
    b573:	48 89 e5             	mov    %rsp,%rbp
    b576:	48 83 ec 10          	sub    $0x10,%rsp
    b57a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    b57e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b582:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b58a:	48 8b 00             	mov    (%rax),%rax
    b58d:	48 29 c2             	sub    %rax,%rdx
    b590:	48 89 d0             	mov    %rdx,%rax
    b593:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    b597:	48 89 c2             	mov    %rax,%rdx
    b59a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b59e:	48 8b 08             	mov    (%rax),%rcx
    b5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a5:	48 89 ce             	mov    %rcx,%rsi
    b5a8:	48 89 c7             	mov    %rax,%rdi
    b5ab:	e8 94 0f 00 00       	call   c544 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    b5b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5b4:	48 89 c7             	mov    %rax,%rdi
    b5b7:	e8 5c f3 ff ff       	call   a918 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    b5bc:	90                   	nop
    b5bd:	c9                   	leave
    b5be:	c3                   	ret
    b5bf:	90                   	nop

000000000000b5c0 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    b5c0:	55                   	push   %rbp
    b5c1:	48 89 e5             	mov    %rsp,%rbp
    b5c4:	48 83 ec 10          	sub    $0x10,%rsp
    b5c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5d0:	48 89 c7             	mov    %rax,%rdi
    b5d3:	e8 a2 0f 00 00       	call   c57a <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    b5d8:	90                   	nop
    b5d9:	c9                   	leave
    b5da:	c3                   	ret
    b5db:	90                   	nop

000000000000b5dc <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    b5dc:	55                   	push   %rbp
    b5dd:	48 89 e5             	mov    %rsp,%rbp
    b5e0:	48 83 ec 10          	sub    $0x10,%rsp
    b5e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ec:	48 89 c7             	mov    %rax,%rdi
    b5ef:	e8 92 0f 00 00       	call   c586 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    b5f4:	90                   	nop
    b5f5:	c9                   	leave
    b5f6:	c3                   	ret
    b5f7:	90                   	nop

000000000000b5f8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    b5f8:	55                   	push   %rbp
    b5f9:	48 89 e5             	mov    %rsp,%rbp
    b5fc:	53                   	push   %rbx
    b5fd:	48 83 ec 28          	sub    $0x28,%rsp
    b601:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b605:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b609:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    b60d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    b611:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b615:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b619:	48 89 d6             	mov    %rdx,%rsi
    b61c:	48 89 c7             	mov    %rax,%rdi
    b61f:	e8 6d 0f 00 00       	call   c591 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    b624:	48 89 c1             	mov    %rax,%rcx
    b627:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b62b:	48 89 c2             	mov    %rax,%rdx
    b62e:	48 89 ce             	mov    %rcx,%rsi
    b631:	48 89 df             	mov    %rbx,%rdi
    b634:	e8 b9 0f 00 00       	call   c5f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    b639:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b63d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b641:	48 89 d6             	mov    %rdx,%rsi
    b644:	48 89 c7             	mov    %rax,%rdi
    b647:	e8 04 10 00 00       	call   c650 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    b64c:	eb 1a                	jmp    b668 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    b64e:	48 89 c3             	mov    %rax,%rbx
    b651:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b655:	48 89 c7             	mov    %rax,%rdi
    b658:	e8 79 00 00 00       	call   b6d6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    b65d:	48 89 d8             	mov    %rbx,%rax
    b660:	48 89 c7             	mov    %rax,%rdi
    b663:	e8 98 a3 ff ff       	call   5a00 <_Unwind_Resume@plt>
    b668:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b66c:	c9                   	leave
    b66d:	c3                   	ret

000000000000b66e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    b66e:	55                   	push   %rbp
    b66f:	48 89 e5             	mov    %rsp,%rbp
    b672:	48 83 ec 10          	sub    $0x10,%rsp
    b676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    b67a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b67e:	48 89 c7             	mov    %rax,%rdi
    b681:	e8 0a 10 00 00       	call   c690 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    b686:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    b689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b68d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b695:	48 8b 00             	mov    (%rax),%rax
    b698:	48 89 ce             	mov    %rcx,%rsi
    b69b:	48 89 c7             	mov    %rax,%rdi
    b69e:	e8 fb 0f 00 00       	call   c69e <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    b6a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6a7:	48 89 c7             	mov    %rax,%rdi
    b6aa:	e8 27 00 00 00       	call   b6d6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    b6af:	90                   	nop
    b6b0:	c9                   	leave
    b6b1:	c3                   	ret

000000000000b6b2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    b6b2:	55                   	push   %rbp
    b6b3:	48 89 e5             	mov    %rsp,%rbp
    b6b6:	48 83 ec 10          	sub    $0x10,%rsp
    b6ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    b6be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6c2:	48 8b 10             	mov    (%rax),%rdx
    b6c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6c9:	48 89 d6             	mov    %rdx,%rsi
    b6cc:	48 89 c7             	mov    %rax,%rdi
    b6cf:	e8 f4 0f 00 00       	call   c6c8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    b6d4:	c9                   	leave
    b6d5:	c3                   	ret

000000000000b6d6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    b6d6:	55                   	push   %rbp
    b6d7:	48 89 e5             	mov    %rsp,%rbp
    b6da:	48 83 ec 10          	sub    $0x10,%rsp
    b6de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    b6e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6e6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6ee:	48 8b 00             	mov    (%rax),%rax
    b6f1:	48 29 c2             	sub    %rax,%rdx
    b6f4:	48 89 d0             	mov    %rdx,%rax
    b6f7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    b6fb:	48 89 c2             	mov    %rax,%rdx
    b6fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b702:	48 8b 08             	mov    (%rax),%rcx
    b705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b709:	48 89 ce             	mov    %rcx,%rsi
    b70c:	48 89 c7             	mov    %rax,%rdi
    b70f:	e8 ec 0f 00 00       	call   c700 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    b714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b718:	48 89 c7             	mov    %rax,%rdi
    b71b:	e8 14 f2 ff ff       	call   a934 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    b720:	90                   	nop
    b721:	c9                   	leave
    b722:	c3                   	ret
    b723:	90                   	nop

000000000000b724 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b724:	55                   	push   %rbp
    b725:	48 89 e5             	mov    %rsp,%rbp
    b728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b72c:	90                   	nop
    b72d:	5d                   	pop    %rbp
    b72e:	c3                   	ret
    b72f:	90                   	nop

000000000000b730 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b730:	55                   	push   %rbp
    b731:	48 89 e5             	mov    %rsp,%rbp
    b734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b738:	90                   	nop
    b739:	5d                   	pop    %rbp
    b73a:	c3                   	ret

000000000000b73b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b73b:	55                   	push   %rbp
    b73c:	48 89 e5             	mov    %rsp,%rbp
    b73f:	53                   	push   %rbx
    b740:	48 83 ec 28          	sub    $0x28,%rsp
    b744:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b748:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b74c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b750:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b754:	48 89 d6             	mov    %rdx,%rsi
    b757:	48 89 c7             	mov    %rax,%rdi
    b75a:	e8 25 01 00 00       	call   b884 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    b75f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b763:	48 89 c7             	mov    %rax,%rdi
    b766:	e8 ca 0f 00 00       	call   c735 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    b76b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b76f:	0f 92 c3             	setb   %bl
    b772:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b776:	48 89 c7             	mov    %rax,%rdi
    b779:	e8 ee f1 ff ff       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
    b77e:	84 db                	test   %bl,%bl
    b780:	74 0f                	je     b791 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    b782:	48 8d 05 cf 9b 01 00 	lea    0x19bcf(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    b789:	48 89 c7             	mov    %rax,%rdi
    b78c:	e8 bf 9a ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b791:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b795:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b799:	c9                   	leave
    b79a:	c3                   	ret
    b79b:	90                   	nop

000000000000b79c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b79c:	55                   	push   %rbp
    b79d:	48 89 e5             	mov    %rsp,%rbp
    b7a0:	53                   	push   %rbx
    b7a1:	48 83 ec 28          	sub    $0x28,%rsp
    b7a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b7a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b7ad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b7b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b7b9:	48 89 d6             	mov    %rdx,%rsi
    b7bc:	48 89 c7             	mov    %rax,%rdi
    b7bf:	e8 b4 0f 00 00       	call   c778 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    b7c4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b7c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7cc:	48 89 d6             	mov    %rdx,%rsi
    b7cf:	48 89 c7             	mov    %rax,%rdi
    b7d2:	e8 d3 0f 00 00       	call   c7aa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    b7d7:	eb 1a                	jmp    b7f3 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    b7d9:	48 89 c3             	mov    %rax,%rbx
    b7dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7e0:	48 89 c7             	mov    %rax,%rdi
    b7e3:	e8 6c f0 ff ff       	call   a854 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    b7e8:	48 89 d8             	mov    %rbx,%rax
    b7eb:	48 89 c7             	mov    %rax,%rdi
    b7ee:	e8 0d a2 ff ff       	call   5a00 <_Unwind_Resume@plt>
    b7f3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b7f7:	c9                   	leave
    b7f8:	c3                   	ret
    b7f9:	90                   	nop

000000000000b7fa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b7fa:	55                   	push   %rbp
    b7fb:	48 89 e5             	mov    %rsp,%rbp
    b7fe:	48 83 ec 10          	sub    $0x10,%rsp
    b802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b806:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b80a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80e:	48 89 c7             	mov    %rax,%rdi
    b811:	e8 24 00 00 00       	call   b83a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    b816:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b81d:	48 8b 00             	mov    (%rax),%rax
    b820:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b824:	48 89 ce             	mov    %rcx,%rsi
    b827:	48 89 c7             	mov    %rax,%rdi
    b82a:	e8 dc 0f 00 00       	call   c80b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b82f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b833:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b837:	90                   	nop
    b838:	c9                   	leave
    b839:	c3                   	ret

000000000000b83a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b83a:	55                   	push   %rbp
    b83b:	48 89 e5             	mov    %rsp,%rbp
    b83e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b846:	5d                   	pop    %rbp
    b847:	c3                   	ret

000000000000b848 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b848:	55                   	push   %rbp
    b849:	48 89 e5             	mov    %rsp,%rbp
    b84c:	48 83 ec 20          	sub    $0x20,%rsp
    b850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b854:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b858:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b85c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b864:	48 89 d6             	mov    %rdx,%rsi
    b867:	48 89 c7             	mov    %rax,%rdi
    b86a:	e8 c5 0f 00 00       	call   c834 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    b86f:	90                   	nop
    b870:	c9                   	leave
    b871:	c3                   	ret

000000000000b872 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b872:	55                   	push   %rbp
    b873:	48 89 e5             	mov    %rsp,%rbp
    b876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b87a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b87e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b882:	5d                   	pop    %rbp
    b883:	c3                   	ret

000000000000b884 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b884:	55                   	push   %rbp
    b885:	48 89 e5             	mov    %rsp,%rbp
    b888:	48 83 ec 10          	sub    $0x10,%rsp
    b88c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b890:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b894:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b89c:	48 89 d6             	mov    %rdx,%rsi
    b89f:	48 89 c7             	mov    %rax,%rdi
    b8a2:	e8 b3 0f 00 00       	call   c85a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    b8a7:	90                   	nop
    b8a8:	c9                   	leave
    b8a9:	c3                   	ret

000000000000b8aa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b8aa:	55                   	push   %rbp
    b8ab:	48 89 e5             	mov    %rsp,%rbp
    b8ae:	48 83 ec 20          	sub    $0x20,%rsp
    b8b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b8be:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b8c3:	74 17                	je     b8dc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b8c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b8cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b8d1:	48 89 ce             	mov    %rcx,%rsi
    b8d4:	48 89 c7             	mov    %rax,%rdi
    b8d7:	e8 8d 0f 00 00       	call   c869 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    b8dc:	90                   	nop
    b8dd:	c9                   	leave
    b8de:	c3                   	ret
    b8df:	90                   	nop

000000000000b8e0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b8e0:	55                   	push   %rbp
    b8e1:	48 89 e5             	mov    %rsp,%rbp
    b8e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8e8:	90                   	nop
    b8e9:	5d                   	pop    %rbp
    b8ea:	c3                   	ret
    b8eb:	90                   	nop

000000000000b8ec <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b8ec:	55                   	push   %rbp
    b8ed:	48 89 e5             	mov    %rsp,%rbp
    b8f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8f4:	90                   	nop
    b8f5:	5d                   	pop    %rbp
    b8f6:	c3                   	ret

000000000000b8f7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b8f7:	55                   	push   %rbp
    b8f8:	48 89 e5             	mov    %rsp,%rbp
    b8fb:	53                   	push   %rbx
    b8fc:	48 83 ec 28          	sub    $0x28,%rsp
    b900:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b904:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b908:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b90c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b910:	48 89 d6             	mov    %rdx,%rsi
    b913:	48 89 c7             	mov    %rax,%rdi
    b916:	e8 25 01 00 00       	call   ba40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    b91b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b91f:	48 89 c7             	mov    %rax,%rdi
    b922:	e8 70 0f 00 00       	call   c897 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    b927:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b92b:	0f 92 c3             	setb   %bl
    b92e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b932:	48 89 c7             	mov    %rax,%rdi
    b935:	e8 a0 f1 ff ff       	call   aada <_ZNSaI21VkExtensionPropertiesED1Ev>
    b93a:	84 db                	test   %bl,%bl
    b93c:	74 0f                	je     b94d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    b93e:	48 8d 05 13 9a 01 00 	lea    0x19a13(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    b945:	48 89 c7             	mov    %rax,%rdi
    b948:	e8 03 99 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b94d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b951:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b955:	c9                   	leave
    b956:	c3                   	ret
    b957:	90                   	nop

000000000000b958 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b958:	55                   	push   %rbp
    b959:	48 89 e5             	mov    %rsp,%rbp
    b95c:	53                   	push   %rbx
    b95d:	48 83 ec 28          	sub    $0x28,%rsp
    b961:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b965:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b969:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b96d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b971:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b975:	48 89 d6             	mov    %rdx,%rsi
    b978:	48 89 c7             	mov    %rax,%rdi
    b97b:	e8 5a 0f 00 00       	call   c8da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    b980:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b984:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b988:	48 89 d6             	mov    %rdx,%rsi
    b98b:	48 89 c7             	mov    %rax,%rdi
    b98e:	e8 79 0f 00 00       	call   c90c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    b993:	eb 1a                	jmp    b9af <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    b995:	48 89 c3             	mov    %rax,%rbx
    b998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b99c:	48 89 c7             	mov    %rax,%rdi
    b99f:	e8 cc ee ff ff       	call   a870 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    b9a4:	48 89 d8             	mov    %rbx,%rax
    b9a7:	48 89 c7             	mov    %rax,%rdi
    b9aa:	e8 51 a0 ff ff       	call   5a00 <_Unwind_Resume@plt>
    b9af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b9b3:	c9                   	leave
    b9b4:	c3                   	ret
    b9b5:	90                   	nop

000000000000b9b6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b9b6:	55                   	push   %rbp
    b9b7:	48 89 e5             	mov    %rsp,%rbp
    b9ba:	48 83 ec 10          	sub    $0x10,%rsp
    b9be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b9c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ca:	48 89 c7             	mov    %rax,%rdi
    b9cd:	e8 24 00 00 00       	call   b9f6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    b9d2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    b9d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9d9:	48 8b 00             	mov    (%rax),%rax
    b9dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b9e0:	48 89 ce             	mov    %rcx,%rsi
    b9e3:	48 89 c7             	mov    %rax,%rdi
    b9e6:	e8 82 0f 00 00       	call   c96d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    b9eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b9ef:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    b9f3:	90                   	nop
    b9f4:	c9                   	leave
    b9f5:	c3                   	ret

000000000000b9f6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b9f6:	55                   	push   %rbp
    b9f7:	48 89 e5             	mov    %rsp,%rbp
    b9fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b9fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba02:	5d                   	pop    %rbp
    ba03:	c3                   	ret

000000000000ba04 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ba04:	55                   	push   %rbp
    ba05:	48 89 e5             	mov    %rsp,%rbp
    ba08:	48 83 ec 20          	sub    $0x20,%rsp
    ba0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ba18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba20:	48 89 d6             	mov    %rdx,%rsi
    ba23:	48 89 c7             	mov    %rax,%rdi
    ba26:	e8 6b 0f 00 00       	call   c996 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    ba2b:	90                   	nop
    ba2c:	c9                   	leave
    ba2d:	c3                   	ret

000000000000ba2e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ba2e:	55                   	push   %rbp
    ba2f:	48 89 e5             	mov    %rsp,%rbp
    ba32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ba3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba3e:	5d                   	pop    %rbp
    ba3f:	c3                   	ret

000000000000ba40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ba40:	55                   	push   %rbp
    ba41:	48 89 e5             	mov    %rsp,%rbp
    ba44:	48 83 ec 10          	sub    $0x10,%rsp
    ba48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ba50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba58:	48 89 d6             	mov    %rdx,%rsi
    ba5b:	48 89 c7             	mov    %rax,%rdi
    ba5e:	e8 59 0f 00 00       	call   c9bc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    ba63:	90                   	nop
    ba64:	c9                   	leave
    ba65:	c3                   	ret

000000000000ba66 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    ba66:	55                   	push   %rbp
    ba67:	48 89 e5             	mov    %rsp,%rbp
    ba6a:	48 83 ec 20          	sub    $0x20,%rsp
    ba6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ba7a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ba7f:	74 17                	je     ba98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ba81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ba8d:	48 89 ce             	mov    %rcx,%rsi
    ba90:	48 89 c7             	mov    %rax,%rdi
    ba93:	e8 33 0f 00 00       	call   c9cb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    ba98:	90                   	nop
    ba99:	c9                   	leave
    ba9a:	c3                   	ret
    ba9b:	90                   	nop

000000000000ba9c <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ba9c:	55                   	push   %rbp
    ba9d:	48 89 e5             	mov    %rsp,%rbp
    baa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baa4:	90                   	nop
    baa5:	5d                   	pop    %rbp
    baa6:	c3                   	ret
    baa7:	90                   	nop

000000000000baa8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    baa8:	55                   	push   %rbp
    baa9:	48 89 e5             	mov    %rsp,%rbp
    baac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bab0:	90                   	nop
    bab1:	5d                   	pop    %rbp
    bab2:	c3                   	ret

000000000000bab3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    bab3:	55                   	push   %rbp
    bab4:	48 89 e5             	mov    %rsp,%rbp
    bab7:	53                   	push   %rbx
    bab8:	48 83 ec 28          	sub    $0x28,%rsp
    babc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bac0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    bac4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bac8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bacc:	48 89 d6             	mov    %rdx,%rsi
    bacf:	48 89 c7             	mov    %rax,%rdi
    bad2:	e8 e9 00 00 00       	call   bbc0 <_ZNSaIPKcEC1ERKS1_>
    bad7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    badb:	48 89 c7             	mov    %rax,%rdi
    bade:	e8 16 0f 00 00       	call   c9f9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    bae3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    bae7:	0f 92 c3             	setb   %bl
    baea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    baee:	48 89 c7             	mov    %rax,%rdi
    baf1:	e8 52 f1 ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
    baf6:	84 db                	test   %bl,%bl
    baf8:	74 0f                	je     bb09 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    bafa:	48 8d 05 57 98 01 00 	lea    0x19857(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    bb01:	48 89 c7             	mov    %rax,%rdi
    bb04:	e8 47 97 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    bb09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    bb0d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bb11:	c9                   	leave
    bb12:	c3                   	ret
    bb13:	90                   	nop

000000000000bb14 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    bb14:	55                   	push   %rbp
    bb15:	48 89 e5             	mov    %rsp,%rbp
    bb18:	53                   	push   %rbx
    bb19:	48 83 ec 28          	sub    $0x28,%rsp
    bb1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bb25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    bb29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bb31:	48 89 d6             	mov    %rdx,%rsi
    bb34:	48 89 c7             	mov    %rax,%rdi
    bb37:	e8 00 0f 00 00       	call   ca3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    bb3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bb40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb44:	48 89 d6             	mov    %rdx,%rsi
    bb47:	48 89 c7             	mov    %rax,%rdi
    bb4a:	e8 1f 0f 00 00       	call   ca6e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    bb4f:	eb 1a                	jmp    bb6b <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    bb51:	48 89 c3             	mov    %rax,%rbx
    bb54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb58:	48 89 c7             	mov    %rax,%rdi
    bb5b:	e8 2c ed ff ff       	call   a88c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    bb60:	48 89 d8             	mov    %rbx,%rax
    bb63:	48 89 c7             	mov    %rax,%rdi
    bb66:	e8 95 9e ff ff       	call   5a00 <_Unwind_Resume@plt>
    bb6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bb6f:	c9                   	leave
    bb70:	c3                   	ret
    bb71:	90                   	nop

000000000000bb72 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    bb72:	55                   	push   %rbp
    bb73:	48 89 e5             	mov    %rsp,%rbp
    bb76:	48 83 ec 10          	sub    $0x10,%rsp
    bb7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    bb82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb86:	48 89 c7             	mov    %rax,%rdi
    bb89:	e8 24 00 00 00       	call   bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    bb8e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    bb91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb95:	48 8b 00             	mov    (%rax),%rax
    bb98:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bb9c:	48 89 ce             	mov    %rcx,%rsi
    bb9f:	48 89 c7             	mov    %rax,%rdi
    bba2:	e8 1d 0f 00 00       	call   cac4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    bba7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bbab:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    bbaf:	90                   	nop
    bbb0:	c9                   	leave
    bbb1:	c3                   	ret

000000000000bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    bbb2:	55                   	push   %rbp
    bbb3:	48 89 e5             	mov    %rsp,%rbp
    bbb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    bbba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbbe:	5d                   	pop    %rbp
    bbbf:	c3                   	ret

000000000000bbc0 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    bbc0:	55                   	push   %rbp
    bbc1:	48 89 e5             	mov    %rsp,%rbp
    bbc4:	48 83 ec 10          	sub    $0x10,%rsp
    bbc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    bbd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd8:	48 89 d6             	mov    %rdx,%rsi
    bbdb:	48 89 c7             	mov    %rax,%rdi
    bbde:	e8 0b 0f 00 00       	call   caee <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    bbe3:	90                   	nop
    bbe4:	c9                   	leave
    bbe5:	c3                   	ret

000000000000bbe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    bbe6:	55                   	push   %rbp
    bbe7:	48 89 e5             	mov    %rsp,%rbp
    bbea:	48 83 ec 20          	sub    $0x20,%rsp
    bbee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbf6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    bbfa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bbff:	74 17                	je     bc18 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    bc01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc05:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc09:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bc0d:	48 89 ce             	mov    %rcx,%rsi
    bc10:	48 89 c7             	mov    %rax,%rdi
    bc13:	e8 e5 0e 00 00       	call   cafd <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    bc18:	90                   	nop
    bc19:	c9                   	leave
    bc1a:	c3                   	ret
    bc1b:	90                   	nop

000000000000bc1c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bc1c:	55                   	push   %rbp
    bc1d:	48 89 e5             	mov    %rsp,%rbp
    bc20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc24:	90                   	nop
    bc25:	5d                   	pop    %rbp
    bc26:	c3                   	ret
    bc27:	90                   	nop

000000000000bc28 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bc28:	55                   	push   %rbp
    bc29:	48 89 e5             	mov    %rsp,%rbp
    bc2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc30:	90                   	nop
    bc31:	5d                   	pop    %rbp
    bc32:	c3                   	ret

000000000000bc33 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    bc33:	55                   	push   %rbp
    bc34:	48 89 e5             	mov    %rsp,%rbp
    bc37:	53                   	push   %rbx
    bc38:	48 83 ec 28          	sub    $0x28,%rsp
    bc3c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bc40:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    bc44:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bc48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bc4c:	48 89 d6             	mov    %rdx,%rsi
    bc4f:	48 89 c7             	mov    %rax,%rdi
    bc52:	e8 25 01 00 00       	call   bd7c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    bc57:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bc5b:	48 89 c7             	mov    %rax,%rdi
    bc5e:	e8 c8 0e 00 00       	call   cb2b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    bc63:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    bc67:	0f 92 c3             	setb   %bl
    bc6a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bc6e:	48 89 c7             	mov    %rax,%rdi
    bc71:	e8 ee f0 ff ff       	call   ad64 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    bc76:	84 db                	test   %bl,%bl
    bc78:	74 0f                	je     bc89 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    bc7a:	48 8d 05 d7 96 01 00 	lea    0x196d7(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    bc81:	48 89 c7             	mov    %rax,%rdi
    bc84:	e8 c7 95 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    bc89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    bc8d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bc91:	c9                   	leave
    bc92:	c3                   	ret
    bc93:	90                   	nop

000000000000bc94 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    bc94:	55                   	push   %rbp
    bc95:	48 89 e5             	mov    %rsp,%rbp
    bc98:	53                   	push   %rbx
    bc99:	48 83 ec 28          	sub    $0x28,%rsp
    bc9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bca1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bca5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    bca9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bcb1:	48 89 d6             	mov    %rdx,%rsi
    bcb4:	48 89 c7             	mov    %rax,%rdi
    bcb7:	e8 b2 0e 00 00       	call   cb6e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    bcbc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bcc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcc4:	48 89 d6             	mov    %rdx,%rsi
    bcc7:	48 89 c7             	mov    %rax,%rdi
    bcca:	e8 d1 0e 00 00       	call   cba0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    bccf:	eb 1a                	jmp    bceb <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    bcd1:	48 89 c3             	mov    %rax,%rbx
    bcd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bcd8:	48 89 c7             	mov    %rax,%rdi
    bcdb:	e8 c8 eb ff ff       	call   a8a8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    bce0:	48 89 d8             	mov    %rbx,%rax
    bce3:	48 89 c7             	mov    %rax,%rdi
    bce6:	e8 15 9d ff ff       	call   5a00 <_Unwind_Resume@plt>
    bceb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bcef:	c9                   	leave
    bcf0:	c3                   	ret
    bcf1:	90                   	nop

000000000000bcf2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    bcf2:	55                   	push   %rbp
    bcf3:	48 89 e5             	mov    %rsp,%rbp
    bcf6:	48 83 ec 10          	sub    $0x10,%rsp
    bcfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    bd02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd06:	48 89 c7             	mov    %rax,%rdi
    bd09:	e8 24 00 00 00       	call   bd32 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    bd0e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    bd11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd15:	48 8b 00             	mov    (%rax),%rax
    bd18:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bd1c:	48 89 ce             	mov    %rcx,%rsi
    bd1f:	48 89 c7             	mov    %rax,%rdi
    bd22:	e8 cf 0e 00 00       	call   cbf6 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    bd27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bd2b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    bd2f:	90                   	nop
    bd30:	c9                   	leave
    bd31:	c3                   	ret

000000000000bd32 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    bd32:	55                   	push   %rbp
    bd33:	48 89 e5             	mov    %rsp,%rbp
    bd36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    bd3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd3e:	5d                   	pop    %rbp
    bd3f:	c3                   	ret

000000000000bd40 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    bd40:	55                   	push   %rbp
    bd41:	48 89 e5             	mov    %rsp,%rbp
    bd44:	48 83 ec 20          	sub    $0x20,%rsp
    bd48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    bd54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd5c:	48 89 d6             	mov    %rdx,%rsi
    bd5f:	48 89 c7             	mov    %rax,%rdi
    bd62:	e8 b8 0e 00 00       	call   cc1f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    bd67:	90                   	nop
    bd68:	c9                   	leave
    bd69:	c3                   	ret

000000000000bd6a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    bd6a:	55                   	push   %rbp
    bd6b:	48 89 e5             	mov    %rsp,%rbp
    bd6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    bd76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd7a:	5d                   	pop    %rbp
    bd7b:	c3                   	ret

000000000000bd7c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    bd7c:	55                   	push   %rbp
    bd7d:	48 89 e5             	mov    %rsp,%rbp
    bd80:	48 83 ec 10          	sub    $0x10,%rsp
    bd84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    bd8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd94:	48 89 d6             	mov    %rdx,%rsi
    bd97:	48 89 c7             	mov    %rax,%rdi
    bd9a:	e8 a7 0e 00 00       	call   cc46 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    bd9f:	90                   	nop
    bda0:	c9                   	leave
    bda1:	c3                   	ret

000000000000bda2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    bda2:	55                   	push   %rbp
    bda3:	48 89 e5             	mov    %rsp,%rbp
    bda6:	48 83 ec 20          	sub    $0x20,%rsp
    bdaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    bdb6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bdbb:	74 17                	je     bdd4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    bdbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bdc5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bdc9:	48 89 ce             	mov    %rcx,%rsi
    bdcc:	48 89 c7             	mov    %rax,%rdi
    bdcf:	e8 81 0e 00 00       	call   cc55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    bdd4:	90                   	nop
    bdd5:	c9                   	leave
    bdd6:	c3                   	ret
    bdd7:	90                   	nop

000000000000bdd8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bdd8:	55                   	push   %rbp
    bdd9:	48 89 e5             	mov    %rsp,%rbp
    bddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bde0:	90                   	nop
    bde1:	5d                   	pop    %rbp
    bde2:	c3                   	ret
    bde3:	90                   	nop

000000000000bde4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bde4:	55                   	push   %rbp
    bde5:	48 89 e5             	mov    %rsp,%rbp
    bde8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdec:	90                   	nop
    bded:	5d                   	pop    %rbp
    bdee:	c3                   	ret

000000000000bdef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    bdef:	55                   	push   %rbp
    bdf0:	48 89 e5             	mov    %rsp,%rbp
    bdf3:	53                   	push   %rbx
    bdf4:	48 83 ec 28          	sub    $0x28,%rsp
    bdf8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bdfc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    be00:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    be04:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    be08:	48 89 d6             	mov    %rdx,%rsi
    be0b:	48 89 c7             	mov    %rax,%rdi
    be0e:	e8 25 01 00 00       	call   bf38 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    be13:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    be17:	48 89 c7             	mov    %rax,%rdi
    be1a:	e8 64 0e 00 00       	call   cc83 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    be1f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    be23:	0f 92 c3             	setb   %bl
    be26:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    be2a:	48 89 c7             	mov    %rax,%rdi
    be2d:	e8 96 f0 ff ff       	call   aec8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    be32:	84 db                	test   %bl,%bl
    be34:	74 0f                	je     be45 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    be36:	48 8d 05 1b 95 01 00 	lea    0x1951b(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    be3d:	48 89 c7             	mov    %rax,%rdi
    be40:	e8 0b 94 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    be45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    be49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    be4d:	c9                   	leave
    be4e:	c3                   	ret
    be4f:	90                   	nop

000000000000be50 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    be50:	55                   	push   %rbp
    be51:	48 89 e5             	mov    %rsp,%rbp
    be54:	53                   	push   %rbx
    be55:	48 83 ec 28          	sub    $0x28,%rsp
    be59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    be61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    be65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    be6d:	48 89 d6             	mov    %rdx,%rsi
    be70:	48 89 c7             	mov    %rax,%rdi
    be73:	e8 4e 0e 00 00       	call   ccc6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    be78:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    be7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be80:	48 89 d6             	mov    %rdx,%rsi
    be83:	48 89 c7             	mov    %rax,%rdi
    be86:	e8 6d 0e 00 00       	call   ccf8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    be8b:	eb 1a                	jmp    bea7 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    be8d:	48 89 c3             	mov    %rax,%rbx
    be90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be94:	48 89 c7             	mov    %rax,%rdi
    be97:	e8 28 ea ff ff       	call   a8c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    be9c:	48 89 d8             	mov    %rbx,%rax
    be9f:	48 89 c7             	mov    %rax,%rdi
    bea2:	e8 59 9b ff ff       	call   5a00 <_Unwind_Resume@plt>
    bea7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    beab:	c9                   	leave
    beac:	c3                   	ret
    bead:	90                   	nop

000000000000beae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    beae:	55                   	push   %rbp
    beaf:	48 89 e5             	mov    %rsp,%rbp
    beb2:	48 83 ec 10          	sub    $0x10,%rsp
    beb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    bebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec2:	48 89 c7             	mov    %rax,%rdi
    bec5:	e8 24 00 00 00       	call   beee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    beca:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    becd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed1:	48 8b 00             	mov    (%rax),%rax
    bed4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bed8:	48 89 ce             	mov    %rcx,%rsi
    bedb:	48 89 c7             	mov    %rax,%rdi
    bede:	e8 75 0e 00 00       	call   cd58 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    bee3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bee7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    beeb:	90                   	nop
    beec:	c9                   	leave
    beed:	c3                   	ret

000000000000beee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    beee:	55                   	push   %rbp
    beef:	48 89 e5             	mov    %rsp,%rbp
    bef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    bef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    befa:	5d                   	pop    %rbp
    befb:	c3                   	ret

000000000000befc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    befc:	55                   	push   %rbp
    befd:	48 89 e5             	mov    %rsp,%rbp
    bf00:	48 83 ec 20          	sub    $0x20,%rsp
    bf04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    bf10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf18:	48 89 d6             	mov    %rdx,%rsi
    bf1b:	48 89 c7             	mov    %rax,%rdi
    bf1e:	e8 5e 0e 00 00       	call   cd81 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    bf23:	90                   	nop
    bf24:	c9                   	leave
    bf25:	c3                   	ret

000000000000bf26 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    bf26:	55                   	push   %rbp
    bf27:	48 89 e5             	mov    %rsp,%rbp
    bf2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    bf32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf36:	5d                   	pop    %rbp
    bf37:	c3                   	ret

000000000000bf38 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    bf38:	55                   	push   %rbp
    bf39:	48 89 e5             	mov    %rsp,%rbp
    bf3c:	48 83 ec 10          	sub    $0x10,%rsp
    bf40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    bf48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf50:	48 89 d6             	mov    %rdx,%rsi
    bf53:	48 89 c7             	mov    %rax,%rdi
    bf56:	e8 4d 0e 00 00       	call   cda8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    bf5b:	90                   	nop
    bf5c:	c9                   	leave
    bf5d:	c3                   	ret

000000000000bf5e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    bf5e:	55                   	push   %rbp
    bf5f:	48 89 e5             	mov    %rsp,%rbp
    bf62:	48 83 ec 20          	sub    $0x20,%rsp
    bf66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    bf72:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf77:	74 17                	je     bf90 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    bf79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bf85:	48 89 ce             	mov    %rcx,%rsi
    bf88:	48 89 c7             	mov    %rax,%rdi
    bf8b:	e8 27 0e 00 00       	call   cdb7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    bf90:	90                   	nop
    bf91:	c9                   	leave
    bf92:	c3                   	ret
    bf93:	90                   	nop

000000000000bf94 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bf94:	55                   	push   %rbp
    bf95:	48 89 e5             	mov    %rsp,%rbp
    bf98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf9c:	90                   	nop
    bf9d:	5d                   	pop    %rbp
    bf9e:	c3                   	ret
    bf9f:	90                   	nop

000000000000bfa0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bfa0:	55                   	push   %rbp
    bfa1:	48 89 e5             	mov    %rsp,%rbp
    bfa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfa8:	90                   	nop
    bfa9:	5d                   	pop    %rbp
    bfaa:	c3                   	ret

000000000000bfab <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    bfab:	55                   	push   %rbp
    bfac:	48 89 e5             	mov    %rsp,%rbp
    bfaf:	53                   	push   %rbx
    bfb0:	48 83 ec 28          	sub    $0x28,%rsp
    bfb4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bfb8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    bfbc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bfc0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bfc4:	48 89 d6             	mov    %rdx,%rsi
    bfc7:	48 89 c7             	mov    %rax,%rdi
    bfca:	e8 d7 01 00 00       	call   c1a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    bfcf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bfd3:	48 89 c7             	mov    %rax,%rdi
    bfd6:	e8 0a 0e 00 00       	call   cde5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    bfdb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    bfdf:	0f 92 c3             	setb   %bl
    bfe2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bfe6:	48 89 c7             	mov    %rax,%rdi
    bfe9:	e8 76 f0 ff ff       	call   b064 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    bfee:	84 db                	test   %bl,%bl
    bff0:	74 0f                	je     c001 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    bff2:	48 8d 05 5f 93 01 00 	lea    0x1935f(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    bff9:	48 89 c7             	mov    %rax,%rdi
    bffc:	e8 4f 92 ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c001:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c005:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c009:	c9                   	leave
    c00a:	c3                   	ret
    c00b:	90                   	nop

000000000000c00c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c00c:	55                   	push   %rbp
    c00d:	48 89 e5             	mov    %rsp,%rbp
    c010:	53                   	push   %rbx
    c011:	48 83 ec 28          	sub    $0x28,%rsp
    c015:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c019:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c01d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c021:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c025:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c029:	48 89 d6             	mov    %rdx,%rsi
    c02c:	48 89 c7             	mov    %rax,%rdi
    c02f:	e8 f4 0d 00 00       	call   ce28 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    c034:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c038:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c03c:	48 89 d6             	mov    %rdx,%rsi
    c03f:	48 89 c7             	mov    %rax,%rdi
    c042:	e8 13 0e 00 00       	call   ce5a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    c047:	eb 1a                	jmp    c063 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    c049:	48 89 c3             	mov    %rax,%rbx
    c04c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c050:	48 89 c7             	mov    %rax,%rdi
    c053:	e8 88 e8 ff ff       	call   a8e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    c058:	48 89 d8             	mov    %rbx,%rax
    c05b:	48 89 c7             	mov    %rax,%rdi
    c05e:	e8 9d 99 ff ff       	call   5a00 <_Unwind_Resume@plt>
    c063:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c067:	c9                   	leave
    c068:	c3                   	ret
    c069:	90                   	nop

000000000000c06a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c06a:	55                   	push   %rbp
    c06b:	48 89 e5             	mov    %rsp,%rbp
    c06e:	48 83 ec 10          	sub    $0x10,%rsp
    c072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c076:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c07a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c07e:	48 89 c7             	mov    %rax,%rdi
    c081:	e8 24 00 00 00       	call   c0aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    c086:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c08d:	48 8b 00             	mov    (%rax),%rax
    c090:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c094:	48 89 ce             	mov    %rcx,%rsi
    c097:	48 89 c7             	mov    %rax,%rdi
    c09a:	e8 1c 0e 00 00       	call   cebb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c09f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c0a3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c0a7:	90                   	nop
    c0a8:	c9                   	leave
    c0a9:	c3                   	ret

000000000000c0aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c0aa:	55                   	push   %rbp
    c0ab:	48 89 e5             	mov    %rsp,%rbp
    c0ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c0b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0b6:	5d                   	pop    %rbp
    c0b7:	c3                   	ret

000000000000c0b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c0b8:	55                   	push   %rbp
    c0b9:	48 89 e5             	mov    %rsp,%rbp
    c0bc:	48 83 ec 20          	sub    $0x20,%rsp
    c0c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c0cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0d4:	48 89 d6             	mov    %rdx,%rsi
    c0d7:	48 89 c7             	mov    %rax,%rdi
    c0da:	e8 05 0e 00 00       	call   cee4 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    c0df:	90                   	nop
    c0e0:	c9                   	leave
    c0e1:	c3                   	ret

000000000000c0e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c0e2:	55                   	push   %rbp
    c0e3:	48 89 e5             	mov    %rsp,%rbp
    c0e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c0ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0f2:	48 8b 10             	mov    (%rax),%rdx
    c0f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0f9:	48 89 10             	mov    %rdx,(%rax)
    c0fc:	90                   	nop
    c0fd:	5d                   	pop    %rbp
    c0fe:	c3                   	ret
    c0ff:	90                   	nop

000000000000c100 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c100:	55                   	push   %rbp
    c101:	48 89 e5             	mov    %rsp,%rbp
    c104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c10c:	5d                   	pop    %rbp
    c10d:	c3                   	ret

000000000000c10e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    c10e:	55                   	push   %rbp
    c10f:	48 89 e5             	mov    %rsp,%rbp
    c112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    c116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c11a:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    c11e:	5d                   	pop    %rbp
    c11f:	c3                   	ret

000000000000c120 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    c120:	55                   	push   %rbp
    c121:	48 89 e5             	mov    %rsp,%rbp
    c124:	48 83 ec 10          	sub    $0x10,%rsp
    c128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    c12c:	e8 1c c9 ff ff       	call   8a4d <_ZSt23__is_constant_evaluatedv>
    c131:	84 c0                	test   %al,%al
    c133:	74 1a                	je     c14f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    c135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c139:	48 89 c7             	mov    %rax,%rdi
    c13c:	e8 cd ff ff ff       	call   c10e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    c141:	83 f0 01             	xor    $0x1,%eax
    c144:	84 c0                	test   %al,%al
    c146:	74 07                	je     c14f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    c148:	b8 01 00 00 00       	mov    $0x1,%eax
    c14d:	eb 05                	jmp    c154 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    c14f:	b8 00 00 00 00       	mov    $0x0,%eax
    c154:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    c156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c15a:	48 89 c7             	mov    %rax,%rdi
    c15d:	e8 a8 0d 00 00       	call   cf0a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    c162:	c9                   	leave
    c163:	c3                   	ret

000000000000c164 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c164:	55                   	push   %rbp
    c165:	48 89 e5             	mov    %rsp,%rbp
    c168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c16c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c170:	5d                   	pop    %rbp
    c171:	c3                   	ret

000000000000c172 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    c172:	55                   	push   %rbp
    c173:	48 89 e5             	mov    %rsp,%rbp
    c176:	53                   	push   %rbx
    c177:	48 83 ec 18          	sub    $0x18,%rsp
    c17b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c17f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    c183:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c187:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c18b:	48 89 c7             	mov    %rax,%rdi
    c18e:	e8 d1 ff ff ff       	call   c164 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    c193:	48 89 c6             	mov    %rax,%rsi
    c196:	48 89 df             	mov    %rbx,%rdi
    c199:	e8 7a 0d 00 00       	call   cf18 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    c19e:	90                   	nop
    c19f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c1a3:	c9                   	leave
    c1a4:	c3                   	ret
    c1a5:	90                   	nop

000000000000c1a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    c1a6:	55                   	push   %rbp
    c1a7:	48 89 e5             	mov    %rsp,%rbp
    c1aa:	48 83 ec 10          	sub    $0x10,%rsp
    c1ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    c1b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c1ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1be:	48 89 d6             	mov    %rdx,%rsi
    c1c1:	48 89 c7             	mov    %rax,%rdi
    c1c4:	e8 95 0d 00 00       	call   cf5e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    c1c9:	90                   	nop
    c1ca:	c9                   	leave
    c1cb:	c3                   	ret

000000000000c1cc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    c1cc:	55                   	push   %rbp
    c1cd:	48 89 e5             	mov    %rsp,%rbp
    c1d0:	48 83 ec 20          	sub    $0x20,%rsp
    c1d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    c1e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c1e5:	74 17                	je     c1fe <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    c1e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1f3:	48 89 ce             	mov    %rcx,%rsi
    c1f6:	48 89 c7             	mov    %rax,%rdi
    c1f9:	e8 6f 0d 00 00       	call   cf6d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    c1fe:	90                   	nop
    c1ff:	c9                   	leave
    c200:	c3                   	ret
    c201:	90                   	nop

000000000000c202 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c202:	55                   	push   %rbp
    c203:	48 89 e5             	mov    %rsp,%rbp
    c206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c20a:	90                   	nop
    c20b:	5d                   	pop    %rbp
    c20c:	c3                   	ret
    c20d:	90                   	nop

000000000000c20e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c20e:	55                   	push   %rbp
    c20f:	48 89 e5             	mov    %rsp,%rbp
    c212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c216:	90                   	nop
    c217:	5d                   	pop    %rbp
    c218:	c3                   	ret

000000000000c219 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c219:	55                   	push   %rbp
    c21a:	48 89 e5             	mov    %rsp,%rbp
    c21d:	53                   	push   %rbx
    c21e:	48 83 ec 28          	sub    $0x28,%rsp
    c222:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c226:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c22a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c22e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c232:	48 89 d6             	mov    %rdx,%rsi
    c235:	48 89 c7             	mov    %rax,%rdi
    c238:	e8 25 01 00 00       	call   c362 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    c23d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c241:	48 89 c7             	mov    %rax,%rdi
    c244:	e8 52 0d 00 00       	call   cf9b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    c249:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c24d:	0f 92 c3             	setb   %bl
    c250:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c254:	48 89 c7             	mov    %rax,%rdi
    c257:	e8 b8 f0 ff ff       	call   b314 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    c25c:	84 db                	test   %bl,%bl
    c25e:	74 0f                	je     c26f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c260:	48 8d 05 f1 90 01 00 	lea    0x190f1(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c267:	48 89 c7             	mov    %rax,%rdi
    c26a:	e8 e1 8f ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c26f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c273:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c277:	c9                   	leave
    c278:	c3                   	ret
    c279:	90                   	nop

000000000000c27a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c27a:	55                   	push   %rbp
    c27b:	48 89 e5             	mov    %rsp,%rbp
    c27e:	53                   	push   %rbx
    c27f:	48 83 ec 28          	sub    $0x28,%rsp
    c283:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c287:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c28b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c28f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c293:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c297:	48 89 d6             	mov    %rdx,%rsi
    c29a:	48 89 c7             	mov    %rax,%rdi
    c29d:	e8 3c 0d 00 00       	call   cfde <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c2a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c2a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2aa:	48 89 d6             	mov    %rdx,%rsi
    c2ad:	48 89 c7             	mov    %rax,%rdi
    c2b0:	e8 5b 0d 00 00       	call   d010 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    c2b5:	eb 1a                	jmp    c2d1 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    c2b7:	48 89 c3             	mov    %rax,%rbx
    c2ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2be:	48 89 c7             	mov    %rax,%rdi
    c2c1:	e8 36 e6 ff ff       	call   a8fc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    c2c6:	48 89 d8             	mov    %rbx,%rax
    c2c9:	48 89 c7             	mov    %rax,%rdi
    c2cc:	e8 2f 97 ff ff       	call   5a00 <_Unwind_Resume@plt>
    c2d1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c2d5:	c9                   	leave
    c2d6:	c3                   	ret
    c2d7:	90                   	nop

000000000000c2d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c2d8:	55                   	push   %rbp
    c2d9:	48 89 e5             	mov    %rsp,%rbp
    c2dc:	48 83 ec 10          	sub    $0x10,%rsp
    c2e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c2e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ec:	48 89 c7             	mov    %rax,%rdi
    c2ef:	e8 24 00 00 00       	call   c318 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    c2f4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c2f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2fb:	48 8b 00             	mov    (%rax),%rax
    c2fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c302:	48 89 ce             	mov    %rcx,%rsi
    c305:	48 89 c7             	mov    %rax,%rdi
    c308:	e8 59 0d 00 00       	call   d066 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c30d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c311:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c315:	90                   	nop
    c316:	c9                   	leave
    c317:	c3                   	ret

000000000000c318 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c318:	55                   	push   %rbp
    c319:	48 89 e5             	mov    %rsp,%rbp
    c31c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c324:	5d                   	pop    %rbp
    c325:	c3                   	ret

000000000000c326 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c326:	55                   	push   %rbp
    c327:	48 89 e5             	mov    %rsp,%rbp
    c32a:	48 83 ec 20          	sub    $0x20,%rsp
    c32e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c332:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c336:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c33a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c342:	48 89 d6             	mov    %rdx,%rsi
    c345:	48 89 c7             	mov    %rax,%rdi
    c348:	e8 42 0d 00 00       	call   d08f <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    c34d:	90                   	nop
    c34e:	c9                   	leave
    c34f:	c3                   	ret

000000000000c350 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c350:	55                   	push   %rbp
    c351:	48 89 e5             	mov    %rsp,%rbp
    c354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c358:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c35c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c360:	5d                   	pop    %rbp
    c361:	c3                   	ret

000000000000c362 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    c362:	55                   	push   %rbp
    c363:	48 89 e5             	mov    %rsp,%rbp
    c366:	48 83 ec 10          	sub    $0x10,%rsp
    c36a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c36e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    c372:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c37a:	48 89 d6             	mov    %rdx,%rsi
    c37d:	48 89 c7             	mov    %rax,%rdi
    c380:	e8 31 0d 00 00       	call   d0b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    c385:	90                   	nop
    c386:	c9                   	leave
    c387:	c3                   	ret

000000000000c388 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    c388:	55                   	push   %rbp
    c389:	48 89 e5             	mov    %rsp,%rbp
    c38c:	48 83 ec 20          	sub    $0x20,%rsp
    c390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c398:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    c39c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c3a1:	74 17                	je     c3ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    c3a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3af:	48 89 ce             	mov    %rcx,%rsi
    c3b2:	48 89 c7             	mov    %rax,%rdi
    c3b5:	e8 0b 0d 00 00       	call   d0c5 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    c3ba:	90                   	nop
    c3bb:	c9                   	leave
    c3bc:	c3                   	ret
    c3bd:	90                   	nop

000000000000c3be <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c3be:	55                   	push   %rbp
    c3bf:	48 89 e5             	mov    %rsp,%rbp
    c3c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3c6:	90                   	nop
    c3c7:	5d                   	pop    %rbp
    c3c8:	c3                   	ret
    c3c9:	90                   	nop

000000000000c3ca <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c3ca:	55                   	push   %rbp
    c3cb:	48 89 e5             	mov    %rsp,%rbp
    c3ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3d2:	90                   	nop
    c3d3:	5d                   	pop    %rbp
    c3d4:	c3                   	ret

000000000000c3d5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c3d5:	55                   	push   %rbp
    c3d6:	48 89 e5             	mov    %rsp,%rbp
    c3d9:	53                   	push   %rbx
    c3da:	48 83 ec 28          	sub    $0x28,%rsp
    c3de:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c3e2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c3e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c3ea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c3ee:	48 89 d6             	mov    %rdx,%rsi
    c3f1:	48 89 c7             	mov    %rax,%rdi
    c3f4:	e8 25 01 00 00       	call   c51e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    c3f9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c3fd:	48 89 c7             	mov    %rax,%rdi
    c400:	e8 ee 0c 00 00       	call   d0f3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    c405:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c409:	0f 92 c3             	setb   %bl
    c40c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c410:	48 89 c7             	mov    %rax,%rdi
    c413:	e8 60 f0 ff ff       	call   b478 <_ZNSaI16VkPresentModeKHRED1Ev>
    c418:	84 db                	test   %bl,%bl
    c41a:	74 0f                	je     c42b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c41c:	48 8d 05 35 8f 01 00 	lea    0x18f35(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c423:	48 89 c7             	mov    %rax,%rdi
    c426:	e8 25 8e ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c42b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c42f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c433:	c9                   	leave
    c434:	c3                   	ret
    c435:	90                   	nop

000000000000c436 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c436:	55                   	push   %rbp
    c437:	48 89 e5             	mov    %rsp,%rbp
    c43a:	53                   	push   %rbx
    c43b:	48 83 ec 28          	sub    $0x28,%rsp
    c43f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c443:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c447:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c44b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c44f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c453:	48 89 d6             	mov    %rdx,%rsi
    c456:	48 89 c7             	mov    %rax,%rdi
    c459:	e8 d8 0c 00 00       	call   d136 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c45e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c466:	48 89 d6             	mov    %rdx,%rsi
    c469:	48 89 c7             	mov    %rax,%rdi
    c46c:	e8 f7 0c 00 00       	call   d168 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    c471:	eb 1a                	jmp    c48d <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    c473:	48 89 c3             	mov    %rax,%rbx
    c476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c47a:	48 89 c7             	mov    %rax,%rdi
    c47d:	e8 96 e4 ff ff       	call   a918 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    c482:	48 89 d8             	mov    %rbx,%rax
    c485:	48 89 c7             	mov    %rax,%rdi
    c488:	e8 73 95 ff ff       	call   5a00 <_Unwind_Resume@plt>
    c48d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c491:	c9                   	leave
    c492:	c3                   	ret
    c493:	90                   	nop

000000000000c494 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c494:	55                   	push   %rbp
    c495:	48 89 e5             	mov    %rsp,%rbp
    c498:	48 83 ec 10          	sub    $0x10,%rsp
    c49c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c4a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a8:	48 89 c7             	mov    %rax,%rdi
    c4ab:	e8 24 00 00 00       	call   c4d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    c4b0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4b7:	48 8b 00             	mov    (%rax),%rax
    c4ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c4be:	48 89 ce             	mov    %rcx,%rsi
    c4c1:	48 89 c7             	mov    %rax,%rdi
    c4c4:	e8 f5 0c 00 00       	call   d1be <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c4c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c4cd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c4d1:	90                   	nop
    c4d2:	c9                   	leave
    c4d3:	c3                   	ret

000000000000c4d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c4d4:	55                   	push   %rbp
    c4d5:	48 89 e5             	mov    %rsp,%rbp
    c4d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c4dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e0:	5d                   	pop    %rbp
    c4e1:	c3                   	ret

000000000000c4e2 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c4e2:	55                   	push   %rbp
    c4e3:	48 89 e5             	mov    %rsp,%rbp
    c4e6:	48 83 ec 20          	sub    $0x20,%rsp
    c4ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c4f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c4fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4fe:	48 89 d6             	mov    %rdx,%rsi
    c501:	48 89 c7             	mov    %rax,%rdi
    c504:	e8 de 0c 00 00       	call   d1e7 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    c509:	90                   	nop
    c50a:	c9                   	leave
    c50b:	c3                   	ret

000000000000c50c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c50c:	55                   	push   %rbp
    c50d:	48 89 e5             	mov    %rsp,%rbp
    c510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c514:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c518:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c51c:	5d                   	pop    %rbp
    c51d:	c3                   	ret

000000000000c51e <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    c51e:	55                   	push   %rbp
    c51f:	48 89 e5             	mov    %rsp,%rbp
    c522:	48 83 ec 10          	sub    $0x10,%rsp
    c526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c52a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    c52e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c536:	48 89 d6             	mov    %rdx,%rsi
    c539:	48 89 c7             	mov    %rax,%rdi
    c53c:	e8 cd 0c 00 00       	call   d20e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    c541:	90                   	nop
    c542:	c9                   	leave
    c543:	c3                   	ret

000000000000c544 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    c544:	55                   	push   %rbp
    c545:	48 89 e5             	mov    %rsp,%rbp
    c548:	48 83 ec 20          	sub    $0x20,%rsp
    c54c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c550:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c554:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    c558:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c55d:	74 17                	je     c576 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    c55f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c563:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c567:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c56b:	48 89 ce             	mov    %rcx,%rsi
    c56e:	48 89 c7             	mov    %rax,%rdi
    c571:	e8 a7 0c 00 00       	call   d21d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    c576:	90                   	nop
    c577:	c9                   	leave
    c578:	c3                   	ret
    c579:	90                   	nop

000000000000c57a <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c57a:	55                   	push   %rbp
    c57b:	48 89 e5             	mov    %rsp,%rbp
    c57e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c582:	90                   	nop
    c583:	5d                   	pop    %rbp
    c584:	c3                   	ret
    c585:	90                   	nop

000000000000c586 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c586:	55                   	push   %rbp
    c587:	48 89 e5             	mov    %rsp,%rbp
    c58a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c58e:	90                   	nop
    c58f:	5d                   	pop    %rbp
    c590:	c3                   	ret

000000000000c591 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c591:	55                   	push   %rbp
    c592:	48 89 e5             	mov    %rsp,%rbp
    c595:	53                   	push   %rbx
    c596:	48 83 ec 28          	sub    $0x28,%rsp
    c59a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c59e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c5a2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c5a6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c5aa:	48 89 d6             	mov    %rdx,%rsi
    c5ad:	48 89 c7             	mov    %rax,%rdi
    c5b0:	e8 25 01 00 00       	call   c6da <_ZNSaIP9VkImage_TEC1ERKS1_>
    c5b5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c5b9:	48 89 c7             	mov    %rax,%rdi
    c5bc:	e8 8a 0c 00 00       	call   d24b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    c5c1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c5c5:	0f 92 c3             	setb   %bl
    c5c8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c5cc:	48 89 c7             	mov    %rax,%rdi
    c5cf:	e8 08 f0 ff ff       	call   b5dc <_ZNSaIP9VkImage_TED1Ev>
    c5d4:	84 db                	test   %bl,%bl
    c5d6:	74 0f                	je     c5e7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    c5d8:	48 8d 05 79 8d 01 00 	lea    0x18d79(%rip),%rax        # 25358 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c5df:	48 89 c7             	mov    %rax,%rdi
    c5e2:	e8 69 8c ff ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c5e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c5eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c5ef:	c9                   	leave
    c5f0:	c3                   	ret
    c5f1:	90                   	nop

000000000000c5f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c5f2:	55                   	push   %rbp
    c5f3:	48 89 e5             	mov    %rsp,%rbp
    c5f6:	53                   	push   %rbx
    c5f7:	48 83 ec 28          	sub    $0x28,%rsp
    c5fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c5ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c603:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c607:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c60b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c60f:	48 89 d6             	mov    %rdx,%rsi
    c612:	48 89 c7             	mov    %rax,%rdi
    c615:	e8 74 0c 00 00       	call   d28e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    c61a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c61e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c622:	48 89 d6             	mov    %rdx,%rsi
    c625:	48 89 c7             	mov    %rax,%rdi
    c628:	e8 93 0c 00 00       	call   d2c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    c62d:	eb 1a                	jmp    c649 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    c62f:	48 89 c3             	mov    %rax,%rbx
    c632:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c636:	48 89 c7             	mov    %rax,%rdi
    c639:	e8 f6 e2 ff ff       	call   a934 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    c63e:	48 89 d8             	mov    %rbx,%rax
    c641:	48 89 c7             	mov    %rax,%rdi
    c644:	e8 b7 93 ff ff       	call   5a00 <_Unwind_Resume@plt>
    c649:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c64d:	c9                   	leave
    c64e:	c3                   	ret
    c64f:	90                   	nop

000000000000c650 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c650:	55                   	push   %rbp
    c651:	48 89 e5             	mov    %rsp,%rbp
    c654:	48 83 ec 10          	sub    $0x10,%rsp
    c658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c65c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c664:	48 89 c7             	mov    %rax,%rdi
    c667:	e8 24 00 00 00       	call   c690 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c66c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c66f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c673:	48 8b 00             	mov    (%rax),%rax
    c676:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c67a:	48 89 ce             	mov    %rcx,%rsi
    c67d:	48 89 c7             	mov    %rax,%rdi
    c680:	e8 91 0c 00 00       	call   d316 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c685:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c689:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c68d:	90                   	nop
    c68e:	c9                   	leave
    c68f:	c3                   	ret

000000000000c690 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c690:	55                   	push   %rbp
    c691:	48 89 e5             	mov    %rsp,%rbp
    c694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c69c:	5d                   	pop    %rbp
    c69d:	c3                   	ret

000000000000c69e <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c69e:	55                   	push   %rbp
    c69f:	48 89 e5             	mov    %rsp,%rbp
    c6a2:	48 83 ec 20          	sub    $0x20,%rsp
    c6a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c6b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c6b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ba:	48 89 d6             	mov    %rdx,%rsi
    c6bd:	48 89 c7             	mov    %rax,%rdi
    c6c0:	e8 7a 0c 00 00       	call   d33f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    c6c5:	90                   	nop
    c6c6:	c9                   	leave
    c6c7:	c3                   	ret

000000000000c6c8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c6c8:	55                   	push   %rbp
    c6c9:	48 89 e5             	mov    %rsp,%rbp
    c6cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c6d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6d8:	5d                   	pop    %rbp
    c6d9:	c3                   	ret

000000000000c6da <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    c6da:	55                   	push   %rbp
    c6db:	48 89 e5             	mov    %rsp,%rbp
    c6de:	48 83 ec 10          	sub    $0x10,%rsp
    c6e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    c6ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c6ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f2:	48 89 d6             	mov    %rdx,%rsi
    c6f5:	48 89 c7             	mov    %rax,%rdi
    c6f8:	e8 69 0c 00 00       	call   d366 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    c6fd:	90                   	nop
    c6fe:	c9                   	leave
    c6ff:	c3                   	ret

000000000000c700 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    c700:	55                   	push   %rbp
    c701:	48 89 e5             	mov    %rsp,%rbp
    c704:	48 83 ec 20          	sub    $0x20,%rsp
    c708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c70c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c710:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    c714:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c719:	74 17                	je     c732 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    c71b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c723:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c727:	48 89 ce             	mov    %rcx,%rsi
    c72a:	48 89 c7             	mov    %rax,%rdi
    c72d:	e8 43 0c 00 00       	call   d375 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    c732:	90                   	nop
    c733:	c9                   	leave
    c734:	c3                   	ret

000000000000c735 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    c735:	55                   	push   %rbp
    c736:	48 89 e5             	mov    %rsp,%rbp
    c739:	48 83 ec 20          	sub    $0x20,%rsp
    c73d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    c741:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    c748:	03 3f 00 
    c74b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    c74f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c753:	48 89 c7             	mov    %rax,%rdi
    c756:	e8 48 0c 00 00       	call   d3a3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    c75b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    c75f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    c763:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c767:	48 89 d6             	mov    %rdx,%rsi
    c76a:	48 89 c7             	mov    %rax,%rdi
    c76d:	e8 1f a7 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    c772:	48 8b 00             	mov    (%rax),%rax
      }
    c775:	c9                   	leave
    c776:	c3                   	ret
    c777:	90                   	nop

000000000000c778 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    c778:	55                   	push   %rbp
    c779:	48 89 e5             	mov    %rsp,%rbp
    c77c:	48 83 ec 10          	sub    $0x10,%rsp
    c780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    c788:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c78c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c790:	48 89 d6             	mov    %rdx,%rsi
    c793:	48 89 c7             	mov    %rax,%rdi
    c796:	e8 e9 f0 ff ff       	call   b884 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    c79b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c79f:	48 89 c7             	mov    %rax,%rdi
    c7a2:	e8 17 0c 00 00       	call   d3be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    c7a7:	90                   	nop
    c7a8:	c9                   	leave
    c7a9:	c3                   	ret

000000000000c7aa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    c7aa:	55                   	push   %rbp
    c7ab:	48 89 e5             	mov    %rsp,%rbp
    c7ae:	48 83 ec 10          	sub    $0x10,%rsp
    c7b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    c7ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c7be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c2:	48 89 d6             	mov    %rdx,%rsi
    c7c5:	48 89 c7             	mov    %rax,%rdi
    c7c8:	e8 1f 0c 00 00       	call   d3ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    c7cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c7d1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    c7d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7d8:	48 8b 10             	mov    (%rax),%rdx
    c7db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7df:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e7:	48 8b 08             	mov    (%rax),%rcx
    c7ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c7ee:	48 89 d0             	mov    %rdx,%rax
    c7f1:	48 c1 e0 06          	shl    $0x6,%rax
    c7f5:	48 01 d0             	add    %rdx,%rax
    c7f8:	48 c1 e0 03          	shl    $0x3,%rax
    c7fc:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    c800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c804:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    c808:	90                   	nop
    c809:	c9                   	leave
    c80a:	c3                   	ret

000000000000c80b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c80b:	55                   	push   %rbp
    c80c:	48 89 e5             	mov    %rsp,%rbp
    c80f:	48 83 ec 20          	sub    $0x20,%rsp
    c813:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c817:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c81b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c81f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c827:	48 89 d6             	mov    %rdx,%rsi
    c82a:	48 89 c7             	mov    %rax,%rdi
    c82d:	e8 ed 0b 00 00       	call   d41f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    c832:	c9                   	leave
    c833:	c3                   	ret

000000000000c834 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    c834:	55                   	push   %rbp
    c835:	48 89 e5             	mov    %rsp,%rbp
    c838:	48 83 ec 10          	sub    $0x10,%rsp
    c83c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c840:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    c844:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c84c:	48 89 d6             	mov    %rdx,%rsi
    c84f:	48 89 c7             	mov    %rax,%rdi
    c852:	e8 f1 0b 00 00       	call   d448 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    c857:	90                   	nop
    c858:	c9                   	leave
    c859:	c3                   	ret

000000000000c85a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    c85a:	55                   	push   %rbp
    c85b:	48 89 e5             	mov    %rsp,%rbp
    c85e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c866:	90                   	nop
    c867:	5d                   	pop    %rbp
    c868:	c3                   	ret

000000000000c869 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    c869:	55                   	push   %rbp
    c86a:	48 89 e5             	mov    %rsp,%rbp
    c86d:	48 83 ec 20          	sub    $0x20,%rsp
    c871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c875:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c879:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    c87d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c881:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c889:	48 89 ce             	mov    %rcx,%rsi
    c88c:	48 89 c7             	mov    %rax,%rdi
    c88f:	e8 c4 0b 00 00       	call   d458 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    c894:	90                   	nop
    c895:	c9                   	leave
    c896:	c3                   	ret

000000000000c897 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    c897:	55                   	push   %rbp
    c898:	48 89 e5             	mov    %rsp,%rbp
    c89b:	48 83 ec 20          	sub    $0x20,%rsp
    c89f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    c8a3:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    c8aa:	07 7e 00 
    c8ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    c8b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8b5:	48 89 c7             	mov    %rax,%rdi
    c8b8:	e8 d5 0b 00 00       	call   d492 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    c8bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    c8c1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    c8c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c8c9:	48 89 d6             	mov    %rdx,%rsi
    c8cc:	48 89 c7             	mov    %rax,%rdi
    c8cf:	e8 bd a5 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    c8d4:	48 8b 00             	mov    (%rax),%rax
      }
    c8d7:	c9                   	leave
    c8d8:	c3                   	ret
    c8d9:	90                   	nop

000000000000c8da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    c8da:	55                   	push   %rbp
    c8db:	48 89 e5             	mov    %rsp,%rbp
    c8de:	48 83 ec 10          	sub    $0x10,%rsp
    c8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    c8ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f2:	48 89 d6             	mov    %rdx,%rsi
    c8f5:	48 89 c7             	mov    %rax,%rdi
    c8f8:	e8 43 f1 ff ff       	call   ba40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    c8fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c901:	48 89 c7             	mov    %rax,%rdi
    c904:	e8 a3 0b 00 00       	call   d4ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    c909:	90                   	nop
    c90a:	c9                   	leave
    c90b:	c3                   	ret

000000000000c90c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    c90c:	55                   	push   %rbp
    c90d:	48 89 e5             	mov    %rsp,%rbp
    c910:	48 83 ec 10          	sub    $0x10,%rsp
    c914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    c91c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c924:	48 89 d6             	mov    %rdx,%rsi
    c927:	48 89 c7             	mov    %rax,%rdi
    c92a:	e8 ab 0b 00 00       	call   d4da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    c92f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c933:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    c936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c93a:	48 8b 10             	mov    (%rax),%rdx
    c93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c941:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c949:	48 8b 08             	mov    (%rax),%rcx
    c94c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c950:	48 89 d0             	mov    %rdx,%rax
    c953:	48 c1 e0 06          	shl    $0x6,%rax
    c957:	48 01 d0             	add    %rdx,%rax
    c95a:	48 c1 e0 02          	shl    $0x2,%rax
    c95e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    c962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c966:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    c96a:	90                   	nop
    c96b:	c9                   	leave
    c96c:	c3                   	ret

000000000000c96d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c96d:	55                   	push   %rbp
    c96e:	48 89 e5             	mov    %rsp,%rbp
    c971:	48 83 ec 20          	sub    $0x20,%rsp
    c975:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c979:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c97d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c981:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c989:	48 89 d6             	mov    %rdx,%rsi
    c98c:	48 89 c7             	mov    %rax,%rdi
    c98f:	e8 79 0b 00 00       	call   d50d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    c994:	c9                   	leave
    c995:	c3                   	ret

000000000000c996 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    c996:	55                   	push   %rbp
    c997:	48 89 e5             	mov    %rsp,%rbp
    c99a:	48 83 ec 10          	sub    $0x10,%rsp
    c99e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    c9a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c9aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ae:	48 89 d6             	mov    %rdx,%rsi
    c9b1:	48 89 c7             	mov    %rax,%rdi
    c9b4:	e8 7d 0b 00 00       	call   d536 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    c9b9:	90                   	nop
    c9ba:	c9                   	leave
    c9bb:	c3                   	ret

000000000000c9bc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    c9bc:	55                   	push   %rbp
    c9bd:	48 89 e5             	mov    %rsp,%rbp
    c9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c9c8:	90                   	nop
    c9c9:	5d                   	pop    %rbp
    c9ca:	c3                   	ret

000000000000c9cb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    c9cb:	55                   	push   %rbp
    c9cc:	48 89 e5             	mov    %rsp,%rbp
    c9cf:	48 83 ec 20          	sub    $0x20,%rsp
    c9d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c9db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    c9df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c9e3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c9e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9eb:	48 89 ce             	mov    %rcx,%rsi
    c9ee:	48 89 c7             	mov    %rax,%rdi
    c9f1:	e8 50 0b 00 00       	call   d546 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    c9f6:	90                   	nop
    c9f7:	c9                   	leave
    c9f8:	c3                   	ret

000000000000c9f9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    c9f9:	55                   	push   %rbp
    c9fa:	48 89 e5             	mov    %rsp,%rbp
    c9fd:	48 83 ec 20          	sub    $0x20,%rsp
    ca01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ca05:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ca0c:	ff ff 0f 
    ca0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ca13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca17:	48 89 c7             	mov    %rax,%rdi
    ca1a:	e8 61 0b 00 00       	call   d580 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    ca1f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ca23:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ca27:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca2b:	48 89 d6             	mov    %rdx,%rsi
    ca2e:	48 89 c7             	mov    %rax,%rdi
    ca31:	e8 5b a4 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    ca36:	48 8b 00             	mov    (%rax),%rax
      }
    ca39:	c9                   	leave
    ca3a:	c3                   	ret
    ca3b:	90                   	nop

000000000000ca3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ca3c:	55                   	push   %rbp
    ca3d:	48 89 e5             	mov    %rsp,%rbp
    ca40:	48 83 ec 10          	sub    $0x10,%rsp
    ca44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ca4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca54:	48 89 d6             	mov    %rdx,%rsi
    ca57:	48 89 c7             	mov    %rax,%rdi
    ca5a:	e8 61 f1 ff ff       	call   bbc0 <_ZNSaIPKcEC1ERKS1_>
    ca5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca63:	48 89 c7             	mov    %rax,%rdi
    ca66:	e8 2f 0b 00 00       	call   d59a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    ca6b:	90                   	nop
    ca6c:	c9                   	leave
    ca6d:	c3                   	ret

000000000000ca6e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ca6e:	55                   	push   %rbp
    ca6f:	48 89 e5             	mov    %rsp,%rbp
    ca72:	48 83 ec 10          	sub    $0x10,%rsp
    ca76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ca7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca86:	48 89 d6             	mov    %rdx,%rsi
    ca89:	48 89 c7             	mov    %rax,%rdi
    ca8c:	e8 37 0b 00 00       	call   d5c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    ca91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca95:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ca98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca9c:	48 8b 10             	mov    (%rax),%rdx
    ca9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    caa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caab:	48 8b 00             	mov    (%rax),%rax
    caae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cab2:	48 c1 e2 03          	shl    $0x3,%rdx
    cab6:	48 01 c2             	add    %rax,%rdx
    cab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cabd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    cac1:	90                   	nop
    cac2:	c9                   	leave
    cac3:	c3                   	ret

000000000000cac4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    cac4:	55                   	push   %rbp
    cac5:	48 89 e5             	mov    %rsp,%rbp
    cac8:	48 83 ec 20          	sub    $0x20,%rsp
    cacc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cad4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    cad8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cadc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cae0:	48 89 d6             	mov    %rdx,%rsi
    cae3:	48 89 c7             	mov    %rax,%rdi
    cae6:	e8 10 0b 00 00       	call   d5fb <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    caeb:	c9                   	leave
    caec:	c3                   	ret
    caed:	90                   	nop

000000000000caee <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    caee:	55                   	push   %rbp
    caef:	48 89 e5             	mov    %rsp,%rbp
    caf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    caf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cafa:	90                   	nop
    cafb:	5d                   	pop    %rbp
    cafc:	c3                   	ret

000000000000cafd <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    cafd:	55                   	push   %rbp
    cafe:	48 89 e5             	mov    %rsp,%rbp
    cb01:	48 83 ec 20          	sub    $0x20,%rsp
    cb05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    cb11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cb19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb1d:	48 89 ce             	mov    %rcx,%rsi
    cb20:	48 89 c7             	mov    %rax,%rdi
    cb23:	e8 fc 0a 00 00       	call   d624 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    cb28:	90                   	nop
    cb29:	c9                   	leave
    cb2a:	c3                   	ret

000000000000cb2b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    cb2b:	55                   	push   %rbp
    cb2c:	48 89 e5             	mov    %rsp,%rbp
    cb2f:	48 83 ec 20          	sub    $0x20,%rsp
    cb33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    cb37:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    cb3e:	ff ff 0f 
    cb41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    cb45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb49:	48 89 c7             	mov    %rax,%rdi
    cb4c:	e8 04 0b 00 00       	call   d655 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    cb51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    cb55:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    cb59:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb5d:	48 89 d6             	mov    %rdx,%rsi
    cb60:	48 89 c7             	mov    %rax,%rdi
    cb63:	e8 29 a3 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    cb68:	48 8b 00             	mov    (%rax),%rax
      }
    cb6b:	c9                   	leave
    cb6c:	c3                   	ret
    cb6d:	90                   	nop

000000000000cb6e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    cb6e:	55                   	push   %rbp
    cb6f:	48 89 e5             	mov    %rsp,%rbp
    cb72:	48 83 ec 10          	sub    $0x10,%rsp
    cb76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    cb7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb86:	48 89 d6             	mov    %rdx,%rsi
    cb89:	48 89 c7             	mov    %rax,%rdi
    cb8c:	e8 eb f1 ff ff       	call   bd7c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    cb91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb95:	48 89 c7             	mov    %rax,%rdi
    cb98:	e8 d3 0a 00 00       	call   d670 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    cb9d:	90                   	nop
    cb9e:	c9                   	leave
    cb9f:	c3                   	ret

000000000000cba0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    cba0:	55                   	push   %rbp
    cba1:	48 89 e5             	mov    %rsp,%rbp
    cba4:	48 83 ec 10          	sub    $0x10,%rsp
    cba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    cbb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cbb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb8:	48 89 d6             	mov    %rdx,%rsi
    cbbb:	48 89 c7             	mov    %rax,%rdi
    cbbe:	e8 db 0a 00 00       	call   d69e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    cbc3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cbc7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    cbca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbce:	48 8b 10             	mov    (%rax),%rdx
    cbd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    cbd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbdd:	48 8b 00             	mov    (%rax),%rax
    cbe0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cbe4:	48 c1 e2 03          	shl    $0x3,%rdx
    cbe8:	48 01 c2             	add    %rax,%rdx
    cbeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbef:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    cbf3:	90                   	nop
    cbf4:	c9                   	leave
    cbf5:	c3                   	ret

000000000000cbf6 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    cbf6:	55                   	push   %rbp
    cbf7:	48 89 e5             	mov    %rsp,%rbp
    cbfa:	48 83 ec 20          	sub    $0x20,%rsp
    cbfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    cc0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cc0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc12:	48 89 d6             	mov    %rdx,%rsi
    cc15:	48 89 c7             	mov    %rax,%rdi
    cc18:	e8 b4 0a 00 00       	call   d6d1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    cc1d:	c9                   	leave
    cc1e:	c3                   	ret

000000000000cc1f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cc1f:	55                   	push   %rbp
    cc20:	48 89 e5             	mov    %rsp,%rbp
    cc23:	48 83 ec 10          	sub    $0x10,%rsp
    cc27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc2b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cc2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cc33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc37:	48 89 d6             	mov    %rdx,%rsi
    cc3a:	48 89 c7             	mov    %rax,%rdi
    cc3d:	e8 b8 0a 00 00       	call   d6fa <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    cc42:	90                   	nop
    cc43:	c9                   	leave
    cc44:	c3                   	ret
    cc45:	90                   	nop

000000000000cc46 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    cc46:	55                   	push   %rbp
    cc47:	48 89 e5             	mov    %rsp,%rbp
    cc4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc52:	90                   	nop
    cc53:	5d                   	pop    %rbp
    cc54:	c3                   	ret

000000000000cc55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    cc55:	55                   	push   %rbp
    cc56:	48 89 e5             	mov    %rsp,%rbp
    cc59:	48 83 ec 20          	sub    $0x20,%rsp
    cc5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc65:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    cc69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cc6d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cc71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc75:	48 89 ce             	mov    %rcx,%rsi
    cc78:	48 89 c7             	mov    %rax,%rdi
    cc7b:	e8 8a 0a 00 00       	call   d70a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    cc80:	90                   	nop
    cc81:	c9                   	leave
    cc82:	c3                   	ret

000000000000cc83 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    cc83:	55                   	push   %rbp
    cc84:	48 89 e5             	mov    %rsp,%rbp
    cc87:	48 83 ec 20          	sub    $0x20,%rsp
    cc8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    cc8f:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    cc96:	55 55 05 
    cc99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    cc9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cca1:	48 89 c7             	mov    %rax,%rdi
    cca4:	e8 92 0a 00 00       	call   d73b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    cca9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ccad:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ccb1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ccb5:	48 89 d6             	mov    %rdx,%rsi
    ccb8:	48 89 c7             	mov    %rax,%rdi
    ccbb:	e8 d1 a1 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    ccc0:	48 8b 00             	mov    (%rax),%rax
      }
    ccc3:	c9                   	leave
    ccc4:	c3                   	ret
    ccc5:	90                   	nop

000000000000ccc6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ccc6:	55                   	push   %rbp
    ccc7:	48 89 e5             	mov    %rsp,%rbp
    ccca:	48 83 ec 10          	sub    $0x10,%rsp
    ccce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ccd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccde:	48 89 d6             	mov    %rdx,%rsi
    cce1:	48 89 c7             	mov    %rax,%rdi
    cce4:	e8 4f f2 ff ff       	call   bf38 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    cce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cced:	48 89 c7             	mov    %rax,%rdi
    ccf0:	e8 61 0a 00 00       	call   d756 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    ccf5:	90                   	nop
    ccf6:	c9                   	leave
    ccf7:	c3                   	ret

000000000000ccf8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ccf8:	55                   	push   %rbp
    ccf9:	48 89 e5             	mov    %rsp,%rbp
    ccfc:	48 83 ec 10          	sub    $0x10,%rsp
    cd00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    cd08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd10:	48 89 d6             	mov    %rdx,%rsi
    cd13:	48 89 c7             	mov    %rax,%rdi
    cd16:	e8 69 0a 00 00       	call   d784 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    cd1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd1f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    cd22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd26:	48 8b 10             	mov    (%rax),%rdx
    cd29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd2d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    cd31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd35:	48 8b 08             	mov    (%rax),%rcx
    cd38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd3c:	48 89 d0             	mov    %rdx,%rax
    cd3f:	48 01 c0             	add    %rax,%rax
    cd42:	48 01 d0             	add    %rdx,%rax
    cd45:	48 c1 e0 03          	shl    $0x3,%rax
    cd49:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    cd4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd51:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    cd55:	90                   	nop
    cd56:	c9                   	leave
    cd57:	c3                   	ret

000000000000cd58 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    cd58:	55                   	push   %rbp
    cd59:	48 89 e5             	mov    %rsp,%rbp
    cd5c:	48 83 ec 20          	sub    $0x20,%rsp
    cd60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cd68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    cd6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd74:	48 89 d6             	mov    %rdx,%rsi
    cd77:	48 89 c7             	mov    %rax,%rdi
    cd7a:	e8 38 0a 00 00       	call   d7b7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    cd7f:	c9                   	leave
    cd80:	c3                   	ret

000000000000cd81 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cd81:	55                   	push   %rbp
    cd82:	48 89 e5             	mov    %rsp,%rbp
    cd85:	48 83 ec 10          	sub    $0x10,%rsp
    cd89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cd91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd99:	48 89 d6             	mov    %rdx,%rsi
    cd9c:	48 89 c7             	mov    %rax,%rdi
    cd9f:	e8 3c 0a 00 00       	call   d7e0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    cda4:	90                   	nop
    cda5:	c9                   	leave
    cda6:	c3                   	ret
    cda7:	90                   	nop

000000000000cda8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    cda8:	55                   	push   %rbp
    cda9:	48 89 e5             	mov    %rsp,%rbp
    cdac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cdb4:	90                   	nop
    cdb5:	5d                   	pop    %rbp
    cdb6:	c3                   	ret

000000000000cdb7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    cdb7:	55                   	push   %rbp
    cdb8:	48 89 e5             	mov    %rsp,%rbp
    cdbb:	48 83 ec 20          	sub    $0x20,%rsp
    cdbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cdc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    cdcb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdcf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cdd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdd7:	48 89 ce             	mov    %rcx,%rsi
    cdda:	48 89 c7             	mov    %rax,%rdi
    cddd:	e8 0e 0a 00 00       	call   d7f0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    cde2:	90                   	nop
    cde3:	c9                   	leave
    cde4:	c3                   	ret

000000000000cde5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    cde5:	55                   	push   %rbp
    cde6:	48 89 e5             	mov    %rsp,%rbp
    cde9:	48 83 ec 20          	sub    $0x20,%rsp
    cded:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    cdf1:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    cdf8:	49 92 04 
    cdfb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    cdff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce03:	48 89 c7             	mov    %rax,%rdi
    ce06:	e8 1e 0a 00 00       	call   d829 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    ce0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ce0f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ce13:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ce17:	48 89 d6             	mov    %rdx,%rsi
    ce1a:	48 89 c7             	mov    %rax,%rdi
    ce1d:	e8 6f a0 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    ce22:	48 8b 00             	mov    (%rax),%rax
      }
    ce25:	c9                   	leave
    ce26:	c3                   	ret
    ce27:	90                   	nop

000000000000ce28 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ce28:	55                   	push   %rbp
    ce29:	48 89 e5             	mov    %rsp,%rbp
    ce2c:	48 83 ec 10          	sub    $0x10,%rsp
    ce30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ce38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce40:	48 89 d6             	mov    %rdx,%rsi
    ce43:	48 89 c7             	mov    %rax,%rdi
    ce46:	e8 5b f3 ff ff       	call   c1a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    ce4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce4f:	48 89 c7             	mov    %rax,%rdi
    ce52:	e8 ed 09 00 00       	call   d844 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    ce57:	90                   	nop
    ce58:	c9                   	leave
    ce59:	c3                   	ret

000000000000ce5a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    ce5a:	55                   	push   %rbp
    ce5b:	48 89 e5             	mov    %rsp,%rbp
    ce5e:	48 83 ec 10          	sub    $0x10,%rsp
    ce62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    ce6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce72:	48 89 d6             	mov    %rdx,%rsi
    ce75:	48 89 c7             	mov    %rax,%rdi
    ce78:	e8 f5 09 00 00       	call   d872 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    ce7d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce81:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    ce84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce88:	48 8b 10             	mov    (%rax),%rdx
    ce8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce8f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ce93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce97:	48 8b 08             	mov    (%rax),%rcx
    ce9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce9e:	48 89 d0             	mov    %rdx,%rax
    cea1:	48 c1 e0 03          	shl    $0x3,%rax
    cea5:	48 29 d0             	sub    %rdx,%rax
    cea8:	48 c1 e0 02          	shl    $0x2,%rax
    ceac:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    ceb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb4:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    ceb8:	90                   	nop
    ceb9:	c9                   	leave
    ceba:	c3                   	ret

000000000000cebb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    cebb:	55                   	push   %rbp
    cebc:	48 89 e5             	mov    %rsp,%rbp
    cebf:	48 83 ec 20          	sub    $0x20,%rsp
    cec3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cec7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cecb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    cecf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ced3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ced7:	48 89 d6             	mov    %rdx,%rsi
    ceda:	48 89 c7             	mov    %rax,%rdi
    cedd:	e8 c3 09 00 00       	call   d8a5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    cee2:	c9                   	leave
    cee3:	c3                   	ret

000000000000cee4 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cee4:	55                   	push   %rbp
    cee5:	48 89 e5             	mov    %rsp,%rbp
    cee8:	48 83 ec 10          	sub    $0x10,%rsp
    ceec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cef0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cef4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cefc:	48 89 d6             	mov    %rdx,%rsi
    ceff:	48 89 c7             	mov    %rax,%rdi
    cf02:	e8 c7 09 00 00       	call   d8ce <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    cf07:	90                   	nop
    cf08:	c9                   	leave
    cf09:	c3                   	ret

000000000000cf0a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    cf0a:	55                   	push   %rbp
    cf0b:	48 89 e5             	mov    %rsp,%rbp
    cf0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    cf12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf16:	5d                   	pop    %rbp
    cf17:	c3                   	ret

000000000000cf18 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    cf18:	55                   	push   %rbp
    cf19:	48 89 e5             	mov    %rsp,%rbp
    cf1c:	53                   	push   %rbx
    cf1d:	48 83 ec 18          	sub    $0x18,%rsp
    cf21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cf25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    cf29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf2d:	48 89 c7             	mov    %rax,%rdi
    cf30:	e8 2f f2 ff ff       	call   c164 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    cf35:	48 89 c3             	mov    %rax,%rbx
    cf38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf3c:	48 89 c7             	mov    %rax,%rdi
    cf3f:	e8 99 09 00 00       	call   d8dd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    cf44:	48 89 de             	mov    %rbx,%rsi
    cf47:	48 89 c7             	mov    %rax,%rdi
    cf4a:	e8 9c 09 00 00       	call   d8eb <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    cf4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf53:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    cf57:	90                   	nop
    cf58:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cf5c:	c9                   	leave
    cf5d:	c3                   	ret

000000000000cf5e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    cf5e:	55                   	push   %rbp
    cf5f:	48 89 e5             	mov    %rsp,%rbp
    cf62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf6a:	90                   	nop
    cf6b:	5d                   	pop    %rbp
    cf6c:	c3                   	ret

000000000000cf6d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    cf6d:	55                   	push   %rbp
    cf6e:	48 89 e5             	mov    %rsp,%rbp
    cf71:	48 83 ec 20          	sub    $0x20,%rsp
    cf75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    cf81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cf89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8d:	48 89 ce             	mov    %rcx,%rsi
    cf90:	48 89 c7             	mov    %rax,%rdi
    cf93:	e8 a4 09 00 00       	call   d93c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    cf98:	90                   	nop
    cf99:	c9                   	leave
    cf9a:	c3                   	ret

000000000000cf9b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    cf9b:	55                   	push   %rbp
    cf9c:	48 89 e5             	mov    %rsp,%rbp
    cf9f:	48 83 ec 20          	sub    $0x20,%rsp
    cfa3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    cfa7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    cfae:	ff ff 0f 
    cfb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    cfb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfb9:	48 89 c7             	mov    %rax,%rdi
    cfbc:	e8 b5 09 00 00       	call   d976 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    cfc1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    cfc5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    cfc9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cfcd:	48 89 d6             	mov    %rdx,%rsi
    cfd0:	48 89 c7             	mov    %rax,%rdi
    cfd3:	e8 b9 9e ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    cfd8:	48 8b 00             	mov    (%rax),%rax
      }
    cfdb:	c9                   	leave
    cfdc:	c3                   	ret
    cfdd:	90                   	nop

000000000000cfde <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    cfde:	55                   	push   %rbp
    cfdf:	48 89 e5             	mov    %rsp,%rbp
    cfe2:	48 83 ec 10          	sub    $0x10,%rsp
    cfe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    cfee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff6:	48 89 d6             	mov    %rdx,%rsi
    cff9:	48 89 c7             	mov    %rax,%rdi
    cffc:	e8 61 f3 ff ff       	call   c362 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    d001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d005:	48 89 c7             	mov    %rax,%rdi
    d008:	e8 83 09 00 00       	call   d990 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d00d:	90                   	nop
    d00e:	c9                   	leave
    d00f:	c3                   	ret

000000000000d010 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d010:	55                   	push   %rbp
    d011:	48 89 e5             	mov    %rsp,%rbp
    d014:	48 83 ec 10          	sub    $0x10,%rsp
    d018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d01c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d020:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d028:	48 89 d6             	mov    %rdx,%rsi
    d02b:	48 89 c7             	mov    %rax,%rdi
    d02e:	e8 8b 09 00 00       	call   d9be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    d033:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d037:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d03e:	48 8b 10             	mov    (%rax),%rdx
    d041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d045:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04d:	48 8b 00             	mov    (%rax),%rax
    d050:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d054:	48 c1 e2 03          	shl    $0x3,%rdx
    d058:	48 01 c2             	add    %rax,%rdx
    d05b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d05f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d063:	90                   	nop
    d064:	c9                   	leave
    d065:	c3                   	ret

000000000000d066 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d066:	55                   	push   %rbp
    d067:	48 89 e5             	mov    %rsp,%rbp
    d06a:	48 83 ec 20          	sub    $0x20,%rsp
    d06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d072:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d076:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d07a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d07e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d082:	48 89 d6             	mov    %rdx,%rsi
    d085:	48 89 c7             	mov    %rax,%rdi
    d088:	e8 64 09 00 00       	call   d9f1 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    d08d:	c9                   	leave
    d08e:	c3                   	ret

000000000000d08f <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d08f:	55                   	push   %rbp
    d090:	48 89 e5             	mov    %rsp,%rbp
    d093:	48 83 ec 10          	sub    $0x10,%rsp
    d097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d09b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d09f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0a7:	48 89 d6             	mov    %rdx,%rsi
    d0aa:	48 89 c7             	mov    %rax,%rdi
    d0ad:	e8 68 09 00 00       	call   da1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    d0b2:	90                   	nop
    d0b3:	c9                   	leave
    d0b4:	c3                   	ret
    d0b5:	90                   	nop

000000000000d0b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    d0b6:	55                   	push   %rbp
    d0b7:	48 89 e5             	mov    %rsp,%rbp
    d0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0c2:	90                   	nop
    d0c3:	5d                   	pop    %rbp
    d0c4:	c3                   	ret

000000000000d0c5 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d0c5:	55                   	push   %rbp
    d0c6:	48 89 e5             	mov    %rsp,%rbp
    d0c9:	48 83 ec 20          	sub    $0x20,%rsp
    d0cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d0d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d0e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e5:	48 89 ce             	mov    %rcx,%rsi
    d0e8:	48 89 c7             	mov    %rax,%rdi
    d0eb:	e8 3a 09 00 00       	call   da2a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    d0f0:	90                   	nop
    d0f1:	c9                   	leave
    d0f2:	c3                   	ret

000000000000d0f3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d0f3:	55                   	push   %rbp
    d0f4:	48 89 e5             	mov    %rsp,%rbp
    d0f7:	48 83 ec 20          	sub    $0x20,%rsp
    d0fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d0ff:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d106:	ff ff 1f 
    d109:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d10d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d111:	48 89 c7             	mov    %rax,%rdi
    d114:	e8 42 09 00 00       	call   da5b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    d119:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d11d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d121:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d125:	48 89 d6             	mov    %rdx,%rsi
    d128:	48 89 c7             	mov    %rax,%rdi
    d12b:	e8 61 9d ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    d130:	48 8b 00             	mov    (%rax),%rax
      }
    d133:	c9                   	leave
    d134:	c3                   	ret
    d135:	90                   	nop

000000000000d136 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d136:	55                   	push   %rbp
    d137:	48 89 e5             	mov    %rsp,%rbp
    d13a:	48 83 ec 10          	sub    $0x10,%rsp
    d13e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d146:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d14a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d14e:	48 89 d6             	mov    %rdx,%rsi
    d151:	48 89 c7             	mov    %rax,%rdi
    d154:	e8 c5 f3 ff ff       	call   c51e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    d159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d15d:	48 89 c7             	mov    %rax,%rdi
    d160:	e8 11 09 00 00       	call   da76 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d165:	90                   	nop
    d166:	c9                   	leave
    d167:	c3                   	ret

000000000000d168 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d168:	55                   	push   %rbp
    d169:	48 89 e5             	mov    %rsp,%rbp
    d16c:	48 83 ec 10          	sub    $0x10,%rsp
    d170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d174:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d178:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d17c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d180:	48 89 d6             	mov    %rdx,%rsi
    d183:	48 89 c7             	mov    %rax,%rdi
    d186:	e8 19 09 00 00       	call   daa4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    d18b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d18f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d196:	48 8b 10             	mov    (%rax),%rdx
    d199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d19d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1a5:	48 8b 00             	mov    (%rax),%rax
    d1a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1ac:	48 c1 e2 02          	shl    $0x2,%rdx
    d1b0:	48 01 c2             	add    %rax,%rdx
    d1b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1b7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d1bb:	90                   	nop
    d1bc:	c9                   	leave
    d1bd:	c3                   	ret

000000000000d1be <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d1be:	55                   	push   %rbp
    d1bf:	48 89 e5             	mov    %rsp,%rbp
    d1c2:	48 83 ec 20          	sub    $0x20,%rsp
    d1c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d1d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1da:	48 89 d6             	mov    %rdx,%rsi
    d1dd:	48 89 c7             	mov    %rax,%rdi
    d1e0:	e8 f2 08 00 00       	call   dad7 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    d1e5:	c9                   	leave
    d1e6:	c3                   	ret

000000000000d1e7 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d1e7:	55                   	push   %rbp
    d1e8:	48 89 e5             	mov    %rsp,%rbp
    d1eb:	48 83 ec 10          	sub    $0x10,%rsp
    d1ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d1f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1ff:	48 89 d6             	mov    %rdx,%rsi
    d202:	48 89 c7             	mov    %rax,%rdi
    d205:	e8 f6 08 00 00       	call   db00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    d20a:	90                   	nop
    d20b:	c9                   	leave
    d20c:	c3                   	ret
    d20d:	90                   	nop

000000000000d20e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    d20e:	55                   	push   %rbp
    d20f:	48 89 e5             	mov    %rsp,%rbp
    d212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d216:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d21a:	90                   	nop
    d21b:	5d                   	pop    %rbp
    d21c:	c3                   	ret

000000000000d21d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d21d:	55                   	push   %rbp
    d21e:	48 89 e5             	mov    %rsp,%rbp
    d221:	48 83 ec 20          	sub    $0x20,%rsp
    d225:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d229:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d22d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d231:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d235:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d23d:	48 89 ce             	mov    %rcx,%rsi
    d240:	48 89 c7             	mov    %rax,%rdi
    d243:	e8 c8 08 00 00       	call   db10 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    d248:	90                   	nop
    d249:	c9                   	leave
    d24a:	c3                   	ret

000000000000d24b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d24b:	55                   	push   %rbp
    d24c:	48 89 e5             	mov    %rsp,%rbp
    d24f:	48 83 ec 20          	sub    $0x20,%rsp
    d253:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d257:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d25e:	ff ff 0f 
    d261:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d269:	48 89 c7             	mov    %rax,%rdi
    d26c:	e8 d0 08 00 00       	call   db41 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    d271:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d275:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d279:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d27d:	48 89 d6             	mov    %rdx,%rsi
    d280:	48 89 c7             	mov    %rax,%rdi
    d283:	e8 09 9c ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    d288:	48 8b 00             	mov    (%rax),%rax
      }
    d28b:	c9                   	leave
    d28c:	c3                   	ret
    d28d:	90                   	nop

000000000000d28e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d28e:	55                   	push   %rbp
    d28f:	48 89 e5             	mov    %rsp,%rbp
    d292:	48 83 ec 10          	sub    $0x10,%rsp
    d296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d29a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d29e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2a6:	48 89 d6             	mov    %rdx,%rsi
    d2a9:	48 89 c7             	mov    %rax,%rdi
    d2ac:	e8 29 f4 ff ff       	call   c6da <_ZNSaIP9VkImage_TEC1ERKS1_>
    d2b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2b5:	48 89 c7             	mov    %rax,%rdi
    d2b8:	e8 9f 08 00 00       	call   db5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    d2bd:	90                   	nop
    d2be:	c9                   	leave
    d2bf:	c3                   	ret

000000000000d2c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d2c0:	55                   	push   %rbp
    d2c1:	48 89 e5             	mov    %rsp,%rbp
    d2c4:	48 83 ec 10          	sub    $0x10,%rsp
    d2c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d2d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2d8:	48 89 d6             	mov    %rdx,%rsi
    d2db:	48 89 c7             	mov    %rax,%rdi
    d2de:	e8 a7 08 00 00       	call   db8a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    d2e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2e7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d2ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2ee:	48 8b 10             	mov    (%rax),%rdx
    d2f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d2f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2fd:	48 8b 00             	mov    (%rax),%rax
    d300:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d304:	48 c1 e2 03          	shl    $0x3,%rdx
    d308:	48 01 c2             	add    %rax,%rdx
    d30b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d30f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d313:	90                   	nop
    d314:	c9                   	leave
    d315:	c3                   	ret

000000000000d316 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d316:	55                   	push   %rbp
    d317:	48 89 e5             	mov    %rsp,%rbp
    d31a:	48 83 ec 20          	sub    $0x20,%rsp
    d31e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d322:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d326:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d32a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d332:	48 89 d6             	mov    %rdx,%rsi
    d335:	48 89 c7             	mov    %rax,%rdi
    d338:	e8 80 08 00 00       	call   dbbd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    d33d:	c9                   	leave
    d33e:	c3                   	ret

000000000000d33f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d33f:	55                   	push   %rbp
    d340:	48 89 e5             	mov    %rsp,%rbp
    d343:	48 83 ec 10          	sub    $0x10,%rsp
    d347:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d34b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d34f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d357:	48 89 d6             	mov    %rdx,%rsi
    d35a:	48 89 c7             	mov    %rax,%rdi
    d35d:	e8 84 08 00 00       	call   dbe6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    d362:	90                   	nop
    d363:	c9                   	leave
    d364:	c3                   	ret
    d365:	90                   	nop

000000000000d366 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    d366:	55                   	push   %rbp
    d367:	48 89 e5             	mov    %rsp,%rbp
    d36a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d36e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d372:	90                   	nop
    d373:	5d                   	pop    %rbp
    d374:	c3                   	ret

000000000000d375 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d375:	55                   	push   %rbp
    d376:	48 89 e5             	mov    %rsp,%rbp
    d379:	48 83 ec 20          	sub    $0x20,%rsp
    d37d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d381:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d385:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d389:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d38d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d395:	48 89 ce             	mov    %rcx,%rsi
    d398:	48 89 c7             	mov    %rax,%rdi
    d39b:	e8 56 08 00 00       	call   dbf6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    d3a0:	90                   	nop
    d3a1:	c9                   	leave
    d3a2:	c3                   	ret

000000000000d3a3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d3a3:	55                   	push   %rbp
    d3a4:	48 89 e5             	mov    %rsp,%rbp
    d3a7:	48 83 ec 10          	sub    $0x10,%rsp
    d3ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d3af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b3:	48 89 c7             	mov    %rax,%rdi
    d3b6:	e8 6d 08 00 00       	call   dc28 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    d3bb:	c9                   	leave
    d3bc:	c3                   	ret
    d3bd:	90                   	nop

000000000000d3be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d3be:	55                   	push   %rbp
    d3bf:	48 89 e5             	mov    %rsp,%rbp
    d3c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d3c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d3d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d3dc:	00 
    d3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d3e8:	00 
	{ }
    d3e9:	90                   	nop
    d3ea:	5d                   	pop    %rbp
    d3eb:	c3                   	ret

000000000000d3ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d3ec:	55                   	push   %rbp
    d3ed:	48 89 e5             	mov    %rsp,%rbp
    d3f0:	48 83 ec 10          	sub    $0x10,%rsp
    d3f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d3fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d401:	74 15                	je     d418 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    d403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d407:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d40b:	48 89 d6             	mov    %rdx,%rsi
    d40e:	48 89 c7             	mov    %rax,%rdi
    d411:	e8 2c 08 00 00       	call   dc42 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    d416:	eb 05                	jmp    d41d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    d418:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d41d:	c9                   	leave
    d41e:	c3                   	ret

000000000000d41f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d41f:	55                   	push   %rbp
    d420:	48 89 e5             	mov    %rsp,%rbp
    d423:	48 83 ec 20          	sub    $0x20,%rsp
    d427:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d42b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d42f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d433:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d43b:	48 89 d6             	mov    %rdx,%rsi
    d43e:	48 89 c7             	mov    %rax,%rdi
    d441:	e8 26 08 00 00       	call   dc6c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    d446:	c9                   	leave
    d447:	c3                   	ret

000000000000d448 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    d448:	55                   	push   %rbp
    d449:	48 89 e5             	mov    %rsp,%rbp
    d44c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d450:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d454:	90                   	nop
    d455:	5d                   	pop    %rbp
    d456:	c3                   	ret
    d457:	90                   	nop

000000000000d458 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d458:	55                   	push   %rbp
    d459:	48 89 e5             	mov    %rsp,%rbp
    d45c:	48 83 ec 20          	sub    $0x20,%rsp
    d460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d468:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d46c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d470:	48 89 d0             	mov    %rdx,%rax
    d473:	48 c1 e0 06          	shl    $0x6,%rax
    d477:	48 01 d0             	add    %rdx,%rax
    d47a:	48 c1 e0 03          	shl    $0x3,%rax
    d47e:	48 89 c2             	mov    %rax,%rdx
    d481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d485:	48 89 d6             	mov    %rdx,%rsi
    d488:	48 89 c7             	mov    %rax,%rdi
    d48b:	e8 b0 80 ff ff       	call   5540 <_ZdlPvm@plt>
      }
    d490:	c9                   	leave
    d491:	c3                   	ret

000000000000d492 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d492:	55                   	push   %rbp
    d493:	48 89 e5             	mov    %rsp,%rbp
    d496:	48 83 ec 10          	sub    $0x10,%rsp
    d49a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d49e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4a2:	48 89 c7             	mov    %rax,%rdi
    d4a5:	e8 22 08 00 00       	call   dccc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    d4aa:	c9                   	leave
    d4ab:	c3                   	ret

000000000000d4ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d4ac:	55                   	push   %rbp
    d4ad:	48 89 e5             	mov    %rsp,%rbp
    d4b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d4bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4c3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d4ca:	00 
    d4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4cf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d4d6:	00 
	{ }
    d4d7:	90                   	nop
    d4d8:	5d                   	pop    %rbp
    d4d9:	c3                   	ret

000000000000d4da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d4da:	55                   	push   %rbp
    d4db:	48 89 e5             	mov    %rsp,%rbp
    d4de:	48 83 ec 10          	sub    $0x10,%rsp
    d4e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d4e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d4ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d4ef:	74 15                	je     d506 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    d4f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d4f9:	48 89 d6             	mov    %rdx,%rsi
    d4fc:	48 89 c7             	mov    %rax,%rdi
    d4ff:	e8 e2 07 00 00       	call   dce6 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    d504:	eb 05                	jmp    d50b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    d506:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d50b:	c9                   	leave
    d50c:	c3                   	ret

000000000000d50d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d50d:	55                   	push   %rbp
    d50e:	48 89 e5             	mov    %rsp,%rbp
    d511:	48 83 ec 20          	sub    $0x20,%rsp
    d515:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d519:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d51d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d521:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d525:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d529:	48 89 d6             	mov    %rdx,%rsi
    d52c:	48 89 c7             	mov    %rax,%rdi
    d52f:	e8 dc 07 00 00       	call   dd10 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    d534:	c9                   	leave
    d535:	c3                   	ret

000000000000d536 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    d536:	55                   	push   %rbp
    d537:	48 89 e5             	mov    %rsp,%rbp
    d53a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d53e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d542:	90                   	nop
    d543:	5d                   	pop    %rbp
    d544:	c3                   	ret
    d545:	90                   	nop

000000000000d546 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d546:	55                   	push   %rbp
    d547:	48 89 e5             	mov    %rsp,%rbp
    d54a:	48 83 ec 20          	sub    $0x20,%rsp
    d54e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d552:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d556:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d55a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d55e:	48 89 d0             	mov    %rdx,%rax
    d561:	48 c1 e0 06          	shl    $0x6,%rax
    d565:	48 01 d0             	add    %rdx,%rax
    d568:	48 c1 e0 02          	shl    $0x2,%rax
    d56c:	48 89 c2             	mov    %rax,%rdx
    d56f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d573:	48 89 d6             	mov    %rdx,%rsi
    d576:	48 89 c7             	mov    %rax,%rdi
    d579:	e8 c2 7f ff ff       	call   5540 <_ZdlPvm@plt>
      }
    d57e:	c9                   	leave
    d57f:	c3                   	ret

000000000000d580 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d580:	55                   	push   %rbp
    d581:	48 89 e5             	mov    %rsp,%rbp
    d584:	48 83 ec 10          	sub    $0x10,%rsp
    d588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d58c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d590:	48 89 c7             	mov    %rax,%rdi
    d593:	e8 d8 07 00 00       	call   dd70 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    d598:	c9                   	leave
    d599:	c3                   	ret

000000000000d59a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d59a:	55                   	push   %rbp
    d59b:	48 89 e5             	mov    %rsp,%rbp
    d59e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d5a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d5ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5b1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d5b8:	00 
    d5b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5bd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d5c4:	00 
	{ }
    d5c5:	90                   	nop
    d5c6:	5d                   	pop    %rbp
    d5c7:	c3                   	ret

000000000000d5c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d5c8:	55                   	push   %rbp
    d5c9:	48 89 e5             	mov    %rsp,%rbp
    d5cc:	48 83 ec 10          	sub    $0x10,%rsp
    d5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d5d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d5dd:	74 15                	je     d5f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    d5df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d5e7:	48 89 d6             	mov    %rdx,%rsi
    d5ea:	48 89 c7             	mov    %rax,%rdi
    d5ed:	e8 98 07 00 00       	call   dd8a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    d5f2:	eb 05                	jmp    d5f9 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    d5f4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d5f9:	c9                   	leave
    d5fa:	c3                   	ret

000000000000d5fb <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d5fb:	55                   	push   %rbp
    d5fc:	48 89 e5             	mov    %rsp,%rbp
    d5ff:	48 83 ec 20          	sub    $0x20,%rsp
    d603:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d607:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d60b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d60f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d617:	48 89 d6             	mov    %rdx,%rsi
    d61a:	48 89 c7             	mov    %rax,%rdi
    d61d:	e8 92 07 00 00       	call   ddb4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    d622:	c9                   	leave
    d623:	c3                   	ret

000000000000d624 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d624:	55                   	push   %rbp
    d625:	48 89 e5             	mov    %rsp,%rbp
    d628:	48 83 ec 20          	sub    $0x20,%rsp
    d62c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d630:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d634:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d638:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d63c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d643:	00 
    d644:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d648:	48 89 d6             	mov    %rdx,%rsi
    d64b:	48 89 c7             	mov    %rax,%rdi
    d64e:	e8 ed 7e ff ff       	call   5540 <_ZdlPvm@plt>
      }
    d653:	c9                   	leave
    d654:	c3                   	ret

000000000000d655 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d655:	55                   	push   %rbp
    d656:	48 89 e5             	mov    %rsp,%rbp
    d659:	48 83 ec 10          	sub    $0x10,%rsp
    d65d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d665:	48 89 c7             	mov    %rax,%rdi
    d668:	e8 a5 07 00 00       	call   de12 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    d66d:	c9                   	leave
    d66e:	c3                   	ret
    d66f:	90                   	nop

000000000000d670 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d670:	55                   	push   %rbp
    d671:	48 89 e5             	mov    %rsp,%rbp
    d674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d67c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d687:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d68e:	00 
    d68f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d693:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d69a:	00 
	{ }
    d69b:	90                   	nop
    d69c:	5d                   	pop    %rbp
    d69d:	c3                   	ret

000000000000d69e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d69e:	55                   	push   %rbp
    d69f:	48 89 e5             	mov    %rsp,%rbp
    d6a2:	48 83 ec 10          	sub    $0x10,%rsp
    d6a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d6ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d6b3:	74 15                	je     d6ca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    d6b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d6bd:	48 89 d6             	mov    %rdx,%rsi
    d6c0:	48 89 c7             	mov    %rax,%rdi
    d6c3:	e8 64 07 00 00       	call   de2c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    d6c8:	eb 05                	jmp    d6cf <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    d6ca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d6cf:	c9                   	leave
    d6d0:	c3                   	ret

000000000000d6d1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d6d1:	55                   	push   %rbp
    d6d2:	48 89 e5             	mov    %rsp,%rbp
    d6d5:	48 83 ec 20          	sub    $0x20,%rsp
    d6d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d6dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d6e1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d6e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d6e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6ed:	48 89 d6             	mov    %rdx,%rsi
    d6f0:	48 89 c7             	mov    %rax,%rdi
    d6f3:	e8 5e 07 00 00       	call   de56 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    d6f8:	c9                   	leave
    d6f9:	c3                   	ret

000000000000d6fa <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    d6fa:	55                   	push   %rbp
    d6fb:	48 89 e5             	mov    %rsp,%rbp
    d6fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d702:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d706:	90                   	nop
    d707:	5d                   	pop    %rbp
    d708:	c3                   	ret
    d709:	90                   	nop

000000000000d70a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d70a:	55                   	push   %rbp
    d70b:	48 89 e5             	mov    %rsp,%rbp
    d70e:	48 83 ec 20          	sub    $0x20,%rsp
    d712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d71a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d71e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d722:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d729:	00 
    d72a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d72e:	48 89 d6             	mov    %rdx,%rsi
    d731:	48 89 c7             	mov    %rax,%rdi
    d734:	e8 07 7e ff ff       	call   5540 <_ZdlPvm@plt>
      }
    d739:	c9                   	leave
    d73a:	c3                   	ret

000000000000d73b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d73b:	55                   	push   %rbp
    d73c:	48 89 e5             	mov    %rsp,%rbp
    d73f:	48 83 ec 10          	sub    $0x10,%rsp
    d743:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d74b:	48 89 c7             	mov    %rax,%rdi
    d74e:	e8 61 07 00 00       	call   deb4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    d753:	c9                   	leave
    d754:	c3                   	ret
    d755:	90                   	nop

000000000000d756 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d756:	55                   	push   %rbp
    d757:	48 89 e5             	mov    %rsp,%rbp
    d75a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d75e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d762:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d769:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d76d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d774:	00 
    d775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d779:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d780:	00 
	{ }
    d781:	90                   	nop
    d782:	5d                   	pop    %rbp
    d783:	c3                   	ret

000000000000d784 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d784:	55                   	push   %rbp
    d785:	48 89 e5             	mov    %rsp,%rbp
    d788:	48 83 ec 10          	sub    $0x10,%rsp
    d78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d790:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d794:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d799:	74 15                	je     d7b0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    d79b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d79f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d7a3:	48 89 d6             	mov    %rdx,%rsi
    d7a6:	48 89 c7             	mov    %rax,%rdi
    d7a9:	e8 20 07 00 00       	call   dece <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    d7ae:	eb 05                	jmp    d7b5 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    d7b0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d7b5:	c9                   	leave
    d7b6:	c3                   	ret

000000000000d7b7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d7b7:	55                   	push   %rbp
    d7b8:	48 89 e5             	mov    %rsp,%rbp
    d7bb:	48 83 ec 20          	sub    $0x20,%rsp
    d7bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d7c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d7c7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d7cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d7cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7d3:	48 89 d6             	mov    %rdx,%rsi
    d7d6:	48 89 c7             	mov    %rax,%rdi
    d7d9:	e8 1a 07 00 00       	call   def8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    d7de:	c9                   	leave
    d7df:	c3                   	ret

000000000000d7e0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    d7e0:	55                   	push   %rbp
    d7e1:	48 89 e5             	mov    %rsp,%rbp
    d7e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d7ec:	90                   	nop
    d7ed:	5d                   	pop    %rbp
    d7ee:	c3                   	ret
    d7ef:	90                   	nop

000000000000d7f0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d7f0:	55                   	push   %rbp
    d7f1:	48 89 e5             	mov    %rsp,%rbp
    d7f4:	48 83 ec 20          	sub    $0x20,%rsp
    d7f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d800:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d804:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d808:	48 89 d0             	mov    %rdx,%rax
    d80b:	48 01 c0             	add    %rax,%rax
    d80e:	48 01 d0             	add    %rdx,%rax
    d811:	48 c1 e0 03          	shl    $0x3,%rax
    d815:	48 89 c2             	mov    %rax,%rdx
    d818:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d81c:	48 89 d6             	mov    %rdx,%rsi
    d81f:	48 89 c7             	mov    %rax,%rdi
    d822:	e8 19 7d ff ff       	call   5540 <_ZdlPvm@plt>
      }
    d827:	c9                   	leave
    d828:	c3                   	ret

000000000000d829 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d829:	55                   	push   %rbp
    d82a:	48 89 e5             	mov    %rsp,%rbp
    d82d:	48 83 ec 10          	sub    $0x10,%rsp
    d831:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d839:	48 89 c7             	mov    %rax,%rdi
    d83c:	e8 15 07 00 00       	call   df56 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    d841:	c9                   	leave
    d842:	c3                   	ret
    d843:	90                   	nop

000000000000d844 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d844:	55                   	push   %rbp
    d845:	48 89 e5             	mov    %rsp,%rbp
    d848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d84c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d850:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d85b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d862:	00 
    d863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d867:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d86e:	00 
	{ }
    d86f:	90                   	nop
    d870:	5d                   	pop    %rbp
    d871:	c3                   	ret

000000000000d872 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d872:	55                   	push   %rbp
    d873:	48 89 e5             	mov    %rsp,%rbp
    d876:	48 83 ec 10          	sub    $0x10,%rsp
    d87a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d87e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d882:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d887:	74 15                	je     d89e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    d889:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d88d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d891:	48 89 d6             	mov    %rdx,%rsi
    d894:	48 89 c7             	mov    %rax,%rdi
    d897:	e8 d4 06 00 00       	call   df70 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    d89c:	eb 05                	jmp    d8a3 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    d89e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d8a3:	c9                   	leave
    d8a4:	c3                   	ret

000000000000d8a5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d8a5:	55                   	push   %rbp
    d8a6:	48 89 e5             	mov    %rsp,%rbp
    d8a9:	48 83 ec 20          	sub    $0x20,%rsp
    d8ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d8b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d8b5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d8b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d8bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8c1:	48 89 d6             	mov    %rdx,%rsi
    d8c4:	48 89 c7             	mov    %rax,%rdi
    d8c7:	e8 ce 06 00 00       	call   df9a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    d8cc:	c9                   	leave
    d8cd:	c3                   	ret

000000000000d8ce <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    d8ce:	55                   	push   %rbp
    d8cf:	48 89 e5             	mov    %rsp,%rbp
    d8d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d8da:	90                   	nop
    d8db:	5d                   	pop    %rbp
    d8dc:	c3                   	ret

000000000000d8dd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d8dd:	55                   	push   %rbp
    d8de:	48 89 e5             	mov    %rsp,%rbp
    d8e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d8e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8e9:	5d                   	pop    %rbp
    d8ea:	c3                   	ret

000000000000d8eb <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d8eb:	55                   	push   %rbp
    d8ec:	48 89 e5             	mov    %rsp,%rbp
    d8ef:	53                   	push   %rbx
    d8f0:	48 83 ec 18          	sub    $0x18,%rsp
    d8f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d8f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d8fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d900:	48 89 c6             	mov    %rax,%rsi
    d903:	bf 18 00 00 00       	mov    $0x18,%edi
    d908:	e8 5b 9f ff ff       	call   7868 <_ZnwmPv>
    d90d:	48 89 c3             	mov    %rax,%rbx
    d910:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d914:	48 89 c7             	mov    %rax,%rdi
    d917:	e8 48 e8 ff ff       	call   c164 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    d91c:	48 89 c1             	mov    %rax,%rcx
    d91f:	48 8b 01             	mov    (%rcx),%rax
    d922:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    d926:	48 89 03             	mov    %rax,(%rbx)
    d929:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    d92d:	48 8b 41 10          	mov    0x10(%rcx),%rax
    d931:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    d935:	90                   	nop
    d936:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d93a:	c9                   	leave
    d93b:	c3                   	ret

000000000000d93c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d93c:	55                   	push   %rbp
    d93d:	48 89 e5             	mov    %rsp,%rbp
    d940:	48 83 ec 20          	sub    $0x20,%rsp
    d944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d94c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d950:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d954:	48 89 d0             	mov    %rdx,%rax
    d957:	48 c1 e0 03          	shl    $0x3,%rax
    d95b:	48 29 d0             	sub    %rdx,%rax
    d95e:	48 c1 e0 02          	shl    $0x2,%rax
    d962:	48 89 c2             	mov    %rax,%rdx
    d965:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d969:	48 89 d6             	mov    %rdx,%rsi
    d96c:	48 89 c7             	mov    %rax,%rdi
    d96f:	e8 cc 7b ff ff       	call   5540 <_ZdlPvm@plt>
      }
    d974:	c9                   	leave
    d975:	c3                   	ret

000000000000d976 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d976:	55                   	push   %rbp
    d977:	48 89 e5             	mov    %rsp,%rbp
    d97a:	48 83 ec 10          	sub    $0x10,%rsp
    d97e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d986:	48 89 c7             	mov    %rax,%rdi
    d989:	e8 52 06 00 00       	call   dfe0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    d98e:	c9                   	leave
    d98f:	c3                   	ret

000000000000d990 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d990:	55                   	push   %rbp
    d991:	48 89 e5             	mov    %rsp,%rbp
    d994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d99c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9a7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d9ae:	00 
    d9af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d9ba:	00 
	{ }
    d9bb:	90                   	nop
    d9bc:	5d                   	pop    %rbp
    d9bd:	c3                   	ret

000000000000d9be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d9be:	55                   	push   %rbp
    d9bf:	48 89 e5             	mov    %rsp,%rbp
    d9c2:	48 83 ec 10          	sub    $0x10,%rsp
    d9c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d9ce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d9d3:	74 15                	je     d9ea <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    d9d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9d9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9dd:	48 89 d6             	mov    %rdx,%rsi
    d9e0:	48 89 c7             	mov    %rax,%rdi
    d9e3:	e8 12 06 00 00       	call   dffa <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    d9e8:	eb 05                	jmp    d9ef <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    d9ea:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d9ef:	c9                   	leave
    d9f0:	c3                   	ret

000000000000d9f1 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d9f1:	55                   	push   %rbp
    d9f2:	48 89 e5             	mov    %rsp,%rbp
    d9f5:	48 83 ec 20          	sub    $0x20,%rsp
    d9f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d9fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    da01:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    da05:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    da09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da0d:	48 89 d6             	mov    %rdx,%rsi
    da10:	48 89 c7             	mov    %rax,%rdi
    da13:	e8 0c 06 00 00       	call   e024 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    da18:	c9                   	leave
    da19:	c3                   	ret

000000000000da1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    da1a:	55                   	push   %rbp
    da1b:	48 89 e5             	mov    %rsp,%rbp
    da1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da26:	90                   	nop
    da27:	5d                   	pop    %rbp
    da28:	c3                   	ret
    da29:	90                   	nop

000000000000da2a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    da2a:	55                   	push   %rbp
    da2b:	48 89 e5             	mov    %rsp,%rbp
    da2e:	48 83 ec 20          	sub    $0x20,%rsp
    da32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    da3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da42:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    da49:	00 
    da4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    da4e:	48 89 d6             	mov    %rdx,%rsi
    da51:	48 89 c7             	mov    %rax,%rdi
    da54:	e8 e7 7a ff ff       	call   5540 <_ZdlPvm@plt>
      }
    da59:	c9                   	leave
    da5a:	c3                   	ret

000000000000da5b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    da5b:	55                   	push   %rbp
    da5c:	48 89 e5             	mov    %rsp,%rbp
    da5f:	48 83 ec 10          	sub    $0x10,%rsp
    da63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    da67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da6b:	48 89 c7             	mov    %rax,%rdi
    da6e:	e8 0f 06 00 00       	call   e082 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    da73:	c9                   	leave
    da74:	c3                   	ret
    da75:	90                   	nop

000000000000da76 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    da76:	55                   	push   %rbp
    da77:	48 89 e5             	mov    %rsp,%rbp
    da7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    da7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da82:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    da89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    da94:	00 
    da95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da99:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    daa0:	00 
	{ }
    daa1:	90                   	nop
    daa2:	5d                   	pop    %rbp
    daa3:	c3                   	ret

000000000000daa4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    daa4:	55                   	push   %rbp
    daa5:	48 89 e5             	mov    %rsp,%rbp
    daa8:	48 83 ec 10          	sub    $0x10,%rsp
    daac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dab0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    dab4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dab9:	74 15                	je     dad0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    dabb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dabf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dac3:	48 89 d6             	mov    %rdx,%rsi
    dac6:	48 89 c7             	mov    %rax,%rdi
    dac9:	e8 ce 05 00 00       	call   e09c <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    dace:	eb 05                	jmp    dad5 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    dad0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dad5:	c9                   	leave
    dad6:	c3                   	ret

000000000000dad7 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    dad7:	55                   	push   %rbp
    dad8:	48 89 e5             	mov    %rsp,%rbp
    dadb:	48 83 ec 20          	sub    $0x20,%rsp
    dadf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dae3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    dae7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    daeb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    daef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daf3:	48 89 d6             	mov    %rdx,%rsi
    daf6:	48 89 c7             	mov    %rax,%rdi
    daf9:	e8 c8 05 00 00       	call   e0c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    dafe:	c9                   	leave
    daff:	c3                   	ret

000000000000db00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    db00:	55                   	push   %rbp
    db01:	48 89 e5             	mov    %rsp,%rbp
    db04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db0c:	90                   	nop
    db0d:	5d                   	pop    %rbp
    db0e:	c3                   	ret
    db0f:	90                   	nop

000000000000db10 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    db10:	55                   	push   %rbp
    db11:	48 89 e5             	mov    %rsp,%rbp
    db14:	48 83 ec 20          	sub    $0x20,%rsp
    db18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    db24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db28:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    db2f:	00 
    db30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db34:	48 89 d6             	mov    %rdx,%rsi
    db37:	48 89 c7             	mov    %rax,%rdi
    db3a:	e8 01 7a ff ff       	call   5540 <_ZdlPvm@plt>
      }
    db3f:	c9                   	leave
    db40:	c3                   	ret

000000000000db41 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    db41:	55                   	push   %rbp
    db42:	48 89 e5             	mov    %rsp,%rbp
    db45:	48 83 ec 10          	sub    $0x10,%rsp
    db49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    db4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db51:	48 89 c7             	mov    %rax,%rdi
    db54:	e8 cb 05 00 00       	call   e124 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    db59:	c9                   	leave
    db5a:	c3                   	ret
    db5b:	90                   	nop

000000000000db5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    db5c:	55                   	push   %rbp
    db5d:	48 89 e5             	mov    %rsp,%rbp
    db60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    db64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    db6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db73:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    db7a:	00 
    db7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db7f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    db86:	00 
	{ }
    db87:	90                   	nop
    db88:	5d                   	pop    %rbp
    db89:	c3                   	ret

000000000000db8a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    db8a:	55                   	push   %rbp
    db8b:	48 89 e5             	mov    %rsp,%rbp
    db8e:	48 83 ec 10          	sub    $0x10,%rsp
    db92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    db9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    db9f:	74 15                	je     dbb6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    dba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dba9:	48 89 d6             	mov    %rdx,%rsi
    dbac:	48 89 c7             	mov    %rax,%rdi
    dbaf:	e8 8a 05 00 00       	call   e13e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    dbb4:	eb 05                	jmp    dbbb <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    dbb6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dbbb:	c9                   	leave
    dbbc:	c3                   	ret

000000000000dbbd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    dbbd:	55                   	push   %rbp
    dbbe:	48 89 e5             	mov    %rsp,%rbp
    dbc1:	48 83 ec 20          	sub    $0x20,%rsp
    dbc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dbc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    dbcd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    dbd1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dbd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbd9:	48 89 d6             	mov    %rdx,%rsi
    dbdc:	48 89 c7             	mov    %rax,%rdi
    dbdf:	e8 84 05 00 00       	call   e168 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    dbe4:	c9                   	leave
    dbe5:	c3                   	ret

000000000000dbe6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    dbe6:	55                   	push   %rbp
    dbe7:	48 89 e5             	mov    %rsp,%rbp
    dbea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dbf2:	90                   	nop
    dbf3:	5d                   	pop    %rbp
    dbf4:	c3                   	ret
    dbf5:	90                   	nop

000000000000dbf6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    dbf6:	55                   	push   %rbp
    dbf7:	48 89 e5             	mov    %rsp,%rbp
    dbfa:	48 83 ec 20          	sub    $0x20,%rsp
    dbfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    dc0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc0e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    dc15:	00 
    dc16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc1a:	48 89 d6             	mov    %rdx,%rsi
    dc1d:	48 89 c7             	mov    %rax,%rdi
    dc20:	e8 1b 79 ff ff       	call   5540 <_ZdlPvm@plt>
      }
    dc25:	c9                   	leave
    dc26:	c3                   	ret
    dc27:	90                   	nop

000000000000dc28 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    dc28:	55                   	push   %rbp
    dc29:	48 89 e5             	mov    %rsp,%rbp
    dc2c:	48 83 ec 10          	sub    $0x10,%rsp
    dc30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    dc34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc38:	48 89 c7             	mov    %rax,%rdi
    dc3b:	e8 86 05 00 00       	call   e1c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    dc40:	c9                   	leave
    dc41:	c3                   	ret

000000000000dc42 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    dc42:	55                   	push   %rbp
    dc43:	48 89 e5             	mov    %rsp,%rbp
    dc46:	48 83 ec 10          	sub    $0x10,%rsp
    dc4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dc52:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc5a:	ba 00 00 00 00       	mov    $0x0,%edx
    dc5f:	48 89 ce             	mov    %rcx,%rsi
    dc62:	48 89 c7             	mov    %rax,%rdi
    dc65:	e8 70 05 00 00       	call   e1da <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    dc6a:	c9                   	leave
    dc6b:	c3                   	ret

000000000000dc6c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    dc6c:	55                   	push   %rbp
    dc6d:	48 89 e5             	mov    %rsp,%rbp
    dc70:	48 83 ec 20          	sub    $0x20,%rsp
    dc74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    dc7c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    dc81:	74 43                	je     dcc6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    dc83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc87:	48 89 c7             	mov    %rax,%rdi
    dc8a:	e8 b6 05 00 00       	call   e245 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    dc8f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    dc93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc97:	48 89 c7             	mov    %rax,%rdi
    dc9a:	e8 b4 05 00 00       	call   e253 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    dc9f:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    dca6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    dca7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dcab:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    dcaf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dcb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dcb7:	48 89 ce             	mov    %rcx,%rsi
    dcba:	48 89 c7             	mov    %rax,%rdi
    dcbd:	e8 eb 05 00 00       	call   e2ad <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    dcc2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    dcc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    dcca:	c9                   	leave
    dccb:	c3                   	ret

000000000000dccc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    dccc:	55                   	push   %rbp
    dccd:	48 89 e5             	mov    %rsp,%rbp
    dcd0:	48 83 ec 10          	sub    $0x10,%rsp
    dcd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    dcd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcdc:	48 89 c7             	mov    %rax,%rdi
    dcdf:	e8 0e 06 00 00       	call   e2f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    dce4:	c9                   	leave
    dce5:	c3                   	ret

000000000000dce6 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    dce6:	55                   	push   %rbp
    dce7:	48 89 e5             	mov    %rsp,%rbp
    dcea:	48 83 ec 10          	sub    $0x10,%rsp
    dcee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dcf6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dcfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcfe:	ba 00 00 00 00       	mov    $0x0,%edx
    dd03:	48 89 ce             	mov    %rcx,%rsi
    dd06:	48 89 c7             	mov    %rax,%rdi
    dd09:	e8 f8 05 00 00       	call   e306 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    dd0e:	c9                   	leave
    dd0f:	c3                   	ret

000000000000dd10 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    dd10:	55                   	push   %rbp
    dd11:	48 89 e5             	mov    %rsp,%rbp
    dd14:	48 83 ec 20          	sub    $0x20,%rsp
    dd18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dd1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    dd20:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    dd25:	74 43                	je     dd6a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    dd27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd2b:	48 89 c7             	mov    %rax,%rdi
    dd2e:	e8 3e 06 00 00       	call   e371 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    dd33:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    dd37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd3b:	48 89 c7             	mov    %rax,%rdi
    dd3e:	e8 3c 06 00 00       	call   e37f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    dd43:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    dd4a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    dd4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd4f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    dd53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd5b:	48 89 ce             	mov    %rcx,%rsi
    dd5e:	48 89 c7             	mov    %rax,%rdi
    dd61:	e8 73 06 00 00       	call   e3d9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    dd66:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    dd6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    dd6e:	c9                   	leave
    dd6f:	c3                   	ret

000000000000dd70 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    dd70:	55                   	push   %rbp
    dd71:	48 89 e5             	mov    %rsp,%rbp
    dd74:	48 83 ec 10          	sub    $0x10,%rsp
    dd78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    dd7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd80:	48 89 c7             	mov    %rax,%rdi
    dd83:	e8 96 06 00 00       	call   e41e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    dd88:	c9                   	leave
    dd89:	c3                   	ret

000000000000dd8a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    dd8a:	55                   	push   %rbp
    dd8b:	48 89 e5             	mov    %rsp,%rbp
    dd8e:	48 83 ec 10          	sub    $0x10,%rsp
    dd92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dd9a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dda2:	ba 00 00 00 00       	mov    $0x0,%edx
    dda7:	48 89 ce             	mov    %rcx,%rsi
    ddaa:	48 89 c7             	mov    %rax,%rdi
    ddad:	e8 80 06 00 00       	call   e432 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    ddb2:	c9                   	leave
    ddb3:	c3                   	ret

000000000000ddb4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ddb4:	55                   	push   %rbp
    ddb5:	48 89 e5             	mov    %rsp,%rbp
    ddb8:	48 83 ec 20          	sub    $0x20,%rsp
    ddbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ddc0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ddc4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ddc9:	74 40                	je     de0b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    ddcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddcf:	48 89 c7             	mov    %rax,%rdi
    ddd2:	e8 bc 06 00 00       	call   e493 <_ZSt11__addressofIPKcEPT_RS2_>
    ddd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    dddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dddf:	48 89 c7             	mov    %rax,%rdi
    dde2:	e8 ba 06 00 00       	call   e4a1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    dde7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    ddec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ddf0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    ddf4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ddf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddfc:	48 89 ce             	mov    %rcx,%rsi
    ddff:	48 89 c7             	mov    %rax,%rdi
    de02:	e8 c1 06 00 00       	call   e4c8 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    de07:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    de0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    de0f:	c9                   	leave
    de10:	c3                   	ret
    de11:	90                   	nop

000000000000de12 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    de12:	55                   	push   %rbp
    de13:	48 89 e5             	mov    %rsp,%rbp
    de16:	48 83 ec 10          	sub    $0x10,%rsp
    de1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    de1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de22:	48 89 c7             	mov    %rax,%rdi
    de25:	e8 e2 06 00 00       	call   e50c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    de2a:	c9                   	leave
    de2b:	c3                   	ret

000000000000de2c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    de2c:	55                   	push   %rbp
    de2d:	48 89 e5             	mov    %rsp,%rbp
    de30:	48 83 ec 10          	sub    $0x10,%rsp
    de34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    de3c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    de40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de44:	ba 00 00 00 00       	mov    $0x0,%edx
    de49:	48 89 ce             	mov    %rcx,%rsi
    de4c:	48 89 c7             	mov    %rax,%rdi
    de4f:	e8 cc 06 00 00       	call   e520 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    de54:	c9                   	leave
    de55:	c3                   	ret

000000000000de56 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    de56:	55                   	push   %rbp
    de57:	48 89 e5             	mov    %rsp,%rbp
    de5a:	48 83 ec 20          	sub    $0x20,%rsp
    de5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    de66:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    de6b:	74 40                	je     dead <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    de6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de71:	48 89 c7             	mov    %rax,%rdi
    de74:	e8 08 07 00 00       	call   e581 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    de79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    de7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de81:	48 89 c7             	mov    %rax,%rdi
    de84:	e8 06 07 00 00       	call   e58f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    de89:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    de8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de92:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    de96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de9e:	48 89 ce             	mov    %rcx,%rsi
    dea1:	48 89 c7             	mov    %rax,%rdi
    dea4:	e8 0d 07 00 00       	call   e5b6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    dea9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    dead:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    deb1:	c9                   	leave
    deb2:	c3                   	ret
    deb3:	90                   	nop

000000000000deb4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    deb4:	55                   	push   %rbp
    deb5:	48 89 e5             	mov    %rsp,%rbp
    deb8:	48 83 ec 10          	sub    $0x10,%rsp
    debc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    dec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dec4:	48 89 c7             	mov    %rax,%rdi
    dec7:	e8 2e 07 00 00       	call   e5fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    decc:	c9                   	leave
    decd:	c3                   	ret

000000000000dece <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    dece:	55                   	push   %rbp
    decf:	48 89 e5             	mov    %rsp,%rbp
    ded2:	48 83 ec 10          	sub    $0x10,%rsp
    ded6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dede:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dee6:	ba 00 00 00 00       	mov    $0x0,%edx
    deeb:	48 89 ce             	mov    %rcx,%rsi
    deee:	48 89 c7             	mov    %rax,%rdi
    def1:	e8 18 07 00 00       	call   e60e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    def6:	c9                   	leave
    def7:	c3                   	ret

000000000000def8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    def8:	55                   	push   %rbp
    def9:	48 89 e5             	mov    %rsp,%rbp
    defc:	48 83 ec 20          	sub    $0x20,%rsp
    df00:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df04:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    df08:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    df0d:	74 40                	je     df4f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    df0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df13:	48 89 c7             	mov    %rax,%rdi
    df16:	e8 c2 f9 ff ff       	call   d8dd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    df1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    df1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df23:	48 89 c7             	mov    %rax,%rdi
    df26:	e8 4d 07 00 00       	call   e678 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    df2b:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    df30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    df34:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    df38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    df3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df40:	48 89 ce             	mov    %rcx,%rsi
    df43:	48 89 c7             	mov    %rax,%rdi
    df46:	e8 76 07 00 00       	call   e6c1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    df4b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    df4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    df53:	c9                   	leave
    df54:	c3                   	ret
    df55:	90                   	nop

000000000000df56 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    df56:	55                   	push   %rbp
    df57:	48 89 e5             	mov    %rsp,%rbp
    df5a:	48 83 ec 10          	sub    $0x10,%rsp
    df5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    df62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df66:	48 89 c7             	mov    %rax,%rdi
    df69:	e8 98 07 00 00       	call   e706 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    df6e:	c9                   	leave
    df6f:	c3                   	ret

000000000000df70 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    df70:	55                   	push   %rbp
    df71:	48 89 e5             	mov    %rsp,%rbp
    df74:	48 83 ec 10          	sub    $0x10,%rsp
    df78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    df80:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    df84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df88:	ba 00 00 00 00       	mov    $0x0,%edx
    df8d:	48 89 ce             	mov    %rcx,%rsi
    df90:	48 89 c7             	mov    %rax,%rdi
    df93:	e8 82 07 00 00       	call   e71a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    df98:	c9                   	leave
    df99:	c3                   	ret

000000000000df9a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    df9a:	55                   	push   %rbp
    df9b:	48 89 e5             	mov    %rsp,%rbp
    df9e:	48 83 ec 20          	sub    $0x20,%rsp
    dfa2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dfa6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    dfaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    dfb2:	eb 1e                	jmp    dfd2 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    dfb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfb8:	48 89 c7             	mov    %rax,%rdi
    dfbb:	e8 c5 07 00 00       	call   e785 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    dfc0:	48 89 c7             	mov    %rax,%rdi
    dfc3:	e8 cb 07 00 00       	call   e793 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    dfc8:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    dfcd:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    dfd2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    dfd7:	75 db                	jne    dfb4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    dfd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    dfdd:	c9                   	leave
    dfde:	c3                   	ret
    dfdf:	90                   	nop

000000000000dfe0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    dfe0:	55                   	push   %rbp
    dfe1:	48 89 e5             	mov    %rsp,%rbp
    dfe4:	48 83 ec 10          	sub    $0x10,%rsp
    dfe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    dfec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dff0:	48 89 c7             	mov    %rax,%rdi
    dff3:	e8 c4 07 00 00       	call   e7bc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    dff8:	c9                   	leave
    dff9:	c3                   	ret

000000000000dffa <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    dffa:	55                   	push   %rbp
    dffb:	48 89 e5             	mov    %rsp,%rbp
    dffe:	48 83 ec 10          	sub    $0x10,%rsp
    e002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e00a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e012:	ba 00 00 00 00       	mov    $0x0,%edx
    e017:	48 89 ce             	mov    %rcx,%rsi
    e01a:	48 89 c7             	mov    %rax,%rdi
    e01d:	e8 ae 07 00 00       	call   e7d0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    e022:	c9                   	leave
    e023:	c3                   	ret

000000000000e024 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e024:	55                   	push   %rbp
    e025:	48 89 e5             	mov    %rsp,%rbp
    e028:	48 83 ec 20          	sub    $0x20,%rsp
    e02c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e030:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e034:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e039:	74 40                	je     e07b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e03b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e03f:	48 89 c7             	mov    %rax,%rdi
    e042:	e8 ea 07 00 00       	call   e831 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    e047:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e04f:	48 89 c7             	mov    %rax,%rdi
    e052:	e8 e8 07 00 00       	call   e83f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    e057:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e05c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e060:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e064:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e06c:	48 89 ce             	mov    %rcx,%rsi
    e06f:	48 89 c7             	mov    %rax,%rdi
    e072:	e8 f5 07 00 00       	call   e86c <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    e077:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e07b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e07f:	c9                   	leave
    e080:	c3                   	ret
    e081:	90                   	nop

000000000000e082 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e082:	55                   	push   %rbp
    e083:	48 89 e5             	mov    %rsp,%rbp
    e086:	48 83 ec 10          	sub    $0x10,%rsp
    e08a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e08e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e092:	48 89 c7             	mov    %rax,%rdi
    e095:	e8 16 08 00 00       	call   e8b0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    e09a:	c9                   	leave
    e09b:	c3                   	ret

000000000000e09c <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e09c:	55                   	push   %rbp
    e09d:	48 89 e5             	mov    %rsp,%rbp
    e0a0:	48 83 ec 10          	sub    $0x10,%rsp
    e0a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e0a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e0ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e0b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0b4:	ba 00 00 00 00       	mov    $0x0,%edx
    e0b9:	48 89 ce             	mov    %rcx,%rsi
    e0bc:	48 89 c7             	mov    %rax,%rdi
    e0bf:	e8 00 08 00 00       	call   e8c4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    e0c4:	c9                   	leave
    e0c5:	c3                   	ret

000000000000e0c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e0c6:	55                   	push   %rbp
    e0c7:	48 89 e5             	mov    %rsp,%rbp
    e0ca:	48 83 ec 20          	sub    $0x20,%rsp
    e0ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e0d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e0d6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e0db:	74 40                	je     e11d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e0dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0e1:	48 89 c7             	mov    %rax,%rdi
    e0e4:	e8 3c 08 00 00       	call   e925 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    e0e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e0ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0f1:	48 89 c7             	mov    %rax,%rdi
    e0f4:	e8 3a 08 00 00       	call   e933 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    e0f9:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e0fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e102:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e106:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e10e:	48 89 ce             	mov    %rcx,%rsi
    e111:	48 89 c7             	mov    %rax,%rdi
    e114:	e8 40 08 00 00       	call   e959 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    e119:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e11d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e121:	c9                   	leave
    e122:	c3                   	ret
    e123:	90                   	nop

000000000000e124 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e124:	55                   	push   %rbp
    e125:	48 89 e5             	mov    %rsp,%rbp
    e128:	48 83 ec 10          	sub    $0x10,%rsp
    e12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e134:	48 89 c7             	mov    %rax,%rdi
    e137:	e8 62 08 00 00       	call   e99e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    e13c:	c9                   	leave
    e13d:	c3                   	ret

000000000000e13e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    e13e:	55                   	push   %rbp
    e13f:	48 89 e5             	mov    %rsp,%rbp
    e142:	48 83 ec 10          	sub    $0x10,%rsp
    e146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e14a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e14e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e156:	ba 00 00 00 00       	mov    $0x0,%edx
    e15b:	48 89 ce             	mov    %rcx,%rsi
    e15e:	48 89 c7             	mov    %rax,%rdi
    e161:	e8 4c 08 00 00       	call   e9b2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    e166:	c9                   	leave
    e167:	c3                   	ret

000000000000e168 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e168:	55                   	push   %rbp
    e169:	48 89 e5             	mov    %rsp,%rbp
    e16c:	48 83 ec 20          	sub    $0x20,%rsp
    e170:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e174:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e178:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e17d:	74 40                	je     e1bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    e17f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e183:	48 89 c7             	mov    %rax,%rdi
    e186:	e8 88 08 00 00       	call   ea13 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    e18b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e18f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e193:	48 89 c7             	mov    %rax,%rdi
    e196:	e8 86 08 00 00       	call   ea21 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    e19b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e1a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e1a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e1a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e1ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1b0:	48 89 ce             	mov    %rcx,%rsi
    e1b3:	48 89 c7             	mov    %rax,%rdi
    e1b6:	e8 8d 08 00 00       	call   ea48 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    e1bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e1bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e1c3:	c9                   	leave
    e1c4:	c3                   	ret
    e1c5:	90                   	nop

000000000000e1c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e1c6:	55                   	push   %rbp
    e1c7:	48 89 e5             	mov    %rsp,%rbp
    e1ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e1ce:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    e1d5:	03 3f 00 
      }
    e1d8:	5d                   	pop    %rbp
    e1d9:	c3                   	ret

000000000000e1da <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e1da:	55                   	push   %rbp
    e1db:	48 89 e5             	mov    %rsp,%rbp
    e1de:	48 83 ec 20          	sub    $0x20,%rsp
    e1e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e1e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e1ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e1ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1f2:	48 89 c7             	mov    %rax,%rdi
    e1f5:	e8 cc ff ff ff       	call   e1c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    e1fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e1fe:	0f 92 c0             	setb   %al
    e201:	0f b6 c0             	movzbl %al,%eax
    e204:	48 85 c0             	test   %rax,%rax
    e207:	0f 95 c0             	setne  %al
    e20a:	84 c0                	test   %al,%al
    e20c:	74 1a                	je     e228 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e20e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    e215:	07 7e 00 
    e218:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e21c:	73 05                	jae    e223 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e21e:	e8 7d 71 ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e223:	e8 28 6f ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e228:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e22c:	48 89 d0             	mov    %rdx,%rax
    e22f:	48 c1 e0 06          	shl    $0x6,%rax
    e233:	48 01 d0             	add    %rdx,%rax
    e236:	48 c1 e0 03          	shl    $0x3,%rax
    e23a:	48 89 c7             	mov    %rax,%rdi
    e23d:	e8 de 72 ff ff       	call   5520 <_Znwm@plt>
    e242:	90                   	nop
      }
    e243:	c9                   	leave
    e244:	c3                   	ret

000000000000e245 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e245:	55                   	push   %rbp
    e246:	48 89 e5             	mov    %rsp,%rbp
    e249:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e24d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e251:	5d                   	pop    %rbp
    e252:	c3                   	ret

000000000000e253 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e253:	55                   	push   %rbp
    e254:	48 89 e5             	mov    %rsp,%rbp
    e257:	48 83 ec 10          	sub    $0x10,%rsp
    e25b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e25f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e263:	48 89 c6             	mov    %rax,%rsi
    e266:	bf 08 02 00 00       	mov    $0x208,%edi
    e26b:	e8 f8 95 ff ff       	call   7868 <_ZnwmPv>
    e270:	b9 08 02 00 00       	mov    $0x208,%ecx
    e275:	be 00 00 00 00       	mov    $0x0,%esi
    e27a:	48 89 30             	mov    %rsi,(%rax)
    e27d:	89 ca                	mov    %ecx,%edx
    e27f:	48 01 c2             	add    %rax,%rdx
    e282:	48 83 c2 08          	add    $0x8,%rdx
    e286:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    e28a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e28e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    e292:	48 29 d0             	sub    %rdx,%rax
    e295:	01 c1                	add    %eax,%ecx
    e297:	83 e1 f8             	and    $0xfffffff8,%ecx
    e29a:	89 c8                	mov    %ecx,%eax
    e29c:	c1 e8 03             	shr    $0x3,%eax
    e29f:	89 c1                	mov    %eax,%ecx
    e2a1:	48 89 d7             	mov    %rdx,%rdi
    e2a4:	48 89 f0             	mov    %rsi,%rax
    e2a7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    e2aa:	90                   	nop
    e2ab:	c9                   	leave
    e2ac:	c3                   	ret

000000000000e2ad <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e2ad:	55                   	push   %rbp
    e2ae:	48 89 e5             	mov    %rsp,%rbp
    e2b1:	48 83 ec 20          	sub    $0x20,%rsp
    e2b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e2bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e2c1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e2c5:	48 89 c7             	mov    %rax,%rdi
    e2c8:	e8 bf 07 00 00       	call   ea8c <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e2cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e2d1:	48 89 c7             	mov    %rax,%rdi
    e2d4:	e8 a1 95 ff ff       	call   787a <_ZSt17__size_to_integerm>
    e2d9:	48 89 c1             	mov    %rax,%rcx
    e2dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e2e4:	48 89 ce             	mov    %rcx,%rsi
    e2e7:	48 89 c7             	mov    %rax,%rdi
    e2ea:	e8 a8 07 00 00       	call   ea97 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    e2ef:	c9                   	leave
    e2f0:	c3                   	ret
    e2f1:	90                   	nop

000000000000e2f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e2f2:	55                   	push   %rbp
    e2f3:	48 89 e5             	mov    %rsp,%rbp
    e2f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e2fa:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    e301:	07 7e 00 
      }
    e304:	5d                   	pop    %rbp
    e305:	c3                   	ret

000000000000e306 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e306:	55                   	push   %rbp
    e307:	48 89 e5             	mov    %rsp,%rbp
    e30a:	48 83 ec 20          	sub    $0x20,%rsp
    e30e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e312:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e316:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e31a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e31e:	48 89 c7             	mov    %rax,%rdi
    e321:	e8 cc ff ff ff       	call   e2f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    e326:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e32a:	0f 92 c0             	setb   %al
    e32d:	0f b6 c0             	movzbl %al,%eax
    e330:	48 85 c0             	test   %rax,%rax
    e333:	0f 95 c0             	setne  %al
    e336:	84 c0                	test   %al,%al
    e338:	74 1a                	je     e354 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e33a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    e341:	0f fc 00 
    e344:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e348:	73 05                	jae    e34f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e34a:	e8 51 70 ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e34f:	e8 fc 6d ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e354:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e358:	48 89 d0             	mov    %rdx,%rax
    e35b:	48 c1 e0 06          	shl    $0x6,%rax
    e35f:	48 01 d0             	add    %rdx,%rax
    e362:	48 c1 e0 02          	shl    $0x2,%rax
    e366:	48 89 c7             	mov    %rax,%rdi
    e369:	e8 b2 71 ff ff       	call   5520 <_Znwm@plt>
    e36e:	90                   	nop
      }
    e36f:	c9                   	leave
    e370:	c3                   	ret

000000000000e371 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e371:	55                   	push   %rbp
    e372:	48 89 e5             	mov    %rsp,%rbp
    e375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e37d:	5d                   	pop    %rbp
    e37e:	c3                   	ret

000000000000e37f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e37f:	55                   	push   %rbp
    e380:	48 89 e5             	mov    %rsp,%rbp
    e383:	48 83 ec 10          	sub    $0x10,%rsp
    e387:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e38b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e38f:	48 89 c6             	mov    %rax,%rsi
    e392:	bf 04 01 00 00       	mov    $0x104,%edi
    e397:	e8 cc 94 ff ff       	call   7868 <_ZnwmPv>
    e39c:	b9 04 01 00 00       	mov    $0x104,%ecx
    e3a1:	be 00 00 00 00       	mov    $0x0,%esi
    e3a6:	48 89 30             	mov    %rsi,(%rax)
    e3a9:	89 ca                	mov    %ecx,%edx
    e3ab:	48 01 c2             	add    %rax,%rdx
    e3ae:	48 83 c2 08          	add    $0x8,%rdx
    e3b2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    e3b6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e3ba:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    e3be:	48 29 d0             	sub    %rdx,%rax
    e3c1:	01 c1                	add    %eax,%ecx
    e3c3:	83 e1 f8             	and    $0xfffffff8,%ecx
    e3c6:	89 c8                	mov    %ecx,%eax
    e3c8:	c1 e8 03             	shr    $0x3,%eax
    e3cb:	89 c1                	mov    %eax,%ecx
    e3cd:	48 89 d7             	mov    %rdx,%rdi
    e3d0:	48 89 f0             	mov    %rsi,%rax
    e3d3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    e3d6:	90                   	nop
    e3d7:	c9                   	leave
    e3d8:	c3                   	ret

000000000000e3d9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e3d9:	55                   	push   %rbp
    e3da:	48 89 e5             	mov    %rsp,%rbp
    e3dd:	48 83 ec 20          	sub    $0x20,%rsp
    e3e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e3e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e3ed:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e3f1:	48 89 c7             	mov    %rax,%rdi
    e3f4:	e8 0d 07 00 00       	call   eb06 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e3f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e3fd:	48 89 c7             	mov    %rax,%rdi
    e400:	e8 75 94 ff ff       	call   787a <_ZSt17__size_to_integerm>
    e405:	48 89 c1             	mov    %rax,%rcx
    e408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e40c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e410:	48 89 ce             	mov    %rcx,%rsi
    e413:	48 89 c7             	mov    %rax,%rdi
    e416:	e8 f6 06 00 00       	call   eb11 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    e41b:	c9                   	leave
    e41c:	c3                   	ret
    e41d:	90                   	nop

000000000000e41e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e41e:	55                   	push   %rbp
    e41f:	48 89 e5             	mov    %rsp,%rbp
    e422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e426:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    e42d:	ff ff 0f 
      }
    e430:	5d                   	pop    %rbp
    e431:	c3                   	ret

000000000000e432 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e432:	55                   	push   %rbp
    e433:	48 89 e5             	mov    %rsp,%rbp
    e436:	48 83 ec 20          	sub    $0x20,%rsp
    e43a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e43e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e442:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e44a:	48 89 c7             	mov    %rax,%rdi
    e44d:	e8 cc ff ff ff       	call   e41e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    e452:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e456:	0f 92 c0             	setb   %al
    e459:	0f b6 c0             	movzbl %al,%eax
    e45c:	48 85 c0             	test   %rax,%rax
    e45f:	0f 95 c0             	setne  %al
    e462:	84 c0                	test   %al,%al
    e464:	74 1a                	je     e480 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e466:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e46d:	ff ff 1f 
    e470:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e474:	73 05                	jae    e47b <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e476:	e8 25 6f ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e47b:	e8 d0 6c ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e484:	48 c1 e0 03          	shl    $0x3,%rax
    e488:	48 89 c7             	mov    %rax,%rdi
    e48b:	e8 90 70 ff ff       	call   5520 <_Znwm@plt>
    e490:	90                   	nop
      }
    e491:	c9                   	leave
    e492:	c3                   	ret

000000000000e493 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e493:	55                   	push   %rbp
    e494:	48 89 e5             	mov    %rsp,%rbp
    e497:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e49b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e49f:	5d                   	pop    %rbp
    e4a0:	c3                   	ret

000000000000e4a1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e4a1:	55                   	push   %rbp
    e4a2:	48 89 e5             	mov    %rsp,%rbp
    e4a5:	48 83 ec 10          	sub    $0x10,%rsp
    e4a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e4ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4b1:	48 89 c6             	mov    %rax,%rsi
    e4b4:	bf 08 00 00 00       	mov    $0x8,%edi
    e4b9:	e8 aa 93 ff ff       	call   7868 <_ZnwmPv>
    e4be:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    e4c5:	90                   	nop
    e4c6:	c9                   	leave
    e4c7:	c3                   	ret

000000000000e4c8 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e4c8:	55                   	push   %rbp
    e4c9:	48 89 e5             	mov    %rsp,%rbp
    e4cc:	48 83 ec 20          	sub    $0x20,%rsp
    e4d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e4d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e4dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e4e0:	48 89 c7             	mov    %rax,%rdi
    e4e3:	e8 98 06 00 00       	call   eb80 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e4e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e4ec:	48 89 c7             	mov    %rax,%rdi
    e4ef:	e8 86 93 ff ff       	call   787a <_ZSt17__size_to_integerm>
    e4f4:	48 89 c1             	mov    %rax,%rcx
    e4f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e4ff:	48 89 ce             	mov    %rcx,%rsi
    e502:	48 89 c7             	mov    %rax,%rdi
    e505:	e8 81 06 00 00       	call   eb8b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    e50a:	c9                   	leave
    e50b:	c3                   	ret

000000000000e50c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e50c:	55                   	push   %rbp
    e50d:	48 89 e5             	mov    %rsp,%rbp
    e510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e514:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    e51b:	ff ff 0f 
      }
    e51e:	5d                   	pop    %rbp
    e51f:	c3                   	ret

000000000000e520 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e520:	55                   	push   %rbp
    e521:	48 89 e5             	mov    %rsp,%rbp
    e524:	48 83 ec 20          	sub    $0x20,%rsp
    e528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e52c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e530:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e538:	48 89 c7             	mov    %rax,%rdi
    e53b:	e8 cc ff ff ff       	call   e50c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    e540:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e544:	0f 92 c0             	setb   %al
    e547:	0f b6 c0             	movzbl %al,%eax
    e54a:	48 85 c0             	test   %rax,%rax
    e54d:	0f 95 c0             	setne  %al
    e550:	84 c0                	test   %al,%al
    e552:	74 1a                	je     e56e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e554:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e55b:	ff ff 1f 
    e55e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e562:	73 05                	jae    e569 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e564:	e8 37 6e ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e569:	e8 e2 6b ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e56e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e572:	48 c1 e0 03          	shl    $0x3,%rax
    e576:	48 89 c7             	mov    %rax,%rdi
    e579:	e8 a2 6f ff ff       	call   5520 <_Znwm@plt>
    e57e:	90                   	nop
      }
    e57f:	c9                   	leave
    e580:	c3                   	ret

000000000000e581 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e581:	55                   	push   %rbp
    e582:	48 89 e5             	mov    %rsp,%rbp
    e585:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e58d:	5d                   	pop    %rbp
    e58e:	c3                   	ret

000000000000e58f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e58f:	55                   	push   %rbp
    e590:	48 89 e5             	mov    %rsp,%rbp
    e593:	48 83 ec 10          	sub    $0x10,%rsp
    e597:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e59b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e59f:	48 89 c6             	mov    %rax,%rsi
    e5a2:	bf 08 00 00 00       	mov    $0x8,%edi
    e5a7:	e8 bc 92 ff ff       	call   7868 <_ZnwmPv>
    e5ac:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    e5b3:	90                   	nop
    e5b4:	c9                   	leave
    e5b5:	c3                   	ret

000000000000e5b6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e5b6:	55                   	push   %rbp
    e5b7:	48 89 e5             	mov    %rsp,%rbp
    e5ba:	48 83 ec 20          	sub    $0x20,%rsp
    e5be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e5c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e5ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e5ce:	48 89 c7             	mov    %rax,%rdi
    e5d1:	e8 12 06 00 00       	call   ebe8 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e5d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5da:	48 89 c7             	mov    %rax,%rdi
    e5dd:	e8 98 92 ff ff       	call   787a <_ZSt17__size_to_integerm>
    e5e2:	48 89 c1             	mov    %rax,%rcx
    e5e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e5ed:	48 89 ce             	mov    %rcx,%rsi
    e5f0:	48 89 c7             	mov    %rax,%rdi
    e5f3:	e8 fb 05 00 00       	call   ebf3 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    e5f8:	c9                   	leave
    e5f9:	c3                   	ret

000000000000e5fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e5fa:	55                   	push   %rbp
    e5fb:	48 89 e5             	mov    %rsp,%rbp
    e5fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e602:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    e609:	55 55 05 
      }
    e60c:	5d                   	pop    %rbp
    e60d:	c3                   	ret

000000000000e60e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e60e:	55                   	push   %rbp
    e60f:	48 89 e5             	mov    %rsp,%rbp
    e612:	48 83 ec 20          	sub    $0x20,%rsp
    e616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e61a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e61e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e626:	48 89 c7             	mov    %rax,%rdi
    e629:	e8 cc ff ff ff       	call   e5fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    e62e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e632:	0f 92 c0             	setb   %al
    e635:	0f b6 c0             	movzbl %al,%eax
    e638:	48 85 c0             	test   %rax,%rax
    e63b:	0f 95 c0             	setne  %al
    e63e:	84 c0                	test   %al,%al
    e640:	74 1a                	je     e65c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e642:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    e649:	aa aa 0a 
    e64c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e650:	73 05                	jae    e657 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e652:	e8 49 6d ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e657:	e8 f4 6a ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e65c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e660:	48 89 d0             	mov    %rdx,%rax
    e663:	48 01 c0             	add    %rax,%rax
    e666:	48 01 d0             	add    %rdx,%rax
    e669:	48 c1 e0 03          	shl    $0x3,%rax
    e66d:	48 89 c7             	mov    %rax,%rdi
    e670:	e8 ab 6e ff ff       	call   5520 <_Znwm@plt>
    e675:	90                   	nop
      }
    e676:	c9                   	leave
    e677:	c3                   	ret

000000000000e678 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e678:	55                   	push   %rbp
    e679:	48 89 e5             	mov    %rsp,%rbp
    e67c:	48 83 ec 10          	sub    $0x10,%rsp
    e680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e688:	48 89 c6             	mov    %rax,%rsi
    e68b:	bf 18 00 00 00       	mov    $0x18,%edi
    e690:	e8 d3 91 ff ff       	call   7868 <_ZnwmPv>
    e695:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e69b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    e6a2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    e6a9:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    e6b0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    e6b7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    e6be:	90                   	nop
    e6bf:	c9                   	leave
    e6c0:	c3                   	ret

000000000000e6c1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e6c1:	55                   	push   %rbp
    e6c2:	48 89 e5             	mov    %rsp,%rbp
    e6c5:	48 83 ec 20          	sub    $0x20,%rsp
    e6c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e6d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e6d5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e6d9:	48 89 c7             	mov    %rax,%rdi
    e6dc:	e8 6f 05 00 00       	call   ec50 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e6e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e6e5:	48 89 c7             	mov    %rax,%rdi
    e6e8:	e8 8d 91 ff ff       	call   787a <_ZSt17__size_to_integerm>
    e6ed:	48 89 c1             	mov    %rax,%rcx
    e6f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e6f8:	48 89 ce             	mov    %rcx,%rsi
    e6fb:	48 89 c7             	mov    %rax,%rdi
    e6fe:	e8 58 05 00 00       	call   ec5b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    e703:	c9                   	leave
    e704:	c3                   	ret
    e705:	90                   	nop

000000000000e706 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e706:	55                   	push   %rbp
    e707:	48 89 e5             	mov    %rsp,%rbp
    e70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e70e:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    e715:	49 92 04 
      }
    e718:	5d                   	pop    %rbp
    e719:	c3                   	ret

000000000000e71a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e71a:	55                   	push   %rbp
    e71b:	48 89 e5             	mov    %rsp,%rbp
    e71e:	48 83 ec 20          	sub    $0x20,%rsp
    e722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e726:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e72a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e732:	48 89 c7             	mov    %rax,%rdi
    e735:	e8 cc ff ff ff       	call   e706 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    e73a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e73e:	0f 92 c0             	setb   %al
    e741:	0f b6 c0             	movzbl %al,%eax
    e744:	48 85 c0             	test   %rax,%rax
    e747:	0f 95 c0             	setne  %al
    e74a:	84 c0                	test   %al,%al
    e74c:	74 1a                	je     e768 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e74e:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    e755:	92 24 09 
    e758:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e75c:	73 05                	jae    e763 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e75e:	e8 3d 6c ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e763:	e8 e8 69 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e768:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e76c:	48 89 d0             	mov    %rdx,%rax
    e76f:	48 c1 e0 03          	shl    $0x3,%rax
    e773:	48 29 d0             	sub    %rdx,%rax
    e776:	48 c1 e0 02          	shl    $0x2,%rax
    e77a:	48 89 c7             	mov    %rax,%rdi
    e77d:	e8 9e 6d ff ff       	call   5520 <_Znwm@plt>
    e782:	90                   	nop
      }
    e783:	c9                   	leave
    e784:	c3                   	ret

000000000000e785 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e785:	55                   	push   %rbp
    e786:	48 89 e5             	mov    %rsp,%rbp
    e789:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e78d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e791:	5d                   	pop    %rbp
    e792:	c3                   	ret

000000000000e793 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e793:	55                   	push   %rbp
    e794:	48 89 e5             	mov    %rsp,%rbp
    e797:	48 83 ec 10          	sub    $0x10,%rsp
    e79b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e79f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7a3:	48 89 c6             	mov    %rax,%rsi
    e7a6:	bf 1c 00 00 00       	mov    $0x1c,%edi
    e7ab:	e8 b8 90 ff ff       	call   7868 <_ZnwmPv>
    e7b0:	48 89 c7             	mov    %rax,%rdi
    e7b3:	e8 6c 05 00 00       	call   ed24 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    e7b8:	90                   	nop
    e7b9:	c9                   	leave
    e7ba:	c3                   	ret
    e7bb:	90                   	nop

000000000000e7bc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e7bc:	55                   	push   %rbp
    e7bd:	48 89 e5             	mov    %rsp,%rbp
    e7c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e7c4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    e7cb:	ff ff 0f 
      }
    e7ce:	5d                   	pop    %rbp
    e7cf:	c3                   	ret

000000000000e7d0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e7d0:	55                   	push   %rbp
    e7d1:	48 89 e5             	mov    %rsp,%rbp
    e7d4:	48 83 ec 20          	sub    $0x20,%rsp
    e7d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e7e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e7e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7e8:	48 89 c7             	mov    %rax,%rdi
    e7eb:	e8 cc ff ff ff       	call   e7bc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    e7f0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e7f4:	0f 92 c0             	setb   %al
    e7f7:	0f b6 c0             	movzbl %al,%eax
    e7fa:	48 85 c0             	test   %rax,%rax
    e7fd:	0f 95 c0             	setne  %al
    e800:	84 c0                	test   %al,%al
    e802:	74 1a                	je     e81e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e804:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e80b:	ff ff 1f 
    e80e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e812:	73 05                	jae    e819 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e814:	e8 87 6b ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e819:	e8 32 69 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e81e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e822:	48 c1 e0 03          	shl    $0x3,%rax
    e826:	48 89 c7             	mov    %rax,%rdi
    e829:	e8 f2 6c ff ff       	call   5520 <_Znwm@plt>
    e82e:	90                   	nop
      }
    e82f:	c9                   	leave
    e830:	c3                   	ret

000000000000e831 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e831:	55                   	push   %rbp
    e832:	48 89 e5             	mov    %rsp,%rbp
    e835:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e83d:	5d                   	pop    %rbp
    e83e:	c3                   	ret

000000000000e83f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e83f:	55                   	push   %rbp
    e840:	48 89 e5             	mov    %rsp,%rbp
    e843:	48 83 ec 10          	sub    $0x10,%rsp
    e847:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e84b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e84f:	48 89 c6             	mov    %rax,%rsi
    e852:	bf 08 00 00 00       	mov    $0x8,%edi
    e857:	e8 0c 90 ff ff       	call   7868 <_ZnwmPv>
    e85c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    e862:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    e869:	90                   	nop
    e86a:	c9                   	leave
    e86b:	c3                   	ret

000000000000e86c <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e86c:	55                   	push   %rbp
    e86d:	48 89 e5             	mov    %rsp,%rbp
    e870:	48 83 ec 20          	sub    $0x20,%rsp
    e874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e878:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e87c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e880:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e884:	48 89 c7             	mov    %rax,%rdi
    e887:	e8 b3 04 00 00       	call   ed3f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e88c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e890:	48 89 c7             	mov    %rax,%rdi
    e893:	e8 e2 8f ff ff       	call   787a <_ZSt17__size_to_integerm>
    e898:	48 89 c1             	mov    %rax,%rcx
    e89b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e89f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e8a3:	48 89 ce             	mov    %rcx,%rsi
    e8a6:	48 89 c7             	mov    %rax,%rdi
    e8a9:	e8 9c 04 00 00       	call   ed4a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    e8ae:	c9                   	leave
    e8af:	c3                   	ret

000000000000e8b0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e8b0:	55                   	push   %rbp
    e8b1:	48 89 e5             	mov    %rsp,%rbp
    e8b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e8b8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e8bf:	ff ff 1f 
      }
    e8c2:	5d                   	pop    %rbp
    e8c3:	c3                   	ret

000000000000e8c4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e8c4:	55                   	push   %rbp
    e8c5:	48 89 e5             	mov    %rsp,%rbp
    e8c8:	48 83 ec 20          	sub    $0x20,%rsp
    e8cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e8d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8dc:	48 89 c7             	mov    %rax,%rdi
    e8df:	e8 cc ff ff ff       	call   e8b0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    e8e4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e8e8:	0f 92 c0             	setb   %al
    e8eb:	0f b6 c0             	movzbl %al,%eax
    e8ee:	48 85 c0             	test   %rax,%rax
    e8f1:	0f 95 c0             	setne  %al
    e8f4:	84 c0                	test   %al,%al
    e8f6:	74 1a                	je     e912 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e8f8:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    e8ff:	ff ff 3f 
    e902:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e906:	73 05                	jae    e90d <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e908:	e8 93 6a ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e90d:	e8 3e 68 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e916:	48 c1 e0 02          	shl    $0x2,%rax
    e91a:	48 89 c7             	mov    %rax,%rdi
    e91d:	e8 fe 6b ff ff       	call   5520 <_Znwm@plt>
    e922:	90                   	nop
      }
    e923:	c9                   	leave
    e924:	c3                   	ret

000000000000e925 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e925:	55                   	push   %rbp
    e926:	48 89 e5             	mov    %rsp,%rbp
    e929:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e92d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e931:	5d                   	pop    %rbp
    e932:	c3                   	ret

000000000000e933 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e933:	55                   	push   %rbp
    e934:	48 89 e5             	mov    %rsp,%rbp
    e937:	48 83 ec 10          	sub    $0x10,%rsp
    e93b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e93f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e943:	48 89 c6             	mov    %rax,%rsi
    e946:	bf 04 00 00 00       	mov    $0x4,%edi
    e94b:	e8 18 8f ff ff       	call   7868 <_ZnwmPv>
    e950:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    e956:	90                   	nop
    e957:	c9                   	leave
    e958:	c3                   	ret

000000000000e959 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    e959:	55                   	push   %rbp
    e95a:	48 89 e5             	mov    %rsp,%rbp
    e95d:	48 83 ec 20          	sub    $0x20,%rsp
    e961:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e965:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e969:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    e96d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e971:	48 89 c7             	mov    %rax,%rdi
    e974:	e8 2e 04 00 00       	call   eda7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    e979:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e97d:	48 89 c7             	mov    %rax,%rdi
    e980:	e8 f5 8e ff ff       	call   787a <_ZSt17__size_to_integerm>
    e985:	48 89 c1             	mov    %rax,%rcx
    e988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e98c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e990:	48 89 ce             	mov    %rcx,%rsi
    e993:	48 89 c7             	mov    %rax,%rdi
    e996:	e8 17 04 00 00       	call   edb2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    e99b:	c9                   	leave
    e99c:	c3                   	ret
    e99d:	90                   	nop

000000000000e99e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e99e:	55                   	push   %rbp
    e99f:	48 89 e5             	mov    %rsp,%rbp
    e9a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e9a6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    e9ad:	ff ff 0f 
      }
    e9b0:	5d                   	pop    %rbp
    e9b1:	c3                   	ret

000000000000e9b2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e9b2:	55                   	push   %rbp
    e9b3:	48 89 e5             	mov    %rsp,%rbp
    e9b6:	48 83 ec 20          	sub    $0x20,%rsp
    e9ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e9c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e9c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ca:	48 89 c7             	mov    %rax,%rdi
    e9cd:	e8 cc ff ff ff       	call   e99e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    e9d2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e9d6:	0f 92 c0             	setb   %al
    e9d9:	0f b6 c0             	movzbl %al,%eax
    e9dc:	48 85 c0             	test   %rax,%rax
    e9df:	0f 95 c0             	setne  %al
    e9e2:	84 c0                	test   %al,%al
    e9e4:	74 1a                	je     ea00 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e9e6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e9ed:	ff ff 1f 
    e9f0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e9f4:	73 05                	jae    e9fb <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e9f6:	e8 a5 69 ff ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e9fb:	e8 50 67 ff ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ea00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea04:	48 c1 e0 03          	shl    $0x3,%rax
    ea08:	48 89 c7             	mov    %rax,%rdi
    ea0b:	e8 10 6b ff ff       	call   5520 <_Znwm@plt>
    ea10:	90                   	nop
      }
    ea11:	c9                   	leave
    ea12:	c3                   	ret

000000000000ea13 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ea13:	55                   	push   %rbp
    ea14:	48 89 e5             	mov    %rsp,%rbp
    ea17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ea1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea1f:	5d                   	pop    %rbp
    ea20:	c3                   	ret

000000000000ea21 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ea21:	55                   	push   %rbp
    ea22:	48 89 e5             	mov    %rsp,%rbp
    ea25:	48 83 ec 10          	sub    $0x10,%rsp
    ea29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ea2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea31:	48 89 c6             	mov    %rax,%rsi
    ea34:	bf 08 00 00 00       	mov    $0x8,%edi
    ea39:	e8 2a 8e ff ff       	call   7868 <_ZnwmPv>
    ea3e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    ea45:	90                   	nop
    ea46:	c9                   	leave
    ea47:	c3                   	ret

000000000000ea48 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ea48:	55                   	push   %rbp
    ea49:	48 89 e5             	mov    %rsp,%rbp
    ea4c:	48 83 ec 20          	sub    $0x20,%rsp
    ea50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ea5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ea60:	48 89 c7             	mov    %rax,%rdi
    ea63:	e8 a7 03 00 00       	call   ee0f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ea68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea6c:	48 89 c7             	mov    %rax,%rdi
    ea6f:	e8 06 8e ff ff       	call   787a <_ZSt17__size_to_integerm>
    ea74:	48 89 c1             	mov    %rax,%rcx
    ea77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ea7f:	48 89 ce             	mov    %rcx,%rsi
    ea82:	48 89 c7             	mov    %rax,%rdi
    ea85:	e8 90 03 00 00       	call   ee1a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    ea8a:	c9                   	leave
    ea8b:	c3                   	ret

000000000000ea8c <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ea8c:	55                   	push   %rbp
    ea8d:	48 89 e5             	mov    %rsp,%rbp
    ea90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ea94:	90                   	nop
    ea95:	5d                   	pop    %rbp
    ea96:	c3                   	ret

000000000000ea97 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ea97:	55                   	push   %rbp
    ea98:	48 89 e5             	mov    %rsp,%rbp
    ea9b:	48 83 ec 20          	sub    $0x20,%rsp
    ea9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eaa3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eaa7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    eaab:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eab0:	75 06                	jne    eab8 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    eab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eab6:	eb 4c                	jmp    eb04 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    eab8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eabc:	48 89 d0             	mov    %rdx,%rax
    eabf:	48 c1 e0 06          	shl    $0x6,%rax
    eac3:	48 01 d0             	add    %rdx,%rax
    eac6:	48 c1 e0 03          	shl    $0x3,%rax
    eaca:	48 89 c2             	mov    %rax,%rdx
    eacd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ead1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ead5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ead9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eadd:	48 89 ce             	mov    %rcx,%rsi
    eae0:	48 89 c7             	mov    %rax,%rdi
    eae3:	e8 8f 03 00 00       	call   ee77 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    eae8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eaec:	48 89 d0             	mov    %rdx,%rax
    eaef:	48 c1 e0 06          	shl    $0x6,%rax
    eaf3:	48 01 d0             	add    %rdx,%rax
    eaf6:	48 c1 e0 03          	shl    $0x3,%rax
    eafa:	48 89 c2             	mov    %rax,%rdx
    eafd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb01:	48 01 d0             	add    %rdx,%rax
    }
    eb04:	c9                   	leave
    eb05:	c3                   	ret

000000000000eb06 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    eb06:	55                   	push   %rbp
    eb07:	48 89 e5             	mov    %rsp,%rbp
    eb0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    eb0e:	90                   	nop
    eb0f:	5d                   	pop    %rbp
    eb10:	c3                   	ret

000000000000eb11 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    eb11:	55                   	push   %rbp
    eb12:	48 89 e5             	mov    %rsp,%rbp
    eb15:	48 83 ec 20          	sub    $0x20,%rsp
    eb19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    eb25:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eb2a:	75 06                	jne    eb32 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    eb2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb30:	eb 4c                	jmp    eb7e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    eb32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eb36:	48 89 d0             	mov    %rdx,%rax
    eb39:	48 c1 e0 06          	shl    $0x6,%rax
    eb3d:	48 01 d0             	add    %rdx,%rax
    eb40:	48 c1 e0 02          	shl    $0x2,%rax
    eb44:	48 89 c2             	mov    %rax,%rdx
    eb47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb4b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    eb4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb57:	48 89 ce             	mov    %rcx,%rsi
    eb5a:	48 89 c7             	mov    %rax,%rdi
    eb5d:	e8 43 03 00 00       	call   eea5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    eb62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eb66:	48 89 d0             	mov    %rdx,%rax
    eb69:	48 c1 e0 06          	shl    $0x6,%rax
    eb6d:	48 01 d0             	add    %rdx,%rax
    eb70:	48 c1 e0 02          	shl    $0x2,%rax
    eb74:	48 89 c2             	mov    %rax,%rdx
    eb77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb7b:	48 01 d0             	add    %rdx,%rax
    }
    eb7e:	c9                   	leave
    eb7f:	c3                   	ret

000000000000eb80 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    eb80:	55                   	push   %rbp
    eb81:	48 89 e5             	mov    %rsp,%rbp
    eb84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    eb88:	90                   	nop
    eb89:	5d                   	pop    %rbp
    eb8a:	c3                   	ret

000000000000eb8b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    eb8b:	55                   	push   %rbp
    eb8c:	48 89 e5             	mov    %rsp,%rbp
    eb8f:	48 83 ec 20          	sub    $0x20,%rsp
    eb93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    eb9f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eba4:	75 06                	jne    ebac <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    eba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebaa:	eb 3a                	jmp    ebe6 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    ebac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebb0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ebb7:	00 
    ebb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebbc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ebc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ebc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebc8:	48 89 ce             	mov    %rcx,%rsi
    ebcb:	48 89 c7             	mov    %rax,%rdi
    ebce:	e8 00 03 00 00       	call   eed3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    ebd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebd7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ebde:	00 
    ebdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebe3:	48 01 d0             	add    %rdx,%rax
    }
    ebe6:	c9                   	leave
    ebe7:	c3                   	ret

000000000000ebe8 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    ebe8:	55                   	push   %rbp
    ebe9:	48 89 e5             	mov    %rsp,%rbp
    ebec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ebf0:	90                   	nop
    ebf1:	5d                   	pop    %rbp
    ebf2:	c3                   	ret

000000000000ebf3 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ebf3:	55                   	push   %rbp
    ebf4:	48 89 e5             	mov    %rsp,%rbp
    ebf7:	48 83 ec 20          	sub    $0x20,%rsp
    ebfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec03:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ec07:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ec0c:	75 06                	jne    ec14 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ec0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec12:	eb 3a                	jmp    ec4e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    ec14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec18:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ec1f:	00 
    ec20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec24:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ec28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ec2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec30:	48 89 ce             	mov    %rcx,%rsi
    ec33:	48 89 c7             	mov    %rax,%rdi
    ec36:	e8 c6 02 00 00       	call   ef01 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    ec3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec3f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ec46:	00 
    ec47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec4b:	48 01 d0             	add    %rdx,%rax
    }
    ec4e:	c9                   	leave
    ec4f:	c3                   	ret

000000000000ec50 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ec50:	55                   	push   %rbp
    ec51:	48 89 e5             	mov    %rsp,%rbp
    ec54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ec58:	90                   	nop
    ec59:	5d                   	pop    %rbp
    ec5a:	c3                   	ret

000000000000ec5b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ec5b:	55                   	push   %rbp
    ec5c:	48 89 e5             	mov    %rsp,%rbp
    ec5f:	48 83 ec 20          	sub    $0x20,%rsp
    ec63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ec6f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ec74:	75 06                	jne    ec7c <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ec76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec7a:	eb 4a                	jmp    ecc6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    ec7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ec80:	48 89 d0             	mov    %rdx,%rax
    ec83:	48 01 c0             	add    %rax,%rax
    ec86:	48 01 d0             	add    %rdx,%rax
    ec89:	48 c1 e0 03          	shl    $0x3,%rax
    ec8d:	48 89 c2             	mov    %rax,%rdx
    ec90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec94:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ec98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ec9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eca0:	48 89 ce             	mov    %rcx,%rsi
    eca3:	48 89 c7             	mov    %rax,%rdi
    eca6:	e8 84 02 00 00       	call   ef2f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    ecab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ecaf:	48 89 d0             	mov    %rdx,%rax
    ecb2:	48 01 c0             	add    %rax,%rax
    ecb5:	48 01 d0             	add    %rdx,%rax
    ecb8:	48 c1 e0 03          	shl    $0x3,%rax
    ecbc:	48 89 c2             	mov    %rax,%rdx
    ecbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecc3:	48 01 d0             	add    %rdx,%rax
    }
    ecc6:	c9                   	leave
    ecc7:	c3                   	ret

000000000000ecc8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    ecc8:	55                   	push   %rbp
    ecc9:	48 89 e5             	mov    %rsp,%rbp
    eccc:	48 83 ec 10          	sub    $0x10,%rsp
    ecd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecd8:	48 89 c7             	mov    %rax,%rdi
    ecdb:	e8 7e 02 00 00       	call   ef5e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    ece0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ece4:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    ece8:	90                   	nop
    ece9:	c9                   	leave
    ecea:	c3                   	ret
    eceb:	90                   	nop

000000000000ecec <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    ecec:	55                   	push   %rbp
    eced:	48 89 e5             	mov    %rsp,%rbp
    ecf0:	48 83 ec 10          	sub    $0x10,%rsp
    ecf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecfc:	48 89 c7             	mov    %rax,%rdi
    ecff:	e8 c4 ff ff ff       	call   ecc8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    ed04:	90                   	nop
    ed05:	c9                   	leave
    ed06:	c3                   	ret
    ed07:	90                   	nop

000000000000ed08 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    ed08:	55                   	push   %rbp
    ed09:	48 89 e5             	mov    %rsp,%rbp
    ed0c:	48 83 ec 10          	sub    $0x10,%rsp
    ed10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed18:	48 89 c7             	mov    %rax,%rdi
    ed1b:	e8 cc ff ff ff       	call   ecec <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    ed20:	90                   	nop
    ed21:	c9                   	leave
    ed22:	c3                   	ret
    ed23:	90                   	nop

000000000000ed24 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    ed24:	55                   	push   %rbp
    ed25:	48 89 e5             	mov    %rsp,%rbp
    ed28:	48 83 ec 10          	sub    $0x10,%rsp
    ed2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed34:	48 89 c7             	mov    %rax,%rdi
    ed37:	e8 cc ff ff ff       	call   ed08 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    ed3c:	90                   	nop
    ed3d:	c9                   	leave
    ed3e:	c3                   	ret

000000000000ed3f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ed3f:	55                   	push   %rbp
    ed40:	48 89 e5             	mov    %rsp,%rbp
    ed43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ed47:	90                   	nop
    ed48:	5d                   	pop    %rbp
    ed49:	c3                   	ret

000000000000ed4a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ed4a:	55                   	push   %rbp
    ed4b:	48 89 e5             	mov    %rsp,%rbp
    ed4e:	48 83 ec 20          	sub    $0x20,%rsp
    ed52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ed5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ed5e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ed63:	75 06                	jne    ed6b <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ed65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed69:	eb 3a                	jmp    eda5 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    ed6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed6f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ed76:	00 
    ed77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed7b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ed7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ed83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed87:	48 89 ce             	mov    %rcx,%rsi
    ed8a:	48 89 c7             	mov    %rax,%rdi
    ed8d:	e8 d7 01 00 00       	call   ef69 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    ed92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed96:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ed9d:	00 
    ed9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eda2:	48 01 d0             	add    %rdx,%rax
    }
    eda5:	c9                   	leave
    eda6:	c3                   	ret

000000000000eda7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    eda7:	55                   	push   %rbp
    eda8:	48 89 e5             	mov    %rsp,%rbp
    edab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    edaf:	90                   	nop
    edb0:	5d                   	pop    %rbp
    edb1:	c3                   	ret

000000000000edb2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    edb2:	55                   	push   %rbp
    edb3:	48 89 e5             	mov    %rsp,%rbp
    edb6:	48 83 ec 20          	sub    $0x20,%rsp
    edba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    edbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    edc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    edc6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    edcb:	75 06                	jne    edd3 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    edcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edd1:	eb 3a                	jmp    ee0d <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    edd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edd7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    edde:	00 
    eddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ede3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ede7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    edeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edef:	48 89 ce             	mov    %rcx,%rsi
    edf2:	48 89 c7             	mov    %rax,%rdi
    edf5:	e8 9d 01 00 00       	call   ef97 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    edfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edfe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ee05:	00 
    ee06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee0a:	48 01 d0             	add    %rdx,%rax
    }
    ee0d:	c9                   	leave
    ee0e:	c3                   	ret

000000000000ee0f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    ee0f:	55                   	push   %rbp
    ee10:	48 89 e5             	mov    %rsp,%rbp
    ee13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ee17:	90                   	nop
    ee18:	5d                   	pop    %rbp
    ee19:	c3                   	ret

000000000000ee1a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ee1a:	55                   	push   %rbp
    ee1b:	48 89 e5             	mov    %rsp,%rbp
    ee1e:	48 83 ec 20          	sub    $0x20,%rsp
    ee22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ee2e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ee33:	75 06                	jne    ee3b <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ee35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee39:	eb 3a                	jmp    ee75 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    ee3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee3f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ee46:	00 
    ee47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee4b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ee4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee57:	48 89 ce             	mov    %rcx,%rsi
    ee5a:	48 89 c7             	mov    %rax,%rdi
    ee5d:	e8 63 01 00 00       	call   efc5 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    ee62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee66:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ee6d:	00 
    ee6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee72:	48 01 d0             	add    %rdx,%rax
    }
    ee75:	c9                   	leave
    ee76:	c3                   	ret

000000000000ee77 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    ee77:	55                   	push   %rbp
    ee78:	48 89 e5             	mov    %rsp,%rbp
    ee7b:	48 83 ec 20          	sub    $0x20,%rsp
    ee7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee83:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee87:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    ee8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee8f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ee93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee97:	48 89 ce             	mov    %rcx,%rsi
    ee9a:	48 89 c7             	mov    %rax,%rdi
    ee9d:	e8 51 01 00 00       	call   eff3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    eea2:	90                   	nop
    eea3:	c9                   	leave
    eea4:	c3                   	ret

000000000000eea5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    eea5:	55                   	push   %rbp
    eea6:	48 89 e5             	mov    %rsp,%rbp
    eea9:	48 83 ec 20          	sub    $0x20,%rsp
    eead:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eeb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eeb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    eeb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eebd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eec5:	48 89 ce             	mov    %rcx,%rsi
    eec8:	48 89 c7             	mov    %rax,%rdi
    eecb:	e8 9b 01 00 00       	call   f06b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    eed0:	90                   	nop
    eed1:	c9                   	leave
    eed2:	c3                   	ret

000000000000eed3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    eed3:	55                   	push   %rbp
    eed4:	48 89 e5             	mov    %rsp,%rbp
    eed7:	48 83 ec 20          	sub    $0x20,%rsp
    eedb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eedf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eee3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    eee7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eeeb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eeef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eef3:	48 89 ce             	mov    %rcx,%rsi
    eef6:	48 89 c7             	mov    %rax,%rdi
    eef9:	e8 e5 01 00 00       	call   f0e3 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    eefe:	90                   	nop
    eeff:	c9                   	leave
    ef00:	c3                   	ret

000000000000ef01 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    ef01:	55                   	push   %rbp
    ef02:	48 89 e5             	mov    %rsp,%rbp
    ef05:	48 83 ec 20          	sub    $0x20,%rsp
    ef09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef11:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    ef15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef19:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ef1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef21:	48 89 ce             	mov    %rcx,%rsi
    ef24:	48 89 c7             	mov    %rax,%rdi
    ef27:	e8 f2 01 00 00       	call   f11e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    ef2c:	90                   	nop
    ef2d:	c9                   	leave
    ef2e:	c3                   	ret

000000000000ef2f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    ef2f:	55                   	push   %rbp
    ef30:	48 89 e5             	mov    %rsp,%rbp
    ef33:	48 83 ec 20          	sub    $0x20,%rsp
    ef37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef3f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    ef43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ef4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef4f:	48 89 ce             	mov    %rcx,%rsi
    ef52:	48 89 c7             	mov    %rax,%rdi
    ef55:	e8 ff 01 00 00       	call   f159 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    ef5a:	90                   	nop
    ef5b:	c9                   	leave
    ef5c:	c3                   	ret
    ef5d:	90                   	nop

000000000000ef5e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    ef5e:	55                   	push   %rbp
    ef5f:	48 89 e5             	mov    %rsp,%rbp
    ef62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef66:	90                   	nop
    ef67:	5d                   	pop    %rbp
    ef68:	c3                   	ret

000000000000ef69 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    ef69:	55                   	push   %rbp
    ef6a:	48 89 e5             	mov    %rsp,%rbp
    ef6d:	48 83 ec 20          	sub    $0x20,%rsp
    ef71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    ef7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ef85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef89:	48 89 ce             	mov    %rcx,%rsi
    ef8c:	48 89 c7             	mov    %rax,%rdi
    ef8f:	e8 08 02 00 00       	call   f19c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    ef94:	90                   	nop
    ef95:	c9                   	leave
    ef96:	c3                   	ret

000000000000ef97 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    ef97:	55                   	push   %rbp
    ef98:	48 89 e5             	mov    %rsp,%rbp
    ef9b:	48 83 ec 20          	sub    $0x20,%rsp
    ef9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efa3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efa7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    efab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    efaf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    efb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efb7:	48 89 ce             	mov    %rcx,%rsi
    efba:	48 89 c7             	mov    %rax,%rdi
    efbd:	e8 0d 02 00 00       	call   f1cf <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    efc2:	90                   	nop
    efc3:	c9                   	leave
    efc4:	c3                   	ret

000000000000efc5 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    efc5:	55                   	push   %rbp
    efc6:	48 89 e5             	mov    %rsp,%rbp
    efc9:	48 83 ec 20          	sub    $0x20,%rsp
    efcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efd1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efd5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    efd9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    efdd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    efe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efe5:	48 89 ce             	mov    %rcx,%rsi
    efe8:	48 89 c7             	mov    %rax,%rdi
    efeb:	e8 10 02 00 00       	call   f200 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    eff0:	90                   	nop
    eff1:	c9                   	leave
    eff2:	c3                   	ret

000000000000eff3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    eff3:	55                   	push   %rbp
    eff4:	48 89 e5             	mov    %rsp,%rbp
    eff7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    effb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f003:	eb 58                	jmp    f05d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    f005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f009:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f00d:	b9 08 02 00 00       	mov    $0x208,%ecx
    f012:	48 8b 32             	mov    (%rdx),%rsi
    f015:	48 89 30             	mov    %rsi,(%rax)
    f018:	89 ce                	mov    %ecx,%esi
    f01a:	48 01 c6             	add    %rax,%rsi
    f01d:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    f021:	89 ce                	mov    %ecx,%esi
    f023:	48 01 d6             	add    %rdx,%rsi
    f026:	48 83 c6 08          	add    $0x8,%rsi
    f02a:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    f02e:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    f032:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f036:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f03a:	48 29 f8             	sub    %rdi,%rax
    f03d:	48 29 c2             	sub    %rax,%rdx
    f040:	01 c1                	add    %eax,%ecx
    f042:	83 e1 f8             	and    $0xfffffff8,%ecx
    f045:	89 c8                	mov    %ecx,%eax
    f047:	c1 e8 03             	shr    $0x3,%eax
    f04a:	89 c0                	mov    %eax,%eax
    f04c:	48 89 d6             	mov    %rdx,%rsi
    f04f:	48 89 c1             	mov    %rax,%rcx
    f052:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    f055:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    f05c:	00 
    f05d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f061:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f065:	75 9e                	jne    f005 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f067:	90                   	nop
    f068:	90                   	nop
    f069:	5d                   	pop    %rbp
    f06a:	c3                   	ret

000000000000f06b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f06b:	55                   	push   %rbp
    f06c:	48 89 e5             	mov    %rsp,%rbp
    f06f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f073:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f077:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f07b:	eb 58                	jmp    f0d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    f07d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f081:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f085:	b9 04 01 00 00       	mov    $0x104,%ecx
    f08a:	48 8b 32             	mov    (%rdx),%rsi
    f08d:	48 89 30             	mov    %rsi,(%rax)
    f090:	89 ce                	mov    %ecx,%esi
    f092:	48 01 c6             	add    %rax,%rsi
    f095:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    f099:	89 ce                	mov    %ecx,%esi
    f09b:	48 01 d6             	add    %rdx,%rsi
    f09e:	48 83 c6 08          	add    $0x8,%rsi
    f0a2:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    f0a6:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    f0aa:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f0ae:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f0b2:	48 29 f8             	sub    %rdi,%rax
    f0b5:	48 29 c2             	sub    %rax,%rdx
    f0b8:	01 c1                	add    %eax,%ecx
    f0ba:	83 e1 f8             	and    $0xfffffff8,%ecx
    f0bd:	89 c8                	mov    %ecx,%eax
    f0bf:	c1 e8 03             	shr    $0x3,%eax
    f0c2:	89 c0                	mov    %eax,%eax
    f0c4:	48 89 d6             	mov    %rdx,%rsi
    f0c7:	48 89 c1             	mov    %rax,%rcx
    f0ca:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    f0cd:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    f0d4:	00 
    f0d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0d9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f0dd:	75 9e                	jne    f07d <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f0df:	90                   	nop
    f0e0:	90                   	nop
    f0e1:	5d                   	pop    %rbp
    f0e2:	c3                   	ret

000000000000f0e3 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f0e3:	55                   	push   %rbp
    f0e4:	48 89 e5             	mov    %rsp,%rbp
    f0e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f0eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f0ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    f0f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0f7:	48 8b 00             	mov    (%rax),%rax
    f0fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    f0fe:	eb 10                	jmp    f110 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    f100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f104:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f108:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f10b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    f110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f114:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f118:	75 e6                	jne    f100 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    f11a:	90                   	nop
    f11b:	90                   	nop
    f11c:	5d                   	pop    %rbp
    f11d:	c3                   	ret

000000000000f11e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f11e:	55                   	push   %rbp
    f11f:	48 89 e5             	mov    %rsp,%rbp
    f122:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f126:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f12a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    f12e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f132:	48 8b 00             	mov    (%rax),%rax
    f135:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    f139:	eb 10                	jmp    f14b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    f13b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f13f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f143:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f146:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    f14b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f14f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f153:	75 e6                	jne    f13b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    f155:	90                   	nop
    f156:	90                   	nop
    f157:	5d                   	pop    %rbp
    f158:	c3                   	ret

000000000000f159 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f159:	55                   	push   %rbp
    f15a:	48 89 e5             	mov    %rsp,%rbp
    f15d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f161:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f165:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f169:	eb 23                	jmp    f18e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    f16b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f16f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    f173:	48 8b 06             	mov    (%rsi),%rax
    f176:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    f17a:	48 89 01             	mov    %rax,(%rcx)
    f17d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    f181:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f185:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    f189:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    f18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f192:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f196:	75 d3                	jne    f16b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f198:	90                   	nop
    f199:	90                   	nop
    f19a:	5d                   	pop    %rbp
    f19b:	c3                   	ret

000000000000f19c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f19c:	55                   	push   %rbp
    f19d:	48 89 e5             	mov    %rsp,%rbp
    f1a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f1ac:	eb 13                	jmp    f1c1 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    f1ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1b2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f1b6:	48 8b 12             	mov    (%rdx),%rdx
    f1b9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f1bc:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    f1c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1c5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f1c9:	75 e3                	jne    f1ae <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f1cb:	90                   	nop
    f1cc:	90                   	nop
    f1cd:	5d                   	pop    %rbp
    f1ce:	c3                   	ret

000000000000f1cf <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f1cf:	55                   	push   %rbp
    f1d0:	48 89 e5             	mov    %rsp,%rbp
    f1d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f1df:	eb 11                	jmp    f1f2 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    f1e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f1e5:	8b 10                	mov    (%rax),%edx
    f1e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1eb:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    f1ed:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    f1f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f1fa:	75 e5                	jne    f1e1 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f1fc:	90                   	nop
    f1fd:	90                   	nop
    f1fe:	5d                   	pop    %rbp
    f1ff:	c3                   	ret

000000000000f200 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f200:	55                   	push   %rbp
    f201:	48 89 e5             	mov    %rsp,%rbp
    f204:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f208:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f20c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    f210:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f214:	48 8b 00             	mov    (%rax),%rax
    f217:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    f21b:	eb 10                	jmp    f22d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    f21d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f221:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f225:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f228:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    f22d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f231:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f235:	75 e6                	jne    f21d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    f237:	90                   	nop
    f238:	90                   	nop
    f239:	5d                   	pop    %rbp
    f23a:	c3                   	ret

000000000000f23b <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    f23b:	55                   	push   %rbp
    f23c:	48 89 e5             	mov    %rsp,%rbp
    f23f:	53                   	push   %rbx
    f240:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    f244:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f248:	be 00 00 00 00       	mov    $0x0,%esi
    f24d:	48 89 c7             	mov    %rax,%rdi
    f250:	e8 db 63 ff ff       	call   5630 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    f255:	8b 45 c8             	mov    -0x38(%rbp),%eax
    f258:	89 c3                	mov    %eax,%ebx
    f25a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f25e:	48 89 c7             	mov    %rax,%rdi
    f261:	e8 ea b6 ff ff       	call   a950 <_ZNSaI17VkLayerPropertiesEC1Ev>
    f266:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    f26a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f26e:	48 89 de             	mov    %rbx,%rsi
    f271:	48 89 c7             	mov    %rax,%rdi
    f274:	e8 0f b7 ff ff       	call   a988 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    f279:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f27d:	48 89 c7             	mov    %rax,%rdi
    f280:	e8 e7 b6 ff ff       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    f285:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f289:	48 89 c7             	mov    %rax,%rdi
    f28c:	e8 b1 b7 ff ff       	call   aa42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    f291:	48 89 c2             	mov    %rax,%rdx
    f294:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f298:	48 89 d6             	mov    %rdx,%rsi
    f29b:	48 89 c7             	mov    %rax,%rdi
    f29e:	e8 8d 63 ff ff       	call   5630 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    f2a3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f2a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f2ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2af:	48 89 c7             	mov    %rax,%rdi
    f2b2:	e8 63 04 00 00       	call   f71a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    f2b7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f2bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2bf:	48 89 c7             	mov    %rax,%rdi
    f2c2:	e8 79 04 00 00       	call   f740 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    f2c7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f2cb:	eb 5b                	jmp    f328 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    f2cd:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    f2d1:	48 89 c7             	mov    %rax,%rdi
    f2d4:	e8 ef 04 00 00       	call   f7c8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f2d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    f2dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f2e1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f2e5:	48 89 d6             	mov    %rdx,%rsi
    f2e8:	48 89 c7             	mov    %rax,%rdi
    f2eb:	e8 f8 03 00 00       	call   f6e8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    f2f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f2f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f2f8:	48 8b 3d a1 99 02 00 	mov    0x299a1(%rip),%rdi        # 38ca0 <_ZN3vkh19validationLayerNameE>
    f2ff:	48 8b 35 a2 99 02 00 	mov    0x299a2(%rip),%rsi        # 38ca8 <_ZN3vkh19validationLayerNameE+0x8>
    f306:	48 89 d1             	mov    %rdx,%rcx
    f309:	48 89 c2             	mov    %rax,%rdx
    f30c:	e8 da 04 00 00       	call   f7eb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    f311:	84 c0                	test   %al,%al
    f313:	74 07                	je     f31c <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    f315:	bb 01 00 00 00       	mov    $0x1,%ebx
    f31a:	eb 28                	jmp    f344 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    f31c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    f320:	48 89 c7             	mov    %rax,%rdi
    f323:	e8 7c 04 00 00       	call   f7a4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f328:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    f32c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    f330:	48 89 d6             	mov    %rdx,%rsi
    f333:	48 89 c7             	mov    %rax,%rdi
    f336:	e8 2e 04 00 00       	call   f769 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f33b:	84 c0                	test   %al,%al
    f33d:	75 8e                	jne    f2cd <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    f33f:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    f344:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f348:	48 89 c7             	mov    %rax,%rdi
    f34b:	e8 ae b6 ff ff       	call   a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    f350:	89 d8                	mov    %ebx,%eax
    f352:	eb 34                	jmp    f388 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    f354:	48 89 c3             	mov    %rax,%rbx
    f357:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f35b:	48 89 c7             	mov    %rax,%rdi
    f35e:	e8 09 b6 ff ff       	call   a96c <_ZNSaI17VkLayerPropertiesED1Ev>
    f363:	48 89 d8             	mov    %rbx,%rax
    f366:	48 89 c7             	mov    %rax,%rdi
    f369:	e8 92 66 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    f36e:	48 89 c3             	mov    %rax,%rbx
    f371:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f375:	48 89 c7             	mov    %rax,%rdi
    f378:	e8 81 b6 ff ff       	call   a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    f37d:	48 89 d8             	mov    %rbx,%rax
    f380:	48 89 c7             	mov    %rax,%rdi
    f383:	e8 78 66 ff ff       	call   5a00 <_Unwind_Resume@plt>
    f388:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f38c:	c9                   	leave
    f38d:	c3                   	ret

000000000000f38e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    f38e:	55                   	push   %rbp
    f38f:	48 89 e5             	mov    %rsp,%rbp
    f392:	48 83 ec 20          	sub    $0x20,%rsp
    f396:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f399:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f39c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    f3a0:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    f3a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f3a7:	83 f8 01             	cmp    $0x1,%eax
    f3aa:	7e 3c                	jle    f3e8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    f3ac:	be 0a 00 00 00       	mov    $0xa,%esi
    f3b1:	48 8d 05 c8 a1 02 00 	lea    0x2a1c8(%rip),%rax        # 39580 <_ZSt4cerr@GLIBCXX_3.4>
    f3b8:	48 89 c7             	mov    %rax,%rdi
    f3bb:	e8 a0 62 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    f3c0:	48 89 c2             	mov    %rax,%rdx
    f3c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f3c7:	48 8b 40 28          	mov    0x28(%rax),%rax
    f3cb:	48 89 c6             	mov    %rax,%rsi
    f3ce:	48 89 d7             	mov    %rdx,%rdi
    f3d1:	e8 3a 61 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f3d6:	48 8b 15 cb 9b 02 00 	mov    0x29bcb(%rip),%rdx        # 38fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    f3dd:	48 89 d6             	mov    %rdx,%rsi
    f3e0:	48 89 c7             	mov    %rax,%rdi
    f3e3:	e8 a8 61 ff ff       	call   5590 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    f3e8:	b8 00 00 00 00       	mov    $0x0,%eax
}
    f3ed:	c9                   	leave
    f3ee:	c3                   	ret

000000000000f3ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    f3ef:	55                   	push   %rbp
    f3f0:	48 89 e5             	mov    %rsp,%rbp
    f3f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    f3f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f3ff:	0f 11 00             	movups %xmm0,(%rax)
    f402:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    f406:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    f40a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f40e:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    f414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f418:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    f41f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f423:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    f42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f42e:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # f38e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    f435:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    f439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f43d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    f444:	00 
}
    f445:	90                   	nop
    f446:	5d                   	pop    %rbp
    f447:	c3                   	ret

000000000000f448 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    f448:	55                   	push   %rbp
    f449:	48 89 e5             	mov    %rsp,%rbp
    f44c:	48 83 ec 30          	sub    $0x30,%rsp
    f450:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f454:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f458:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f45c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f460:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f464:	48 8d 15 75 65 01 00 	lea    0x16575(%rip),%rdx        # 259e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    f46b:	48 89 d6             	mov    %rdx,%rsi
    f46e:	48 89 c7             	mov    %rax,%rdi
    f471:	e8 5a 60 ff ff       	call   54d0 <vkGetInstanceProcAddr@plt>
    f476:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    f47a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f47f:	75 07                	jne    f488 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    f481:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    f486:	eb 1b                	jmp    f4a3 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    f488:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f48c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f490:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f494:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    f498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f49c:	48 89 c7             	mov    %rax,%rdi
    f49f:	41 ff d0             	call   *%r8
    f4a2:	90                   	nop
}
    f4a3:	c9                   	leave
    f4a4:	c3                   	ret

000000000000f4a5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    f4a5:	55                   	push   %rbp
    f4a6:	48 89 e5             	mov    %rsp,%rbp
    f4a9:	41 54                	push   %r12
    f4ab:	53                   	push   %rbx
    f4ac:	48 83 ec 50          	sub    $0x50,%rsp
    f4b0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    f4b4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f4b8:	48 89 c7             	mov    %rax,%rdi
    f4bb:	e8 2f ff ff ff       	call   f3ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    f4c0:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    f4c7:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    f4c8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    f4cc:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    f4d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4d4:	48 89 d1             	mov    %rdx,%rcx
    f4d7:	ba 00 00 00 00       	mov    $0x0,%edx
    f4dc:	48 89 c7             	mov    %rax,%rdi
    f4df:	e8 64 ff ff ff       	call   f448 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    f4e4:	85 c0                	test   %eax,%eax
    f4e6:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    f4e9:	84 c0                	test   %al,%al
    f4eb:	74 3b                	je     f528 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    f4ed:	bf 10 00 00 00       	mov    $0x10,%edi
    f4f2:	e8 29 5d ff ff       	call   5220 <__cxa_allocate_exception@plt>
    f4f7:	48 89 c3             	mov    %rax,%rbx
    f4fa:	48 8d 05 ff 64 01 00 	lea    0x164ff(%rip),%rax        # 25a00 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    f501:	48 89 c6             	mov    %rax,%rsi
    f504:	48 89 df             	mov    %rbx,%rdi
    f507:	e8 64 5c ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    f50c:	48 8b 05 ad 9a 02 00 	mov    0x29aad(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f513:	48 89 c2             	mov    %rax,%rdx
    f516:	48 8d 05 23 98 02 00 	lea    0x29823(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f51d:	48 89 c6             	mov    %rax,%rsi
    f520:	48 89 df             	mov    %rbx,%rdi
    f523:	e8 68 64 ff ff       	call   5990 <__cxa_throw@plt>
  }
  return debugMessenger;
    f528:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f52c:	eb 16                	jmp    f544 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    f52e:	49 89 c4             	mov    %rax,%r12
    f531:	48 89 df             	mov    %rbx,%rdi
    f534:	e8 17 5e ff ff       	call   5350 <__cxa_free_exception@plt>
    f539:	4c 89 e0             	mov    %r12,%rax
    f53c:	48 89 c7             	mov    %rax,%rdi
    f53f:	e8 bc 64 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    f544:	48 83 c4 50          	add    $0x50,%rsp
    f548:	5b                   	pop    %rbx
    f549:	41 5c                	pop    %r12
    f54b:	5d                   	pop    %rbp
    f54c:	c3                   	ret

000000000000f54d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    f54d:	55                   	push   %rbp
    f54e:	48 89 e5             	mov    %rsp,%rbp
    f551:	48 83 ec 30          	sub    $0x30,%rsp
    f555:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f559:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f55d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f561:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f565:	48 8d 15 b4 64 01 00 	lea    0x164b4(%rip),%rdx        # 25a20 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x68>
    f56c:	48 89 d6             	mov    %rdx,%rsi
    f56f:	48 89 c7             	mov    %rax,%rdi
    f572:	e8 59 5f ff ff       	call   54d0 <vkGetInstanceProcAddr@plt>
    f577:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    f57b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f580:	74 19                	je     f59b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    f582:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f586:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f58a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f58e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f592:	48 89 ce             	mov    %rcx,%rsi
    f595:	48 89 c7             	mov    %rax,%rdi
    f598:	41 ff d0             	call   *%r8
  }
}
    f59b:	90                   	nop
    f59c:	c9                   	leave
    f59d:	c3                   	ret

000000000000f59e <_Z41__static_initialization_and_destruction_0ii>:

    f59e:	55                   	push   %rbp
    f59f:	48 89 e5             	mov    %rsp,%rbp
    f5a2:	48 83 ec 10          	sub    $0x10,%rsp
    f5a6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f5a9:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f5ac:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    f5b0:	75 3b                	jne    f5ed <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f5b2:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    f5b9:	75 32                	jne    f5ed <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f5bb:	48 8d 05 4e a1 02 00 	lea    0x2a14e(%rip),%rax        # 39710 <_ZStL8__ioinit>
    f5c2:	48 89 c7             	mov    %rax,%rdi
    f5c5:	e8 b6 62 ff ff       	call   5880 <_ZNSt8ios_base4InitC1Ev@plt>
    f5ca:	48 8d 05 8f 9f 02 00 	lea    0x29f8f(%rip),%rax        # 39560 <__dso_handle>
    f5d1:	48 89 c2             	mov    %rax,%rdx
    f5d4:	48 8d 05 35 a1 02 00 	lea    0x2a135(%rip),%rax        # 39710 <_ZStL8__ioinit>
    f5db:	48 89 c6             	mov    %rax,%rsi
    f5de:	48 8b 05 fb 99 02 00 	mov    0x299fb(%rip),%rax        # 38fe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    f5e5:	48 89 c7             	mov    %rax,%rdi
    f5e8:	e8 83 5e ff ff       	call   5470 <__cxa_atexit@plt>
    f5ed:	90                   	nop
    f5ee:	c9                   	leave
    f5ef:	c3                   	ret

000000000000f5f0 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    f5f0:	55                   	push   %rbp
    f5f1:	48 89 e5             	mov    %rsp,%rbp
    f5f4:	be ff ff 00 00       	mov    $0xffff,%esi
    f5f9:	bf 01 00 00 00       	mov    $0x1,%edi
    f5fe:	e8 9b ff ff ff       	call   f59e <_Z41__static_initialization_and_destruction_0ii>
    f603:	5d                   	pop    %rbp
    f604:	c3                   	ret

000000000000f605 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    f605:	55                   	push   %rbp
    f606:	48 89 e5             	mov    %rsp,%rbp
    f609:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f60d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    f611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f615:	0f b6 00             	movzbl (%rax),%eax
    f618:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    f61a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f61e:	0f b6 00             	movzbl (%rax),%eax
    f621:	38 c2                	cmp    %al,%dl
    f623:	0f 92 c0             	setb   %al
      }
    f626:	5d                   	pop    %rbp
    f627:	c3                   	ret

000000000000f628 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    f628:	55                   	push   %rbp
    f629:	48 89 e5             	mov    %rsp,%rbp
    f62c:	48 83 ec 30          	sub    $0x30,%rsp
    f630:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f634:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f638:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    f63c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    f641:	75 0a                	jne    f64d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    f643:	b8 00 00 00 00       	mov    $0x0,%eax
    f648:	e9 99 00 00 00       	jmp    f6e6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    f64d:	e8 fb 93 ff ff       	call   8a4d <_ZSt23__is_constant_evaluatedv>
    f652:	84 c0                	test   %al,%al
    f654:	74 78                	je     f6ce <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    f656:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f65d:	00 
    f65e:	eb 5d                	jmp    f6bd <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    f660:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f668:	48 01 c2             	add    %rax,%rdx
    f66b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f66f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f673:	48 01 c8             	add    %rcx,%rax
    f676:	48 89 d6             	mov    %rdx,%rsi
    f679:	48 89 c7             	mov    %rax,%rdi
    f67c:	e8 84 ff ff ff       	call   f605 <_ZNSt11char_traitsIcE2ltERKcS2_>
    f681:	84 c0                	test   %al,%al
    f683:	74 07                	je     f68c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    f685:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f68a:	eb 5a                	jmp    f6e6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    f68c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f694:	48 01 c2             	add    %rax,%rdx
    f697:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f69b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f69f:	48 01 c8             	add    %rcx,%rax
    f6a2:	48 89 d6             	mov    %rdx,%rsi
    f6a5:	48 89 c7             	mov    %rax,%rdi
    f6a8:	e8 58 ff ff ff       	call   f605 <_ZNSt11char_traitsIcE2ltERKcS2_>
    f6ad:	84 c0                	test   %al,%al
    f6af:	74 07                	je     f6b8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    f6b1:	b8 01 00 00 00       	mov    $0x1,%eax
    f6b6:	eb 2e                	jmp    f6e6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    f6b8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    f6bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6c1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    f6c5:	72 99                	jb     f660 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    f6c7:	b8 00 00 00 00       	mov    $0x0,%eax
    f6cc:	eb 18                	jmp    f6e6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    f6ce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f6d2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f6d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6da:	48 89 ce             	mov    %rcx,%rsi
    f6dd:	48 89 c7             	mov    %rax,%rdi
    f6e0:	e8 1b 5b ff ff       	call   5200 <memcmp@plt>
    f6e5:	90                   	nop
      }
    f6e6:	c9                   	leave
    f6e7:	c3                   	ret

000000000000f6e8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    f6e8:	55                   	push   %rbp
    f6e9:	48 89 e5             	mov    %rsp,%rbp
    f6ec:	48 83 ec 10          	sub    $0x10,%rsp
    f6f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    f6f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f6fc:	48 89 c7             	mov    %rax,%rdi
    f6ff:	e8 54 93 ff ff       	call   8a58 <_ZNSt11char_traitsIcE6lengthEPKc>
    f704:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f708:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    f70b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f70f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f713:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    f717:	90                   	nop
    f718:	c9                   	leave
    f719:	c3                   	ret

000000000000f71a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    f71a:	55                   	push   %rbp
    f71b:	48 89 e5             	mov    %rsp,%rbp
    f71e:	48 83 ec 20          	sub    $0x20,%rsp
    f722:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    f726:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f72a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f72e:	48 89 d6             	mov    %rdx,%rsi
    f731:	48 89 c7             	mov    %rax,%rdi
    f734:	e8 27 01 00 00       	call   f860 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    f739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f73d:	c9                   	leave
    f73e:	c3                   	ret
    f73f:	90                   	nop

000000000000f740 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    f740:	55                   	push   %rbp
    f741:	48 89 e5             	mov    %rsp,%rbp
    f744:	48 83 ec 20          	sub    $0x20,%rsp
    f748:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    f74c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f750:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f754:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f758:	48 89 d6             	mov    %rdx,%rsi
    f75b:	48 89 c7             	mov    %rax,%rdi
    f75e:	e8 fd 00 00 00       	call   f860 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    f763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f767:	c9                   	leave
    f768:	c3                   	ret

000000000000f769 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    f769:	55                   	push   %rbp
    f76a:	48 89 e5             	mov    %rsp,%rbp
    f76d:	53                   	push   %rbx
    f76e:	48 83 ec 18          	sub    $0x18,%rsp
    f772:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f776:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    f77a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f77e:	48 89 c7             	mov    %rax,%rdi
    f781:	e8 f8 00 00 00       	call   f87e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    f786:	48 8b 18             	mov    (%rax),%rbx
    f789:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f78d:	48 89 c7             	mov    %rax,%rdi
    f790:	e8 e9 00 00 00       	call   f87e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    f795:	48 8b 00             	mov    (%rax),%rax
    f798:	48 39 c3             	cmp    %rax,%rbx
    f79b:	0f 95 c0             	setne  %al
    f79e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f7a2:	c9                   	leave
    f7a3:	c3                   	ret

000000000000f7a4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    f7a4:	55                   	push   %rbp
    f7a5:	48 89 e5             	mov    %rsp,%rbp
    f7a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    f7ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7b0:	48 8b 00             	mov    (%rax),%rax
    f7b3:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    f7ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7be:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    f7c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    f7c5:	5d                   	pop    %rbp
    f7c6:	c3                   	ret
    f7c7:	90                   	nop

000000000000f7c8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    f7c8:	55                   	push   %rbp
    f7c9:	48 89 e5             	mov    %rsp,%rbp
    f7cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    f7d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7d4:	48 8b 00             	mov    (%rax),%rax
    f7d7:	5d                   	pop    %rbp
    f7d8:	c3                   	ret
    f7d9:	90                   	nop

000000000000f7da <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    f7da:	55                   	push   %rbp
    f7db:	48 89 e5             	mov    %rsp,%rbp
    f7de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    f7e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7e6:	48 8b 00             	mov    (%rax),%rax
    f7e9:	5d                   	pop    %rbp
    f7ea:	c3                   	ret

000000000000f7eb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    f7eb:	55                   	push   %rbp
    f7ec:	48 89 e5             	mov    %rsp,%rbp
    f7ef:	53                   	push   %rbx
    f7f0:	48 83 ec 28          	sub    $0x28,%rsp
    f7f4:	48 89 f0             	mov    %rsi,%rax
    f7f7:	49 89 f8             	mov    %rdi,%r8
    f7fa:	4c 89 c6             	mov    %r8,%rsi
    f7fd:	4c 89 cf             	mov    %r9,%rdi
    f800:	48 89 c7             	mov    %rax,%rdi
    f803:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f807:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f80b:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    f80f:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    f813:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f817:	48 89 c7             	mov    %rax,%rdi
    f81a:	e8 bb ff ff ff       	call   f7da <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    f81f:	48 89 c3             	mov    %rax,%rbx
    f822:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f826:	48 89 c7             	mov    %rax,%rdi
    f829:	e8 ac ff ff ff       	call   f7da <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    f82e:	48 39 c3             	cmp    %rax,%rbx
    f831:	75 22                	jne    f855 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    f833:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f837:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f83b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f83f:	48 89 ce             	mov    %rcx,%rsi
    f842:	48 89 c7             	mov    %rax,%rdi
    f845:	e8 42 00 00 00       	call   f88c <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    f84a:	85 c0                	test   %eax,%eax
    f84c:	75 07                	jne    f855 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    f84e:	b8 01 00 00 00       	mov    $0x1,%eax
    f853:	eb 05                	jmp    f85a <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    f855:	b8 00 00 00 00       	mov    $0x0,%eax
    f85a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f85e:	c9                   	leave
    f85f:	c3                   	ret

000000000000f860 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f860:	55                   	push   %rbp
    f861:	48 89 e5             	mov    %rsp,%rbp
    f864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f86c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f870:	48 8b 10             	mov    (%rax),%rdx
    f873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f877:	48 89 10             	mov    %rdx,(%rax)
    f87a:	90                   	nop
    f87b:	5d                   	pop    %rbp
    f87c:	c3                   	ret
    f87d:	90                   	nop

000000000000f87e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f87e:	55                   	push   %rbp
    f87f:	48 89 e5             	mov    %rsp,%rbp
    f882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f88a:	5d                   	pop    %rbp
    f88b:	c3                   	ret

000000000000f88c <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    f88c:	55                   	push   %rbp
    f88d:	48 89 e5             	mov    %rsp,%rbp
    f890:	48 83 ec 30          	sub    $0x30,%rsp
    f894:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f898:	48 89 d1             	mov    %rdx,%rcx
    f89b:	48 89 f0             	mov    %rsi,%rax
    f89e:	48 89 fa             	mov    %rdi,%rdx
    f8a1:	48 89 ca             	mov    %rcx,%rdx
    f8a4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f8a8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    f8ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8b0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f8b4:	48 89 d6             	mov    %rdx,%rsi
    f8b7:	48 89 c7             	mov    %rax,%rdi
    f8ba:	e8 d2 75 ff ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
    f8bf:	48 8b 00             	mov    (%rax),%rax
    f8c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    f8c6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f8ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8ce:	48 8b 40 08          	mov    0x8(%rax),%rax
    f8d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f8d6:	48 89 ce             	mov    %rcx,%rsi
    f8d9:	48 89 c7             	mov    %rax,%rdi
    f8dc:	e8 47 fd ff ff       	call   f628 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    f8e1:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    f8e4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    f8e8:	75 19                	jne    f903 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    f8ea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f8ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8f2:	48 8b 00             	mov    (%rax),%rax
    f8f5:	48 89 d6             	mov    %rdx,%rsi
    f8f8:	48 89 c7             	mov    %rax,%rdi
    f8fb:	e8 08 00 00 00       	call   f908 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    f900:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    f903:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    f906:	c9                   	leave
    f907:	c3                   	ret

000000000000f908 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    f908:	55                   	push   %rbp
    f909:	48 89 e5             	mov    %rsp,%rbp
    f90c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f910:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    f914:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f918:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    f91c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    f920:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f925:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    f929:	7c 07                	jl     f932 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    f92b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    f930:	eb 1b                	jmp    f94d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    f932:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    f939:	ff ff ff 
    f93c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    f940:	7f 07                	jg     f949 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    f942:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f947:	eb 04                	jmp    f94d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    f949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    f94d:	5d                   	pop    %rbp
    f94e:	c3                   	ret
    f94f:	90                   	nop

000000000000f950 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    f950:	55                   	push   %rbp
    f951:	48 89 e5             	mov    %rsp,%rbp
    f954:	48 83 ec 10          	sub    $0x10,%rsp
    f958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    f95c:	e8 ef 5c ff ff       	call   5650 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    f961:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f967:	b9 00 00 00 00       	mov    $0x0,%ecx
    f96c:	48 8d 05 55 67 01 00 	lea    0x16755(%rip),%rax        # 260c8 <_ZN9__gnu_cxxL21__default_lock_policyE+0x4>
    f973:	48 89 c2             	mov    %rax,%rdx
    f976:	be 58 02 00 00       	mov    $0x258,%esi
    f97b:	bf 20 03 00 00       	mov    $0x320,%edi
    f980:	e8 de 86 ff ff       	call   8063 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    f985:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f989:	48 89 02             	mov    %rax,(%rdx)
  glfwSetWindowUserPointer(window, this);
    f98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f990:	48 8b 00             	mov    (%rax),%rax
    f993:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f997:	48 89 d6             	mov    %rdx,%rsi
    f99a:	48 89 c7             	mov    %rax,%rdi
    f99d:	e8 9e 58 ff ff       	call   5240 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    f9a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9a6:	48 8b 00             	mov    (%rax),%rax
    f9a9:	48 8d 15 28 23 00 00 	lea    0x2328(%rip),%rdx        # 11cd8 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>
    f9b0:	48 89 d6             	mov    %rdx,%rsi
    f9b3:	48 89 c7             	mov    %rax,%rdi
    f9b6:	e8 a5 5e ff ff       	call   5860 <glfwSetFramebufferSizeCallback@plt>
}
    f9bb:	90                   	nop
    f9bc:	c9                   	leave
    f9bd:	c3                   	ret

000000000000f9be <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    f9be:	55                   	push   %rbp
    f9bf:	48 89 e5             	mov    %rsp,%rbp
    f9c2:	53                   	push   %rbx
    f9c3:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    f9ca:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    f9d1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f9d5:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    f9d9:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    f9dd:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    f9e1:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    f9e8:	48 8d 05 d9 66 01 00 	lea    0x166d9(%rip),%rax        # 260c8 <_ZN9__gnu_cxxL21__default_lock_policyE+0x4>
    f9ef:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    f9f3:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    f9fa:	48 8d 05 da 66 01 00 	lea    0x166da(%rip),%rax        # 260db <_ZN9__gnu_cxxL21__default_lock_policyE+0x17>
    fa01:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    fa05:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    fa0c:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    fa13:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    fa17:	48 89 c7             	mov    %rax,%rdi
    fa1a:	e8 4f a1 ff ff       	call   9b6e <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    fa1f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    fa23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    fa27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa2b:	48 89 c7             	mov    %rax,%rdi
    fa2e:	e8 c3 62 00 00       	call   15cf6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    fa33:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    fa3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa3e:	48 89 c7             	mov    %rax,%rdi
    fa41:	e8 d6 62 00 00       	call   15d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fa46:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    fa4d:	eb 3c                	jmp    fa8b <_ZN9VulkanApp14createInstanceEv+0xcd>
    fa4f:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    fa56:	48 89 c7             	mov    %rax,%rdi
    fa59:	e8 42 63 00 00       	call   15da0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fa5e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    fa62:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    fa69:	48 8d 50 10          	lea    0x10(%rax),%rdx
    fa6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fa71:	48 89 c6             	mov    %rax,%rsi
    fa74:	48 89 d7             	mov    %rdx,%rdi
    fa77:	e8 36 63 00 00       	call   15db2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    fa7c:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    fa83:	48 89 c7             	mov    %rax,%rdi
    fa86:	e8 f5 62 00 00       	call   15d80 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    fa8b:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    fa92:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    fa99:	48 89 d6             	mov    %rdx,%rsi
    fa9c:	48 89 c7             	mov    %rax,%rdi
    fa9f:	e8 a1 62 00 00       	call   15d45 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    faa4:	84 c0                	test   %al,%al
    faa6:	75 a7                	jne    fa4f <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    faa8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    faac:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    fab3:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    faba:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    fabe:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fac5:	48 89 c7             	mov    %rax,%rdi
    fac8:	e8 22 f9 ff ff       	call   f3ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    facd:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    fad4:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    fad7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fade:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    fae5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fae9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    faf0:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    faf7:	48 83 c0 28          	add    $0x28,%rax
    fafb:	48 89 c7             	mov    %rax,%rdi
    fafe:	e8 53 63 00 00       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fb03:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    fb09:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    fb10:	48 83 c0 28          	add    $0x28,%rax
    fb14:	48 89 c7             	mov    %rax,%rdi
    fb17:	e8 5e 63 00 00       	call   15e7a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    fb1c:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    fb23:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    fb2a:	48 83 c0 10          	add    $0x10,%rax
    fb2e:	48 89 c7             	mov    %rax,%rdi
    fb31:	e8 20 63 00 00       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    fb36:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    fb3c:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    fb43:	48 83 c0 10          	add    $0x10,%rax
    fb47:	48 89 c7             	mov    %rax,%rdi
    fb4a:	e8 4f 63 00 00       	call   15e9e <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fb4f:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    fb56:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fb5d:	be 00 00 00 00       	mov    $0x0,%esi
    fb62:	48 89 c7             	mov    %rax,%rdi
    fb65:	e8 40 85 ff ff       	call   80aa <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    fb6a:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    fb71:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    fb75:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    fb79:	48 89 c7             	mov    %rax,%rdi
    fb7c:	e8 31 61 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fb81:	eb 1a                	jmp    fb9d <_ZN9VulkanApp14createInstanceEv+0x1df>
    fb83:	48 89 c3             	mov    %rax,%rbx
    fb86:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    fb8a:	48 89 c7             	mov    %rax,%rdi
    fb8d:	e8 20 61 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fb92:	48 89 d8             	mov    %rbx,%rax
    fb95:	48 89 c7             	mov    %rax,%rdi
    fb98:	e8 63 5e ff ff       	call   5a00 <_Unwind_Resume@plt>
    fb9d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fba1:	c9                   	leave
    fba2:	c3                   	ret
    fba3:	90                   	nop

000000000000fba4 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    fba4:	55                   	push   %rbp
    fba5:	48 89 e5             	mov    %rsp,%rbp
    fba8:	41 54                	push   %r12
    fbaa:	53                   	push   %rbx
    fbab:	48 83 ec 10          	sub    $0x10,%rsp
    fbaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    fbb3:	e8 83 f6 ff ff       	call   f23b <_ZN3vkh27checkValidationLayerSupportEv>
    fbb8:	0f b6 c0             	movzbl %al,%eax
    fbbb:	85 c0                	test   %eax,%eax
    fbbd:	0f 94 c0             	sete   %al
    fbc0:	84 c0                	test   %al,%al
    fbc2:	74 3b                	je     fbff <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    fbc4:	bf 10 00 00 00       	mov    $0x10,%edi
    fbc9:	e8 52 56 ff ff       	call   5220 <__cxa_allocate_exception@plt>
    fbce:	48 89 c3             	mov    %rax,%rbx
    fbd1:	48 8d 05 10 65 01 00 	lea    0x16510(%rip),%rax        # 260e8 <_ZN9__gnu_cxxL21__default_lock_policyE+0x24>
    fbd8:	48 89 c6             	mov    %rax,%rsi
    fbdb:	48 89 df             	mov    %rbx,%rdi
    fbde:	e8 8d 55 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
    fbe3:	48 8b 05 d6 93 02 00 	mov    0x293d6(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fbea:	48 89 c2             	mov    %rax,%rdx
    fbed:	48 8d 05 4c 91 02 00 	lea    0x2914c(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fbf4:	48 89 c6             	mov    %rax,%rsi
    fbf7:	48 89 df             	mov    %rbx,%rdi
    fbfa:	e8 91 5d ff ff       	call   5990 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    fbff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc03:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc07:	48 89 c7             	mov    %rax,%rdi
    fc0a:	e8 96 f8 ff ff       	call   f4a5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    fc0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fc13:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    fc17:	eb 16                	jmp    fc2f <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    fc19:	49 89 c4             	mov    %rax,%r12
    fc1c:	48 89 df             	mov    %rbx,%rdi
    fc1f:	e8 2c 57 ff ff       	call   5350 <__cxa_free_exception@plt>
    fc24:	4c 89 e0             	mov    %r12,%rax
    fc27:	48 89 c7             	mov    %rax,%rdi
    fc2a:	e8 d1 5d ff ff       	call   5a00 <_Unwind_Resume@plt>
}
    fc2f:	48 83 c4 10          	add    $0x10,%rsp
    fc33:	5b                   	pop    %rbx
    fc34:	41 5c                	pop    %r12
    fc36:	5d                   	pop    %rbp
    fc37:	c3                   	ret

000000000000fc38 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    fc38:	55                   	push   %rbp
    fc39:	48 89 e5             	mov    %rsp,%rbp
    fc3c:	48 83 ec 10          	sub    $0x10,%rsp
    fc40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    fc44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc48:	48 8b 08             	mov    (%rax),%rcx
    fc4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc4f:	48 8b 40 08          	mov    0x8(%rax),%rax
    fc53:	ba 00 00 00 00       	mov    $0x0,%edx
    fc58:	48 89 ce             	mov    %rcx,%rsi
    fc5b:	48 89 c7             	mov    %rax,%rdi
    fc5e:	e8 72 85 ff ff       	call   81d5 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    fc63:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fc67:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    fc6b:	90                   	nop
    fc6c:	c9                   	leave
    fc6d:	c3                   	ret

000000000000fc6e <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    fc6e:	55                   	push   %rbp
    fc6f:	48 89 e5             	mov    %rsp,%rbp
    fc72:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    fc79:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    fc80:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    fc87:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    fc8e:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    fc95:	48 89 d6             	mov    %rdx,%rsi
    fc98:	48 89 c7             	mov    %rax,%rdi
    fc9b:	e8 9b a1 ff ff       	call   9e3b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    fca0:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    fca6:	83 f8 02             	cmp    $0x2,%eax
    fca9:	0f 94 c0             	sete   %al
}
    fcac:	c9                   	leave
    fcad:	c3                   	ret

000000000000fcae <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    fcae:	55                   	push   %rbp
    fcaf:	48 89 e5             	mov    %rsp,%rbp
    fcb2:	53                   	push   %rbx
    fcb3:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    fcba:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    fcc1:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    fcc8:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    fccf:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fcd3:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    fcda:	48 89 d6             	mov    %rdx,%rsi
    fcdd:	48 89 c7             	mov    %rax,%rdi
    fce0:	e8 7f a2 ff ff       	call   9f64 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    fce5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fce9:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    fcf0:	48 89 d6             	mov    %rdx,%rsi
    fcf3:	48 89 c7             	mov    %rax,%rdi
    fcf6:	e8 9d a3 ff ff       	call   a098 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    fcfb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    fd02:	48 8b 50 48          	mov    0x48(%rax),%rdx
    fd06:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fd0d:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    fd14:	48 89 ce             	mov    %rcx,%rsi
    fd17:	48 89 c7             	mov    %rax,%rdi
    fd1a:	e8 b2 a4 ff ff       	call   a1d1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    fd1f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    fd26:	00 
    fd27:	e9 c5 00 00 00       	jmp    fdf1 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    fd2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd30:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fd34:	48 89 d6             	mov    %rdx,%rsi
    fd37:	48 89 c7             	mov    %rax,%rdi
    fd3a:	e8 b7 b4 ff ff       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    fd3f:	48 89 c7             	mov    %rax,%rdi
    fd42:	e8 a9 61 00 00       	call   15ef0 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    fd47:	84 c0                	test   %al,%al
    fd49:	74 48                	je     fd93 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    fd4b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd4f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fd53:	48 89 d6             	mov    %rdx,%rsi
    fd56:	48 89 c7             	mov    %rax,%rdi
    fd59:	e8 98 b4 ff ff       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    fd5e:	48 89 c7             	mov    %rax,%rdi
    fd61:	e8 8a 61 00 00       	call   15ef0 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    fd66:	84 c0                	test   %al,%al
    fd68:	74 29                	je     fd93 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    fd6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd6e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fd75:	48 89 d6             	mov    %rdx,%rsi
    fd78:	48 89 c7             	mov    %rax,%rdi
    fd7b:	e8 76 b4 ff ff       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    fd80:	48 89 c7             	mov    %rax,%rdi
    fd83:	e8 68 61 00 00       	call   15ef0 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    fd88:	84 c0                	test   %al,%al
    fd8a:	74 07                	je     fd93 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    fd8c:	b8 01 00 00 00       	mov    $0x1,%eax
    fd91:	eb 05                	jmp    fd98 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    fd93:	b8 00 00 00 00       	mov    $0x0,%eax
    fd98:	84 c0                	test   %al,%al
    fd9a:	74 50                	je     fdec <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    fd9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fda0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    fda3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fda7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fdab:	48 89 d6             	mov    %rdx,%rsi
    fdae:	48 89 c7             	mov    %rax,%rdi
    fdb1:	e8 40 b4 ff ff       	call   b1f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    fdb6:	48 89 c7             	mov    %rax,%rdi
    fdb9:	e8 4c 61 00 00       	call   15f0a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    fdbe:	48 89 c2             	mov    %rax,%rdx
    fdc1:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    fdc5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fdc9:	48 89 ce             	mov    %rcx,%rsi
    fdcc:	48 89 c7             	mov    %rax,%rdi
    fdcf:	e8 68 61 00 00       	call   15f3c <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    fdd4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    fdd8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fddf:	48 89 d6             	mov    %rdx,%rsi
    fde2:	48 89 c7             	mov    %rax,%rdi
    fde5:	e8 a8 61 00 00       	call   15f92 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    fdea:	eb 2f                	jmp    fe1b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    fdec:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    fdf1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fdf5:	48 89 c7             	mov    %rax,%rdi
    fdf8:	e8 c5 60 00 00       	call   15ec2 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    fdfd:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    fe01:	0f 92 c0             	setb   %al
    fe04:	84 c0                	test   %al,%al
    fe06:	0f 85 20 ff ff ff    	jne    fd2c <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    fe0c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fe13:	48 89 c7             	mov    %rax,%rdi
    fe16:	e8 c1 57 00 00       	call   155dc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    fe1b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fe22:	48 89 c7             	mov    %rax,%rdi
    fe25:	e8 cc b2 ff ff       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    fe2a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fe2e:	48 89 c7             	mov    %rax,%rdi
    fe31:	e8 c0 b2 ff ff       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    fe36:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fe3a:	48 89 c7             	mov    %rax,%rdi
    fe3d:	e8 b4 b2 ff ff       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    fe42:	eb 3f                	jmp    fe83 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    fe44:	48 89 c3             	mov    %rax,%rbx
    fe47:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    fe4e:	48 89 c7             	mov    %rax,%rdi
    fe51:	e8 a0 b2 ff ff       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    fe56:	eb 03                	jmp    fe5b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    fe58:	48 89 c3             	mov    %rax,%rbx
    fe5b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fe5f:	48 89 c7             	mov    %rax,%rdi
    fe62:	e8 8f b2 ff ff       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    fe67:	eb 03                	jmp    fe6c <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    fe69:	48 89 c3             	mov    %rax,%rbx
    fe6c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fe70:	48 89 c7             	mov    %rax,%rdi
    fe73:	e8 7e b2 ff ff       	call   b0f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    fe78:	48 89 d8             	mov    %rbx,%rax
    fe7b:	48 89 c7             	mov    %rax,%rdi
    fe7e:	e8 7d 5b ff ff       	call   5a00 <_Unwind_Resume@plt>
    fe83:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    fe8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fe8e:	c9                   	leave
    fe8f:	c3                   	ret

000000000000fe90 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    fe90:	55                   	push   %rbp
    fe91:	48 89 e5             	mov    %rsp,%rbp
    fe94:	41 54                	push   %r12
    fe96:	53                   	push   %rbx
    fe97:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    fe9e:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    fea5:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    feac:	48 8b 50 08          	mov    0x8(%rax),%rdx
    feb0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    feb4:	48 89 d6             	mov    %rdx,%rsi
    feb7:	48 89 c7             	mov    %rax,%rdi
    feba:	e8 0d 9e ff ff       	call   9ccc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    febf:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    fec6:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    fec7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fecb:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    fecf:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    fed3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    fed7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    fedb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fedf:	48 89 c7             	mov    %rax,%rdi
    fee2:	e8 df 60 00 00       	call   15fc6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    fee7:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    feee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fef2:	48 89 c7             	mov    %rax,%rdi
    fef5:	e8 f2 60 00 00       	call   15fec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    fefa:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    ff01:	e9 dd 00 00 00       	jmp    ffe3 <_ZN9VulkanApp12createDeviceEv+0x153>
    ff06:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    ff0d:	48 89 c7             	mov    %rax,%rdi
    ff10:	e8 5b 61 00 00       	call   16070 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    ff15:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    ff19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff1d:	48 8b 10             	mov    (%rax),%rdx
    ff20:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ff27:	48 89 d6             	mov    %rdx,%rsi
    ff2a:	48 89 c7             	mov    %rax,%rdi
    ff2d:	e8 3c fd ff ff       	call   fc6e <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    ff32:	84 c0                	test   %al,%al
    ff34:	74 41                	je     ff77 <_ZN9VulkanApp12createDeviceEv+0xe7>
    ff36:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff3a:	48 8b 10             	mov    (%rax),%rdx
    ff3d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ff44:	48 89 d6             	mov    %rdx,%rsi
    ff47:	48 89 c7             	mov    %rax,%rdi
    ff4a:	e8 f9 02 00 00       	call   10248 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    ff4f:	84 c0                	test   %al,%al
    ff51:	74 24                	je     ff77 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    ff53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff57:	48 8b 10             	mov    (%rax),%rdx
    ff5a:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    ff61:	48 89 d6             	mov    %rdx,%rsi
    ff64:	48 89 c7             	mov    %rax,%rdi
    ff67:	e8 16 06 00 00       	call   10582 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    ff6c:	84 c0                	test   %al,%al
    ff6e:	74 07                	je     ff77 <_ZN9VulkanApp12createDeviceEv+0xe7>
    ff70:	b8 01 00 00 00       	mov    $0x1,%eax
    ff75:	eb 05                	jmp    ff7c <_ZN9VulkanApp12createDeviceEv+0xec>
    ff77:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    ff7c:	84 c0                	test   %al,%al
    ff7e:	74 54                	je     ffd4 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    ff80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff84:	48 8b 10             	mov    (%rax),%rdx
    ff87:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    ff8e:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    ff95:	48 89 ce             	mov    %rcx,%rsi
    ff98:	48 89 c7             	mov    %rax,%rdi
    ff9b:	e8 0e fd ff ff       	call   fcae <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    ffa0:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    ffa7:	48 89 c7             	mov    %rax,%rdi
    ffaa:	e8 d3 60 00 00       	call   16082 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    ffaf:	84 c0                	test   %al,%al
    ffb1:	74 21                	je     ffd4 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    ffb3:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    ffba:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ffbe:	48 89 d6             	mov    %rdx,%rsi
    ffc1:	48 89 c7             	mov    %rax,%rdi
    ffc4:	e8 65 56 00 00       	call   1562e <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    ffc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ffcd:	48 8b 00             	mov    (%rax),%rax
    ffd0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    ffd4:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    ffdb:	48 89 c7             	mov    %rax,%rdi
    ffde:	e8 6d 60 00 00       	call   16050 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    ffe3:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    ffea:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    fff1:	48 89 d6             	mov    %rdx,%rsi
    fff4:	48 89 c7             	mov    %rax,%rdi
    fff7:	e8 19 60 00 00       	call   16015 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fffc:	84 c0                	test   %al,%al
    fffe:	0f 85 02 ff ff ff    	jne    ff06 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
   10004:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   10009:	75 3b                	jne    10046 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
   1000b:	bf 10 00 00 00       	mov    $0x10,%edi
   10010:	e8 0b 52 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   10015:	48 89 c3             	mov    %rax,%rbx
   10018:	48 8d 05 f1 60 01 00 	lea    0x160f1(%rip),%rax        # 26110 <_ZN9__gnu_cxxL21__default_lock_policyE+0x4c>
   1001f:	48 89 c6             	mov    %rax,%rsi
   10022:	48 89 df             	mov    %rbx,%rdi
   10025:	e8 46 51 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   1002a:	48 8b 05 8f 8f 02 00 	mov    0x28f8f(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10031:	48 89 c2             	mov    %rax,%rdx
   10034:	48 8d 05 05 8d 02 00 	lea    0x28d05(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1003b:	48 89 c6             	mov    %rax,%rsi
   1003e:	48 89 df             	mov    %rbx,%rdi
   10041:	e8 4a 59 ff ff       	call   5990 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
   10046:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1004a:	48 89 c7             	mov    %rax,%rdi
   1004d:	e8 06 56 00 00       	call   15658 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
   10052:	8b 00                	mov    (%rax),%eax
   10054:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
   10057:	f3 0f 10 05 8d 6a 01 	movss  0x16a8d(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1005e:	00 
   1005f:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
   10064:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10068:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
   1006f:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   10076:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
   1007b:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
   10082:	00 00 00 
  queueInfo.pNext = nullptr;
   10085:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   1008c:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
   10090:	8b 45 dc             	mov    -0x24(%rbp),%eax
   10093:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
   10099:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
   100a0:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
   100a3:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
   100a7:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
   100ab:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
   100b2:	b8 00 00 00 00       	mov    $0x0,%eax
   100b7:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   100bc:	48 89 d7             	mov    %rdx,%rdi
   100bf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   100c2:	48 89 fa             	mov    %rdi,%rdx
   100c5:	89 02                	mov    %eax,(%rdx)
   100c7:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
   100cb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   100cf:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
   100d6:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
   100dd:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
   100e4:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
   100eb:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
   100f2:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
   100f3:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
   100fa:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
   100fd:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
   10104:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
   10108:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
   1010f:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
   10112:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10119:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
   10120:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   10127:	48 05 90 00 00 00    	add    $0x90,%rax
   1012d:	48 89 c7             	mov    %rax,%rdi
   10130:	e8 21 5d 00 00       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
   10135:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
   1013b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   10142:	48 05 90 00 00 00    	add    $0x90,%rax
   10148:	48 89 c7             	mov    %rax,%rdi
   1014b:	e8 4e 5d 00 00       	call   15e9e <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
   10150:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
   10157:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
   1015e:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
   10165:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   1016c:	48 83 c0 28          	add    $0x28,%rax
   10170:	48 89 c7             	mov    %rax,%rdi
   10173:	e8 de 5c 00 00       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
   10178:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
   1017e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   10185:	48 83 c0 28          	add    $0x28,%rax
   10189:	48 89 c7             	mov    %rax,%rdi
   1018c:	e8 e9 5c 00 00       	call   15e7a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
   10191:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
   10198:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
   1019f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   101a3:	ba 00 00 00 00       	mov    $0x0,%edx
   101a8:	48 89 ce             	mov    %rcx,%rsi
   101ab:	48 89 c7             	mov    %rax,%rdi
   101ae:	e8 8a 7f ff ff       	call   813d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
   101b3:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
   101ba:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
   101be:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   101c5:	48 8d 50 60          	lea    0x60(%rax),%rdx
   101c9:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   101d0:	48 8b 40 50          	mov    0x50(%rax),%rax
   101d4:	8b 75 dc             	mov    -0x24(%rbp),%esi
   101d7:	48 89 d1             	mov    %rdx,%rcx
   101da:	ba 00 00 00 00       	mov    $0x0,%edx
   101df:	48 89 c7             	mov    %rax,%rdi
   101e2:	e8 69 55 ff ff       	call   5750 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
   101e7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   101ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   101f2:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
   101f6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
   101fd:	8b 55 dc             	mov    -0x24(%rbp),%edx
   10200:	89 50 68             	mov    %edx,0x68(%rax)
}
   10203:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10207:	48 89 c7             	mov    %rax,%rdi
   1020a:	e8 e7 ab ff ff       	call   adf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   1020f:	eb 2a                	jmp    1023b <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
   10211:	49 89 c4             	mov    %rax,%r12
   10214:	48 89 df             	mov    %rbx,%rdi
   10217:	e8 34 51 ff ff       	call   5350 <__cxa_free_exception@plt>
   1021c:	4c 89 e3             	mov    %r12,%rbx
   1021f:	eb 03                	jmp    10224 <_ZN9VulkanApp12createDeviceEv+0x394>
}
   10221:	48 89 c3             	mov    %rax,%rbx
   10224:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   10228:	48 89 c7             	mov    %rax,%rdi
   1022b:	e8 c6 ab ff ff       	call   adf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   10230:	48 89 d8             	mov    %rbx,%rax
   10233:	48 89 c7             	mov    %rax,%rdi
   10236:	e8 c5 57 ff ff       	call   5a00 <_Unwind_Resume@plt>
   1023b:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
   10242:	5b                   	pop    %rbx
   10243:	41 5c                	pop    %r12
   10245:	5d                   	pop    %rbp
   10246:	c3                   	ret
   10247:	90                   	nop

0000000000010248 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
   10248:	55                   	push   %rbp
   10249:	48 89 e5             	mov    %rsp,%rbp
   1024c:	53                   	push   %rbx
   1024d:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   10254:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
   1025b:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
   10262:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   10269:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
   10270:	ba 00 00 00 00       	mov    $0x0,%edx
   10275:	48 89 ce             	mov    %rcx,%rsi
   10278:	48 89 c7             	mov    %rax,%rdi
   1027b:	e8 77 97 ff ff       	call   99f7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
   10280:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   10287:	48 89 c7             	mov    %rax,%rdi
   1028a:	e8 45 54 00 00       	call   156d4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
   1028f:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   10296:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1029a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1029e:	48 89 c7             	mov    %rax,%rdi
   102a1:	e8 f2 5e 00 00       	call   16198 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   102a6:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   102ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102b1:	48 89 c7             	mov    %rax,%rdi
   102b4:	e8 05 5f 00 00       	call   161be <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   102b9:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   102c0:	e9 8c 00 00 00       	jmp    10351 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
   102c5:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
   102cc:	48 89 c7             	mov    %rax,%rdi
   102cf:	e8 72 5f 00 00       	call   16246 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   102d4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
   102d8:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   102df:	48 89 c7             	mov    %rax,%rdi
   102e2:	e8 29 57 ff ff       	call   5a10 <_ZNSaIcEC1Ev@plt>
   102e7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   102eb:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   102f2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   102f9:	48 89 ce             	mov    %rcx,%rsi
   102fc:	48 89 c7             	mov    %rax,%rdi
   102ff:	e8 86 58 00 00       	call   15b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   10304:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   1030b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   10312:	48 89 d6             	mov    %rdx,%rsi
   10315:	48 89 c7             	mov    %rax,%rdi
   10318:	e8 3b 5f 00 00       	call   16258 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
   1031d:	8b 10                	mov    (%rax),%edx
   1031f:	83 c2 01             	add    $0x1,%edx
   10322:	89 10                	mov    %edx,(%rax)
   10324:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1032b:	48 89 c7             	mov    %rax,%rdi
   1032e:	e8 b5 57 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10333:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1033a:	48 89 c7             	mov    %rax,%rdi
   1033d:	e8 8e 52 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
   10342:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
   10349:	48 89 c7             	mov    %rax,%rdi
   1034c:	e8 d1 5e 00 00       	call   16222 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10351:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
   10358:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
   1035f:	48 89 d6             	mov    %rdx,%rsi
   10362:	48 89 c7             	mov    %rax,%rdi
   10365:	e8 7d 5e 00 00       	call   161e7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1036a:	84 c0                	test   %al,%al
   1036c:	0f 85 53 ff ff ff    	jne    102c5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
   10372:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
   10379:	48 05 90 00 00 00    	add    $0x90,%rax
   1037f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10383:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10387:	48 89 c7             	mov    %rax,%rdi
   1038a:	e8 67 59 00 00       	call   15cf6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1038f:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   10396:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1039a:	48 89 c7             	mov    %rax,%rdi
   1039d:	e8 7a 59 00 00       	call   15d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   103a2:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   103a9:	e9 ed 00 00 00       	jmp    1049b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
   103ae:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
   103b5:	48 89 c7             	mov    %rax,%rdi
   103b8:	e8 e3 59 00 00       	call   15da0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   103bd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
   103c1:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   103c5:	48 89 c7             	mov    %rax,%rdi
   103c8:	e8 43 56 ff ff       	call   5a10 <_ZNSaIcEC1Ev@plt>
   103cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   103d1:	48 8b 08             	mov    (%rax),%rcx
   103d4:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
   103d8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   103df:	48 89 ce             	mov    %rcx,%rsi
   103e2:	48 89 c7             	mov    %rax,%rdi
   103e5:	e8 a0 57 00 00       	call   15b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   103ea:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   103f1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   103f8:	48 89 d6             	mov    %rdx,%rsi
   103fb:	48 89 c7             	mov    %rax,%rdi
   103fe:	e8 55 5e 00 00       	call   16258 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
   10403:	8b 10                	mov    (%rax),%edx
   10405:	83 c2 01             	add    $0x1,%edx
   10408:	89 10                	mov    %edx,(%rax)
   1040a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   10411:	48 89 c7             	mov    %rax,%rdi
   10414:	e8 cf 56 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10419:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   1041d:	48 89 c7             	mov    %rax,%rdi
   10420:	e8 ab 51 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
   10425:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10429:	48 89 c7             	mov    %rax,%rdi
   1042c:	e8 df 55 ff ff       	call   5a10 <_ZNSaIcEC1Ev@plt>
   10431:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10435:	48 8b 08             	mov    (%rax),%rcx
   10438:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
   1043c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10440:	48 89 ce             	mov    %rcx,%rsi
   10443:	48 89 c7             	mov    %rax,%rdi
   10446:	e8 3f 57 00 00       	call   15b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   1044b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   1044f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   10456:	48 89 d6             	mov    %rdx,%rsi
   10459:	48 89 c7             	mov    %rax,%rdi
   1045c:	e8 f7 5d 00 00       	call   16258 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
   10461:	8b 00                	mov    (%rax),%eax
   10463:	83 f8 01             	cmp    $0x1,%eax
   10466:	0f 96 c3             	setbe  %bl
   10469:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1046d:	48 89 c7             	mov    %rax,%rdi
   10470:	e8 73 56 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10475:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   10479:	48 89 c7             	mov    %rax,%rdi
   1047c:	e8 4f 51 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
   10481:	84 db                	test   %bl,%bl
   10483:	74 07                	je     1048c <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
   10485:	bb 00 00 00 00       	mov    $0x0,%ebx
   1048a:	eb 35                	jmp    104c1 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
   1048c:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
   10493:	48 89 c7             	mov    %rax,%rdi
   10496:	e8 e5 58 00 00       	call   15d80 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   1049b:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
   104a2:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
   104a9:	48 89 d6             	mov    %rdx,%rsi
   104ac:	48 89 c7             	mov    %rax,%rdi
   104af:	e8 91 58 00 00       	call   15d45 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   104b4:	84 c0                	test   %al,%al
   104b6:	0f 85 f2 fe ff ff    	jne    103ae <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
   104bc:	bb 01 00 00 00       	mov    $0x1,%ebx
}
   104c1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   104c8:	48 89 c7             	mov    %rax,%rdi
   104cb:	e8 20 52 00 00       	call   156f0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
   104d0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   104d7:	48 89 c7             	mov    %rax,%rdi
   104da:	e8 8d a6 ff ff       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   104df:	89 d8                	mov    %ebx,%eax
   104e1:	e9 96 00 00 00       	jmp    1057c <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
   104e6:	48 89 c3             	mov    %rax,%rbx
   104e9:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   104f0:	48 89 c7             	mov    %rax,%rdi
   104f3:	e8 f0 55 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   104f8:	eb 03                	jmp    104fd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
   104fa:	48 89 c3             	mov    %rax,%rbx
   104fd:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   10504:	48 89 c7             	mov    %rax,%rdi
   10507:	e8 c4 50 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
   1050c:	eb 45                	jmp    10553 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
   1050e:	48 89 c3             	mov    %rax,%rbx
   10511:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   10518:	48 89 c7             	mov    %rax,%rdi
   1051b:	e8 c8 55 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10520:	eb 03                	jmp    10525 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
   10522:	48 89 c3             	mov    %rax,%rbx
   10525:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   10529:	48 89 c7             	mov    %rax,%rdi
   1052c:	e8 9f 50 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
   10531:	eb 20                	jmp    10553 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
   10533:	48 89 c3             	mov    %rax,%rbx
   10536:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1053a:	48 89 c7             	mov    %rax,%rdi
   1053d:	e8 a6 55 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10542:	eb 03                	jmp    10547 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
   10544:	48 89 c3             	mov    %rax,%rbx
   10547:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   1054b:	48 89 c7             	mov    %rax,%rdi
   1054e:	e8 7d 50 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
}
   10553:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1055a:	48 89 c7             	mov    %rax,%rdi
   1055d:	e8 8e 51 00 00       	call   156f0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
   10562:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   10569:	48 89 c7             	mov    %rax,%rdi
   1056c:	e8 fb a5 ff ff       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10571:	48 89 d8             	mov    %rbx,%rax
   10574:	48 89 c7             	mov    %rax,%rdi
   10577:	e8 84 54 ff ff       	call   5a00 <_Unwind_Resume@plt>
   1057c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10580:	c9                   	leave
   10581:	c3                   	ret

0000000000010582 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
   10582:	55                   	push   %rbp
   10583:	48 89 e5             	mov    %rsp,%rbp
   10586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1058a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
   1058e:	b8 01 00 00 00       	mov    $0x1,%eax
}
   10593:	5d                   	pop    %rbp
   10594:	c3                   	ret
   10595:	90                   	nop

0000000000010596 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
   10596:	55                   	push   %rbp
   10597:	48 89 e5             	mov    %rsp,%rbp
   1059a:	41 54                	push   %r12
   1059c:	53                   	push   %rbx
   1059d:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   105a4:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   105ab:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
   105b2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   105b9:	48 8b 50 48          	mov    0x48(%rax),%rdx
   105bd:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   105c4:	48 8b 48 58          	mov    0x58(%rax),%rcx
   105c8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   105cc:	48 89 ce             	mov    %rcx,%rsi
   105cf:	48 89 c7             	mov    %rax,%rdi
   105d2:	e8 6a 9d ff ff       	call   a341 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
   105d7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   105de:	48 8b 50 48          	mov    0x48(%rax),%rdx
   105e2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   105e9:	48 8b 48 58          	mov    0x58(%rax),%rcx
   105ed:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   105f4:	48 89 ce             	mov    %rcx,%rsi
   105f7:	48 89 c7             	mov    %rax,%rdi
   105fa:	e8 f0 9d ff ff       	call   a3ef <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
   105ff:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   10606:	48 8b 50 48          	mov    0x48(%rax),%rdx
   1060a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   10611:	48 8b 48 58          	mov    0x58(%rax),%rcx
   10615:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1061c:	48 89 ce             	mov    %rcx,%rsi
   1061f:	48 89 c7             	mov    %rax,%rdi
   10622:	e8 3f 9f ff ff       	call   a566 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
   10627:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1062e:	48 89 c6             	mov    %rax,%rsi
   10631:	b8 00 00 00 00       	mov    $0x0,%eax
   10636:	ba 0d 00 00 00       	mov    $0xd,%edx
   1063b:	48 89 f7             	mov    %rsi,%rdi
   1063e:	48 89 d1             	mov    %rdx,%rcx
   10641:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
   10644:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1064b:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
   10651:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10658:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1065f:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
   10660:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   10667:	48 8b 50 48          	mov    0x48(%rax),%rdx
   1066b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10672:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
   10676:	8b 45 80             	mov    -0x80(%rbp),%eax
   10679:	83 c0 01             	add    $0x1,%eax
   1067c:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
   1067f:	8b 45 84             	mov    -0x7c(%rbp),%eax
   10682:	85 c0                	test   %eax,%eax
   10684:	74 0e                	je     10694 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
   10686:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
   10689:	3b 45 ec             	cmp    -0x14(%rbp),%eax
   1068c:	73 06                	jae    10694 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
   1068e:	8b 45 84             	mov    -0x7c(%rbp),%eax
   10691:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
   10694:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1069b:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1069e:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
   106a1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   106a8:	48 89 c7             	mov    %rax,%rdi
   106ab:	e8 ac 5c 00 00       	call   1635c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
   106b0:	84 c0                	test   %al,%al
   106b2:	74 3b                	je     106ef <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
   106b4:	bf 10 00 00 00       	mov    $0x10,%edi
   106b9:	e8 62 4b ff ff       	call   5220 <__cxa_allocate_exception@plt>
   106be:	48 89 c3             	mov    %rax,%rbx
   106c1:	48 8d 05 6c 5a 01 00 	lea    0x15a6c(%rip),%rax        # 26134 <_ZN9__gnu_cxxL21__default_lock_policyE+0x70>
   106c8:	48 89 c6             	mov    %rax,%rsi
   106cb:	48 89 df             	mov    %rbx,%rdi
   106ce:	e8 9d 4a ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   106d3:	48 8b 05 e6 88 02 00 	mov    0x288e6(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   106da:	48 89 c2             	mov    %rax,%rdx
   106dd:	48 8d 05 5c 86 02 00 	lea    0x2865c(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   106e4:	48 89 c6             	mov    %rax,%rsi
   106e7:	48 89 df             	mov    %rbx,%rdi
   106ea:	e8 a1 52 ff ff       	call   5990 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
   106ef:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   106f6:	be 00 00 00 00       	mov    $0x0,%esi
   106fb:	48 89 c7             	mov    %rax,%rdi
   106fe:	e8 9b 5c 00 00       	call   1639e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
   10703:	8b 10                	mov    (%rax),%edx
   10705:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1070c:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
   1070f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10716:	be 00 00 00 00       	mov    $0x0,%esi
   1071b:	48 89 c7             	mov    %rax,%rdi
   1071e:	e8 7b 5c 00 00       	call   1639e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
   10723:	8b 50 04             	mov    0x4(%rax),%edx
   10726:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1072d:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
   10730:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10737:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1073b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1073f:	48 89 c7             	mov    %rax,%rdi
   10742:	e8 77 5c 00 00       	call   163be <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   10747:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1074e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10752:	48 89 c7             	mov    %rax,%rdi
   10755:	e8 8a 5c 00 00       	call   163e4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   1075a:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   10761:	eb 5b                	jmp    107be <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
   10763:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
   1076a:	48 89 c7             	mov    %rax,%rdi
   1076d:	e8 f6 5c 00 00       	call   16468 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
   10772:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
   10776:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1077a:	8b 00                	mov    (%rax),%eax
   1077c:	83 f8 2b             	cmp    $0x2b,%eax
   1077f:	75 2e                	jne    107af <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
   10781:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10785:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
   10788:	85 c0                	test   %eax,%eax
   1078a:	75 23                	jne    107af <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
   1078c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10790:	8b 10                	mov    (%rax),%edx
   10792:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10799:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
   1079c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   107a0:	8b 50 04             	mov    0x4(%rax),%edx
   107a3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   107aa:	89 50 28             	mov    %edx,0x28(%rax)
      break;
   107ad:	eb 2c                	jmp    107db <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
   107af:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
   107b6:	48 89 c7             	mov    %rax,%rdi
   107b9:	e8 8a 5c 00 00       	call   16448 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
   107be:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   107c5:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
   107cc:	48 89 d6             	mov    %rdx,%rsi
   107cf:	48 89 c7             	mov    %rax,%rdi
   107d2:	e8 36 5c 00 00       	call   1640d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   107d7:	84 c0                	test   %al,%al
   107d9:	75 88                	jne    10763 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
   107db:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   107e2:	8b 50 24             	mov    0x24(%rax),%edx
   107e5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   107ec:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
   107ef:	8b 45 88             	mov    -0x78(%rbp),%eax
   107f2:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
   107f5:	8b 45 8c             	mov    -0x74(%rbp),%eax
   107f8:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
   107fb:	8b 45 98             	mov    -0x68(%rbp),%eax
   107fe:	3b 45 e8             	cmp    -0x18(%rbp),%eax
   10801:	73 06                	jae    10809 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
   10803:	8b 45 98             	mov    -0x68(%rbp),%eax
   10806:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
   10809:	8b 45 9c             	mov    -0x64(%rbp),%eax
   1080c:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
   1080f:	73 06                	jae    10817 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
   10811:	8b 45 9c             	mov    -0x64(%rbp),%eax
   10814:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
   10817:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1081e:	8b 55 e8             	mov    -0x18(%rbp),%edx
   10821:	89 50 2c             	mov    %edx,0x2c(%rax)
   10824:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1082b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1082e:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
   10831:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   10838:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1083f:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
   10843:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
   10847:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1084e:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
   10855:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1085c:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  // auto  = VK_PRESENT_MODE_IMMEDIATE_KHR;
  for (const auto &presentMode : surfacePresentModes) {
   10863:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1086a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1086e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10872:	48 89 c7             	mov    %rax,%rdi
   10875:	e8 00 5c 00 00       	call   1647a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
   1087a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   10881:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10885:	48 89 c7             	mov    %rax,%rdi
   10888:	e8 13 5c 00 00       	call   164a0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
   1088d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   10894:	eb 52                	jmp    108e8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x352>
   10896:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
   1089d:	48 89 c7             	mov    %rax,%rdi
   108a0:	e8 7f 5c 00 00       	call   16524 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
   108a5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    if (presentMode == preferredPresentMode) {
   108a9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   108ad:	8b 10                	mov    (%rax),%edx
   108af:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   108b6:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
   108bc:	39 c2                	cmp    %eax,%edx
   108be:	75 19                	jne    108d9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
      swapchainCreateInfo.presentMode = preferredPresentMode;
   108c0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   108c7:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
   108cd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   108d4:	89 50 58             	mov    %edx,0x58(%rax)
      break;
   108d7:	eb 2c                	jmp    10905 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x36f>
  for (const auto &presentMode : surfacePresentModes) {
   108d9:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
   108e0:	48 89 c7             	mov    %rax,%rdi
   108e3:	e8 1c 5c 00 00       	call   16504 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
   108e8:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
   108ef:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
   108f6:	48 89 d6             	mov    %rdx,%rsi
   108f9:	48 89 c7             	mov    %rax,%rdi
   108fc:	e8 c8 5b 00 00       	call   164c9 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   10901:	84 c0                	test   %al,%al
   10903:	75 91                	jne    10896 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x300>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
   10905:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1090c:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
   10913:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1091a:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
   10921:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10928:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
   1092f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10936:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   1093d:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
   1093e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   10941:	83 e0 01             	and    $0x1,%eax
   10944:	85 c0                	test   %eax,%eax
   10946:	74 1e                	je     10966 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d0>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
   10948:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1094f:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
   10956:	8b 45 ac             	mov    -0x54(%rbp),%eax
   10959:	83 e0 01             	and    $0x1,%eax
   1095c:	85 c0                	test   %eax,%eax
   1095e:	0f 84 9b 00 00 00    	je     109ff <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x469>
   10964:	eb 3b                	jmp    109a1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x40b>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
   10966:	bf 10 00 00 00       	mov    $0x10,%edi
   1096b:	e8 b0 48 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   10970:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
   10973:	48 8d 05 de 57 01 00 	lea    0x157de(%rip),%rax        # 26158 <_ZN9__gnu_cxxL21__default_lock_policyE+0x94>
   1097a:	48 89 c6             	mov    %rax,%rsi
   1097d:	48 89 df             	mov    %rbx,%rdi
   10980:	e8 eb 47 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
   10985:	48 8b 05 34 86 02 00 	mov    0x28634(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1098c:	48 89 c2             	mov    %rax,%rdx
   1098f:	48 8d 05 aa 83 02 00 	lea    0x283aa(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10996:	48 89 c6             	mov    %rax,%rsi
   10999:	48 89 df             	mov    %rbx,%rdi
   1099c:	e8 ef 4f ff ff       	call   5990 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
   109a1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   109a8:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
   109af:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   109b6:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
   109bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   109c4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   109cb:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
   109cc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   109d3:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
   109da:	00 

  return swapchainCreateInfo;
   109db:	90                   	nop
}
   109dc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   109e3:	48 89 c7             	mov    %rax,%rdi
   109e6:	e8 1f ab ff ff       	call   b50a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
   109eb:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   109f2:	48 89 c7             	mov    %rax,%rdi
   109f5:	e8 ac a9 ff ff       	call   b3a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
   109fa:	e9 9c 00 00 00       	jmp    10a9b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x505>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
   109ff:	bf 10 00 00 00       	mov    $0x10,%edi
   10a04:	e8 17 48 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   10a09:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
   10a0c:	48 8d 05 7d 57 01 00 	lea    0x1577d(%rip),%rax        # 26190 <_ZN9__gnu_cxxL21__default_lock_policyE+0xcc>
   10a13:	48 89 c6             	mov    %rax,%rsi
   10a16:	48 89 df             	mov    %rbx,%rdi
   10a19:	e8 52 47 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
   10a1e:	48 8b 05 9b 85 02 00 	mov    0x2859b(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10a25:	48 89 c2             	mov    %rax,%rdx
   10a28:	48 8d 05 11 83 02 00 	lea    0x28311(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10a2f:	48 89 c6             	mov    %rax,%rsi
   10a32:	48 89 df             	mov    %rbx,%rdi
   10a35:	e8 56 4f ff ff       	call   5990 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
   10a3a:	49 89 c4             	mov    %rax,%r12
   10a3d:	48 89 df             	mov    %rbx,%rdi
   10a40:	e8 0b 49 ff ff       	call   5350 <__cxa_free_exception@plt>
   10a45:	4c 89 e3             	mov    %r12,%rbx
   10a48:	eb 23                	jmp    10a6d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
   10a4a:	49 89 c4             	mov    %rax,%r12
   10a4d:	48 89 df             	mov    %rbx,%rdi
   10a50:	e8 fb 48 ff ff       	call   5350 <__cxa_free_exception@plt>
   10a55:	4c 89 e3             	mov    %r12,%rbx
   10a58:	eb 13                	jmp    10a6d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
   10a5a:	49 89 c4             	mov    %rax,%r12
   10a5d:	48 89 df             	mov    %rbx,%rdi
   10a60:	e8 eb 48 ff ff       	call   5350 <__cxa_free_exception@plt>
   10a65:	4c 89 e3             	mov    %r12,%rbx
   10a68:	eb 03                	jmp    10a6d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4d7>
}
   10a6a:	48 89 c3             	mov    %rax,%rbx
   10a6d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10a74:	48 89 c7             	mov    %rax,%rdi
   10a77:	e8 8e aa ff ff       	call   b50a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
   10a7c:	eb 03                	jmp    10a81 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4eb>
   10a7e:	48 89 c3             	mov    %rax,%rbx
   10a81:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   10a88:	48 89 c7             	mov    %rax,%rdi
   10a8b:	e8 16 a9 ff ff       	call   b3a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
   10a90:	48 89 d8             	mov    %rbx,%rax
   10a93:	48 89 c7             	mov    %rax,%rdi
   10a96:	e8 65 4f ff ff       	call   5a00 <_Unwind_Resume@plt>
   10a9b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   10aa2:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
   10aa9:	5b                   	pop    %rbx
   10aaa:	41 5c                	pop    %r12
   10aac:	5d                   	pop    %rbp
   10aad:	c3                   	ret

0000000000010aae <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
   10aae:	55                   	push   %rbp
   10aaf:	48 89 e5             	mov    %rsp,%rbp
   10ab2:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   10ab6:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
   10aba:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10abe:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10ac2:	48 89 d6             	mov    %rdx,%rsi
   10ac5:	48 89 c7             	mov    %rax,%rdi
   10ac8:	e8 c9 fa ff ff       	call   10596 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
   10acd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   10ad1:	48 8b 40 50          	mov    0x50(%rax),%rax
   10ad5:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   10ad9:	ba 00 00 00 00       	mov    $0x0,%edx
   10ade:	48 89 ce             	mov    %rcx,%rsi
   10ae1:	48 89 c7             	mov    %rax,%rdi
   10ae4:	e8 84 77 ff ff       	call   826d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
   10ae9:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   10aed:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
   10af1:	90                   	nop
   10af2:	c9                   	leave
   10af3:	c3                   	ret

0000000000010af4 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
   10af4:	55                   	push   %rbp
   10af5:	48 89 e5             	mov    %rsp,%rbp
   10af8:	53                   	push   %rbx
   10af9:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   10b00:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
   10b07:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10b0e:	48 8b 50 70          	mov    0x70(%rax),%rdx
   10b12:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10b19:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10b1d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10b21:	48 89 ce             	mov    %rcx,%rsi
   10b24:	48 89 c7             	mov    %rax,%rdi
   10b27:	e8 b1 9b ff ff       	call   a6dd <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
   10b2c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10b33:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
   10b3a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10b3e:	48 89 c6             	mov    %rax,%rsi
   10b41:	48 89 d7             	mov    %rdx,%rdi
   10b44:	e8 ed 59 00 00       	call   16536 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
   10b49:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10b4d:	48 89 c7             	mov    %rax,%rdi
   10b50:	e8 19 ab ff ff       	call   b66e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
   10b55:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10b5c:	48 05 c0 00 00 00    	add    $0xc0,%rax
   10b62:	48 89 c7             	mov    %rax,%rdi
   10b65:	e8 04 5a 00 00       	call   1656e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   10b6a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
   10b6e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10b75:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
   10b7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b80:	48 89 c6             	mov    %rax,%rsi
   10b83:	48 89 d7             	mov    %rdx,%rdi
   10b86:	e8 07 5a 00 00       	call   16592 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
   10b8b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10b92:	00 
   10b93:	e9 f1 00 00 00       	jmp    10c89 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
   10b98:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10b9c:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   10ba3:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
   10ba7:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   10bab:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   10baf:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
   10bb3:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
   10bba:	00 00 00 
    imageViewInfo.pNext = nullptr;
   10bbd:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
   10bc4:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
   10bc8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10bcf:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
   10bd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bda:	48 89 c6             	mov    %rax,%rsi
   10bdd:	48 89 d7             	mov    %rdx,%rdi
   10be0:	e8 33 5a 00 00       	call   16618 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
   10be5:	48 8b 00             	mov    (%rax),%rax
   10be8:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
   10bec:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
   10bf3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10bfa:	8b 40 78             	mov    0x78(%rax),%eax
   10bfd:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
   10c00:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
   10c07:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
   10c0e:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
   10c15:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
   10c1c:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
   10c23:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
   10c2a:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
   10c31:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
   10c38:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
   10c3f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10c46:	48 8b 40 50          	mov    0x50(%rax),%rax
   10c4a:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
   10c51:	ba 00 00 00 00       	mov    $0x0,%edx
   10c56:	48 89 ce             	mov    %rcx,%rsi
   10c59:	48 89 c7             	mov    %rax,%rdi
   10c5c:	e8 ac 76 ff ff       	call   830d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
   10c61:	48 89 c3             	mov    %rax,%rbx
   10c64:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   10c6b:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
   10c72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c76:	48 89 c6             	mov    %rax,%rsi
   10c79:	48 89 d7             	mov    %rdx,%rdi
   10c7c:	e8 b7 59 00 00       	call   16638 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
   10c81:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
   10c84:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   10c89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c8d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10c91:	0f 82 01 ff ff ff    	jb     10b98 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
   10c97:	90                   	nop
   10c98:	90                   	nop
   10c99:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10c9d:	c9                   	leave
   10c9e:	c3                   	ret
   10c9f:	90                   	nop

0000000000010ca0 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
   10ca0:	55                   	push   %rbp
   10ca1:	48 89 e5             	mov    %rsp,%rbp
   10ca4:	41 55                	push   %r13
   10ca6:	41 54                	push   %r12
   10ca8:	53                   	push   %rbx
   10ca9:	48 81 ec 58 05 00 00 	sub    $0x558,%rsp
   10cb0:	48 89 bd 98 fa ff ff 	mov    %rdi,-0x568(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
   10cb7:	48 c7 85 d0 fe ff ff 	movq   $0x0,-0x130(%rbp)
   10cbe:	00 00 00 00 
   10cc2:	48 c7 85 d8 fe ff ff 	movq   $0x0,-0x128(%rbp)
   10cc9:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(
      device, vkh::absoluteDirectory + "/build/shaders/"
   10ccd:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   10cd4:	48 8d 15 ed 54 01 00 	lea    0x154ed(%rip),%rdx        # 261c8 <_ZN9__gnu_cxxL21__default_lock_policyE+0x104>
   10cdb:	48 8d 0d be 89 02 00 	lea    0x289be(%rip),%rcx        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
   10ce2:	48 89 ce             	mov    %rcx,%rsi
   10ce5:	48 89 c7             	mov    %rax,%rdi
   10ce8:	e8 c1 54 ff ff       	call   61ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
  shaderModule.vertex = vkh::createShaderModule(
   10ced:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   10cf4:	48 8b 40 50          	mov    0x50(%rax),%rax
   10cf8:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
   10cff:	ba 00 00 00 00       	mov    $0x0,%edx
   10d04:	48 89 ce             	mov    %rcx,%rsi
   10d07:	48 89 c7             	mov    %rax,%rdi
   10d0a:	e8 6e 77 ff ff       	call   847d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
   10d0f:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
      device, vkh::absoluteDirectory + "/build/shaders/"
   10d16:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   10d1d:	48 89 c7             	mov    %rax,%rdi
   10d20:	e8 c3 4d ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
                                       "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(
      device, vkh::absoluteDirectory + "/build/shaders/"
   10d25:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   10d2c:	48 8d 15 bd 54 01 00 	lea    0x154bd(%rip),%rdx        # 261f0 <_ZN9__gnu_cxxL21__default_lock_policyE+0x12c>
   10d33:	48 8d 0d 66 89 02 00 	lea    0x28966(%rip),%rcx        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
   10d3a:	48 89 ce             	mov    %rcx,%rsi
   10d3d:	48 89 c7             	mov    %rax,%rdi
   10d40:	e8 69 54 ff ff       	call   61ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
  shaderModule.fragment = vkh::createShaderModule(
   10d45:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   10d4c:	48 8b 40 50          	mov    0x50(%rax),%rax
   10d50:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx
   10d57:	ba 00 00 00 00       	mov    $0x0,%edx
   10d5c:	48 89 ce             	mov    %rcx,%rsi
   10d5f:	48 89 c7             	mov    %rax,%rdi
   10d62:	e8 16 77 ff ff       	call   847d <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
   10d67:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
      device, vkh::absoluteDirectory + "/build/shaders/"
   10d6e:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   10d75:	48 89 c7             	mov    %rax,%rdi
   10d78:	e8 6b 4d ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
                                       "triangle_frag.spv");

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
   10d7d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10d81:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
   10d88:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   10d8f:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
  vertShaderStageInfo.sType =
   10d96:	c7 85 a0 fe ff ff 12 	movl   $0x12,-0x160(%rbp)
   10d9d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
   10da0:	c7 85 b4 fe ff ff 01 	movl   $0x1,-0x14c(%rbp)
   10da7:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
   10daa:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
   10db1:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
  vertShaderStageInfo.pName = "main";
   10db8:	48 8d 05 52 54 01 00 	lea    0x15452(%rip),%rax        # 26211 <_ZN9__gnu_cxxL21__default_lock_policyE+0x14d>
   10dbf:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
   10dc6:	48 c7 85 c8 fe ff ff 	movq   $0x0,-0x138(%rbp)
   10dcd:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
   10dd1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10dd5:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
   10ddc:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
   10de3:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
  fragShaderStageInfo.sType =
   10dea:	c7 85 70 fe ff ff 12 	movl   $0x12,-0x190(%rbp)
   10df1:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
   10df4:	c7 85 84 fe ff ff 10 	movl   $0x10,-0x17c(%rbp)
   10dfb:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
   10dfe:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   10e05:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
  fragShaderStageInfo.pName = "main";
   10e0c:	48 8d 05 fe 53 01 00 	lea    0x153fe(%rip),%rax        # 26211 <_ZN9__gnu_cxxL21__default_lock_policyE+0x14d>
   10e13:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
   10e1a:	48 c7 85 98 fe ff ff 	movq   $0x0,-0x168(%rbp)
   10e21:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
   10e25:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   10e2c:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
   10e33:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
   10e3a:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
   10e41:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
   10e48:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
   10e4f:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
   10e56:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
   10e5d:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
   10e64:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
   10e6b:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
   10e72:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
   10e79:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   10e80:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
   10e87:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
   10e8e:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)
   10e95:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
   10e9c:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
   10ea3:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
   10eaa:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
   10eb1:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
   10eb8:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
   10ebf:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
   10ec6:	48 89 95 68 fe ff ff 	mov    %rdx,-0x198(%rbp)

  /*  */
  auto bindingDescription = vkh::Vertex2D_RGB::getBindingDescription();
   10ecd:	e8 86 57 00 00       	call   16658 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>
   10ed2:	48 89 85 04 fe ff ff 	mov    %rax,-0x1fc(%rbp)
   10ed9:	8b 85 0c fe ff ff    	mov    -0x1f4(%rbp),%eax
   10edf:	83 e0 00             	and    $0x0,%eax
   10ee2:	09 d0                	or     %edx,%eax
   10ee4:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%rbp)
  auto attributeDescriptions = vkh::Vertex2D_RGB::getAttributeDescriptions();
   10eea:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
   10ef1:	48 89 c7             	mov    %rax,%rdi
   10ef4:	e8 a1 57 00 00       	call   1669a <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>

  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
   10ef9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10efd:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
   10f04:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
   10f0b:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
  vertInputInfo.sType =
   10f12:	c7 85 b0 fd ff ff 13 	movl   $0x13,-0x250(%rbp)
   10f19:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 1;
   10f1c:	c7 85 c4 fd ff ff 01 	movl   $0x1,-0x23c(%rbp)
   10f23:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = &bindingDescription;
   10f26:	48 8d 85 04 fe ff ff 	lea    -0x1fc(%rbp),%rax
   10f2d:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)
  vertInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
   10f34:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
   10f3b:	48 89 c7             	mov    %rax,%rdi
   10f3e:	e8 37 58 00 00       	call   1677a <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertInputInfo.vertexAttributeDescriptionCount =
   10f43:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%rbp)
  vertInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
   10f49:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
   10f50:	48 89 c7             	mov    %rax,%rdi
   10f53:	e8 b4 47 00 00       	call   1570c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
   10f58:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
   10f5f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10f63:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
   10f6a:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
  inputAssemblyInfo.sType =
   10f71:	c7 85 90 fd ff ff 14 	movl   $0x14,-0x270(%rbp)
   10f78:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
   10f7b:	c7 85 a4 fd ff ff 03 	movl   $0x3,-0x25c(%rbp)
   10f82:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
   10f85:	c7 85 a8 fd ff ff 00 	movl   $0x0,-0x258(%rbp)
   10f8c:	00 00 00 

  /*  */
  VkViewport viewport{};
   10f8f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10f93:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
   10f9a:	66 0f d6 85 80 fd ff 	movq   %xmm0,-0x280(%rbp)
   10fa1:	ff 
  viewport.x = 0.0f;
   10fa2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10fa6:	f3 0f 11 85 70 fd ff 	movss  %xmm0,-0x290(%rbp)
   10fad:	ff 
  viewport.y = 0.0f;
   10fae:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10fb2:	f3 0f 11 85 74 fd ff 	movss  %xmm0,-0x28c(%rbp)
   10fb9:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
   10fba:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   10fc1:	8b 40 7c             	mov    0x7c(%rax),%eax
   10fc4:	89 c0                	mov    %eax,%eax
   10fc6:	48 85 c0             	test   %rax,%rax
   10fc9:	78 0b                	js     10fd6 <_ZN9VulkanApp22createGraphicsPipelineEv+0x336>
   10fcb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10fcf:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
   10fd4:	eb 19                	jmp    10fef <_ZN9VulkanApp22createGraphicsPipelineEv+0x34f>
   10fd6:	48 89 c2             	mov    %rax,%rdx
   10fd9:	48 d1 ea             	shr    %rdx
   10fdc:	83 e0 01             	and    $0x1,%eax
   10fdf:	48 09 c2             	or     %rax,%rdx
   10fe2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10fe6:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
   10feb:	f3 0f 58 c0          	addss  %xmm0,%xmm0
   10fef:	f3 0f 11 85 78 fd ff 	movss  %xmm0,-0x288(%rbp)
   10ff6:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
   10ff7:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   10ffe:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   11004:	89 c0                	mov    %eax,%eax
   11006:	48 85 c0             	test   %rax,%rax
   11009:	78 0b                	js     11016 <_ZN9VulkanApp22createGraphicsPipelineEv+0x376>
   1100b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1100f:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
   11014:	eb 19                	jmp    1102f <_ZN9VulkanApp22createGraphicsPipelineEv+0x38f>
   11016:	48 89 c2             	mov    %rax,%rdx
   11019:	48 d1 ea             	shr    %rdx
   1101c:	83 e0 01             	and    $0x1,%eax
   1101f:	48 09 c2             	or     %rax,%rdx
   11022:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11026:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
   1102b:	f3 0f 58 c0          	addss  %xmm0,%xmm0
   1102f:	f3 0f 11 85 7c fd ff 	movss  %xmm0,-0x284(%rbp)
   11036:	ff 
  viewport.minDepth = 0.0f;
   11037:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1103b:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
   11042:	ff 
  viewport.maxDepth = 1.0f;
   11043:	f3 0f 10 05 a1 5a 01 	movss  0x15aa1(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1104a:	00 
   1104b:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
   11052:	ff 

  VkRect2D scissor{};
   11053:	48 c7 85 60 fd ff ff 	movq   $0x0,-0x2a0(%rbp)
   1105a:	00 00 00 00 
   1105e:	48 c7 85 68 fd ff ff 	movq   $0x0,-0x298(%rbp)
   11065:	00 00 00 00 
  scissor.offset = {0, 0};
   11069:	c7 85 60 fd ff ff 00 	movl   $0x0,-0x2a0(%rbp)
   11070:	00 00 00 
   11073:	c7 85 64 fd ff ff 00 	movl   $0x0,-0x29c(%rbp)
   1107a:	00 00 00 
  scissor.extent = swapchain.extent;
   1107d:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   11084:	48 8b 40 7c          	mov    0x7c(%rax),%rax
   11088:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
   1108f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11093:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
   1109a:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
   110a1:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
  viewportStateInfo.sType =
   110a8:	c7 85 30 fd ff ff 16 	movl   $0x16,-0x2d0(%rbp)
   110af:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
   110b2:	c7 85 44 fd ff ff 01 	movl   $0x1,-0x2bc(%rbp)
   110b9:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
   110bc:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
   110c3:	48 89 85 48 fd ff ff 	mov    %rax,-0x2b8(%rbp)
  viewportStateInfo.scissorCount = 1;
   110ca:	c7 85 50 fd ff ff 01 	movl   $0x1,-0x2b0(%rbp)
   110d1:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
   110d4:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
   110db:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
   110e2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   110e6:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
   110ed:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
   110f4:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
   110fb:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
  rastStateInfo.sType =
   11102:	c7 85 f0 fc ff ff 17 	movl   $0x17,-0x310(%rbp)
   11109:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
   1110c:	48 c7 85 f8 fc ff ff 	movq   $0x0,-0x308(%rbp)
   11113:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
   11117:	c7 85 04 fd ff ff 00 	movl   $0x0,-0x2fc(%rbp)
   1111e:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
   11121:	c7 85 08 fd ff ff 00 	movl   $0x0,-0x2f8(%rbp)
   11128:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
   1112b:	c7 85 0c fd ff ff 00 	movl   $0x0,-0x2f4(%rbp)
   11132:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
   11135:	f3 0f 10 05 af 59 01 	movss  0x159af(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1113c:	00 
   1113d:	f3 0f 11 85 28 fd ff 	movss  %xmm0,-0x2d8(%rbp)
   11144:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
   11145:	c7 85 10 fd ff ff 02 	movl   $0x2,-0x2f0(%rbp)
   1114c:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE;
   1114f:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
   11156:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
   11159:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
   11160:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
   11163:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11167:	f3 0f 11 85 1c fd ff 	movss  %xmm0,-0x2e4(%rbp)
   1116e:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
   1116f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11173:	f3 0f 11 85 20 fd ff 	movss  %xmm0,-0x2e0(%rbp)
   1117a:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
   1117b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1117f:	f3 0f 11 85 24 fd ff 	movss  %xmm0,-0x2dc(%rbp)
   11186:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
   11187:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1118b:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
   11192:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
   11199:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
  multisampleStateInfo.sType =
   111a0:	c7 85 c0 fc ff ff 18 	movl   $0x18,-0x340(%rbp)
   111a7:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
   111aa:	c7 85 d8 fc ff ff 00 	movl   $0x0,-0x328(%rbp)
   111b1:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
   111b4:	c7 85 d4 fc ff ff 01 	movl   $0x1,-0x32c(%rbp)
   111bb:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
   111be:	f3 0f 10 05 26 59 01 	movss  0x15926(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   111c5:	00 
   111c6:	f3 0f 11 85 dc fc ff 	movss  %xmm0,-0x324(%rbp)
   111cd:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
   111ce:	48 c7 85 e0 fc ff ff 	movq   $0x0,-0x320(%rbp)
   111d5:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
   111d9:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
   111e0:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
   111e3:	c7 85 ec fc ff ff 00 	movl   $0x0,-0x314(%rbp)
   111ea:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
   111ed:	66 0f ef c0          	pxor   %xmm0,%xmm0
   111f1:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
   111f8:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
  colorBlendAttachment.colorWriteMask =
   111ff:	c7 85 bc fc ff ff 0f 	movl   $0xf,-0x344(%rbp)
   11206:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
   11209:	c7 85 a0 fc ff ff 01 	movl   $0x1,-0x360(%rbp)
   11210:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
   11213:	c7 85 a4 fc ff ff 06 	movl   $0x6,-0x35c(%rbp)
   1121a:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
   1121d:	c7 85 a8 fc ff ff 07 	movl   $0x7,-0x358(%rbp)
   11224:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
   11227:	c7 85 ac fc ff ff 00 	movl   $0x0,-0x354(%rbp)
   1122e:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
   11231:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
   11238:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
   1123b:	c7 85 b4 fc ff ff 00 	movl   $0x0,-0x34c(%rbp)
   11242:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
   11245:	c7 85 b8 fc ff ff 00 	movl   $0x0,-0x348(%rbp)
   1124c:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
   1124f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11253:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
   1125a:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
   11261:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
   11268:	66 0f d6 85 90 fc ff 	movq   %xmm0,-0x370(%rbp)
   1126f:	ff 
  colorBlendState.sType =
   11270:	c7 85 60 fc ff ff 1a 	movl   $0x1a,-0x3a0(%rbp)
   11277:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
   1127a:	c7 85 74 fc ff ff 00 	movl   $0x0,-0x38c(%rbp)
   11281:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
   11284:	c7 85 78 fc ff ff 03 	movl   $0x3,-0x388(%rbp)
   1128b:	00 00 00 
  colorBlendState.attachmentCount = 1;
   1128e:	c7 85 7c fc ff ff 01 	movl   $0x1,-0x384(%rbp)
   11295:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
   11298:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
   1129f:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
   112a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   112aa:	f3 0f 11 85 88 fc ff 	movss  %xmm0,-0x378(%rbp)
   112b1:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
   112b2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   112b6:	f3 0f 11 85 8c fc ff 	movss  %xmm0,-0x374(%rbp)
   112bd:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
   112be:	66 0f ef c0          	pxor   %xmm0,%xmm0
   112c2:	f3 0f 11 85 90 fc ff 	movss  %xmm0,-0x370(%rbp)
   112c9:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
   112ca:	66 0f ef c0          	pxor   %xmm0,%xmm0
   112ce:	f3 0f 11 85 94 fc ff 	movss  %xmm0,-0x36c(%rbp)
   112d5:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
   112d6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   112da:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
   112e1:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
   112e8:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
   112ef:	c7 85 30 fc ff ff 1e 	movl   $0x1e,-0x3d0(%rbp)
   112f6:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 1;
   112f9:	c7 85 44 fc ff ff 01 	movl   $0x1,-0x3bc(%rbp)
   11300:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = &descriptorSetLayout;
   11303:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   1130a:	48 05 e8 01 00 00    	add    $0x1e8,%rax
   11310:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
  pipelineLayoutInfo.pushConstantRangeCount = 0;
   11317:	c7 85 50 fc ff ff 00 	movl   $0x0,-0x3b0(%rbp)
   1131e:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
   11321:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
   11328:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
   1132c:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   11333:	48 8b 40 50          	mov    0x50(%rax),%rax
   11337:	48 8d 8d 30 fc ff ff 	lea    -0x3d0(%rbp),%rcx
   1133e:	ba 00 00 00 00       	mov    $0x0,%edx
   11343:	48 89 ce             	mov    %rcx,%rsi
   11346:	48 89 c7             	mov    %rax,%rdi
   11349:	e8 67 73 ff ff       	call   86b5 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
   1134e:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
   11355:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
   1135c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11360:	0f 29 85 00 fc ff ff 	movaps %xmm0,-0x400(%rbp)
   11367:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
   1136e:	66 0f 7e 85 20 fc ff 	movd   %xmm0,-0x3e0(%rbp)
   11375:	ff 
  colorAttachment.format = swapchain.format;
   11376:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   1137d:	8b 40 78             	mov    0x78(%rax),%eax
   11380:	89 85 04 fc ff ff    	mov    %eax,-0x3fc(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
   11386:	c7 85 08 fc ff ff 01 	movl   $0x1,-0x3f8(%rbp)
   1138d:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
   11390:	c7 85 0c fc ff ff 01 	movl   $0x1,-0x3f4(%rbp)
   11397:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
   1139a:	c7 85 10 fc ff ff 00 	movl   $0x0,-0x3f0(%rbp)
   113a1:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
   113a4:	c7 85 14 fc ff ff 02 	movl   $0x2,-0x3ec(%rbp)
   113ab:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
   113ae:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
   113b5:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
   113b8:	c7 85 1c fc ff ff 00 	movl   $0x0,-0x3e4(%rbp)
   113bf:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
   113c2:	c7 85 20 fc ff ff ea 	movl   $0x3b9acdea,-0x3e0(%rbp)
   113c9:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
   113cc:	48 c7 85 f8 fb ff ff 	movq   $0x0,-0x408(%rbp)
   113d3:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
   113d7:	c7 85 f8 fb ff ff 00 	movl   $0x0,-0x408(%rbp)
   113de:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
   113e1:	c7 85 fc fb ff ff 02 	movl   $0x2,-0x404(%rbp)
   113e8:	00 00 00 

  VkSubpassDescription subpass{};
   113eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   113ef:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
   113f6:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
   113fd:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
   11404:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
   1140b:	66 0f d6 85 f0 fb ff 	movq   %xmm0,-0x410(%rbp)
   11412:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
   11413:	c7 85 b4 fb ff ff 00 	movl   $0x0,-0x44c(%rbp)
   1141a:	00 00 00 
  subpass.colorAttachmentCount = 1;
   1141d:	c7 85 c8 fb ff ff 01 	movl   $0x1,-0x438(%rbp)
   11424:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
   11427:	48 8d 85 f8 fb ff ff 	lea    -0x408(%rbp),%rax
   1142e:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
   11435:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11439:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
   11440:	0f 11 85 9c fb ff ff 	movups %xmm0,-0x464(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
   11447:	c7 85 90 fb ff ff ff 	movl   $0xffffffff,-0x470(%rbp)
   1144e:	ff ff ff 
  subPassDep.dstSubpass = 0;
   11451:	c7 85 94 fb ff ff 00 	movl   $0x0,-0x46c(%rbp)
   11458:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
   1145b:	c7 85 98 fb ff ff 00 	movl   $0x400,-0x468(%rbp)
   11462:	04 00 00 
  subPassDep.srcAccessMask = 0;
   11465:	c7 85 a0 fb ff ff 00 	movl   $0x0,-0x460(%rbp)
   1146c:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
   1146f:	c7 85 9c fb ff ff 00 	movl   $0x400,-0x464(%rbp)
   11476:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
   11479:	c7 85 a4 fb ff ff 00 	movl   $0x100,-0x45c(%rbp)
   11480:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
   11483:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11487:	0f 29 85 50 fb ff ff 	movaps %xmm0,-0x4b0(%rbp)
   1148e:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
   11495:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
   1149c:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
   114a3:	c7 85 50 fb ff ff 26 	movl   $0x26,-0x4b0(%rbp)
   114aa:	00 00 00 
  renderPassInfo.pNext = nullptr;
   114ad:	48 c7 85 58 fb ff ff 	movq   $0x0,-0x4a8(%rbp)
   114b4:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
   114b8:	c7 85 64 fb ff ff 01 	movl   $0x1,-0x49c(%rbp)
   114bf:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
   114c2:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
   114c9:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
  renderPassInfo.subpassCount = 1;
   114d0:	c7 85 70 fb ff ff 01 	movl   $0x1,-0x490(%rbp)
   114d7:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
   114da:	48 8d 85 b0 fb ff ff 	lea    -0x450(%rbp),%rax
   114e1:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  renderPassInfo.dependencyCount = 1;
   114e8:	c7 85 80 fb ff ff 01 	movl   $0x1,-0x480(%rbp)
   114ef:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
   114f2:	48 8d 85 90 fb ff ff 	lea    -0x470(%rbp),%rax
   114f9:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
   11500:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   11507:	48 8b 40 50          	mov    0x50(%rax),%rax
   1150b:	48 8d 8d 50 fb ff ff 	lea    -0x4b0(%rbp),%rcx
   11512:	ba 00 00 00 00       	mov    $0x0,%edx
   11517:	48 89 ce             	mov    %rcx,%rsi
   1151a:	48 89 c7             	mov    %rax,%rdi
   1151d:	e8 2b 72 ff ff       	call   874d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
   11522:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
   11529:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
   11530:	48 8d 95 c0 fa ff ff 	lea    -0x540(%rbp),%rdx
   11537:	b8 00 00 00 00       	mov    $0x0,%eax
   1153c:	b9 12 00 00 00       	mov    $0x12,%ecx
   11541:	48 89 d7             	mov    %rdx,%rdi
   11544:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
   11547:	c7 85 c0 fa ff ff 1c 	movl   $0x1c,-0x540(%rbp)
   1154e:	00 00 00 
  pipelineInfo.pNext = nullptr;
   11551:	48 c7 85 c8 fa ff ff 	movq   $0x0,-0x538(%rbp)
   11558:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
   1155c:	c7 85 d4 fa ff ff 02 	movl   $0x2,-0x52c(%rbp)
   11563:	00 00 00 
  pipelineInfo.pStages = shaderStages;
   11566:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
   1156d:	48 89 85 d8 fa ff ff 	mov    %rax,-0x528(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
   11574:	48 8d 85 b0 fd ff ff 	lea    -0x250(%rbp),%rax
   1157b:	48 89 85 e0 fa ff ff 	mov    %rax,-0x520(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
   11582:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
   11589:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
   11590:	48 8d 85 30 fd ff ff 	lea    -0x2d0(%rbp),%rax
   11597:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
   1159e:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   115a5:	48 89 85 00 fb ff ff 	mov    %rax,-0x500(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
   115ac:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
   115b3:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
   115ba:	48 c7 85 10 fb ff ff 	movq   $0x0,-0x4f0(%rbp)
   115c1:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
   115c5:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
   115cc:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
   115d3:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
   115da:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
   115de:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   115e5:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
   115ec:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
   115f3:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   115fa:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   11601:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  pipelineInfo.subpass = 0;
   11608:	c7 85 38 fb ff ff 00 	movl   $0x0,-0x4c8(%rbp)
   1160f:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
   11612:	48 c7 85 40 fb ff ff 	movq   $0x0,-0x4c0(%rbp)
   11619:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
   1161d:	c7 85 48 fb ff ff ff 	movl   $0xffffffff,-0x4b8(%rbp)
   11624:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
   11627:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
   1162e:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
   11635:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1163c:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   11643:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
   1164a:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
   11651:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   11658:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
   1165f:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
   11666:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
   1166d:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   11674:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   1167b:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
   11682:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
   11689:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   11690:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   11697:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
   1169e:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
   116a5:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   116ac:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   116b3:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
   116ba:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
   116c1:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   116c8:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   116cf:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
   116d6:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
   116dd:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   116e1:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   116e5:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
   116ec:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
   116f3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   116f7:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   116fb:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
   11702:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
   11709:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1170d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   11711:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   11718:	49 89 c4             	mov    %rax,%r12
   1171b:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   11721:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11725:	48 89 c7             	mov    %rax,%rdi
   11728:	e8 5d 50 00 00       	call   1678a <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
   1172d:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   11731:	4c 89 e6             	mov    %r12,%rsi
   11734:	4c 89 ef             	mov    %r13,%rdi
   11737:	4c 89 e1             	mov    %r12,%rcx
   1173a:	4c 89 eb             	mov    %r13,%rbx
   1173d:	48 89 df             	mov    %rbx,%rdi
   11740:	48 8d 85 a0 fa ff ff 	lea    -0x560(%rbp),%rax
   11747:	48 89 d1             	mov    %rdx,%rcx
   1174a:	48 89 fa             	mov    %rdi,%rdx
   1174d:	48 89 c7             	mov    %rax,%rdi
   11750:	e8 6d 50 00 00       	call   167c2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
   11755:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11759:	48 89 c7             	mov    %rax,%rdi
   1175c:	e8 45 50 00 00       	call   167a6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
   11761:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   11768:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
   1176f:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   11776:	48 8b 70 50          	mov    0x50(%rax),%rsi
   1177a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1177e:	48 8d 8d a0 fa ff ff 	lea    -0x560(%rbp),%rcx
   11785:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1178b:	48 89 c7             	mov    %rax,%rdi
   1178e:	e8 16 51 00 00       	call   168a9 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
   11793:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11797:	be 00 00 00 00       	mov    $0x0,%esi
   1179c:	48 89 c7             	mov    %rax,%rdi
   1179f:	e8 76 52 00 00       	call   16a1a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
   117a4:	48 8b 10             	mov    (%rax),%rdx
   117a7:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   117ae:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
   117b5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   117b9:	48 89 c7             	mov    %rax,%rdi
   117bc:	e8 15 52 00 00       	call   169d6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
   117c1:	48 8b 8d d0 fe ff ff 	mov    -0x130(%rbp),%rcx
   117c8:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   117cf:	48 8b 40 50          	mov    0x50(%rax),%rax
   117d3:	ba 00 00 00 00       	mov    $0x0,%edx
   117d8:	48 89 ce             	mov    %rcx,%rsi
   117db:	48 89 c7             	mov    %rax,%rdi
   117de:	e8 0f 7d ff ff       	call   94f2 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
   117e3:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
   117ea:	48 8b 85 98 fa ff ff 	mov    -0x568(%rbp),%rax
   117f1:	48 8b 40 50          	mov    0x50(%rax),%rax
   117f5:	ba 00 00 00 00       	mov    $0x0,%edx
   117fa:	48 89 ce             	mov    %rcx,%rsi
   117fd:	48 89 c7             	mov    %rax,%rdi
   11800:	e8 ed 7c ff ff       	call   94f2 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
   11805:	48 8d 85 a0 fa ff ff 	lea    -0x560(%rbp),%rax
   1180c:	48 89 c7             	mov    %rax,%rdi
   1180f:	e8 36 50 00 00       	call   1684a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   11814:	eb 71                	jmp    11887 <_ZN9VulkanApp22createGraphicsPipelineEv+0xbe7>
      device, vkh::absoluteDirectory + "/build/shaders/"
   11816:	48 89 c3             	mov    %rax,%rbx
   11819:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   11820:	48 89 c7             	mov    %rax,%rdi
   11823:	e8 c0 42 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11828:	48 89 d8             	mov    %rbx,%rax
   1182b:	48 89 c7             	mov    %rax,%rdi
   1182e:	e8 cd 41 ff ff       	call   5a00 <_Unwind_Resume@plt>
      device, vkh::absoluteDirectory + "/build/shaders/"
   11833:	48 89 c3             	mov    %rax,%rbx
   11836:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1183d:	48 89 c7             	mov    %rax,%rdi
   11840:	e8 a3 42 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11845:	48 89 d8             	mov    %rbx,%rax
   11848:	48 89 c7             	mov    %rax,%rdi
   1184b:	e8 b0 41 ff ff       	call   5a00 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
   11850:	48 89 c3             	mov    %rax,%rbx
   11853:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   11857:	48 89 c7             	mov    %rax,%rdi
   1185a:	e8 47 4f 00 00       	call   167a6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   1185f:	48 89 d8             	mov    %rbx,%rax
   11862:	48 89 c7             	mov    %rax,%rdi
   11865:	e8 96 41 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
   1186a:	48 89 c3             	mov    %rax,%rbx
   1186d:	48 8d 85 a0 fa ff ff 	lea    -0x560(%rbp),%rax
   11874:	48 89 c7             	mov    %rax,%rdi
   11877:	e8 ce 4f 00 00       	call   1684a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   1187c:	48 89 d8             	mov    %rbx,%rax
   1187f:	48 89 c7             	mov    %rax,%rdi
   11882:	e8 79 41 ff ff       	call   5a00 <_Unwind_Resume@plt>
   11887:	48 81 c4 58 05 00 00 	add    $0x558,%rsp
   1188e:	5b                   	pop    %rbx
   1188f:	41 5c                	pop    %r12
   11891:	41 5d                	pop    %r13
   11893:	5d                   	pop    %rbp
   11894:	c3                   	ret
   11895:	90                   	nop

0000000000011896 <_ZN9VulkanApp18createFramebuffersEv>:

void VulkanApp::createFramebuffers() {
   11896:	55                   	push   %rbp
   11897:	48 89 e5             	mov    %rsp,%rbp
   1189a:	41 55                	push   %r13
   1189c:	41 54                	push   %r12
   1189e:	53                   	push   %rbx
   1189f:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   118a6:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
   118ad:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   118b4:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
   118bb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   118c2:	48 05 a8 00 00 00    	add    $0xa8,%rax
   118c8:	48 89 c7             	mov    %rax,%rdi
   118cb:	e8 6a 51 00 00       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   118d0:	48 89 c6             	mov    %rax,%rsi
   118d3:	48 89 df             	mov    %rbx,%rdi
   118d6:	e8 83 51 00 00       	call   16a5e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
   118db:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   118e2:	00 
   118e3:	e9 3a 01 00 00       	jmp    11a22 <_ZN9VulkanApp18createFramebuffersEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
   118e8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   118ef:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
   118f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118fa:	48 89 c6             	mov    %rax,%rsi
   118fd:	48 89 d7             	mov    %rdx,%rdi
   11900:	e8 33 4d 00 00       	call   16638 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
   11905:	48 8b 00             	mov    (%rax),%rax
   11908:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1190c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11910:	49 89 c4             	mov    %rax,%r12
   11913:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   11919:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   1191d:	48 89 c7             	mov    %rax,%rdi
   11920:	e8 bf 51 00 00       	call   16ae4 <_ZNSaIP13VkImageView_TEC1Ev>
   11925:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
   11929:	4c 89 e6             	mov    %r12,%rsi
   1192c:	4c 89 ef             	mov    %r13,%rdi
   1192f:	4c 89 e1             	mov    %r12,%rcx
   11932:	4c 89 eb             	mov    %r13,%rbx
   11935:	48 89 df             	mov    %rbx,%rdi
   11938:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1193c:	48 89 d1             	mov    %rdx,%rcx
   1193f:	48 89 fa             	mov    %rdi,%rdx
   11942:	48 89 c7             	mov    %rax,%rdi
   11945:	e8 d2 51 00 00       	call   16b1c <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   1194a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   1194e:	48 89 c7             	mov    %rax,%rdi
   11951:	e8 aa 51 00 00       	call   16b00 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
   11956:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1195a:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   11961:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
   11965:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   11969:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
   1196d:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
   11974:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
   11977:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1197e:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   11985:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
   11989:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1198d:	48 89 c7             	mov    %rax,%rdi
   11990:	e8 a5 50 00 00       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11995:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
   11998:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1199c:	48 89 c7             	mov    %rax,%rdi
   1199f:	e8 44 52 00 00       	call   16be8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
   119a4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
   119a8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   119af:	8b 40 7c             	mov    0x7c(%rax),%eax
   119b2:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
   119b5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   119bc:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   119c2:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
   119c5:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
   119cc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   119d3:	48 8b 40 50          	mov    0x50(%rax),%rax
   119d7:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
   119de:	ba 00 00 00 00       	mov    $0x0,%edx
   119e3:	48 89 ce             	mov    %rcx,%rsi
   119e6:	48 89 c7             	mov    %rax,%rdi
   119e9:	e8 f7 6d ff ff       	call   87e5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
   119ee:	48 89 c3             	mov    %rax,%rbx
   119f1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   119f8:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   119ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a03:	48 89 c6             	mov    %rax,%rsi
   11a06:	48 89 d7             	mov    %rdx,%rdi
   11a09:	e8 fe 51 00 00       	call   16c0c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   11a0e:	48 89 18             	mov    %rbx,(%rax)
  }
   11a11:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   11a15:	48 89 c7             	mov    %rax,%rdi
   11a18:	e8 87 51 00 00       	call   16ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
   11a1d:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   11a22:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   11a29:	48 05 a8 00 00 00    	add    $0xa8,%rax
   11a2f:	48 89 c7             	mov    %rax,%rdi
   11a32:	e8 03 50 00 00       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11a37:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   11a3b:	0f 92 c0             	setb   %al
   11a3e:	84 c0                	test   %al,%al
   11a40:	0f 85 a2 fe ff ff    	jne    118e8 <_ZN9VulkanApp18createFramebuffersEv+0x52>
}
   11a46:	eb 34                	jmp    11a7c <_ZN9VulkanApp18createFramebuffersEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
   11a48:	48 89 c3             	mov    %rax,%rbx
   11a4b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   11a4f:	48 89 c7             	mov    %rax,%rdi
   11a52:	e8 a9 50 00 00       	call   16b00 <_ZNSaIP13VkImageView_TED1Ev>
   11a57:	48 89 d8             	mov    %rbx,%rax
   11a5a:	48 89 c7             	mov    %rax,%rdi
   11a5d:	e8 9e 3f ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
   11a62:	48 89 c3             	mov    %rax,%rbx
   11a65:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   11a69:	48 89 c7             	mov    %rax,%rdi
   11a6c:	e8 33 51 00 00       	call   16ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   11a71:	48 89 d8             	mov    %rbx,%rax
   11a74:	48 89 c7             	mov    %rax,%rdi
   11a77:	e8 84 3f ff ff       	call   5a00 <_Unwind_Resume@plt>
}
   11a7c:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   11a83:	5b                   	pop    %rbx
   11a84:	41 5c                	pop    %r12
   11a86:	41 5d                	pop    %r13
   11a88:	5d                   	pop    %rbp
   11a89:	c3                   	ret

0000000000011a8a <_ZN9VulkanApp17recreateSwapchainEv>:

void VulkanApp::recreateSwapchain() {
   11a8a:	55                   	push   %rbp
   11a8b:	48 89 e5             	mov    %rsp,%rbp
   11a8e:	48 83 ec 20          	sub    $0x20,%rsp
   11a92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  /* Handle minimization */
  int width = 0, heigth = 0;
   11a96:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   11a9d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &width, &heigth);
   11aa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11aa8:	48 8b 00             	mov    (%rax),%rax
   11aab:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   11aaf:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   11ab3:	48 89 ce             	mov    %rcx,%rsi
   11ab6:	48 89 c7             	mov    %rax,%rdi
   11ab9:	e8 52 3e ff ff       	call   5910 <glfwGetFramebufferSize@plt>
  while (width == 0 || heigth == 0) {
   11abe:	eb 1f                	jmp    11adf <_ZN9VulkanApp17recreateSwapchainEv+0x55>
    glfwGetFramebufferSize(window, &width, &heigth);
   11ac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ac4:	48 8b 00             	mov    (%rax),%rax
   11ac7:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   11acb:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   11acf:	48 89 ce             	mov    %rcx,%rsi
   11ad2:	48 89 c7             	mov    %rax,%rdi
   11ad5:	e8 36 3e ff ff       	call   5910 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
   11ada:	e8 d1 37 ff ff       	call   52b0 <glfwWaitEvents@plt>
  while (width == 0 || heigth == 0) {
   11adf:	8b 45 fc             	mov    -0x4(%rbp),%eax
   11ae2:	85 c0                	test   %eax,%eax
   11ae4:	74 da                	je     11ac0 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
   11ae6:	8b 45 f8             	mov    -0x8(%rbp),%eax
   11ae9:	85 c0                	test   %eax,%eax
   11aeb:	74 d3                	je     11ac0 <_ZN9VulkanApp17recreateSwapchainEv+0x36>
  }

  /* Recreate the swapchain */
  vkDeviceWaitIdle(device);
   11aed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11af1:	48 8b 40 50          	mov    0x50(%rax),%rax
   11af5:	48 89 c7             	mov    %rax,%rdi
   11af8:	e8 e3 35 ff ff       	call   50e0 <vkDeviceWaitIdle@plt>
  cleanupSwapchain();
   11afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b01:	48 89 c7             	mov    %rax,%rdi
   11b04:	e8 33 00 00 00       	call   11b3c <_ZN9VulkanApp16cleanupSwapchainEv>
  createSwapchain();
   11b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b0d:	48 89 c7             	mov    %rax,%rdi
   11b10:	e8 99 ef ff ff       	call   10aae <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   11b15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b19:	48 89 c7             	mov    %rax,%rdi
   11b1c:	e8 d3 ef ff ff       	call   10af4 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
   11b21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b25:	48 89 c7             	mov    %rax,%rdi
   11b28:	e8 73 f1 ff ff       	call   10ca0 <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   11b2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b31:	48 89 c7             	mov    %rax,%rdi
   11b34:	e8 5d fd ff ff       	call   11896 <_ZN9VulkanApp18createFramebuffersEv>
  // createUniformBuffers();
}
   11b39:	90                   	nop
   11b3a:	c9                   	leave
   11b3b:	c3                   	ret

0000000000011b3c <_ZN9VulkanApp16cleanupSwapchainEv>:

void VulkanApp::cleanupSwapchain() {
   11b3c:	55                   	push   %rbp
   11b3d:	48 89 e5             	mov    %rsp,%rbp
   11b40:	48 83 ec 50          	sub    $0x50,%rsp
   11b44:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  // for (size_t i = 0; i < maxFramesInFlight; ++i) {
  //   vkDestroyBuffer(device, uniformBuffers[i], nullptr);
  //   vkFreeMemory(device, uniformBuffersMemory[i], nullptr);
  // }
  for (auto &framebuffer : framebuffers) {
   11b48:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11b4c:	48 05 00 01 00 00    	add    $0x100,%rax
   11b52:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b5a:	48 89 c7             	mov    %rax,%rdi
   11b5d:	e8 ca 50 00 00       	call   16c2c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
   11b62:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   11b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b6a:	48 89 c7             	mov    %rax,%rdi
   11b6d:	e8 e0 50 00 00       	call   16c52 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
   11b72:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11b76:	eb 3b                	jmp    11bb3 <_ZN9VulkanApp16cleanupSwapchainEv+0x77>
   11b78:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   11b7c:	48 89 c7             	mov    %rax,%rdi
   11b7f:	e8 52 51 00 00       	call   16cd6 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
   11b84:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
   11b88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b8c:	48 8b 08             	mov    (%rax),%rcx
   11b8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11b93:	48 8b 40 50          	mov    0x50(%rax),%rax
   11b97:	ba 00 00 00 00       	mov    $0x0,%edx
   11b9c:	48 89 ce             	mov    %rcx,%rsi
   11b9f:	48 89 c7             	mov    %rax,%rdi
   11ba2:	e8 92 7a ff ff       	call   9639 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
   11ba7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   11bab:	48 89 c7             	mov    %rax,%rdi
   11bae:	e8 03 51 00 00       	call   16cb6 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
   11bb3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   11bb7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   11bbb:	48 89 d6             	mov    %rdx,%rsi
   11bbe:	48 89 c7             	mov    %rax,%rdi
   11bc1:	e8 b5 50 00 00       	call   16c7b <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11bc6:	84 c0                	test   %al,%al
   11bc8:	75 ae                	jne    11b78 <_ZN9VulkanApp16cleanupSwapchainEv+0x3c>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
   11bca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11bce:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
   11bd5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11bd9:	48 8b 40 50          	mov    0x50(%rax),%rax
   11bdd:	ba 00 00 00 00       	mov    $0x0,%edx
   11be2:	48 89 ce             	mov    %rcx,%rsi
   11be5:	48 89 c7             	mov    %rax,%rdi
   11be8:	e8 8f 79 ff ff       	call   957c <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
   11bed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11bf1:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
   11bf8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11bfc:	48 8b 40 50          	mov    0x50(%rax),%rax
   11c00:	ba 00 00 00 00       	mov    $0x0,%edx
   11c05:	48 89 ce             	mov    %rcx,%rsi
   11c08:	48 89 c7             	mov    %rax,%rdi
   11c0b:	e8 10 79 ff ff       	call   9520 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
   11c10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11c14:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
   11c1b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11c1f:	48 8b 40 50          	mov    0x50(%rax),%rax
   11c23:	ba 00 00 00 00       	mov    $0x0,%edx
   11c28:	48 89 ce             	mov    %rcx,%rsi
   11c2b:	48 89 c7             	mov    %rax,%rdi
   11c2e:	e8 1b 79 ff ff       	call   954e <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
   11c33:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11c37:	48 05 a8 00 00 00    	add    $0xa8,%rax
   11c3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11c41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c45:	48 89 c7             	mov    %rax,%rdi
   11c48:	e8 9b 50 00 00       	call   16ce8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
   11c4d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11c51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c55:	48 89 c7             	mov    %rax,%rdi
   11c58:	e8 b1 50 00 00       	call   16d0e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
   11c5d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11c61:	eb 3b                	jmp    11c9e <_ZN9VulkanApp16cleanupSwapchainEv+0x162>
   11c63:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11c67:	48 89 c7             	mov    %rax,%rdi
   11c6a:	e8 23 51 00 00       	call   16d92 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
   11c6f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
   11c73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c77:	48 8b 08             	mov    (%rax),%rcx
   11c7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11c7e:	48 8b 40 50          	mov    0x50(%rax),%rax
   11c82:	ba 00 00 00 00       	mov    $0x0,%edx
   11c87:	48 89 ce             	mov    %rcx,%rsi
   11c8a:	48 89 c7             	mov    %rax,%rdi
   11c8d:	e8 32 78 ff ff       	call   94c4 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
   11c92:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11c96:	48 89 c7             	mov    %rax,%rdi
   11c99:	e8 d4 50 00 00       	call   16d72 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
   11c9e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11ca2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   11ca6:	48 89 d6             	mov    %rdx,%rsi
   11ca9:	48 89 c7             	mov    %rax,%rdi
   11cac:	e8 86 50 00 00       	call   16d37 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11cb1:	84 c0                	test   %al,%al
   11cb3:	75 ae                	jne    11c63 <_ZN9VulkanApp16cleanupSwapchainEv+0x127>
  }
  vkh::destroySwapchain(device, swapchain.self);
   11cb5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11cb9:	48 8b 48 70          	mov    0x70(%rax),%rcx
   11cbd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11cc1:	48 8b 40 50          	mov    0x50(%rax),%rax
   11cc5:	ba 00 00 00 00       	mov    $0x0,%edx
   11cca:	48 89 ce             	mov    %rcx,%rsi
   11ccd:	48 89 c7             	mov    %rax,%rdi
   11cd0:	e8 c1 77 ff ff       	call   9496 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
}
   11cd5:	90                   	nop
   11cd6:	c9                   	leave
   11cd7:	c3                   	ret

0000000000011cd8 <_ZN9VulkanApp25framebufferResizeCallbackEP10GLFWwindowii>:

void VulkanApp::framebufferResizeCallback(GLFWwindow *windowInstance,
                                          [[maybe_unused]] int width,
                                          [[maybe_unused]] int height) {
   11cd8:	55                   	push   %rbp
   11cd9:	48 89 e5             	mov    %rsp,%rbp
   11cdc:	48 83 ec 20          	sub    $0x20,%rsp
   11ce0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ce4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   11ce7:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app =
      reinterpret_cast<VulkanApp *>(glfwGetWindowUserPointer(windowInstance));
   11cea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cee:	48 89 c7             	mov    %rax,%rdi
   11cf1:	e8 8a 3a ff ff       	call   5780 <glfwGetWindowUserPointer@plt>
   11cf6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->framebufferResized = true;
   11cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cfe:	c6 80 18 01 00 00 01 	movb   $0x1,0x118(%rax)
}
   11d05:	90                   	nop
   11d06:	c9                   	leave
   11d07:	c3                   	ret

0000000000011d08 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
   11d08:	55                   	push   %rbp
   11d09:	48 89 e5             	mov    %rsp,%rbp
   11d0c:	48 83 ec 30          	sub    $0x30,%rsp
   11d10:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
   11d14:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11d18:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   11d1c:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
   11d21:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
   11d28:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   11d2f:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
   11d30:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
   11d37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d3b:	8b 40 68             	mov    0x68(%rax),%eax
   11d3e:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
   11d41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d45:	48 8b 40 50          	mov    0x50(%rax),%rax
   11d49:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   11d4d:	ba 00 00 00 00       	mov    $0x0,%edx
   11d52:	48 89 ce             	mov    %rcx,%rsi
   11d55:	48 89 c7             	mov    %rax,%rdi
   11d58:	e8 20 6b ff ff       	call   887d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
   11d5d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11d61:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
   11d68:	90                   	nop
   11d69:	c9                   	leave
   11d6a:	c3                   	ret
   11d6b:	90                   	nop

0000000000011d6c <_ZN9VulkanApp20createCommandBuffersEv>:

void VulkanApp::createCommandBuffers() {
   11d6c:	55                   	push   %rbp
   11d6d:	48 89 e5             	mov    %rsp,%rbp
   11d70:	48 83 ec 50          	sub    $0x50,%rsp
   11d74:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
   11d78:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11d7c:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   11d80:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   11d84:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
   11d8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11d8f:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   11d96:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   11d9a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount =
      static_cast<uint32_t>(maxFramesInFlight);
   11da1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11da5:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
  cmdBufferAllocInfo.commandBufferCount =
   11dac:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffers = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
   11daf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11db3:	48 8b 48 50          	mov    0x50(%rax),%rcx
   11db7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11dbb:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   11dbf:	48 89 ce             	mov    %rcx,%rsi
   11dc2:	48 89 c7             	mov    %rax,%rdi
   11dc5:	e8 92 58 ff ff       	call   765c <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   11dca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11dce:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   11dd5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11dd9:	48 89 c6             	mov    %rax,%rsi
   11ddc:	48 89 d7             	mov    %rdx,%rdi
   11ddf:	e8 c0 4f 00 00       	call   16da4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>
   11de4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11de8:	48 89 c7             	mov    %rax,%rdi
   11deb:	e8 62 5b ff ff       	call   7952 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
   11df0:	90                   	nop
   11df1:	c9                   	leave
   11df2:	c3                   	ret
   11df3:	90                   	nop

0000000000011df4 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
   11df4:	55                   	push   %rbp
   11df5:	48 89 e5             	mov    %rsp,%rbp
   11df8:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   11dff:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11e06:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   11e0d:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
  /* 1. Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
   11e13:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11e17:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   11e1b:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   11e1f:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
   11e26:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
   11e2d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   11e34:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
   11e35:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   11e39:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11e40:	48 89 d6             	mov    %rdx,%rsi
   11e43:	48 89 c7             	mov    %rax,%rdi
   11e46:	e8 14 59 ff ff       	call   775f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* 2. Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
   11e4b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11e4f:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
   11e54:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11e58:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   11e5d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11e61:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
   11e66:	f3 0f 10 05 7e 4c 01 	movss  0x14c7e(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   11e6d:	00 
   11e6e:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
   11e73:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11e77:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   11e7b:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   11e7f:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   11e83:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
   11e87:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
   11e8e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11e95:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
   11e9c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
   11ea0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11ea7:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
   11eae:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   11eb4:	48 89 c6             	mov    %rax,%rsi
   11eb7:	48 89 d7             	mov    %rdx,%rdi
   11eba:	e8 4d 4d 00 00       	call   16c0c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
   11ebf:	48 8b 00             	mov    (%rax),%rax
   11ec2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
   11ec6:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   11ecd:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
   11ed4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11edb:	48 8b 40 7c          	mov    0x7c(%rax),%rax
   11edf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
   11ee3:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
   11eea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11eee:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
   11ef2:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   11ef6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11efd:	ba 00 00 00 00       	mov    $0x0,%edx
   11f02:	48 89 ce             	mov    %rcx,%rsi
   11f05:	48 89 c7             	mov    %rax,%rdi
   11f08:	e8 c3 38 ff ff       	call   57d0 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* 3. Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
   11f0d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f14:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
   11f1b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11f22:	be 00 00 00 00       	mov    $0x0,%esi
   11f27:	48 89 c7             	mov    %rax,%rdi
   11f2a:	e8 31 35 ff ff       	call   5460 <vkCmdBindPipeline@plt>
                    graphicsPipeline.self);

  /* Bind the buffers */
  VkBuffer vertexBuffers[] = {vertexBuffer};
   11f2f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f36:	48 8b 80 98 01 00 00 	mov    0x198(%rax),%rax
   11f3d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  VkDeviceSize offsets[] = {0};
   11f41:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   11f48:	00 
  vkCmdBindVertexBuffers(cmdBuffer, 0, 1, vertexBuffers, offsets);
   11f49:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
   11f4d:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
   11f51:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11f58:	49 89 c8             	mov    %rcx,%r8
   11f5b:	48 89 d1             	mov    %rdx,%rcx
   11f5e:	ba 01 00 00 00       	mov    $0x1,%edx
   11f63:	be 00 00 00 00       	mov    $0x0,%esi
   11f68:	48 89 c7             	mov    %rax,%rdi
   11f6b:	e8 90 38 ff ff       	call   5800 <vkCmdBindVertexBuffers@plt>

  /* Bind the descriptor sets */
  vkCmdBindDescriptorSets(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
                          graphicsPipeline.layout, 0, 1, descriptorSets.data(),
   11f70:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f77:	48 05 f8 01 00 00    	add    $0x1f8,%rax
   11f7d:	48 89 c7             	mov    %rax,%rdi
   11f80:	e8 57 4e 00 00       	call   16ddc <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE4dataEv>
   11f85:	48 89 c1             	mov    %rax,%rcx
  vkCmdBindDescriptorSets(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
   11f88:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11f8f:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
   11f96:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11f9d:	6a 00                	push   $0x0
   11f9f:	6a 00                	push   $0x0
   11fa1:	49 89 c9             	mov    %rcx,%r9
   11fa4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11faa:	b9 00 00 00 00       	mov    $0x0,%ecx
   11faf:	be 00 00 00 00       	mov    $0x0,%esi
   11fb4:	48 89 c7             	mov    %rax,%rdi
   11fb7:	e8 c4 32 ff ff       	call   5280 <vkCmdBindDescriptorSets@plt>
   11fbc:	48 83 c4 10          	add    $0x10,%rsp
                          0, nullptr);

  /* Bind if using index buffers */
  vkCmdBindIndexBuffer(cmdBuffer, indexBuffer, 0, VK_INDEX_TYPE_UINT16);
   11fc0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11fc7:	48 8b b0 a8 01 00 00 	mov    0x1a8(%rax),%rsi
   11fce:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11fd5:	b9 00 00 00 00       	mov    $0x0,%ecx
   11fda:	ba 00 00 00 00       	mov    $0x0,%edx
   11fdf:	48 89 c7             	mov    %rax,%rdi
   11fe2:	e8 09 38 ff ff       	call   57f0 <vkCmdBindIndexBuffer@plt>
  static const uint32_t instanceCount = 1;
  static const uint32_t firstIndex = 0;
  static const uint32_t vertexOffset = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDrawIndexed(cmdBuffer,
                   static_cast<uint32_t>(shader::triangle_indices.size()),
   11fe7:	48 8d 05 d2 76 02 00 	lea    0x276d2(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
   11fee:	48 89 c7             	mov    %rax,%rdi
   11ff1:	e8 0a 4e 00 00       	call   16e00 <_ZNKSt6vectorItSaItEE4sizeEv>
  vkCmdDrawIndexed(cmdBuffer,
   11ff6:	89 c6                	mov    %eax,%esi
   11ff8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11fff:	41 b9 00 00 00 00    	mov    $0x0,%r9d
   12005:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1200b:	b9 00 00 00 00       	mov    $0x0,%ecx
   12010:	ba 01 00 00 00       	mov    $0x1,%edx
   12015:	48 89 c7             	mov    %rax,%rdi
   12018:	e8 73 31 ff ff       	call   5190 <vkCmdDrawIndexed@plt>
                   instanceCount, firstIndex, vertexOffset, firstInstance);

  /* 4. End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
   1201d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12024:	48 89 c7             	mov    %rax,%rdi
   12027:	e8 44 30 ff ff       	call   5070 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
   1202c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12033:	48 89 c7             	mov    %rax,%rdi
   12036:	e8 ae 57 ff ff       	call   77e9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
   1203b:	90                   	nop
   1203c:	c9                   	leave
   1203d:	c3                   	ret

000000000001203e <_ZN9VulkanApp14findMemoryTypeEjj>:

uint32_t VulkanApp::findMemoryType(uint32_t typeFilter,
                                   VkMemoryPropertyFlags propFlags) {
   1203e:	55                   	push   %rbp
   1203f:	48 89 e5             	mov    %rsp,%rbp
   12042:	41 54                	push   %r12
   12044:	53                   	push   %rbx
   12045:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
   1204c:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
   12053:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
   12059:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)
  VkPhysicalDeviceMemoryProperties memoryProperties;
  vkGetPhysicalDeviceMemoryProperties(physicalDevice, &memoryProperties);
   1205f:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   12066:	48 8b 40 58          	mov    0x58(%rax),%rax
   1206a:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
   12071:	48 89 d6             	mov    %rdx,%rsi
   12074:	48 89 c7             	mov    %rax,%rdi
   12077:	e8 84 38 ff ff       	call   5900 <vkGetPhysicalDeviceMemoryProperties@plt>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   1207c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   12083:	eb 39                	jmp    120be <_ZN9VulkanApp14findMemoryTypeEjj+0x80>
    if (typeFilter & (1 << i) &&
   12085:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12088:	ba 01 00 00 00       	mov    $0x1,%edx
   1208d:	89 c1                	mov    %eax,%ecx
   1208f:	d3 e2                	shl    %cl,%edx
   12091:	89 d0                	mov    %edx,%eax
   12093:	23 85 d4 fd ff ff    	and    -0x22c(%rbp),%eax
   12099:	85 c0                	test   %eax,%eax
   1209b:	74 1d                	je     120ba <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
        (memoryProperties.memoryTypes[i].propertyFlags & propFlags) ==
   1209d:	8b 45 ec             	mov    -0x14(%rbp),%eax
   120a0:	8b 84 c5 e4 fd ff ff 	mov    -0x21c(%rbp,%rax,8),%eax
   120a7:	23 85 d0 fd ff ff    	and    -0x230(%rbp),%eax
    if (typeFilter & (1 << i) &&
   120ad:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%rbp)
   120b3:	75 05                	jne    120ba <_ZN9VulkanApp14findMemoryTypeEjj+0x7c>
            propFlags) {
      return i;
   120b5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   120b8:	eb 60                	jmp    1211a <_ZN9VulkanApp14findMemoryTypeEjj+0xdc>
  for (uint32_t i = 0; i < memoryProperties.memoryTypeCount; ++i) {
   120ba:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   120be:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
   120c4:	39 45 ec             	cmp    %eax,-0x14(%rbp)
   120c7:	72 bc                	jb     12085 <_ZN9VulkanApp14findMemoryTypeEjj+0x47>
    }
  }
  throw std::runtime_error("Failed to find suitable memory type.");
   120c9:	bf 10 00 00 00       	mov    $0x10,%edi
   120ce:	e8 4d 31 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   120d3:	48 89 c3             	mov    %rax,%rbx
   120d6:	48 8d 05 4b 41 01 00 	lea    0x1414b(%rip),%rax        # 26228 <_ZZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_TjE13firstInstance+0x4>
   120dd:	48 89 c6             	mov    %rax,%rsi
   120e0:	48 89 df             	mov    %rbx,%rdi
   120e3:	e8 88 30 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   120e8:	48 8b 05 d1 6e 02 00 	mov    0x26ed1(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   120ef:	48 89 c2             	mov    %rax,%rdx
   120f2:	48 8d 05 47 6c 02 00 	lea    0x26c47(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   120f9:	48 89 c6             	mov    %rax,%rsi
   120fc:	48 89 df             	mov    %rbx,%rdi
   120ff:	e8 8c 38 ff ff       	call   5990 <__cxa_throw@plt>
   12104:	49 89 c4             	mov    %rax,%r12
   12107:	48 89 df             	mov    %rbx,%rdi
   1210a:	e8 41 32 ff ff       	call   5350 <__cxa_free_exception@plt>
   1210f:	4c 89 e0             	mov    %r12,%rax
   12112:	48 89 c7             	mov    %rax,%rdi
   12115:	e8 e6 38 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
   1211a:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
   12121:	5b                   	pop    %rbx
   12122:	41 5c                	pop    %r12
   12124:	5d                   	pop    %rbp
   12125:	c3                   	ret

0000000000012126 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>:

void VulkanApp::createBuffer(VkDeviceSize size, VkBufferUsageFlags usage,
                             VkMemoryPropertyFlags propertyFlags,
                             VkBuffer &buffer, VkDeviceMemory &bufferMemory) {
   12126:	55                   	push   %rbp
   12127:	48 89 e5             	mov    %rsp,%rbp
   1212a:	41 54                	push   %r12
   1212c:	53                   	push   %rbx
   1212d:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   12134:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
   1213b:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
   12142:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
   12148:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
   1214e:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
   12155:	4c 89 8d 48 ff ff ff 	mov    %r9,-0xb8(%rbp)
  [[maybe_unused]] static constexpr uint32_t vertexBufferCount = 1;
  VkBufferCreateInfo bufferInfo{};
   1215c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12160:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   12164:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   12168:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   1216c:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
   12171:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size = size;
   12178:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1217f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = usage;
   12183:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   12189:	89 45 d0             	mov    %eax,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
   1218c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &buffer) != VK_SUCCESS) {
   12193:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1219a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1219e:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   121a5:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   121a9:	48 89 d1             	mov    %rdx,%rcx
   121ac:	ba 00 00 00 00       	mov    $0x0,%edx
   121b1:	48 89 c7             	mov    %rax,%rdi
   121b4:	e8 47 33 ff ff       	call   5500 <vkCreateBuffer@plt>
   121b9:	85 c0                	test   %eax,%eax
   121bb:	0f 95 c0             	setne  %al
   121be:	84 c0                	test   %al,%al
   121c0:	74 3b                	je     121fd <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0xd7>
    throw std::runtime_error("Failed creating vertex buffer.");
   121c2:	bf 10 00 00 00       	mov    $0x10,%edi
   121c7:	e8 54 30 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   121cc:	48 89 c3             	mov    %rax,%rbx
   121cf:	48 8d 05 82 40 01 00 	lea    0x14082(%rip),%rax        # 26258 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x8>
   121d6:	48 89 c6             	mov    %rax,%rsi
   121d9:	48 89 df             	mov    %rbx,%rdi
   121dc:	e8 8f 2f ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   121e1:	48 8b 05 d8 6d 02 00 	mov    0x26dd8(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   121e8:	48 89 c2             	mov    %rax,%rdx
   121eb:	48 8d 05 4e 6b 02 00 	lea    0x26b4e(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   121f2:	48 89 c6             	mov    %rax,%rsi
   121f5:	48 89 df             	mov    %rbx,%rdi
   121f8:	e8 93 37 ff ff       	call   5990 <__cxa_throw@plt>
  }

  VkMemoryRequirements memoryRequirements;
  vkGetBufferMemoryRequirements(device, buffer, &memoryRequirements);
   121fd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12204:	48 8b 08             	mov    (%rax),%rcx
   12207:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1220e:	48 8b 40 50          	mov    0x50(%rax),%rax
   12212:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   12216:	48 89 ce             	mov    %rcx,%rsi
   12219:	48 89 c7             	mov    %rax,%rdi
   1221c:	e8 8f 2e ff ff       	call   50b0 <vkGetBufferMemoryRequirements@plt>

  VkMemoryAllocateInfo allocInfo{};
   12221:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12225:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   1222c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
   12230:	c7 85 70 ff ff ff 05 	movl   $0x5,-0x90(%rbp)
   12237:	00 00 00 
  allocInfo.allocationSize = memoryRequirements.size;
   1223a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1223e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  allocInfo.memoryTypeIndex =
      findMemoryType(memoryRequirements.memoryTypeBits, propertyFlags);
   12242:	8b 4d a0             	mov    -0x60(%rbp),%ecx
   12245:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   1224b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   12252:	89 ce                	mov    %ecx,%esi
   12254:	48 89 c7             	mov    %rax,%rdi
   12257:	e8 e2 fd ff ff       	call   1203e <_ZN9VulkanApp14findMemoryTypeEjj>
  allocInfo.memoryTypeIndex =
   1225c:	89 45 88             	mov    %eax,-0x78(%rbp)
  if (vkAllocateMemory(device, &allocInfo, nullptr, &bufferMemory) !=
   1225f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   12266:	48 8b 40 50          	mov    0x50(%rax),%rax
   1226a:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   12271:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
   12278:	48 89 d1             	mov    %rdx,%rcx
   1227b:	ba 00 00 00 00       	mov    $0x0,%edx
   12280:	48 89 c7             	mov    %rax,%rdi
   12283:	e8 e8 36 ff ff       	call   5970 <vkAllocateMemory@plt>
   12288:	85 c0                	test   %eax,%eax
   1228a:	0f 95 c0             	setne  %al
   1228d:	84 c0                	test   %al,%al
   1228f:	74 3b                	je     122cc <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x1a6>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   12291:	bf 10 00 00 00       	mov    $0x10,%edi
   12296:	e8 85 2f ff ff       	call   5220 <__cxa_allocate_exception@plt>
   1229b:	48 89 c3             	mov    %rax,%rbx
   1229e:	48 8d 05 d3 3f 01 00 	lea    0x13fd3(%rip),%rax        # 26278 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x28>
   122a5:	48 89 c6             	mov    %rax,%rsi
   122a8:	48 89 df             	mov    %rbx,%rdi
   122ab:	e8 c0 2e ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   122b0:	48 8b 05 09 6d 02 00 	mov    0x26d09(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   122b7:	48 89 c2             	mov    %rax,%rdx
   122ba:	48 8d 05 7f 6a 02 00 	lea    0x26a7f(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   122c1:	48 89 c6             	mov    %rax,%rsi
   122c4:	48 89 df             	mov    %rbx,%rdi
   122c7:	e8 c4 36 ff ff       	call   5990 <__cxa_throw@plt>
  }
  vkBindBufferMemory(device, buffer, bufferMemory, 0);
   122cc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   122d3:	48 8b 10             	mov    (%rax),%rdx
   122d6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   122dd:	48 8b 30             	mov    (%rax),%rsi
   122e0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   122e7:	48 8b 40 50          	mov    0x50(%rax),%rax
   122eb:	b9 00 00 00 00       	mov    $0x0,%ecx
   122f0:	48 89 c7             	mov    %rax,%rdi
   122f3:	e8 78 33 ff ff       	call   5670 <vkBindBufferMemory@plt>
}
   122f8:	eb 2c                	jmp    12326 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x200>
    throw std::runtime_error("Failed creating vertex buffer.");
   122fa:	49 89 c4             	mov    %rax,%r12
   122fd:	48 89 df             	mov    %rbx,%rdi
   12300:	e8 4b 30 ff ff       	call   5350 <__cxa_free_exception@plt>
   12305:	4c 89 e0             	mov    %r12,%rax
   12308:	48 89 c7             	mov    %rax,%rdi
   1230b:	e8 f0 36 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
   12310:	49 89 c4             	mov    %rax,%r12
   12313:	48 89 df             	mov    %rbx,%rdi
   12316:	e8 35 30 ff ff       	call   5350 <__cxa_free_exception@plt>
   1231b:	4c 89 e0             	mov    %r12,%rax
   1231e:	48 89 c7             	mov    %rax,%rdi
   12321:	e8 da 36 ff ff       	call   5a00 <_Unwind_Resume@plt>
}
   12326:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
   1232d:	5b                   	pop    %rbx
   1232e:	41 5c                	pop    %r12
   12330:	5d                   	pop    %rbp
   12331:	c3                   	ret

0000000000012332 <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>:

void VulkanApp::copyBuffer(VkBuffer src, VkBuffer dst, VkDeviceSize size) {
   12332:	55                   	push   %rbp
   12333:	48 89 e5             	mov    %rsp,%rbp
   12336:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   1233d:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
   12344:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
   1234b:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   12352:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
  VkCommandBufferAllocateInfo allocInfo{};
   12359:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1235d:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   12361:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
   12365:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
   1236c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  allocInfo.commandPool = commandPool;
   12373:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1237a:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
   12381:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  allocInfo.commandBufferCount = 1;
   12385:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)

  VkCommandBuffer commandBuffer =
      vkh::allocateCommandBuffer(device, &allocInfo);
   1238c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   12393:	48 8b 40 50          	mov    0x50(%rax),%rax
   12397:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1239b:	48 89 d6             	mov    %rdx,%rsi
   1239e:	48 89 c7             	mov    %rax,%rdi
   123a1:	e8 c6 51 ff ff       	call   756c <_ZN3vkh21allocateCommandBufferEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
   123a6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

  VkCommandBufferBeginInfo beginInfo{};
   123aa:	66 0f ef c0          	pxor   %xmm0,%xmm0
   123ae:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   123b2:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
   123b6:	c7 45 b0 2a 00 00 00 	movl   $0x2a,-0x50(%rbp)
  beginInfo.flags = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT;
   123bd:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  vkh::beginCommandBuffer(commandBuffer, &beginInfo);
   123c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123c8:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   123cc:	48 89 d6             	mov    %rdx,%rsi
   123cf:	48 89 c7             	mov    %rax,%rdi
   123d2:	e8 88 53 ff ff       	call   775f <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  VkBufferCopy copyRegion{};
   123d7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   123db:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   123df:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  copyRegion.srcOffset = 0;
   123e4:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
   123eb:	00 
  copyRegion.dstOffset = 0;
   123ec:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   123f3:	00 
  copyRegion.size = size;
   123f4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   123fb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  vkCmdCopyBuffer(commandBuffer, src, dst, 1, &copyRegion);
   123ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12403:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   12407:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1240e:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
   12415:	49 89 c8             	mov    %rcx,%r8
   12418:	b9 01 00 00 00       	mov    $0x1,%ecx
   1241d:	48 89 c7             	mov    %rax,%rdi
   12420:	e8 fb 33 ff ff       	call   5820 <vkCmdCopyBuffer@plt>

  vkh::endCommandBuffer(commandBuffer);
   12425:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12429:	48 89 c7             	mov    %rax,%rdi
   1242c:	e8 b8 53 ff ff       	call   77e9 <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>

  VkSubmitInfo submitInfo{};
   12431:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12435:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
   1243c:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
   12443:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
   1244a:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   12451:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   12456:	c7 85 40 ff ff ff 04 	movl   $0x4,-0xc0(%rbp)
   1245d:	00 00 00 
  submitInfo.commandBufferCount = 1;
   12460:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%rbp)
   12467:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffer;
   1246a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1246e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  /* Submit and wait on this transfer to complete before cleaning up
  the command buffer */
  vkQueueSubmit(queue, 1, &submitInfo, VK_NULL_HANDLE);
   12475:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1247c:	48 8b 40 60          	mov    0x60(%rax),%rax
   12480:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
   12487:	b9 00 00 00 00       	mov    $0x0,%ecx
   1248c:	be 01 00 00 00       	mov    $0x1,%esi
   12491:	48 89 c7             	mov    %rax,%rdi
   12494:	e8 a7 32 ff ff       	call   5740 <vkQueueSubmit@plt>
  vkQueueWaitIdle(queue);
   12499:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   124a0:	48 8b 40 60          	mov    0x60(%rax),%rax
   124a4:	48 89 c7             	mov    %rax,%rdi
   124a7:	e8 34 35 ff ff       	call   59e0 <vkQueueWaitIdle@plt>
  vkFreeCommandBuffers(device, commandPool, 1, &commandBuffer);
   124ac:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   124b3:	48 8b b0 40 01 00 00 	mov    0x140(%rax),%rsi
   124ba:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   124c1:	48 8b 40 50          	mov    0x50(%rax),%rax
   124c5:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   124c9:	48 89 d1             	mov    %rdx,%rcx
   124cc:	ba 01 00 00 00       	mov    $0x1,%edx
   124d1:	48 89 c7             	mov    %rax,%rdi
   124d4:	e8 87 2e ff ff       	call   5360 <vkFreeCommandBuffers@plt>
}
   124d9:	90                   	nop
   124da:	c9                   	leave
   124db:	c3                   	ret

00000000000124dc <_ZN9VulkanApp18createVertexBufferEv>:

void VulkanApp::createVertexBuffer() {
   124dc:	55                   	push   %rbp
   124dd:	48 89 e5             	mov    %rsp,%rbp
   124e0:	48 83 ec 30          	sub    $0x30,%rsp
   124e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize = sizeof(shader::triangle_index_data[0]) *
                            shader::triangle_index_data.size();
   124e8:	48 8d 05 f1 71 02 00 	lea    0x271f1(%rip),%rax        # 396e0 <_ZN6shader19triangle_index_dataE>
   124ef:	48 89 c7             	mov    %rax,%rdi
   124f2:	e8 2b 49 00 00       	call   16e22 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>
   124f7:	48 89 c2             	mov    %rax,%rdx
   124fa:	48 89 d0             	mov    %rdx,%rax
   124fd:	48 c1 e0 02          	shl    $0x2,%rax
   12501:	48 01 d0             	add    %rdx,%rax
   12504:	48 c1 e0 02          	shl    $0x2,%rax
   12508:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  /* Create a host visible buffer as temporary buffer */
  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
   1250c:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   12510:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   12514:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   12518:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1251c:	49 89 c9             	mov    %rcx,%r9
   1251f:	49 89 d0             	mov    %rdx,%r8
   12522:	b9 06 00 00 00       	mov    $0x6,%ecx
   12527:	ba 01 00 00 00       	mov    $0x1,%edx
   1252c:	48 89 c7             	mov    %rax,%rdi
   1252f:	e8 f2 fb ff ff       	call   12126 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  /* Copy the vertices data to the staging buffer */
  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
   12534:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   12538:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1253c:	48 8b 40 50          	mov    0x50(%rax),%rax
   12540:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   12544:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12548:	49 89 c9             	mov    %rcx,%r9
   1254b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   12551:	48 89 d1             	mov    %rdx,%rcx
   12554:	ba 00 00 00 00       	mov    $0x0,%edx
   12559:	48 89 c7             	mov    %rax,%rdi
   1255c:	e8 2f 2f ff ff       	call   5490 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle_index_data.data(),
   12561:	48 8d 05 78 71 02 00 	lea    0x27178(%rip),%rax        # 396e0 <_ZN6shader19triangle_index_dataE>
   12568:	48 89 c7             	mov    %rax,%rdi
   1256b:	e8 e0 48 00 00       	call   16e50 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>
   12570:	48 89 c1             	mov    %rax,%rcx
   12573:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12577:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1257b:	48 89 ce             	mov    %rcx,%rsi
   1257e:	48 89 c7             	mov    %rax,%rdi
   12581:	e8 5a 2e ff ff       	call   53e0 <memcpy@plt>
              static_cast<size_t>(bufferSize));
  vkUnmapMemory(device, stagingBufferMemory);
   12586:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1258a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1258e:	48 8b 40 50          	mov    0x50(%rax),%rax
   12592:	48 89 d6             	mov    %rdx,%rsi
   12595:	48 89 c7             	mov    %rax,%rdi
   12598:	e8 33 2e ff ff       	call   53d0 <vkUnmapMemory@plt>

  /* Create a device local buffer as actual vertex buffer */
  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, vertexBuffer, vertexBufferMemory);
   1259d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125a1:	48 8d 88 a0 01 00 00 	lea    0x1a0(%rax),%rcx
   125a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125ac:	48 8d 90 98 01 00 00 	lea    0x198(%rax),%rdx
  createBuffer(
   125b3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   125b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125bb:	49 89 c9             	mov    %rcx,%r9
   125be:	49 89 d0             	mov    %rdx,%r8
   125c1:	b9 01 00 00 00       	mov    $0x1,%ecx
   125c6:	ba 82 00 00 00       	mov    $0x82,%edx
   125cb:	48 89 c7             	mov    %rax,%rdi
   125ce:	e8 53 fb ff ff       	call   12126 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  /* Copy the data from the staging buffer to the device buffer */
  copyBuffer(stagingBuffer, vertexBuffer, bufferSize);
   125d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125d7:	48 8b 90 98 01 00 00 	mov    0x198(%rax),%rdx
   125de:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   125e2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   125e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125ea:	48 89 c7             	mov    %rax,%rdi
   125ed:	e8 40 fd ff ff       	call   12332 <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>

  /* Clean the staging buffer */
  vkDestroyBuffer(device, stagingBuffer, nullptr);
   125f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   125f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   125fa:	48 8b 40 50          	mov    0x50(%rax),%rax
   125fe:	ba 00 00 00 00       	mov    $0x0,%edx
   12603:	48 89 ce             	mov    %rcx,%rsi
   12606:	48 89 c7             	mov    %rax,%rdi
   12609:	e8 22 2c ff ff       	call   5230 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
   1260e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12612:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12616:	48 8b 40 50          	mov    0x50(%rax),%rax
   1261a:	ba 00 00 00 00       	mov    $0x0,%edx
   1261f:	48 89 ce             	mov    %rcx,%rsi
   12622:	48 89 c7             	mov    %rax,%rdi
   12625:	e8 76 2e ff ff       	call   54a0 <vkFreeMemory@plt>
}
   1262a:	90                   	nop
   1262b:	c9                   	leave
   1262c:	c3                   	ret
   1262d:	90                   	nop

000000000001262e <_ZN9VulkanApp17createIndexBufferEv>:

void VulkanApp::createIndexBuffer() {
   1262e:	55                   	push   %rbp
   1262f:	48 89 e5             	mov    %rsp,%rbp
   12632:	48 83 ec 30          	sub    $0x30,%rsp
   12636:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize =
      sizeof(shader::triangle_indices[0]) * shader::triangle_indices.size();
   1263a:	48 8d 05 7f 70 02 00 	lea    0x2707f(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
   12641:	48 89 c7             	mov    %rax,%rdi
   12644:	e8 b7 47 00 00       	call   16e00 <_ZNKSt6vectorItSaItEE4sizeEv>
   12649:	48 01 c0             	add    %rax,%rax
   1264c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  /* Create a host visible buffer as temporary buffer */
  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
   12650:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
   12654:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   12658:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1265c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12660:	49 89 c9             	mov    %rcx,%r9
   12663:	49 89 d0             	mov    %rdx,%r8
   12666:	b9 06 00 00 00       	mov    $0x6,%ecx
   1266b:	ba 01 00 00 00       	mov    $0x1,%edx
   12670:	48 89 c7             	mov    %rax,%rdi
   12673:	e8 ae fa ff ff       	call   12126 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  /* Copy the vertices data to the staging buffer */
  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
   12678:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1267c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12680:	48 8b 40 50          	mov    0x50(%rax),%rax
   12684:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   12688:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1268c:	49 89 c9             	mov    %rcx,%r9
   1268f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   12695:	48 89 d1             	mov    %rdx,%rcx
   12698:	ba 00 00 00 00       	mov    $0x0,%edx
   1269d:	48 89 c7             	mov    %rax,%rdi
   126a0:	e8 eb 2d ff ff       	call   5490 <vkMapMemory@plt>
  std::memcpy(data, shader::triangle_indices.data(),
   126a5:	48 8d 05 14 70 02 00 	lea    0x27014(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
   126ac:	48 89 c7             	mov    %rax,%rdi
   126af:	e8 c0 47 00 00       	call   16e74 <_ZNKSt6vectorItSaItEE4dataEv>
   126b4:	48 89 c1             	mov    %rax,%rcx
   126b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   126bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   126bf:	48 89 ce             	mov    %rcx,%rsi
   126c2:	48 89 c7             	mov    %rax,%rdi
   126c5:	e8 16 2d ff ff       	call   53e0 <memcpy@plt>
              static_cast<size_t>(bufferSize));
  vkUnmapMemory(device, stagingBufferMemory);
   126ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   126ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   126d2:	48 8b 40 50          	mov    0x50(%rax),%rax
   126d6:	48 89 d6             	mov    %rdx,%rsi
   126d9:	48 89 c7             	mov    %rax,%rdi
   126dc:	e8 ef 2c ff ff       	call   53d0 <vkUnmapMemory@plt>

  /* Create a device local buffer as actual vertex buffer */
  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, indexBuffer, indexBufferMemory);
   126e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   126e5:	48 8d 88 b0 01 00 00 	lea    0x1b0(%rax),%rcx
   126ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   126f0:	48 8d 90 a8 01 00 00 	lea    0x1a8(%rax),%rdx
  createBuffer(
   126f7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   126fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   126ff:	49 89 c9             	mov    %rcx,%r9
   12702:	49 89 d0             	mov    %rdx,%r8
   12705:	b9 01 00 00 00       	mov    $0x1,%ecx
   1270a:	ba 42 00 00 00       	mov    $0x42,%edx
   1270f:	48 89 c7             	mov    %rax,%rdi
   12712:	e8 0f fa ff ff       	call   12126 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  /* Copy the data from the staging buffer to the device buffer */
  copyBuffer(stagingBuffer, indexBuffer, bufferSize);
   12717:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1271b:	48 8b 90 a8 01 00 00 	mov    0x1a8(%rax),%rdx
   12722:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12726:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1272a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1272e:	48 89 c7             	mov    %rax,%rdi
   12731:	e8 fc fb ff ff       	call   12332 <_ZN9VulkanApp10copyBufferEP10VkBuffer_TS1_m>

  /* Clean the staging buffer */
  vkDestroyBuffer(device, stagingBuffer, nullptr);
   12736:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1273a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1273e:	48 8b 40 50          	mov    0x50(%rax),%rax
   12742:	ba 00 00 00 00       	mov    $0x0,%edx
   12747:	48 89 ce             	mov    %rcx,%rsi
   1274a:	48 89 c7             	mov    %rax,%rdi
   1274d:	e8 de 2a ff ff       	call   5230 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
   12752:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12756:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1275a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1275e:	ba 00 00 00 00       	mov    $0x0,%edx
   12763:	48 89 ce             	mov    %rcx,%rsi
   12766:	48 89 c7             	mov    %rax,%rdi
   12769:	e8 32 2d ff ff       	call   54a0 <vkFreeMemory@plt>
}
   1276e:	90                   	nop
   1276f:	c9                   	leave
   12770:	c3                   	ret
   12771:	90                   	nop

0000000000012772 <_ZN9VulkanApp20createUniformBuffersEv>:

void VulkanApp::createUniformBuffers() {
   12772:	55                   	push   %rbp
   12773:	48 89 e5             	mov    %rsp,%rbp
   12776:	53                   	push   %rbx
   12777:	48 83 ec 28          	sub    $0x28,%rsp
   1277b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkDeviceSize bufferSize = sizeof(vkh::UniformBufferObject);
   1277f:	48 c7 45 e0 c0 00 00 	movq   $0xc0,-0x20(%rbp)
   12786:	00 
  uniformBuffers.resize(maxFramesInFlight);
   12787:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1278b:	48 8d 90 b8 01 00 00 	lea    0x1b8(%rax),%rdx
   12792:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12796:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1279d:	48 89 c6             	mov    %rax,%rsi
   127a0:	48 89 d7             	mov    %rdx,%rdi
   127a3:	e8 f0 46 00 00       	call   16e98 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE6resizeEm>
  uniformBuffersMemory.resize(maxFramesInFlight);
   127a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127ac:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
   127b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127b7:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   127be:	48 89 c6             	mov    %rax,%rsi
   127c1:	48 89 d7             	mov    %rdx,%rdi
   127c4:	e8 55 47 00 00       	call   16f1e <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   127c9:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   127d0:	00 
   127d1:	eb 5f                	jmp    12832 <_ZN9VulkanApp20createUniformBuffersEv+0xc0>
    createBuffer(bufferSize, VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
                 VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT |
                     VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
                 uniformBuffers[i], uniformBuffersMemory[i]);
   127d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127d7:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
   127de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127e2:	48 89 c6             	mov    %rax,%rsi
   127e5:	48 89 d7             	mov    %rdx,%rdi
   127e8:	e8 d7 47 00 00       	call   16fc4 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEixEm>
   127ed:	48 89 c3             	mov    %rax,%rbx
   127f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127f4:	48 8d 90 b8 01 00 00 	lea    0x1b8(%rax),%rdx
   127fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127ff:	48 89 c6             	mov    %rax,%rsi
   12802:	48 89 d7             	mov    %rdx,%rdi
   12805:	e8 9a 47 00 00       	call   16fa4 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EEixEm>
   1280a:	48 89 c2             	mov    %rax,%rdx
    createBuffer(bufferSize, VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
   1280d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   12811:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12815:	49 89 d9             	mov    %rbx,%r9
   12818:	49 89 d0             	mov    %rdx,%r8
   1281b:	b9 06 00 00 00       	mov    $0x6,%ecx
   12820:	ba 10 00 00 00       	mov    $0x10,%edx
   12825:	48 89 c7             	mov    %rax,%rdi
   12828:	e8 f9 f8 ff ff       	call   12126 <_ZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1282d:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   12832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12836:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1283d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12841:	72 90                	jb     127d3 <_ZN9VulkanApp20createUniformBuffersEv+0x61>
  }
}
   12843:	90                   	nop
   12844:	90                   	nop
   12845:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12849:	c9                   	leave
   1284a:	c3                   	ret
   1284b:	90                   	nop

000000000001284c <_ZN9VulkanApp19updateUniformBufferEj>:

void VulkanApp::updateUniformBuffer(uint32_t currentImage) {
   1284c:	55                   	push   %rbp
   1284d:	48 89 e5             	mov    %rsp,%rbp
   12850:	53                   	push   %rbx
   12851:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
   12858:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
   1285f:	89 b5 74 fe ff ff    	mov    %esi,-0x18c(%rbp)
  static auto startTime = std::chrono::high_resolution_clock::now();
   12865:	0f b6 05 bc 6e 02 00 	movzbl 0x26ebc(%rip),%eax        # 39728 <_ZGVZN9VulkanApp19updateUniformBufferEjE9startTime>
   1286c:	84 c0                	test   %al,%al
   1286e:	0f 94 c0             	sete   %al
   12871:	84 c0                	test   %al,%al
   12873:	74 33                	je     128a8 <_ZN9VulkanApp19updateUniformBufferEj+0x5c>
   12875:	48 8d 05 ac 6e 02 00 	lea    0x26eac(%rip),%rax        # 39728 <_ZGVZN9VulkanApp19updateUniformBufferEjE9startTime>
   1287c:	48 89 c7             	mov    %rax,%rdi
   1287f:	e8 cc 31 ff ff       	call   5a50 <__cxa_guard_acquire@plt>
   12884:	85 c0                	test   %eax,%eax
   12886:	0f 95 c0             	setne  %al
   12889:	84 c0                	test   %al,%al
   1288b:	74 1b                	je     128a8 <_ZN9VulkanApp19updateUniformBufferEj+0x5c>
   1288d:	e8 be 27 ff ff       	call   5050 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
   12892:	48 89 05 87 6e 02 00 	mov    %rax,0x26e87(%rip)        # 39720 <_ZZN9VulkanApp19updateUniformBufferEjE9startTime>
   12899:	48 8d 05 88 6e 02 00 	lea    0x26e88(%rip),%rax        # 39728 <_ZGVZN9VulkanApp19updateUniformBufferEjE9startTime>
   128a0:	48 89 c7             	mov    %rax,%rdi
   128a3:	e8 48 2a ff ff       	call   52f0 <__cxa_guard_release@plt>

  auto currentTime = std::chrono::high_resolution_clock::now();
   128a8:	e8 a3 27 ff ff       	call   5050 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
   128ad:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  float time = std::chrono::duration<float, std::chrono::seconds::period>(
                   currentTime - startTime)
   128b4:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
   128bb:	48 8d 15 5e 6e 02 00 	lea    0x26e5e(%rip),%rdx        # 39720 <_ZZN9VulkanApp19updateUniformBufferEjE9startTime>
   128c2:	48 89 d6             	mov    %rdx,%rsi
   128c5:	48 89 c7             	mov    %rax,%rdi
   128c8:	e8 67 2e 00 00       	call   15734 <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   128cd:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  float time = std::chrono::duration<float, std::chrono::seconds::period>(
   128d4:	48 8d 95 68 ff ff ff 	lea    -0x98(%rbp),%rdx
   128db:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
   128e2:	48 89 d6             	mov    %rdx,%rsi
   128e5:	48 89 c7             	mov    %rax,%rdi
   128e8:	e8 f7 46 00 00       	call   16fe4 <_ZNSt6chrono8durationIfSt5ratioILl1ELl1EEEC1IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE>
                   .count();
   128ed:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
   128f4:	48 89 c7             	mov    %rax,%rdi
   128f7:	e8 22 47 00 00       	call   1701e <_ZNKSt6chrono8durationIfSt5ratioILl1ELl1EEE5countEv>
   128fc:	66 0f 7e c0          	movd   %xmm0,%eax
   12900:	89 45 ec             	mov    %eax,-0x14(%rbp)

  vkh::UniformBufferObject ubo{};
   12903:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
   1290a:	b8 00 00 00 00       	mov    $0x0,%eax
   1290f:	b9 18 00 00 00       	mov    $0x18,%ecx
   12914:	48 89 d7             	mov    %rdx,%rdi
   12917:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  ubo.model = glm::rotate(glm::mat4(1.0f), time * glm::radians(90.0f),
   1291a:	48 8d 85 74 ff ff ff 	lea    -0x8c(%rbp),%rax
   12921:	f3 0f 10 15 c3 41 01 	movss  0x141c3(%rip),%xmm2        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   12928:	00 
   12929:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1292d:	8b 15 bd 41 01 00    	mov    0x141bd(%rip),%edx        # 26af0 <_ZZN9VulkanApp6renderEvE11submitCount+0x7d4>
   12933:	66 0f 6e c2          	movd   %edx,%xmm0
   12937:	48 89 c7             	mov    %rax,%rdi
   1293a:	e8 9b 2b 00 00       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
   1293f:	8b 05 af 41 01 00    	mov    0x141af(%rip),%eax        # 26af4 <_ZZN9VulkanApp6renderEvE11submitCount+0x7d8>
   12945:	66 0f 6e c0          	movd   %eax,%xmm0
   12949:	e8 f6 47 00 00       	call   17144 <_ZN3glm7radiansIfEET_S1_>
   1294e:	66 0f 7e c0          	movd   %xmm0,%eax
   12952:	66 0f 6e e0          	movd   %eax,%xmm4
   12956:	f3 0f 59 65 ec       	mulss  -0x14(%rbp),%xmm4
   1295b:	66 0f 7e e3          	movd   %xmm4,%ebx
   1295f:	f3 0f 10 05 85 41 01 	movss  0x14185(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   12966:	00 
   12967:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
   1296c:	48 8d 55 c4          	lea    -0x3c(%rbp),%rdx
   12970:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   12974:	48 89 d6             	mov    %rdx,%rsi
   12977:	48 89 c7             	mov    %rax,%rdi
   1297a:	e8 1b 47 00 00       	call   1709a <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEC1ERKf>
   1297f:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
   12986:	48 8d 95 74 ff ff ff 	lea    -0x8c(%rbp),%rdx
   1298d:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
   12991:	66 0f 6e c3          	movd   %ebx,%xmm0
   12995:	48 89 ce             	mov    %rcx,%rsi
   12998:	48 89 c7             	mov    %rax,%rdi
   1299b:	e8 38 48 00 00       	call   171d8 <_ZN3glm6rotateIfLNS_9qualifierE0EEENS_3matILi4ELi4ET_XT0_EEERKS4_S3_RKNS_3vecILi3ES3_XT0_EEE>
   129a0:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   129a7:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
   129ae:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   129b5:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
   129bc:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
   129c3:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
   129ca:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
   129d1:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
   129d8:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
   129df:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
   129e6:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
   129ed:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
   129f4:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   129fb:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
   12a02:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
   12a09:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
                          glm::vec3(0.0f, 0.0f, 1.0f));
  ubo.view =
      glm::lookAt(glm::vec3(2.0f, 2.0f, 2.0f), glm::vec3(0.0f, 0.0f, 0.0f),
   12a10:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12a14:	f3 0f 10 15 d0 40 01 	movss  0x140d0(%rip),%xmm2        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   12a1b:	00 
   12a1c:	66 0f ef c9          	pxor   %xmm1,%xmm1
   12a20:	8b 15 ca 40 01 00    	mov    0x140ca(%rip),%edx        # 26af0 <_ZZN9VulkanApp6renderEvE11submitCount+0x7d4>
   12a26:	66 0f 6e c2          	movd   %edx,%xmm0
   12a2a:	48 89 c7             	mov    %rax,%rdi
   12a2d:	e8 a8 2a 00 00       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
   12a32:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
   12a36:	66 0f ef d2          	pxor   %xmm2,%xmm2
   12a3a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   12a3e:	8b 15 ac 40 01 00    	mov    0x140ac(%rip),%edx        # 26af0 <_ZZN9VulkanApp6renderEvE11submitCount+0x7d4>
   12a44:	66 0f 6e c2          	movd   %edx,%xmm0
   12a48:	48 89 c7             	mov    %rax,%rdi
   12a4b:	e8 8a 2a 00 00       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
   12a50:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12a54:	f3 0f 10 15 9c 40 01 	movss  0x1409c(%rip),%xmm2        # 26af8 <_ZZN9VulkanApp6renderEvE11submitCount+0x7dc>
   12a5b:	00 
   12a5c:	f3 0f 10 0d 94 40 01 	movss  0x14094(%rip),%xmm1        # 26af8 <_ZZN9VulkanApp6renderEvE11submitCount+0x7dc>
   12a63:	00 
   12a64:	8b 15 8e 40 01 00    	mov    0x1408e(%rip),%edx        # 26af8 <_ZZN9VulkanApp6renderEvE11submitCount+0x7dc>
   12a6a:	66 0f 6e c2          	movd   %edx,%xmm0
   12a6e:	48 89 c7             	mov    %rax,%rdi
   12a71:	e8 64 2a 00 00       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
   12a76:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
   12a7d:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   12a81:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
   12a85:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
   12a89:	48 89 c7             	mov    %rax,%rdi
   12a8c:	e8 1a 52 00 00       	call   17cab <_ZN3glm6lookAtIfLNS_9qualifierE0EEENS_3matILi4ELi4ET_XT0_EEERKNS_3vecILi3ES3_XT0_EEES8_S8_>
   12a91:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   12a98:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
   12a9f:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
   12aa6:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
   12aad:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
   12ab4:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
   12abb:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   12ac2:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
   12ac9:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
   12ad0:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
   12ad7:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   12ade:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   12ae5:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   12aec:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
   12af3:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   12afa:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
                  glm::vec3(0.0f, 0.0f, 1.0f));
  ubo.proj = glm::perspective(glm::radians(45.0f),
                              static_cast<float>(swapchain.extent.width) /
   12b01:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   12b08:	8b 40 7c             	mov    0x7c(%rax),%eax
   12b0b:	89 c0                	mov    %eax,%eax
   12b0d:	48 85 c0             	test   %rax,%rax
   12b10:	78 0b                	js     12b1d <_ZN9VulkanApp19updateUniformBufferEj+0x2d1>
   12b12:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12b16:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
   12b1b:	eb 19                	jmp    12b36 <_ZN9VulkanApp19updateUniformBufferEj+0x2ea>
   12b1d:	48 89 c2             	mov    %rax,%rdx
   12b20:	48 d1 ea             	shr    %rdx
   12b23:	83 e0 01             	and    $0x1,%eax
   12b26:	48 09 c2             	or     %rax,%rdx
   12b29:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12b2d:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
   12b32:	f3 0f 58 c0          	addss  %xmm0,%xmm0
                                  static_cast<float>(swapchain.extent.height),
   12b36:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   12b3d:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   12b43:	89 c0                	mov    %eax,%eax
   12b45:	48 85 c0             	test   %rax,%rax
   12b48:	78 0b                	js     12b55 <_ZN9VulkanApp19updateUniformBufferEj+0x309>
   12b4a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   12b4e:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
   12b53:	eb 19                	jmp    12b6e <_ZN9VulkanApp19updateUniformBufferEj+0x322>
   12b55:	48 89 c2             	mov    %rax,%rdx
   12b58:	48 d1 ea             	shr    %rdx
   12b5b:	83 e0 01             	and    $0x1,%eax
   12b5e:	48 09 c2             	or     %rax,%rdx
   12b61:	66 0f ef c9          	pxor   %xmm1,%xmm1
   12b65:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
   12b6a:	f3 0f 58 c9          	addss  %xmm1,%xmm1
  ubo.proj = glm::perspective(glm::radians(45.0f),
   12b6e:	f3 0f 5e c1          	divss  %xmm1,%xmm0
   12b72:	f3 0f 11 85 2c fe ff 	movss  %xmm0,-0x1d4(%rbp)
   12b79:	ff 
   12b7a:	8b 05 7c 3f 01 00    	mov    0x13f7c(%rip),%eax        # 26afc <_ZZN9VulkanApp6renderEvE11submitCount+0x7e0>
   12b80:	66 0f 6e c0          	movd   %eax,%xmm0
   12b84:	e8 bb 45 00 00       	call   17144 <_ZN3glm7radiansIfEET_S1_>
   12b89:	66 0f 7e c0          	movd   %xmm0,%eax
   12b8d:	48 8d 95 30 fe ff ff 	lea    -0x1d0(%rbp),%rdx
   12b94:	f3 0f 10 1d 64 3f 01 	movss  0x13f64(%rip),%xmm3        # 26b00 <_ZZN9VulkanApp6renderEvE11submitCount+0x7e4>
   12b9b:	00 
   12b9c:	f3 0f 10 15 60 3f 01 	movss  0x13f60(%rip),%xmm2        # 26b04 <_ZZN9VulkanApp6renderEvE11submitCount+0x7e8>
   12ba3:	00 
   12ba4:	f3 0f 10 8d 2c fe ff 	movss  -0x1d4(%rbp),%xmm1
   12bab:	ff 
   12bac:	66 0f 6e c0          	movd   %eax,%xmm0
   12bb0:	48 89 d7             	mov    %rdx,%rdi
   12bb3:	e8 2a 51 00 00       	call   17ce2 <_ZN3glm11perspectiveIfEENS_3matILi4ELi4ET_LNS_9qualifierE0EEES2_S2_S2_S2_>
   12bb8:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   12bbf:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
   12bc6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   12bcd:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
   12bd4:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
   12bdb:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
   12be2:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   12be9:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
   12bf0:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
   12bf7:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
   12bfe:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   12c05:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
   12c0c:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
   12c13:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
   12c1a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   12c21:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
                              0.1f, 10.0f);
  ubo.proj[1][1] *= -1;
   12c28:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
   12c2f:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   12c33:	be 01 00 00 00       	mov    $0x1,%esi
   12c38:	48 89 c7             	mov    %rax,%rdi
   12c3b:	e8 f4 50 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   12c40:	be 01 00 00 00       	mov    $0x1,%esi
   12c45:	48 89 c7             	mov    %rax,%rdi
   12c48:	e8 3d 51 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   12c4d:	f3 0f 10 00          	movss  (%rax),%xmm0
   12c51:	f3 0f 10 0d b7 3e 01 	movss  0x13eb7(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   12c58:	00 
   12c59:	0f 57 c1             	xorps  %xmm1,%xmm0
   12c5c:	f3 0f 11 00          	movss  %xmm0,(%rax)

  void *data;
  vkMapMemory(device, uniformBuffersMemory[currentImage], 0, sizeof(ubo), 0,
   12c60:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   12c67:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
   12c6e:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   12c74:	48 89 c6             	mov    %rax,%rsi
   12c77:	48 89 d7             	mov    %rdx,%rdi
   12c7a:	e8 45 43 00 00       	call   16fc4 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEixEm>
   12c7f:	48 8b 30             	mov    (%rax),%rsi
   12c82:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   12c89:	48 8b 40 50          	mov    0x50(%rax),%rax
   12c8d:	48 8d 95 88 fe ff ff 	lea    -0x178(%rbp),%rdx
   12c94:	49 89 d1             	mov    %rdx,%r9
   12c97:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   12c9d:	b9 c0 00 00 00       	mov    $0xc0,%ecx
   12ca2:	ba 00 00 00 00       	mov    $0x0,%edx
   12ca7:	48 89 c7             	mov    %rax,%rdi
   12caa:	e8 e1 27 ff ff       	call   5490 <vkMapMemory@plt>
              &data);
  memcpy(data, &ubo, sizeof(ubo));
   12caf:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
   12cb6:	48 8d 8d 90 fe ff ff 	lea    -0x170(%rbp),%rcx
   12cbd:	ba c0 00 00 00       	mov    $0xc0,%edx
   12cc2:	48 89 ce             	mov    %rcx,%rsi
   12cc5:	48 89 c7             	mov    %rax,%rdi
   12cc8:	e8 13 27 ff ff       	call   53e0 <memcpy@plt>
  vkUnmapMemory(device, uniformBuffersMemory[currentImage]);
   12ccd:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   12cd4:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
   12cdb:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
   12ce1:	48 89 c6             	mov    %rax,%rsi
   12ce4:	48 89 d7             	mov    %rdx,%rdi
   12ce7:	e8 d8 42 00 00       	call   16fc4 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEixEm>
   12cec:	48 8b 10             	mov    (%rax),%rdx
   12cef:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   12cf6:	48 8b 40 50          	mov    0x50(%rax),%rax
   12cfa:	48 89 d6             	mov    %rdx,%rsi
   12cfd:	48 89 c7             	mov    %rax,%rdi
   12d00:	e8 cb 26 ff ff       	call   53d0 <vkUnmapMemory@plt>
}
   12d05:	90                   	nop
   12d06:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12d0a:	c9                   	leave
   12d0b:	c3                   	ret

0000000000012d0c <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
   12d0c:	55                   	push   %rbp
   12d0d:	48 89 e5             	mov    %rsp,%rbp
   12d10:	53                   	push   %rbx
   12d11:	48 83 ec 58          	sub    $0x58,%rsp
   12d15:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
   12d19:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12d1d:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   12d21:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
   12d26:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
   12d2d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12d31:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   12d35:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
   12d3a:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
   12d41:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  sync.imageAvailableSemaphore.resize(maxFramesInFlight);
   12d48:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12d4c:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   12d53:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12d57:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12d5e:	48 89 c6             	mov    %rax,%rsi
   12d61:	48 89 d7             	mov    %rdx,%rdi
   12d64:	e8 a5 50 00 00       	call   17e0e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.renderFinisedSemaphore.resize(maxFramesInFlight);
   12d69:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12d6d:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   12d74:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12d78:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12d7f:	48 89 c6             	mov    %rax,%rsi
   12d82:	48 89 d7             	mov    %rdx,%rdi
   12d85:	e8 84 50 00 00       	call   17e0e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  sync.inFlightFence.resize(maxFramesInFlight);
   12d8a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12d8e:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   12d95:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12d99:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12da0:	48 89 c6             	mov    %rax,%rsi
   12da3:	48 89 d7             	mov    %rdx,%rdi
   12da6:	e8 e9 50 00 00       	call   17e94 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   12dab:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   12db2:	00 
   12db3:	e9 b9 00 00 00       	jmp    12e71 <_ZN9VulkanApp28createSynchronizationObjectsEv+0x165>
    sync.imageAvailableSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   12db8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12dbc:	48 8b 40 50          	mov    0x50(%rax),%rax
   12dc0:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   12dc4:	ba 00 00 00 00       	mov    $0x0,%edx
   12dc9:	48 89 ce             	mov    %rcx,%rsi
   12dcc:	48 89 c7             	mov    %rax,%rdi
   12dcf:	e8 49 5b ff ff       	call   891d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   12dd4:	48 89 c3             	mov    %rax,%rbx
    sync.imageAvailableSemaphore[i] =
   12dd7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12ddb:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   12de2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12de6:	48 89 c6             	mov    %rax,%rsi
   12de9:	48 89 d7             	mov    %rdx,%rdi
   12dec:	e8 29 51 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   12df1:	48 89 18             	mov    %rbx,(%rax)
    sync.renderFinisedSemaphore[i] =
        vkh::createSemaphore(device, &semaphoreInfo);
   12df4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12df8:	48 8b 40 50          	mov    0x50(%rax),%rax
   12dfc:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   12e00:	ba 00 00 00 00       	mov    $0x0,%edx
   12e05:	48 89 ce             	mov    %rcx,%rsi
   12e08:	48 89 c7             	mov    %rax,%rdi
   12e0b:	e8 0d 5b ff ff       	call   891d <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
   12e10:	48 89 c3             	mov    %rax,%rbx
    sync.renderFinisedSemaphore[i] =
   12e13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e17:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   12e1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e22:	48 89 c6             	mov    %rax,%rsi
   12e25:	48 89 d7             	mov    %rdx,%rdi
   12e28:	e8 ed 50 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   12e2d:	48 89 18             	mov    %rbx,(%rax)
    sync.inFlightFence[i] = vkh::createFence(device, &fenceInfo);
   12e30:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e34:	48 8b 40 50          	mov    0x50(%rax),%rax
   12e38:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   12e3c:	ba 00 00 00 00       	mov    $0x0,%edx
   12e41:	48 89 ce             	mov    %rcx,%rsi
   12e44:	48 89 c7             	mov    %rax,%rdi
   12e47:	e8 69 5b ff ff       	call   89b5 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
   12e4c:	48 89 c3             	mov    %rax,%rbx
   12e4f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e53:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   12e5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e5e:	48 89 c6             	mov    %rax,%rsi
   12e61:	48 89 d7             	mov    %rdx,%rdi
   12e64:	e8 d1 50 00 00       	call   17f3a <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   12e69:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   12e6c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   12e71:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12e75:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12e7c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12e80:	0f 82 32 ff ff ff    	jb     12db8 <_ZN9VulkanApp28createSynchronizationObjectsEv+0xac>
  }
}
   12e86:	90                   	nop
   12e87:	90                   	nop
   12e88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12e8c:	c9                   	leave
   12e8d:	c3                   	ret

0000000000012e8e <_ZN9VulkanApp25createDescriptorSetLayoutEv>:

void VulkanApp::createDescriptorSetLayout() {
   12e8e:	55                   	push   %rbp
   12e8f:	48 89 e5             	mov    %rsp,%rbp
   12e92:	41 54                	push   %r12
   12e94:	53                   	push   %rbx
   12e95:	48 83 ec 50          	sub    $0x50,%rsp
   12e99:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDescriptorSetLayoutBinding uboLayoutBinding{};
   12e9d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12ea1:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   12ea5:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  uboLayoutBinding.binding = 0;
   12eaa:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  uboLayoutBinding.descriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;
   12eb1:	c7 45 d4 06 00 00 00 	movl   $0x6,-0x2c(%rbp)
  uboLayoutBinding.descriptorCount = 1;
   12eb8:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
  uboLayoutBinding.stageFlags = VK_SHADER_STAGE_VERTEX_BIT;
   12ebf:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  uboLayoutBinding.pImmutableSamplers = nullptr;
   12ec6:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   12ecd:	00 

  VkDescriptorSetLayoutCreateInfo layoutInfo{};
   12ece:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12ed2:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   12ed6:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  layoutInfo.sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO;
   12eda:	c7 45 b0 20 00 00 00 	movl   $0x20,-0x50(%rbp)
  layoutInfo.bindingCount = 1;
   12ee1:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
  layoutInfo.pBindings = &uboLayoutBinding;
   12ee8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12eec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  if (vkCreateDescriptorSetLayout(device, &layoutInfo, nullptr,
   12ef0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12ef4:	48 8d 90 e8 01 00 00 	lea    0x1e8(%rax),%rdx
   12efb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12eff:	48 8b 40 50          	mov    0x50(%rax),%rax
   12f03:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
   12f07:	48 89 d1             	mov    %rdx,%rcx
   12f0a:	ba 00 00 00 00       	mov    $0x0,%edx
   12f0f:	48 89 c7             	mov    %rax,%rdi
   12f12:	e8 29 2b ff ff       	call   5a40 <vkCreateDescriptorSetLayout@plt>
                                  &descriptorSetLayout) != VK_SUCCESS) {
   12f17:	85 c0                	test   %eax,%eax
   12f19:	0f 95 c0             	setne  %al
  if (vkCreateDescriptorSetLayout(device, &layoutInfo, nullptr,
   12f1c:	84 c0                	test   %al,%al
   12f1e:	74 51                	je     12f71 <_ZN9VulkanApp25createDescriptorSetLayoutEv+0xe3>
    throw std::runtime_error("Failed to create descriptor set layout.");
   12f20:	bf 10 00 00 00       	mov    $0x10,%edi
   12f25:	e8 f6 22 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   12f2a:	48 89 c3             	mov    %rax,%rbx
   12f2d:	48 8d 05 74 33 01 00 	lea    0x13374(%rip),%rax        # 262a8 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x58>
   12f34:	48 89 c6             	mov    %rax,%rsi
   12f37:	48 89 df             	mov    %rbx,%rdi
   12f3a:	e8 31 22 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   12f3f:	48 8b 05 7a 60 02 00 	mov    0x2607a(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   12f46:	48 89 c2             	mov    %rax,%rdx
   12f49:	48 8d 05 f0 5d 02 00 	lea    0x25df0(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   12f50:	48 89 c6             	mov    %rax,%rsi
   12f53:	48 89 df             	mov    %rbx,%rdi
   12f56:	e8 35 2a ff ff       	call   5990 <__cxa_throw@plt>
   12f5b:	49 89 c4             	mov    %rax,%r12
   12f5e:	48 89 df             	mov    %rbx,%rdi
   12f61:	e8 ea 23 ff ff       	call   5350 <__cxa_free_exception@plt>
   12f66:	4c 89 e0             	mov    %r12,%rax
   12f69:	48 89 c7             	mov    %rax,%rdi
   12f6c:	e8 8f 2a ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
}
   12f71:	90                   	nop
   12f72:	48 83 c4 50          	add    $0x50,%rsp
   12f76:	5b                   	pop    %rbx
   12f77:	41 5c                	pop    %r12
   12f79:	5d                   	pop    %rbp
   12f7a:	c3                   	ret
   12f7b:	90                   	nop

0000000000012f7c <_ZN9VulkanApp20createDescriptorPoolEv>:

void VulkanApp::createDescriptorPool() {
   12f7c:	55                   	push   %rbp
   12f7d:	48 89 e5             	mov    %rsp,%rbp
   12f80:	41 54                	push   %r12
   12f82:	53                   	push   %rbx
   12f83:	48 83 ec 40          	sub    $0x40,%rsp
   12f87:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkDescriptorPoolSize descriptorPoolSize{};
   12f8b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   12f92:	00 
  descriptorPoolSize.type = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;
   12f93:	c7 45 e8 06 00 00 00 	movl   $0x6,-0x18(%rbp)
  descriptorPoolSize.descriptorCount = static_cast<uint32_t>(maxFramesInFlight);
   12f9a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12f9e:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12fa5:	89 45 ec             	mov    %eax,-0x14(%rbp)

  VkDescriptorPoolCreateInfo descriptorPoolInfo{};
   12fa8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   12fac:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
   12fb0:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   12fb4:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  descriptorPoolInfo.sType = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO;
   12fb9:	c7 45 c0 21 00 00 00 	movl   $0x21,-0x40(%rbp)
  descriptorPoolInfo.poolSizeCount = 1;
   12fc0:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
  descriptorPoolInfo.pPoolSizes = &descriptorPoolSize;
   12fc7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   12fcb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  descriptorPoolInfo.maxSets = static_cast<uint32_t>(maxFramesInFlight);
   12fcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12fd3:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   12fda:	89 45 d4             	mov    %eax,-0x2c(%rbp)

  if (vkCreateDescriptorPool(device, &descriptorPoolInfo, nullptr,
   12fdd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12fe1:	48 8d 90 f0 01 00 00 	lea    0x1f0(%rax),%rdx
   12fe8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12fec:	48 8b 40 50          	mov    0x50(%rax),%rax
   12ff0:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
   12ff4:	48 89 d1             	mov    %rdx,%rcx
   12ff7:	ba 00 00 00 00       	mov    $0x0,%edx
   12ffc:	48 89 c7             	mov    %rax,%rdi
   12fff:	e8 fc 20 ff ff       	call   5100 <vkCreateDescriptorPool@plt>
                             &descriptorPool) != VK_SUCCESS) {
   13004:	85 c0                	test   %eax,%eax
   13006:	0f 95 c0             	setne  %al
  if (vkCreateDescriptorPool(device, &descriptorPoolInfo, nullptr,
   13009:	84 c0                	test   %al,%al
   1300b:	74 51                	je     1305e <_ZN9VulkanApp20createDescriptorPoolEv+0xe2>
    throw std::runtime_error("Failed to create descriptor pool.");
   1300d:	bf 10 00 00 00       	mov    $0x10,%edi
   13012:	e8 09 22 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   13017:	48 89 c3             	mov    %rax,%rbx
   1301a:	48 8d 05 af 32 01 00 	lea    0x132af(%rip),%rax        # 262d0 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0x80>
   13021:	48 89 c6             	mov    %rax,%rsi
   13024:	48 89 df             	mov    %rbx,%rdi
   13027:	e8 44 21 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   1302c:	48 8b 05 8d 5f 02 00 	mov    0x25f8d(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   13033:	48 89 c2             	mov    %rax,%rdx
   13036:	48 8d 05 03 5d 02 00 	lea    0x25d03(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1303d:	48 89 c6             	mov    %rax,%rsi
   13040:	48 89 df             	mov    %rbx,%rdi
   13043:	e8 48 29 ff ff       	call   5990 <__cxa_throw@plt>
   13048:	49 89 c4             	mov    %rax,%r12
   1304b:	48 89 df             	mov    %rbx,%rdi
   1304e:	e8 fd 22 ff ff       	call   5350 <__cxa_free_exception@plt>
   13053:	4c 89 e0             	mov    %r12,%rax
   13056:	48 89 c7             	mov    %rax,%rdi
   13059:	e8 a2 29 ff ff       	call   5a00 <_Unwind_Resume@plt>
  }
}
   1305e:	90                   	nop
   1305f:	48 83 c4 40          	add    $0x40,%rsp
   13063:	5b                   	pop    %rbx
   13064:	41 5c                	pop    %r12
   13066:	5d                   	pop    %rbp
   13067:	c3                   	ret

0000000000013068 <_ZN9VulkanApp20createDescriptorSetsEv>:

void VulkanApp::createDescriptorSets() {
   13068:	55                   	push   %rbp
   13069:	48 89 e5             	mov    %rsp,%rbp
   1306c:	41 54                	push   %r12
   1306e:	53                   	push   %rbx
   1306f:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   13076:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  std::vector<VkDescriptorSetLayout> layouts{maxFramesInFlight,
   1307d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   13084:	48 8b 98 20 01 00 00 	mov    0x120(%rax),%rbx
                                             descriptorSetLayout};
   1308b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   13092:	4c 8d a0 e8 01 00 00 	lea    0x1e8(%rax),%r12
   13099:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   1309d:	48 89 c7             	mov    %rax,%rdi
   130a0:	e8 b5 4e 00 00       	call   17f5a <_ZNSaIP23VkDescriptorSetLayout_TEC1Ev>
   130a5:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   130a9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   130ad:	48 89 d1             	mov    %rdx,%rcx
   130b0:	4c 89 e2             	mov    %r12,%rdx
   130b3:	48 89 de             	mov    %rbx,%rsi
   130b6:	48 89 c7             	mov    %rax,%rdi
   130b9:	e8 d4 4e 00 00       	call   17f92 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EEC1EmRKS1_RKS2_>
   130be:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   130c2:	48 89 c7             	mov    %rax,%rdi
   130c5:	e8 ac 4e 00 00       	call   17f76 <_ZNSaIP23VkDescriptorSetLayout_TED1Ev>
  VkDescriptorSetAllocateInfo allocInfo{};
   130ca:	66 0f ef c0          	pxor   %xmm0,%xmm0
   130ce:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   130d2:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
   130d6:	66 0f d6 45 b0       	movq   %xmm0,-0x50(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO;
   130db:	c7 45 90 22 00 00 00 	movl   $0x22,-0x70(%rbp)
  allocInfo.descriptorPool = descriptorPool;
   130e2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   130e9:	48 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%rax
   130f0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  allocInfo.descriptorSetCount = static_cast<uint32_t>(maxFramesInFlight);
   130f4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   130fb:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   13102:	89 45 a8             	mov    %eax,-0x58(%rbp)
  allocInfo.pSetLayouts = layouts.data();
   13105:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13109:	48 89 c7             	mov    %rax,%rdi
   1310c:	e8 43 4f 00 00       	call   18054 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE4dataEv>
   13111:	48 89 45 b0          	mov    %rax,-0x50(%rbp)

  descriptorSets.resize(maxFramesInFlight);
   13115:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1311c:	48 8d 90 f8 01 00 00 	lea    0x1f8(%rax),%rdx
   13123:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1312a:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   13131:	48 89 c6             	mov    %rax,%rsi
   13134:	48 89 d7             	mov    %rdx,%rdi
   13137:	e8 3c 4f 00 00       	call   18078 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE6resizeEm>
  if (vkAllocateDescriptorSets(device, &allocInfo, descriptorSets.data()) !=
   1313c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   13143:	48 05 f8 01 00 00    	add    $0x1f8,%rax
   13149:	48 89 c7             	mov    %rax,%rdi
   1314c:	e8 8b 3c 00 00       	call   16ddc <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE4dataEv>
   13151:	48 89 c2             	mov    %rax,%rdx
   13154:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1315b:	48 8b 40 50          	mov    0x50(%rax),%rax
   1315f:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   13163:	48 89 ce             	mov    %rcx,%rsi
   13166:	48 89 c7             	mov    %rax,%rdi
   13169:	e8 d2 1e ff ff       	call   5040 <vkAllocateDescriptorSets@plt>
   1316e:	85 c0                	test   %eax,%eax
   13170:	0f 95 c0             	setne  %al
   13173:	84 c0                	test   %al,%al
   13175:	74 3b                	je     131b2 <_ZN9VulkanApp20createDescriptorSetsEv+0x14a>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate descriptor sets.");
   13177:	bf 10 00 00 00       	mov    $0x10,%edi
   1317c:	e8 9f 20 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   13181:	48 89 c3             	mov    %rax,%rbx
   13184:	48 8d 05 6d 31 01 00 	lea    0x1316d(%rip),%rax        # 262f8 <_ZZN9VulkanApp12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_TE17vertexBufferCount+0xa8>
   1318b:	48 89 c6             	mov    %rax,%rsi
   1318e:	48 89 df             	mov    %rbx,%rdi
   13191:	e8 da 1f ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   13196:	48 8b 05 23 5e 02 00 	mov    0x25e23(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1319d:	48 89 c2             	mov    %rax,%rdx
   131a0:	48 8d 05 99 5b 02 00 	lea    0x25b99(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   131a7:	48 89 c6             	mov    %rax,%rsi
   131aa:	48 89 df             	mov    %rbx,%rdi
   131ad:	e8 de 27 ff ff       	call   5990 <__cxa_throw@plt>
  }

  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   131b2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   131b9:	00 
   131ba:	e9 16 01 00 00       	jmp    132d5 <_ZN9VulkanApp20createDescriptorSetsEv+0x26d>
    VkDescriptorBufferInfo bufferInfo{};
   131bf:	66 0f ef c0          	pxor   %xmm0,%xmm0
   131c3:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   131ca:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
    bufferInfo.buffer = uniformBuffers[i];
   131cf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   131d6:	48 8d 90 b8 01 00 00 	lea    0x1b8(%rax),%rdx
   131dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131e1:	48 89 c6             	mov    %rax,%rsi
   131e4:	48 89 d7             	mov    %rdx,%rdi
   131e7:	e8 b8 3d 00 00       	call   16fa4 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EEixEm>
   131ec:	48 8b 00             	mov    (%rax),%rax
   131ef:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    bufferInfo.offset = 0;
   131f6:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
   131fd:	00 00 00 00 
    bufferInfo.range = sizeof(vkh::UniformBufferObject);
   13201:	48 c7 45 80 c0 00 00 	movq   $0xc0,-0x80(%rbp)
   13208:	00 

    VkWriteDescriptorSet descriptorWrite{};
   13209:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1320d:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
   13214:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
   1321b:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
   13222:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    descriptorWrite.sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
   13229:	c7 85 30 ff ff ff 23 	movl   $0x23,-0xd0(%rbp)
   13230:	00 00 00 
    descriptorWrite.dstSet = descriptorSets[i];
   13233:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1323a:	48 8d 90 f8 01 00 00 	lea    0x1f8(%rax),%rdx
   13241:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13245:	48 89 c6             	mov    %rax,%rsi
   13248:	48 89 d7             	mov    %rdx,%rdi
   1324b:	e8 ae 4e 00 00       	call   180fe <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EEixEm>
   13250:	48 8b 00             	mov    (%rax),%rax
   13253:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    descriptorWrite.dstBinding = 0;
   1325a:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
   13261:	00 00 00 
    descriptorWrite.dstArrayElement = 0;
   13264:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
   1326b:	00 00 00 
    descriptorWrite.descriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;
   1326e:	c7 85 54 ff ff ff 06 	movl   $0x6,-0xac(%rbp)
   13275:	00 00 00 
    descriptorWrite.descriptorCount = 1;
   13278:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
   1327f:	00 00 00 
    descriptorWrite.pBufferInfo = &bufferInfo;
   13282:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   13289:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    descriptorWrite.pImageInfo = nullptr;
   13290:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
   13297:	00 00 00 00 
    descriptorWrite.pTexelBufferView = nullptr;
   1329b:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   132a2:	00 00 00 00 

    vkUpdateDescriptorSets(device, 1, &descriptorWrite, 0, nullptr);
   132a6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   132ad:	48 8b 40 50          	mov    0x50(%rax),%rax
   132b1:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   132b8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   132be:	b9 00 00 00 00       	mov    $0x0,%ecx
   132c3:	be 01 00 00 00       	mov    $0x1,%esi
   132c8:	48 89 c7             	mov    %rax,%rdi
   132cb:	e8 40 23 ff ff       	call   5610 <vkUpdateDescriptorSets@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   132d0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
   132d5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   132dc:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   132e3:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   132e7:	0f 82 d2 fe ff ff    	jb     131bf <_ZN9VulkanApp20createDescriptorSetsEv+0x157>
  }
}
   132ed:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   132f1:	48 89 c7             	mov    %rax,%rdi
   132f4:	e8 17 4d 00 00       	call   18010 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EED1Ev>
   132f9:	eb 44                	jmp    1333f <_ZN9VulkanApp20createDescriptorSetsEv+0x2d7>
                                             descriptorSetLayout};
   132fb:	48 89 c3             	mov    %rax,%rbx
   132fe:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   13302:	48 89 c7             	mov    %rax,%rdi
   13305:	e8 6c 4c 00 00       	call   17f76 <_ZNSaIP23VkDescriptorSetLayout_TED1Ev>
   1330a:	48 89 d8             	mov    %rbx,%rax
   1330d:	48 89 c7             	mov    %rax,%rdi
   13310:	e8 eb 26 ff ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate descriptor sets.");
   13315:	49 89 c4             	mov    %rax,%r12
   13318:	48 89 df             	mov    %rbx,%rdi
   1331b:	e8 30 20 ff ff       	call   5350 <__cxa_free_exception@plt>
   13320:	4c 89 e3             	mov    %r12,%rbx
   13323:	eb 03                	jmp    13328 <_ZN9VulkanApp20createDescriptorSetsEv+0x2c0>
}
   13325:	48 89 c3             	mov    %rax,%rbx
   13328:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1332c:	48 89 c7             	mov    %rax,%rdi
   1332f:	e8 dc 4c 00 00       	call   18010 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EED1Ev>
   13334:	48 89 d8             	mov    %rbx,%rax
   13337:	48 89 c7             	mov    %rax,%rdi
   1333a:	e8 c1 26 ff ff       	call   5a00 <_Unwind_Resume@plt>
   1333f:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
   13346:	5b                   	pop    %rbx
   13347:	41 5c                	pop    %r12
   13349:	5d                   	pop    %rbp
   1334a:	c3                   	ret
   1334b:	90                   	nop

000000000001334c <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
   1334c:	55                   	push   %rbp
   1334d:	48 89 e5             	mov    %rsp,%rbp
   13350:	41 57                	push   %r15
   13352:	41 56                	push   %r14
   13354:	41 55                	push   %r13
   13356:	41 54                	push   %r12
   13358:	53                   	push   %rbx
   13359:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   13360:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* 1. Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence[sync.currentFrame], VK_TRUE,
   13367:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1336e:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   13375:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1337c:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   13383:	48 89 c6             	mov    %rax,%rsi
   13386:	48 89 d7             	mov    %rdx,%rdi
   13389:	e8 ac 4b 00 00       	call   17f3a <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   1338e:	48 89 c2             	mov    %rax,%rdx
   13391:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13398:	48 8b 40 50          	mov    0x50(%rax),%rax
   1339c:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   133a3:	b9 01 00 00 00       	mov    $0x1,%ecx
   133a8:	be 01 00 00 00       	mov    $0x1,%esi
   133ad:	48 89 c7             	mov    %rax,%rdi
   133b0:	e8 eb 1e ff ff       	call   52a0 <vkWaitForFences@plt>

  /* 2. Acquire an image frome the swapchain */
  uint32_t imageIndex;
  VkResult result =
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
                            sync.imageAvailableSemaphore[sync.currentFrame],
   133b5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   133bc:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   133c3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   133ca:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   133d1:	48 89 c6             	mov    %rax,%rsi
   133d4:	48 89 d7             	mov    %rdx,%rdi
   133d7:	e8 3e 4b 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
      vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
   133dc:	48 8b 10             	mov    (%rax),%rdx
   133df:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   133e6:	48 8b 70 70          	mov    0x70(%rax),%rsi
   133ea:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   133f1:	48 8b 40 50          	mov    0x50(%rax),%rax
   133f5:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
   133f9:	49 89 c9             	mov    %rcx,%r9
   133fc:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   13402:	48 89 d1             	mov    %rdx,%rcx
   13405:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1340c:	48 89 c7             	mov    %rax,%rdi
   1340f:	e8 9c 1d ff ff       	call   51b0 <vkAcquireNextImageKHR@plt>
   13414:	89 45 cc             	mov    %eax,-0x34(%rbp)
                            VK_NULL_HANDLE, &imageIndex);
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR) {
   13417:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   1341e:	74 09                	je     13429 <_ZN9VulkanApp6renderEv+0xdd>
   13420:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   13427:	75 14                	jne    1343d <_ZN9VulkanApp6renderEv+0xf1>
    recreateSwapchain();
   13429:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13430:	48 89 c7             	mov    %rax,%rdi
   13433:	e8 52 e6 ff ff       	call   11a8a <_ZN9VulkanApp17recreateSwapchainEv>
    throw std::runtime_error("Failed to present swapchain image.");
  }

  /* 6. Set up the next frame */
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
}
   13438:	e9 17 06 00 00       	jmp    13a54 <_ZN9VulkanApp6renderEv+0x708>
  } else if (result != VK_SUCCESS) {
   1343d:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   13441:	74 3b                	je     1347e <_ZN9VulkanApp6renderEv+0x132>
    throw std::runtime_error("Failed to acquire swapchain image.");
   13443:	bf 10 00 00 00       	mov    $0x10,%edi
   13448:	e8 d3 1d ff ff       	call   5220 <__cxa_allocate_exception@plt>
   1344d:	48 89 c3             	mov    %rax,%rbx
   13450:	48 8d 05 c9 2e 01 00 	lea    0x12ec9(%rip),%rax        # 26320 <_ZZN9VulkanApp6renderEvE11submitCount+0x4>
   13457:	48 89 c6             	mov    %rax,%rsi
   1345a:	48 89 df             	mov    %rbx,%rdi
   1345d:	e8 0e 1d ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   13462:	48 8b 05 57 5b 02 00 	mov    0x25b57(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   13469:	48 89 c2             	mov    %rax,%rdx
   1346c:	48 8d 05 cd 58 02 00 	lea    0x258cd(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   13473:	48 89 c6             	mov    %rax,%rsi
   13476:	48 89 df             	mov    %rbx,%rdi
   13479:	e8 12 25 ff ff       	call   5990 <__cxa_throw@plt>
  vkResetFences(device, 1, &sync.inFlightFence[sync.currentFrame]);
   1347e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13485:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   1348c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13493:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   1349a:	48 89 c6             	mov    %rax,%rsi
   1349d:	48 89 d7             	mov    %rdx,%rdi
   134a0:	e8 95 4a 00 00       	call   17f3a <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   134a5:	48 89 c2             	mov    %rax,%rdx
   134a8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   134af:	48 8b 40 50          	mov    0x50(%rax),%rax
   134b3:	be 01 00 00 00       	mov    $0x1,%esi
   134b8:	48 89 c7             	mov    %rax,%rdi
   134bb:	e8 e0 23 ff ff       	call   58a0 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[sync.currentFrame], 0);
   134c0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   134c7:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   134ce:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   134d5:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   134dc:	48 89 c6             	mov    %rax,%rsi
   134df:	48 89 d7             	mov    %rdx,%rdi
   134e2:	e8 37 4c 00 00       	call   1811e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   134e7:	48 8b 00             	mov    (%rax),%rax
   134ea:	be 00 00 00 00       	mov    $0x0,%esi
   134ef:	48 89 c7             	mov    %rax,%rdi
   134f2:	e8 e9 21 ff ff       	call   56e0 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[sync.currentFrame], imageIndex);
   134f7:	8b 5d a4             	mov    -0x5c(%rbp),%ebx
   134fa:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13501:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   13508:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1350f:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   13516:	48 89 c6             	mov    %rax,%rsi
   13519:	48 89 d7             	mov    %rdx,%rdi
   1351c:	e8 fd 4b 00 00       	call   1811e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   13521:	48 8b 08             	mov    (%rax),%rcx
   13524:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1352b:	89 da                	mov    %ebx,%edx
   1352d:	48 89 ce             	mov    %rcx,%rsi
   13530:	48 89 c7             	mov    %rax,%rdi
   13533:	e8 bc e8 ff ff       	call   11df4 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   13538:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1353f:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   13546:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1354d:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   13554:	48 89 c6             	mov    %rax,%rsi
   13557:	48 89 d7             	mov    %rdx,%rdi
   1355a:	e8 bb 49 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1355f:	48 8b 00             	mov    (%rax),%rax
   13562:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   13566:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
   1356a:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   13571:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
   13578:	01 00 00 00 
   1357c:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   13580:	48 89 c7             	mov    %rax,%rdi
   13583:	e8 b6 4b 00 00       	call   1813e <_ZNSaIP13VkSemaphore_TEC1Ev>
   13588:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
   1358c:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
   13593:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
   1359a:	48 89 ce             	mov    %rcx,%rsi
   1359d:	48 89 df             	mov    %rbx,%rdi
   135a0:	48 89 df             	mov    %rbx,%rdi
   135a3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   135a7:	48 89 d1             	mov    %rdx,%rcx
   135aa:	48 89 fa             	mov    %rdi,%rdx
   135ad:	48 89 c7             	mov    %rax,%rdi
   135b0:	e8 c1 4b 00 00       	call   18176 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   135b5:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   135b9:	48 89 c7             	mov    %rax,%rdi
   135bc:	e8 99 4b 00 00       	call   1815a <_ZNSaIP13VkSemaphore_TED1Ev>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   135c1:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
   135c8:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   135cc:	49 89 c6             	mov    %rax,%r14
   135cf:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   135d5:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   135d9:	48 89 c7             	mov    %rax,%rdi
   135dc:	e8 61 4c 00 00       	call   18242 <_ZNSaIjEC1Ev>
   135e1:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   135e5:	4c 89 f6             	mov    %r14,%rsi
   135e8:	4c 89 ff             	mov    %r15,%rdi
   135eb:	4c 89 f1             	mov    %r14,%rcx
   135ee:	4c 89 fb             	mov    %r15,%rbx
   135f1:	48 89 df             	mov    %rbx,%rdi
   135f4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   135fb:	48 89 d1             	mov    %rdx,%rcx
   135fe:	48 89 fa             	mov    %rdi,%rdx
   13601:	48 89 c7             	mov    %rax,%rdi
   13604:	e8 71 4c 00 00       	call   1827a <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
   13609:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   1360d:	48 89 c7             	mov    %rax,%rdi
   13610:	e8 49 4c 00 00       	call   1825e <_ZNSaIjED1Ev>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   13615:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1361c:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   13623:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1362a:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   13631:	48 89 c6             	mov    %rax,%rsi
   13634:	48 89 d7             	mov    %rdx,%rdi
   13637:	e8 de 48 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1363c:	48 8b 00             	mov    (%rax),%rax
   1363f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13643:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13647:	49 89 c4             	mov    %rax,%r12
   1364a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13650:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   13654:	48 89 c7             	mov    %rax,%rdi
   13657:	e8 e2 4a 00 00       	call   1813e <_ZNSaIP13VkSemaphore_TEC1Ev>
   1365c:	48 8d 55 cb          	lea    -0x35(%rbp),%rdx
   13660:	4c 89 e6             	mov    %r12,%rsi
   13663:	4c 89 ef             	mov    %r13,%rdi
   13666:	4c 89 e1             	mov    %r12,%rcx
   13669:	4c 89 eb             	mov    %r13,%rbx
   1366c:	48 89 df             	mov    %rbx,%rdi
   1366f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13676:	48 89 d1             	mov    %rdx,%rcx
   13679:	48 89 fa             	mov    %rdi,%rdx
   1367c:	48 89 c7             	mov    %rax,%rdi
   1367f:	e8 f2 4a 00 00       	call   18176 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   13684:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   13688:	48 89 c7             	mov    %rax,%rdi
   1368b:	e8 ca 4a 00 00       	call   1815a <_ZNSaIP13VkSemaphore_TED1Ev>
  updateUniformBuffer(static_cast<uint32_t>(sync.currentFrame));
   13690:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13697:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   1369e:	89 c2                	mov    %eax,%edx
   136a0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   136a7:	89 d6                	mov    %edx,%esi
   136a9:	48 89 c7             	mov    %rax,%rdi
   136ac:	e8 9b f1 ff ff       	call   1284c <_ZN9VulkanApp19updateUniformBufferEj>
  VkSubmitInfo submitInfo{};
   136b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   136b5:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
   136bc:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
   136c3:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
   136ca:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   136d1:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
   136d8:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
   136d9:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
   136e0:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
   136e3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   136e7:	48 89 c7             	mov    %rax,%rdi
   136ea:	e8 57 4c 00 00       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   136ef:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
   136f5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   136f9:	48 89 c7             	mov    %rax,%rdi
   136fc:	e8 69 4c 00 00       	call   1836a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   13701:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
   13708:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1370f:	48 89 c7             	mov    %rax,%rdi
   13712:	e8 77 4c 00 00       	call   1838e <_ZNSt6vectorIjSaIjEE4dataEv>
   13717:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = 1;
   1371e:	c7 85 18 ff ff ff 01 	movl   $0x1,-0xe8(%rbp)
   13725:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffers[sync.currentFrame];
   13728:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1372f:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
   13736:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1373d:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   13744:	48 89 c6             	mov    %rax,%rsi
   13747:	48 89 d7             	mov    %rdx,%rdi
   1374a:	e8 cf 49 00 00       	call   1811e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
   1374f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
      static_cast<uint32_t>(signalSemaphores.size());
   13756:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1375d:	48 89 c7             	mov    %rax,%rdi
   13760:	e8 e1 4b 00 00       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
   13765:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
   1376b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13772:	48 89 c7             	mov    %rax,%rdi
   13775:	e8 f0 4b 00 00       	call   1836a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   1377a:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   13781:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13788:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   1378f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13796:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   1379d:	48 89 c6             	mov    %rax,%rsi
   137a0:	48 89 d7             	mov    %rdx,%rdi
   137a3:	e8 92 47 00 00       	call   17f3a <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   137a8:	48 8b 08             	mov    (%rax),%rcx
   137ab:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   137b2:	48 8b 40 60          	mov    0x60(%rax),%rax
   137b6:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   137bd:	be 01 00 00 00       	mov    $0x1,%esi
   137c2:	48 89 c7             	mov    %rax,%rdi
   137c5:	e8 76 1f ff ff       	call   5740 <vkQueueSubmit@plt>
                    sync.inFlightFence[sync.currentFrame]) != VK_SUCCESS) {
   137ca:	85 c0                	test   %eax,%eax
   137cc:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(queue, submitCount, &submitInfo,
   137cf:	84 c0                	test   %al,%al
   137d1:	74 3b                	je     1380e <_ZN9VulkanApp6renderEv+0x4c2>
    throw std::runtime_error("Failed to submit draw command buffer.");
   137d3:	bf 10 00 00 00       	mov    $0x10,%edi
   137d8:	e8 43 1a ff ff       	call   5220 <__cxa_allocate_exception@plt>
   137dd:	48 89 c3             	mov    %rax,%rbx
   137e0:	48 8d 05 61 2b 01 00 	lea    0x12b61(%rip),%rax        # 26348 <_ZZN9VulkanApp6renderEvE11submitCount+0x2c>
   137e7:	48 89 c6             	mov    %rax,%rsi
   137ea:	48 89 df             	mov    %rbx,%rdi
   137ed:	e8 7e 19 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   137f2:	48 8b 05 c7 57 02 00 	mov    0x257c7(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   137f9:	48 89 c2             	mov    %rax,%rdx
   137fc:	48 8d 05 3d 55 02 00 	lea    0x2553d(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   13803:	48 89 c6             	mov    %rax,%rsi
   13806:	48 89 df             	mov    %rbx,%rdi
   13809:	e8 82 21 ff ff       	call   5990 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
   1380e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   13812:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   13819:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
   13820:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
   13827:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
   1382e:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
   13835:	cd 9a 3b 
      static_cast<uint32_t>(signalSemaphores.size());
   13838:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1383f:	48 89 c7             	mov    %rax,%rdi
   13842:	e8 ff 4a 00 00       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
   13847:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
   1384d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13854:	48 89 c7             	mov    %rax,%rdi
   13857:	e8 0e 4b 00 00       	call   1836a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
   1385c:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
   13863:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1386a:	8b 80 8c 00 00 00    	mov    0x8c(%rax),%eax
   13870:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
   13876:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1387d:	48 83 c0 70          	add    $0x70,%rax
   13881:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
   13888:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
   1388c:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
   13893:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
   1389a:	00 00 00 00 
  result = vkQueuePresentKHR(queue, &presentInfo);
   1389e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   138a5:	48 8b 40 60          	mov    0x60(%rax),%rax
   138a9:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   138b0:	48 89 d6             	mov    %rdx,%rsi
   138b3:	48 89 c7             	mov    %rax,%rdi
   138b6:	e8 35 20 ff ff       	call   58f0 <vkQueuePresentKHR@plt>
   138bb:	89 45 cc             	mov    %eax,-0x34(%rbp)
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   138be:	81 7d cc eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x34(%rbp)
   138c5:	74 1b                	je     138e2 <_ZN9VulkanApp6renderEv+0x596>
   138c7:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   138ce:	74 12                	je     138e2 <_ZN9VulkanApp6renderEv+0x596>
      framebufferResized) {
   138d0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   138d7:	0f b6 80 18 01 00 00 	movzbl 0x118(%rax),%eax
  if (result == VK_SUBOPTIMAL_KHR || result == VK_ERROR_OUT_OF_DATE_KHR ||
   138de:	84 c0                	test   %al,%al
   138e0:	74 1f                	je     13901 <_ZN9VulkanApp6renderEv+0x5b5>
    framebufferResized = false;
   138e2:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   138e9:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
    recreateSwapchain();
   138f0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   138f7:	48 89 c7             	mov    %rax,%rdi
   138fa:	e8 8b e1 ff ff       	call   11a8a <_ZN9VulkanApp17recreateSwapchainEv>
   138ff:	eb 41                	jmp    13942 <_ZN9VulkanApp6renderEv+0x5f6>
  } else if (result != VK_SUCCESS) {
   13901:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   13905:	74 3b                	je     13942 <_ZN9VulkanApp6renderEv+0x5f6>
    throw std::runtime_error("Failed to present swapchain image.");
   13907:	bf 10 00 00 00       	mov    $0x10,%edi
   1390c:	e8 0f 19 ff ff       	call   5220 <__cxa_allocate_exception@plt>
   13911:	48 89 c3             	mov    %rax,%rbx
   13914:	48 8d 05 55 2a 01 00 	lea    0x12a55(%rip),%rax        # 26370 <_ZZN9VulkanApp6renderEvE11submitCount+0x54>
   1391b:	48 89 c6             	mov    %rax,%rsi
   1391e:	48 89 df             	mov    %rbx,%rdi
   13921:	e8 4a 18 ff ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   13926:	48 8b 05 93 56 02 00 	mov    0x25693(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1392d:	48 89 c2             	mov    %rax,%rdx
   13930:	48 8d 05 09 54 02 00 	lea    0x25409(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   13937:	48 89 c6             	mov    %rax,%rsi
   1393a:	48 89 df             	mov    %rbx,%rdi
   1393d:	e8 4e 20 ff ff       	call   5990 <__cxa_throw@plt>
  sync.currentFrame = (sync.currentFrame + 1) % maxFramesInFlight;
   13942:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13949:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
   13950:	48 8d 50 01          	lea    0x1(%rax),%rdx
   13954:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1395b:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
   13962:	48 89 d0             	mov    %rdx,%rax
   13965:	ba 00 00 00 00       	mov    $0x0,%edx
   1396a:	48 f7 f1             	div    %rcx
   1396d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   13974:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
}
   1397b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13982:	48 89 c7             	mov    %rax,%rdi
   13985:	e8 74 48 00 00       	call   181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   1398a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   13991:	48 89 c7             	mov    %rax,%rdi
   13994:	e8 69 49 00 00       	call   18302 <_ZNSt6vectorIjSaIjEED1Ev>
   13999:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1399d:	48 89 c7             	mov    %rax,%rdi
   139a0:	e8 59 48 00 00       	call   181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   139a5:	e9 aa 00 00 00       	jmp    13a54 <_ZN9VulkanApp6renderEv+0x708>
    throw std::runtime_error("Failed to acquire swapchain image.");
   139aa:	49 89 c4             	mov    %rax,%r12
   139ad:	48 89 df             	mov    %rbx,%rdi
   139b0:	e8 9b 19 ff ff       	call   5350 <__cxa_free_exception@plt>
   139b5:	4c 89 e0             	mov    %r12,%rax
   139b8:	48 89 c7             	mov    %rax,%rdi
   139bb:	e8 40 20 ff ff       	call   5a00 <_Unwind_Resume@plt>
      sync.imageAvailableSemaphore[sync.currentFrame]};
   139c0:	48 89 c3             	mov    %rax,%rbx
   139c3:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
   139c7:	48 89 c7             	mov    %rax,%rdi
   139ca:	e8 8b 47 00 00       	call   1815a <_ZNSaIP13VkSemaphore_TED1Ev>
   139cf:	48 89 d8             	mov    %rbx,%rax
   139d2:	48 89 c7             	mov    %rax,%rdi
   139d5:	e8 26 20 ff ff       	call   5a00 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
   139da:	48 89 c3             	mov    %rax,%rbx
   139dd:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
   139e1:	48 89 c7             	mov    %rax,%rdi
   139e4:	e8 75 48 00 00       	call   1825e <_ZNSaIjED1Ev>
   139e9:	eb 52                	jmp    13a3d <_ZN9VulkanApp6renderEv+0x6f1>
      sync.renderFinisedSemaphore[sync.currentFrame]};
   139eb:	48 89 c3             	mov    %rax,%rbx
   139ee:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
   139f2:	48 89 c7             	mov    %rax,%rdi
   139f5:	e8 60 47 00 00       	call   1815a <_ZNSaIP13VkSemaphore_TED1Ev>
   139fa:	eb 32                	jmp    13a2e <_ZN9VulkanApp6renderEv+0x6e2>
    throw std::runtime_error("Failed to submit draw command buffer.");
   139fc:	49 89 c4             	mov    %rax,%r12
   139ff:	48 89 df             	mov    %rbx,%rdi
   13a02:	e8 49 19 ff ff       	call   5350 <__cxa_free_exception@plt>
   13a07:	4c 89 e3             	mov    %r12,%rbx
   13a0a:	eb 13                	jmp    13a1f <_ZN9VulkanApp6renderEv+0x6d3>
    throw std::runtime_error("Failed to present swapchain image.");
   13a0c:	49 89 c4             	mov    %rax,%r12
   13a0f:	48 89 df             	mov    %rbx,%rdi
   13a12:	e8 39 19 ff ff       	call   5350 <__cxa_free_exception@plt>
   13a17:	4c 89 e3             	mov    %r12,%rbx
   13a1a:	eb 03                	jmp    13a1f <_ZN9VulkanApp6renderEv+0x6d3>
}
   13a1c:	48 89 c3             	mov    %rax,%rbx
   13a1f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13a26:	48 89 c7             	mov    %rax,%rdi
   13a29:	e8 d0 47 00 00       	call   181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   13a2e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   13a35:	48 89 c7             	mov    %rax,%rdi
   13a38:	e8 c5 48 00 00       	call   18302 <_ZNSt6vectorIjSaIjEED1Ev>
   13a3d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   13a41:	48 89 c7             	mov    %rax,%rdi
   13a44:	e8 b5 47 00 00       	call   181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   13a49:	48 89 d8             	mov    %rbx,%rax
   13a4c:	48 89 c7             	mov    %rax,%rdi
   13a4f:	e8 ac 1f ff ff       	call   5a00 <_Unwind_Resume@plt>
   13a54:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   13a5b:	5b                   	pop    %rbx
   13a5c:	41 5c                	pop    %r12
   13a5e:	41 5d                	pop    %r13
   13a60:	41 5e                	pop    %r14
   13a62:	41 5f                	pop    %r15
   13a64:	5d                   	pop    %rbp
   13a65:	c3                   	ret

0000000000013a66 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
   13a66:	55                   	push   %rbp
   13a67:	48 89 e5             	mov    %rsp,%rbp
   13a6a:	41 57                	push   %r15
   13a6c:	41 56                	push   %r14
   13a6e:	41 55                	push   %r13
   13a70:	41 54                	push   %r12
   13a72:	53                   	push   %rbx
   13a73:	48 83 ec 38          	sub    $0x38,%rsp
   13a77:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   13a7b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13a7f:	48 8d 58 10          	lea    0x10(%rax),%rbx
   13a83:	48 8d 05 09 29 01 00 	lea    0x12909(%rip),%rax        # 26393 <_ZZN9VulkanApp6renderEvE11submitCount+0x77>
   13a8a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   13a8e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13a92:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   13a96:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
   13a9d:	00 
   13a9e:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   13aa2:	48 89 c7             	mov    %rax,%rdi
   13aa5:	e8 82 71 ff ff       	call   ac2c <_ZNSaIPKcEC1Ev>
   13aaa:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   13aae:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   13ab2:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   13ab6:	49 89 f0             	mov    %rsi,%r8
   13ab9:	49 89 f9             	mov    %rdi,%r9
   13abc:	48 89 fa             	mov    %rdi,%rdx
   13abf:	48 89 c1             	mov    %rax,%rcx
   13ac2:	4c 89 c6             	mov    %r8,%rsi
   13ac5:	48 89 df             	mov    %rbx,%rdi
   13ac8:	e8 5d 21 00 00       	call   15c2a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   13acd:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   13ad1:	48 89 c7             	mov    %rax,%rdi
   13ad4:	e8 6f 71 ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
   13ad9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13add:	48 8d 58 28          	lea    0x28(%rax),%rbx
   13ae1:	4c 8d 35 f8 51 02 00 	lea    0x251f8(%rip),%r14        # 38ce0 <C.212.0>
   13ae8:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   13aee:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   13af2:	48 89 c7             	mov    %rax,%rdi
   13af5:	e8 32 71 ff ff       	call   ac2c <_ZNSaIPKcEC1Ev>
   13afa:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   13afe:	4d 89 f0             	mov    %r14,%r8
   13b01:	4d 89 f9             	mov    %r15,%r9
   13b04:	4c 89 f6             	mov    %r14,%rsi
   13b07:	4c 89 ff             	mov    %r15,%rdi
   13b0a:	48 89 fa             	mov    %rdi,%rdx
   13b0d:	48 89 c1             	mov    %rax,%rcx
   13b10:	4c 89 c6             	mov    %r8,%rsi
   13b13:	48 89 df             	mov    %rbx,%rdi
   13b16:	e8 0f 21 00 00       	call   15c2a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   13b1b:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   13b1f:	48 89 c7             	mov    %rax,%rdi
   13b22:	e8 21 71 ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
   13b27:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13b2b:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%rax)
   13b32:	00 00 00 
   13b35:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13b39:	c7 80 8c 00 00 00 01 	movl   $0x1,0x8c(%rax)
   13b40:	00 00 00 
   13b43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13b47:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
   13b4e:	4c 8d 25 9b 51 02 00 	lea    0x2519b(%rip),%r12        # 38cf0 <C.213.1>
   13b55:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   13b5b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13b5f:	48 89 c7             	mov    %rax,%rdi
   13b62:	e8 c5 70 ff ff       	call   ac2c <_ZNSaIPKcEC1Ev>
   13b67:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13b6b:	4d 89 e0             	mov    %r12,%r8
   13b6e:	4d 89 e9             	mov    %r13,%r9
   13b71:	4c 89 e6             	mov    %r12,%rsi
   13b74:	4c 89 ef             	mov    %r13,%rdi
   13b77:	48 89 fa             	mov    %rdi,%rdx
   13b7a:	48 89 c1             	mov    %rax,%rcx
   13b7d:	4c 89 c6             	mov    %r8,%rsi
   13b80:	48 89 df             	mov    %rbx,%rdi
   13b83:	e8 a2 20 00 00       	call   15c2a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   13b88:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13b8c:	48 89 c7             	mov    %rax,%rdi
   13b8f:	e8 b4 70 ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
   13b94:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13b98:	48 05 a8 00 00 00    	add    $0xa8,%rax
   13b9e:	48 89 c7             	mov    %rax,%rdi
   13ba1:	e8 1e 1c 00 00       	call   157c4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
   13ba6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13baa:	48 05 c0 00 00 00    	add    $0xc0,%rax
   13bb0:	48 89 c7             	mov    %rax,%rdi
   13bb3:	e8 44 1c 00 00       	call   157fc <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
   13bb8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bbc:	48 05 d8 00 00 00    	add    $0xd8,%rax
   13bc2:	48 89 c7             	mov    %rax,%rdi
   13bc5:	e8 4e 1c 00 00       	call   15818 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
   13bca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bce:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
   13bd5:	00 00 00 
   13bd8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bdc:	48 05 00 01 00 00    	add    $0x100,%rax
   13be2:	48 89 c7             	mov    %rax,%rdi
   13be5:	e8 a0 1c 00 00       	call   1588a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
   13bea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bee:	c6 80 18 01 00 00 00 	movb   $0x0,0x118(%rax)
   13bf5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13bf9:	48 c7 80 20 01 00 00 	movq   $0x2,0x120(%rax)
   13c00:	02 00 00 00 
   13c04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c08:	48 05 28 01 00 00    	add    $0x128,%rax
   13c0e:	48 89 c7             	mov    %rax,%rdi
   13c11:	e8 ac 1c 00 00       	call   158c2 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   13c16:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c1a:	48 05 48 01 00 00    	add    $0x148,%rax
   13c20:	48 89 c7             	mov    %rax,%rdi
   13c23:	e8 5e 1d 00 00       	call   15986 <_ZN9VulkanApp11SyncWrapperC1Ev>
   13c28:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c2c:	48 05 b8 01 00 00    	add    $0x1b8,%rax
   13c32:	48 89 c7             	mov    %rax,%rdi
   13c35:	e8 08 1e 00 00       	call   15a42 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EEC1Ev>
   13c3a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c3e:	48 05 d0 01 00 00    	add    $0x1d0,%rax
   13c44:	48 89 c7             	mov    %rax,%rdi
   13c47:	e8 4a 1e 00 00       	call   15a96 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEC1Ev>
   13c4c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c50:	48 05 f8 01 00 00    	add    $0x1f8,%rax
   13c56:	48 89 c7             	mov    %rax,%rdi
   13c59:	e8 8c 1e 00 00       	call   15aea <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EEC1Ev>
  createWindow();
   13c5e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c62:	48 89 c7             	mov    %rax,%rdi
   13c65:	e8 e6 bc ff ff       	call   f950 <_ZN9VulkanApp12createWindowEv>
  createInstance();
   13c6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c6e:	48 89 c7             	mov    %rax,%rdi
   13c71:	e8 48 bd ff ff       	call   f9be <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
   13c76:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c7a:	48 89 c7             	mov    %rax,%rdi
   13c7d:	e8 22 bf ff ff       	call   fba4 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
   13c82:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c86:	48 89 c7             	mov    %rax,%rdi
   13c89:	e8 aa bf ff ff       	call   fc38 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
   13c8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c92:	48 89 c7             	mov    %rax,%rdi
   13c95:	e8 f6 c1 ff ff       	call   fe90 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
   13c9a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13c9e:	48 89 c7             	mov    %rax,%rdi
   13ca1:	e8 08 ce ff ff       	call   10aae <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
   13ca6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13caa:	48 89 c7             	mov    %rax,%rdi
   13cad:	e8 42 ce ff ff       	call   10af4 <_ZN9VulkanApp16createImageViewsEv>
  createDescriptorSetLayout();
   13cb2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cb6:	48 89 c7             	mov    %rax,%rdi
   13cb9:	e8 d0 f1 ff ff       	call   12e8e <_ZN9VulkanApp25createDescriptorSetLayoutEv>
  createGraphicsPipeline();
   13cbe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cc2:	48 89 c7             	mov    %rax,%rdi
   13cc5:	e8 d6 cf ff ff       	call   10ca0 <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffers();
   13cca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cce:	48 89 c7             	mov    %rax,%rdi
   13cd1:	e8 c0 db ff ff       	call   11896 <_ZN9VulkanApp18createFramebuffersEv>
  createCommandPool();
   13cd6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cda:	48 89 c7             	mov    %rax,%rdi
   13cdd:	e8 26 e0 ff ff       	call   11d08 <_ZN9VulkanApp17createCommandPoolEv>
  createVertexBuffer();
   13ce2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13ce6:	48 89 c7             	mov    %rax,%rdi
   13ce9:	e8 ee e7 ff ff       	call   124dc <_ZN9VulkanApp18createVertexBufferEv>
  createIndexBuffer();
   13cee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cf2:	48 89 c7             	mov    %rax,%rdi
   13cf5:	e8 34 e9 ff ff       	call   1262e <_ZN9VulkanApp17createIndexBufferEv>
  createUniformBuffers();
   13cfa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13cfe:	48 89 c7             	mov    %rax,%rdi
   13d01:	e8 6c ea ff ff       	call   12772 <_ZN9VulkanApp20createUniformBuffersEv>
  createDescriptorPool();
   13d06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d0a:	48 89 c7             	mov    %rax,%rdi
   13d0d:	e8 6a f2 ff ff       	call   12f7c <_ZN9VulkanApp20createDescriptorPoolEv>
  createDescriptorSets();
   13d12:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d16:	48 89 c7             	mov    %rax,%rdi
   13d19:	e8 4a f3 ff ff       	call   13068 <_ZN9VulkanApp20createDescriptorSetsEv>
  createCommandBuffers();
   13d1e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d22:	48 89 c7             	mov    %rax,%rdi
   13d25:	e8 42 e0 ff ff       	call   11d6c <_ZN9VulkanApp20createCommandBuffersEv>
  createSynchronizationObjects();
   13d2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d2e:	48 89 c7             	mov    %rax,%rdi
   13d31:	e8 d6 ef ff ff       	call   12d0c <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
   13d36:	e9 12 01 00 00       	jmp    13e4d <_ZN9VulkanAppC1Ev+0x3e7>
VulkanApp::VulkanApp() {
   13d3b:	48 89 c3             	mov    %rax,%rbx
   13d3e:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
   13d42:	48 89 c7             	mov    %rax,%rdi
   13d45:	e8 fe 6e ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
   13d4a:	48 89 d8             	mov    %rbx,%rax
   13d4d:	48 89 c7             	mov    %rax,%rdi
   13d50:	e8 ab 1c ff ff       	call   5a00 <_Unwind_Resume@plt>
   13d55:	48 89 c3             	mov    %rax,%rbx
   13d58:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
   13d5c:	48 89 c7             	mov    %rax,%rdi
   13d5f:	e8 e4 6e ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
   13d64:	e9 c9 00 00 00       	jmp    13e32 <_ZN9VulkanAppC1Ev+0x3cc>
   13d69:	48 89 c3             	mov    %rax,%rbx
   13d6c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   13d70:	48 89 c7             	mov    %rax,%rdi
   13d73:	e8 d0 6e ff ff       	call   ac48 <_ZNSaIPKcED1Ev>
   13d78:	e9 a5 00 00 00       	jmp    13e22 <_ZN9VulkanAppC1Ev+0x3bc>
}
   13d7d:	48 89 c3             	mov    %rax,%rbx
   13d80:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d84:	48 05 f8 01 00 00    	add    $0x1f8,%rax
   13d8a:	48 89 c7             	mov    %rax,%rdi
   13d8d:	e8 46 4b 00 00       	call   188d8 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EED1Ev>
   13d92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13d96:	48 05 d0 01 00 00    	add    $0x1d0,%rax
   13d9c:	48 89 c7             	mov    %rax,%rdi
   13d9f:	e8 5e 4a 00 00       	call   18802 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EED1Ev>
   13da4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13da8:	48 05 b8 01 00 00    	add    $0x1b8,%rax
   13dae:	48 89 c7             	mov    %rax,%rdi
   13db1:	e8 76 49 00 00       	call   1872c <_ZNSt6vectorIP10VkBuffer_TSaIS1_EED1Ev>
   13db6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13dba:	48 05 48 01 00 00    	add    $0x148,%rax
   13dc0:	48 89 c7             	mov    %rax,%rdi
   13dc3:	e8 06 1c 00 00       	call   159ce <_ZN9VulkanApp11SyncWrapperD1Ev>
   13dc8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13dcc:	48 05 28 01 00 00    	add    $0x128,%rax
   13dd2:	48 89 c7             	mov    %rax,%rdi
   13dd5:	e8 78 3b ff ff       	call   7952 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   13dda:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13dde:	48 05 00 01 00 00    	add    $0x100,%rax
   13de4:	48 89 c7             	mov    %rax,%rdi
   13de7:	e8 f6 46 00 00       	call   184e2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   13dec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13df0:	48 05 c0 00 00 00    	add    $0xc0,%rax
   13df6:	48 89 c7             	mov    %rax,%rdi
   13df9:	e8 70 78 ff ff       	call   b66e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   13dfe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e02:	48 05 a8 00 00 00    	add    $0xa8,%rax
   13e08:	48 89 c7             	mov    %rax,%rdi
   13e0b:	e8 94 2d 00 00       	call   16ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   13e10:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e14:	48 05 90 00 00 00    	add    $0x90,%rax
   13e1a:	48 89 c7             	mov    %rax,%rdi
   13e1d:	e8 90 1e 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
   13e22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e26:	48 83 c0 28          	add    $0x28,%rax
}
   13e2a:	48 89 c7             	mov    %rax,%rdi
   13e2d:	e8 80 1e 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   13e32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13e36:	48 83 c0 10          	add    $0x10,%rax
   13e3a:	48 89 c7             	mov    %rax,%rdi
   13e3d:	e8 70 1e 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   13e42:	48 89 d8             	mov    %rbx,%rax
   13e45:	48 89 c7             	mov    %rax,%rdi
   13e48:	e8 b3 1b ff ff       	call   5a00 <_Unwind_Resume@plt>
   13e4d:	48 83 c4 38          	add    $0x38,%rsp
   13e51:	5b                   	pop    %rbx
   13e52:	41 5c                	pop    %r12
   13e54:	41 5d                	pop    %r13
   13e56:	41 5e                	pop    %r14
   13e58:	41 5f                	pop    %r15
   13e5a:	5d                   	pop    %rbp
   13e5b:	c3                   	ret

0000000000013e5c <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
   13e5c:	55                   	push   %rbp
   13e5d:	48 89 e5             	mov    %rsp,%rbp
   13e60:	48 83 ec 20          	sub    $0x20,%rsp
   13e64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanupSwapchain();
   13e68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e6c:	48 89 c7             	mov    %rax,%rdi
   13e6f:	e8 c8 dc ff ff       	call   11b3c <_ZN9VulkanApp16cleanupSwapchainEv>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   13e74:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   13e7b:	00 
   13e7c:	eb 6f                	jmp    13eed <_ZN9VulkanAppD1Ev+0x91>
    vkDestroyBuffer(device, uniformBuffers[i], nullptr);
   13e7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e82:	48 8d 90 b8 01 00 00 	lea    0x1b8(%rax),%rdx
   13e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e8d:	48 89 c6             	mov    %rax,%rsi
   13e90:	48 89 d7             	mov    %rdx,%rdi
   13e93:	e8 0c 31 00 00       	call   16fa4 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EEixEm>
   13e98:	48 8b 08             	mov    (%rax),%rcx
   13e9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e9f:	48 8b 40 50          	mov    0x50(%rax),%rax
   13ea3:	ba 00 00 00 00       	mov    $0x0,%edx
   13ea8:	48 89 ce             	mov    %rcx,%rsi
   13eab:	48 89 c7             	mov    %rax,%rdi
   13eae:	e8 7d 13 ff ff       	call   5230 <vkDestroyBuffer@plt>
    vkFreeMemory(device, uniformBuffersMemory[i], nullptr);
   13eb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13eb7:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
   13ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ec2:	48 89 c6             	mov    %rax,%rsi
   13ec5:	48 89 d7             	mov    %rdx,%rdi
   13ec8:	e8 f7 30 00 00       	call   16fc4 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEixEm>
   13ecd:	48 8b 08             	mov    (%rax),%rcx
   13ed0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ed4:	48 8b 40 50          	mov    0x50(%rax),%rax
   13ed8:	ba 00 00 00 00       	mov    $0x0,%edx
   13edd:	48 89 ce             	mov    %rcx,%rsi
   13ee0:	48 89 c7             	mov    %rax,%rdi
   13ee3:	e8 b8 15 ff ff       	call   54a0 <vkFreeMemory@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   13ee8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   13eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ef1:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   13ef8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   13efc:	72 80                	jb     13e7e <_ZN9VulkanAppD1Ev+0x22>
  }
  vkDestroyDescriptorPool(device, descriptorPool, nullptr);
   13efe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f02:	48 8b 88 f0 01 00 00 	mov    0x1f0(%rax),%rcx
   13f09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f0d:	48 8b 40 50          	mov    0x50(%rax),%rax
   13f11:	ba 00 00 00 00       	mov    $0x0,%edx
   13f16:	48 89 ce             	mov    %rcx,%rsi
   13f19:	48 89 c7             	mov    %rax,%rdi
   13f1c:	e8 6f 1b ff ff       	call   5a90 <vkDestroyDescriptorPool@plt>
  vkDestroyDescriptorSetLayout(device, descriptorSetLayout, nullptr);
   13f21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f25:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   13f2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f30:	48 8b 40 50          	mov    0x50(%rax),%rax
   13f34:	ba 00 00 00 00       	mov    $0x0,%edx
   13f39:	48 89 ce             	mov    %rcx,%rsi
   13f3c:	48 89 c7             	mov    %rax,%rdi
   13f3f:	e8 9c 19 ff ff       	call   58e0 <vkDestroyDescriptorSetLayout@plt>
  vkDestroyBuffer(device, indexBuffer, nullptr);
   13f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f48:	48 8b 88 a8 01 00 00 	mov    0x1a8(%rax),%rcx
   13f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f53:	48 8b 40 50          	mov    0x50(%rax),%rax
   13f57:	ba 00 00 00 00       	mov    $0x0,%edx
   13f5c:	48 89 ce             	mov    %rcx,%rsi
   13f5f:	48 89 c7             	mov    %rax,%rdi
   13f62:	e8 c9 12 ff ff       	call   5230 <vkDestroyBuffer@plt>
  vkFreeMemory(device, indexBufferMemory, nullptr);
   13f67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f6b:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   13f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f76:	48 8b 40 50          	mov    0x50(%rax),%rax
   13f7a:	ba 00 00 00 00       	mov    $0x0,%edx
   13f7f:	48 89 ce             	mov    %rcx,%rsi
   13f82:	48 89 c7             	mov    %rax,%rdi
   13f85:	e8 16 15 ff ff       	call   54a0 <vkFreeMemory@plt>
  vkDestroyBuffer(device, vertexBuffer, nullptr);
   13f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f8e:	48 8b 88 98 01 00 00 	mov    0x198(%rax),%rcx
   13f95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f99:	48 8b 40 50          	mov    0x50(%rax),%rax
   13f9d:	ba 00 00 00 00       	mov    $0x0,%edx
   13fa2:	48 89 ce             	mov    %rcx,%rsi
   13fa5:	48 89 c7             	mov    %rax,%rdi
   13fa8:	e8 83 12 ff ff       	call   5230 <vkDestroyBuffer@plt>
  vkFreeMemory(device, vertexBufferMemory, nullptr);
   13fad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fb1:	48 8b 88 a0 01 00 00 	mov    0x1a0(%rax),%rcx
   13fb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fbc:	48 8b 40 50          	mov    0x50(%rax),%rax
   13fc0:	ba 00 00 00 00       	mov    $0x0,%edx
   13fc5:	48 89 ce             	mov    %rcx,%rsi
   13fc8:	48 89 c7             	mov    %rax,%rdi
   13fcb:	e8 d0 14 ff ff       	call   54a0 <vkFreeMemory@plt>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   13fd0:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
   13fd7:	00 
   13fd8:	e9 a4 00 00 00       	jmp    14081 <_ZN9VulkanAppD1Ev+0x225>
    vkh::destroySemaphore(device, sync.imageAvailableSemaphore[i]);
   13fdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fe1:	48 8d 90 48 01 00 00 	lea    0x148(%rax),%rdx
   13fe8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13fec:	48 89 c6             	mov    %rax,%rsi
   13fef:	48 89 d7             	mov    %rdx,%rdi
   13ff2:	e8 23 3f 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   13ff7:	48 8b 08             	mov    (%rax),%rcx
   13ffa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ffe:	48 8b 40 50          	mov    0x50(%rax),%rax
   14002:	ba 00 00 00 00       	mov    $0x0,%edx
   14007:	48 89 ce             	mov    %rcx,%rsi
   1400a:	48 89 c7             	mov    %rax,%rdi
   1400d:	e8 83 56 ff ff       	call   9695 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroySemaphore(device, sync.renderFinisedSemaphore[i]);
   14012:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14016:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
   1401d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14021:	48 89 c6             	mov    %rax,%rsi
   14024:	48 89 d7             	mov    %rdx,%rdi
   14027:	e8 ee 3e 00 00       	call   17f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
   1402c:	48 8b 08             	mov    (%rax),%rcx
   1402f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14033:	48 8b 40 50          	mov    0x50(%rax),%rax
   14037:	ba 00 00 00 00       	mov    $0x0,%edx
   1403c:	48 89 ce             	mov    %rcx,%rsi
   1403f:	48 89 c7             	mov    %rax,%rdi
   14042:	e8 4e 56 ff ff       	call   9695 <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
    vkh::destroyFence(device, sync.inFlightFence[i]);
   14047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1404b:	48 8d 90 78 01 00 00 	lea    0x178(%rax),%rdx
   14052:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14056:	48 89 c6             	mov    %rax,%rsi
   14059:	48 89 d7             	mov    %rdx,%rdi
   1405c:	e8 d9 3e 00 00       	call   17f3a <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
   14061:	48 8b 08             	mov    (%rax),%rcx
   14064:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14068:	48 8b 40 50          	mov    0x50(%rax),%rax
   1406c:	ba 00 00 00 00       	mov    $0x0,%edx
   14071:	48 89 ce             	mov    %rcx,%rsi
   14074:	48 89 c7             	mov    %rax,%rdi
   14077:	e8 47 56 ff ff       	call   96c3 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  for (size_t i = 0; i < maxFramesInFlight; ++i) {
   1407c:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
   14081:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14085:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
   1408c:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14090:	0f 82 47 ff ff ff    	jb     13fdd <_ZN9VulkanAppD1Ev+0x181>
  }
  vkh::destroyCommandPool(device, commandPool);
   14096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1409a:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
   140a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140a5:	48 8b 40 50          	mov    0x50(%rax),%rax
   140a9:	ba 00 00 00 00       	mov    $0x0,%edx
   140ae:	48 89 ce             	mov    %rcx,%rsi
   140b1:	48 89 c7             	mov    %rax,%rdi
   140b4:	e8 ae 55 ff ff       	call   9667 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
   140b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140bd:	48 8b 40 50          	mov    0x50(%rax),%rax
   140c1:	be 00 00 00 00       	mov    $0x0,%esi
   140c6:	48 89 c7             	mov    %rax,%rdi
   140c9:	e8 74 53 ff ff       	call   9442 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
   140ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140d2:	48 8b 48 40          	mov    0x40(%rax),%rcx
   140d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140da:	48 8b 40 08          	mov    0x8(%rax),%rax
   140de:	ba 00 00 00 00       	mov    $0x0,%edx
   140e3:	48 89 ce             	mov    %rcx,%rsi
   140e6:	48 89 c7             	mov    %rax,%rdi
   140e9:	e8 5f b4 ff ff       	call   f54d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
   140ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140f2:	48 8b 48 48          	mov    0x48(%rax),%rcx
   140f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140fa:	48 8b 40 08          	mov    0x8(%rax),%rax
   140fe:	ba 00 00 00 00       	mov    $0x0,%edx
   14103:	48 89 ce             	mov    %rcx,%rsi
   14106:	48 89 c7             	mov    %rax,%rdi
   14109:	e8 5a 53 ff ff       	call   9468 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
   1410e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14112:	48 8b 40 08          	mov    0x8(%rax),%rax
   14116:	be 00 00 00 00       	mov    $0x0,%esi
   1411b:	48 89 c7             	mov    %rax,%rdi
   1411e:	e8 f9 52 ff ff       	call   941c <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
   14123:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14127:	48 8b 00             	mov    (%rax),%rax
   1412a:	48 89 c7             	mov    %rax,%rdi
   1412d:	e8 cf 52 ff ff       	call   9401 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
   14132:	e8 29 14 ff ff       	call   5560 <glfwTerminate@plt>
}
   14137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1413b:	48 05 f8 01 00 00    	add    $0x1f8,%rax
   14141:	48 89 c7             	mov    %rax,%rdi
   14144:	e8 8f 47 00 00       	call   188d8 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EED1Ev>
   14149:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1414d:	48 05 d0 01 00 00    	add    $0x1d0,%rax
   14153:	48 89 c7             	mov    %rax,%rdi
   14156:	e8 a7 46 00 00       	call   18802 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EED1Ev>
   1415b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1415f:	48 05 b8 01 00 00    	add    $0x1b8,%rax
   14165:	48 89 c7             	mov    %rax,%rdi
   14168:	e8 bf 45 00 00       	call   1872c <_ZNSt6vectorIP10VkBuffer_TSaIS1_EED1Ev>
   1416d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14171:	48 05 48 01 00 00    	add    $0x148,%rax
   14177:	48 89 c7             	mov    %rax,%rdi
   1417a:	e8 4f 18 00 00       	call   159ce <_ZN9VulkanApp11SyncWrapperD1Ev>
   1417f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14183:	48 05 28 01 00 00    	add    $0x128,%rax
   14189:	48 89 c7             	mov    %rax,%rdi
   1418c:	e8 c1 37 ff ff       	call   7952 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   14191:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14195:	48 05 00 01 00 00    	add    $0x100,%rax
   1419b:	48 89 c7             	mov    %rax,%rdi
   1419e:	e8 3f 43 00 00       	call   184e2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
   141a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141a7:	48 05 c0 00 00 00    	add    $0xc0,%rax
   141ad:	48 89 c7             	mov    %rax,%rdi
   141b0:	e8 b9 74 ff ff       	call   b66e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   141b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141b9:	48 05 a8 00 00 00    	add    $0xa8,%rax
   141bf:	48 89 c7             	mov    %rax,%rdi
   141c2:	e8 dd 29 00 00       	call   16ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
   141c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141cb:	48 05 90 00 00 00    	add    $0x90,%rax
   141d1:	48 89 c7             	mov    %rax,%rdi
   141d4:	e8 d9 1a 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
   141d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141dd:	48 83 c0 28          	add    $0x28,%rax
}
   141e1:	48 89 c7             	mov    %rax,%rdi
   141e4:	e8 c9 1a 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   141e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141ed:	48 83 c0 10          	add    $0x10,%rax
   141f1:	48 89 c7             	mov    %rax,%rdi
   141f4:	e8 b9 1a 00 00       	call   15cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   141f9:	90                   	nop
   141fa:	c9                   	leave
   141fb:	c3                   	ret

00000000000141fc <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
   141fc:	55                   	push   %rbp
   141fd:	48 89 e5             	mov    %rsp,%rbp
   14200:	48 83 ec 10          	sub    $0x10,%rsp
   14204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
   14208:	eb 11                	jmp    1421b <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
   1420a:	e8 d1 12 ff ff       	call   54e0 <glfwPollEvents@plt>
    render();
   1420f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14213:	48 89 c7             	mov    %rax,%rdi
   14216:	e8 31 f1 ff ff       	call   1334c <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   1421b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1421f:	48 8b 00             	mov    (%rax),%rax
   14222:	48 89 c7             	mov    %rax,%rdi
   14225:	e8 56 18 ff ff       	call   5a80 <glfwWindowShouldClose@plt>
   1422a:	85 c0                	test   %eax,%eax
   1422c:	0f 94 c0             	sete   %al
   1422f:	84 c0                	test   %al,%al
   14231:	75 d7                	jne    1420a <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   14233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14237:	48 8b 40 50          	mov    0x50(%rax),%rax
   1423b:	48 89 c7             	mov    %rax,%rdi
   1423e:	e8 9d 0e ff ff       	call   50e0 <vkDeviceWaitIdle@plt>
}
   14243:	90                   	nop
   14244:	c9                   	leave
   14245:	c3                   	ret

0000000000014246 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   14246:	55                   	push   %rbp
   14247:	48 89 e5             	mov    %rsp,%rbp
   1424a:	41 54                	push   %r12
   1424c:	53                   	push   %rbx
   1424d:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   14254:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   1425b:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   14262:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14269:	48 89 c7             	mov    %rax,%rdi
   1426c:	e8 1f 14 ff ff       	call   5690 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   14271:	be 10 00 00 00       	mov    $0x10,%esi
   14276:	bf 08 00 00 00       	mov    $0x8,%edi
   1427b:	e8 0a 48 ff ff       	call   8a8a <_ZStorSt13_Ios_OpenmodeS_>
   14280:	89 c2                	mov    %eax,%edx
   14282:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   14289:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14290:	48 89 ce             	mov    %rcx,%rsi
   14293:	48 89 c7             	mov    %rax,%rdi
   14296:	e8 05 15 ff ff       	call   57a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   1429b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   142a2:	48 89 c7             	mov    %rax,%rdi
   142a5:	e8 06 17 ff ff       	call   59b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   142aa:	83 f0 01             	xor    $0x1,%eax
   142ad:	84 c0                	test   %al,%al
   142af:	0f 84 97 00 00 00    	je     1434c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   142b5:	bf 10 00 00 00       	mov    $0x10,%edi
   142ba:	e8 61 0f ff ff       	call   5220 <__cxa_allocate_exception@plt>
   142bf:	48 89 c3             	mov    %rax,%rbx
   142c2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   142c9:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   142d0:	48 8d 0d cf 20 01 00 	lea    0x120cf(%rip),%rcx        # 263a6 <_ZZN9VulkanApp6renderEvE11submitCount+0x8a>
   142d7:	48 89 ce             	mov    %rcx,%rsi
   142da:	48 89 c7             	mov    %rax,%rdi
   142dd:	e8 44 48 ff ff       	call   8b26 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   142e2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   142e9:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   142f0:	ba 0a 00 00 00       	mov    $0xa,%edx
   142f5:	48 89 ce             	mov    %rcx,%rsi
   142f8:	48 89 c7             	mov    %rax,%rdi
   142fb:	e8 1c 46 00 00       	call   1891c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   14300:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   14307:	48 89 c6             	mov    %rax,%rsi
   1430a:	48 89 df             	mov    %rbx,%rdi
   1430d:	e8 2e 16 ff ff       	call   5940 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   14312:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   14319:	48 89 c7             	mov    %rax,%rdi
   1431c:	e8 c7 17 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14321:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   14328:	48 89 c7             	mov    %rax,%rdi
   1432b:	e8 b8 17 ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14330:	48 8b 05 89 4c 02 00 	mov    0x24c89(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   14337:	48 89 c2             	mov    %rax,%rdx
   1433a:	48 8d 05 ff 49 02 00 	lea    0x249ff(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   14341:	48 89 c6             	mov    %rax,%rsi
   14344:	48 89 df             	mov    %rbx,%rdi
   14347:	e8 44 16 ff ff       	call   5990 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   1434c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14353:	48 83 c0 10          	add    $0x10,%rax
   14357:	48 8d 15 58 20 01 00 	lea    0x12058(%rip),%rdx        # 263b6 <_ZZN9VulkanApp6renderEvE11submitCount+0x9a>
   1435e:	48 89 d6             	mov    %rdx,%rsi
   14361:	48 89 c7             	mov    %rax,%rdi
   14364:	e8 a7 11 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   14369:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14370:	48 83 c0 10          	add    $0x10,%rax
   14374:	48 8d 15 54 20 01 00 	lea    0x12054(%rip),%rdx        # 263cf <_ZZN9VulkanApp6renderEvE11submitCount+0xb3>
   1437b:	48 89 d6             	mov    %rdx,%rsi
   1437e:	48 89 c7             	mov    %rax,%rdi
   14381:	e8 8a 11 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   14386:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   1438d:	be 00 00 00 00       	mov    $0x0,%esi
   14392:	48 89 c7             	mov    %rax,%rdi
   14395:	e8 ec 54 ff ff       	call   9886 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   1439a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   143a1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   143a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143a9:	48 89 c7             	mov    %rax,%rdi
   143ac:	e8 e7 1d 00 00       	call   16198 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   143b1:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   143b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143bc:	48 89 c7             	mov    %rax,%rdi
   143bf:	e8 fa 1d 00 00       	call   161be <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   143c4:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   143cb:	eb 64                	jmp    14431 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   143cd:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   143d4:	48 89 c7             	mov    %rax,%rdi
   143d7:	e8 6a 1e 00 00       	call   16246 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   143dc:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   143e3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   143ea:	48 83 c0 10          	add    $0x10,%rax
   143ee:	48 8d 15 eb 1f 01 00 	lea    0x11feb(%rip),%rdx        # 263e0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   143f5:	48 89 d6             	mov    %rdx,%rsi
   143f8:	48 89 c7             	mov    %rax,%rdi
   143fb:	e8 10 11 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14400:	48 89 c2             	mov    %rax,%rdx
   14403:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1440a:	48 89 c6             	mov    %rax,%rsi
   1440d:	48 89 d7             	mov    %rdx,%rdi
   14410:	e8 fb 10 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14415:	be 0a 00 00 00       	mov    $0xa,%esi
   1441a:	48 89 c7             	mov    %rax,%rdi
   1441d:	e8 3e 12 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   14422:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   14429:	48 89 c7             	mov    %rax,%rdi
   1442c:	e8 f1 1d 00 00       	call   16222 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   14431:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   14438:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   1443f:	48 89 d6             	mov    %rdx,%rsi
   14442:	48 89 c7             	mov    %rax,%rdi
   14445:	e8 9d 1d 00 00       	call   161e7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1444a:	84 c0                	test   %al,%al
   1444c:	0f 85 7b ff ff ff    	jne    143cd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   14452:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14459:	48 83 c0 10          	add    $0x10,%rax
   1445d:	48 8d 15 7f 1f 01 00 	lea    0x11f7f(%rip),%rdx        # 263e3 <_ZZN9VulkanApp6renderEvE11submitCount+0xc7>
   14464:	48 89 d6             	mov    %rdx,%rsi
   14467:	48 89 c7             	mov    %rax,%rdi
   1446a:	e8 a1 10 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   1446f:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   14476:	48 83 c0 10          	add    $0x10,%rax
   1447a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1447e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14482:	48 89 c7             	mov    %rax,%rdi
   14485:	e8 6c 18 00 00       	call   15cf6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1448a:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   14491:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14495:	48 89 c7             	mov    %rax,%rdi
   14498:	e8 7f 18 00 00       	call   15d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1449d:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   144a4:	eb 67                	jmp    1450d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   144a6:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   144ad:	48 89 c7             	mov    %rax,%rdi
   144b0:	e8 eb 18 00 00       	call   15da0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   144b5:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   144bc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   144c3:	48 83 c0 10          	add    $0x10,%rax
   144c7:	48 8d 15 12 1f 01 00 	lea    0x11f12(%rip),%rdx        # 263e0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   144ce:	48 89 d6             	mov    %rdx,%rsi
   144d1:	48 89 c7             	mov    %rax,%rdi
   144d4:	e8 37 10 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   144d9:	48 89 c2             	mov    %rax,%rdx
   144dc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   144e3:	48 8b 00             	mov    (%rax),%rax
   144e6:	48 89 c6             	mov    %rax,%rsi
   144e9:	48 89 d7             	mov    %rdx,%rdi
   144ec:	e8 1f 10 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   144f1:	be 0a 00 00 00       	mov    $0xa,%esi
   144f6:	48 89 c7             	mov    %rax,%rdi
   144f9:	e8 62 11 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   144fe:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   14505:	48 89 c7             	mov    %rax,%rdi
   14508:	e8 73 18 00 00       	call   15d80 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   1450d:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   14514:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   1451b:	48 89 d6             	mov    %rdx,%rsi
   1451e:	48 89 c7             	mov    %rax,%rdi
   14521:	e8 1f 18 00 00       	call   15d45 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   14526:	84 c0                	test   %al,%al
   14528:	0f 85 78 ff ff ff    	jne    144a6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   1452e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14535:	48 83 c0 10          	add    $0x10,%rax
   14539:	be 0a 00 00 00       	mov    $0xa,%esi
   1453e:	48 89 c7             	mov    %rax,%rdi
   14541:	e8 1a 11 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   14546:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1454d:	48 83 c0 10          	add    $0x10,%rax
   14551:	48 8d 15 9b 1e 01 00 	lea    0x11e9b(%rip),%rdx        # 263f3 <_ZZN9VulkanApp6renderEvE11submitCount+0xd7>
   14558:	48 89 d6             	mov    %rdx,%rsi
   1455b:	48 89 c7             	mov    %rax,%rdi
   1455e:	e8 ad 0f ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   14563:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1456a:	48 83 c0 10          	add    $0x10,%rax
   1456e:	48 8d 15 93 1e 01 00 	lea    0x11e93(%rip),%rdx        # 26408 <_ZZN9VulkanApp6renderEvE11submitCount+0xec>
   14575:	48 89 d6             	mov    %rdx,%rsi
   14578:	48 89 c7             	mov    %rax,%rdi
   1457b:	e8 90 0f ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   14580:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   14587:	48 89 c7             	mov    %rax,%rdi
   1458a:	e8 91 56 ff ff       	call   9c20 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   1458f:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   14596:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1459a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1459e:	48 89 c7             	mov    %rax,%rdi
   145a1:	e8 74 b1 ff ff       	call   f71a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   145a6:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   145ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145b1:	48 89 c7             	mov    %rax,%rdi
   145b4:	e8 87 b1 ff ff       	call   f740 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   145b9:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   145c0:	eb 5e                	jmp    14620 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   145c2:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   145c9:	48 89 c7             	mov    %rax,%rdi
   145cc:	e8 f7 b1 ff ff       	call   f7c8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   145d1:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   145d5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   145dc:	48 83 c0 10          	add    $0x10,%rax
   145e0:	48 8d 15 f9 1d 01 00 	lea    0x11df9(%rip),%rdx        # 263e0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   145e7:	48 89 d6             	mov    %rdx,%rsi
   145ea:	48 89 c7             	mov    %rax,%rdi
   145ed:	e8 1e 0f ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   145f2:	48 89 c2             	mov    %rax,%rdx
   145f5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   145f9:	48 89 c6             	mov    %rax,%rsi
   145fc:	48 89 d7             	mov    %rdx,%rdi
   145ff:	e8 0c 0f ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14604:	be 0a 00 00 00       	mov    $0xa,%esi
   14609:	48 89 c7             	mov    %rax,%rdi
   1460c:	e8 4f 10 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   14611:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   14618:	48 89 c7             	mov    %rax,%rdi
   1461b:	e8 84 b1 ff ff       	call   f7a4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   14620:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   14627:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   1462e:	48 89 d6             	mov    %rdx,%rsi
   14631:	48 89 c7             	mov    %rax,%rdi
   14634:	e8 30 b1 ff ff       	call   f769 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   14639:	84 c0                	test   %al,%al
   1463b:	75 85                	jne    145c2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   1463d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14644:	48 83 c0 10          	add    $0x10,%rax
   14648:	48 8d 15 ca 1d 01 00 	lea    0x11dca(%rip),%rdx        # 26419 <_ZZN9VulkanApp6renderEvE11submitCount+0xfd>
   1464f:	48 89 d6             	mov    %rdx,%rsi
   14652:	48 89 c7             	mov    %rax,%rdi
   14655:	e8 b6 0e ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   1465a:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   14661:	48 83 c0 28          	add    $0x28,%rax
   14665:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   14669:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1466d:	48 89 c7             	mov    %rax,%rdi
   14670:	e8 f1 42 00 00       	call   18966 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   14675:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   1467c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14680:	48 89 c7             	mov    %rax,%rdi
   14683:	e8 04 43 00 00       	call   1898c <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   14688:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   1468f:	eb 61                	jmp    146f2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   14691:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   14698:	48 89 c7             	mov    %rax,%rdi
   1469b:	e8 70 43 00 00       	call   18a10 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   146a0:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   146a4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   146ab:	48 83 c0 10          	add    $0x10,%rax
   146af:	48 8d 15 2a 1d 01 00 	lea    0x11d2a(%rip),%rdx        # 263e0 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   146b6:	48 89 d6             	mov    %rdx,%rsi
   146b9:	48 89 c7             	mov    %rax,%rdi
   146bc:	e8 4f 0e ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   146c1:	48 89 c2             	mov    %rax,%rdx
   146c4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   146c8:	48 8b 00             	mov    (%rax),%rax
   146cb:	48 89 c6             	mov    %rax,%rsi
   146ce:	48 89 d7             	mov    %rdx,%rdi
   146d1:	e8 3a 0e ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   146d6:	be 0a 00 00 00       	mov    $0xa,%esi
   146db:	48 89 c7             	mov    %rax,%rdi
   146de:	e8 7d 0f ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   146e3:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   146ea:	48 89 c7             	mov    %rax,%rdi
   146ed:	e8 fe 42 00 00       	call   189f0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   146f2:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   146f9:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   14700:	48 89 d6             	mov    %rdx,%rsi
   14703:	48 89 c7             	mov    %rax,%rdi
   14706:	e8 aa 42 00 00       	call   189b5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   1470b:	84 c0                	test   %al,%al
   1470d:	75 82                	jne    14691 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   1470f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14716:	48 83 c0 10          	add    $0x10,%rax
   1471a:	be 0a 00 00 00       	mov    $0xa,%esi
   1471f:	48 89 c7             	mov    %rax,%rdi
   14722:	e8 39 0f ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   14727:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1472e:	48 83 c0 10          	add    $0x10,%rax
   14732:	48 8d 15 f0 1c 01 00 	lea    0x11cf0(%rip),%rdx        # 26429 <_ZZN9VulkanApp6renderEvE11submitCount+0x10d>
   14739:	48 89 d6             	mov    %rdx,%rsi
   1473c:	48 89 c7             	mov    %rax,%rdi
   1473f:	e8 cc 0d ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   14744:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1474b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1474f:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   14756:	48 89 d6             	mov    %rdx,%rsi
   14759:	48 89 c7             	mov    %rax,%rdi
   1475c:	e8 6b 55 ff ff       	call   9ccc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   14761:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   14768:	48 8b 50 58          	mov    0x58(%rax),%rdx
   1476c:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   14773:	48 89 d6             	mov    %rdx,%rsi
   14776:	48 89 c7             	mov    %rax,%rdi
   14779:	e8 bd 56 ff ff       	call   9e3b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   1477e:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   14785:	00 
  size_t selectedDeviceIndex = 0;
   14786:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1478d:	00 
  for (const auto &physDev : physicalDeviceList) {
   1478e:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   14795:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   14799:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1479d:	48 89 c7             	mov    %rax,%rdi
   147a0:	e8 21 18 00 00       	call   15fc6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   147a5:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   147ac:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   147b0:	48 89 c7             	mov    %rax,%rdi
   147b3:	e8 34 18 00 00       	call   15fec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   147b8:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   147bf:	e9 c7 06 00 00       	jmp    14e8b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   147c4:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   147cb:	48 89 c7             	mov    %rax,%rdi
   147ce:	e8 9d 18 00 00       	call   16070 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   147d3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   147d7:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   147de:	48 89 c7             	mov    %rax,%rdi
   147e1:	e8 2a 12 ff ff       	call   5a10 <_ZNSaIcEC1Ev@plt>
   147e6:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   147ed:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   147f4:	48 8d 0d 44 1c 01 00 	lea    0x11c44(%rip),%rcx        # 2643f <_ZZN9VulkanApp6renderEvE11submitCount+0x123>
   147fb:	48 89 ce             	mov    %rcx,%rsi
   147fe:	48 89 c7             	mov    %rax,%rdi
   14801:	e8 84 13 00 00       	call   15b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   14806:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1480d:	48 89 c7             	mov    %rax,%rdi
   14810:	e8 bb 0d ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   14815:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   1481c:	b8 00 00 00 00       	mov    $0x0,%eax
   14821:	b9 0e 00 00 00       	mov    $0xe,%ecx
   14826:	48 89 d7             	mov    %rdx,%rdi
   14829:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   1482c:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   14833:	00 00 00 
    vk11Props.pNext = nullptr;
   14836:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   1483d:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   14841:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   14848:	b8 00 00 00 00       	mov    $0x0,%eax
   1484d:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   14852:	48 89 d7             	mov    %rdx,%rdi
   14855:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   14858:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   1485f:	00 00 00 
    vk12Props.pNext = &vk11Props;
   14862:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   14869:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   14870:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   14877:	b8 00 00 00 00       	mov    $0x0,%eax
   1487c:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   14881:	48 89 d7             	mov    %rdx,%rdi
   14884:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   14887:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   1488e:	00 00 00 
    vk13Props.pNext = &vk12Props;
   14891:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   14898:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   1489f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   148a3:	48 8b 08             	mov    (%rax),%rcx
   148a6:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   148ad:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   148b4:	48 89 ce             	mov    %rcx,%rsi
   148b7:	48 89 c7             	mov    %rax,%rdi
   148ba:	e8 a6 55 ff ff       	call   9e65 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   148bf:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   148c5:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   148cb:	39 c2                	cmp    %eax,%edx
   148cd:	75 08                	jne    148d7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   148cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148d3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   148d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148db:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   148df:	75 19                	jne    148fa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   148e1:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   148e8:	48 8d 15 51 1b 01 00 	lea    0x11b51(%rip),%rdx        # 26440 <_ZZN9VulkanApp6renderEvE11submitCount+0x124>
   148ef:	48 89 d6             	mov    %rdx,%rsi
   148f2:	48 89 c7             	mov    %rax,%rdi
   148f5:	e8 96 0e ff ff       	call   5790 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   148fa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14901:	48 83 c0 10          	add    $0x10,%rax
   14905:	48 8d 15 40 1b 01 00 	lea    0x11b40(%rip),%rdx        # 2644c <_ZZN9VulkanApp6renderEvE11submitCount+0x130>
   1490c:	48 89 d6             	mov    %rdx,%rsi
   1490f:	48 89 c7             	mov    %rax,%rdi
   14912:	e8 f9 0b ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14917:	48 89 c2             	mov    %rax,%rdx
   1491a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1491e:	48 89 c6             	mov    %rax,%rsi
   14921:	48 89 d7             	mov    %rdx,%rdi
   14924:	e8 a7 07 ff ff       	call   50d0 <_ZNSolsEm@plt>
   14929:	48 89 c2             	mov    %rax,%rdx
   1492c:	48 8d 05 1d 1b 01 00 	lea    0x11b1d(%rip),%rax        # 26450 <_ZZN9VulkanApp6renderEvE11submitCount+0x134>
   14933:	48 89 c6             	mov    %rax,%rsi
   14936:	48 89 d7             	mov    %rdx,%rdi
   14939:	e8 d2 0b ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1493e:	48 89 c2             	mov    %rax,%rdx
   14941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14945:	48 89 c6             	mov    %rax,%rsi
   14948:	48 89 d7             	mov    %rdx,%rdi
   1494b:	e8 80 07 ff ff       	call   50d0 <_ZNSolsEm@plt>
   14950:	48 89 c2             	mov    %rax,%rdx
   14953:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   1495a:	48 89 c6             	mov    %rax,%rsi
   1495d:	48 89 d7             	mov    %rdx,%rdi
   14960:	e8 1b 0b ff ff       	call   5480 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   14965:	48 89 c2             	mov    %rax,%rdx
   14968:	48 8d 05 ea 1a 01 00 	lea    0x11aea(%rip),%rax        # 26459 <_ZZN9VulkanApp6renderEvE11submitCount+0x13d>
   1496f:	48 89 c6             	mov    %rax,%rsi
   14972:	48 89 d7             	mov    %rdx,%rdi
   14975:	e8 96 0b ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   1497a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14981:	48 83 c0 10          	add    $0x10,%rax
   14985:	48 8d 15 d0 1a 01 00 	lea    0x11ad0(%rip),%rdx        # 2645c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   1498c:	48 89 d6             	mov    %rdx,%rsi
   1498f:	48 89 c7             	mov    %rax,%rdi
   14992:	e8 79 0b ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14997:	48 89 c2             	mov    %rax,%rdx
   1499a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1499e:	48 89 c6             	mov    %rax,%rsi
   149a1:	48 89 d7             	mov    %rdx,%rdi
   149a4:	e8 27 07 ff ff       	call   50d0 <_ZNSolsEm@plt>
   149a9:	48 89 c2             	mov    %rax,%rdx
   149ac:	48 8d 05 ae 1a 01 00 	lea    0x11aae(%rip),%rax        # 26461 <_ZZN9VulkanApp6renderEvE11submitCount+0x145>
   149b3:	48 89 c6             	mov    %rax,%rsi
   149b6:	48 89 d7             	mov    %rdx,%rdi
   149b9:	e8 52 0b ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   149be:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   149c5:	48 83 c0 10          	add    $0x10,%rax
   149c9:	48 8d 15 a8 1a 01 00 	lea    0x11aa8(%rip),%rdx        # 26478 <_ZZN9VulkanApp6renderEvE11submitCount+0x15c>
   149d0:	48 89 d6             	mov    %rdx,%rsi
   149d3:	48 89 c7             	mov    %rax,%rdi
   149d6:	e8 35 0b ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   149db:	48 89 c2             	mov    %rax,%rdx
   149de:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   149e4:	89 c6                	mov    %eax,%esi
   149e6:	48 89 d7             	mov    %rdx,%rdi
   149e9:	e8 72 0d ff ff       	call   5760 <_ZNSolsEj@plt>
   149ee:	be 0a 00 00 00       	mov    $0xa,%esi
   149f3:	48 89 c7             	mov    %rax,%rdi
   149f6:	e8 65 0c ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   149fb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14a02:	48 83 c0 10          	add    $0x10,%rax
   14a06:	48 8d 15 7a 1a 01 00 	lea    0x11a7a(%rip),%rdx        # 26487 <_ZZN9VulkanApp6renderEvE11submitCount+0x16b>
   14a0d:	48 89 d6             	mov    %rdx,%rsi
   14a10:	48 89 c7             	mov    %rax,%rdi
   14a13:	e8 f8 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14a18:	48 89 c2             	mov    %rax,%rdx
   14a1b:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   14a22:	48 83 c0 24          	add    $0x24,%rax
   14a26:	48 89 c6             	mov    %rax,%rsi
   14a29:	48 89 d7             	mov    %rdx,%rdi
   14a2c:	e8 df 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14a31:	be 0a 00 00 00       	mov    $0xa,%esi
   14a36:	48 89 c7             	mov    %rax,%rdi
   14a39:	e8 22 0c ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   14a3e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14a45:	48 83 c0 10          	add    $0x10,%rax
   14a49:	48 8d 15 48 1a 01 00 	lea    0x11a48(%rip),%rdx        # 26498 <_ZZN9VulkanApp6renderEvE11submitCount+0x17c>
   14a50:	48 89 d6             	mov    %rdx,%rsi
   14a53:	48 89 c7             	mov    %rax,%rdi
   14a56:	e8 b5 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   14a5b:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   14a61:	83 f8 04             	cmp    $0x4,%eax
   14a64:	0f 84 80 00 00 00    	je     14aea <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   14a6a:	83 f8 04             	cmp    $0x4,%eax
   14a6d:	0f 8f 96 00 00 00    	jg     14b09 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   14a73:	83 f8 03             	cmp    $0x3,%eax
   14a76:	74 53                	je     14acb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   14a78:	83 f8 03             	cmp    $0x3,%eax
   14a7b:	0f 8f 88 00 00 00    	jg     14b09 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   14a81:	83 f8 01             	cmp    $0x1,%eax
   14a84:	74 07                	je     14a8d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   14a86:	83 f8 02             	cmp    $0x2,%eax
   14a89:	74 21                	je     14aac <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   14a8b:	eb 7c                	jmp    14b09 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   14a8d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14a94:	48 83 c0 10          	add    $0x10,%rax
   14a98:	48 8d 15 0a 1a 01 00 	lea    0x11a0a(%rip),%rdx        # 264a9 <_ZZN9VulkanApp6renderEvE11submitCount+0x18d>
   14a9f:	48 89 d6             	mov    %rdx,%rsi
   14aa2:	48 89 c7             	mov    %rax,%rdi
   14aa5:	e8 66 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   14aaa:	eb 7b                	jmp    14b27 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   14aac:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14ab3:	48 83 c0 10          	add    $0x10,%rax
   14ab7:	48 8d 15 fb 19 01 00 	lea    0x119fb(%rip),%rdx        # 264b9 <_ZZN9VulkanApp6renderEvE11submitCount+0x19d>
   14abe:	48 89 d6             	mov    %rdx,%rsi
   14ac1:	48 89 c7             	mov    %rax,%rdi
   14ac4:	e8 47 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   14ac9:	eb 5c                	jmp    14b27 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   14acb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14ad2:	48 83 c0 10          	add    $0x10,%rax
   14ad6:	48 8d 15 ea 19 01 00 	lea    0x119ea(%rip),%rdx        # 264c7 <_ZZN9VulkanApp6renderEvE11submitCount+0x1ab>
   14add:	48 89 d6             	mov    %rdx,%rsi
   14ae0:	48 89 c7             	mov    %rax,%rdi
   14ae3:	e8 28 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   14ae8:	eb 3d                	jmp    14b27 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   14aea:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14af1:	48 83 c0 10          	add    $0x10,%rax
   14af5:	48 8d 15 d8 19 01 00 	lea    0x119d8(%rip),%rdx        # 264d4 <_ZZN9VulkanApp6renderEvE11submitCount+0x1b8>
   14afc:	48 89 d6             	mov    %rdx,%rsi
   14aff:	48 89 c7             	mov    %rax,%rdi
   14b02:	e8 09 0a ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   14b07:	eb 1e                	jmp    14b27 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   14b09:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14b10:	48 83 c0 10          	add    $0x10,%rax
   14b14:	48 8d 15 be 19 01 00 	lea    0x119be(%rip),%rdx        # 264d9 <_ZZN9VulkanApp6renderEvE11submitCount+0x1bd>
   14b1b:	48 89 d6             	mov    %rdx,%rsi
   14b1e:	48 89 c7             	mov    %rax,%rdi
   14b21:	e8 ea 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   14b26:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   14b27:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14b2e:	48 83 c0 10          	add    $0x10,%rax
   14b32:	48 8d 15 a7 19 01 00 	lea    0x119a7(%rip),%rdx        # 264e0 <_ZZN9VulkanApp6renderEvE11submitCount+0x1c4>
   14b39:	48 89 d6             	mov    %rdx,%rsi
   14b3c:	48 89 c7             	mov    %rax,%rdi
   14b3f:	e8 cc 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14b44:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   14b4a:	89 d6                	mov    %edx,%esi
   14b4c:	48 89 c7             	mov    %rax,%rdi
   14b4f:	e8 6c 0e ff ff       	call   59c0 <_ZNSolsEi@plt>
   14b54:	be 0a 00 00 00       	mov    $0xa,%esi
   14b59:	48 89 c7             	mov    %rax,%rdi
   14b5c:	e8 ff 0a ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   14b61:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14b68:	48 83 c0 10          	add    $0x10,%rax
   14b6c:	48 8d 15 7c 19 01 00 	lea    0x1197c(%rip),%rdx        # 264ef <_ZZN9VulkanApp6renderEvE11submitCount+0x1d3>
   14b73:	48 89 d6             	mov    %rdx,%rsi
   14b76:	48 89 c7             	mov    %rax,%rdi
   14b79:	e8 92 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14b7e:	48 89 c2             	mov    %rax,%rdx
   14b81:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   14b88:	48 83 c0 14          	add    $0x14,%rax
   14b8c:	48 89 c6             	mov    %rax,%rsi
   14b8f:	48 89 d7             	mov    %rdx,%rdi
   14b92:	e8 79 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14b97:	be 0a 00 00 00       	mov    $0xa,%esi
   14b9c:	48 89 c7             	mov    %rax,%rdi
   14b9f:	e8 bc 0a ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   14ba4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14bab:	48 83 c0 10          	add    $0x10,%rax
   14baf:	48 8d 15 4a 19 01 00 	lea    0x1194a(%rip),%rdx        # 26500 <_ZZN9VulkanApp6renderEvE11submitCount+0x1e4>
   14bb6:	48 89 d6             	mov    %rdx,%rsi
   14bb9:	48 89 c7             	mov    %rax,%rdi
   14bbc:	e8 4f 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14bc1:	48 89 c2             	mov    %rax,%rdx
   14bc4:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   14bcb:	48 05 14 01 00 00    	add    $0x114,%rax
   14bd1:	48 89 c6             	mov    %rax,%rsi
   14bd4:	48 89 d7             	mov    %rdx,%rdi
   14bd7:	e8 34 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14bdc:	be 0a 00 00 00       	mov    $0xa,%esi
   14be1:	48 89 c7             	mov    %rax,%rdi
   14be4:	e8 77 0a ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   14be9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14bf0:	48 83 c0 10          	add    $0x10,%rax
   14bf4:	48 8d 15 1d 19 01 00 	lea    0x1191d(%rip),%rdx        # 26518 <_ZZN9VulkanApp6renderEvE11submitCount+0x1fc>
   14bfb:	48 89 d6             	mov    %rdx,%rsi
   14bfe:	48 89 c7             	mov    %rax,%rdi
   14c01:	e8 0a 09 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14c06:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   14c09:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   14c10:	48 89 c6             	mov    %rax,%rsi
   14c13:	48 89 d7             	mov    %rdx,%rdi
   14c16:	e8 b5 04 ff ff       	call   50d0 <_ZNSolsEm@plt>
   14c1b:	be 0a 00 00 00       	mov    $0xa,%esi
   14c20:	48 89 c7             	mov    %rax,%rdi
   14c23:	e8 38 0a ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   14c28:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14c2f:	48 83 c0 10          	add    $0x10,%rax
   14c33:	48 8d 15 22 18 01 00 	lea    0x11822(%rip),%rdx        # 2645c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   14c3a:	48 89 d6             	mov    %rdx,%rsi
   14c3d:	48 89 c7             	mov    %rax,%rdi
   14c40:	e8 cb 08 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14c45:	48 89 c2             	mov    %rax,%rdx
   14c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c4c:	48 89 c6             	mov    %rax,%rsi
   14c4f:	48 89 d7             	mov    %rdx,%rdi
   14c52:	e8 79 04 ff ff       	call   50d0 <_ZNSolsEm@plt>
   14c57:	48 89 c2             	mov    %rax,%rdx
   14c5a:	48 8d 05 df 18 01 00 	lea    0x118df(%rip),%rax        # 26540 <_ZZN9VulkanApp6renderEvE11submitCount+0x224>
   14c61:	48 89 c6             	mov    %rax,%rsi
   14c64:	48 89 d7             	mov    %rdx,%rdi
   14c67:	e8 a4 08 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   14c6c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14c70:	48 8b 08             	mov    (%rax),%rcx
   14c73:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   14c7a:	ba 00 00 00 00       	mov    $0x0,%edx
   14c7f:	48 89 ce             	mov    %rcx,%rsi
   14c82:	48 89 c7             	mov    %rax,%rdi
   14c85:	e8 6d 4d ff ff       	call   99f7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   14c8a:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   14c91:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14c95:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c99:	48 89 c7             	mov    %rax,%rdi
   14c9c:	e8 f7 14 00 00       	call   16198 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   14ca1:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   14ca8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cac:	48 89 c7             	mov    %rax,%rdi
   14caf:	e8 0a 15 00 00       	call   161be <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   14cb4:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   14cbb:	eb 5e                	jmp    14d1b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   14cbd:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   14cc4:	48 89 c7             	mov    %rax,%rdi
   14cc7:	e8 7a 15 00 00       	call   16246 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   14ccc:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   14cd0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14cd7:	48 83 c0 10          	add    $0x10,%rax
   14cdb:	48 8d 15 7f 18 01 00 	lea    0x1187f(%rip),%rdx        # 26561 <_ZZN9VulkanApp6renderEvE11submitCount+0x245>
   14ce2:	48 89 d6             	mov    %rdx,%rsi
   14ce5:	48 89 c7             	mov    %rax,%rdi
   14ce8:	e8 23 08 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14ced:	48 89 c2             	mov    %rax,%rdx
   14cf0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14cf4:	48 89 c6             	mov    %rax,%rsi
   14cf7:	48 89 d7             	mov    %rdx,%rdi
   14cfa:	e8 11 08 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14cff:	be 0a 00 00 00       	mov    $0xa,%esi
   14d04:	48 89 c7             	mov    %rax,%rdi
   14d07:	e8 54 09 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   14d0c:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   14d13:	48 89 c7             	mov    %rax,%rdi
   14d16:	e8 07 15 00 00       	call   16222 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   14d1b:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   14d22:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   14d29:	48 89 d6             	mov    %rdx,%rsi
   14d2c:	48 89 c7             	mov    %rax,%rdi
   14d2f:	e8 b3 14 00 00       	call   161e7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   14d34:	84 c0                	test   %al,%al
   14d36:	75 85                	jne    14cbd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   14d38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14d3c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14d40:	0f 85 fb 00 00 00    	jne    14e41 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   14d46:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14d4d:	48 83 c0 10          	add    $0x10,%rax
   14d51:	48 8d 15 04 17 01 00 	lea    0x11704(%rip),%rdx        # 2645c <_ZZN9VulkanApp6renderEvE11submitCount+0x140>
   14d58:	48 89 d6             	mov    %rdx,%rsi
   14d5b:	48 89 c7             	mov    %rax,%rdi
   14d5e:	e8 ad 07 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14d63:	48 89 c2             	mov    %rax,%rdx
   14d66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d6a:	48 89 c6             	mov    %rax,%rsi
   14d6d:	48 89 d7             	mov    %rdx,%rdi
   14d70:	e8 5b 03 ff ff       	call   50d0 <_ZNSolsEm@plt>
   14d75:	48 89 c2             	mov    %rax,%rdx
   14d78:	48 8d 05 e9 17 01 00 	lea    0x117e9(%rip),%rax        # 26568 <_ZZN9VulkanApp6renderEvE11submitCount+0x24c>
   14d7f:	48 89 c6             	mov    %rax,%rsi
   14d82:	48 89 d7             	mov    %rdx,%rdi
   14d85:	e8 86 07 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   14d8a:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   14d91:	48 05 90 00 00 00    	add    $0x90,%rax
   14d97:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   14d9b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14d9f:	48 89 c7             	mov    %rax,%rdi
   14da2:	e8 4f 0f 00 00       	call   15cf6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   14da7:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   14dae:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14db2:	48 89 c7             	mov    %rax,%rdi
   14db5:	e8 62 0f 00 00       	call   15d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   14dba:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   14dc1:	eb 61                	jmp    14e24 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   14dc3:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   14dca:	48 89 c7             	mov    %rax,%rdi
   14dcd:	e8 ce 0f 00 00       	call   15da0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   14dd2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   14dd6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14ddd:	48 83 c0 10          	add    $0x10,%rax
   14de1:	48 8d 15 79 17 01 00 	lea    0x11779(%rip),%rdx        # 26561 <_ZZN9VulkanApp6renderEvE11submitCount+0x245>
   14de8:	48 89 d6             	mov    %rdx,%rsi
   14deb:	48 89 c7             	mov    %rax,%rdi
   14dee:	e8 1d 07 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14df3:	48 89 c2             	mov    %rax,%rdx
   14df6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   14dfa:	48 8b 00             	mov    (%rax),%rax
   14dfd:	48 89 c6             	mov    %rax,%rsi
   14e00:	48 89 d7             	mov    %rdx,%rdi
   14e03:	e8 08 07 ff ff       	call   5510 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   14e08:	be 0a 00 00 00       	mov    $0xa,%esi
   14e0d:	48 89 c7             	mov    %rax,%rdi
   14e10:	e8 4b 08 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   14e15:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   14e1c:	48 89 c7             	mov    %rax,%rdi
   14e1f:	e8 5c 0f 00 00       	call   15d80 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   14e24:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   14e2b:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   14e32:	48 89 d6             	mov    %rdx,%rsi
   14e35:	48 89 c7             	mov    %rax,%rdi
   14e38:	e8 08 0f 00 00       	call   15d45 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   14e3d:	84 c0                	test   %al,%al
   14e3f:	75 82                	jne    14dc3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   14e41:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14e48:	48 83 c0 10          	add    $0x10,%rax
   14e4c:	be 0a 00 00 00       	mov    $0xa,%esi
   14e51:	48 89 c7             	mov    %rax,%rdi
   14e54:	e8 07 08 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   14e59:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   14e5e:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   14e65:	48 89 c7             	mov    %rax,%rdi
   14e68:	e8 ff 5c ff ff       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   14e6d:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   14e74:	48 89 c7             	mov    %rax,%rdi
   14e77:	e8 6c 0c ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   14e7c:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   14e83:	48 89 c7             	mov    %rax,%rdi
   14e86:	e8 c5 11 00 00       	call   16050 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   14e8b:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   14e92:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   14e99:	48 89 d6             	mov    %rdx,%rsi
   14e9c:	48 89 c7             	mov    %rax,%rdi
   14e9f:	e8 71 11 00 00       	call   16015 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   14ea4:	84 c0                	test   %al,%al
   14ea6:	0f 85 18 f9 ff ff    	jne    147c4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   14eac:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14eb3:	48 83 c0 10          	add    $0x10,%rax
   14eb7:	be 0a 00 00 00       	mov    $0xa,%esi
   14ebc:	48 89 c7             	mov    %rax,%rdi
   14ebf:	e8 9c 07 ff ff       	call   5660 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   14ec4:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   14ecb:	48 89 c7             	mov    %rax,%rdi
   14ece:	e8 23 5f ff ff       	call   adf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   14ed3:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   14eda:	48 89 c7             	mov    %rax,%rdi
   14edd:	e8 1c 5b ff ff       	call   a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   14ee2:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   14ee9:	48 89 c7             	mov    %rax,%rdi
   14eec:	e8 7b 5c ff ff       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   14ef1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14ef8:	48 89 c7             	mov    %rax,%rdi
   14efb:	e8 c0 01 ff ff       	call   50c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   14f00:	e9 cd 00 00 00       	jmp    14fd2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   14f05:	49 89 c4             	mov    %rax,%r12
   14f08:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   14f0f:	48 89 c7             	mov    %rax,%rdi
   14f12:	e8 d1 0b ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14f17:	eb 03                	jmp    14f1c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   14f19:	49 89 c4             	mov    %rax,%r12
   14f1c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   14f23:	48 89 c7             	mov    %rax,%rdi
   14f26:	e8 bd 0b ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14f2b:	eb 03                	jmp    14f30 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   14f2d:	49 89 c4             	mov    %rax,%r12
   14f30:	48 89 df             	mov    %rbx,%rdi
   14f33:	e8 18 04 ff ff       	call   5350 <__cxa_free_exception@plt>
   14f38:	4c 89 e3             	mov    %r12,%rbx
   14f3b:	eb 7b                	jmp    14fb8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   14f3d:	48 89 c3             	mov    %rax,%rbx
   14f40:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   14f47:	48 89 c7             	mov    %rax,%rdi
   14f4a:	e8 81 06 ff ff       	call   55d0 <_ZNSaIcED1Ev@plt>
   14f4f:	eb 2b                	jmp    14f7c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   14f51:	48 89 c3             	mov    %rax,%rbx
   14f54:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   14f5b:	48 89 c7             	mov    %rax,%rdi
   14f5e:	e8 09 5c ff ff       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   14f63:	eb 03                	jmp    14f68 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   14f65:	48 89 c3             	mov    %rax,%rbx
   14f68:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   14f6f:	48 89 c7             	mov    %rax,%rdi
   14f72:	e8 71 0b ff ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14f77:	eb 03                	jmp    14f7c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   14f79:	48 89 c3             	mov    %rax,%rbx
   14f7c:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   14f83:	48 89 c7             	mov    %rax,%rdi
   14f86:	e8 6b 5e ff ff       	call   adf6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   14f8b:	eb 03                	jmp    14f90 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   14f8d:	48 89 c3             	mov    %rax,%rbx
   14f90:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   14f97:	48 89 c7             	mov    %rax,%rdi
   14f9a:	e8 5f 5a ff ff       	call   a9fe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   14f9f:	eb 03                	jmp    14fa4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   14fa1:	48 89 c3             	mov    %rax,%rbx
   14fa4:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   14fab:	48 89 c7             	mov    %rax,%rdi
   14fae:	e8 b9 5b ff ff       	call   ab6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   14fb3:	eb 03                	jmp    14fb8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   14fb5:	48 89 c3             	mov    %rax,%rbx
   14fb8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   14fbf:	48 89 c7             	mov    %rax,%rdi
   14fc2:	e8 f9 00 ff ff       	call   50c0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   14fc7:	48 89 d8             	mov    %rbx,%rax
   14fca:	48 89 c7             	mov    %rax,%rdi
   14fcd:	e8 2e 0a ff ff       	call   5a00 <_Unwind_Resume@plt>
   14fd2:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   14fd9:	5b                   	pop    %rbx
   14fda:	41 5c                	pop    %r12
   14fdc:	5d                   	pop    %rbp
   14fdd:	c3                   	ret

0000000000014fde <_Z41__static_initialization_and_destruction_0ii>:
   14fde:	55                   	push   %rbp
   14fdf:	48 89 e5             	mov    %rsp,%rbp
   14fe2:	41 57                	push   %r15
   14fe4:	41 56                	push   %r14
   14fe6:	41 55                	push   %r13
   14fe8:	41 54                	push   %r12
   14fea:	53                   	push   %rbx
   14feb:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   14ff2:	89 bd 2c ff ff ff    	mov    %edi,-0xd4(%rbp)
   14ff8:	89 b5 28 ff ff ff    	mov    %esi,-0xd8(%rbp)
   14ffe:	83 bd 2c ff ff ff 01 	cmpl   $0x1,-0xd4(%rbp)
   15005:	0f 85 59 03 00 00    	jne    15364 <_Z41__static_initialization_and_destruction_0ii+0x386>
   1500b:	81 bd 28 ff ff ff ff 	cmpl   $0xffff,-0xd8(%rbp)
   15012:	ff 00 00 
   15015:	0f 85 49 03 00 00    	jne    15364 <_Z41__static_initialization_and_destruction_0ii+0x386>
   1501b:	48 8d 05 f6 46 02 00 	lea    0x246f6(%rip),%rax        # 39718 <_ZStL8__ioinit>
   15022:	48 89 c7             	mov    %rax,%rdi
   15025:	e8 56 08 ff ff       	call   5880 <_ZNSt8ios_base4InitC1Ev@plt>
   1502a:	48 8d 05 2f 45 02 00 	lea    0x2452f(%rip),%rax        # 39560 <__dso_handle>
   15031:	48 89 c2             	mov    %rax,%rdx
   15034:	48 8d 05 dd 46 02 00 	lea    0x246dd(%rip),%rax        # 39718 <_ZStL8__ioinit>
   1503b:	48 89 c6             	mov    %rax,%rsi
   1503e:	48 8b 05 9b 3f 02 00 	mov    0x23f9b(%rip),%rax        # 38fe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   15045:	48 89 c7             	mov    %rax,%rdi
   15048:	e8 23 04 ff ff       	call   5470 <__cxa_atexit@plt>
inline const std::string absoluteDirectory =
   1504d:	48 8d 05 a4 46 02 00 	lea    0x246a4(%rip),%rax        # 396f8 <_ZGVN3vkh17absoluteDirectoryB5cxx11E>
   15054:	0f b6 00             	movzbl (%rax),%eax
   15057:	84 c0                	test   %al,%al
   15059:	75 64                	jne    150bf <_Z41__static_initialization_and_destruction_0ii+0xe1>
   1505b:	48 8d 05 96 46 02 00 	lea    0x24696(%rip),%rax        # 396f8 <_ZGVN3vkh17absoluteDirectoryB5cxx11E>
   15062:	c6 00 01             	movb   $0x1,(%rax)
    std::filesystem::current_path().string();
   15065:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1506c:	48 89 c7             	mov    %rax,%rdi
   1506f:	e8 5c 08 ff ff       	call   58d0 <_ZNSt10filesystem12current_pathB5cxx11Ev@plt>
inline const std::string absoluteDirectory =
   15074:	48 8d 15 25 46 02 00 	lea    0x24625(%rip),%rdx        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
   1507b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   15082:	48 89 c6             	mov    %rax,%rsi
   15085:	48 89 d7             	mov    %rdx,%rdi
   15088:	e8 bb 10 ff ff       	call   6148 <_ZNKSt10filesystem7__cxx114path6stringEv>
    std::filesystem::current_path().string();
   1508d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   15094:	48 89 c7             	mov    %rax,%rdi
   15097:	e8 80 10 ff ff       	call   611c <_ZNSt10filesystem7__cxx114pathD1Ev>
inline const std::string absoluteDirectory =
   1509c:	48 8d 05 bd 44 02 00 	lea    0x244bd(%rip),%rax        # 39560 <__dso_handle>
   150a3:	48 89 c2             	mov    %rax,%rdx
   150a6:	48 8d 05 f3 45 02 00 	lea    0x245f3(%rip),%rax        # 396a0 <_ZN3vkh17absoluteDirectoryB5cxx11E>
   150ad:	48 89 c6             	mov    %rax,%rsi
   150b0:	48 8b 05 f9 3e 02 00 	mov    0x23ef9(%rip),%rax        # 38fb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
   150b7:	48 89 c7             	mov    %rax,%rdi
   150ba:	e8 b1 03 ff ff       	call   5470 <__cxa_atexit@plt>
inline const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
   150bf:	48 8d 05 3a 46 02 00 	lea    0x2463a(%rip),%rax        # 39700 <_ZGVN6shader16triangle_indicesE>
   150c6:	0f b6 00             	movzbl (%rax),%eax
   150c9:	84 c0                	test   %al,%al
   150cb:	0f 85 b9 00 00 00    	jne    1518a <_Z41__static_initialization_and_destruction_0ii+0x1ac>
   150d1:	48 8d 05 28 46 02 00 	lea    0x24628(%rip),%rax        # 39700 <_ZGVN6shader16triangle_indicesE>
   150d8:	c6 00 01             	movb   $0x1,(%rax)
   150db:	66 c7 85 62 ff ff ff 	movw   $0x0,-0x9e(%rbp)
   150e2:	00 00 
   150e4:	66 c7 85 64 ff ff ff 	movw   $0x1,-0x9c(%rbp)
   150eb:	01 00 
   150ed:	66 c7 85 66 ff ff ff 	movw   $0x2,-0x9a(%rbp)
   150f4:	02 00 
   150f6:	66 c7 85 68 ff ff ff 	movw   $0x2,-0x98(%rbp)
   150fd:	02 00 
   150ff:	66 c7 85 6a ff ff ff 	movw   $0x3,-0x96(%rbp)
   15106:	03 00 
   15108:	66 c7 85 6c ff ff ff 	movw   $0x0,-0x94(%rbp)
   1510f:	00 00 
   15111:	48 8d 85 62 ff ff ff 	lea    -0x9e(%rbp),%rax
   15118:	49 89 c6             	mov    %rax,%r14
   1511b:	41 bf 06 00 00 00    	mov    $0x6,%r15d
   15121:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   15128:	48 89 c7             	mov    %rax,%rdi
   1512b:	e8 9a 11 ff ff       	call   62ca <_ZNSaItEC1Ev>
   15130:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   15137:	4c 89 f6             	mov    %r14,%rsi
   1513a:	4c 89 ff             	mov    %r15,%rdi
   1513d:	4c 89 f1             	mov    %r14,%rcx
   15140:	4c 89 fb             	mov    %r15,%rbx
   15143:	48 89 da             	mov    %rbx,%rdx
   15146:	48 89 c1             	mov    %rax,%rcx
   15149:	48 8d 05 70 45 02 00 	lea    0x24570(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
   15150:	48 89 c7             	mov    %rax,%rdi
   15153:	e8 aa 11 ff ff       	call   6302 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
   15158:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   1515f:	48 89 c7             	mov    %rax,%rdi
   15162:	e8 7f 11 ff ff       	call   62e6 <_ZNSaItED1Ev>
   15167:	48 8d 05 f2 43 02 00 	lea    0x243f2(%rip),%rax        # 39560 <__dso_handle>
   1516e:	48 89 c2             	mov    %rax,%rdx
   15171:	48 8d 05 48 45 02 00 	lea    0x24548(%rip),%rax        # 396c0 <_ZN6shader16triangle_indicesE>
   15178:	48 89 c6             	mov    %rax,%rsi
   1517b:	48 8d 05 a4 22 ff ff 	lea    -0xdd5c(%rip),%rax        # 7426 <_ZNSt6vectorItSaItEED1Ev>
   15182:	48 89 c7             	mov    %rax,%rdi
   15185:	e8 e6 02 ff ff       	call   5470 <__cxa_atexit@plt>
inline const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
   1518a:	48 8d 05 77 45 02 00 	lea    0x24577(%rip),%rax        # 39708 <_ZGVN6shader19triangle_index_dataE>
   15191:	0f b6 00             	movzbl (%rax),%eax
   15194:	84 c0                	test   %al,%al
   15196:	0f 85 c8 01 00 00    	jne    15364 <_Z41__static_initialization_and_destruction_0ii+0x386>
   1519c:	48 8d 05 65 45 02 00 	lea    0x24565(%rip),%rax        # 39708 <_ZGVN6shader19triangle_index_dataE>
   151a3:	c6 00 01             	movb   $0x1,(%rax)
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
   151a6:	f3 0f 10 05 7e 19 01 	movss  0x1197e(%rip),%xmm0        # 26b2c <_ZZN9VulkanApp6renderEvE11submitCount+0x810>
   151ad:	00 
   151ae:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
   151b5:	ff 
   151b6:	f3 0f 10 05 6e 19 01 	movss  0x1196e(%rip),%xmm0        # 26b2c <_ZZN9VulkanApp6renderEvE11submitCount+0x810>
   151bd:	00 
   151be:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
   151c5:	ff 
   151c6:	f3 0f 10 05 1e 19 01 	movss  0x1191e(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   151cd:	00 
   151ce:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
   151d5:	ff 
   151d6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   151da:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
   151e1:	ff 
   151e2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   151e6:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
   151eb:	f3 0f 10 05 3d 19 01 	movss  0x1193d(%rip),%xmm0        # 26b30 <_ZZN9VulkanApp6renderEvE11submitCount+0x814>
   151f2:	00 
   151f3:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
   151f8:	f3 0f 10 05 2c 19 01 	movss  0x1192c(%rip),%xmm0        # 26b2c <_ZZN9VulkanApp6renderEvE11submitCount+0x810>
   151ff:	00 
   15200:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
   15205:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15209:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
   1520e:	f3 0f 10 05 d6 18 01 	movss  0x118d6(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   15215:	00 
   15216:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
   1521b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1521f:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
   15224:	f3 0f 10 05 04 19 01 	movss  0x11904(%rip),%xmm0        # 26b30 <_ZZN9VulkanApp6renderEvE11submitCount+0x814>
   1522b:	00 
   1522c:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
   15231:	f3 0f 10 05 f7 18 01 	movss  0x118f7(%rip),%xmm0        # 26b30 <_ZZN9VulkanApp6renderEvE11submitCount+0x814>
   15238:	00 
   15239:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
   1523e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15242:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
   15247:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1524b:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
   15250:	f3 0f 10 05 94 18 01 	movss  0x11894(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   15257:	00 
   15258:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
   1525d:	f3 0f 10 05 c7 18 01 	movss  0x118c7(%rip),%xmm0        # 26b2c <_ZZN9VulkanApp6renderEvE11submitCount+0x810>
   15264:	00 
   15265:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
   1526a:	f3 0f 10 05 be 18 01 	movss  0x118be(%rip),%xmm0        # 26b30 <_ZZN9VulkanApp6renderEvE11submitCount+0x814>
   15271:	00 
   15272:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
   15277:	f3 0f 10 05 6d 18 01 	movss  0x1186d(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1527e:	00 
   1527f:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
   15284:	f3 0f 10 05 60 18 01 	movss  0x11860(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1528b:	00 
   1528c:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
   15291:	f3 0f 10 05 53 18 01 	movss  0x11853(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   15298:	00 
   15299:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
   1529e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   152a5:	49 89 c4             	mov    %rax,%r12
   152a8:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   152ae:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   152b2:	48 89 c7             	mov    %rax,%rdi
   152b5:	e8 d0 10 ff ff       	call   638a <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEEC1Ev>
   152ba:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   152be:	4c 89 e6             	mov    %r12,%rsi
   152c1:	4c 89 ef             	mov    %r13,%rdi
   152c4:	4c 89 e1             	mov    %r12,%rcx
   152c7:	4c 89 eb             	mov    %r13,%rbx
   152ca:	48 89 da             	mov    %rbx,%rdx
   152cd:	48 89 c1             	mov    %rax,%rcx
   152d0:	48 8d 05 09 44 02 00 	lea    0x24409(%rip),%rax        # 396e0 <_ZN6shader19triangle_index_dataE>
   152d7:	48 89 c7             	mov    %rax,%rdi
   152da:	e8 e3 10 ff ff       	call   63c2 <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EEC1ESt16initializer_listIS4_ERKS5_>
   152df:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   152e3:	48 89 c7             	mov    %rax,%rdi
   152e6:	e8 bb 10 ff ff       	call   63a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
inline const std::vector<vkh::Vertex2D_RGB> triangle_index_data{
   152eb:	48 8d 05 6e 42 02 00 	lea    0x2426e(%rip),%rax        # 39560 <__dso_handle>
   152f2:	48 89 c2             	mov    %rax,%rdx
   152f5:	48 8d 05 e4 43 02 00 	lea    0x243e4(%rip),%rax        # 396e0 <_ZN6shader19triangle_index_dataE>
   152fc:	48 89 c6             	mov    %rax,%rsi
   152ff:	48 8d 05 64 21 ff ff 	lea    -0xde9c(%rip),%rax        # 746a <_ZNSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EED1Ev>
   15306:	48 89 c7             	mov    %rax,%rdi
   15309:	e8 62 01 ff ff       	call   5470 <__cxa_atexit@plt>
   1530e:	eb 54                	jmp    15364 <_Z41__static_initialization_and_destruction_0ii+0x386>
    std::filesystem::current_path().string();
   15310:	48 89 c3             	mov    %rax,%rbx
   15313:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   1531a:	48 89 c7             	mov    %rax,%rdi
   1531d:	e8 fa 0d ff ff       	call   611c <_ZNSt10filesystem7__cxx114pathD1Ev>
   15322:	48 89 d8             	mov    %rbx,%rax
   15325:	48 89 c7             	mov    %rax,%rdi
   15328:	e8 d3 06 ff ff       	call   5a00 <_Unwind_Resume@plt>
inline const std::vector<uint16_t> triangle_indices{0, 1, 2, 2, 3, 0};
   1532d:	48 89 c3             	mov    %rax,%rbx
   15330:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   15337:	48 89 c7             	mov    %rax,%rdi
   1533a:	e8 a7 0f ff ff       	call   62e6 <_ZNSaItED1Ev>
   1533f:	48 89 d8             	mov    %rbx,%rax
   15342:	48 89 c7             	mov    %rax,%rdi
   15345:	e8 b6 06 ff ff       	call   5a00 <_Unwind_Resume@plt>
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};
   1534a:	48 89 c3             	mov    %rax,%rbx
   1534d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
   15351:	48 89 c7             	mov    %rax,%rdi
   15354:	e8 4d 10 ff ff       	call   63a6 <_ZNSaIN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EEEED1Ev>
   15359:	48 89 d8             	mov    %rbx,%rax
   1535c:	48 89 c7             	mov    %rax,%rdi
   1535f:	e8 9c 06 ff ff       	call   5a00 <_Unwind_Resume@plt>
   15364:	90                   	nop
   15365:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1536c:	5b                   	pop    %rbx
   1536d:	41 5c                	pop    %r12
   1536f:	41 5d                	pop    %r13
   15371:	41 5e                	pop    %r14
   15373:	41 5f                	pop    %r15
   15375:	5d                   	pop    %rbp
   15376:	c3                   	ret

0000000000015377 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   15377:	55                   	push   %rbp
   15378:	48 89 e5             	mov    %rsp,%rbp
   1537b:	be ff ff 00 00       	mov    $0xffff,%esi
   15380:	bf 01 00 00 00       	mov    $0x1,%edi
   15385:	e8 54 fc ff ff       	call   14fde <_Z41__static_initialization_and_destruction_0ii>
   1538a:	5d                   	pop    %rbp
   1538b:	c3                   	ret

000000000001538c <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   1538c:	55                   	push   %rbp
   1538d:	48 89 e5             	mov    %rsp,%rbp
   15390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15394:	48 8d 15 75 39 02 00 	lea    0x23975(%rip),%rdx        # 38d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   1539b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1539f:	48 89 10             	mov    %rdx,(%rax)
   153a2:	90                   	nop
   153a3:	5d                   	pop    %rbp
   153a4:	c3                   	ret

00000000000153a5 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   153a5:	55                   	push   %rbp
   153a6:	48 89 e5             	mov    %rsp,%rbp
   153a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   153b1:	90                   	nop
   153b2:	5d                   	pop    %rbp
   153b3:	c3                   	ret

00000000000153b4 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   153b4:	55                   	push   %rbp
   153b5:	48 89 e5             	mov    %rsp,%rbp
   153b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   153bc:	48 8d 05 ed 0c 01 00 	lea    0x10ced(%rip),%rax        # 260b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   153c3:	5d                   	pop    %rbp
   153c4:	c3                   	ret
   153c5:	90                   	nop

00000000000153c6 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   153c6:	55                   	push   %rbp
   153c7:	48 89 e5             	mov    %rsp,%rbp
   153ca:	48 83 ec 10          	sub    $0x10,%rsp
   153ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153d6:	48 89 c7             	mov    %rax,%rdi
   153d9:	e8 ae ff ff ff       	call   1538c <_ZNSt9exceptionC1Ev>
   153de:	48 8d 15 db 38 02 00 	lea    0x238db(%rip),%rdx        # 38cc0 <_ZTVSt19bad_optional_access+0x10>
   153e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153e9:	48 89 10             	mov    %rdx,(%rax)
   153ec:	90                   	nop
   153ed:	c9                   	leave
   153ee:	c3                   	ret

00000000000153ef <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   153ef:	55                   	push   %rbp
   153f0:	48 89 e5             	mov    %rsp,%rbp
   153f3:	53                   	push   %rbx
   153f4:	48 83 ec 08          	sub    $0x8,%rsp
   153f8:	bf 08 00 00 00       	mov    $0x8,%edi
   153fd:	e8 1e fe fe ff       	call   5220 <__cxa_allocate_exception@plt>
   15402:	48 89 c3             	mov    %rax,%rbx
   15405:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1540c:	48 89 df             	mov    %rbx,%rdi
   1540f:	e8 b2 ff ff ff       	call   153c6 <_ZNSt19bad_optional_accessC1Ev>
   15414:	48 8d 05 d7 d6 00 00 	lea    0xd6d7(%rip),%rax        # 22af2 <_ZNSt19bad_optional_accessD1Ev>
   1541b:	48 89 c2             	mov    %rax,%rdx
   1541e:	48 8d 05 33 39 02 00 	lea    0x23933(%rip),%rax        # 38d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   15425:	48 89 c6             	mov    %rax,%rsi
   15428:	48 89 df             	mov    %rbx,%rdi
   1542b:	e8 60 05 ff ff       	call   5990 <__cxa_throw@plt>

0000000000015430 <_ZSt3cosf>:
  using ::cos;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  cos(float __x)
  { return __builtin_cosf(__x); }
   15430:	55                   	push   %rbp
   15431:	48 89 e5             	mov    %rsp,%rbp
   15434:	48 83 ec 10          	sub    $0x10,%rsp
   15438:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   1543d:	8b 45 fc             	mov    -0x4(%rbp),%eax
   15440:	66 0f 6e c0          	movd   %eax,%xmm0
   15444:	e8 27 ff fe ff       	call   5370 <cosf@plt>
   15449:	c9                   	leave
   1544a:	c3                   	ret

000000000001544b <_ZSt3sinf>:
  using ::sin;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  sin(float __x)
  { return __builtin_sinf(__x); }
   1544b:	55                   	push   %rbp
   1544c:	48 89 e5             	mov    %rsp,%rbp
   1544f:	48 83 ec 10          	sub    $0x10,%rsp
   15453:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   15458:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1545b:	66 0f 6e c0          	movd   %eax,%xmm0
   1545f:	e8 ac ff fe ff       	call   5410 <sinf@plt>
   15464:	c9                   	leave
   15465:	c3                   	ret

0000000000015466 <_ZSt4sqrtf>:
  using ::sqrt;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  sqrt(float __x)
  { return __builtin_sqrtf(__x); }
   15466:	55                   	push   %rbp
   15467:	48 89 e5             	mov    %rsp,%rbp
   1546a:	48 83 ec 10          	sub    $0x10,%rsp
   1546e:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   15473:	8b 45 fc             	mov    -0x4(%rbp),%eax
   15476:	66 0f 6e c0          	movd   %eax,%xmm0
   1547a:	e8 e1 05 ff ff       	call   5a60 <sqrtf@plt>
   1547f:	c9                   	leave
   15480:	c3                   	ret

0000000000015481 <_ZSt3tanf>:
  using ::tan;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  tan(float __x)
  { return __builtin_tanf(__x); }
   15481:	55                   	push   %rbp
   15482:	48 89 e5             	mov    %rsp,%rbp
   15485:	48 83 ec 10          	sub    $0x10,%rsp
   15489:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   1548e:	8b 45 fc             	mov    -0x4(%rbp),%eax
   15491:	66 0f 6e c0          	movd   %eax,%xmm0
   15495:	e8 96 03 ff ff       	call   5830 <tanf@plt>
   1549a:	c9                   	leave
   1549b:	c3                   	ret

000000000001549c <_ZNSt14numeric_limitsIfE7epsilonEv>:
      static _GLIBCXX_USE_CONSTEXPR bool is_integer = false;
      static _GLIBCXX_USE_CONSTEXPR bool is_exact = false;
      static _GLIBCXX_USE_CONSTEXPR int radix = __FLT_RADIX__;

      static _GLIBCXX_CONSTEXPR float
      epsilon() _GLIBCXX_USE_NOEXCEPT { return __FLT_EPSILON__; }
   1549c:	55                   	push   %rbp
   1549d:	48 89 e5             	mov    %rsp,%rbp
   154a0:	f3 0f 10 05 40 16 01 	movss  0x11640(%rip),%xmm0        # 26ae8 <_ZZN9VulkanApp6renderEvE11submitCount+0x7cc>
   154a7:	00 
   154a8:	5d                   	pop    %rbp
   154a9:	c3                   	ret

00000000000154aa <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3050. Conversion specification problem in chrono::duration
	template<typename _Rep2, typename = _Require<
		 is_convertible<const _Rep2&, rep>,
		 __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>
	  constexpr explicit duration(const _Rep2& __rep)
   154aa:	55                   	push   %rbp
   154ab:	48 89 e5             	mov    %rsp,%rbp
   154ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   154b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154ba:	48 8b 10             	mov    (%rax),%rdx
   154bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154c1:	48 89 10             	mov    %rdx,(%rax)
   154c4:	90                   	nop
   154c5:	5d                   	pop    %rbp
   154c6:	c3                   	ret
   154c7:	90                   	nop

00000000000154c8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
   154c8:	55                   	push   %rbp
   154c9:	48 89 e5             	mov    %rsp,%rbp
   154cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   154d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154d4:	48 8b 00             	mov    (%rax),%rax
   154d7:	5d                   	pop    %rbp
   154d8:	c3                   	ret
   154d9:	90                   	nop

00000000000154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(T scalar)
		: x(scalar), y(scalar), z(scalar)
	{}

	template <typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(T _x, T _y, T _z)
   154da:	55                   	push   %rbp
   154db:	48 89 e5             	mov    %rsp,%rbp
   154de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154e2:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
   154e7:	f3 0f 11 4d f0       	movss  %xmm1,-0x10(%rbp)
   154ec:	f3 0f 11 55 ec       	movss  %xmm2,-0x14(%rbp)
		: x(_x), y(_y), z(_z)
   154f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154f5:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   154fa:	f3 0f 11 00          	movss  %xmm0,(%rax)
   154fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15502:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   15507:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
   1550c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15510:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
   15515:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
	{}
   1551a:	90                   	nop
   1551b:	5d                   	pop    %rbp
   1551c:	c3                   	ret
   1551d:	90                   	nop

000000000001551e <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   1551e:	55                   	push   %rbp
   1551f:	48 89 e5             	mov    %rsp,%rbp
   15522:	48 83 ec 10          	sub    $0x10,%rsp
   15526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   1552a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1552e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   15534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15538:	48 89 c7             	mov    %rax,%rdi
   1553b:	e8 04 00 00 00       	call   15544 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   15540:	90                   	nop
   15541:	c9                   	leave
   15542:	c3                   	ret
   15543:	90                   	nop

0000000000015544 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   15544:	55                   	push   %rbp
   15545:	48 89 e5             	mov    %rsp,%rbp
   15548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   1554c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15550:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15557:	00 
      _M_header._M_left = &_M_header;
   15558:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1555c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15560:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   15564:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1556c:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   15570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15574:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1557b:	00 
    }
   1557c:	90                   	nop
   1557d:	5d                   	pop    %rbp
   1557e:	c3                   	ret
   1557f:	90                   	nop

0000000000015580 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   15580:	55                   	push   %rbp
   15581:	48 89 e5             	mov    %rsp,%rbp
   15584:	48 83 ec 10          	sub    $0x10,%rsp
   15588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1558c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15590:	48 89 c7             	mov    %rax,%rdi
   15593:	e8 60 00 00 00       	call   155f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   15598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1559c:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   155a0:	90                   	nop
   155a1:	c9                   	leave
   155a2:	c3                   	ret
   155a3:	90                   	nop

00000000000155a4 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   155a4:	55                   	push   %rbp
   155a5:	48 89 e5             	mov    %rsp,%rbp
   155a8:	48 83 ec 10          	sub    $0x10,%rsp
   155ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155b4:	48 89 c7             	mov    %rax,%rdi
   155b7:	e8 c4 ff ff ff       	call   15580 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   155bc:	90                   	nop
   155bd:	c9                   	leave
   155be:	c3                   	ret
   155bf:	90                   	nop

00000000000155c0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   155c0:	55                   	push   %rbp
   155c1:	48 89 e5             	mov    %rsp,%rbp
   155c4:	48 83 ec 10          	sub    $0x10,%rsp
   155c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155d0:	48 89 c7             	mov    %rax,%rdi
   155d3:	e8 cc ff ff ff       	call   155a4 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   155d8:	90                   	nop
   155d9:	c9                   	leave
   155da:	c3                   	ret
   155db:	90                   	nop

00000000000155dc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   155dc:	55                   	push   %rbp
   155dd:	48 89 e5             	mov    %rsp,%rbp
   155e0:	48 83 ec 10          	sub    $0x10,%rsp
   155e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155ec:	48 89 c7             	mov    %rax,%rdi
   155ef:	e8 cc ff ff ff       	call   155c0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   155f4:	90                   	nop
   155f5:	c9                   	leave
   155f6:	c3                   	ret
   155f7:	90                   	nop

00000000000155f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   155f8:	55                   	push   %rbp
   155f9:	48 89 e5             	mov    %rsp,%rbp
   155fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15600:	90                   	nop
   15601:	5d                   	pop    %rbp
   15602:	c3                   	ret
   15603:	90                   	nop

0000000000015604 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   15604:	55                   	push   %rbp
   15605:	48 89 e5             	mov    %rsp,%rbp
   15608:	48 83 ec 10          	sub    $0x10,%rsp
   1560c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15610:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15614:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1561c:	48 89 d6             	mov    %rdx,%rsi
   1561f:	48 89 c7             	mov    %rax,%rdi
   15622:	e8 75 0a 00 00       	call   1609c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   15627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1562b:	c9                   	leave
   1562c:	c3                   	ret
   1562d:	90                   	nop

000000000001562e <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   1562e:	55                   	push   %rbp
   1562f:	48 89 e5             	mov    %rsp,%rbp
   15632:	48 83 ec 10          	sub    $0x10,%rsp
   15636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1563a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1563e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15642:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15646:	48 89 d6             	mov    %rdx,%rsi
   15649:	48 89 c7             	mov    %rax,%rdi
   1564c:	e8 b3 ff ff ff       	call   15604 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   15651:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15655:	c9                   	leave
   15656:	c3                   	ret
   15657:	90                   	nop

0000000000015658 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   15658:	55                   	push   %rbp
   15659:	48 89 e5             	mov    %rsp,%rbp
   1565c:	48 83 ec 10          	sub    $0x10,%rsp
   15660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   15664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15668:	48 89 c7             	mov    %rax,%rdi
   1566b:	e8 1a 00 00 00       	call   1568a <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   15670:	84 c0                	test   %al,%al
   15672:	74 0e                	je     15682 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   15674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15678:	48 89 c7             	mov    %rax,%rdi
   1567b:	e8 46 0a 00 00       	call   160c6 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   15680:	eb 05                	jmp    15687 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   15682:	e8 68 fd ff ff       	call   153ef <_ZSt27__throw_bad_optional_accessv>
      }
   15687:	c9                   	leave
   15688:	c3                   	ret
   15689:	90                   	nop

000000000001568a <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   1568a:	55                   	push   %rbp
   1568b:	48 89 e5             	mov    %rsp,%rbp
   1568e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   15692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15696:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1569a:	5d                   	pop    %rbp
   1569b:	c3                   	ret

000000000001569c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   1569c:	55                   	push   %rbp
   1569d:	48 89 e5             	mov    %rsp,%rbp
   156a0:	48 83 ec 10          	sub    $0x10,%rsp
   156a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156ac:	48 89 c7             	mov    %rax,%rdi
   156af:	e8 8e 0a 00 00       	call   16142 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   156b4:	90                   	nop
   156b5:	c9                   	leave
   156b6:	c3                   	ret
   156b7:	90                   	nop

00000000000156b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   156b8:	55                   	push   %rbp
   156b9:	48 89 e5             	mov    %rsp,%rbp
   156bc:	48 83 ec 10          	sub    $0x10,%rsp
   156c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156c8:	48 89 c7             	mov    %rax,%rdi
   156cb:	e8 3a 0a 00 00       	call   1610a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   156d0:	90                   	nop
   156d1:	c9                   	leave
   156d2:	c3                   	ret
   156d3:	90                   	nop

00000000000156d4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   156d4:	55                   	push   %rbp
   156d5:	48 89 e5             	mov    %rsp,%rbp
   156d8:	48 83 ec 10          	sub    $0x10,%rsp
   156dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156e4:	48 89 c7             	mov    %rax,%rdi
   156e7:	e8 cc ff ff ff       	call   156b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   156ec:	90                   	nop
   156ed:	c9                   	leave
   156ee:	c3                   	ret
   156ef:	90                   	nop

00000000000156f0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   156f0:	55                   	push   %rbp
   156f1:	48 89 e5             	mov    %rsp,%rbp
   156f4:	48 83 ec 10          	sub    $0x10,%rsp
   156f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15700:	48 89 c7             	mov    %rax,%rdi
   15703:	e8 56 0a 00 00       	call   1615e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   15708:	90                   	nop
   15709:	c9                   	leave
   1570a:	c3                   	ret
   1570b:	90                   	nop

000000000001570c <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
   1570c:	55                   	push   %rbp
   1570d:	48 89 e5             	mov    %rsp,%rbp
   15710:	48 83 ec 10          	sub    $0x10,%rsp
   15714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
   15718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1571c:	48 89 c7             	mov    %rax,%rdi
   1571f:	e8 02 00 00 00       	call   15726 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
   15724:	c9                   	leave
   15725:	c3                   	ret

0000000000015726 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
   15726:	55                   	push   %rbp
   15727:	48 89 e5             	mov    %rsp,%rbp
   1572a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
   1572e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15732:	5d                   	pop    %rbp
   15733:	c3                   	ret

0000000000015734 <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   15734:	55                   	push   %rbp
   15735:	48 89 e5             	mov    %rsp,%rbp
   15738:	48 83 ec 20          	sub    $0x20,%rsp
   1573c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15740:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   15744:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15748:	48 89 c7             	mov    %rax,%rdi
   1574b:	e8 2a 00 00 00       	call   1577a <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   15750:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   15754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15758:	48 89 c7             	mov    %rax,%rdi
   1575b:	e8 1a 00 00 00       	call   1577a <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   15760:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15764:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15768:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1576c:	48 89 d6             	mov    %rdx,%rsi
   1576f:	48 89 c7             	mov    %rax,%rdi
   15772:	e8 b9 18 00 00       	call   17030 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   15777:	c9                   	leave
   15778:	c3                   	ret
   15779:	90                   	nop

000000000001577a <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   1577a:	55                   	push   %rbp
   1577b:	48 89 e5             	mov    %rsp,%rbp
   1577e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   15782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15786:	48 8b 00             	mov    (%rax),%rax
   15789:	5d                   	pop    %rbp
   1578a:	c3                   	ret
   1578b:	90                   	nop

000000000001578c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1578c:	55                   	push   %rbp
   1578d:	48 89 e5             	mov    %rsp,%rbp
   15790:	48 83 ec 10          	sub    $0x10,%rsp
   15794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1579c:	48 89 c7             	mov    %rax,%rdi
   1579f:	e8 5c 13 00 00       	call   16b00 <_ZNSaIP13VkImageView_TED1Ev>
   157a4:	90                   	nop
   157a5:	c9                   	leave
   157a6:	c3                   	ret
   157a7:	90                   	nop

00000000000157a8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   157a8:	55                   	push   %rbp
   157a9:	48 89 e5             	mov    %rsp,%rbp
   157ac:	48 83 ec 10          	sub    $0x10,%rsp
   157b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157b8:	48 89 c7             	mov    %rax,%rdi
   157bb:	e8 f2 2b 00 00       	call   183b2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   157c0:	90                   	nop
   157c1:	c9                   	leave
   157c2:	c3                   	ret
   157c3:	90                   	nop

00000000000157c4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   157c4:	55                   	push   %rbp
   157c5:	48 89 e5             	mov    %rsp,%rbp
   157c8:	48 83 ec 10          	sub    $0x10,%rsp
   157cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157d4:	48 89 c7             	mov    %rax,%rdi
   157d7:	e8 cc ff ff ff       	call   157a8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   157dc:	90                   	nop
   157dd:	c9                   	leave
   157de:	c3                   	ret
   157df:	90                   	nop

00000000000157e0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   157e0:	55                   	push   %rbp
   157e1:	48 89 e5             	mov    %rsp,%rbp
   157e4:	48 83 ec 10          	sub    $0x10,%rsp
   157e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157f0:	48 89 c7             	mov    %rax,%rdi
   157f3:	e8 30 2c 00 00       	call   18428 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   157f8:	90                   	nop
   157f9:	c9                   	leave
   157fa:	c3                   	ret
   157fb:	90                   	nop

00000000000157fc <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   157fc:	55                   	push   %rbp
   157fd:	48 89 e5             	mov    %rsp,%rbp
   15800:	48 83 ec 10          	sub    $0x10,%rsp
   15804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1580c:	48 89 c7             	mov    %rax,%rdi
   1580f:	e8 cc ff ff ff       	call   157e0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   15814:	90                   	nop
   15815:	c9                   	leave
   15816:	c3                   	ret
   15817:	90                   	nop

0000000000015818 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:

  VkShaderModule vertex;
  VkShaderModule fragment;
};

struct GraphicsPipelineWrapper {
   15818:	55                   	push   %rbp
   15819:	48 89 e5             	mov    %rsp,%rbp
   1581c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15824:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1582b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1582f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15836:	00 
   15837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1583b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15842:	00 
   15843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15847:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1584e:	00 
   1584f:	90                   	nop
   15850:	5d                   	pop    %rbp
   15851:	c3                   	ret

0000000000015852 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   15852:	55                   	push   %rbp
   15853:	48 89 e5             	mov    %rsp,%rbp
   15856:	48 83 ec 10          	sub    $0x10,%rsp
   1585a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1585e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15862:	48 89 c7             	mov    %rax,%rdi
   15865:	e8 0e 2c 00 00       	call   18478 <_ZNSaIP15VkFramebuffer_TED1Ev>
   1586a:	90                   	nop
   1586b:	c9                   	leave
   1586c:	c3                   	ret
   1586d:	90                   	nop

000000000001586e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1586e:	55                   	push   %rbp
   1586f:	48 89 e5             	mov    %rsp,%rbp
   15872:	48 83 ec 10          	sub    $0x10,%rsp
   15876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1587a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1587e:	48 89 c7             	mov    %rax,%rdi
   15881:	e8 ca 2b 00 00       	call   18450 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   15886:	90                   	nop
   15887:	c9                   	leave
   15888:	c3                   	ret
   15889:	90                   	nop

000000000001588a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   1588a:	55                   	push   %rbp
   1588b:	48 89 e5             	mov    %rsp,%rbp
   1588e:	48 83 ec 10          	sub    $0x10,%rsp
   15892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1589a:	48 89 c7             	mov    %rax,%rdi
   1589d:	e8 cc ff ff ff       	call   1586e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   158a2:	90                   	nop
   158a3:	c9                   	leave
   158a4:	c3                   	ret
   158a5:	90                   	nop

00000000000158a6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   158a6:	55                   	push   %rbp
   158a7:	48 89 e5             	mov    %rsp,%rbp
   158aa:	48 83 ec 10          	sub    $0x10,%rsp
   158ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158b6:	48 89 c7             	mov    %rax,%rdi
   158b9:	e8 68 2c 00 00       	call   18526 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
   158be:	90                   	nop
   158bf:	c9                   	leave
   158c0:	c3                   	ret
   158c1:	90                   	nop

00000000000158c2 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   158c2:	55                   	push   %rbp
   158c3:	48 89 e5             	mov    %rsp,%rbp
   158c6:	48 83 ec 10          	sub    $0x10,%rsp
   158ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158d2:	48 89 c7             	mov    %rax,%rdi
   158d5:	e8 cc ff ff ff       	call   158a6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
   158da:	90                   	nop
   158db:	c9                   	leave
   158dc:	c3                   	ret
   158dd:	90                   	nop

00000000000158de <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   158de:	55                   	push   %rbp
   158df:	48 89 e5             	mov    %rsp,%rbp
   158e2:	48 83 ec 10          	sub    $0x10,%rsp
   158e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158ee:	48 89 c7             	mov    %rax,%rdi
   158f1:	e8 64 28 00 00       	call   1815a <_ZNSaIP13VkSemaphore_TED1Ev>
   158f6:	90                   	nop
   158f7:	c9                   	leave
   158f8:	c3                   	ret
   158f9:	90                   	nop

00000000000158fa <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   158fa:	55                   	push   %rbp
   158fb:	48 89 e5             	mov    %rsp,%rbp
   158fe:	48 83 ec 10          	sub    $0x10,%rsp
   15902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1590a:	48 89 c7             	mov    %rax,%rdi
   1590d:	e8 3c 2c 00 00       	call   1854e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
   15912:	90                   	nop
   15913:	c9                   	leave
   15914:	c3                   	ret
   15915:	90                   	nop

0000000000015916 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
   15916:	55                   	push   %rbp
   15917:	48 89 e5             	mov    %rsp,%rbp
   1591a:	48 83 ec 10          	sub    $0x10,%rsp
   1591e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15926:	48 89 c7             	mov    %rax,%rdi
   15929:	e8 cc ff ff ff       	call   158fa <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
   1592e:	90                   	nop
   1592f:	c9                   	leave
   15930:	c3                   	ret
   15931:	90                   	nop

0000000000015932 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   15932:	55                   	push   %rbp
   15933:	48 89 e5             	mov    %rsp,%rbp
   15936:	48 83 ec 10          	sub    $0x10,%rsp
   1593a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1593e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15942:	48 89 c7             	mov    %rax,%rdi
   15945:	e8 a2 2c 00 00       	call   185ec <_ZNSaIP9VkFence_TED1Ev>
   1594a:	90                   	nop
   1594b:	c9                   	leave
   1594c:	c3                   	ret
   1594d:	90                   	nop

000000000001594e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1594e:	55                   	push   %rbp
   1594f:	48 89 e5             	mov    %rsp,%rbp
   15952:	48 83 ec 10          	sub    $0x10,%rsp
   15956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1595a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1595e:	48 89 c7             	mov    %rax,%rdi
   15961:	e8 5e 2c 00 00       	call   185c4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
   15966:	90                   	nop
   15967:	c9                   	leave
   15968:	c3                   	ret
   15969:	90                   	nop

000000000001596a <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
   1596a:	55                   	push   %rbp
   1596b:	48 89 e5             	mov    %rsp,%rbp
   1596e:	48 83 ec 10          	sub    $0x10,%rsp
   15972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1597a:	48 89 c7             	mov    %rax,%rdi
   1597d:	e8 cc ff ff ff       	call   1594e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
   15982:	90                   	nop
   15983:	c9                   	leave
   15984:	c3                   	ret
   15985:	90                   	nop

0000000000015986 <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffers();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 11: Synchronization and cache control */
  struct SyncWrapper {
   15986:	55                   	push   %rbp
   15987:	48 89 e5             	mov    %rsp,%rbp
   1598a:	48 83 ec 10          	sub    $0x10,%rsp
   1598e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15996:	48 89 c7             	mov    %rax,%rdi
   15999:	e8 78 ff ff ff       	call   15916 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   1599e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159a2:	48 83 c0 18          	add    $0x18,%rax
   159a6:	48 89 c7             	mov    %rax,%rdi
   159a9:	e8 68 ff ff ff       	call   15916 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
   159ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b2:	48 83 c0 30          	add    $0x30,%rax
   159b6:	48 89 c7             	mov    %rax,%rdi
   159b9:	e8 ac ff ff ff       	call   1596a <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
   159be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159c2:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   159c9:	00 
   159ca:	90                   	nop
   159cb:	c9                   	leave
   159cc:	c3                   	ret
   159cd:	90                   	nop

00000000000159ce <_ZN9VulkanApp11SyncWrapperD1Ev>:
   159ce:	55                   	push   %rbp
   159cf:	48 89 e5             	mov    %rsp,%rbp
   159d2:	48 83 ec 10          	sub    $0x10,%rsp
   159d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159de:	48 83 c0 30          	add    $0x30,%rax
   159e2:	48 89 c7             	mov    %rax,%rdi
   159e5:	e8 6c 2c 00 00       	call   18656 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
   159ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159ee:	48 83 c0 18          	add    $0x18,%rax
   159f2:	48 89 c7             	mov    %rax,%rdi
   159f5:	e8 04 28 00 00       	call   181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   159fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159fe:	48 89 c7             	mov    %rax,%rdi
   15a01:	e8 f8 27 00 00       	call   181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
   15a06:	90                   	nop
   15a07:	c9                   	leave
   15a08:	c3                   	ret
   15a09:	90                   	nop

0000000000015a0a <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   15a0a:	55                   	push   %rbp
   15a0b:	48 89 e5             	mov    %rsp,%rbp
   15a0e:	48 83 ec 10          	sub    $0x10,%rsp
   15a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a1a:	48 89 c7             	mov    %rax,%rdi
   15a1d:	e8 a0 2c 00 00       	call   186c2 <_ZNSaIP10VkBuffer_TED1Ev>
   15a22:	90                   	nop
   15a23:	c9                   	leave
   15a24:	c3                   	ret
   15a25:	90                   	nop

0000000000015a26 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   15a26:	55                   	push   %rbp
   15a27:	48 89 e5             	mov    %rsp,%rbp
   15a2a:	48 83 ec 10          	sub    $0x10,%rsp
   15a2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a36:	48 89 c7             	mov    %rax,%rdi
   15a39:	e8 5c 2c 00 00       	call   1869a <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE12_Vector_implC1Ev>
   15a3e:	90                   	nop
   15a3f:	c9                   	leave
   15a40:	c3                   	ret
   15a41:	90                   	nop

0000000000015a42 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   15a42:	55                   	push   %rbp
   15a43:	48 89 e5             	mov    %rsp,%rbp
   15a46:	48 83 ec 10          	sub    $0x10,%rsp
   15a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a52:	48 89 c7             	mov    %rax,%rdi
   15a55:	e8 cc ff ff ff       	call   15a26 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EEC1Ev>
   15a5a:	90                   	nop
   15a5b:	c9                   	leave
   15a5c:	c3                   	ret
   15a5d:	90                   	nop

0000000000015a5e <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   15a5e:	55                   	push   %rbp
   15a5f:	48 89 e5             	mov    %rsp,%rbp
   15a62:	48 83 ec 10          	sub    $0x10,%rsp
   15a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a6e:	48 89 c7             	mov    %rax,%rdi
   15a71:	e8 22 2d 00 00       	call   18798 <_ZNSaIP16VkDeviceMemory_TED1Ev>
   15a76:	90                   	nop
   15a77:	c9                   	leave
   15a78:	c3                   	ret
   15a79:	90                   	nop

0000000000015a7a <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   15a7a:	55                   	push   %rbp
   15a7b:	48 89 e5             	mov    %rsp,%rbp
   15a7e:	48 83 ec 10          	sub    $0x10,%rsp
   15a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a8a:	48 89 c7             	mov    %rax,%rdi
   15a8d:	e8 de 2c 00 00       	call   18770 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE12_Vector_implC1Ev>
   15a92:	90                   	nop
   15a93:	c9                   	leave
   15a94:	c3                   	ret
   15a95:	90                   	nop

0000000000015a96 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEC1Ev>:
      vector() = default;
   15a96:	55                   	push   %rbp
   15a97:	48 89 e5             	mov    %rsp,%rbp
   15a9a:	48 83 ec 10          	sub    $0x10,%rsp
   15a9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aa6:	48 89 c7             	mov    %rax,%rdi
   15aa9:	e8 cc ff ff ff       	call   15a7a <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EEC1Ev>
   15aae:	90                   	nop
   15aaf:	c9                   	leave
   15ab0:	c3                   	ret
   15ab1:	90                   	nop

0000000000015ab2 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   15ab2:	55                   	push   %rbp
   15ab3:	48 89 e5             	mov    %rsp,%rbp
   15ab6:	48 83 ec 10          	sub    $0x10,%rsp
   15aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ac2:	48 89 c7             	mov    %rax,%rdi
   15ac5:	e8 a4 2d 00 00       	call   1886e <_ZNSaIP17VkDescriptorSet_TED1Ev>
   15aca:	90                   	nop
   15acb:	c9                   	leave
   15acc:	c3                   	ret
   15acd:	90                   	nop

0000000000015ace <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   15ace:	55                   	push   %rbp
   15acf:	48 89 e5             	mov    %rsp,%rbp
   15ad2:	48 83 ec 10          	sub    $0x10,%rsp
   15ad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ade:	48 89 c7             	mov    %rax,%rdi
   15ae1:	e8 60 2d 00 00       	call   18846 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE12_Vector_implC1Ev>
   15ae6:	90                   	nop
   15ae7:	c9                   	leave
   15ae8:	c3                   	ret
   15ae9:	90                   	nop

0000000000015aea <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EEC1Ev>:
      vector() = default;
   15aea:	55                   	push   %rbp
   15aeb:	48 89 e5             	mov    %rsp,%rbp
   15aee:	48 83 ec 10          	sub    $0x10,%rsp
   15af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15afa:	48 89 c7             	mov    %rax,%rdi
   15afd:	e8 cc ff ff ff       	call   15ace <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EEC1Ev>
   15b02:	90                   	nop
   15b03:	c9                   	leave
   15b04:	c3                   	ret
   15b05:	90                   	nop

0000000000015b06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
   15b06:	55                   	push   %rbp
   15b07:	48 89 e5             	mov    %rsp,%rbp
   15b0a:	48 83 ec 10          	sub    $0x10,%rsp
   15b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b16:	48 89 c7             	mov    %rax,%rdi
   15b19:	e8 72 f5 fe ff       	call   5090 <_ZNSaIcED2Ev@plt>
   15b1e:	90                   	nop
   15b1f:	c9                   	leave
   15b20:	c3                   	ret

0000000000015b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>:
	{
		return vec<4, T, Q>(v1) -= v2;
	}

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v, T const & scalar)
   15b21:	55                   	push   %rbp
   15b22:	48 89 e5             	mov    %rsp,%rbp
   15b25:	53                   	push   %rbx
   15b26:	48 83 ec 28          	sub    $0x28,%rsp
   15b2a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15b2e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	{
		return vec<4, T, Q>(v) *= scalar;
   15b32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b36:	8b 08                	mov    (%rax),%ecx
   15b38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15b3c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15b40:	48 8b 00             	mov    (%rax),%rax
   15b43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   15b47:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15b4b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15b4f:	66 0f 6e c1          	movd   %ecx,%xmm0
   15b53:	48 89 c7             	mov    %rax,%rdi
   15b56:	e8 3b 30 00 00       	call   18b96 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEmLIfEERS2_T_>
   15b5b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15b5f:	48 8b 00             	mov    (%rax),%rax
   15b62:	48 89 c1             	mov    %rax,%rcx
   15b65:	48 89 d3             	mov    %rdx,%rbx
   15b68:	48 89 d0             	mov    %rdx,%rax
	}
   15b6b:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   15b70:	66 48 0f 6e c8       	movq   %rax,%xmm1
   15b75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15b79:	c9                   	leave
   15b7a:	c3                   	ret

0000000000015b7b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
   15b7b:	55                   	push   %rbp
   15b7c:	48 89 e5             	mov    %rsp,%rbp
   15b7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   15b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b87:	5d                   	pop    %rbp
   15b88:	c3                   	ret
   15b89:	90                   	nop

0000000000015b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
   15b8a:	55                   	push   %rbp
   15b8b:	48 89 e5             	mov    %rsp,%rbp
   15b8e:	53                   	push   %rbx
   15b8f:	48 83 ec 38          	sub    $0x38,%rsp
   15b93:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15b97:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15b9b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
   15b9f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15ba3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ba7:	48 89 c7             	mov    %rax,%rdi
   15baa:	e8 11 f8 fe ff       	call   53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
   15baf:	48 89 c1             	mov    %rax,%rcx
   15bb2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15bb6:	48 89 c2             	mov    %rax,%rdx
   15bb9:	48 89 ce             	mov    %rcx,%rsi
   15bbc:	48 89 df             	mov    %rbx,%rdi
   15bbf:	e8 dc f9 fe ff       	call   55a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
	if (__s == 0)
   15bc4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15bc9:	75 0f                	jne    15bda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
   15bcb:	48 8d 05 b6 09 01 00 	lea    0x109b6(%rip),%rax        # 26588 <_ZZN9VulkanApp6renderEvE11submitCount+0x26c>
   15bd2:	48 89 c7             	mov    %rax,%rdi
   15bd5:	e8 66 f7 fe ff       	call   5340 <_ZSt19__throw_logic_errorPKc@plt>
	const _CharT* __end = __s + traits_type::length(__s);
   15bda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15bde:	48 89 c7             	mov    %rax,%rdi
   15be1:	e8 72 2e ff ff       	call   8a58 <_ZNSt11char_traitsIcE6lengthEPKc>
   15be6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15bea:	48 01 d0             	add    %rdx,%rax
   15bed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
   15bf1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15bf5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   15bf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15bfd:	48 89 ce             	mov    %rcx,%rsi
   15c00:	48 89 c7             	mov    %rax,%rdi
   15c03:	e8 5e 2e 00 00       	call   18a66 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
   15c08:	eb 1a                	jmp    15c24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
   15c0a:	48 89 c3             	mov    %rax,%rbx
   15c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c11:	48 89 c7             	mov    %rax,%rdi
   15c14:	e8 ed fe ff ff       	call   15b06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
   15c19:	48 89 d8             	mov    %rbx,%rax
   15c1c:	48 89 c7             	mov    %rax,%rdi
   15c1f:	e8 dc fd fe ff       	call   5a00 <_Unwind_Resume@plt>
   15c24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15c28:	c9                   	leave
   15c29:	c3                   	ret

0000000000015c2a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   15c2a:	55                   	push   %rbp
   15c2b:	48 89 e5             	mov    %rsp,%rbp
   15c2e:	53                   	push   %rbx
   15c2f:	48 83 ec 38          	sub    $0x38,%rsp
   15c33:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15c37:	48 89 f0             	mov    %rsi,%rax
   15c3a:	48 89 d6             	mov    %rdx,%rsi
   15c3d:	48 89 f2             	mov    %rsi,%rdx
   15c40:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   15c44:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15c48:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   15c4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c50:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15c54:	48 89 d6             	mov    %rdx,%rsi
   15c57:	48 89 c7             	mov    %rax,%rdi
   15c5a:	e8 89 2f 00 00       	call   18be8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   15c5f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15c63:	48 89 c7             	mov    %rax,%rdi
   15c66:	e8 b5 2f 00 00       	call   18c20 <_ZNKSt16initializer_listIPKcE3endEv>
   15c6b:	48 89 c3             	mov    %rax,%rbx
   15c6e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15c72:	48 89 c7             	mov    %rax,%rdi
   15c75:	e8 94 2f 00 00       	call   18c0e <_ZNKSt16initializer_listIPKcE5beginEv>
   15c7a:	48 89 c1             	mov    %rax,%rcx
   15c7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c81:	48 89 da             	mov    %rbx,%rdx
   15c84:	48 89 ce             	mov    %rcx,%rsi
   15c87:	48 89 c7             	mov    %rax,%rdi
   15c8a:	e8 f7 2f 00 00       	call   18c86 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   15c8f:	eb 1a                	jmp    15cab <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   15c91:	48 89 c3             	mov    %rax,%rbx
   15c94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c98:	48 89 c7             	mov    %rax,%rdi
   15c9b:	e8 5a 50 ff ff       	call   acfa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   15ca0:	48 89 d8             	mov    %rbx,%rax
   15ca3:	48 89 c7             	mov    %rax,%rdi
   15ca6:	e8 55 fd fe ff       	call   5a00 <_Unwind_Resume@plt>
   15cab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15caf:	c9                   	leave
   15cb0:	c3                   	ret
   15cb1:	90                   	nop

0000000000015cb2 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   15cb2:	55                   	push   %rbp
   15cb3:	48 89 e5             	mov    %rsp,%rbp
   15cb6:	48 83 ec 10          	sub    $0x10,%rsp
   15cba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   15cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cc2:	48 89 c7             	mov    %rax,%rdi
   15cc5:	e8 e8 5e ff ff       	call   bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   15cca:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   15ccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cd1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15cd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cd9:	48 8b 00             	mov    (%rax),%rax
   15cdc:	48 89 ce             	mov    %rcx,%rsi
   15cdf:	48 89 c7             	mov    %rax,%rdi
   15ce2:	e8 4e 30 00 00       	call   18d35 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   15ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ceb:	48 89 c7             	mov    %rax,%rdi
   15cee:	e8 07 50 ff ff       	call   acfa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   15cf3:	90                   	nop
   15cf4:	c9                   	leave
   15cf5:	c3                   	ret

0000000000015cf6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   15cf6:	55                   	push   %rbp
   15cf7:	48 89 e5             	mov    %rsp,%rbp
   15cfa:	48 83 ec 20          	sub    $0x20,%rsp
   15cfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   15d02:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15d06:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15d0a:	48 89 d6             	mov    %rdx,%rsi
   15d0d:	48 89 c7             	mov    %rax,%rdi
   15d10:	e8 4b 30 00 00       	call   18d60 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   15d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d19:	c9                   	leave
   15d1a:	c3                   	ret
   15d1b:	90                   	nop

0000000000015d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   15d1c:	55                   	push   %rbp
   15d1d:	48 89 e5             	mov    %rsp,%rbp
   15d20:	48 83 ec 20          	sub    $0x20,%rsp
   15d24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   15d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d2c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15d30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15d34:	48 89 d6             	mov    %rdx,%rsi
   15d37:	48 89 c7             	mov    %rax,%rdi
   15d3a:	e8 21 30 00 00       	call   18d60 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   15d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d43:	c9                   	leave
   15d44:	c3                   	ret

0000000000015d45 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   15d45:	55                   	push   %rbp
   15d46:	48 89 e5             	mov    %rsp,%rbp
   15d49:	53                   	push   %rbx
   15d4a:	48 83 ec 18          	sub    $0x18,%rsp
   15d4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15d52:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   15d56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d5a:	48 89 c7             	mov    %rax,%rdi
   15d5d:	e8 1c 30 00 00       	call   18d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15d62:	48 8b 18             	mov    (%rax),%rbx
   15d65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d69:	48 89 c7             	mov    %rax,%rdi
   15d6c:	e8 0d 30 00 00       	call   18d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   15d71:	48 8b 00             	mov    (%rax),%rax
   15d74:	48 39 c3             	cmp    %rax,%rbx
   15d77:	0f 95 c0             	setne  %al
   15d7a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15d7e:	c9                   	leave
   15d7f:	c3                   	ret

0000000000015d80 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   15d80:	55                   	push   %rbp
   15d81:	48 89 e5             	mov    %rsp,%rbp
   15d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   15d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d8c:	48 8b 00             	mov    (%rax),%rax
   15d8f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d97:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   15d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   15d9e:	5d                   	pop    %rbp
   15d9f:	c3                   	ret

0000000000015da0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   15da0:	55                   	push   %rbp
   15da1:	48 89 e5             	mov    %rsp,%rbp
   15da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   15da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dac:	48 8b 00             	mov    (%rax),%rax
   15daf:	5d                   	pop    %rbp
   15db0:	c3                   	ret
   15db1:	90                   	nop

0000000000015db2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   15db2:	55                   	push   %rbp
   15db3:	48 89 e5             	mov    %rsp,%rbp
   15db6:	53                   	push   %rbx
   15db7:	48 83 ec 18          	sub    $0x18,%rsp
   15dbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15dbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   15dc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15dc7:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15dcf:	48 8b 40 10          	mov    0x10(%rax),%rax
   15dd3:	48 39 c2             	cmp    %rax,%rdx
   15dd6:	74 3c                	je     15e14 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   15dd8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15ddc:	48 89 c7             	mov    %rax,%rdi
   15ddf:	e8 a8 2f 00 00       	call   18d8c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   15de4:	48 89 c2             	mov    %rax,%rdx
   15de7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15deb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   15def:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15df3:	48 89 ce             	mov    %rcx,%rsi
   15df6:	48 89 c7             	mov    %rax,%rdi
   15df9:	e8 9c 2f 00 00       	call   18d9a <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   15dfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e02:	48 8b 40 08          	mov    0x8(%rax),%rax
   15e06:	48 8d 50 08          	lea    0x8(%rax),%rdx
   15e0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e0e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15e12:	eb 30                	jmp    15e44 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   15e14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e18:	48 89 c7             	mov    %rax,%rdi
   15e1b:	e8 6c 2f 00 00       	call   18d8c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   15e20:	48 89 c3             	mov    %rax,%rbx
   15e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e27:	48 89 c7             	mov    %rax,%rdi
   15e2a:	e8 ed fe ff ff       	call   15d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   15e2f:	48 89 c1             	mov    %rax,%rcx
   15e32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e36:	48 89 da             	mov    %rbx,%rdx
   15e39:	48 89 ce             	mov    %rcx,%rsi
   15e3c:	48 89 c7             	mov    %rax,%rdi
   15e3f:	e8 90 2f 00 00       	call   18dd4 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   15e44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e48:	48 89 c7             	mov    %rax,%rdi
   15e4b:	e8 16 31 00 00       	call   18f66 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   15e50:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15e54:	c9                   	leave
   15e55:	c3                   	ret

0000000000015e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15e56:	55                   	push   %rbp
   15e57:	48 89 e5             	mov    %rsp,%rbp
   15e5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   15e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e62:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e6a:	48 8b 00             	mov    (%rax),%rax
   15e6d:	48 29 c2             	sub    %rax,%rdx
   15e70:	48 89 d0             	mov    %rdx,%rax
   15e73:	48 c1 f8 03          	sar    $0x3,%rax
   15e77:	5d                   	pop    %rbp
   15e78:	c3                   	ret
   15e79:	90                   	nop

0000000000015e7a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   15e7a:	55                   	push   %rbp
   15e7b:	48 89 e5             	mov    %rsp,%rbp
   15e7e:	48 83 ec 10          	sub    $0x10,%rsp
   15e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   15e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e8a:	48 8b 10             	mov    (%rax),%rdx
   15e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e91:	48 89 d6             	mov    %rdx,%rsi
   15e94:	48 89 c7             	mov    %rax,%rdi
   15e97:	e8 0a 31 00 00       	call   18fa6 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   15e9c:	c9                   	leave
   15e9d:	c3                   	ret

0000000000015e9e <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   15e9e:	55                   	push   %rbp
   15e9f:	48 89 e5             	mov    %rsp,%rbp
   15ea2:	48 83 ec 10          	sub    $0x10,%rsp
   15ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   15eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15eae:	48 8b 10             	mov    (%rax),%rdx
   15eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15eb5:	48 89 d6             	mov    %rdx,%rsi
   15eb8:	48 89 c7             	mov    %rax,%rdi
   15ebb:	e8 e6 30 00 00       	call   18fa6 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   15ec0:	c9                   	leave
   15ec1:	c3                   	ret

0000000000015ec2 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15ec2:	55                   	push   %rbp
   15ec3:	48 89 e5             	mov    %rsp,%rbp
   15ec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   15eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ece:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15ed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ed6:	48 8b 00             	mov    (%rax),%rax
   15ed9:	48 29 c2             	sub    %rax,%rdx
   15edc:	48 c1 fa 02          	sar    $0x2,%rdx
   15ee0:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   15ee7:	db b6 6d 
   15eea:	48 0f af c2          	imul   %rdx,%rax
   15eee:	5d                   	pop    %rbp
   15eef:	c3                   	ret

0000000000015ef0 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   15ef0:	55                   	push   %rbp
   15ef1:	48 89 e5             	mov    %rsp,%rbp
   15ef4:	48 83 ec 10          	sub    $0x10,%rsp
   15ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   15efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f00:	48 89 c7             	mov    %rax,%rdi
   15f03:	e8 06 62 ff ff       	call   c10e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   15f08:	c9                   	leave
   15f09:	c3                   	ret

0000000000015f0a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   15f0a:	55                   	push   %rbp
   15f0b:	48 89 e5             	mov    %rsp,%rbp
   15f0e:	48 83 ec 10          	sub    $0x10,%rsp
   15f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   15f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f1a:	48 89 c7             	mov    %rax,%rdi
   15f1d:	e8 ec 61 ff ff       	call   c10e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   15f22:	84 c0                	test   %al,%al
   15f24:	74 0e                	je     15f34 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   15f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f2a:	48 89 c7             	mov    %rax,%rdi
   15f2d:	e8 ee 61 ff ff       	call   c120 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   15f32:	eb 05                	jmp    15f39 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   15f34:	e8 b6 f4 ff ff       	call   153ef <_ZSt27__throw_bad_optional_accessv>
      }
   15f39:	c9                   	leave
   15f3a:	c3                   	ret
   15f3b:	90                   	nop

0000000000015f3c <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   15f3c:	55                   	push   %rbp
   15f3d:	48 89 e5             	mov    %rsp,%rbp
   15f40:	48 83 ec 20          	sub    $0x20,%rsp
   15f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15f4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   15f50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f54:	48 89 c7             	mov    %rax,%rdi
   15f57:	e8 5c 30 00 00       	call   18fb8 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   15f5c:	8b 10                	mov    (%rax),%edx
   15f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f62:	89 10                	mov    %edx,(%rax)
   15f64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f68:	48 89 c7             	mov    %rax,%rdi
   15f6b:	e8 56 30 00 00       	call   18fc6 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   15f70:	48 89 c1             	mov    %rax,%rcx
   15f73:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   15f77:	48 8b 01             	mov    (%rcx),%rax
   15f7a:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   15f7e:	48 89 46 04          	mov    %rax,0x4(%rsi)
   15f82:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   15f86:	48 8b 41 10          	mov    0x10(%rcx),%rax
   15f8a:	48 89 46 14          	mov    %rax,0x14(%rsi)
   15f8e:	90                   	nop
   15f8f:	c9                   	leave
   15f90:	c3                   	ret
   15f91:	90                   	nop

0000000000015f92 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   15f92:	55                   	push   %rbp
   15f93:	48 89 e5             	mov    %rsp,%rbp
   15f96:	53                   	push   %rbx
   15f97:	48 83 ec 18          	sub    $0x18,%rsp
   15f9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15f9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   15fa3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   15fa7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15fab:	48 89 c7             	mov    %rax,%rdi
   15fae:	e8 21 30 00 00       	call   18fd4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   15fb3:	48 89 c6             	mov    %rax,%rsi
   15fb6:	48 89 df             	mov    %rbx,%rdi
   15fb9:	e8 4a 30 00 00       	call   19008 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   15fbe:	90                   	nop
   15fbf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15fc3:	c9                   	leave
   15fc4:	c3                   	ret
   15fc5:	90                   	nop

0000000000015fc6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   15fc6:	55                   	push   %rbp
   15fc7:	48 89 e5             	mov    %rsp,%rbp
   15fca:	48 83 ec 20          	sub    $0x20,%rsp
   15fce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   15fd2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15fd6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15fda:	48 89 d6             	mov    %rdx,%rsi
   15fdd:	48 89 c7             	mov    %rax,%rdi
   15fe0:	e8 57 30 00 00       	call   1903c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   15fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fe9:	c9                   	leave
   15fea:	c3                   	ret
   15feb:	90                   	nop

0000000000015fec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   15fec:	55                   	push   %rbp
   15fed:	48 89 e5             	mov    %rsp,%rbp
   15ff0:	48 83 ec 20          	sub    $0x20,%rsp
   15ff4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   15ff8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ffc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16000:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16004:	48 89 d6             	mov    %rdx,%rsi
   16007:	48 89 c7             	mov    %rax,%rdi
   1600a:	e8 2d 30 00 00       	call   1903c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1600f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16013:	c9                   	leave
   16014:	c3                   	ret

0000000000016015 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   16015:	55                   	push   %rbp
   16016:	48 89 e5             	mov    %rsp,%rbp
   16019:	53                   	push   %rbx
   1601a:	48 83 ec 18          	sub    $0x18,%rsp
   1601e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16022:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   16026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1602a:	48 89 c7             	mov    %rax,%rdi
   1602d:	e8 28 30 00 00       	call   1905a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   16032:	48 8b 18             	mov    (%rax),%rbx
   16035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16039:	48 89 c7             	mov    %rax,%rdi
   1603c:	e8 19 30 00 00       	call   1905a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   16041:	48 8b 00             	mov    (%rax),%rax
   16044:	48 39 c3             	cmp    %rax,%rbx
   16047:	0f 95 c0             	setne  %al
   1604a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1604e:	c9                   	leave
   1604f:	c3                   	ret

0000000000016050 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   16050:	55                   	push   %rbp
   16051:	48 89 e5             	mov    %rsp,%rbp
   16054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   16058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1605c:	48 8b 00             	mov    (%rax),%rax
   1605f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16067:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1606a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1606e:	5d                   	pop    %rbp
   1606f:	c3                   	ret

0000000000016070 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   16070:	55                   	push   %rbp
   16071:	48 89 e5             	mov    %rsp,%rbp
   16074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   16078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1607c:	48 8b 00             	mov    (%rax),%rax
   1607f:	5d                   	pop    %rbp
   16080:	c3                   	ret
   16081:	90                   	nop

0000000000016082 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   16082:	55                   	push   %rbp
   16083:	48 89 e5             	mov    %rsp,%rbp
   16086:	48 83 ec 10          	sub    $0x10,%rsp
   1608a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   1608e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16092:	48 89 c7             	mov    %rax,%rdi
   16095:	e8 f0 f5 ff ff       	call   1568a <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1609a:	c9                   	leave
   1609b:	c3                   	ret

000000000001609c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   1609c:	55                   	push   %rbp
   1609d:	48 89 e5             	mov    %rsp,%rbp
   160a0:	48 83 ec 10          	sub    $0x10,%rsp
   160a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   160a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   160ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   160b4:	48 89 d6             	mov    %rdx,%rsi
   160b7:	48 89 c7             	mov    %rax,%rdi
   160ba:	e8 a9 2f 00 00       	call   19068 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   160bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   160c3:	c9                   	leave
   160c4:	c3                   	ret
   160c5:	90                   	nop

00000000000160c6 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   160c6:	55                   	push   %rbp
   160c7:	48 89 e5             	mov    %rsp,%rbp
   160ca:	48 83 ec 10          	sub    $0x10,%rsp
   160ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   160d2:	e8 76 29 ff ff       	call   8a4d <_ZSt23__is_constant_evaluatedv>
   160d7:	84 c0                	test   %al,%al
   160d9:	74 1a                	je     160f5 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   160db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160df:	48 89 c7             	mov    %rax,%rdi
   160e2:	e8 a3 f5 ff ff       	call   1568a <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   160e7:	83 f0 01             	xor    $0x1,%eax
   160ea:	84 c0                	test   %al,%al
   160ec:	74 07                	je     160f5 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   160ee:	b8 01 00 00 00       	mov    $0x1,%eax
   160f3:	eb 05                	jmp    160fa <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   160f5:	b8 00 00 00 00       	mov    $0x0,%eax
   160fa:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   160fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16100:	48 89 c7             	mov    %rax,%rdi
   16103:	e8 f2 2f 00 00       	call   190fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   16108:	c9                   	leave
   16109:	c3                   	ret

000000000001610a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   1610a:	55                   	push   %rbp
   1610b:	48 89 e5             	mov    %rsp,%rbp
   1610e:	48 83 ec 10          	sub    $0x10,%rsp
   16112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   16116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1611a:	48 89 c7             	mov    %rax,%rdi
   1611d:	e8 e6 2f 00 00       	call   19108 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   16122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16126:	48 89 c7             	mov    %rax,%rdi
   16129:	e8 f6 2f 00 00       	call   19124 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   1612e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16132:	48 83 c0 08          	add    $0x8,%rax
   16136:	48 89 c7             	mov    %rax,%rdi
   16139:	e8 e0 f3 ff ff       	call   1551e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   1613e:	90                   	nop
   1613f:	c9                   	leave
   16140:	c3                   	ret
   16141:	90                   	nop

0000000000016142 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   16142:	55                   	push   %rbp
   16143:	48 89 e5             	mov    %rsp,%rbp
   16146:	48 83 ec 10          	sub    $0x10,%rsp
   1614a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1614e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16152:	48 89 c7             	mov    %rax,%rdi
   16155:	e8 d6 2f 00 00       	call   19130 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   1615a:	90                   	nop
   1615b:	c9                   	leave
   1615c:	c3                   	ret
   1615d:	90                   	nop

000000000001615e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   1615e:	55                   	push   %rbp
   1615f:	48 89 e5             	mov    %rsp,%rbp
   16162:	48 83 ec 10          	sub    $0x10,%rsp
   16166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   1616a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1616e:	48 89 c7             	mov    %rax,%rdi
   16171:	e8 2c 30 00 00       	call   191a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   16176:	48 89 c2             	mov    %rax,%rdx
   16179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1617d:	48 89 d6             	mov    %rdx,%rsi
   16180:	48 89 c7             	mov    %rax,%rdi
   16183:	e8 b4 2f 00 00       	call   1913c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   16188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1618c:	48 89 c7             	mov    %rax,%rdi
   1618f:	e8 08 f5 ff ff       	call   1569c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   16194:	90                   	nop
   16195:	c9                   	leave
   16196:	c3                   	ret
   16197:	90                   	nop

0000000000016198 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   16198:	55                   	push   %rbp
   16199:	48 89 e5             	mov    %rsp,%rbp
   1619c:	48 83 ec 20          	sub    $0x20,%rsp
   161a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   161a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   161a8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   161ac:	48 89 d6             	mov    %rdx,%rsi
   161af:	48 89 c7             	mov    %rax,%rdi
   161b2:	e8 05 30 00 00       	call   191bc <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   161b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161bb:	c9                   	leave
   161bc:	c3                   	ret
   161bd:	90                   	nop

00000000000161be <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   161be:	55                   	push   %rbp
   161bf:	48 89 e5             	mov    %rsp,%rbp
   161c2:	48 83 ec 20          	sub    $0x20,%rsp
   161c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   161ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161ce:	48 8d 50 08          	lea    0x8(%rax),%rdx
   161d2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   161d6:	48 89 d6             	mov    %rdx,%rsi
   161d9:	48 89 c7             	mov    %rax,%rdi
   161dc:	e8 db 2f 00 00       	call   191bc <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   161e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161e5:	c9                   	leave
   161e6:	c3                   	ret

00000000000161e7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   161e7:	55                   	push   %rbp
   161e8:	48 89 e5             	mov    %rsp,%rbp
   161eb:	53                   	push   %rbx
   161ec:	48 83 ec 18          	sub    $0x18,%rsp
   161f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   161f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   161f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161fc:	48 89 c7             	mov    %rax,%rdi
   161ff:	e8 d6 2f 00 00       	call   191da <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   16204:	48 8b 18             	mov    (%rax),%rbx
   16207:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1620b:	48 89 c7             	mov    %rax,%rdi
   1620e:	e8 c7 2f 00 00       	call   191da <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   16213:	48 8b 00             	mov    (%rax),%rax
   16216:	48 39 c3             	cmp    %rax,%rbx
   16219:	0f 95 c0             	setne  %al
   1621c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16220:	c9                   	leave
   16221:	c3                   	ret

0000000000016222 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   16222:	55                   	push   %rbp
   16223:	48 89 e5             	mov    %rsp,%rbp
   16226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1622a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1622e:	48 8b 00             	mov    (%rax),%rax
   16231:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   16238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1623c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1623f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   16243:	5d                   	pop    %rbp
   16244:	c3                   	ret
   16245:	90                   	nop

0000000000016246 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   16246:	55                   	push   %rbp
   16247:	48 89 e5             	mov    %rsp,%rbp
   1624a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1624e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16252:	48 8b 00             	mov    (%rax),%rax
   16255:	5d                   	pop    %rbp
   16256:	c3                   	ret
   16257:	90                   	nop

0000000000016258 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   16258:	55                   	push   %rbp
   16259:	48 89 e5             	mov    %rsp,%rbp
   1625c:	53                   	push   %rbx
   1625d:	48 83 ec 48          	sub    $0x48,%rsp
   16261:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   16265:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   16269:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1626d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16271:	48 89 d6             	mov    %rdx,%rsi
   16274:	48 89 c7             	mov    %rax,%rdi
   16277:	e8 6c 2f 00 00       	call   191e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   1627c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   16280:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16284:	48 89 c7             	mov    %rax,%rdi
   16287:	e8 82 2f 00 00       	call   1920e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   1628c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16290:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   16294:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   16298:	48 89 d6             	mov    %rdx,%rsi
   1629b:	48 89 c7             	mov    %rax,%rdi
   1629e:	e8 85 2f 00 00       	call   19228 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   162a3:	84 c0                	test   %al,%al
   162a5:	75 32                	jne    162d9 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   162a7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   162ab:	48 89 c7             	mov    %rax,%rdi
   162ae:	e8 97 2f 00 00       	call   1924a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   162b3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   162b7:	48 89 c7             	mov    %rax,%rdi
   162ba:	e8 a7 2f 00 00       	call   19266 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   162bf:	48 89 c2             	mov    %rax,%rdx
   162c2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   162c6:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   162ca:	48 89 ce             	mov    %rcx,%rsi
   162cd:	48 89 c7             	mov    %rax,%rdi
   162d0:	e8 af 2f 00 00       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   162d5:	84 c0                	test   %al,%al
   162d7:	74 07                	je     162e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   162d9:	b8 01 00 00 00       	mov    $0x1,%eax
   162de:	eb 05                	jmp    162e5 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   162e0:	b8 00 00 00 00       	mov    $0x0,%eax
   162e5:	84 c0                	test   %al,%al
   162e7:	74 5d                	je     16346 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   162e9:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   162ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   162f1:	48 89 c7             	mov    %rax,%rdi
   162f4:	e8 82 f8 ff ff       	call   15b7b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   162f9:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   162fc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   16300:	48 89 d6             	mov    %rdx,%rsi
   16303:	48 89 c7             	mov    %rax,%rdi
   16306:	e8 a2 2f 00 00       	call   192ad <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   1630b:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   1630f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   16313:	48 89 d6             	mov    %rdx,%rsi
   16316:	48 89 c7             	mov    %rax,%rdi
   16319:	e8 c4 2f 00 00       	call   192e2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   1631e:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   16322:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   16326:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1632a:	49 89 c8             	mov    %rcx,%r8
   1632d:	48 89 d1             	mov    %rdx,%rcx
   16330:	48 8d 15 3a f7 00 00 	lea    0xf73a(%rip),%rdx        # 25a71 <_ZSt19piecewise_construct>
   16337:	48 89 c6             	mov    %rax,%rsi
   1633a:	48 89 df             	mov    %rbx,%rdi
   1633d:	e8 be 2f 00 00       	call   19300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   16342:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   16346:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1634a:	48 89 c7             	mov    %rax,%rdi
   1634d:	e8 14 2f 00 00       	call   19266 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   16352:	48 83 c0 20          	add    $0x20,%rax
      }
   16356:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1635a:	c9                   	leave
   1635b:	c3                   	ret

000000000001635c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   1635c:	55                   	push   %rbp
   1635d:	48 89 e5             	mov    %rsp,%rbp
   16360:	48 83 ec 20          	sub    $0x20,%rsp
   16364:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   16368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1636c:	48 89 c7             	mov    %rax,%rdi
   1636f:	e8 ae 30 00 00       	call   19422 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   16374:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   16378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1637c:	48 89 c7             	mov    %rax,%rdi
   1637f:	e8 78 30 00 00       	call   193fc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   16384:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   16388:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1638c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16390:	48 89 d6             	mov    %rdx,%rsi
   16393:	48 89 c7             	mov    %rax,%rdi
   16396:	e8 b0 30 00 00       	call   1944b <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   1639b:	c9                   	leave
   1639c:	c3                   	ret
   1639d:	90                   	nop

000000000001639e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1639e:	55                   	push   %rbp
   1639f:	48 89 e5             	mov    %rsp,%rbp
   163a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   163aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163ae:	48 8b 00             	mov    (%rax),%rax
   163b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   163b5:	48 c1 e2 03          	shl    $0x3,%rdx
   163b9:	48 01 d0             	add    %rdx,%rax
      }
   163bc:	5d                   	pop    %rbp
   163bd:	c3                   	ret

00000000000163be <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   163be:	55                   	push   %rbp
   163bf:	48 89 e5             	mov    %rsp,%rbp
   163c2:	48 83 ec 20          	sub    $0x20,%rsp
   163c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   163ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   163ce:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   163d2:	48 89 d6             	mov    %rdx,%rsi
   163d5:	48 89 c7             	mov    %rax,%rdi
   163d8:	e8 a9 30 00 00       	call   19486 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   163dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163e1:	c9                   	leave
   163e2:	c3                   	ret
   163e3:	90                   	nop

00000000000163e4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   163e4:	55                   	push   %rbp
   163e5:	48 89 e5             	mov    %rsp,%rbp
   163e8:	48 83 ec 20          	sub    $0x20,%rsp
   163ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   163f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163f4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   163f8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   163fc:	48 89 d6             	mov    %rdx,%rsi
   163ff:	48 89 c7             	mov    %rax,%rdi
   16402:	e8 7f 30 00 00       	call   19486 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   16407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1640b:	c9                   	leave
   1640c:	c3                   	ret

000000000001640d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1640d:	55                   	push   %rbp
   1640e:	48 89 e5             	mov    %rsp,%rbp
   16411:	53                   	push   %rbx
   16412:	48 83 ec 18          	sub    $0x18,%rsp
   16416:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1641a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1641e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16422:	48 89 c7             	mov    %rax,%rdi
   16425:	e8 7a 30 00 00       	call   194a4 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1642a:	48 8b 18             	mov    (%rax),%rbx
   1642d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16431:	48 89 c7             	mov    %rax,%rdi
   16434:	e8 6b 30 00 00       	call   194a4 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   16439:	48 8b 00             	mov    (%rax),%rax
   1643c:	48 39 c3             	cmp    %rax,%rbx
   1643f:	0f 95 c0             	setne  %al
   16442:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16446:	c9                   	leave
   16447:	c3                   	ret

0000000000016448 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   16448:	55                   	push   %rbp
   16449:	48 89 e5             	mov    %rsp,%rbp
   1644c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   16450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16454:	48 8b 00             	mov    (%rax),%rax
   16457:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1645b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1645f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   16462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   16466:	5d                   	pop    %rbp
   16467:	c3                   	ret

0000000000016468 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   16468:	55                   	push   %rbp
   16469:	48 89 e5             	mov    %rsp,%rbp
   1646c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   16470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16474:	48 8b 00             	mov    (%rax),%rax
   16477:	5d                   	pop    %rbp
   16478:	c3                   	ret
   16479:	90                   	nop

000000000001647a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1647a:	55                   	push   %rbp
   1647b:	48 89 e5             	mov    %rsp,%rbp
   1647e:	48 83 ec 20          	sub    $0x20,%rsp
   16482:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   16486:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1648a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1648e:	48 89 d6             	mov    %rdx,%rsi
   16491:	48 89 c7             	mov    %rax,%rdi
   16494:	e8 19 30 00 00       	call   194b2 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   16499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1649d:	c9                   	leave
   1649e:	c3                   	ret
   1649f:	90                   	nop

00000000000164a0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   164a0:	55                   	push   %rbp
   164a1:	48 89 e5             	mov    %rsp,%rbp
   164a4:	48 83 ec 20          	sub    $0x20,%rsp
   164a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   164ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   164b4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   164b8:	48 89 d6             	mov    %rdx,%rsi
   164bb:	48 89 c7             	mov    %rax,%rdi
   164be:	e8 ef 2f 00 00       	call   194b2 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   164c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164c7:	c9                   	leave
   164c8:	c3                   	ret

00000000000164c9 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   164c9:	55                   	push   %rbp
   164ca:	48 89 e5             	mov    %rsp,%rbp
   164cd:	53                   	push   %rbx
   164ce:	48 83 ec 18          	sub    $0x18,%rsp
   164d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   164d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   164da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164de:	48 89 c7             	mov    %rax,%rdi
   164e1:	e8 ea 2f 00 00       	call   194d0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   164e6:	48 8b 18             	mov    (%rax),%rbx
   164e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164ed:	48 89 c7             	mov    %rax,%rdi
   164f0:	e8 db 2f 00 00       	call   194d0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   164f5:	48 8b 00             	mov    (%rax),%rax
   164f8:	48 39 c3             	cmp    %rax,%rbx
   164fb:	0f 95 c0             	setne  %al
   164fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16502:	c9                   	leave
   16503:	c3                   	ret

0000000000016504 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   16504:	55                   	push   %rbp
   16505:	48 89 e5             	mov    %rsp,%rbp
   16508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1650c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16510:	48 8b 00             	mov    (%rax),%rax
   16513:	48 8d 50 04          	lea    0x4(%rax),%rdx
   16517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1651b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1651e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   16522:	5d                   	pop    %rbp
   16523:	c3                   	ret

0000000000016524 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   16524:	55                   	push   %rbp
   16525:	48 89 e5             	mov    %rsp,%rbp
   16528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1652c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16530:	48 8b 00             	mov    (%rax),%rax
   16533:	5d                   	pop    %rbp
   16534:	c3                   	ret
   16535:	90                   	nop

0000000000016536 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   16536:	55                   	push   %rbp
   16537:	48 89 e5             	mov    %rsp,%rbp
   1653a:	48 83 ec 20          	sub    $0x20,%rsp
   1653e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16542:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   16546:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   1654a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1654e:	48 89 c7             	mov    %rax,%rdi
   16551:	e8 88 2f 00 00       	call   194de <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   16556:	48 89 c2             	mov    %rax,%rdx
   16559:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1655d:	48 89 d6             	mov    %rdx,%rsi
   16560:	48 89 c7             	mov    %rax,%rdi
   16563:	e8 84 2f 00 00       	call   194ec <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   16568:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1656c:	c9                   	leave
   1656d:	c3                   	ret

000000000001656e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1656e:	55                   	push   %rbp
   1656f:	48 89 e5             	mov    %rsp,%rbp
   16572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1657a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1657e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16582:	48 8b 00             	mov    (%rax),%rax
   16585:	48 29 c2             	sub    %rax,%rdx
   16588:	48 89 d0             	mov    %rdx,%rax
   1658b:	48 c1 f8 03          	sar    $0x3,%rax
   1658f:	5d                   	pop    %rbp
   16590:	c3                   	ret
   16591:	90                   	nop

0000000000016592 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   16592:	55                   	push   %rbp
   16593:	48 89 e5             	mov    %rsp,%rbp
   16596:	48 83 ec 10          	sub    $0x10,%rsp
   1659a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1659e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   165a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165a6:	48 89 c7             	mov    %rax,%rdi
   165a9:	e8 8c 04 00 00       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   165ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   165b2:	0f 92 c0             	setb   %al
   165b5:	84 c0                	test   %al,%al
   165b7:	74 24                	je     165dd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   165b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165bd:	48 89 c7             	mov    %rax,%rdi
   165c0:	e8 75 04 00 00       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   165c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   165c9:	48 29 c2             	sub    %rax,%rdx
   165cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165d0:	48 89 d6             	mov    %rdx,%rsi
   165d3:	48 89 c7             	mov    %rax,%rdi
   165d6:	e8 b3 2f 00 00       	call   1958e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   165db:	eb 38                	jmp    16615 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   165dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165e1:	48 89 c7             	mov    %rax,%rdi
   165e4:	e8 51 04 00 00       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   165e9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   165ed:	0f 92 c0             	setb   %al
   165f0:	84 c0                	test   %al,%al
   165f2:	74 21                	je     16615 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   165f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165f8:	48 8b 00             	mov    (%rax),%rax
   165fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   165ff:	48 c1 e2 03          	shl    $0x3,%rdx
   16603:	48 01 c2             	add    %rax,%rdx
   16606:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1660a:	48 89 d6             	mov    %rdx,%rsi
   1660d:	48 89 c7             	mov    %rax,%rdi
   16610:	e8 83 31 00 00       	call   19798 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   16615:	90                   	nop
   16616:	c9                   	leave
   16617:	c3                   	ret

0000000000016618 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   16618:	55                   	push   %rbp
   16619:	48 89 e5             	mov    %rsp,%rbp
   1661c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16620:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   16624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16628:	48 8b 00             	mov    (%rax),%rax
   1662b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1662f:	48 c1 e2 03          	shl    $0x3,%rdx
   16633:	48 01 d0             	add    %rdx,%rax
      }
   16636:	5d                   	pop    %rbp
   16637:	c3                   	ret

0000000000016638 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   16638:	55                   	push   %rbp
   16639:	48 89 e5             	mov    %rsp,%rbp
   1663c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16640:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   16644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16648:	48 8b 00             	mov    (%rax),%rax
   1664b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1664f:	48 c1 e2 03          	shl    $0x3,%rdx
   16653:	48 01 d0             	add    %rdx,%rax
      }
   16656:	5d                   	pop    %rbp
   16657:	c3                   	ret

0000000000016658 <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE21getBindingDescriptionEv>:
  PosVecType position;
  ColorVecType color;

  static constexpr size_t attributeCount = 2;

  static VkVertexInputBindingDescription getBindingDescription() {
   16658:	55                   	push   %rbp
   16659:	48 89 e5             	mov    %rsp,%rbp
    VkVertexInputBindingDescription bindingDescription{};
   1665c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   16663:	00 
   16664:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    bindingDescription.binding = 0;
   1666b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    bindingDescription.stride = sizeof(Vertex);
   16672:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
    bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   16679:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    return bindingDescription;
   16680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16684:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   16688:	8b 45 f0             	mov    -0x10(%rbp),%eax
   1668b:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1668e:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   16692:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   16695:	48 89 ca             	mov    %rcx,%rdx
  }
   16698:	5d                   	pop    %rbp
   16699:	c3                   	ret

000000000001669a <_ZN3vkh6VertexILNS_11PositionDimE0ELNS_8ColorDimE0EE24getAttributeDescriptionsEv>:

  static std::array<VkVertexInputAttributeDescription, attributeCount>
  getAttributeDescriptions() {
   1669a:	55                   	push   %rbp
   1669b:	48 89 e5             	mov    %rsp,%rbp
   1669e:	48 83 ec 10          	sub    $0x10,%rsp
   166a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    std::array<VkVertexInputAttributeDescription, attributeCount>
        attributeDescriptions{};
   166a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166aa:	66 0f ef c0          	pxor   %xmm0,%xmm0
   166ae:	0f 11 00             	movups %xmm0,(%rax)
   166b1:	0f 11 40 10          	movups %xmm0,0x10(%rax)

    attributeDescriptions[0].binding = 0;
   166b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166b9:	be 00 00 00 00       	mov    $0x0,%esi
   166be:	48 89 c7             	mov    %rax,%rdi
   166c1:	e8 32 31 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   166c6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[0].location = 0;
   166cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166d1:	be 00 00 00 00       	mov    $0x0,%esi
   166d6:	48 89 c7             	mov    %rax,%rdi
   166d9:	e8 1a 31 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   166de:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   166e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166e8:	be 00 00 00 00       	mov    $0x0,%esi
   166ed:	48 89 c7             	mov    %rax,%rdi
   166f0:	e8 03 31 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   166f5:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    attributeDescriptions[0].offset = offsetof(Vertex, position);
   166fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16700:	be 00 00 00 00       	mov    $0x0,%esi
   16705:	48 89 c7             	mov    %rax,%rdi
   16708:	e8 eb 30 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1670d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

    attributeDescriptions[1].binding = 0;
   16714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16718:	be 01 00 00 00       	mov    $0x1,%esi
   1671d:	48 89 c7             	mov    %rax,%rdi
   16720:	e8 d3 30 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   16725:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    attributeDescriptions[1].location = 1;
   1672c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16730:	be 01 00 00 00       	mov    $0x1,%esi
   16735:	48 89 c7             	mov    %rax,%rdi
   16738:	e8 bb 30 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1673d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   16743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16747:	be 01 00 00 00       	mov    $0x1,%esi
   1674c:	48 89 c7             	mov    %rax,%rdi
   1674f:	e8 a4 30 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   16754:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
    attributeDescriptions[1].offset = offsetof(Vertex, color);
   1675b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1675f:	be 01 00 00 00       	mov    $0x1,%esi
   16764:	48 89 c7             	mov    %rax,%rdi
   16767:	e8 8c 30 00 00       	call   197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1676c:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

    return attributeDescriptions;
   16773:	90                   	nop
  }
   16774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16778:	c9                   	leave
   16779:	c3                   	ret

000000000001677a <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
   1677a:	55                   	push   %rbp
   1677b:	48 89 e5             	mov    %rsp,%rbp
   1677e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16782:	b8 02 00 00 00       	mov    $0x2,%eax
   16787:	5d                   	pop    %rbp
   16788:	c3                   	ret
   16789:	90                   	nop

000000000001678a <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1678a:	55                   	push   %rbp
   1678b:	48 89 e5             	mov    %rsp,%rbp
   1678e:	48 83 ec 10          	sub    $0x10,%rsp
   16792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1679a:	48 89 c7             	mov    %rax,%rdi
   1679d:	e8 7c 30 00 00       	call   1981e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   167a2:	90                   	nop
   167a3:	c9                   	leave
   167a4:	c3                   	ret
   167a5:	90                   	nop

00000000000167a6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   167a6:	55                   	push   %rbp
   167a7:	48 89 e5             	mov    %rsp,%rbp
   167aa:	48 83 ec 10          	sub    $0x10,%rsp
   167ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167b6:	48 89 c7             	mov    %rax,%rdi
   167b9:	e8 6c 30 00 00       	call   1982a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   167be:	90                   	nop
   167bf:	c9                   	leave
   167c0:	c3                   	ret
   167c1:	90                   	nop

00000000000167c2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   167c2:	55                   	push   %rbp
   167c3:	48 89 e5             	mov    %rsp,%rbp
   167c6:	53                   	push   %rbx
   167c7:	48 83 ec 38          	sub    $0x38,%rsp
   167cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   167cf:	48 89 f0             	mov    %rsi,%rax
   167d2:	48 89 d6             	mov    %rdx,%rsi
   167d5:	48 89 f2             	mov    %rsi,%rdx
   167d8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   167dc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   167e0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   167e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167e8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   167ec:	48 89 d6             	mov    %rdx,%rsi
   167ef:	48 89 c7             	mov    %rax,%rdi
   167f2:	e8 5b 30 00 00       	call   19852 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   167f7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   167fb:	48 89 c7             	mov    %rax,%rdi
   167fe:	e8 df 30 00 00       	call   198e2 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   16803:	48 89 c3             	mov    %rax,%rbx
   16806:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1680a:	48 89 c7             	mov    %rax,%rdi
   1680d:	e8 be 30 00 00       	call   198d0 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   16812:	48 89 c1             	mov    %rax,%rcx
   16815:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16819:	48 89 da             	mov    %rbx,%rdx
   1681c:	48 89 ce             	mov    %rcx,%rsi
   1681f:	48 89 c7             	mov    %rax,%rdi
   16822:	e8 2f 31 00 00       	call   19956 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   16827:	eb 1a                	jmp    16843 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   16829:	48 89 c3             	mov    %rax,%rbx
   1682c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16830:	48 89 c7             	mov    %rax,%rdi
   16833:	e8 40 30 00 00       	call   19878 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   16838:	48 89 d8             	mov    %rbx,%rax
   1683b:	48 89 c7             	mov    %rax,%rdi
   1683e:	e8 bd f1 fe ff       	call   5a00 <_Unwind_Resume@plt>
   16843:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16847:	c9                   	leave
   16848:	c3                   	ret
   16849:	90                   	nop

000000000001684a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1684a:	55                   	push   %rbp
   1684b:	48 89 e5             	mov    %rsp,%rbp
   1684e:	48 83 ec 10          	sub    $0x10,%rsp
   16852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   16856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1685a:	48 89 c7             	mov    %rax,%rdi
   1685d:	e8 ae 31 00 00       	call   19a10 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   16862:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   16865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16869:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1686d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16871:	48 8b 00             	mov    (%rax),%rax
   16874:	48 89 ce             	mov    %rcx,%rsi
   16877:	48 89 c7             	mov    %rax,%rdi
   1687a:	e8 9f 31 00 00       	call   19a1e <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   1687f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16883:	48 89 c7             	mov    %rax,%rdi
   16886:	e8 ed 2f 00 00       	call   19878 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   1688b:	90                   	nop
   1688c:	c9                   	leave
   1688d:	c3                   	ret

000000000001688e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1688e:	55                   	push   %rbp
   1688f:	48 89 e5             	mov    %rsp,%rbp
   16892:	48 83 ec 10          	sub    $0x10,%rsp
   16896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1689a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1689e:	48 89 c7             	mov    %rax,%rdi
   168a1:	e8 ec 31 00 00       	call   19a92 <_ZNSaIP12VkPipeline_TED1Ev>
   168a6:	90                   	nop
   168a7:	c9                   	leave
   168a8:	c3                   	ret

00000000000168a9 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   168a9:	55                   	push   %rbp
   168aa:	48 89 e5             	mov    %rsp,%rbp
   168ad:	41 54                	push   %r12
   168af:	53                   	push   %rbx
   168b0:	48 83 ec 40          	sub    $0x40,%rsp
   168b4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   168b8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   168bc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   168c0:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   168c4:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   168c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   168cc:	48 89 c7             	mov    %rax,%rdi
   168cf:	e8 74 31 00 00       	call   19a48 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   168d4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   168d7:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   168da:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   168de:	48 89 c7             	mov    %rax,%rdi
   168e1:	e8 90 31 00 00       	call   19a76 <_ZNSaIP12VkPipeline_TEC1Ev>
   168e6:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   168ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168ee:	48 89 de             	mov    %rbx,%rsi
   168f1:	48 89 c7             	mov    %rax,%rdi
   168f4:	e8 b5 31 00 00       	call   19aae <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   168f9:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   168fd:	48 89 c7             	mov    %rax,%rdi
   16900:	e8 8d 31 00 00       	call   19a92 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   16905:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16909:	48 89 c7             	mov    %rax,%rdi
   1690c:	e8 37 32 00 00       	call   19b48 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   16911:	48 89 c3             	mov    %rax,%rbx
   16914:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16918:	48 89 c7             	mov    %rax,%rdi
   1691b:	e8 04 32 00 00       	call   19b24 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   16920:	48 89 c1             	mov    %rax,%rcx
   16923:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   16927:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1692a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1692e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16932:	49 89 d9             	mov    %rbx,%r9
   16935:	49 89 f8             	mov    %rdi,%r8
   16938:	48 89 c7             	mov    %rax,%rdi
   1693b:	e8 d0 e8 fe ff       	call   5210 <vkCreateGraphicsPipelines@plt>
   16940:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   16943:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   16947:	74 7f                	je     169c8 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   16949:	bf 10 00 00 00       	mov    $0x10,%edi
   1694e:	e8 cd e8 fe ff       	call   5220 <__cxa_allocate_exception@plt>
   16953:	48 89 c3             	mov    %rax,%rbx
   16956:	48 8d 05 5d fc 00 00 	lea    0xfc5d(%rip),%rax        # 265ba <_ZZN9VulkanApp6renderEvE11submitCount+0x29e>
   1695d:	48 89 c6             	mov    %rax,%rsi
   16960:	48 89 df             	mov    %rbx,%rdi
   16963:	e8 08 e8 fe ff       	call   5170 <_ZNSt13runtime_errorC1EPKc@plt>
   16968:	48 8b 05 51 26 02 00 	mov    0x22651(%rip),%rax        # 38fc0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1696f:	48 89 c2             	mov    %rax,%rdx
   16972:	48 8d 05 c7 23 02 00 	lea    0x223c7(%rip),%rax        # 38d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   16979:	48 89 c6             	mov    %rax,%rsi
   1697c:	48 89 df             	mov    %rbx,%rdi
   1697f:	e8 0c f0 fe ff       	call   5990 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   16984:	48 89 c3             	mov    %rax,%rbx
   16987:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   1698b:	48 89 c7             	mov    %rax,%rdi
   1698e:	e8 ff 30 00 00       	call   19a92 <_ZNSaIP12VkPipeline_TED1Ev>
   16993:	48 89 d8             	mov    %rbx,%rax
   16996:	48 89 c7             	mov    %rax,%rdi
   16999:	e8 62 f0 fe ff       	call   5a00 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   1699e:	49 89 c4             	mov    %rax,%r12
   169a1:	48 89 df             	mov    %rbx,%rdi
   169a4:	e8 a7 e9 fe ff       	call   5350 <__cxa_free_exception@plt>
   169a9:	4c 89 e3             	mov    %r12,%rbx
   169ac:	eb 03                	jmp    169b1 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   169ae:	48 89 c3             	mov    %rax,%rbx
   169b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   169b5:	48 89 c7             	mov    %rax,%rdi
   169b8:	e8 19 00 00 00       	call   169d6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   169bd:	48 89 d8             	mov    %rbx,%rax
   169c0:	48 89 c7             	mov    %rax,%rdi
   169c3:	e8 38 f0 fe ff       	call   5a00 <_Unwind_Resume@plt>
  return pipelines;
   169c8:	90                   	nop
}
   169c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   169cd:	48 83 c4 40          	add    $0x40,%rsp
   169d1:	5b                   	pop    %rbx
   169d2:	41 5c                	pop    %r12
   169d4:	5d                   	pop    %rbp
   169d5:	c3                   	ret

00000000000169d6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   169d6:	55                   	push   %rbp
   169d7:	48 89 e5             	mov    %rsp,%rbp
   169da:	48 83 ec 10          	sub    $0x10,%rsp
   169de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   169e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169e6:	48 89 c7             	mov    %rax,%rdi
   169e9:	e8 cc 31 00 00       	call   19bba <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   169ee:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   169f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169f5:	48 8b 48 08          	mov    0x8(%rax),%rcx
   169f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169fd:	48 8b 00             	mov    (%rax),%rax
   16a00:	48 89 ce             	mov    %rcx,%rsi
   16a03:	48 89 c7             	mov    %rax,%rdi
   16a06:	e8 bd 31 00 00       	call   19bc8 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   16a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a0f:	48 89 c7             	mov    %rax,%rdi
   16a12:	e8 55 31 00 00       	call   19b6c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   16a17:	90                   	nop
   16a18:	c9                   	leave
   16a19:	c3                   	ret

0000000000016a1a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   16a1a:	55                   	push   %rbp
   16a1b:	48 89 e5             	mov    %rsp,%rbp
   16a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   16a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a2a:	48 8b 00             	mov    (%rax),%rax
   16a2d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16a31:	48 c1 e2 03          	shl    $0x3,%rdx
   16a35:	48 01 d0             	add    %rdx,%rax
      }
   16a38:	5d                   	pop    %rbp
   16a39:	c3                   	ret

0000000000016a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16a3a:	55                   	push   %rbp
   16a3b:	48 89 e5             	mov    %rsp,%rbp
   16a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a46:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a4e:	48 8b 00             	mov    (%rax),%rax
   16a51:	48 29 c2             	sub    %rax,%rdx
   16a54:	48 89 d0             	mov    %rdx,%rax
   16a57:	48 c1 f8 03          	sar    $0x3,%rax
   16a5b:	5d                   	pop    %rbp
   16a5c:	c3                   	ret
   16a5d:	90                   	nop

0000000000016a5e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   16a5e:	55                   	push   %rbp
   16a5f:	48 89 e5             	mov    %rsp,%rbp
   16a62:	48 83 ec 10          	sub    $0x10,%rsp
   16a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   16a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a72:	48 89 c7             	mov    %rax,%rdi
   16a75:	e8 78 31 00 00       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   16a7a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16a7e:	0f 92 c0             	setb   %al
   16a81:	84 c0                	test   %al,%al
   16a83:	74 24                	je     16aa9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   16a85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a89:	48 89 c7             	mov    %rax,%rdi
   16a8c:	e8 61 31 00 00       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   16a91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16a95:	48 29 c2             	sub    %rax,%rdx
   16a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a9c:	48 89 d6             	mov    %rdx,%rsi
   16a9f:	48 89 c7             	mov    %rax,%rdi
   16aa2:	e8 6f 31 00 00       	call   19c16 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   16aa7:	eb 38                	jmp    16ae1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   16aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aad:	48 89 c7             	mov    %rax,%rdi
   16ab0:	e8 3d 31 00 00       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   16ab5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   16ab9:	0f 92 c0             	setb   %al
   16abc:	84 c0                	test   %al,%al
   16abe:	74 21                	je     16ae1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   16ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ac4:	48 8b 00             	mov    (%rax),%rax
   16ac7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16acb:	48 c1 e2 03          	shl    $0x3,%rdx
   16acf:	48 01 c2             	add    %rax,%rdx
   16ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ad6:	48 89 d6             	mov    %rdx,%rsi
   16ad9:	48 89 c7             	mov    %rax,%rdi
   16adc:	e8 3f 33 00 00       	call   19e20 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   16ae1:	90                   	nop
   16ae2:	c9                   	leave
   16ae3:	c3                   	ret

0000000000016ae4 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   16ae4:	55                   	push   %rbp
   16ae5:	48 89 e5             	mov    %rsp,%rbp
   16ae8:	48 83 ec 10          	sub    $0x10,%rsp
   16aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16af4:	48 89 c7             	mov    %rax,%rdi
   16af7:	e8 84 33 00 00       	call   19e80 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   16afc:	90                   	nop
   16afd:	c9                   	leave
   16afe:	c3                   	ret
   16aff:	90                   	nop

0000000000016b00 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   16b00:	55                   	push   %rbp
   16b01:	48 89 e5             	mov    %rsp,%rbp
   16b04:	48 83 ec 10          	sub    $0x10,%rsp
   16b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b10:	48 89 c7             	mov    %rax,%rdi
   16b13:	e8 74 33 00 00       	call   19e8c <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   16b18:	90                   	nop
   16b19:	c9                   	leave
   16b1a:	c3                   	ret
   16b1b:	90                   	nop

0000000000016b1c <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   16b1c:	55                   	push   %rbp
   16b1d:	48 89 e5             	mov    %rsp,%rbp
   16b20:	53                   	push   %rbx
   16b21:	48 83 ec 38          	sub    $0x38,%rsp
   16b25:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16b29:	48 89 f0             	mov    %rsi,%rax
   16b2c:	48 89 d6             	mov    %rdx,%rsi
   16b2f:	48 89 f2             	mov    %rsi,%rdx
   16b32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   16b36:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16b3a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   16b3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b42:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16b46:	48 89 d6             	mov    %rdx,%rsi
   16b49:	48 89 c7             	mov    %rax,%rdi
   16b4c:	e8 47 33 00 00       	call   19e98 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   16b51:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   16b55:	48 89 c7             	mov    %rax,%rdi
   16b58:	e8 73 33 00 00       	call   19ed0 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   16b5d:	48 89 c3             	mov    %rax,%rbx
   16b60:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   16b64:	48 89 c7             	mov    %rax,%rdi
   16b67:	e8 52 33 00 00       	call   19ebe <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   16b6c:	48 89 c1             	mov    %rax,%rcx
   16b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b73:	48 89 da             	mov    %rbx,%rdx
   16b76:	48 89 ce             	mov    %rcx,%rsi
   16b79:	48 89 c7             	mov    %rax,%rdi
   16b7c:	e8 b5 33 00 00       	call   19f36 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   16b81:	eb 1a                	jmp    16b9d <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   16b83:	48 89 c3             	mov    %rax,%rbx
   16b86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b8a:	48 89 c7             	mov    %rax,%rdi
   16b8d:	e8 48 18 00 00       	call   183da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   16b92:	48 89 d8             	mov    %rbx,%rax
   16b95:	48 89 c7             	mov    %rax,%rdi
   16b98:	e8 63 ee fe ff       	call   5a00 <_Unwind_Resume@plt>
   16b9d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16ba1:	c9                   	leave
   16ba2:	c3                   	ret
   16ba3:	90                   	nop

0000000000016ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   16ba4:	55                   	push   %rbp
   16ba5:	48 89 e5             	mov    %rsp,%rbp
   16ba8:	48 83 ec 10          	sub    $0x10,%rsp
   16bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   16bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bb4:	48 89 c7             	mov    %rax,%rdi
   16bb7:	e8 2a 34 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   16bbc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   16bbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bc3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   16bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bcb:	48 8b 00             	mov    (%rax),%rax
   16bce:	48 89 ce             	mov    %rcx,%rsi
   16bd1:	48 89 c7             	mov    %rax,%rdi
   16bd4:	e8 1b 34 00 00       	call   19ff4 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   16bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bdd:	48 89 c7             	mov    %rax,%rdi
   16be0:	e8 f5 17 00 00       	call   183da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   16be5:	90                   	nop
   16be6:	c9                   	leave
   16be7:	c3                   	ret

0000000000016be8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   16be8:	55                   	push   %rbp
   16be9:	48 89 e5             	mov    %rsp,%rbp
   16bec:	48 83 ec 10          	sub    $0x10,%rsp
   16bf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   16bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bf8:	48 8b 10             	mov    (%rax),%rdx
   16bfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bff:	48 89 d6             	mov    %rdx,%rsi
   16c02:	48 89 c7             	mov    %rax,%rdi
   16c05:	e8 14 34 00 00       	call   1a01e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   16c0a:	c9                   	leave
   16c0b:	c3                   	ret

0000000000016c0c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   16c0c:	55                   	push   %rbp
   16c0d:	48 89 e5             	mov    %rsp,%rbp
   16c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   16c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c1c:	48 8b 00             	mov    (%rax),%rax
   16c1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16c23:	48 c1 e2 03          	shl    $0x3,%rdx
   16c27:	48 01 d0             	add    %rdx,%rax
      }
   16c2a:	5d                   	pop    %rbp
   16c2b:	c3                   	ret

0000000000016c2c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   16c2c:	55                   	push   %rbp
   16c2d:	48 89 e5             	mov    %rsp,%rbp
   16c30:	48 83 ec 20          	sub    $0x20,%rsp
   16c34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   16c38:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16c3c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16c40:	48 89 d6             	mov    %rdx,%rsi
   16c43:	48 89 c7             	mov    %rax,%rdi
   16c46:	e8 e5 33 00 00       	call   1a030 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   16c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c4f:	c9                   	leave
   16c50:	c3                   	ret
   16c51:	90                   	nop

0000000000016c52 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   16c52:	55                   	push   %rbp
   16c53:	48 89 e5             	mov    %rsp,%rbp
   16c56:	48 83 ec 20          	sub    $0x20,%rsp
   16c5a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   16c5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c62:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16c66:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16c6a:	48 89 d6             	mov    %rdx,%rsi
   16c6d:	48 89 c7             	mov    %rax,%rdi
   16c70:	e8 bb 33 00 00       	call   1a030 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   16c75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c79:	c9                   	leave
   16c7a:	c3                   	ret

0000000000016c7b <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   16c7b:	55                   	push   %rbp
   16c7c:	48 89 e5             	mov    %rsp,%rbp
   16c7f:	53                   	push   %rbx
   16c80:	48 83 ec 18          	sub    $0x18,%rsp
   16c84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16c88:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   16c8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c90:	48 89 c7             	mov    %rax,%rdi
   16c93:	e8 b6 33 00 00       	call   1a04e <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   16c98:	48 8b 18             	mov    (%rax),%rbx
   16c9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c9f:	48 89 c7             	mov    %rax,%rdi
   16ca2:	e8 a7 33 00 00       	call   1a04e <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   16ca7:	48 8b 00             	mov    (%rax),%rax
   16caa:	48 39 c3             	cmp    %rax,%rbx
   16cad:	0f 95 c0             	setne  %al
   16cb0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16cb4:	c9                   	leave
   16cb5:	c3                   	ret

0000000000016cb6 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   16cb6:	55                   	push   %rbp
   16cb7:	48 89 e5             	mov    %rsp,%rbp
   16cba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   16cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cc2:	48 8b 00             	mov    (%rax),%rax
   16cc5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ccd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   16cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   16cd4:	5d                   	pop    %rbp
   16cd5:	c3                   	ret

0000000000016cd6 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   16cd6:	55                   	push   %rbp
   16cd7:	48 89 e5             	mov    %rsp,%rbp
   16cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   16cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ce2:	48 8b 00             	mov    (%rax),%rax
   16ce5:	5d                   	pop    %rbp
   16ce6:	c3                   	ret
   16ce7:	90                   	nop

0000000000016ce8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   16ce8:	55                   	push   %rbp
   16ce9:	48 89 e5             	mov    %rsp,%rbp
   16cec:	48 83 ec 20          	sub    $0x20,%rsp
   16cf0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   16cf4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16cf8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16cfc:	48 89 d6             	mov    %rdx,%rsi
   16cff:	48 89 c7             	mov    %rax,%rdi
   16d02:	e8 55 33 00 00       	call   1a05c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   16d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d0b:	c9                   	leave
   16d0c:	c3                   	ret
   16d0d:	90                   	nop

0000000000016d0e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   16d0e:	55                   	push   %rbp
   16d0f:	48 89 e5             	mov    %rsp,%rbp
   16d12:	48 83 ec 20          	sub    $0x20,%rsp
   16d16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   16d1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d1e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16d22:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16d26:	48 89 d6             	mov    %rdx,%rsi
   16d29:	48 89 c7             	mov    %rax,%rdi
   16d2c:	e8 2b 33 00 00       	call   1a05c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   16d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d35:	c9                   	leave
   16d36:	c3                   	ret

0000000000016d37 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   16d37:	55                   	push   %rbp
   16d38:	48 89 e5             	mov    %rsp,%rbp
   16d3b:	53                   	push   %rbx
   16d3c:	48 83 ec 18          	sub    $0x18,%rsp
   16d40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16d44:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   16d48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d4c:	48 89 c7             	mov    %rax,%rdi
   16d4f:	e8 26 33 00 00       	call   1a07a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   16d54:	48 8b 18             	mov    (%rax),%rbx
   16d57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d5b:	48 89 c7             	mov    %rax,%rdi
   16d5e:	e8 17 33 00 00       	call   1a07a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   16d63:	48 8b 00             	mov    (%rax),%rax
   16d66:	48 39 c3             	cmp    %rax,%rbx
   16d69:	0f 95 c0             	setne  %al
   16d6c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16d70:	c9                   	leave
   16d71:	c3                   	ret

0000000000016d72 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   16d72:	55                   	push   %rbp
   16d73:	48 89 e5             	mov    %rsp,%rbp
   16d76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   16d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d7e:	48 8b 00             	mov    (%rax),%rax
   16d81:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d89:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   16d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   16d90:	5d                   	pop    %rbp
   16d91:	c3                   	ret

0000000000016d92 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   16d92:	55                   	push   %rbp
   16d93:	48 89 e5             	mov    %rsp,%rbp
   16d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   16d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d9e:	48 8b 00             	mov    (%rax),%rax
   16da1:	5d                   	pop    %rbp
   16da2:	c3                   	ret
   16da3:	90                   	nop

0000000000016da4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   16da4:	55                   	push   %rbp
   16da5:	48 89 e5             	mov    %rsp,%rbp
   16da8:	48 83 ec 20          	sub    $0x20,%rsp
   16dac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16db0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   16db4:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   16db8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16dbc:	48 89 c7             	mov    %rax,%rdi
   16dbf:	e8 c4 32 00 00       	call   1a088 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   16dc4:	48 89 c2             	mov    %rax,%rdx
   16dc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dcb:	48 89 d6             	mov    %rdx,%rsi
   16dce:	48 89 c7             	mov    %rax,%rdi
   16dd1:	e8 c0 32 00 00       	call   1a096 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   16dd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   16dda:	c9                   	leave
   16ddb:	c3                   	ret

0000000000016ddc <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   16ddc:	55                   	push   %rbp
   16ddd:	48 89 e5             	mov    %rsp,%rbp
   16de0:	48 83 ec 10          	sub    $0x10,%rsp
   16de4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   16de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dec:	48 8b 10             	mov    (%rax),%rdx
   16def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16df3:	48 89 d6             	mov    %rdx,%rsi
   16df6:	48 89 c7             	mov    %rax,%rdi
   16df9:	e8 3a 33 00 00       	call   1a138 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   16dfe:	c9                   	leave
   16dff:	c3                   	ret

0000000000016e00 <_ZNKSt6vectorItSaItEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16e00:	55                   	push   %rbp
   16e01:	48 89 e5             	mov    %rsp,%rbp
   16e04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16e08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e0c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e14:	48 8b 00             	mov    (%rax),%rax
   16e17:	48 29 c2             	sub    %rax,%rdx
   16e1a:	48 89 d0             	mov    %rdx,%rax
   16e1d:	48 d1 f8             	sar    %rax
   16e20:	5d                   	pop    %rbp
   16e21:	c3                   	ret

0000000000016e22 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16e22:	55                   	push   %rbp
   16e23:	48 89 e5             	mov    %rsp,%rbp
   16e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   16e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e2e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e36:	48 8b 00             	mov    (%rax),%rax
   16e39:	48 29 c2             	sub    %rax,%rdx
   16e3c:	48 c1 fa 02          	sar    $0x2,%rdx
   16e40:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   16e47:	cc cc cc 
   16e4a:	48 0f af c2          	imul   %rdx,%rax
   16e4e:	5d                   	pop    %rbp
   16e4f:	c3                   	ret

0000000000016e50 <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   16e50:	55                   	push   %rbp
   16e51:	48 89 e5             	mov    %rsp,%rbp
   16e54:	48 83 ec 10          	sub    $0x10,%rsp
   16e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   16e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e60:	48 8b 10             	mov    (%rax),%rdx
   16e63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e67:	48 89 d6             	mov    %rdx,%rsi
   16e6a:	48 89 c7             	mov    %rax,%rdi
   16e6d:	e8 d8 32 00 00       	call   1a14a <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>
   16e72:	c9                   	leave
   16e73:	c3                   	ret

0000000000016e74 <_ZNKSt6vectorItSaItEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   16e74:	55                   	push   %rbp
   16e75:	48 89 e5             	mov    %rsp,%rbp
   16e78:	48 83 ec 10          	sub    $0x10,%rsp
   16e7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   16e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e84:	48 8b 10             	mov    (%rax),%rdx
   16e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e8b:	48 89 d6             	mov    %rdx,%rsi
   16e8e:	48 89 c7             	mov    %rax,%rdi
   16e91:	e8 c6 32 00 00       	call   1a15c <_ZNKSt6vectorItSaItEE11_M_data_ptrItEEPT_S4_>
   16e96:	c9                   	leave
   16e97:	c3                   	ret

0000000000016e98 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   16e98:	55                   	push   %rbp
   16e99:	48 89 e5             	mov    %rsp,%rbp
   16e9c:	48 83 ec 10          	sub    $0x10,%rsp
   16ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   16ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eac:	48 89 c7             	mov    %rax,%rdi
   16eaf:	e8 ba 32 00 00       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   16eb4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16eb8:	0f 92 c0             	setb   %al
   16ebb:	84 c0                	test   %al,%al
   16ebd:	74 24                	je     16ee3 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   16ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ec3:	48 89 c7             	mov    %rax,%rdi
   16ec6:	e8 a3 32 00 00       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   16ecb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16ecf:	48 29 c2             	sub    %rax,%rdx
   16ed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ed6:	48 89 d6             	mov    %rdx,%rsi
   16ed9:	48 89 c7             	mov    %rax,%rdi
   16edc:	e8 b1 32 00 00       	call   1a192 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm>
      }
   16ee1:	eb 38                	jmp    16f1b <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   16ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ee7:	48 89 c7             	mov    %rax,%rdi
   16eea:	e8 7f 32 00 00       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   16eef:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   16ef3:	0f 92 c0             	setb   %al
   16ef6:	84 c0                	test   %al,%al
   16ef8:	74 21                	je     16f1b <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   16efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16efe:	48 8b 00             	mov    (%rax),%rax
   16f01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16f05:	48 c1 e2 03          	shl    $0x3,%rdx
   16f09:	48 01 c2             	add    %rax,%rdx
   16f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f10:	48 89 d6             	mov    %rdx,%rsi
   16f13:	48 89 c7             	mov    %rax,%rdi
   16f16:	e8 81 34 00 00       	call   1a39c <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   16f1b:	90                   	nop
   16f1c:	c9                   	leave
   16f1d:	c3                   	ret

0000000000016f1e <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   16f1e:	55                   	push   %rbp
   16f1f:	48 89 e5             	mov    %rsp,%rbp
   16f22:	48 83 ec 10          	sub    $0x10,%rsp
   16f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   16f2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f32:	48 89 c7             	mov    %rax,%rdi
   16f35:	e8 c2 34 00 00       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   16f3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16f3e:	0f 92 c0             	setb   %al
   16f41:	84 c0                	test   %al,%al
   16f43:	74 24                	je     16f69 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   16f45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f49:	48 89 c7             	mov    %rax,%rdi
   16f4c:	e8 ab 34 00 00       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   16f51:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16f55:	48 29 c2             	sub    %rax,%rdx
   16f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f5c:	48 89 d6             	mov    %rdx,%rsi
   16f5f:	48 89 c7             	mov    %rax,%rdi
   16f62:	e8 b9 34 00 00       	call   1a420 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm>
      }
   16f67:	eb 38                	jmp    16fa1 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   16f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f6d:	48 89 c7             	mov    %rax,%rdi
   16f70:	e8 87 34 00 00       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   16f75:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   16f79:	0f 92 c0             	setb   %al
   16f7c:	84 c0                	test   %al,%al
   16f7e:	74 21                	je     16fa1 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   16f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f84:	48 8b 00             	mov    (%rax),%rax
   16f87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16f8b:	48 c1 e2 03          	shl    $0x3,%rdx
   16f8f:	48 01 c2             	add    %rax,%rdx
   16f92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f96:	48 89 d6             	mov    %rdx,%rsi
   16f99:	48 89 c7             	mov    %rax,%rdi
   16f9c:	e8 89 36 00 00       	call   1a62a <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   16fa1:	90                   	nop
   16fa2:	c9                   	leave
   16fa3:	c3                   	ret

0000000000016fa4 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   16fa4:	55                   	push   %rbp
   16fa5:	48 89 e5             	mov    %rsp,%rbp
   16fa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   16fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fb4:	48 8b 00             	mov    (%rax),%rax
   16fb7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16fbb:	48 c1 e2 03          	shl    $0x3,%rdx
   16fbf:	48 01 d0             	add    %rdx,%rax
      }
   16fc2:	5d                   	pop    %rbp
   16fc3:	c3                   	ret

0000000000016fc4 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   16fc4:	55                   	push   %rbp
   16fc5:	48 89 e5             	mov    %rsp,%rbp
   16fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   16fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fd4:	48 8b 00             	mov    (%rax),%rax
   16fd7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16fdb:	48 c1 e2 03          	shl    $0x3,%rdx
   16fdf:	48 01 d0             	add    %rdx,%rax
      }
   16fe2:	5d                   	pop    %rbp
   16fe3:	c3                   	ret

0000000000016fe4 <_ZNSt6chrono8durationIfSt5ratioILl1ELl1EEEC1IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE>:
	  constexpr duration(const duration<_Rep2, _Period2>& __d)
   16fe4:	55                   	push   %rbp
   16fe5:	48 89 e5             	mov    %rsp,%rbp
   16fe8:	48 83 ec 20          	sub    $0x20,%rsp
   16fec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16ff0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  : __r(duration_cast<duration>(__d).count()) { }
   16ff4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ff8:	48 89 c7             	mov    %rax,%rdi
   16ffb:	e8 8a 36 00 00       	call   1a68a <_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILl1ELl1EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   17000:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   17005:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
   17009:	48 89 c7             	mov    %rax,%rdi
   1700c:	e8 0d 00 00 00       	call   1701e <_ZNKSt6chrono8durationIfSt5ratioILl1ELl1EEE5countEv>
   17011:	66 0f 7e c0          	movd   %xmm0,%eax
   17015:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17019:	89 02                	mov    %eax,(%rdx)
   1701b:	90                   	nop
   1701c:	c9                   	leave
   1701d:	c3                   	ret

000000000001701e <_ZNKSt6chrono8durationIfSt5ratioILl1ELl1EEE5countEv>:
	count() const
   1701e:	55                   	push   %rbp
   1701f:	48 89 e5             	mov    %rsp,%rbp
   17022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   17026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1702a:	f3 0f 10 00          	movss  (%rax),%xmm0
   1702e:	5d                   	pop    %rbp
   1702f:	c3                   	ret

0000000000017030 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   17030:	55                   	push   %rbp
   17031:	48 89 e5             	mov    %rsp,%rbp
   17034:	53                   	push   %rbx
   17035:	48 83 ec 38          	sub    $0x38,%rsp
   17039:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1703d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   17041:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17045:	48 8b 00             	mov    (%rax),%rax
   17048:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1704c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17050:	48 89 c7             	mov    %rax,%rdi
   17053:	e8 70 e4 ff ff       	call   154c8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   17058:	48 89 c3             	mov    %rax,%rbx
   1705b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1705f:	48 8b 00             	mov    (%rax),%rax
   17062:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   17066:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1706a:	48 89 c7             	mov    %rax,%rdi
   1706d:	e8 56 e4 ff ff       	call   154c8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   17072:	48 29 c3             	sub    %rax,%rbx
   17075:	48 89 da             	mov    %rbx,%rdx
   17078:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1707c:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   17080:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   17084:	48 89 d6             	mov    %rdx,%rsi
   17087:	48 89 c7             	mov    %rax,%rdi
   1708a:	e8 1b e4 ff ff       	call   154aa <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1708f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   17093:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17097:	c9                   	leave
   17098:	c3                   	ret
   17099:	90                   	nop

000000000001709a <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEC1ERKf>:
			this->value[3] = m[3];
#		endif
	}

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(T const& s)
   1709a:	55                   	push   %rbp
   1709b:	48 89 e5             	mov    %rsp,%rbp
   1709e:	48 83 ec 10          	sub    $0x10,%rsp
   170a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#		if GLM_HAS_INITIALIZER_LISTS
			: value{col_type(s, 0, 0, 0), col_type(0, s, 0, 0), col_type(0, 0, s, 0), col_type(0, 0, 0, s)}
   170aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   170b2:	8b 3a                	mov    (%rdx),%edi
   170b4:	b9 00 00 00 00       	mov    $0x0,%ecx
   170b9:	ba 00 00 00 00       	mov    $0x0,%edx
   170be:	be 00 00 00 00       	mov    $0x0,%esi
   170c3:	66 0f 6e c7          	movd   %edi,%xmm0
   170c7:	48 89 c7             	mov    %rax,%rdi
   170ca:	e8 d5 35 00 00       	call   1a6a4 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IfiiiEET_T0_T1_T2_>
   170cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170d3:	48 8d 78 10          	lea    0x10(%rax),%rdi
   170d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   170db:	8b 00                	mov    (%rax),%eax
   170dd:	b9 00 00 00 00       	mov    $0x0,%ecx
   170e2:	ba 00 00 00 00       	mov    $0x0,%edx
   170e7:	66 0f 6e c0          	movd   %eax,%xmm0
   170eb:	be 00 00 00 00       	mov    $0x0,%esi
   170f0:	e8 0b 36 00 00       	call   1a700 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IifiiEET_T0_T1_T2_>
   170f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170f9:	48 8d 78 20          	lea    0x20(%rax),%rdi
   170fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17101:	8b 00                	mov    (%rax),%eax
   17103:	b9 00 00 00 00       	mov    $0x0,%ecx
   17108:	66 0f 6e c0          	movd   %eax,%xmm0
   1710c:	ba 00 00 00 00       	mov    $0x0,%edx
   17111:	be 00 00 00 00       	mov    $0x0,%esi
   17116:	e8 41 36 00 00       	call   1a75c <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IiifiEET_T0_T1_T2_>
   1711b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1711f:	48 8d 78 30          	lea    0x30(%rax),%rdi
   17123:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17127:	8b 00                	mov    (%rax),%eax
   17129:	66 0f 6e c0          	movd   %eax,%xmm0
   1712d:	b9 00 00 00 00       	mov    $0x0,%ecx
   17132:	ba 00 00 00 00       	mov    $0x0,%edx
   17137:	be 00 00 00 00       	mov    $0x0,%esi
   1713c:	e8 77 36 00 00       	call   1a7b8 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IiiifEET_T0_T1_T2_>
			this->value[0] = col_type(s, 0, 0, 0);
			this->value[1] = col_type(0, s, 0, 0);
			this->value[2] = col_type(0, 0, s, 0);
			this->value[3] = col_type(0, 0, 0, s);
#		endif
	}
   17141:	90                   	nop
   17142:	c9                   	leave
   17143:	c3                   	ret

0000000000017144 <_ZN3glm7radiansIfEET_S1_>:

namespace glm
{
	// radians
	template<typename genType>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType radians(genType degrees)
   17144:	55                   	push   %rbp
   17145:	48 89 e5             	mov    %rsp,%rbp
   17148:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
	{
		GLM_STATIC_ASSERT(std::numeric_limits<genType>::is_iec559, "'radians' only accept floating-point input");

		return degrees * static_cast<genType>(0.01745329251994329576923690768489);
   1714d:	f3 0f 10 4d fc       	movss  -0x4(%rbp),%xmm1
   17152:	f3 0f 10 05 c6 f9 00 	movss  0xf9c6(%rip),%xmm0        # 26b20 <_ZZN9VulkanApp6renderEvE11submitCount+0x804>
   17159:	00 
   1715a:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
	}
   1715e:	5d                   	pop    %rbp
   1715f:	c3                   	ret

0000000000017160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>:
	{}

	// -- Component accesses --

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<3, T, Q>::operator[](typename vec<3, T, Q>::length_type i)
   17160:	55                   	push   %rbp
   17161:	48 89 e5             	mov    %rsp,%rbp
   17164:	48 83 ec 10          	sub    $0x10,%rsp
   17168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1716c:	89 75 f4             	mov    %esi,-0xc(%rbp)
	{
		assert(i >= 0 && i < this->length());
   1716f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   17173:	78 0a                	js     1717f <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi+0x1f>
   17175:	e8 53 00 00 00       	call   171cd <_ZN3glm3vecILi3EfLNS_9qualifierE0EE6lengthEv>
   1717a:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   1717d:	7c 28                	jl     171a7 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi+0x47>
   1717f:	48 8d 05 52 f4 00 00 	lea    0xf452(%rip),%rax        # 265d8 <_ZZN9VulkanApp6renderEvE11submitCount+0x2bc>
   17186:	48 89 c1             	mov    %rax,%rcx
   17189:	ba aa 00 00 00       	mov    $0xaa,%edx
   1718e:	48 8d 05 cb f4 00 00 	lea    0xf4cb(%rip),%rax        # 26660 <_ZZN9VulkanApp6renderEvE11submitCount+0x344>
   17195:	48 89 c6             	mov    %rax,%rsi
   17198:	48 8d 05 e7 f4 00 00 	lea    0xf4e7(%rip),%rax        # 26686 <_ZZN9VulkanApp6renderEvE11submitCount+0x36a>
   1719f:	48 89 c7             	mov    %rax,%rdi
   171a2:	e8 59 e1 fe ff       	call   5300 <__assert_fail@plt>
		switch(i)
   171a7:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   171ab:	74 0c                	je     171b9 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi+0x59>
   171ad:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
   171b1:	74 10                	je     171c3 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi+0x63>
		{
		default:
			case 0:
		return x;
   171b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171b7:	eb 12                	jmp    171cb <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi+0x6b>
			case 1:
		return y;
   171b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171bd:	48 83 c0 04          	add    $0x4,%rax
   171c1:	eb 08                	jmp    171cb <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi+0x6b>
			case 2:
		return z;
   171c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171c7:	48 83 c0 08          	add    $0x8,%rax
		}
	}
   171cb:	c9                   	leave
   171cc:	c3                   	ret

00000000000171cd <_ZN3glm3vecILi3EfLNS_9qualifierE0EE6lengthEv>:

		// -- Component accesses --

		/// Return the count of components of the vector
		typedef length_t length_type;
		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}
   171cd:	55                   	push   %rbp
   171ce:	48 89 e5             	mov    %rsp,%rbp
   171d1:	b8 03 00 00 00       	mov    $0x3,%eax
   171d6:	5d                   	pop    %rbp
   171d7:	c3                   	ret

00000000000171d8 <_ZN3glm6rotateIfLNS_9qualifierE0EEENS_3matILi4ELi4ET_XT0_EEERKS4_S3_RKNS_3vecILi3ES3_XT0_EEE>:
		Result[3] = m[0] * v[0] + m[1] * v[1] + m[2] * v[2] + m[3];
		return Result;
	}

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate(mat<4, 4, T, Q> const& m, T angle, vec<3, T, Q> const& v)
   171d8:	55                   	push   %rbp
   171d9:	48 89 e5             	mov    %rsp,%rbp
   171dc:	41 55                	push   %r13
   171de:	41 54                	push   %r12
   171e0:	53                   	push   %rbx
   171e1:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
   171e8:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   171ef:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
   171f6:	f3 0f 11 85 9c fe ff 	movss  %xmm0,-0x164(%rbp)
   171fd:	ff 
   171fe:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
	{
		T const a = angle;
   17205:	f3 0f 10 85 9c fe ff 	movss  -0x164(%rbp),%xmm0
   1720c:	ff 
   1720d:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)
		T const c = cos(a);
   17212:	8b 45 dc             	mov    -0x24(%rbp),%eax
   17215:	66 0f 6e c0          	movd   %eax,%xmm0
   17219:	e8 12 e2 ff ff       	call   15430 <_ZSt3cosf>
   1721e:	66 0f 7e c0          	movd   %xmm0,%eax
   17222:	89 45 d8             	mov    %eax,-0x28(%rbp)
		T const s = sin(a);
   17225:	8b 45 dc             	mov    -0x24(%rbp),%eax
   17228:	66 0f 6e c0          	movd   %eax,%xmm0
   1722c:	e8 1a e2 ff ff       	call   1544b <_ZSt3sinf>
   17231:	66 0f 7e c0          	movd   %xmm0,%eax
   17235:	89 45 d4             	mov    %eax,-0x2c(%rbp)

		vec<3, T, Q> axis(normalize(v));
   17238:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
   1723f:	48 89 c7             	mov    %rax,%rdi
   17242:	e8 cd 35 00 00       	call   1a814 <_ZN3glm9normalizeILi3EfLNS_9qualifierE0EEENS_3vecIXT_ET0_XT1_EEERKS4_>
   17247:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1724c:	0f 28 c1             	movaps %xmm1,%xmm0
   1724f:	48 89 85 04 ff ff ff 	mov    %rax,-0xfc(%rbp)
   17256:	f3 0f 11 85 0c ff ff 	movss  %xmm0,-0xf4(%rbp)
   1725d:	ff 
		vec<3, T, Q> temp((T(1) - c) * axis);
   1725e:	f3 0f 10 05 86 f8 00 	movss  0xf886(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   17265:	00 
   17266:	f3 0f 5c 45 d8       	subss  -0x28(%rbp),%xmm0
   1726b:	66 0f 7e c0          	movd   %xmm0,%eax
   1726f:	48 8d 95 04 ff ff ff 	lea    -0xfc(%rbp),%rdx
   17276:	48 89 d7             	mov    %rdx,%rdi
   17279:	66 0f 6e c0          	movd   %eax,%xmm0
   1727d:	e8 ce 35 00 00       	call   1a850 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEES3_RKS4_>
   17282:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17287:	0f 28 c1             	movaps %xmm1,%xmm0
   1728a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   17291:	f3 0f 11 85 00 ff ff 	movss  %xmm0,-0x100(%rbp)
   17298:	ff 

		mat<4, 4, T, Q> Rotate;
		Rotate[0][0] = c + temp[0] * axis[0];
   17299:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   172a0:	be 00 00 00 00       	mov    $0x0,%esi
   172a5:	48 89 c7             	mov    %rax,%rdi
   172a8:	e8 b3 fe ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   172ad:	f3 0f 10 38          	movss  (%rax),%xmm7
   172b1:	f3 0f 11 bd 98 fe ff 	movss  %xmm7,-0x168(%rbp)
   172b8:	ff 
   172b9:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   172c0:	be 00 00 00 00       	mov    $0x0,%esi
   172c5:	48 89 c7             	mov    %rax,%rdi
   172c8:	e8 93 fe ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   172cd:	f3 0f 10 00          	movss  (%rax),%xmm0
   172d1:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   172d8:	ff 
   172d9:	f3 0f 58 45 d8       	addss  -0x28(%rbp),%xmm0
   172de:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   172e5:	ff 
   172e6:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   172ed:	be 00 00 00 00       	mov    $0x0,%esi
   172f2:	48 89 c7             	mov    %rax,%rdi
   172f5:	e8 3a 0a 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   172fa:	be 00 00 00 00       	mov    $0x0,%esi
   172ff:	48 89 c7             	mov    %rax,%rdi
   17302:	e8 83 0a 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17307:	f3 0f 10 85 98 fe ff 	movss  -0x168(%rbp),%xmm0
   1730e:	ff 
   1730f:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Rotate[0][1] = temp[0] * axis[1] + s * axis[2];
   17313:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   1731a:	be 00 00 00 00       	mov    $0x0,%esi
   1731f:	48 89 c7             	mov    %rax,%rdi
   17322:	e8 39 fe ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17327:	f3 0f 10 18          	movss  (%rax),%xmm3
   1732b:	f3 0f 11 9d 98 fe ff 	movss  %xmm3,-0x168(%rbp)
   17332:	ff 
   17333:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   1733a:	be 01 00 00 00       	mov    $0x1,%esi
   1733f:	48 89 c7             	mov    %rax,%rdi
   17342:	e8 19 fe ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17347:	f3 0f 10 00          	movss  (%rax),%xmm0
   1734b:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   17352:	ff 
   17353:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   1735a:	ff 
   1735b:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   17362:	be 02 00 00 00       	mov    $0x2,%esi
   17367:	48 89 c7             	mov    %rax,%rdi
   1736a:	e8 f1 fd ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   1736f:	f3 0f 10 00          	movss  (%rax),%xmm0
   17373:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   17378:	0f 28 f0             	movaps %xmm0,%xmm6
   1737b:	f3 0f 58 b5 98 fe ff 	addss  -0x168(%rbp),%xmm6
   17382:	ff 
   17383:	f3 0f 11 b5 98 fe ff 	movss  %xmm6,-0x168(%rbp)
   1738a:	ff 
   1738b:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17392:	be 00 00 00 00       	mov    $0x0,%esi
   17397:	48 89 c7             	mov    %rax,%rdi
   1739a:	e8 95 09 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1739f:	be 01 00 00 00       	mov    $0x1,%esi
   173a4:	48 89 c7             	mov    %rax,%rdi
   173a7:	e8 de 09 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   173ac:	f3 0f 10 b5 98 fe ff 	movss  -0x168(%rbp),%xmm6
   173b3:	ff 
   173b4:	f3 0f 11 30          	movss  %xmm6,(%rax)
		Rotate[0][2] = temp[0] * axis[2] - s * axis[1];
   173b8:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   173bf:	be 00 00 00 00       	mov    $0x0,%esi
   173c4:	48 89 c7             	mov    %rax,%rdi
   173c7:	e8 94 fd ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   173cc:	f3 0f 10 20          	movss  (%rax),%xmm4
   173d0:	f3 0f 11 a5 98 fe ff 	movss  %xmm4,-0x168(%rbp)
   173d7:	ff 
   173d8:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   173df:	be 02 00 00 00       	mov    $0x2,%esi
   173e4:	48 89 c7             	mov    %rax,%rdi
   173e7:	e8 74 fd ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   173ec:	f3 0f 10 00          	movss  (%rax),%xmm0
   173f0:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   173f7:	ff 
   173f8:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   173ff:	ff 
   17400:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   17407:	be 01 00 00 00       	mov    $0x1,%esi
   1740c:	48 89 c7             	mov    %rax,%rdi
   1740f:	e8 4c fd ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17414:	f3 0f 10 00          	movss  (%rax),%xmm0
   17418:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   1741d:	f3 0f 10 95 98 fe ff 	movss  -0x168(%rbp),%xmm2
   17424:	ff 
   17425:	f3 0f 5c d0          	subss  %xmm0,%xmm2
   17429:	f3 0f 11 95 98 fe ff 	movss  %xmm2,-0x168(%rbp)
   17430:	ff 
   17431:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17438:	be 00 00 00 00       	mov    $0x0,%esi
   1743d:	48 89 c7             	mov    %rax,%rdi
   17440:	e8 ef 08 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17445:	be 02 00 00 00       	mov    $0x2,%esi
   1744a:	48 89 c7             	mov    %rax,%rdi
   1744d:	e8 38 09 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17452:	f3 0f 10 95 98 fe ff 	movss  -0x168(%rbp),%xmm2
   17459:	ff 
   1745a:	f3 0f 11 10          	movss  %xmm2,(%rax)

		Rotate[1][0] = temp[1] * axis[0] - s * axis[2];
   1745e:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   17465:	be 01 00 00 00       	mov    $0x1,%esi
   1746a:	48 89 c7             	mov    %rax,%rdi
   1746d:	e8 ee fc ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17472:	f3 0f 10 30          	movss  (%rax),%xmm6
   17476:	f3 0f 11 b5 98 fe ff 	movss  %xmm6,-0x168(%rbp)
   1747d:	ff 
   1747e:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   17485:	be 00 00 00 00       	mov    $0x0,%esi
   1748a:	48 89 c7             	mov    %rax,%rdi
   1748d:	e8 ce fc ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17492:	f3 0f 10 00          	movss  (%rax),%xmm0
   17496:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   1749d:	ff 
   1749e:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   174a5:	ff 
   174a6:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   174ad:	be 02 00 00 00       	mov    $0x2,%esi
   174b2:	48 89 c7             	mov    %rax,%rdi
   174b5:	e8 a6 fc ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   174ba:	f3 0f 10 00          	movss  (%rax),%xmm0
   174be:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   174c3:	f3 0f 10 9d 98 fe ff 	movss  -0x168(%rbp),%xmm3
   174ca:	ff 
   174cb:	f3 0f 5c d8          	subss  %xmm0,%xmm3
   174cf:	f3 0f 11 9d 98 fe ff 	movss  %xmm3,-0x168(%rbp)
   174d6:	ff 
   174d7:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   174de:	be 01 00 00 00       	mov    $0x1,%esi
   174e3:	48 89 c7             	mov    %rax,%rdi
   174e6:	e8 49 08 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   174eb:	be 00 00 00 00       	mov    $0x0,%esi
   174f0:	48 89 c7             	mov    %rax,%rdi
   174f3:	e8 92 08 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   174f8:	f3 0f 10 9d 98 fe ff 	movss  -0x168(%rbp),%xmm3
   174ff:	ff 
   17500:	f3 0f 11 18          	movss  %xmm3,(%rax)
		Rotate[1][1] = c + temp[1] * axis[1];
   17504:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   1750b:	be 01 00 00 00       	mov    $0x1,%esi
   17510:	48 89 c7             	mov    %rax,%rdi
   17513:	e8 48 fc ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17518:	f3 0f 10 28          	movss  (%rax),%xmm5
   1751c:	f3 0f 11 ad 98 fe ff 	movss  %xmm5,-0x168(%rbp)
   17523:	ff 
   17524:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   1752b:	be 01 00 00 00       	mov    $0x1,%esi
   17530:	48 89 c7             	mov    %rax,%rdi
   17533:	e8 28 fc ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17538:	f3 0f 10 00          	movss  (%rax),%xmm0
   1753c:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   17543:	ff 
   17544:	f3 0f 58 45 d8       	addss  -0x28(%rbp),%xmm0
   17549:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   17550:	ff 
   17551:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17558:	be 01 00 00 00       	mov    $0x1,%esi
   1755d:	48 89 c7             	mov    %rax,%rdi
   17560:	e8 cf 07 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17565:	be 01 00 00 00       	mov    $0x1,%esi
   1756a:	48 89 c7             	mov    %rax,%rdi
   1756d:	e8 18 08 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17572:	f3 0f 10 85 98 fe ff 	movss  -0x168(%rbp),%xmm0
   17579:	ff 
   1757a:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Rotate[1][2] = temp[1] * axis[2] + s * axis[0];
   1757e:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   17585:	be 01 00 00 00       	mov    $0x1,%esi
   1758a:	48 89 c7             	mov    %rax,%rdi
   1758d:	e8 ce fb ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17592:	f3 0f 10 38          	movss  (%rax),%xmm7
   17596:	f3 0f 11 bd 98 fe ff 	movss  %xmm7,-0x168(%rbp)
   1759d:	ff 
   1759e:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   175a5:	be 02 00 00 00       	mov    $0x2,%esi
   175aa:	48 89 c7             	mov    %rax,%rdi
   175ad:	e8 ae fb ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   175b2:	f3 0f 10 00          	movss  (%rax),%xmm0
   175b6:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   175bd:	ff 
   175be:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   175c5:	ff 
   175c6:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   175cd:	be 00 00 00 00       	mov    $0x0,%esi
   175d2:	48 89 c7             	mov    %rax,%rdi
   175d5:	e8 86 fb ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   175da:	f3 0f 10 00          	movss  (%rax),%xmm0
   175de:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   175e3:	0f 28 e8             	movaps %xmm0,%xmm5
   175e6:	f3 0f 58 ad 98 fe ff 	addss  -0x168(%rbp),%xmm5
   175ed:	ff 
   175ee:	f3 0f 11 ad 98 fe ff 	movss  %xmm5,-0x168(%rbp)
   175f5:	ff 
   175f6:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   175fd:	be 01 00 00 00       	mov    $0x1,%esi
   17602:	48 89 c7             	mov    %rax,%rdi
   17605:	e8 2a 07 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1760a:	be 02 00 00 00       	mov    $0x2,%esi
   1760f:	48 89 c7             	mov    %rax,%rdi
   17612:	e8 73 07 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17617:	f3 0f 10 ad 98 fe ff 	movss  -0x168(%rbp),%xmm5
   1761e:	ff 
   1761f:	f3 0f 11 28          	movss  %xmm5,(%rax)

		Rotate[2][0] = temp[2] * axis[0] + s * axis[1];
   17623:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   1762a:	be 02 00 00 00       	mov    $0x2,%esi
   1762f:	48 89 c7             	mov    %rax,%rdi
   17632:	e8 29 fb ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17637:	f3 0f 10 18          	movss  (%rax),%xmm3
   1763b:	f3 0f 11 9d 98 fe ff 	movss  %xmm3,-0x168(%rbp)
   17642:	ff 
   17643:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   1764a:	be 00 00 00 00       	mov    $0x0,%esi
   1764f:	48 89 c7             	mov    %rax,%rdi
   17652:	e8 09 fb ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17657:	f3 0f 10 00          	movss  (%rax),%xmm0
   1765b:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   17662:	ff 
   17663:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   1766a:	ff 
   1766b:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   17672:	be 01 00 00 00       	mov    $0x1,%esi
   17677:	48 89 c7             	mov    %rax,%rdi
   1767a:	e8 e1 fa ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   1767f:	f3 0f 10 00          	movss  (%rax),%xmm0
   17683:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   17688:	0f 28 d0             	movaps %xmm0,%xmm2
   1768b:	f3 0f 58 95 98 fe ff 	addss  -0x168(%rbp),%xmm2
   17692:	ff 
   17693:	f3 0f 11 95 98 fe ff 	movss  %xmm2,-0x168(%rbp)
   1769a:	ff 
   1769b:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   176a2:	be 02 00 00 00       	mov    $0x2,%esi
   176a7:	48 89 c7             	mov    %rax,%rdi
   176aa:	e8 85 06 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   176af:	be 00 00 00 00       	mov    $0x0,%esi
   176b4:	48 89 c7             	mov    %rax,%rdi
   176b7:	e8 ce 06 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   176bc:	f3 0f 10 95 98 fe ff 	movss  -0x168(%rbp),%xmm2
   176c3:	ff 
   176c4:	f3 0f 11 10          	movss  %xmm2,(%rax)
		Rotate[2][1] = temp[2] * axis[1] - s * axis[0];
   176c8:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   176cf:	be 02 00 00 00       	mov    $0x2,%esi
   176d4:	48 89 c7             	mov    %rax,%rdi
   176d7:	e8 84 fa ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   176dc:	f3 0f 10 20          	movss  (%rax),%xmm4
   176e0:	f3 0f 11 a5 98 fe ff 	movss  %xmm4,-0x168(%rbp)
   176e7:	ff 
   176e8:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   176ef:	be 01 00 00 00       	mov    $0x1,%esi
   176f4:	48 89 c7             	mov    %rax,%rdi
   176f7:	e8 64 fa ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   176fc:	f3 0f 10 00          	movss  (%rax),%xmm0
   17700:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   17707:	ff 
   17708:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   1770f:	ff 
   17710:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   17717:	be 00 00 00 00       	mov    $0x0,%esi
   1771c:	48 89 c7             	mov    %rax,%rdi
   1771f:	e8 3c fa ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17724:	f3 0f 10 00          	movss  (%rax),%xmm0
   17728:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   1772d:	f3 0f 10 a5 98 fe ff 	movss  -0x168(%rbp),%xmm4
   17734:	ff 
   17735:	f3 0f 5c e0          	subss  %xmm0,%xmm4
   17739:	f3 0f 11 a5 98 fe ff 	movss  %xmm4,-0x168(%rbp)
   17740:	ff 
   17741:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17748:	be 02 00 00 00       	mov    $0x2,%esi
   1774d:	48 89 c7             	mov    %rax,%rdi
   17750:	e8 df 05 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17755:	be 01 00 00 00       	mov    $0x1,%esi
   1775a:	48 89 c7             	mov    %rax,%rdi
   1775d:	e8 28 06 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17762:	f3 0f 10 a5 98 fe ff 	movss  -0x168(%rbp),%xmm4
   17769:	ff 
   1776a:	f3 0f 11 20          	movss  %xmm4,(%rax)
		Rotate[2][2] = c + temp[2] * axis[2];
   1776e:	48 8d 85 f8 fe ff ff 	lea    -0x108(%rbp),%rax
   17775:	be 02 00 00 00       	mov    $0x2,%esi
   1777a:	48 89 c7             	mov    %rax,%rdi
   1777d:	e8 de f9 ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   17782:	f3 0f 10 30          	movss  (%rax),%xmm6
   17786:	f3 0f 11 b5 98 fe ff 	movss  %xmm6,-0x168(%rbp)
   1778d:	ff 
   1778e:	48 8d 85 04 ff ff ff 	lea    -0xfc(%rbp),%rax
   17795:	be 02 00 00 00       	mov    $0x2,%esi
   1779a:	48 89 c7             	mov    %rax,%rdi
   1779d:	e8 be f9 ff ff       	call   17160 <_ZN3glm3vecILi3EfLNS_9qualifierE0EEixEi>
   177a2:	f3 0f 10 00          	movss  (%rax),%xmm0
   177a6:	f3 0f 59 85 98 fe ff 	mulss  -0x168(%rbp),%xmm0
   177ad:	ff 
   177ae:	f3 0f 58 45 d8       	addss  -0x28(%rbp),%xmm0
   177b3:	f3 0f 11 85 98 fe ff 	movss  %xmm0,-0x168(%rbp)
   177ba:	ff 
   177bb:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   177c2:	be 02 00 00 00       	mov    $0x2,%esi
   177c7:	48 89 c7             	mov    %rax,%rdi
   177ca:	e8 65 05 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   177cf:	be 02 00 00 00       	mov    $0x2,%esi
   177d4:	48 89 c7             	mov    %rax,%rdi
   177d7:	e8 ae 05 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   177dc:	f3 0f 10 85 98 fe ff 	movss  -0x168(%rbp),%xmm0
   177e3:	ff 
   177e4:	f3 0f 11 00          	movss  %xmm0,(%rax)

		mat<4, 4, T, Q> Result;
		Result[0] = m[0] * Rotate[0][0] + m[1] * Rotate[0][1] + m[2] * Rotate[0][2];
   177e8:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   177ef:	be 00 00 00 00       	mov    $0x0,%esi
   177f4:	48 89 c7             	mov    %rax,%rdi
   177f7:	e8 38 05 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   177fc:	be 02 00 00 00       	mov    $0x2,%esi
   17801:	48 89 c7             	mov    %rax,%rdi
   17804:	e8 81 05 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17809:	48 89 c3             	mov    %rax,%rbx
   1780c:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   17813:	be 02 00 00 00       	mov    $0x2,%esi
   17818:	48 89 c7             	mov    %rax,%rdi
   1781b:	e8 a6 30 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17820:	48 89 de             	mov    %rbx,%rsi
   17823:	48 89 c7             	mov    %rax,%rdi
   17826:	e8 f6 e2 ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   1782b:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17830:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17834:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1783b:	66 0f d6 85 18 ff ff 	movq   %xmm0,-0xe8(%rbp)
   17842:	ff 
   17843:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   1784a:	be 00 00 00 00       	mov    $0x0,%esi
   1784f:	48 89 c7             	mov    %rax,%rdi
   17852:	e8 dd 04 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17857:	be 01 00 00 00       	mov    $0x1,%esi
   1785c:	48 89 c7             	mov    %rax,%rdi
   1785f:	e8 26 05 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17864:	48 89 c3             	mov    %rax,%rbx
   17867:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   1786e:	be 01 00 00 00       	mov    $0x1,%esi
   17873:	48 89 c7             	mov    %rax,%rdi
   17876:	e8 4b 30 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1787b:	48 89 de             	mov    %rbx,%rsi
   1787e:	48 89 c7             	mov    %rax,%rdi
   17881:	e8 9b e2 ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   17886:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1788b:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   1788f:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   17896:	66 0f d6 85 38 ff ff 	movq   %xmm0,-0xc8(%rbp)
   1789d:	ff 
   1789e:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   178a5:	be 00 00 00 00       	mov    $0x0,%esi
   178aa:	48 89 c7             	mov    %rax,%rdi
   178ad:	e8 82 04 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   178b2:	be 00 00 00 00       	mov    $0x0,%esi
   178b7:	48 89 c7             	mov    %rax,%rdi
   178ba:	e8 cb 04 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   178bf:	48 89 c3             	mov    %rax,%rbx
   178c2:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   178c9:	be 00 00 00 00       	mov    $0x0,%esi
   178ce:	48 89 c7             	mov    %rax,%rdi
   178d1:	e8 f0 2f 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   178d6:	48 89 de             	mov    %rbx,%rsi
   178d9:	48 89 c7             	mov    %rax,%rdi
   178dc:	e8 40 e2 ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   178e1:	66 48 0f 7e c0       	movq   %xmm0,%rax
   178e6:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   178ea:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   178f1:	66 0f d6 85 48 ff ff 	movq   %xmm0,-0xb8(%rbp)
   178f8:	ff 
   178f9:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
   17900:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   17907:	48 89 d6             	mov    %rdx,%rsi
   1790a:	48 89 c7             	mov    %rax,%rdi
   1790d:	e8 0a 30 00 00       	call   1a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>
   17912:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17917:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   1791b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   17922:	66 0f d6 85 28 ff ff 	movq   %xmm0,-0xd8(%rbp)
   17929:	ff 
   1792a:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   17931:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   17938:	48 89 d6             	mov    %rdx,%rsi
   1793b:	48 89 c7             	mov    %rax,%rdi
   1793e:	e8 d9 2f 00 00       	call   1a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>
   17943:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17948:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   1794c:	49 89 c4             	mov    %rax,%r12
   1794f:	49 89 d5             	mov    %rdx,%r13
   17952:	66 49 0f 7e c5       	movq   %xmm0,%r13
   17957:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1795e:	be 00 00 00 00       	mov    $0x0,%esi
   17963:	48 89 c7             	mov    %rax,%rdi
   17966:	e8 c9 03 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1796b:	4c 89 20             	mov    %r12,(%rax)
   1796e:	4c 89 68 08          	mov    %r13,0x8(%rax)
		Result[1] = m[0] * Rotate[1][0] + m[1] * Rotate[1][1] + m[2] * Rotate[1][2];
   17972:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17979:	be 01 00 00 00       	mov    $0x1,%esi
   1797e:	48 89 c7             	mov    %rax,%rdi
   17981:	e8 ae 03 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17986:	be 02 00 00 00       	mov    $0x2,%esi
   1798b:	48 89 c7             	mov    %rax,%rdi
   1798e:	e8 f7 03 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17993:	48 89 c3             	mov    %rax,%rbx
   17996:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   1799d:	be 02 00 00 00       	mov    $0x2,%esi
   179a2:	48 89 c7             	mov    %rax,%rdi
   179a5:	e8 1c 2f 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   179aa:	48 89 de             	mov    %rbx,%rsi
   179ad:	48 89 c7             	mov    %rax,%rdi
   179b0:	e8 6c e1 ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   179b5:	66 48 0f 7e c0       	movq   %xmm0,%rax
   179ba:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   179be:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   179c5:	66 0f d6 85 58 ff ff 	movq   %xmm0,-0xa8(%rbp)
   179cc:	ff 
   179cd:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   179d4:	be 01 00 00 00       	mov    $0x1,%esi
   179d9:	48 89 c7             	mov    %rax,%rdi
   179dc:	e8 53 03 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   179e1:	be 01 00 00 00       	mov    $0x1,%esi
   179e6:	48 89 c7             	mov    %rax,%rdi
   179e9:	e8 9c 03 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   179ee:	48 89 c3             	mov    %rax,%rbx
   179f1:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   179f8:	be 01 00 00 00       	mov    $0x1,%esi
   179fd:	48 89 c7             	mov    %rax,%rdi
   17a00:	e8 c1 2e 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17a05:	48 89 de             	mov    %rbx,%rsi
   17a08:	48 89 c7             	mov    %rax,%rdi
   17a0b:	e8 11 e1 ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   17a10:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17a15:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17a19:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   17a20:	66 0f d6 85 78 ff ff 	movq   %xmm0,-0x88(%rbp)
   17a27:	ff 
   17a28:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17a2f:	be 01 00 00 00       	mov    $0x1,%esi
   17a34:	48 89 c7             	mov    %rax,%rdi
   17a37:	e8 f8 02 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17a3c:	be 00 00 00 00       	mov    $0x0,%esi
   17a41:	48 89 c7             	mov    %rax,%rdi
   17a44:	e8 41 03 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17a49:	48 89 c3             	mov    %rax,%rbx
   17a4c:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   17a53:	be 00 00 00 00       	mov    $0x0,%esi
   17a58:	48 89 c7             	mov    %rax,%rdi
   17a5b:	e8 66 2e 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17a60:	48 89 de             	mov    %rbx,%rsi
   17a63:	48 89 c7             	mov    %rax,%rdi
   17a66:	e8 b6 e0 ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   17a6b:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17a70:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17a74:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   17a78:	66 0f d6 45 88       	movq   %xmm0,-0x78(%rbp)
   17a7d:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
   17a84:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   17a88:	48 89 d6             	mov    %rdx,%rsi
   17a8b:	48 89 c7             	mov    %rax,%rdi
   17a8e:	e8 89 2e 00 00       	call   1a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>
   17a93:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17a98:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17a9c:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   17aa3:	66 0f d6 85 68 ff ff 	movq   %xmm0,-0x98(%rbp)
   17aaa:	ff 
   17aab:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
   17ab2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   17ab9:	48 89 d6             	mov    %rdx,%rsi
   17abc:	48 89 c7             	mov    %rax,%rdi
   17abf:	e8 58 2e 00 00       	call   1a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>
   17ac4:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17ac9:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17acd:	49 89 c4             	mov    %rax,%r12
   17ad0:	49 89 d5             	mov    %rdx,%r13
   17ad3:	66 49 0f 7e c5       	movq   %xmm0,%r13
   17ad8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   17adf:	be 01 00 00 00       	mov    $0x1,%esi
   17ae4:	48 89 c7             	mov    %rax,%rdi
   17ae7:	e8 48 02 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17aec:	4c 89 20             	mov    %r12,(%rax)
   17aef:	4c 89 68 08          	mov    %r13,0x8(%rax)
		Result[2] = m[0] * Rotate[2][0] + m[1] * Rotate[2][1] + m[2] * Rotate[2][2];
   17af3:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17afa:	be 02 00 00 00       	mov    $0x2,%esi
   17aff:	48 89 c7             	mov    %rax,%rdi
   17b02:	e8 2d 02 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17b07:	be 02 00 00 00       	mov    $0x2,%esi
   17b0c:	48 89 c7             	mov    %rax,%rdi
   17b0f:	e8 76 02 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17b14:	48 89 c3             	mov    %rax,%rbx
   17b17:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   17b1e:	be 02 00 00 00       	mov    $0x2,%esi
   17b23:	48 89 c7             	mov    %rax,%rdi
   17b26:	e8 9b 2d 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17b2b:	48 89 de             	mov    %rbx,%rsi
   17b2e:	48 89 c7             	mov    %rax,%rdi
   17b31:	e8 eb df ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   17b36:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17b3b:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17b3f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   17b43:	66 0f d6 45 98       	movq   %xmm0,-0x68(%rbp)
   17b48:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17b4f:	be 02 00 00 00       	mov    $0x2,%esi
   17b54:	48 89 c7             	mov    %rax,%rdi
   17b57:	e8 d8 01 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17b5c:	be 01 00 00 00       	mov    $0x1,%esi
   17b61:	48 89 c7             	mov    %rax,%rdi
   17b64:	e8 21 02 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17b69:	48 89 c3             	mov    %rax,%rbx
   17b6c:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   17b73:	be 01 00 00 00       	mov    $0x1,%esi
   17b78:	48 89 c7             	mov    %rax,%rdi
   17b7b:	e8 46 2d 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17b80:	48 89 de             	mov    %rbx,%rsi
   17b83:	48 89 c7             	mov    %rax,%rdi
   17b86:	e8 96 df ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   17b8b:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17b90:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17b94:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   17b98:	66 0f d6 45 b8       	movq   %xmm0,-0x48(%rbp)
   17b9d:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   17ba4:	be 02 00 00 00       	mov    $0x2,%esi
   17ba9:	48 89 c7             	mov    %rax,%rdi
   17bac:	e8 83 01 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17bb1:	be 00 00 00 00       	mov    $0x0,%esi
   17bb6:	48 89 c7             	mov    %rax,%rdi
   17bb9:	e8 cc 01 00 00       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   17bbe:	48 89 c3             	mov    %rax,%rbx
   17bc1:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   17bc8:	be 00 00 00 00       	mov    $0x0,%esi
   17bcd:	48 89 c7             	mov    %rax,%rdi
   17bd0:	e8 f1 2c 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17bd5:	48 89 de             	mov    %rbx,%rsi
   17bd8:	48 89 c7             	mov    %rax,%rdi
   17bdb:	e8 41 df ff ff       	call   15b21 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_RKS3_>
   17be0:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17be5:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17be9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   17bed:	66 0f d6 45 c8       	movq   %xmm0,-0x38(%rbp)
   17bf2:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   17bf6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   17bfa:	48 89 d6             	mov    %rdx,%rsi
   17bfd:	48 89 c7             	mov    %rax,%rdi
   17c00:	e8 17 2d 00 00       	call   1a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>
   17c05:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17c0a:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17c0e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   17c12:	66 0f d6 45 a8       	movq   %xmm0,-0x58(%rbp)
   17c17:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   17c1b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   17c1f:	48 89 d6             	mov    %rdx,%rsi
   17c22:	48 89 c7             	mov    %rax,%rdi
   17c25:	e8 f2 2c 00 00       	call   1a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>
   17c2a:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17c2f:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   17c33:	49 89 c4             	mov    %rax,%r12
   17c36:	49 89 d5             	mov    %rdx,%r13
   17c39:	66 49 0f 7e c5       	movq   %xmm0,%r13
   17c3e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   17c45:	be 02 00 00 00       	mov    $0x2,%esi
   17c4a:	48 89 c7             	mov    %rax,%rdi
   17c4d:	e8 e2 00 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17c52:	4c 89 20             	mov    %r12,(%rax)
   17c55:	4c 89 68 08          	mov    %r13,0x8(%rax)
		Result[3] = m[3];
   17c59:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
   17c60:	be 03 00 00 00       	mov    $0x3,%esi
   17c65:	48 89 c7             	mov    %rax,%rdi
   17c68:	e8 59 2c 00 00       	call   1a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17c6d:	48 89 c3             	mov    %rax,%rbx
   17c70:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   17c77:	be 03 00 00 00       	mov    $0x3,%esi
   17c7c:	48 89 c7             	mov    %rax,%rdi
   17c7f:	e8 b0 00 00 00       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   17c84:	48 89 c1             	mov    %rax,%rcx
   17c87:	48 8b 03             	mov    (%rbx),%rax
   17c8a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   17c8e:	48 89 01             	mov    %rax,(%rcx)
   17c91:	48 89 51 08          	mov    %rdx,0x8(%rcx)
		return Result;
   17c95:	90                   	nop
	}
   17c96:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   17c9d:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
   17ca4:	5b                   	pop    %rbx
   17ca5:	41 5c                	pop    %r12
   17ca7:	41 5d                	pop    %r13
   17ca9:	5d                   	pop    %rbp
   17caa:	c3                   	ret

0000000000017cab <_ZN3glm6lookAtIfLNS_9qualifierE0EEENS_3matILi4ELi4ET_XT0_EEERKNS_3vecILi3ES3_XT0_EEES8_S8_>:
		Result[3][2] = -dot(f, eye);
		return Result;
	}

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAt(vec<3, T, Q> const& eye, vec<3, T, Q> const& center, vec<3, T, Q> const& up)
   17cab:	55                   	push   %rbp
   17cac:	48 89 e5             	mov    %rsp,%rbp
   17caf:	48 83 ec 20          	sub    $0x20,%rsp
   17cb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cb7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17cbb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   17cbf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	{
		GLM_IF_CONSTEXPR(GLM_CONFIG_CLIP_CONTROL & GLM_CLIP_CONTROL_LH_BIT)
			return lookAtLH(eye, center, up);
		else
			return lookAtRH(eye, center, up);
   17cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cc7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17ccb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ccf:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   17cd3:	48 89 c7             	mov    %rax,%rdi
   17cd6:	e8 98 2c 00 00       	call   1a973 <_ZN3glm8lookAtRHIfLNS_9qualifierE0EEENS_3matILi4ELi4ET_XT0_EEERKNS_3vecILi3ES3_XT0_EEES8_S8_>
   17cdb:	90                   	nop
	}
   17cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ce0:	c9                   	leave
   17ce1:	c3                   	ret

0000000000017ce2 <_ZN3glm11perspectiveIfEENS_3matILi4ELi4ET_LNS_9qualifierE0EEES2_S2_S2_S2_>:
			return perspectiveRH_NO(fovy, aspect, zNear, zFar);
#		endif
	}

	template<typename T>
	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspective(T fovy, T aspect, T zNear, T zFar)
   17ce2:	55                   	push   %rbp
   17ce3:	48 89 e5             	mov    %rsp,%rbp
   17ce6:	48 83 ec 20          	sub    $0x20,%rsp
   17cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cee:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
   17cf3:	f3 0f 11 4d f0       	movss  %xmm1,-0x10(%rbp)
   17cf8:	f3 0f 11 55 ec       	movss  %xmm2,-0x14(%rbp)
   17cfd:	f3 0f 11 5d e8       	movss  %xmm3,-0x18(%rbp)
#		elif GLM_CONFIG_CLIP_CONTROL == GLM_CLIP_CONTROL_LH_NO
			return perspectiveLH_NO(fovy, aspect, zNear, zFar);
#		elif GLM_CONFIG_CLIP_CONTROL == GLM_CLIP_CONTROL_RH_ZO
			return perspectiveRH_ZO(fovy, aspect, zNear, zFar);
#		elif GLM_CONFIG_CLIP_CONTROL == GLM_CLIP_CONTROL_RH_NO
			return perspectiveRH_NO(fovy, aspect, zNear, zFar);
   17d02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d06:	f3 0f 10 55 e8       	movss  -0x18(%rbp),%xmm2
   17d0b:	f3 0f 10 4d ec       	movss  -0x14(%rbp),%xmm1
   17d10:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   17d15:	8b 55 f4             	mov    -0xc(%rbp),%edx
   17d18:	0f 28 da             	movaps %xmm2,%xmm3
   17d1b:	0f 28 d1             	movaps %xmm1,%xmm2
   17d1e:	0f 28 c8             	movaps %xmm0,%xmm1
   17d21:	66 0f 6e c2          	movd   %edx,%xmm0
   17d25:	48 89 c7             	mov    %rax,%rdi
   17d28:	e8 a4 30 00 00       	call   1add1 <_ZN3glm16perspectiveRH_NOIfEENS_3matILi4ELi4ET_LNS_9qualifierE0EEES2_S2_S2_S2_>
   17d2d:	90                   	nop
#		endif
	}
   17d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d32:	c9                   	leave
   17d33:	c3                   	ret

0000000000017d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>:
	}

	// -- Accesses --

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::col_type & mat<4, 4, T, Q>::operator[](typename mat<4, 4, T, Q>::length_type i)
   17d34:	55                   	push   %rbp
   17d35:	48 89 e5             	mov    %rsp,%rbp
   17d38:	48 83 ec 10          	sub    $0x10,%rsp
   17d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d40:	89 75 f4             	mov    %esi,-0xc(%rbp)
	{
		assert(i < this->length());
   17d43:	e8 8a 32 00 00       	call   1afd2 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EE6lengthEv>
   17d48:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   17d4b:	7c 28                	jl     17d75 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi+0x41>
   17d4d:	48 8d 05 54 e9 00 00 	lea    0xe954(%rip),%rax        # 266a8 <_ZZN9VulkanApp6renderEvE11submitCount+0x38c>
   17d54:	48 89 c1             	mov    %rax,%rcx
   17d57:	ba 23 01 00 00       	mov    $0x123,%edx
   17d5c:	48 8d 05 15 ea 00 00 	lea    0xea15(%rip),%rax        # 26778 <_ZZN9VulkanApp6renderEvE11submitCount+0x45c>
   17d63:	48 89 c6             	mov    %rax,%rsi
   17d66:	48 8d 05 33 ea 00 00 	lea    0xea33(%rip),%rax        # 267a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x484>
   17d6d:	48 89 c7             	mov    %rax,%rdi
   17d70:	e8 8b d5 fe ff       	call   5300 <__assert_fail@plt>
		return this->value[i];
   17d75:	8b 45 f4             	mov    -0xc(%rbp),%eax
   17d78:	48 98                	cltq
   17d7a:	48 c1 e0 04          	shl    $0x4,%rax
   17d7e:	48 89 c2             	mov    %rax,%rdx
   17d81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d85:	48 01 d0             	add    %rdx,%rax
	}
   17d88:	c9                   	leave
   17d89:	c3                   	ret

0000000000017d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T& vec<4, T, Q>::operator[](typename vec<4, T, Q>::length_type i)
   17d8a:	55                   	push   %rbp
   17d8b:	48 89 e5             	mov    %rsp,%rbp
   17d8e:	48 83 ec 10          	sub    $0x10,%rsp
   17d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d96:	89 75 f4             	mov    %esi,-0xc(%rbp)
		assert(i >= 0 && i < this->length());
   17d99:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   17d9d:	78 0a                	js     17da9 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x1f>
   17d9f:	e8 39 32 00 00       	call   1afdd <_ZN3glm3vecILi4EfLNS_9qualifierE0EE6lengthEv>
   17da4:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   17da7:	7c 28                	jl     17dd1 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x47>
   17da9:	48 8d 05 08 ea 00 00 	lea    0xea08(%rip),%rax        # 267b8 <_ZZN9VulkanApp6renderEvE11submitCount+0x49c>
   17db0:	48 89 c1             	mov    %rax,%rcx
   17db3:	ba df 01 00 00       	mov    $0x1df,%edx
   17db8:	48 8d 05 81 ea 00 00 	lea    0xea81(%rip),%rax        # 26840 <_ZZN9VulkanApp6renderEvE11submitCount+0x524>
   17dbf:	48 89 c6             	mov    %rax,%rsi
   17dc2:	48 8d 05 bd e8 00 00 	lea    0xe8bd(%rip),%rax        # 26686 <_ZZN9VulkanApp6renderEvE11submitCount+0x36a>
   17dc9:	48 89 c7             	mov    %rax,%rdi
   17dcc:	e8 2f d5 fe ff       	call   5300 <__assert_fail@plt>
		switch(i)
   17dd1:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
   17dd5:	74 2c                	je     17e03 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x79>
   17dd7:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
   17ddb:	7f 0c                	jg     17de9 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x5f>
   17ddd:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
   17de1:	74 0c                	je     17def <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x65>
   17de3:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
   17de7:	74 10                	je     17df9 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x6f>
			return x;
   17de9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ded:	eb 1c                	jmp    17e0b <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x81>
			return y;
   17def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17df3:	48 83 c0 04          	add    $0x4,%rax
   17df7:	eb 12                	jmp    17e0b <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x81>
			return z;
   17df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dfd:	48 83 c0 08          	add    $0x8,%rax
   17e01:	eb 08                	jmp    17e0b <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi+0x81>
			return w;
   17e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e07:	48 83 c0 0c          	add    $0xc,%rax
	}
   17e0b:	c9                   	leave
   17e0c:	c3                   	ret
   17e0d:	90                   	nop

0000000000017e0e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   17e0e:	55                   	push   %rbp
   17e0f:	48 89 e5             	mov    %rsp,%rbp
   17e12:	48 83 ec 10          	sub    $0x10,%rsp
   17e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   17e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e22:	48 89 c7             	mov    %rax,%rdi
   17e25:	e8 1c 05 00 00       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   17e2a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17e2e:	0f 92 c0             	setb   %al
   17e31:	84 c0                	test   %al,%al
   17e33:	74 24                	je     17e59 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   17e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e39:	48 89 c7             	mov    %rax,%rdi
   17e3c:	e8 05 05 00 00       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   17e41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e45:	48 29 c2             	sub    %rax,%rdx
   17e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e4c:	48 89 d6             	mov    %rdx,%rsi
   17e4f:	48 89 c7             	mov    %rax,%rdi
   17e52:	e8 91 31 00 00       	call   1afe8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
   17e57:	eb 38                	jmp    17e91 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   17e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e5d:	48 89 c7             	mov    %rax,%rdi
   17e60:	e8 e1 04 00 00       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   17e65:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17e69:	0f 92 c0             	setb   %al
   17e6c:	84 c0                	test   %al,%al
   17e6e:	74 21                	je     17e91 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   17e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e74:	48 8b 00             	mov    (%rax),%rax
   17e77:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e7b:	48 c1 e2 03          	shl    $0x3,%rdx
   17e7f:	48 01 c2             	add    %rax,%rdx
   17e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e86:	48 89 d6             	mov    %rdx,%rsi
   17e89:	48 89 c7             	mov    %rax,%rdi
   17e8c:	e8 61 33 00 00       	call   1b1f2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   17e91:	90                   	nop
   17e92:	c9                   	leave
   17e93:	c3                   	ret

0000000000017e94 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   17e94:	55                   	push   %rbp
   17e95:	48 89 e5             	mov    %rsp,%rbp
   17e98:	48 83 ec 10          	sub    $0x10,%rsp
   17e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ea0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   17ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ea8:	48 89 c7             	mov    %rax,%rdi
   17eab:	e8 a2 33 00 00       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17eb0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17eb4:	0f 92 c0             	setb   %al
   17eb7:	84 c0                	test   %al,%al
   17eb9:	74 24                	je     17edf <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   17ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ebf:	48 89 c7             	mov    %rax,%rdi
   17ec2:	e8 8b 33 00 00       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17ec7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17ecb:	48 29 c2             	sub    %rax,%rdx
   17ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ed2:	48 89 d6             	mov    %rdx,%rsi
   17ed5:	48 89 c7             	mov    %rax,%rdi
   17ed8:	e8 99 33 00 00       	call   1b276 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
   17edd:	eb 38                	jmp    17f17 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   17edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ee3:	48 89 c7             	mov    %rax,%rdi
   17ee6:	e8 67 33 00 00       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   17eeb:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   17eef:	0f 92 c0             	setb   %al
   17ef2:	84 c0                	test   %al,%al
   17ef4:	74 21                	je     17f17 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   17ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17efa:	48 8b 00             	mov    (%rax),%rax
   17efd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f01:	48 c1 e2 03          	shl    $0x3,%rdx
   17f05:	48 01 c2             	add    %rax,%rdx
   17f08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f0c:	48 89 d6             	mov    %rdx,%rsi
   17f0f:	48 89 c7             	mov    %rax,%rdi
   17f12:	e8 69 35 00 00       	call   1b480 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   17f17:	90                   	nop
   17f18:	c9                   	leave
   17f19:	c3                   	ret

0000000000017f1a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   17f1a:	55                   	push   %rbp
   17f1b:	48 89 e5             	mov    %rsp,%rbp
   17f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   17f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f2a:	48 8b 00             	mov    (%rax),%rax
   17f2d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f31:	48 c1 e2 03          	shl    $0x3,%rdx
   17f35:	48 01 d0             	add    %rdx,%rax
      }
   17f38:	5d                   	pop    %rbp
   17f39:	c3                   	ret

0000000000017f3a <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   17f3a:	55                   	push   %rbp
   17f3b:	48 89 e5             	mov    %rsp,%rbp
   17f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   17f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f4a:	48 8b 00             	mov    (%rax),%rax
   17f4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f51:	48 c1 e2 03          	shl    $0x3,%rdx
   17f55:	48 01 d0             	add    %rdx,%rax
      }
   17f58:	5d                   	pop    %rbp
   17f59:	c3                   	ret

0000000000017f5a <_ZNSaIP23VkDescriptorSetLayout_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   17f5a:	55                   	push   %rbp
   17f5b:	48 89 e5             	mov    %rsp,%rbp
   17f5e:	48 83 ec 10          	sub    $0x10,%rsp
   17f62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f6a:	48 89 c7             	mov    %rax,%rdi
   17f6d:	e8 6e 35 00 00       	call   1b4e0 <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TEC1Ev>
   17f72:	90                   	nop
   17f73:	c9                   	leave
   17f74:	c3                   	ret
   17f75:	90                   	nop

0000000000017f76 <_ZNSaIP23VkDescriptorSetLayout_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   17f76:	55                   	push   %rbp
   17f77:	48 89 e5             	mov    %rsp,%rbp
   17f7a:	48 83 ec 10          	sub    $0x10,%rsp
   17f7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f86:	48 89 c7             	mov    %rax,%rdi
   17f89:	e8 5e 35 00 00       	call   1b4ec <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TED1Ev>
   17f8e:	90                   	nop
   17f8f:	c9                   	leave
   17f90:	c3                   	ret
   17f91:	90                   	nop

0000000000017f92 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EEC1EmRKS1_RKS2_>:
      vector(size_type __n, const value_type& __value,
   17f92:	55                   	push   %rbp
   17f93:	48 89 e5             	mov    %rsp,%rbp
   17f96:	53                   	push   %rbx
   17f97:	48 83 ec 28          	sub    $0x28,%rsp
   17f9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17f9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17fa3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17fa7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   17fab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   17faf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17fb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17fb7:	48 89 d6             	mov    %rdx,%rsi
   17fba:	48 89 c7             	mov    %rax,%rdi
   17fbd:	e8 35 35 00 00       	call   1b4f7 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   17fc2:	48 89 c1             	mov    %rax,%rcx
   17fc5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17fc9:	48 89 c2             	mov    %rax,%rdx
   17fcc:	48 89 ce             	mov    %rcx,%rsi
   17fcf:	48 89 df             	mov    %rbx,%rdi
   17fd2:	e8 9d 35 00 00       	call   1b574 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EEC1EmRKS2_>
      { _M_fill_initialize(__n, __value); }
   17fd7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17fdb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   17fdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17fe3:	48 89 ce             	mov    %rcx,%rsi
   17fe6:	48 89 c7             	mov    %rax,%rdi
   17fe9:	e8 32 36 00 00       	call   1b620 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE18_M_fill_initializeEmRKS1_>
   17fee:	eb 1a                	jmp    1800a <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EEC1EmRKS1_RKS2_+0x78>
   17ff0:	48 89 c3             	mov    %rax,%rbx
   17ff3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ff7:	48 89 c7             	mov    %rax,%rdi
   17ffa:	e8 d3 35 00 00       	call   1b5d2 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EED1Ev>
   17fff:	48 89 d8             	mov    %rbx,%rax
   18002:	48 89 c7             	mov    %rax,%rdi
   18005:	e8 f6 d9 fe ff       	call   5a00 <_Unwind_Resume@plt>
   1800a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1800e:	c9                   	leave
   1800f:	c3                   	ret

0000000000018010 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18010:	55                   	push   %rbp
   18011:	48 89 e5             	mov    %rsp,%rbp
   18014:	48 83 ec 10          	sub    $0x10,%rsp
   18018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1801c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18020:	48 89 c7             	mov    %rax,%rdi
   18023:	e8 3e 36 00 00       	call   1b666 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18028:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1802b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1802f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18037:	48 8b 00             	mov    (%rax),%rax
   1803a:	48 89 ce             	mov    %rcx,%rsi
   1803d:	48 89 c7             	mov    %rax,%rdi
   18040:	e8 2f 36 00 00       	call   1b674 <_ZSt8_DestroyIPP23VkDescriptorSetLayout_TS1_EvT_S3_RSaIT0_E>
      }
   18045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18049:	48 89 c7             	mov    %rax,%rdi
   1804c:	e8 81 35 00 00       	call   1b5d2 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EED1Ev>
   18051:	90                   	nop
   18052:	c9                   	leave
   18053:	c3                   	ret

0000000000018054 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   18054:	55                   	push   %rbp
   18055:	48 89 e5             	mov    %rsp,%rbp
   18058:	48 83 ec 10          	sub    $0x10,%rsp
   1805c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   18060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18064:	48 8b 10             	mov    (%rax),%rdx
   18067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1806b:	48 89 d6             	mov    %rdx,%rsi
   1806e:	48 89 c7             	mov    %rax,%rdi
   18071:	e8 28 36 00 00       	call   1b69e <_ZNKSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   18076:	c9                   	leave
   18077:	c3                   	ret

0000000000018078 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   18078:	55                   	push   %rbp
   18079:	48 89 e5             	mov    %rsp,%rbp
   1807c:	48 83 ec 10          	sub    $0x10,%rsp
   18080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18084:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   18088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1808c:	48 89 c7             	mov    %rax,%rdi
   1808f:	e8 1c 36 00 00       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   18094:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18098:	0f 92 c0             	setb   %al
   1809b:	84 c0                	test   %al,%al
   1809d:	74 24                	je     180c3 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1809f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180a3:	48 89 c7             	mov    %rax,%rdi
   180a6:	e8 05 36 00 00       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   180ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   180af:	48 29 c2             	sub    %rax,%rdx
   180b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180b6:	48 89 d6             	mov    %rdx,%rsi
   180b9:	48 89 c7             	mov    %rax,%rdi
   180bc:	e8 13 36 00 00       	call   1b6d4 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm>
      }
   180c1:	eb 38                	jmp    180fb <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   180c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180c7:	48 89 c7             	mov    %rax,%rdi
   180ca:	e8 e1 35 00 00       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   180cf:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   180d3:	0f 92 c0             	setb   %al
   180d6:	84 c0                	test   %al,%al
   180d8:	74 21                	je     180fb <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   180da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180de:	48 8b 00             	mov    (%rax),%rax
   180e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   180e5:	48 c1 e2 03          	shl    $0x3,%rdx
   180e9:	48 01 c2             	add    %rax,%rdx
   180ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180f0:	48 89 d6             	mov    %rdx,%rsi
   180f3:	48 89 c7             	mov    %rax,%rdi
   180f6:	e8 e3 37 00 00       	call   1b8de <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   180fb:	90                   	nop
   180fc:	c9                   	leave
   180fd:	c3                   	ret

00000000000180fe <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   180fe:	55                   	push   %rbp
   180ff:	48 89 e5             	mov    %rsp,%rbp
   18102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18106:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1810a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1810e:	48 8b 00             	mov    (%rax),%rax
   18111:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18115:	48 c1 e2 03          	shl    $0x3,%rdx
   18119:	48 01 d0             	add    %rdx,%rax
      }
   1811c:	5d                   	pop    %rbp
   1811d:	c3                   	ret

000000000001811e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1811e:	55                   	push   %rbp
   1811f:	48 89 e5             	mov    %rsp,%rbp
   18122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18126:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1812a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1812e:	48 8b 00             	mov    (%rax),%rax
   18131:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18135:	48 c1 e2 03          	shl    $0x3,%rdx
   18139:	48 01 d0             	add    %rdx,%rax
      }
   1813c:	5d                   	pop    %rbp
   1813d:	c3                   	ret

000000000001813e <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1813e:	55                   	push   %rbp
   1813f:	48 89 e5             	mov    %rsp,%rbp
   18142:	48 83 ec 10          	sub    $0x10,%rsp
   18146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1814a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1814e:	48 89 c7             	mov    %rax,%rdi
   18151:	e8 e8 37 00 00       	call   1b93e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   18156:	90                   	nop
   18157:	c9                   	leave
   18158:	c3                   	ret
   18159:	90                   	nop

000000000001815a <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1815a:	55                   	push   %rbp
   1815b:	48 89 e5             	mov    %rsp,%rbp
   1815e:	48 83 ec 10          	sub    $0x10,%rsp
   18162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1816a:	48 89 c7             	mov    %rax,%rdi
   1816d:	e8 d8 37 00 00       	call   1b94a <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   18172:	90                   	nop
   18173:	c9                   	leave
   18174:	c3                   	ret
   18175:	90                   	nop

0000000000018176 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   18176:	55                   	push   %rbp
   18177:	48 89 e5             	mov    %rsp,%rbp
   1817a:	53                   	push   %rbx
   1817b:	48 83 ec 38          	sub    $0x38,%rsp
   1817f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18183:	48 89 f0             	mov    %rsi,%rax
   18186:	48 89 d6             	mov    %rdx,%rsi
   18189:	48 89 f2             	mov    %rsi,%rdx
   1818c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   18190:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   18194:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   18198:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1819c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   181a0:	48 89 d6             	mov    %rdx,%rsi
   181a3:	48 89 c7             	mov    %rax,%rdi
   181a6:	e8 ab 37 00 00       	call   1b956 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   181ab:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   181af:	48 89 c7             	mov    %rax,%rdi
   181b2:	e8 d7 37 00 00       	call   1b98e <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   181b7:	48 89 c3             	mov    %rax,%rbx
   181ba:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   181be:	48 89 c7             	mov    %rax,%rdi
   181c1:	e8 b6 37 00 00       	call   1b97c <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   181c6:	48 89 c1             	mov    %rax,%rcx
   181c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181cd:	48 89 da             	mov    %rbx,%rdx
   181d0:	48 89 ce             	mov    %rcx,%rsi
   181d3:	48 89 c7             	mov    %rax,%rdi
   181d6:	e8 19 38 00 00       	call   1b9f4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   181db:	eb 1a                	jmp    181f7 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   181dd:	48 89 c3             	mov    %rax,%rbx
   181e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181e4:	48 89 c7             	mov    %rax,%rdi
   181e7:	e8 8a 03 00 00       	call   18576 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   181ec:	48 89 d8             	mov    %rbx,%rax
   181ef:	48 89 c7             	mov    %rax,%rdi
   181f2:	e8 09 d8 fe ff       	call   5a00 <_Unwind_Resume@plt>
   181f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   181fb:	c9                   	leave
   181fc:	c3                   	ret
   181fd:	90                   	nop

00000000000181fe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   181fe:	55                   	push   %rbp
   181ff:	48 89 e5             	mov    %rsp,%rbp
   18202:	48 83 ec 10          	sub    $0x10,%rsp
   18206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1820a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1820e:	48 89 c7             	mov    %rax,%rdi
   18211:	e8 8e 38 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18216:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1821d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18225:	48 8b 00             	mov    (%rax),%rax
   18228:	48 89 ce             	mov    %rcx,%rsi
   1822b:	48 89 c7             	mov    %rax,%rdi
   1822e:	e8 7f 38 00 00       	call   1bab2 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   18233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18237:	48 89 c7             	mov    %rax,%rdi
   1823a:	e8 37 03 00 00       	call   18576 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   1823f:	90                   	nop
   18240:	c9                   	leave
   18241:	c3                   	ret

0000000000018242 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   18242:	55                   	push   %rbp
   18243:	48 89 e5             	mov    %rsp,%rbp
   18246:	48 83 ec 10          	sub    $0x10,%rsp
   1824a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1824e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18252:	48 89 c7             	mov    %rax,%rdi
   18255:	e8 82 38 00 00       	call   1badc <_ZNSt15__new_allocatorIjEC1Ev>
   1825a:	90                   	nop
   1825b:	c9                   	leave
   1825c:	c3                   	ret
   1825d:	90                   	nop

000000000001825e <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1825e:	55                   	push   %rbp
   1825f:	48 89 e5             	mov    %rsp,%rbp
   18262:	48 83 ec 10          	sub    $0x10,%rsp
   18266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1826a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1826e:	48 89 c7             	mov    %rax,%rdi
   18271:	e8 72 38 00 00       	call   1bae8 <_ZNSt15__new_allocatorIjED1Ev>
   18276:	90                   	nop
   18277:	c9                   	leave
   18278:	c3                   	ret
   18279:	90                   	nop

000000000001827a <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   1827a:	55                   	push   %rbp
   1827b:	48 89 e5             	mov    %rsp,%rbp
   1827e:	53                   	push   %rbx
   1827f:	48 83 ec 38          	sub    $0x38,%rsp
   18283:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18287:	48 89 f0             	mov    %rsi,%rax
   1828a:	48 89 d6             	mov    %rdx,%rsi
   1828d:	48 89 f2             	mov    %rsi,%rdx
   18290:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   18294:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   18298:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1829c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182a0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   182a4:	48 89 d6             	mov    %rdx,%rsi
   182a7:	48 89 c7             	mov    %rax,%rdi
   182aa:	e8 61 38 00 00       	call   1bb10 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   182af:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   182b3:	48 89 c7             	mov    %rax,%rdi
   182b6:	e8 db 38 00 00       	call   1bb96 <_ZNKSt16initializer_listIjE3endEv>
   182bb:	48 89 c3             	mov    %rax,%rbx
   182be:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   182c2:	48 89 c7             	mov    %rax,%rdi
   182c5:	e8 ba 38 00 00       	call   1bb84 <_ZNKSt16initializer_listIjE5beginEv>
   182ca:	48 89 c1             	mov    %rax,%rcx
   182cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182d1:	48 89 da             	mov    %rbx,%rdx
   182d4:	48 89 ce             	mov    %rcx,%rsi
   182d7:	48 89 c7             	mov    %rax,%rdi
   182da:	e8 1d 39 00 00       	call   1bbfc <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   182df:	eb 1a                	jmp    182fb <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   182e1:	48 89 c3             	mov    %rax,%rbx
   182e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   182e8:	48 89 c7             	mov    %rax,%rdi
   182eb:	e8 46 38 00 00       	call   1bb36 <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   182f0:	48 89 d8             	mov    %rbx,%rax
   182f3:	48 89 c7             	mov    %rax,%rdi
   182f6:	e8 05 d7 fe ff       	call   5a00 <_Unwind_Resume@plt>
   182fb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   182ff:	c9                   	leave
   18300:	c3                   	ret
   18301:	90                   	nop

0000000000018302 <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18302:	55                   	push   %rbp
   18303:	48 89 e5             	mov    %rsp,%rbp
   18306:	48 83 ec 10          	sub    $0x10,%rsp
   1830a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1830e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18312:	48 89 c7             	mov    %rax,%rdi
   18315:	e8 92 39 00 00       	call   1bcac <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   1831a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1831d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18321:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18329:	48 8b 00             	mov    (%rax),%rax
   1832c:	48 89 ce             	mov    %rcx,%rsi
   1832f:	48 89 c7             	mov    %rax,%rdi
   18332:	e8 83 39 00 00       	call   1bcba <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   18337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1833b:	48 89 c7             	mov    %rax,%rdi
   1833e:	e8 f3 37 00 00       	call   1bb36 <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   18343:	90                   	nop
   18344:	c9                   	leave
   18345:	c3                   	ret

0000000000018346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18346:	55                   	push   %rbp
   18347:	48 89 e5             	mov    %rsp,%rbp
   1834a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1834e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18352:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1835a:	48 8b 00             	mov    (%rax),%rax
   1835d:	48 29 c2             	sub    %rax,%rdx
   18360:	48 89 d0             	mov    %rdx,%rax
   18363:	48 c1 f8 03          	sar    $0x3,%rax
   18367:	5d                   	pop    %rbp
   18368:	c3                   	ret
   18369:	90                   	nop

000000000001836a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1836a:	55                   	push   %rbp
   1836b:	48 89 e5             	mov    %rsp,%rbp
   1836e:	48 83 ec 10          	sub    $0x10,%rsp
   18372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   18376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1837a:	48 8b 10             	mov    (%rax),%rdx
   1837d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18381:	48 89 d6             	mov    %rdx,%rsi
   18384:	48 89 c7             	mov    %rax,%rdi
   18387:	e8 58 39 00 00       	call   1bce4 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1838c:	c9                   	leave
   1838d:	c3                   	ret

000000000001838e <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1838e:	55                   	push   %rbp
   1838f:	48 89 e5             	mov    %rsp,%rbp
   18392:	48 83 ec 10          	sub    $0x10,%rsp
   18396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1839a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1839e:	48 8b 10             	mov    (%rax),%rdx
   183a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183a5:	48 89 d6             	mov    %rdx,%rsi
   183a8:	48 89 c7             	mov    %rax,%rdi
   183ab:	e8 46 39 00 00       	call   1bcf6 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   183b0:	c9                   	leave
   183b1:	c3                   	ret

00000000000183b2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   183b2:	55                   	push   %rbp
   183b3:	48 89 e5             	mov    %rsp,%rbp
   183b6:	48 83 ec 10          	sub    $0x10,%rsp
   183ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   183be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183c2:	48 89 c7             	mov    %rax,%rdi
   183c5:	e8 1a e7 ff ff       	call   16ae4 <_ZNSaIP13VkImageView_TEC1Ev>
   183ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183ce:	48 89 c7             	mov    %rax,%rdi
   183d1:	e8 32 39 00 00       	call   1bd08 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   183d6:	90                   	nop
   183d7:	c9                   	leave
   183d8:	c3                   	ret
   183d9:	90                   	nop

00000000000183da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   183da:	55                   	push   %rbp
   183db:	48 89 e5             	mov    %rsp,%rbp
   183de:	48 83 ec 10          	sub    $0x10,%rsp
   183e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   183e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
   183ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183f2:	48 8b 00             	mov    (%rax),%rax
   183f5:	48 29 c2             	sub    %rax,%rdx
   183f8:	48 89 d0             	mov    %rdx,%rax
   183fb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   183ff:	48 89 c2             	mov    %rax,%rdx
   18402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18406:	48 8b 08             	mov    (%rax),%rcx
   18409:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1840d:	48 89 ce             	mov    %rcx,%rsi
   18410:	48 89 c7             	mov    %rax,%rdi
   18413:	e8 1e 39 00 00       	call   1bd36 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   18418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1841c:	48 89 c7             	mov    %rax,%rdi
   1841f:	e8 68 d3 ff ff       	call   1578c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   18424:	90                   	nop
   18425:	c9                   	leave
   18426:	c3                   	ret
   18427:	90                   	nop

0000000000018428 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   18428:	55                   	push   %rbp
   18429:	48 89 e5             	mov    %rsp,%rbp
   1842c:	48 83 ec 10          	sub    $0x10,%rsp
   18430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   18434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18438:	48 89 c7             	mov    %rax,%rdi
   1843b:	e8 80 31 ff ff       	call   b5c0 <_ZNSaIP9VkImage_TEC1Ev>
   18440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18444:	48 89 c7             	mov    %rax,%rdi
   18447:	e8 10 57 ff ff       	call   db5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1844c:	90                   	nop
   1844d:	c9                   	leave
   1844e:	c3                   	ret
   1844f:	90                   	nop

0000000000018450 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   18450:	55                   	push   %rbp
   18451:	48 89 e5             	mov    %rsp,%rbp
   18454:	48 83 ec 10          	sub    $0x10,%rsp
   18458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1845c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18460:	48 89 c7             	mov    %rax,%rdi
   18463:	e8 04 39 00 00       	call   1bd6c <_ZNSaIP15VkFramebuffer_TEC1Ev>
   18468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1846c:	48 89 c7             	mov    %rax,%rdi
   1846f:	e8 14 39 00 00       	call   1bd88 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18474:	90                   	nop
   18475:	c9                   	leave
   18476:	c3                   	ret
   18477:	90                   	nop

0000000000018478 <_ZNSaIP15VkFramebuffer_TED1Ev>:
   18478:	55                   	push   %rbp
   18479:	48 89 e5             	mov    %rsp,%rbp
   1847c:	48 83 ec 10          	sub    $0x10,%rsp
   18480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18488:	48 89 c7             	mov    %rax,%rdi
   1848b:	e8 26 39 00 00       	call   1bdb6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   18490:	90                   	nop
   18491:	c9                   	leave
   18492:	c3                   	ret
   18493:	90                   	nop

0000000000018494 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18494:	55                   	push   %rbp
   18495:	48 89 e5             	mov    %rsp,%rbp
   18498:	48 83 ec 10          	sub    $0x10,%rsp
   1849c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   184a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184a4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   184a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184ac:	48 8b 00             	mov    (%rax),%rax
   184af:	48 29 c2             	sub    %rax,%rdx
   184b2:	48 89 d0             	mov    %rdx,%rax
   184b5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   184b9:	48 89 c2             	mov    %rax,%rdx
   184bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184c0:	48 8b 08             	mov    (%rax),%rcx
   184c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184c7:	48 89 ce             	mov    %rcx,%rsi
   184ca:	48 89 c7             	mov    %rax,%rdi
   184cd:	e8 f0 38 00 00       	call   1bdc2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   184d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184d6:	48 89 c7             	mov    %rax,%rdi
   184d9:	e8 74 d3 ff ff       	call   15852 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   184de:	90                   	nop
   184df:	c9                   	leave
   184e0:	c3                   	ret
   184e1:	90                   	nop

00000000000184e2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   184e2:	55                   	push   %rbp
   184e3:	48 89 e5             	mov    %rsp,%rbp
   184e6:	48 83 ec 10          	sub    $0x10,%rsp
   184ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   184ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184f2:	48 89 c7             	mov    %rax,%rdi
   184f5:	e8 fe 38 00 00       	call   1bdf8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   184fa:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   184fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18501:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18509:	48 8b 00             	mov    (%rax),%rax
   1850c:	48 89 ce             	mov    %rcx,%rsi
   1850f:	48 89 c7             	mov    %rax,%rdi
   18512:	e8 ef 38 00 00       	call   1be06 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   18517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1851b:	48 89 c7             	mov    %rax,%rdi
   1851e:	e8 71 ff ff ff       	call   18494 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   18523:	90                   	nop
   18524:	c9                   	leave
   18525:	c3                   	ret

0000000000018526 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   18526:	55                   	push   %rbp
   18527:	48 89 e5             	mov    %rsp,%rbp
   1852a:	48 83 ec 10          	sub    $0x10,%rsp
   1852e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   18532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18536:	48 89 c7             	mov    %rax,%rdi
   18539:	e8 66 f3 fe ff       	call   78a4 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   1853e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18542:	48 89 c7             	mov    %rax,%rdi
   18545:	e8 ec f7 fe ff       	call   7d36 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1854a:	90                   	nop
   1854b:	c9                   	leave
   1854c:	c3                   	ret
   1854d:	90                   	nop

000000000001854e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1854e:	55                   	push   %rbp
   1854f:	48 89 e5             	mov    %rsp,%rbp
   18552:	48 83 ec 10          	sub    $0x10,%rsp
   18556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1855a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1855e:	48 89 c7             	mov    %rax,%rdi
   18561:	e8 d8 fb ff ff       	call   1813e <_ZNSaIP13VkSemaphore_TEC1Ev>
   18566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1856a:	48 89 c7             	mov    %rax,%rdi
   1856d:	e8 be 38 00 00       	call   1be30 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18572:	90                   	nop
   18573:	c9                   	leave
   18574:	c3                   	ret
   18575:	90                   	nop

0000000000018576 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18576:	55                   	push   %rbp
   18577:	48 89 e5             	mov    %rsp,%rbp
   1857a:	48 83 ec 10          	sub    $0x10,%rsp
   1857e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18586:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1858a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1858e:	48 8b 00             	mov    (%rax),%rax
   18591:	48 29 c2             	sub    %rax,%rdx
   18594:	48 89 d0             	mov    %rdx,%rax
   18597:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1859b:	48 89 c2             	mov    %rax,%rdx
   1859e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185a2:	48 8b 08             	mov    (%rax),%rcx
   185a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185a9:	48 89 ce             	mov    %rcx,%rsi
   185ac:	48 89 c7             	mov    %rax,%rdi
   185af:	e8 aa 38 00 00       	call   1be5e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   185b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185b8:	48 89 c7             	mov    %rax,%rdi
   185bb:	e8 1e d3 ff ff       	call   158de <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   185c0:	90                   	nop
   185c1:	c9                   	leave
   185c2:	c3                   	ret
   185c3:	90                   	nop

00000000000185c4 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   185c4:	55                   	push   %rbp
   185c5:	48 89 e5             	mov    %rsp,%rbp
   185c8:	48 83 ec 10          	sub    $0x10,%rsp
   185cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   185d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185d4:	48 89 c7             	mov    %rax,%rdi
   185d7:	e8 b8 38 00 00       	call   1be94 <_ZNSaIP9VkFence_TEC1Ev>
   185dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185e0:	48 89 c7             	mov    %rax,%rdi
   185e3:	e8 c8 38 00 00       	call   1beb0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   185e8:	90                   	nop
   185e9:	c9                   	leave
   185ea:	c3                   	ret
   185eb:	90                   	nop

00000000000185ec <_ZNSaIP9VkFence_TED1Ev>:
   185ec:	55                   	push   %rbp
   185ed:	48 89 e5             	mov    %rsp,%rbp
   185f0:	48 83 ec 10          	sub    $0x10,%rsp
   185f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185fc:	48 89 c7             	mov    %rax,%rdi
   185ff:	e8 da 38 00 00       	call   1bede <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
   18604:	90                   	nop
   18605:	c9                   	leave
   18606:	c3                   	ret
   18607:	90                   	nop

0000000000018608 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18608:	55                   	push   %rbp
   18609:	48 89 e5             	mov    %rsp,%rbp
   1860c:	48 83 ec 10          	sub    $0x10,%rsp
   18610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18618:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1861c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18620:	48 8b 00             	mov    (%rax),%rax
   18623:	48 29 c2             	sub    %rax,%rdx
   18626:	48 89 d0             	mov    %rdx,%rax
   18629:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1862d:	48 89 c2             	mov    %rax,%rdx
   18630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18634:	48 8b 08             	mov    (%rax),%rcx
   18637:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1863b:	48 89 ce             	mov    %rcx,%rsi
   1863e:	48 89 c7             	mov    %rax,%rdi
   18641:	e8 a4 38 00 00       	call   1beea <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   18646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1864a:	48 89 c7             	mov    %rax,%rdi
   1864d:	e8 e0 d2 ff ff       	call   15932 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
   18652:	90                   	nop
   18653:	c9                   	leave
   18654:	c3                   	ret
   18655:	90                   	nop

0000000000018656 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18656:	55                   	push   %rbp
   18657:	48 89 e5             	mov    %rsp,%rbp
   1865a:	48 83 ec 10          	sub    $0x10,%rsp
   1865e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   18662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18666:	48 89 c7             	mov    %rax,%rdi
   18669:	e8 b2 38 00 00       	call   1bf20 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1866e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18675:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1867d:	48 8b 00             	mov    (%rax),%rax
   18680:	48 89 ce             	mov    %rcx,%rsi
   18683:	48 89 c7             	mov    %rax,%rdi
   18686:	e8 a3 38 00 00       	call   1bf2e <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
   1868b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1868f:	48 89 c7             	mov    %rax,%rdi
   18692:	e8 71 ff ff ff       	call   18608 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
   18697:	90                   	nop
   18698:	c9                   	leave
   18699:	c3                   	ret

000000000001869a <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1869a:	55                   	push   %rbp
   1869b:	48 89 e5             	mov    %rsp,%rbp
   1869e:	48 83 ec 10          	sub    $0x10,%rsp
   186a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   186a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186aa:	48 89 c7             	mov    %rax,%rdi
   186ad:	e8 a6 38 00 00       	call   1bf58 <_ZNSaIP10VkBuffer_TEC1Ev>
   186b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186b6:	48 89 c7             	mov    %rax,%rdi
   186b9:	e8 b6 38 00 00       	call   1bf74 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   186be:	90                   	nop
   186bf:	c9                   	leave
   186c0:	c3                   	ret
   186c1:	90                   	nop

00000000000186c2 <_ZNSaIP10VkBuffer_TED1Ev>:
   186c2:	55                   	push   %rbp
   186c3:	48 89 e5             	mov    %rsp,%rbp
   186c6:	48 83 ec 10          	sub    $0x10,%rsp
   186ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186d2:	48 89 c7             	mov    %rax,%rdi
   186d5:	e8 c8 38 00 00       	call   1bfa2 <_ZNSt15__new_allocatorIP10VkBuffer_TED1Ev>
   186da:	90                   	nop
   186db:	c9                   	leave
   186dc:	c3                   	ret
   186dd:	90                   	nop

00000000000186de <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   186de:	55                   	push   %rbp
   186df:	48 89 e5             	mov    %rsp,%rbp
   186e2:	48 83 ec 10          	sub    $0x10,%rsp
   186e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   186ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186ee:	48 8b 50 10          	mov    0x10(%rax),%rdx
   186f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186f6:	48 8b 00             	mov    (%rax),%rax
   186f9:	48 29 c2             	sub    %rax,%rdx
   186fc:	48 89 d0             	mov    %rdx,%rax
   186ff:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   18703:	48 89 c2             	mov    %rax,%rdx
   18706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1870a:	48 8b 08             	mov    (%rax),%rcx
   1870d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18711:	48 89 ce             	mov    %rcx,%rsi
   18714:	48 89 c7             	mov    %rax,%rdi
   18717:	e8 92 38 00 00       	call   1bfae <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1871c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18720:	48 89 c7             	mov    %rax,%rdi
   18723:	e8 e2 d2 ff ff       	call   15a0a <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE12_Vector_implD1Ev>
   18728:	90                   	nop
   18729:	c9                   	leave
   1872a:	c3                   	ret
   1872b:	90                   	nop

000000000001872c <_ZNSt6vectorIP10VkBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1872c:	55                   	push   %rbp
   1872d:	48 89 e5             	mov    %rsp,%rbp
   18730:	48 83 ec 10          	sub    $0x10,%rsp
   18734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   18738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1873c:	48 89 c7             	mov    %rax,%rdi
   1873f:	e8 a0 38 00 00       	call   1bfe4 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   18744:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1874b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1874f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18753:	48 8b 00             	mov    (%rax),%rax
   18756:	48 89 ce             	mov    %rcx,%rsi
   18759:	48 89 c7             	mov    %rax,%rdi
   1875c:	e8 91 38 00 00       	call   1bff2 <_ZSt8_DestroyIPP10VkBuffer_TS1_EvT_S3_RSaIT0_E>
      }
   18761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18765:	48 89 c7             	mov    %rax,%rdi
   18768:	e8 71 ff ff ff       	call   186de <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EED1Ev>
   1876d:	90                   	nop
   1876e:	c9                   	leave
   1876f:	c3                   	ret

0000000000018770 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   18770:	55                   	push   %rbp
   18771:	48 89 e5             	mov    %rsp,%rbp
   18774:	48 83 ec 10          	sub    $0x10,%rsp
   18778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1877c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18780:	48 89 c7             	mov    %rax,%rdi
   18783:	e8 94 38 00 00       	call   1c01c <_ZNSaIP16VkDeviceMemory_TEC1Ev>
   18788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1878c:	48 89 c7             	mov    %rax,%rdi
   1878f:	e8 a4 38 00 00       	call   1c038 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   18794:	90                   	nop
   18795:	c9                   	leave
   18796:	c3                   	ret
   18797:	90                   	nop

0000000000018798 <_ZNSaIP16VkDeviceMemory_TED1Ev>:
   18798:	55                   	push   %rbp
   18799:	48 89 e5             	mov    %rsp,%rbp
   1879c:	48 83 ec 10          	sub    $0x10,%rsp
   187a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187a8:	48 89 c7             	mov    %rax,%rdi
   187ab:	e8 b6 38 00 00       	call   1c066 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TED1Ev>
   187b0:	90                   	nop
   187b1:	c9                   	leave
   187b2:	c3                   	ret
   187b3:	90                   	nop

00000000000187b4 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   187b4:	55                   	push   %rbp
   187b5:	48 89 e5             	mov    %rsp,%rbp
   187b8:	48 83 ec 10          	sub    $0x10,%rsp
   187bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   187c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187c4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   187c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187cc:	48 8b 00             	mov    (%rax),%rax
   187cf:	48 29 c2             	sub    %rax,%rdx
   187d2:	48 89 d0             	mov    %rdx,%rax
   187d5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   187d9:	48 89 c2             	mov    %rax,%rdx
   187dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187e0:	48 8b 08             	mov    (%rax),%rcx
   187e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187e7:	48 89 ce             	mov    %rcx,%rsi
   187ea:	48 89 c7             	mov    %rax,%rdi
   187ed:	e8 80 38 00 00       	call   1c072 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   187f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187f6:	48 89 c7             	mov    %rax,%rdi
   187f9:	e8 60 d2 ff ff       	call   15a5e <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE12_Vector_implD1Ev>
   187fe:	90                   	nop
   187ff:	c9                   	leave
   18800:	c3                   	ret
   18801:	90                   	nop

0000000000018802 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18802:	55                   	push   %rbp
   18803:	48 89 e5             	mov    %rsp,%rbp
   18806:	48 83 ec 10          	sub    $0x10,%rsp
   1880a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1880e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18812:	48 89 c7             	mov    %rax,%rdi
   18815:	e8 8e 38 00 00       	call   1c0a8 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1881a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1881d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18821:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18825:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18829:	48 8b 00             	mov    (%rax),%rax
   1882c:	48 89 ce             	mov    %rcx,%rsi
   1882f:	48 89 c7             	mov    %rax,%rdi
   18832:	e8 7f 38 00 00       	call   1c0b6 <_ZSt8_DestroyIPP16VkDeviceMemory_TS1_EvT_S3_RSaIT0_E>
      }
   18837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1883b:	48 89 c7             	mov    %rax,%rdi
   1883e:	e8 71 ff ff ff       	call   187b4 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EED1Ev>
   18843:	90                   	nop
   18844:	c9                   	leave
   18845:	c3                   	ret

0000000000018846 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   18846:	55                   	push   %rbp
   18847:	48 89 e5             	mov    %rsp,%rbp
   1884a:	48 83 ec 10          	sub    $0x10,%rsp
   1884e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   18852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18856:	48 89 c7             	mov    %rax,%rdi
   18859:	e8 82 38 00 00       	call   1c0e0 <_ZNSaIP17VkDescriptorSet_TEC1Ev>
   1885e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18862:	48 89 c7             	mov    %rax,%rdi
   18865:	e8 92 38 00 00       	call   1c0fc <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1886a:	90                   	nop
   1886b:	c9                   	leave
   1886c:	c3                   	ret
   1886d:	90                   	nop

000000000001886e <_ZNSaIP17VkDescriptorSet_TED1Ev>:
   1886e:	55                   	push   %rbp
   1886f:	48 89 e5             	mov    %rsp,%rbp
   18872:	48 83 ec 10          	sub    $0x10,%rsp
   18876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1887a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1887e:	48 89 c7             	mov    %rax,%rdi
   18881:	e8 a4 38 00 00       	call   1c12a <_ZNSt15__new_allocatorIP17VkDescriptorSet_TED1Ev>
   18886:	90                   	nop
   18887:	c9                   	leave
   18888:	c3                   	ret
   18889:	90                   	nop

000000000001888a <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1888a:	55                   	push   %rbp
   1888b:	48 89 e5             	mov    %rsp,%rbp
   1888e:	48 83 ec 10          	sub    $0x10,%rsp
   18892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1889a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1889e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188a2:	48 8b 00             	mov    (%rax),%rax
   188a5:	48 29 c2             	sub    %rax,%rdx
   188a8:	48 89 d0             	mov    %rdx,%rax
   188ab:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   188af:	48 89 c2             	mov    %rax,%rdx
   188b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188b6:	48 8b 08             	mov    (%rax),%rcx
   188b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188bd:	48 89 ce             	mov    %rcx,%rsi
   188c0:	48 89 c7             	mov    %rax,%rdi
   188c3:	e8 6e 38 00 00       	call   1c136 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   188c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188cc:	48 89 c7             	mov    %rax,%rdi
   188cf:	e8 de d1 ff ff       	call   15ab2 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE12_Vector_implD1Ev>
   188d4:	90                   	nop
   188d5:	c9                   	leave
   188d6:	c3                   	ret
   188d7:	90                   	nop

00000000000188d8 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   188d8:	55                   	push   %rbp
   188d9:	48 89 e5             	mov    %rsp,%rbp
   188dc:	48 83 ec 10          	sub    $0x10,%rsp
   188e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   188e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188e8:	48 89 c7             	mov    %rax,%rdi
   188eb:	e8 7c 38 00 00       	call   1c16c <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>
   188f0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   188f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188f7:	48 8b 48 08          	mov    0x8(%rax),%rcx
   188fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188ff:	48 8b 00             	mov    (%rax),%rax
   18902:	48 89 ce             	mov    %rcx,%rsi
   18905:	48 89 c7             	mov    %rax,%rdi
   18908:	e8 6d 38 00 00       	call   1c17a <_ZSt8_DestroyIPP17VkDescriptorSet_TS1_EvT_S3_RSaIT0_E>
      }
   1890d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18911:	48 89 c7             	mov    %rax,%rdi
   18914:	e8 71 ff ff ff       	call   1888a <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EED1Ev>
   18919:	90                   	nop
   1891a:	c9                   	leave
   1891b:	c3                   	ret

000000000001891c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   1891c:	55                   	push   %rbp
   1891d:	48 89 e5             	mov    %rsp,%rbp
   18920:	48 83 ec 20          	sub    $0x20,%rsp
   18924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18928:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1892c:	89 d0                	mov    %edx,%eax
   1892e:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   18931:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   18935:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18939:	be 01 00 00 00       	mov    $0x1,%esi
   1893e:	48 89 c7             	mov    %rax,%rdi
   18941:	e8 7a cc fe ff       	call   55c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   18946:	48 89 c7             	mov    %rax,%rdi
   18949:	e8 2d d2 ff ff       	call   15b7b <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1894e:	48 89 c2             	mov    %rax,%rdx
   18951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18955:	48 89 d6             	mov    %rdx,%rsi
   18958:	48 89 c7             	mov    %rax,%rdi
   1895b:	e8 70 c9 fe ff       	call   52d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   18960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18964:	c9                   	leave
   18965:	c3                   	ret

0000000000018966 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   18966:	55                   	push   %rbp
   18967:	48 89 e5             	mov    %rsp,%rbp
   1896a:	48 83 ec 20          	sub    $0x20,%rsp
   1896e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   18972:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18976:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1897a:	48 89 d6             	mov    %rdx,%rsi
   1897d:	48 89 c7             	mov    %rax,%rdi
   18980:	e8 1f 38 00 00       	call   1c1a4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   18985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18989:	c9                   	leave
   1898a:	c3                   	ret
   1898b:	90                   	nop

000000000001898c <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   1898c:	55                   	push   %rbp
   1898d:	48 89 e5             	mov    %rsp,%rbp
   18990:	48 83 ec 20          	sub    $0x20,%rsp
   18994:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   18998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1899c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   189a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   189a4:	48 89 d6             	mov    %rdx,%rsi
   189a7:	48 89 c7             	mov    %rax,%rdi
   189aa:	e8 f5 37 00 00       	call   1c1a4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   189af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189b3:	c9                   	leave
   189b4:	c3                   	ret

00000000000189b5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   189b5:	55                   	push   %rbp
   189b6:	48 89 e5             	mov    %rsp,%rbp
   189b9:	53                   	push   %rbx
   189ba:	48 83 ec 18          	sub    $0x18,%rsp
   189be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   189c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   189c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   189ca:	48 89 c7             	mov    %rax,%rdi
   189cd:	e8 f0 37 00 00       	call   1c1c2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   189d2:	48 8b 18             	mov    (%rax),%rbx
   189d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   189d9:	48 89 c7             	mov    %rax,%rdi
   189dc:	e8 e1 37 00 00       	call   1c1c2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   189e1:	48 8b 00             	mov    (%rax),%rax
   189e4:	48 39 c3             	cmp    %rax,%rbx
   189e7:	0f 95 c0             	setne  %al
   189ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   189ee:	c9                   	leave
   189ef:	c3                   	ret

00000000000189f0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   189f0:	55                   	push   %rbp
   189f1:	48 89 e5             	mov    %rsp,%rbp
   189f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   189f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189fc:	48 8b 00             	mov    (%rax),%rax
   189ff:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a07:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   18a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   18a0e:	5d                   	pop    %rbp
   18a0f:	c3                   	ret

0000000000018a10 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   18a10:	55                   	push   %rbp
   18a11:	48 89 e5             	mov    %rsp,%rbp
   18a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   18a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a1c:	48 8b 00             	mov    (%rax),%rax
   18a1f:	5d                   	pop    %rbp
   18a20:	c3                   	ret
   18a21:	90                   	nop

0000000000018a22 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
   18a22:	55                   	push   %rbp
   18a23:	48 89 e5             	mov    %rsp,%rbp
   18a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18a36:	48 89 10             	mov    %rdx,(%rax)
   18a39:	90                   	nop
   18a3a:	5d                   	pop    %rbp
   18a3b:	c3                   	ret

0000000000018a3c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
   18a3c:	55                   	push   %rbp
   18a3d:	48 89 e5             	mov    %rsp,%rbp
   18a40:	48 83 ec 10          	sub    $0x10,%rsp
   18a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a4c:	48 8b 00             	mov    (%rax),%rax
   18a4f:	48 85 c0             	test   %rax,%rax
   18a52:	74 0f                	je     18a63 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
   18a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a58:	48 8b 00             	mov    (%rax),%rax
   18a5b:	48 89 c7             	mov    %rax,%rdi
   18a5e:	e8 5d cc fe ff       	call   56c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
   18a63:	90                   	nop
   18a64:	c9                   	leave
   18a65:	c3                   	ret

0000000000018a66 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
   18a66:	55                   	push   %rbp
   18a67:	48 89 e5             	mov    %rsp,%rbp
   18a6a:	48 83 ec 40          	sub    $0x40,%rsp
   18a6e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18a72:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18a76:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
   18a7a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18a7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18a82:	48 89 d6             	mov    %rdx,%rsi
   18a85:	48 89 c7             	mov    %rax,%rdi
   18a88:	e8 43 37 00 00       	call   1c1d0 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   18a8d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
   18a91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18a95:	48 83 f8 0f          	cmp    $0xf,%rax
   18a99:	76 3f                	jbe    18ada <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
   18a9b:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
   18a9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18aa3:	ba 00 00 00 00       	mov    $0x0,%edx
   18aa8:	48 89 ce             	mov    %rcx,%rsi
   18aab:	48 89 c7             	mov    %rax,%rdi
   18aae:	e8 7d cf fe ff       	call   5a30 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
   18ab3:	48 89 c2             	mov    %rax,%rdx
   18ab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18aba:	48 89 d6             	mov    %rdx,%rsi
   18abd:	48 89 c7             	mov    %rax,%rdi
   18ac0:	e8 6b c9 fe ff       	call   5430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
   18ac5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18ac9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18acd:	48 89 d6             	mov    %rdx,%rsi
   18ad0:	48 89 c7             	mov    %rax,%rdi
   18ad3:	e8 f8 cf fe ff       	call   5ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
   18ad8:	eb 15                	jmp    18aef <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
   18ada:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18ade:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
   18ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ae6:	48 89 c7             	mov    %rax,%rdi
   18ae9:	e8 d2 c8 fe ff       	call   53c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
   18aee:	90                   	nop
	} __guard(this);
   18aef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18af3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   18af7:	48 89 d6             	mov    %rdx,%rsi
   18afa:	48 89 c7             	mov    %rax,%rdi
   18afd:	e8 20 ff ff ff       	call   18a22 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>
	this->_S_copy_chars(_M_data(), __beg, __end);
   18b02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18b06:	48 89 c7             	mov    %rax,%rdi
   18b09:	e8 f2 ca fe ff       	call   5600 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
   18b0e:	48 89 c1             	mov    %rax,%rcx
   18b11:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18b15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18b19:	48 89 c6             	mov    %rax,%rsi
   18b1c:	48 89 cf             	mov    %rcx,%rdi
   18b1f:	e8 fc ca fe ff       	call   5620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>
	__guard._M_guarded = 0;
   18b24:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   18b2b:	00 
	_M_set_length(__dnew);
   18b2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18b30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18b34:	48 89 d6             	mov    %rdx,%rsi
   18b37:	48 89 c7             	mov    %rax,%rdi
   18b3a:	e8 d1 c7 fe ff       	call   5310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
   18b3f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   18b43:	48 89 c7             	mov    %rax,%rdi
   18b46:	e8 f1 fe ff ff       	call   18a3c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
   18b4b:	c9                   	leave
   18b4c:	c3                   	ret
   18b4d:	90                   	nop

0000000000018b4e <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1Ef>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(T scalar)
   18b4e:	55                   	push   %rbp
   18b4f:	48 89 e5             	mov    %rsp,%rbp
   18b52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b56:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
		: x(scalar), y(scalar), z(scalar), w(scalar)
   18b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b5f:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   18b64:	f3 0f 11 00          	movss  %xmm0,(%rax)
   18b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b6c:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   18b71:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
   18b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b7a:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   18b7f:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
   18b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b88:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   18b8d:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
	{}
   18b92:	90                   	nop
   18b93:	5d                   	pop    %rbp
   18b94:	c3                   	ret
   18b95:	90                   	nop

0000000000018b96 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEmLIfEERS2_T_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(U scalar)
   18b96:	55                   	push   %rbp
   18b97:	48 89 e5             	mov    %rsp,%rbp
   18b9a:	48 83 ec 20          	sub    $0x20,%rsp
   18b9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18ba2:	f3 0f 11 45 e4       	movss  %xmm0,-0x1c(%rbp)
		return (*this = detail::compute_vec4_mul<T, Q, detail::is_aligned<Q>::value>::call(*this, vec<4, T, Q>(scalar)));
   18ba7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   18baa:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   18bae:	66 0f 6e c2          	movd   %edx,%xmm0
   18bb2:	48 89 c7             	mov    %rax,%rdi
   18bb5:	e8 94 ff ff ff       	call   18b4e <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1Ef>
   18bba:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   18bbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18bc2:	48 89 d6             	mov    %rdx,%rsi
   18bc5:	48 89 c7             	mov    %rax,%rdi
   18bc8:	e8 34 36 00 00       	call   1c201 <_ZN3glm6detail16compute_vec4_mulIfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi4EfLS2_0EEES7_>
   18bcd:	66 48 0f 7e c2       	movq   %xmm0,%rdx
   18bd2:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   18bd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18bda:	48 89 10             	mov    %rdx,(%rax)
   18bdd:	66 0f d6 40 08       	movq   %xmm0,0x8(%rax)
   18be2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   18be6:	c9                   	leave
   18be7:	c3                   	ret

0000000000018be8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   18be8:	55                   	push   %rbp
   18be9:	48 89 e5             	mov    %rsp,%rbp
   18bec:	48 83 ec 10          	sub    $0x10,%rsp
   18bf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18bf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   18bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bfc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c00:	48 89 d6             	mov    %rdx,%rsi
   18c03:	48 89 c7             	mov    %rax,%rdi
   18c06:	e8 31 3e ff ff       	call   ca3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   18c0b:	90                   	nop
   18c0c:	c9                   	leave
   18c0d:	c3                   	ret

0000000000018c0e <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
   18c0e:	55                   	push   %rbp
   18c0f:	48 89 e5             	mov    %rsp,%rbp
   18c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c1a:	48 8b 00             	mov    (%rax),%rax
   18c1d:	5d                   	pop    %rbp
   18c1e:	c3                   	ret
   18c1f:	90                   	nop

0000000000018c20 <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
   18c20:	55                   	push   %rbp
   18c21:	48 89 e5             	mov    %rsp,%rbp
   18c24:	53                   	push   %rbx
   18c25:	48 83 ec 18          	sub    $0x18,%rsp
   18c29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18c2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c31:	48 89 c7             	mov    %rax,%rdi
   18c34:	e8 d5 ff ff ff       	call   18c0e <_ZNKSt16initializer_listIPKcE5beginEv>
   18c39:	48 89 c3             	mov    %rax,%rbx
   18c3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c40:	48 89 c7             	mov    %rax,%rdi
   18c43:	e8 62 36 00 00       	call   1c2aa <_ZNKSt16initializer_listIPKcE4sizeEv>
   18c48:	48 c1 e0 03          	shl    $0x3,%rax
   18c4c:	48 01 d8             	add    %rbx,%rax
   18c4f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18c53:	c9                   	leave
   18c54:	c3                   	ret

0000000000018c55 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   18c55:	55                   	push   %rbp
   18c56:	48 89 e5             	mov    %rsp,%rbp
   18c59:	48 83 ec 10          	sub    $0x10,%rsp
   18c5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   18c65:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18c69:	48 89 c7             	mov    %rax,%rdi
   18c6c:	e8 4b 36 00 00       	call   1c2bc <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   18c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18c79:	48 89 d6             	mov    %rdx,%rsi
   18c7c:	48 89 c7             	mov    %rax,%rdi
   18c7f:	e8 43 36 00 00       	call   1c2c7 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   18c84:	c9                   	leave
   18c85:	c3                   	ret

0000000000018c86 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   18c86:	55                   	push   %rbp
   18c87:	48 89 e5             	mov    %rsp,%rbp
   18c8a:	53                   	push   %rbx
   18c8b:	48 83 ec 38          	sub    $0x38,%rsp
   18c8f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   18c93:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   18c97:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   18c9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18c9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18ca3:	48 89 d6             	mov    %rdx,%rsi
   18ca6:	48 89 c7             	mov    %rax,%rdi
   18ca9:	e8 a7 ff ff ff       	call   18c55 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   18cae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   18cb2:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   18cb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18cba:	48 89 c7             	mov    %rax,%rdi
   18cbd:	e8 f0 2e ff ff       	call   bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   18cc2:	48 89 c2             	mov    %rax,%rdx
   18cc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18cc9:	48 89 d6             	mov    %rdx,%rsi
   18ccc:	48 89 c7             	mov    %rax,%rdi
   18ccf:	e8 df 2d ff ff       	call   bab3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   18cd4:	48 89 c6             	mov    %rax,%rsi
   18cd7:	48 89 df             	mov    %rbx,%rdi
   18cda:	e8 e9 48 ff ff       	call   d5c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   18cdf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18ce3:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   18ce6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18cea:	48 8b 00             	mov    (%rax),%rax
   18ced:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18cf1:	48 c1 e2 03          	shl    $0x3,%rdx
   18cf5:	48 01 c2             	add    %rax,%rdx
   18cf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18cfc:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   18d00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d04:	48 89 c7             	mov    %rax,%rdi
   18d07:	e8 a6 2e ff ff       	call   bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   18d0c:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   18d0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d13:	48 8b 10             	mov    (%rax),%rdx
   18d16:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   18d1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18d1e:	48 89 c7             	mov    %rax,%rdi
   18d21:	e8 bb 35 00 00       	call   1c2e1 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   18d26:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   18d2a:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   18d2e:	90                   	nop
   18d2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18d33:	c9                   	leave
   18d34:	c3                   	ret

0000000000018d35 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   18d35:	55                   	push   %rbp
   18d36:	48 89 e5             	mov    %rsp,%rbp
   18d39:	48 83 ec 20          	sub    $0x20,%rsp
   18d3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18d45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   18d49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d51:	48 89 d6             	mov    %rdx,%rsi
   18d54:	48 89 c7             	mov    %rax,%rdi
   18d57:	e8 b6 35 00 00       	call   1c312 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   18d5c:	90                   	nop
   18d5d:	c9                   	leave
   18d5e:	c3                   	ret
   18d5f:	90                   	nop

0000000000018d60 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   18d60:	55                   	push   %rbp
   18d61:	48 89 e5             	mov    %rsp,%rbp
   18d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18d68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   18d6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18d70:	48 8b 10             	mov    (%rax),%rdx
   18d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d77:	48 89 10             	mov    %rdx,(%rax)
   18d7a:	90                   	nop
   18d7b:	5d                   	pop    %rbp
   18d7c:	c3                   	ret
   18d7d:	90                   	nop

0000000000018d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   18d7e:	55                   	push   %rbp
   18d7f:	48 89 e5             	mov    %rsp,%rbp
   18d82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   18d86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d8a:	5d                   	pop    %rbp
   18d8b:	c3                   	ret

0000000000018d8c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18d8c:	55                   	push   %rbp
   18d8d:	48 89 e5             	mov    %rsp,%rbp
   18d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d98:	5d                   	pop    %rbp
   18d99:	c3                   	ret

0000000000018d9a <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   18d9a:	55                   	push   %rbp
   18d9b:	48 89 e5             	mov    %rsp,%rbp
   18d9e:	48 83 ec 20          	sub    $0x20,%rsp
   18da2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18da6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18daa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   18dae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18db2:	48 89 c7             	mov    %rax,%rdi
   18db5:	e8 d2 ff ff ff       	call   18d8c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   18dba:	48 89 c2             	mov    %rax,%rdx
   18dbd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18dc5:	48 89 ce             	mov    %rcx,%rsi
   18dc8:	48 89 c7             	mov    %rax,%rdi
   18dcb:	e8 68 35 00 00       	call   1c338 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   18dd0:	90                   	nop
   18dd1:	c9                   	leave
   18dd2:	c3                   	ret
   18dd3:	90                   	nop

0000000000018dd4 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   18dd4:	55                   	push   %rbp
   18dd5:	48 89 e5             	mov    %rsp,%rbp
   18dd8:	53                   	push   %rbx
   18dd9:	48 83 ec 68          	sub    $0x68,%rsp
   18ddd:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   18de1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   18de5:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   18de9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18ded:	48 8d 15 72 da 00 00 	lea    0xda72(%rip),%rdx        # 26866 <_ZZN9VulkanApp6renderEvE11submitCount+0x54a>
   18df4:	be 01 00 00 00       	mov    $0x1,%esi
   18df9:	48 89 c7             	mov    %rax,%rdi
   18dfc:	e8 79 35 00 00       	call   1c37a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   18e01:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   18e05:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18e09:	48 8b 00             	mov    (%rax),%rax
   18e0c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   18e10:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18e14:	48 8b 40 08          	mov    0x8(%rax),%rax
   18e18:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   18e1c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18e20:	48 89 c7             	mov    %rax,%rdi
   18e23:	e8 ce ce ff ff       	call   15cf6 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   18e28:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   18e2c:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   18e30:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   18e34:	48 89 d6             	mov    %rdx,%rsi
   18e37:	48 89 c7             	mov    %rax,%rdi
   18e3a:	e8 03 36 00 00       	call   1c442 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   18e3f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   18e43:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18e47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18e4b:	48 89 d6             	mov    %rdx,%rsi
   18e4e:	48 89 c7             	mov    %rax,%rdi
   18e51:	e8 72 47 ff ff       	call   d5c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   18e56:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   18e5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18e5e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   18e62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   18e66:	48 89 c7             	mov    %rax,%rdi
   18e69:	e8 1e ff ff ff       	call   18d8c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   18e6e:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   18e71:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18e75:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   18e7c:	00 
	  _Alloc_traits::construct(this->_M_impl,
   18e7d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18e81:	48 01 c1             	add    %rax,%rcx
   18e84:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18e88:	48 89 ce             	mov    %rcx,%rsi
   18e8b:	48 89 c7             	mov    %rax,%rdi
   18e8e:	e8 07 ff ff ff       	call   18d9a <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   18e93:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   18e9a:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   18e9b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18e9f:	48 89 c7             	mov    %rax,%rdi
   18ea2:	e8 0b 2d ff ff       	call   bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   18ea7:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   18eaa:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   18eae:	48 89 c7             	mov    %rax,%rdi
   18eb1:	e8 c8 fe ff ff       	call   18d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   18eb6:	48 8b 30             	mov    (%rax),%rsi
   18eb9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18ebd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18ec1:	48 89 d9             	mov    %rbx,%rcx
   18ec4:	48 89 c7             	mov    %rax,%rdi
   18ec7:	e8 b8 35 00 00       	call   1c484 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   18ecc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   18ed0:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   18ed5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18ed9:	48 89 c7             	mov    %rax,%rdi
   18edc:	e8 d1 2c ff ff       	call   bbb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   18ee1:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   18ee4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   18ee8:	48 89 c7             	mov    %rax,%rdi
   18eeb:	e8 8e fe ff ff       	call   18d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   18ef0:	48 8b 00             	mov    (%rax),%rax
   18ef3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   18ef7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   18efb:	48 89 d9             	mov    %rbx,%rcx
   18efe:	48 89 c7             	mov    %rax,%rdi
   18f01:	e8 7e 35 00 00       	call   1c484 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   18f06:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   18f0a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   18f0e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   18f12:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   18f16:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   18f1a:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   18f1e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18f22:	48 89 ce             	mov    %rcx,%rsi
   18f25:	48 89 c7             	mov    %rax,%rdi
   18f28:	e8 b9 2c ff ff       	call   bbe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   18f2d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18f31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   18f35:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   18f38:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18f3c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   18f40:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   18f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f48:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18f4f:	00 
   18f50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18f54:	48 01 c2             	add    %rax,%rdx
   18f57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18f5b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   18f5f:	90                   	nop
   18f60:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18f64:	c9                   	leave
   18f65:	c3                   	ret

0000000000018f66 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   18f66:	55                   	push   %rbp
   18f67:	48 89 e5             	mov    %rsp,%rbp
   18f6a:	48 83 ec 20          	sub    $0x20,%rsp
   18f6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   18f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f76:	48 89 c7             	mov    %rax,%rdi
   18f79:	e8 9e cd ff ff       	call   15d1c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   18f7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18f82:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18f86:	be 01 00 00 00       	mov    $0x1,%esi
   18f8b:	48 89 c7             	mov    %rax,%rdi
   18f8e:	e8 23 35 00 00       	call   1c4b6 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   18f93:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18f97:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   18f9b:	48 89 c7             	mov    %rax,%rdi
   18f9e:	e8 fd cd ff ff       	call   15da0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   18fa3:	c9                   	leave
   18fa4:	c3                   	ret
   18fa5:	90                   	nop

0000000000018fa6 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   18fa6:	55                   	push   %rbp
   18fa7:	48 89 e5             	mov    %rsp,%rbp
   18faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   18fb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18fb6:	5d                   	pop    %rbp
   18fb7:	c3                   	ret

0000000000018fb8 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18fb8:	55                   	push   %rbp
   18fb9:	48 89 e5             	mov    %rsp,%rbp
   18fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fc4:	5d                   	pop    %rbp
   18fc5:	c3                   	ret

0000000000018fc6 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18fc6:	55                   	push   %rbp
   18fc7:	48 89 e5             	mov    %rsp,%rbp
   18fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fd2:	5d                   	pop    %rbp
   18fd3:	c3                   	ret

0000000000018fd4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18fd4:	55                   	push   %rbp
   18fd5:	48 89 e5             	mov    %rsp,%rbp
   18fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18fdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fe0:	5d                   	pop    %rbp
   18fe1:	c3                   	ret

0000000000018fe2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   18fe2:	55                   	push   %rbp
   18fe3:	48 89 e5             	mov    %rsp,%rbp
   18fe6:	48 83 ec 20          	sub    $0x20,%rsp
   18fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fee:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   18ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ff6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ffa:	48 89 d6             	mov    %rdx,%rsi
   18ffd:	48 89 c7             	mov    %rax,%rdi
   19000:	e8 f3 34 00 00       	call   1c4f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   19005:	90                   	nop
   19006:	c9                   	leave
   19007:	c3                   	ret

0000000000019008 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   19008:	55                   	push   %rbp
   19009:	48 89 e5             	mov    %rsp,%rbp
   1900c:	53                   	push   %rbx
   1900d:	48 83 ec 18          	sub    $0x18,%rsp
   19011:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19015:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   19019:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1901d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19021:	48 89 c7             	mov    %rax,%rdi
   19024:	e8 ab ff ff ff       	call   18fd4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   19029:	48 89 c6             	mov    %rax,%rsi
   1902c:	48 89 df             	mov    %rbx,%rdi
   1902f:	e8 ae ff ff ff       	call   18fe2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   19034:	90                   	nop
   19035:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19039:	c9                   	leave
   1903a:	c3                   	ret
   1903b:	90                   	nop

000000000001903c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1903c:	55                   	push   %rbp
   1903d:	48 89 e5             	mov    %rsp,%rbp
   19040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19044:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   19048:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1904c:	48 8b 10             	mov    (%rax),%rdx
   1904f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19053:	48 89 10             	mov    %rdx,(%rax)
   19056:	90                   	nop
   19057:	5d                   	pop    %rbp
   19058:	c3                   	ret
   19059:	90                   	nop

000000000001905a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1905a:	55                   	push   %rbp
   1905b:	48 89 e5             	mov    %rsp,%rbp
   1905e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   19062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19066:	5d                   	pop    %rbp
   19067:	c3                   	ret

0000000000019068 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   19068:	55                   	push   %rbp
   19069:	48 89 e5             	mov    %rsp,%rbp
   1906c:	53                   	push   %rbx
   1906d:	48 83 ec 18          	sub    $0x18,%rsp
   19071:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19075:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   19079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1907d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   19081:	84 c0                	test   %al,%al
   19083:	74 35                	je     190ba <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   19085:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19089:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1908d:	84 c0                	test   %al,%al
   1908f:	74 29                	je     190ba <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   19091:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19095:	48 89 c7             	mov    %rax,%rdi
   19098:	e8 97 34 00 00       	call   1c534 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1909d:	48 89 c3             	mov    %rax,%rbx
   190a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190a4:	48 89 c7             	mov    %rax,%rdi
   190a7:	e8 4e 00 00 00       	call   190fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   190ac:	48 89 de             	mov    %rbx,%rsi
   190af:	48 89 c7             	mov    %rax,%rdi
   190b2:	e8 8b 34 00 00       	call   1c542 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   190b7:	90                   	nop
      }
   190b8:	eb 38                	jmp    190f2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   190ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190be:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   190c2:	84 c0                	test   %al,%al
   190c4:	74 20                	je     190e6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   190c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   190ca:	48 89 c7             	mov    %rax,%rdi
   190cd:	e8 62 34 00 00       	call   1c534 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   190d2:	48 89 c2             	mov    %rax,%rdx
   190d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190d9:	48 89 d6             	mov    %rdx,%rsi
   190dc:	48 89 c7             	mov    %rax,%rdi
   190df:	e8 9c 34 00 00       	call   1c580 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   190e4:	eb 0c                	jmp    190f2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   190e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   190ea:	48 89 c7             	mov    %rax,%rdi
   190ed:	e8 d4 34 00 00       	call   1c5c6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   190f2:	90                   	nop
   190f3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   190f7:	c9                   	leave
   190f8:	c3                   	ret
   190f9:	90                   	nop

00000000000190fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   190fa:	55                   	push   %rbp
   190fb:	48 89 e5             	mov    %rsp,%rbp
   190fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   19102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19106:	5d                   	pop    %rbp
   19107:	c3                   	ret

0000000000019108 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   19108:	55                   	push   %rbp
   19109:	48 89 e5             	mov    %rsp,%rbp
   1910c:	48 83 ec 10          	sub    $0x10,%rsp
   19110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19118:	48 89 c7             	mov    %rax,%rdi
   1911b:	e8 ce 34 00 00       	call   1c5ee <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   19120:	90                   	nop
   19121:	c9                   	leave
   19122:	c3                   	ret
   19123:	90                   	nop

0000000000019124 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   19124:	55                   	push   %rbp
   19125:	48 89 e5             	mov    %rsp,%rbp
   19128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   1912c:	90                   	nop
   1912d:	5d                   	pop    %rbp
   1912e:	c3                   	ret
   1912f:	90                   	nop

0000000000019130 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   19130:	55                   	push   %rbp
   19131:	48 89 e5             	mov    %rsp,%rbp
   19134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19138:	90                   	nop
   19139:	5d                   	pop    %rbp
   1913a:	c3                   	ret
   1913b:	90                   	nop

000000000001913c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1913c:	55                   	push   %rbp
   1913d:	48 89 e5             	mov    %rsp,%rbp
   19140:	48 83 ec 20          	sub    $0x20,%rsp
   19144:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19148:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1914c:	eb 49                	jmp    19197 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1914e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19152:	48 89 c7             	mov    %rax,%rdi
   19155:	e8 9f 34 00 00       	call   1c5f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1915a:	48 89 c2             	mov    %rax,%rdx
   1915d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19161:	48 89 d6             	mov    %rdx,%rsi
   19164:	48 89 c7             	mov    %rax,%rdi
   19167:	e8 d0 ff ff ff       	call   1913c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   1916c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19170:	48 89 c7             	mov    %rax,%rdi
   19173:	e8 93 34 00 00       	call   1c60b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   19178:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   1917c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19180:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19184:	48 89 d6             	mov    %rdx,%rsi
   19187:	48 89 c7             	mov    %rax,%rdi
   1918a:	e8 8f 34 00 00       	call   1c61e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   1918f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19193:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   19197:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1919c:	75 b0                	jne    1914e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   1919e:	90                   	nop
   1919f:	90                   	nop
   191a0:	c9                   	leave
   191a1:	c3                   	ret

00000000000191a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   191a2:	55                   	push   %rbp
   191a3:	48 89 e5             	mov    %rsp,%rbp
   191a6:	48 83 ec 10          	sub    $0x10,%rsp
   191aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   191ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191b2:	48 89 c7             	mov    %rax,%rdi
   191b5:	e8 9e 34 00 00       	call   1c658 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   191ba:	c9                   	leave
   191bb:	c3                   	ret

00000000000191bc <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   191bc:	55                   	push   %rbp
   191bd:	48 89 e5             	mov    %rsp,%rbp
   191c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   191c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   191c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   191cc:	48 8b 10             	mov    (%rax),%rdx
   191cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191d3:	48 89 10             	mov    %rdx,(%rax)
   191d6:	90                   	nop
   191d7:	5d                   	pop    %rbp
   191d8:	c3                   	ret
   191d9:	90                   	nop

00000000000191da <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   191da:	55                   	push   %rbp
   191db:	48 89 e5             	mov    %rsp,%rbp
   191de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   191e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191e6:	5d                   	pop    %rbp
   191e7:	c3                   	ret

00000000000191e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   191e8:	55                   	push   %rbp
   191e9:	48 89 e5             	mov    %rsp,%rbp
   191ec:	48 83 ec 10          	sub    $0x10,%rsp
   191f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   191f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   191f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19200:	48 89 d6             	mov    %rdx,%rsi
   19203:	48 89 c7             	mov    %rax,%rdi
   19206:	e8 5f 34 00 00       	call   1c66a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   1920b:	c9                   	leave
   1920c:	c3                   	ret
   1920d:	90                   	nop

000000000001920e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1920e:	55                   	push   %rbp
   1920f:	48 89 e5             	mov    %rsp,%rbp
   19212:	48 83 ec 10          	sub    $0x10,%rsp
   19216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1921a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1921e:	48 89 c7             	mov    %rax,%rdi
   19221:	e8 90 34 00 00       	call   1c6b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   19226:	c9                   	leave
   19227:	c3                   	ret

0000000000019228 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   19228:	55                   	push   %rbp
   19229:	48 89 e5             	mov    %rsp,%rbp
   1922c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19230:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   19234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19238:	48 8b 10             	mov    (%rax),%rdx
   1923b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1923f:	48 8b 00             	mov    (%rax),%rax
   19242:	48 39 c2             	cmp    %rax,%rdx
   19245:	0f 94 c0             	sete   %al
   19248:	5d                   	pop    %rbp
   19249:	c3                   	ret

000000000001924a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   1924a:	55                   	push   %rbp
   1924b:	48 89 e5             	mov    %rsp,%rbp
   1924e:	48 83 ec 10          	sub    $0x10,%rsp
   19252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   19256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1925a:	48 89 c7             	mov    %rax,%rdi
   1925d:	e8 7e 34 00 00       	call   1c6e0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   19262:	90                   	nop
   19263:	c9                   	leave
   19264:	c3                   	ret
   19265:	90                   	nop

0000000000019266 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   19266:	55                   	push   %rbp
   19267:	48 89 e5             	mov    %rsp,%rbp
   1926a:	48 83 ec 10          	sub    $0x10,%rsp
   1926e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   19272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19276:	48 8b 00             	mov    (%rax),%rax
   19279:	48 89 c7             	mov    %rax,%rdi
   1927c:	e8 6b 34 00 00       	call   1c6ec <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   19281:	c9                   	leave
   19282:	c3                   	ret
   19283:	90                   	nop

0000000000019284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   19284:	55                   	push   %rbp
   19285:	48 89 e5             	mov    %rsp,%rbp
   19288:	48 83 ec 20          	sub    $0x20,%rsp
   1928c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19290:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19294:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   19298:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1929c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192a0:	48 89 d6             	mov    %rdx,%rsi
   192a3:	48 89 c7             	mov    %rax,%rdi
   192a6:	e8 5f 34 00 00       	call   1c70a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   192ab:	c9                   	leave
   192ac:	c3                   	ret

00000000000192ad <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   192ad:	55                   	push   %rbp
   192ae:	48 89 e5             	mov    %rsp,%rbp
   192b1:	48 83 ec 10          	sub    $0x10,%rsp
   192b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   192bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192c1:	48 89 c7             	mov    %rax,%rdi
   192c4:	e8 69 34 00 00       	call   1c732 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   192c9:	48 89 c2             	mov    %rax,%rdx
   192cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192d0:	48 89 d6             	mov    %rdx,%rsi
   192d3:	48 89 c7             	mov    %rax,%rdi
   192d6:	e8 65 34 00 00       	call   1c740 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   192db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192df:	c9                   	leave
   192e0:	c3                   	ret
   192e1:	90                   	nop

00000000000192e2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   192e2:	55                   	push   %rbp
   192e3:	48 89 e5             	mov    %rsp,%rbp
   192e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   192ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   192ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   192f2:	48 8b 10             	mov    (%rax),%rdx
   192f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   192f9:	48 89 10             	mov    %rdx,(%rax)
   192fc:	90                   	nop
   192fd:	5d                   	pop    %rbp
   192fe:	c3                   	ret
   192ff:	90                   	nop

0000000000019300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   19300:	55                   	push   %rbp
   19301:	48 89 e5             	mov    %rsp,%rbp
   19304:	41 54                	push   %r12
   19306:	53                   	push   %rbx
   19307:	48 83 ec 60          	sub    $0x60,%rsp
   1930b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1930f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   19313:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   19317:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1931b:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   1931f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19323:	48 89 c7             	mov    %rax,%rdi
   19326:	e8 64 34 00 00       	call   1c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1932b:	49 89 c4             	mov    %rax,%r12
   1932e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   19332:	48 89 c7             	mov    %rax,%rdi
   19335:	e8 47 34 00 00       	call   1c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1933a:	48 89 c3             	mov    %rax,%rbx
   1933d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19341:	48 89 c7             	mov    %rax,%rdi
   19344:	e8 2a 34 00 00       	call   1c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   19349:	48 89 c2             	mov    %rax,%rdx
   1934c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   19350:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19354:	4d 89 e0             	mov    %r12,%r8
   19357:	48 89 d9             	mov    %rbx,%rcx
   1935a:	48 89 c7             	mov    %rax,%rdi
   1935d:	e8 3c 34 00 00       	call   1c79e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   19362:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19366:	48 89 c7             	mov    %rax,%rdi
   19369:	e8 30 39 00 00       	call   1cc9e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   1936e:	48 89 c2             	mov    %rax,%rdx
   19371:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   19375:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19379:	48 89 ce             	mov    %rcx,%rsi
   1937c:	48 89 c7             	mov    %rax,%rdi
   1937f:	e8 cc 34 00 00       	call   1c850 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   19384:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   19388:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   1938c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19390:	48 85 c0             	test   %rax,%rax
   19393:	74 1c                	je     193b1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   19395:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   19399:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1939d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   193a1:	48 89 ce             	mov    %rcx,%rsi
   193a4:	48 89 c7             	mov    %rax,%rdi
   193a7:	e8 10 39 00 00       	call   1ccbc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   193ac:	48 89 c3             	mov    %rax,%rbx
   193af:	eb 17                	jmp    193c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   193b1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   193b5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   193b9:	48 89 d6             	mov    %rdx,%rsi
   193bc:	48 89 c7             	mov    %rax,%rdi
   193bf:	e8 4e 39 00 00       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   193c4:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   193c8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   193cc:	48 89 c7             	mov    %rax,%rdi
   193cf:	e8 46 34 00 00       	call   1c81a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   193d4:	48 89 d8             	mov    %rbx,%rax
   193d7:	eb 1a                	jmp    193f3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   193d9:	48 89 c3             	mov    %rax,%rbx
   193dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   193e0:	48 89 c7             	mov    %rax,%rdi
   193e3:	e8 32 34 00 00       	call   1c81a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   193e8:	48 89 d8             	mov    %rbx,%rax
   193eb:	48 89 c7             	mov    %rax,%rdi
   193ee:	e8 0d c6 fe ff       	call   5a00 <_Unwind_Resume@plt>
   193f3:	48 83 c4 60          	add    $0x60,%rsp
   193f7:	5b                   	pop    %rbx
   193f8:	41 5c                	pop    %r12
   193fa:	5d                   	pop    %rbp
   193fb:	c3                   	ret

00000000000193fc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   193fc:	55                   	push   %rbp
   193fd:	48 89 e5             	mov    %rsp,%rbp
   19400:	48 83 ec 20          	sub    $0x20,%rsp
   19404:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   19408:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1940c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19410:	48 89 d6             	mov    %rdx,%rsi
   19413:	48 89 c7             	mov    %rax,%rdi
   19416:	e8 11 39 00 00       	call   1cd2c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   1941b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1941f:	c9                   	leave
   19420:	c3                   	ret
   19421:	90                   	nop

0000000000019422 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   19422:	55                   	push   %rbp
   19423:	48 89 e5             	mov    %rsp,%rbp
   19426:	48 83 ec 20          	sub    $0x20,%rsp
   1942a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   1942e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19432:	48 8d 50 08          	lea    0x8(%rax),%rdx
   19436:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1943a:	48 89 d6             	mov    %rdx,%rsi
   1943d:	48 89 c7             	mov    %rax,%rdi
   19440:	e8 e7 38 00 00       	call   1cd2c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   19445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19449:	c9                   	leave
   1944a:	c3                   	ret

000000000001944b <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   1944b:	55                   	push   %rbp
   1944c:	48 89 e5             	mov    %rsp,%rbp
   1944f:	53                   	push   %rbx
   19450:	48 83 ec 18          	sub    $0x18,%rsp
   19454:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19458:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   1945c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19460:	48 89 c7             	mov    %rax,%rdi
   19463:	e8 e2 38 00 00       	call   1cd4a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   19468:	48 8b 18             	mov    (%rax),%rbx
   1946b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1946f:	48 89 c7             	mov    %rax,%rdi
   19472:	e8 d3 38 00 00       	call   1cd4a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   19477:	48 8b 00             	mov    (%rax),%rax
   1947a:	48 39 c3             	cmp    %rax,%rbx
   1947d:	0f 94 c0             	sete   %al
   19480:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19484:	c9                   	leave
   19485:	c3                   	ret

0000000000019486 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   19486:	55                   	push   %rbp
   19487:	48 89 e5             	mov    %rsp,%rbp
   1948a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1948e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   19492:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19496:	48 8b 10             	mov    (%rax),%rdx
   19499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1949d:	48 89 10             	mov    %rdx,(%rax)
   194a0:	90                   	nop
   194a1:	5d                   	pop    %rbp
   194a2:	c3                   	ret
   194a3:	90                   	nop

00000000000194a4 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   194a4:	55                   	push   %rbp
   194a5:	48 89 e5             	mov    %rsp,%rbp
   194a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   194ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194b0:	5d                   	pop    %rbp
   194b1:	c3                   	ret

00000000000194b2 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   194b2:	55                   	push   %rbp
   194b3:	48 89 e5             	mov    %rsp,%rbp
   194b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   194ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   194be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   194c2:	48 8b 10             	mov    (%rax),%rdx
   194c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194c9:	48 89 10             	mov    %rdx,(%rax)
   194cc:	90                   	nop
   194cd:	5d                   	pop    %rbp
   194ce:	c3                   	ret
   194cf:	90                   	nop

00000000000194d0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   194d0:	55                   	push   %rbp
   194d1:	48 89 e5             	mov    %rsp,%rbp
   194d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   194d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194dc:	5d                   	pop    %rbp
   194dd:	c3                   	ret

00000000000194de <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   194de:	55                   	push   %rbp
   194df:	48 89 e5             	mov    %rsp,%rbp
   194e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   194e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194ea:	5d                   	pop    %rbp
   194eb:	c3                   	ret

00000000000194ec <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   194ec:	55                   	push   %rbp
   194ed:	48 89 e5             	mov    %rsp,%rbp
   194f0:	53                   	push   %rbx
   194f1:	48 83 ec 38          	sub    $0x38,%rsp
   194f5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   194f9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   194fd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19501:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   19505:	48 89 d6             	mov    %rdx,%rsi
   19508:	48 89 c7             	mov    %rax,%rdi
   1950b:	e8 48 38 00 00       	call   1cd58 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   19510:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   19514:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   19518:	48 89 d6             	mov    %rdx,%rsi
   1951b:	48 89 c7             	mov    %rax,%rdi
   1951e:	e8 69 38 00 00       	call   1cd8c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   19523:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   19527:	48 89 c7             	mov    %rax,%rdi
   1952a:	e8 ad 20 ff ff       	call   b5dc <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   1952f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19533:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19537:	48 89 d6             	mov    %rdx,%rsi
   1953a:	48 89 c7             	mov    %rax,%rdi
   1953d:	e8 70 38 00 00       	call   1cdb2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   19542:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19546:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1954a:	48 89 d6             	mov    %rdx,%rsi
   1954d:	48 89 c7             	mov    %rax,%rdi
   19550:	e8 5d 38 00 00       	call   1cdb2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   19555:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19559:	48 89 c7             	mov    %rax,%rdi
   1955c:	e8 2f 31 ff ff       	call   c690 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19561:	48 89 c3             	mov    %rax,%rbx
   19564:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19568:	48 89 c7             	mov    %rax,%rdi
   1956b:	e8 20 31 ff ff       	call   c690 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19570:	48 89 de             	mov    %rbx,%rsi
   19573:	48 89 c7             	mov    %rax,%rdi
   19576:	e8 8f 38 00 00       	call   1ce0a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   1957b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1957f:	48 89 c7             	mov    %rax,%rdi
   19582:	e8 e7 20 ff ff       	call   b66e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   19587:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1958b:	c9                   	leave
   1958c:	c3                   	ret
   1958d:	90                   	nop

000000000001958e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   1958e:	55                   	push   %rbp
   1958f:	48 89 e5             	mov    %rsp,%rbp
   19592:	53                   	push   %rbx
   19593:	48 83 ec 38          	sub    $0x38,%rsp
   19597:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1959b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   1959f:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   195a4:	0f 84 e7 01 00 00    	je     19791 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   195aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195ae:	48 89 c7             	mov    %rax,%rdi
   195b1:	e8 84 d4 ff ff       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   195b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   195ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195be:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   195c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195c6:	48 8b 40 08          	mov    0x8(%rax),%rax
   195ca:	48 29 c2             	sub    %rax,%rdx
   195cd:	48 89 d0             	mov    %rdx,%rax
   195d0:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   195d4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   195d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195dc:	48 89 c7             	mov    %rax,%rdi
   195df:	e8 46 38 00 00       	call   1ce2a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   195e4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   195e8:	72 16                	jb     19600 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   195ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   195ee:	48 89 c7             	mov    %rax,%rdi
   195f1:	e8 34 38 00 00       	call   1ce2a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   195f6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   195fa:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   195fe:	73 07                	jae    19607 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   19600:	b8 01 00 00 00       	mov    $0x1,%eax
   19605:	eb 05                	jmp    1960c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   19607:	b8 00 00 00 00       	mov    $0x0,%eax
   1960c:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   1960e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19612:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   19616:	72 33                	jb     1964b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   19618:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1961c:	48 89 c7             	mov    %rax,%rdi
   1961f:	e8 c2 09 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19624:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   19627:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1962b:	48 8b 40 08          	mov    0x8(%rax),%rax
   1962f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   19633:	48 89 ce             	mov    %rcx,%rsi
   19636:	48 89 c7             	mov    %rax,%rdi
   19639:	e8 0e 38 00 00       	call   1ce4c <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1963e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19642:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   19646:	e9 46 01 00 00       	jmp    19791 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1964b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1964f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19653:	48 8d 15 26 d2 00 00 	lea    0xd226(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   1965a:	48 89 ce             	mov    %rcx,%rsi
   1965d:	48 89 c7             	mov    %rax,%rdi
   19660:	e8 11 38 00 00       	call   1ce76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   19665:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   19669:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1966d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19671:	48 89 d6             	mov    %rdx,%rsi
   19674:	48 89 c7             	mov    %rax,%rdi
   19677:	e8 c2 38 00 00       	call   1cf3e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   1967c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   19680:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19684:	48 89 c7             	mov    %rax,%rdi
   19687:	e8 5a 09 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1968c:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1968f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19693:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1969a:	00 
   1969b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1969f:	48 01 c1             	add    %rax,%rcx
   196a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   196a6:	48 89 c6             	mov    %rax,%rsi
   196a9:	48 89 cf             	mov    %rcx,%rdi
   196ac:	e8 9b 37 00 00       	call   1ce4c <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   196b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   196b5:	48 89 c7             	mov    %rax,%rdi
   196b8:	e8 29 09 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   196bd:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   196c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   196c4:	48 8b 70 08          	mov    0x8(%rax),%rsi
   196c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   196cc:	48 8b 00             	mov    (%rax),%rax
   196cf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   196d3:	48 89 c7             	mov    %rax,%rdi
   196d6:	e8 96 38 00 00       	call   1cf71 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   196db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   196df:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   196e3:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   196e7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   196eb:	48 8b 12             	mov    (%rdx),%rdx
   196ee:	48 29 d1             	sub    %rdx,%rcx
   196f1:	48 c1 f9 03          	sar    $0x3,%rcx
   196f5:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   196f8:	48 89 d6             	mov    %rdx,%rsi
   196fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   196ff:	48 8b 0a             	mov    (%rdx),%rcx
   19702:	48 89 f2             	mov    %rsi,%rdx
   19705:	48 89 ce             	mov    %rcx,%rsi
   19708:	48 89 c7             	mov    %rax,%rdi
   1970b:	e8 26 26 00 00       	call   1bd36 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   19710:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19714:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   19718:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1971b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1971f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19723:	48 01 d0             	add    %rdx,%rax
   19726:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1972d:	00 
   1972e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19732:	48 01 c2             	add    %rax,%rdx
   19735:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19739:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1973d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19741:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19748:	00 
   19749:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1974d:	48 01 c2             	add    %rax,%rdx
   19750:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19754:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   19758:	eb 37                	jmp    19791 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1975a:	48 89 c7             	mov    %rax,%rdi
   1975d:	e8 3e ba fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   19762:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19766:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1976a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1976e:	48 89 ce             	mov    %rcx,%rsi
   19771:	48 89 c7             	mov    %rax,%rdi
   19774:	e8 bd 25 00 00       	call   1bd36 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   19779:	e8 c2 c0 fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   1977e:	48 89 c3             	mov    %rax,%rbx
   19781:	e8 da c1 fe ff       	call   5960 <__cxa_end_catch@plt>
   19786:	48 89 d8             	mov    %rbx,%rax
   19789:	48 89 c7             	mov    %rax,%rdi
   1978c:	e8 6f c2 fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   19791:	90                   	nop
   19792:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19796:	c9                   	leave
   19797:	c3                   	ret

0000000000019798 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   19798:	55                   	push   %rbp
   19799:	48 89 e5             	mov    %rsp,%rbp
   1979c:	48 83 ec 20          	sub    $0x20,%rsp
   197a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   197a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   197a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197ac:	48 8b 40 08          	mov    0x8(%rax),%rax
   197b0:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   197b4:	48 c1 f8 03          	sar    $0x3,%rax
   197b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   197bc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   197c1:	74 32                	je     197f5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   197c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197c7:	48 89 c7             	mov    %rax,%rdi
   197ca:	e8 17 08 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   197cf:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   197d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197d6:	48 8b 48 08          	mov    0x8(%rax),%rcx
   197da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   197de:	48 89 ce             	mov    %rcx,%rsi
   197e1:	48 89 c7             	mov    %rax,%rdi
   197e4:	e8 0b 08 00 00       	call   19ff4 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   197e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   197ed:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   197f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   197f5:	90                   	nop
   197f6:	c9                   	leave
   197f7:	c3                   	ret

00000000000197f8 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   197f8:	55                   	push   %rbp
   197f9:	48 89 e5             	mov    %rsp,%rbp
   197fc:	48 83 ec 10          	sub    $0x10,%rsp
   19800:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19804:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   19808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1980c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19810:	48 89 d6             	mov    %rdx,%rsi
   19813:	48 89 c7             	mov    %rax,%rdi
   19816:	e8 88 37 00 00       	call   1cfa3 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   1981b:	c9                   	leave
   1981c:	c3                   	ret
   1981d:	90                   	nop

000000000001981e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1981e:	55                   	push   %rbp
   1981f:	48 89 e5             	mov    %rsp,%rbp
   19822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19826:	90                   	nop
   19827:	5d                   	pop    %rbp
   19828:	c3                   	ret
   19829:	90                   	nop

000000000001982a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1982a:	55                   	push   %rbp
   1982b:	48 89 e5             	mov    %rsp,%rbp
   1982e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19832:	90                   	nop
   19833:	5d                   	pop    %rbp
   19834:	c3                   	ret
   19835:	90                   	nop

0000000000019836 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   19836:	55                   	push   %rbp
   19837:	48 89 e5             	mov    %rsp,%rbp
   1983a:	48 83 ec 10          	sub    $0x10,%rsp
   1983e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19846:	48 89 c7             	mov    %rax,%rdi
   19849:	e8 58 cf ff ff       	call   167a6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   1984e:	90                   	nop
   1984f:	c9                   	leave
   19850:	c3                   	ret
   19851:	90                   	nop

0000000000019852 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   19852:	55                   	push   %rbp
   19853:	48 89 e5             	mov    %rsp,%rbp
   19856:	48 83 ec 10          	sub    $0x10,%rsp
   1985a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1985e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   19862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19866:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1986a:	48 89 d6             	mov    %rdx,%rsi
   1986d:	48 89 c7             	mov    %rax,%rdi
   19870:	e8 4f 37 00 00       	call   1cfc4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   19875:	90                   	nop
   19876:	c9                   	leave
   19877:	c3                   	ret

0000000000019878 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   19878:	55                   	push   %rbp
   19879:	48 89 e5             	mov    %rsp,%rbp
   1987c:	48 83 ec 10          	sub    $0x10,%rsp
   19880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   19884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19888:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1988c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19890:	48 8b 00             	mov    (%rax),%rax
   19893:	48 29 c2             	sub    %rax,%rdx
   19896:	48 c1 fa 04          	sar    $0x4,%rdx
   1989a:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   198a1:	e3 38 8e 
   198a4:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   198a8:	48 89 c2             	mov    %rax,%rdx
   198ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198af:	48 8b 08             	mov    (%rax),%rcx
   198b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198b6:	48 89 ce             	mov    %rcx,%rsi
   198b9:	48 89 c7             	mov    %rax,%rdi
   198bc:	e8 35 37 00 00       	call   1cff6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   198c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198c5:	48 89 c7             	mov    %rax,%rdi
   198c8:	e8 69 ff ff ff       	call   19836 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   198cd:	90                   	nop
   198ce:	c9                   	leave
   198cf:	c3                   	ret

00000000000198d0 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   198d0:	55                   	push   %rbp
   198d1:	48 89 e5             	mov    %rsp,%rbp
   198d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   198d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   198dc:	48 8b 00             	mov    (%rax),%rax
   198df:	5d                   	pop    %rbp
   198e0:	c3                   	ret
   198e1:	90                   	nop

00000000000198e2 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   198e2:	55                   	push   %rbp
   198e3:	48 89 e5             	mov    %rsp,%rbp
   198e6:	53                   	push   %rbx
   198e7:	48 83 ec 18          	sub    $0x18,%rsp
   198eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   198ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198f3:	48 89 c7             	mov    %rax,%rdi
   198f6:	e8 d5 ff ff ff       	call   198d0 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   198fb:	48 89 c3             	mov    %rax,%rbx
   198fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19902:	48 89 c7             	mov    %rax,%rdi
   19905:	e8 22 37 00 00       	call   1d02c <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   1990a:	48 89 c2             	mov    %rax,%rdx
   1990d:	48 89 d0             	mov    %rdx,%rax
   19910:	48 c1 e0 03          	shl    $0x3,%rax
   19914:	48 01 d0             	add    %rdx,%rax
   19917:	48 c1 e0 04          	shl    $0x4,%rax
   1991b:	48 01 d8             	add    %rbx,%rax
   1991e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19922:	c9                   	leave
   19923:	c3                   	ret

0000000000019924 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   19924:	55                   	push   %rbp
   19925:	48 89 e5             	mov    %rsp,%rbp
   19928:	48 83 ec 10          	sub    $0x10,%rsp
   1992c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19930:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   19934:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19938:	48 89 c7             	mov    %rax,%rdi
   1993b:	e8 fe 36 00 00       	call   1d03e <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   19940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19944:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19948:	48 89 d6             	mov    %rdx,%rsi
   1994b:	48 89 c7             	mov    %rax,%rdi
   1994e:	e8 f6 36 00 00       	call   1d049 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   19953:	c9                   	leave
   19954:	c3                   	ret
   19955:	90                   	nop

0000000000019956 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   19956:	55                   	push   %rbp
   19957:	48 89 e5             	mov    %rsp,%rbp
   1995a:	53                   	push   %rbx
   1995b:	48 83 ec 38          	sub    $0x38,%rsp
   1995f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19963:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19967:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1996b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1996f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19973:	48 89 d6             	mov    %rdx,%rsi
   19976:	48 89 c7             	mov    %rax,%rdi
   19979:	e8 a6 ff ff ff       	call   19924 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   1997e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   19982:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   19986:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1998a:	48 89 c7             	mov    %rax,%rdi
   1998d:	e8 7e 00 00 00       	call   19a10 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   19992:	48 89 c2             	mov    %rax,%rdx
   19995:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19999:	48 89 d6             	mov    %rdx,%rsi
   1999c:	48 89 c7             	mov    %rax,%rdi
   1999f:	e8 d0 36 00 00       	call   1d074 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   199a4:	48 89 c6             	mov    %rax,%rsi
   199a7:	48 89 df             	mov    %rbx,%rdi
   199aa:	e8 25 37 00 00       	call   1d0d4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   199af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   199b3:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   199b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   199ba:	48 8b 08             	mov    (%rax),%rcx
   199bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   199c1:	48 89 d0             	mov    %rdx,%rax
   199c4:	48 c1 e0 03          	shl    $0x3,%rax
   199c8:	48 01 d0             	add    %rdx,%rax
   199cb:	48 c1 e0 04          	shl    $0x4,%rax
   199cf:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   199d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   199d7:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   199db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   199df:	48 89 c7             	mov    %rax,%rdi
   199e2:	e8 29 00 00 00       	call   19a10 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   199e7:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   199ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   199ee:	48 8b 10             	mov    (%rax),%rdx
   199f1:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   199f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   199f9:	48 89 c7             	mov    %rax,%rdi
   199fc:	e8 06 37 00 00       	call   1d107 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   19a01:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19a05:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   19a09:	90                   	nop
   19a0a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19a0e:	c9                   	leave
   19a0f:	c3                   	ret

0000000000019a10 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   19a10:	55                   	push   %rbp
   19a11:	48 89 e5             	mov    %rsp,%rbp
   19a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a1c:	5d                   	pop    %rbp
   19a1d:	c3                   	ret

0000000000019a1e <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   19a1e:	55                   	push   %rbp
   19a1f:	48 89 e5             	mov    %rsp,%rbp
   19a22:	48 83 ec 20          	sub    $0x20,%rsp
   19a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19a2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   19a32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a3a:	48 89 d6             	mov    %rdx,%rsi
   19a3d:	48 89 c7             	mov    %rax,%rdi
   19a40:	e8 f3 36 00 00       	call   1d138 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   19a45:	90                   	nop
   19a46:	c9                   	leave
   19a47:	c3                   	ret

0000000000019a48 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   19a48:	55                   	push   %rbp
   19a49:	48 89 e5             	mov    %rsp,%rbp
   19a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   19a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a54:	48 8b 50 08          	mov    0x8(%rax),%rdx
   19a58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a5c:	48 8b 00             	mov    (%rax),%rax
   19a5f:	48 29 c2             	sub    %rax,%rdx
   19a62:	48 c1 fa 04          	sar    $0x4,%rdx
   19a66:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   19a6d:	e3 38 8e 
   19a70:	48 0f af c2          	imul   %rdx,%rax
   19a74:	5d                   	pop    %rbp
   19a75:	c3                   	ret

0000000000019a76 <_ZNSaIP12VkPipeline_TEC1Ev>:
   19a76:	55                   	push   %rbp
   19a77:	48 89 e5             	mov    %rsp,%rbp
   19a7a:	48 83 ec 10          	sub    $0x10,%rsp
   19a7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a86:	48 89 c7             	mov    %rax,%rdi
   19a89:	e8 d0 36 00 00       	call   1d15e <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   19a8e:	90                   	nop
   19a8f:	c9                   	leave
   19a90:	c3                   	ret
   19a91:	90                   	nop

0000000000019a92 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   19a92:	55                   	push   %rbp
   19a93:	48 89 e5             	mov    %rsp,%rbp
   19a96:	48 83 ec 10          	sub    $0x10,%rsp
   19a9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19aa2:	48 89 c7             	mov    %rax,%rdi
   19aa5:	e8 c0 36 00 00       	call   1d16a <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   19aaa:	90                   	nop
   19aab:	c9                   	leave
   19aac:	c3                   	ret
   19aad:	90                   	nop

0000000000019aae <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   19aae:	55                   	push   %rbp
   19aaf:	48 89 e5             	mov    %rsp,%rbp
   19ab2:	53                   	push   %rbx
   19ab3:	48 83 ec 28          	sub    $0x28,%rsp
   19ab7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19abb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19abf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   19ac3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   19ac7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19acb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19acf:	48 89 d6             	mov    %rdx,%rsi
   19ad2:	48 89 c7             	mov    %rax,%rdi
   19ad5:	e8 9b 36 00 00       	call   1d175 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   19ada:	48 89 c1             	mov    %rax,%rcx
   19add:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19ae1:	48 89 c2             	mov    %rax,%rdx
   19ae4:	48 89 ce             	mov    %rcx,%rsi
   19ae7:	48 89 df             	mov    %rbx,%rdi
   19aea:	e8 e7 36 00 00       	call   1d1d6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   19aef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19af3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19af7:	48 89 d6             	mov    %rdx,%rsi
   19afa:	48 89 c7             	mov    %rax,%rdi
   19afd:	e8 32 37 00 00       	call   1d234 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   19b02:	eb 1a                	jmp    19b1e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   19b04:	48 89 c3             	mov    %rax,%rbx
   19b07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b0b:	48 89 c7             	mov    %rax,%rdi
   19b0e:	e8 59 00 00 00       	call   19b6c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   19b13:	48 89 d8             	mov    %rbx,%rax
   19b16:	48 89 c7             	mov    %rax,%rdi
   19b19:	e8 e2 be fe ff       	call   5a00 <_Unwind_Resume@plt>
   19b1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19b22:	c9                   	leave
   19b23:	c3                   	ret

0000000000019b24 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   19b24:	55                   	push   %rbp
   19b25:	48 89 e5             	mov    %rsp,%rbp
   19b28:	48 83 ec 10          	sub    $0x10,%rsp
   19b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   19b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b34:	48 8b 10             	mov    (%rax),%rdx
   19b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b3b:	48 89 d6             	mov    %rdx,%rsi
   19b3e:	48 89 c7             	mov    %rax,%rdi
   19b41:	e8 2e 37 00 00       	call   1d274 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   19b46:	c9                   	leave
   19b47:	c3                   	ret

0000000000019b48 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   19b48:	55                   	push   %rbp
   19b49:	48 89 e5             	mov    %rsp,%rbp
   19b4c:	48 83 ec 10          	sub    $0x10,%rsp
   19b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   19b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b58:	48 8b 10             	mov    (%rax),%rdx
   19b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b5f:	48 89 d6             	mov    %rdx,%rsi
   19b62:	48 89 c7             	mov    %rax,%rdi
   19b65:	e8 1c 37 00 00       	call   1d286 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   19b6a:	c9                   	leave
   19b6b:	c3                   	ret

0000000000019b6c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   19b6c:	55                   	push   %rbp
   19b6d:	48 89 e5             	mov    %rsp,%rbp
   19b70:	48 83 ec 10          	sub    $0x10,%rsp
   19b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   19b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b7c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b84:	48 8b 00             	mov    (%rax),%rax
   19b87:	48 29 c2             	sub    %rax,%rdx
   19b8a:	48 89 d0             	mov    %rdx,%rax
   19b8d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   19b91:	48 89 c2             	mov    %rax,%rdx
   19b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b98:	48 8b 08             	mov    (%rax),%rcx
   19b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b9f:	48 89 ce             	mov    %rcx,%rsi
   19ba2:	48 89 c7             	mov    %rax,%rdi
   19ba5:	e8 14 37 00 00       	call   1d2be <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   19baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bae:	48 89 c7             	mov    %rax,%rdi
   19bb1:	e8 d8 cc ff ff       	call   1688e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   19bb6:	90                   	nop
   19bb7:	c9                   	leave
   19bb8:	c3                   	ret
   19bb9:	90                   	nop

0000000000019bba <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   19bba:	55                   	push   %rbp
   19bbb:	48 89 e5             	mov    %rsp,%rbp
   19bbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19bc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bc6:	5d                   	pop    %rbp
   19bc7:	c3                   	ret

0000000000019bc8 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   19bc8:	55                   	push   %rbp
   19bc9:	48 89 e5             	mov    %rsp,%rbp
   19bcc:	48 83 ec 20          	sub    $0x20,%rsp
   19bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19bd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19bd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   19bdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19be4:	48 89 d6             	mov    %rdx,%rsi
   19be7:	48 89 c7             	mov    %rax,%rdi
   19bea:	e8 04 37 00 00       	call   1d2f3 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   19bef:	90                   	nop
   19bf0:	c9                   	leave
   19bf1:	c3                   	ret

0000000000019bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   19bf2:	55                   	push   %rbp
   19bf3:	48 89 e5             	mov    %rsp,%rbp
   19bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   19bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19bfe:	48 8b 50 08          	mov    0x8(%rax),%rdx
   19c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19c06:	48 8b 00             	mov    (%rax),%rax
   19c09:	48 29 c2             	sub    %rax,%rdx
   19c0c:	48 89 d0             	mov    %rdx,%rax
   19c0f:	48 c1 f8 03          	sar    $0x3,%rax
   19c13:	5d                   	pop    %rbp
   19c14:	c3                   	ret
   19c15:	90                   	nop

0000000000019c16 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   19c16:	55                   	push   %rbp
   19c17:	48 89 e5             	mov    %rsp,%rbp
   19c1a:	53                   	push   %rbx
   19c1b:	48 83 ec 38          	sub    $0x38,%rsp
   19c1f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   19c23:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   19c27:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   19c2c:	0f 84 e7 01 00 00    	je     19e19 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   19c32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19c36:	48 89 c7             	mov    %rax,%rdi
   19c39:	e8 b4 ff ff ff       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   19c3e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   19c42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19c46:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   19c4a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19c4e:	48 8b 40 08          	mov    0x8(%rax),%rax
   19c52:	48 29 c2             	sub    %rax,%rdx
   19c55:	48 89 d0             	mov    %rdx,%rax
   19c58:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   19c5c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   19c60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19c64:	48 89 c7             	mov    %rax,%rdi
   19c67:	e8 ae 36 00 00       	call   1d31a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   19c6c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   19c70:	72 16                	jb     19c88 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   19c72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19c76:	48 89 c7             	mov    %rax,%rdi
   19c79:	e8 9c 36 00 00       	call   1d31a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   19c7e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19c82:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19c86:	73 07                	jae    19c8f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   19c88:	b8 01 00 00 00       	mov    $0x1,%eax
   19c8d:	eb 05                	jmp    19c94 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   19c8f:	b8 00 00 00 00       	mov    $0x0,%eax
   19c94:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   19c96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c9a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   19c9e:	72 33                	jb     19cd3 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   19ca0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19ca4:	48 89 c7             	mov    %rax,%rdi
   19ca7:	e8 4c 21 00 00       	call   1bdf8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19cac:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   19caf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19cb3:	48 8b 40 08          	mov    0x8(%rax),%rax
   19cb7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   19cbb:	48 89 ce             	mov    %rcx,%rsi
   19cbe:	48 89 c7             	mov    %rax,%rdi
   19cc1:	e8 76 36 00 00       	call   1d33c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   19cc6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19cca:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   19cce:	e9 46 01 00 00       	jmp    19e19 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   19cd3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   19cd7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19cdb:	48 8d 15 9e cb 00 00 	lea    0xcb9e(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   19ce2:	48 89 ce             	mov    %rcx,%rsi
   19ce5:	48 89 c7             	mov    %rax,%rdi
   19ce8:	e8 79 36 00 00       	call   1d366 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   19ced:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   19cf1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19cf5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19cf9:	48 89 d6             	mov    %rdx,%rsi
   19cfc:	48 89 c7             	mov    %rax,%rdi
   19cff:	e8 2a 37 00 00       	call   1d42e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   19d04:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   19d08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d0c:	48 89 c7             	mov    %rax,%rdi
   19d0f:	e8 e4 20 00 00       	call   1bdf8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19d14:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   19d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d1b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   19d22:	00 
   19d23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19d27:	48 01 c1             	add    %rax,%rcx
   19d2a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19d2e:	48 89 c6             	mov    %rax,%rsi
   19d31:	48 89 cf             	mov    %rcx,%rdi
   19d34:	e8 03 36 00 00       	call   1d33c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   19d39:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d3d:	48 89 c7             	mov    %rax,%rdi
   19d40:	e8 b3 20 00 00       	call   1bdf8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19d45:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   19d48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d4c:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19d50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d54:	48 8b 00             	mov    (%rax),%rax
   19d57:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   19d5b:	48 89 c7             	mov    %rax,%rdi
   19d5e:	e8 fe 36 00 00       	call   1d461 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   19d63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   19d67:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19d6b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   19d6f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19d73:	48 8b 12             	mov    (%rdx),%rdx
   19d76:	48 29 d1             	sub    %rdx,%rcx
   19d79:	48 c1 f9 03          	sar    $0x3,%rcx
   19d7d:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   19d80:	48 89 d6             	mov    %rdx,%rsi
   19d83:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19d87:	48 8b 0a             	mov    (%rdx),%rcx
   19d8a:	48 89 f2             	mov    %rsi,%rdx
   19d8d:	48 89 ce             	mov    %rcx,%rsi
   19d90:	48 89 c7             	mov    %rax,%rdi
   19d93:	e8 2a 20 00 00       	call   1bdc2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   19d98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d9c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   19da0:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   19da3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19da7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19dab:	48 01 d0             	add    %rdx,%rax
   19dae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19db5:	00 
   19db6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19dba:	48 01 c2             	add    %rax,%rdx
   19dbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19dc1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   19dc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19dc9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19dd0:	00 
   19dd1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19dd5:	48 01 c2             	add    %rax,%rdx
   19dd8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19ddc:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   19de0:	eb 37                	jmp    19e19 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   19de2:	48 89 c7             	mov    %rax,%rdi
   19de5:	e8 b6 b3 fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   19dea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19dee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19df2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   19df6:	48 89 ce             	mov    %rcx,%rsi
   19df9:	48 89 c7             	mov    %rax,%rdi
   19dfc:	e8 c1 1f 00 00       	call   1bdc2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   19e01:	e8 3a ba fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   19e06:	48 89 c3             	mov    %rax,%rbx
   19e09:	e8 52 bb fe ff       	call   5960 <__cxa_end_catch@plt>
   19e0e:	48 89 d8             	mov    %rbx,%rax
   19e11:	48 89 c7             	mov    %rax,%rdi
   19e14:	e8 e7 bb fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   19e19:	90                   	nop
   19e1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19e1e:	c9                   	leave
   19e1f:	c3                   	ret

0000000000019e20 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   19e20:	55                   	push   %rbp
   19e21:	48 89 e5             	mov    %rsp,%rbp
   19e24:	48 83 ec 20          	sub    $0x20,%rsp
   19e28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19e2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   19e30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e34:	48 8b 40 08          	mov    0x8(%rax),%rax
   19e38:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   19e3c:	48 c1 f8 03          	sar    $0x3,%rax
   19e40:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19e44:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19e49:	74 32                	je     19e7d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   19e4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e4f:	48 89 c7             	mov    %rax,%rdi
   19e52:	e8 a1 1f 00 00       	call   1bdf8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19e57:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   19e5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e5e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   19e62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e66:	48 89 ce             	mov    %rcx,%rsi
   19e69:	48 89 c7             	mov    %rax,%rdi
   19e6c:	e8 95 1f 00 00       	call   1be06 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   19e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19e79:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   19e7d:	90                   	nop
   19e7e:	c9                   	leave
   19e7f:	c3                   	ret

0000000000019e80 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   19e80:	55                   	push   %rbp
   19e81:	48 89 e5             	mov    %rsp,%rbp
   19e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e88:	90                   	nop
   19e89:	5d                   	pop    %rbp
   19e8a:	c3                   	ret
   19e8b:	90                   	nop

0000000000019e8c <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   19e8c:	55                   	push   %rbp
   19e8d:	48 89 e5             	mov    %rsp,%rbp
   19e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19e94:	90                   	nop
   19e95:	5d                   	pop    %rbp
   19e96:	c3                   	ret
   19e97:	90                   	nop

0000000000019e98 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   19e98:	55                   	push   %rbp
   19e99:	48 89 e5             	mov    %rsp,%rbp
   19e9c:	48 83 ec 10          	sub    $0x10,%rsp
   19ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   19ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19eac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19eb0:	48 89 d6             	mov    %rdx,%rsi
   19eb3:	48 89 c7             	mov    %rax,%rdi
   19eb6:	e8 d9 35 00 00       	call   1d494 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   19ebb:	90                   	nop
   19ebc:	c9                   	leave
   19ebd:	c3                   	ret

0000000000019ebe <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   19ebe:	55                   	push   %rbp
   19ebf:	48 89 e5             	mov    %rsp,%rbp
   19ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19eca:	48 8b 00             	mov    (%rax),%rax
   19ecd:	5d                   	pop    %rbp
   19ece:	c3                   	ret
   19ecf:	90                   	nop

0000000000019ed0 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   19ed0:	55                   	push   %rbp
   19ed1:	48 89 e5             	mov    %rsp,%rbp
   19ed4:	53                   	push   %rbx
   19ed5:	48 83 ec 18          	sub    $0x18,%rsp
   19ed9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19edd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ee1:	48 89 c7             	mov    %rax,%rdi
   19ee4:	e8 d5 ff ff ff       	call   19ebe <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   19ee9:	48 89 c3             	mov    %rax,%rbx
   19eec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ef0:	48 89 c7             	mov    %rax,%rdi
   19ef3:	e8 ce 35 00 00       	call   1d4c6 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   19ef8:	48 c1 e0 03          	shl    $0x3,%rax
   19efc:	48 01 d8             	add    %rbx,%rax
   19eff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19f03:	c9                   	leave
   19f04:	c3                   	ret

0000000000019f05 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   19f05:	55                   	push   %rbp
   19f06:	48 89 e5             	mov    %rsp,%rbp
   19f09:	48 83 ec 10          	sub    $0x10,%rsp
   19f0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19f11:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   19f15:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19f19:	48 89 c7             	mov    %rax,%rdi
   19f1c:	e8 b7 35 00 00       	call   1d4d8 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   19f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f25:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19f29:	48 89 d6             	mov    %rdx,%rsi
   19f2c:	48 89 c7             	mov    %rax,%rdi
   19f2f:	e8 af 35 00 00       	call   1d4e3 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   19f34:	c9                   	leave
   19f35:	c3                   	ret

0000000000019f36 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   19f36:	55                   	push   %rbp
   19f37:	48 89 e5             	mov    %rsp,%rbp
   19f3a:	53                   	push   %rbx
   19f3b:	48 83 ec 38          	sub    $0x38,%rsp
   19f3f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19f43:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19f47:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   19f4b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19f4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19f53:	48 89 d6             	mov    %rdx,%rsi
   19f56:	48 89 c7             	mov    %rax,%rdi
   19f59:	e8 a7 ff ff ff       	call   19f05 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   19f5e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   19f62:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   19f66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f6a:	48 89 c7             	mov    %rax,%rdi
   19f6d:	e8 74 00 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19f72:	48 89 c2             	mov    %rax,%rdx
   19f75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f79:	48 89 d6             	mov    %rdx,%rsi
   19f7c:	48 89 c7             	mov    %rax,%rdi
   19f7f:	e8 79 35 00 00       	call   1d4fd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   19f84:	48 89 c6             	mov    %rax,%rsi
   19f87:	48 89 df             	mov    %rbx,%rdi
   19f8a:	e8 af 2f 00 00       	call   1cf3e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   19f8f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19f93:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   19f96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f9a:	48 8b 00             	mov    (%rax),%rax
   19f9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19fa1:	48 c1 e2 03          	shl    $0x3,%rdx
   19fa5:	48 01 c2             	add    %rax,%rdx
   19fa8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fac:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   19fb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fb4:	48 89 c7             	mov    %rax,%rdi
   19fb7:	e8 2a 00 00 00       	call   19fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19fbc:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   19fbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fc3:	48 8b 10             	mov    (%rax),%rdx
   19fc6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   19fca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19fce:	48 89 c7             	mov    %rax,%rdi
   19fd1:	e8 87 35 00 00       	call   1d55d <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   19fd6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19fda:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   19fde:	90                   	nop
   19fdf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19fe3:	c9                   	leave
   19fe4:	c3                   	ret
   19fe5:	90                   	nop

0000000000019fe6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   19fe6:	55                   	push   %rbp
   19fe7:	48 89 e5             	mov    %rsp,%rbp
   19fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ff2:	5d                   	pop    %rbp
   19ff3:	c3                   	ret

0000000000019ff4 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   19ff4:	55                   	push   %rbp
   19ff5:	48 89 e5             	mov    %rsp,%rbp
   19ff8:	48 83 ec 20          	sub    $0x20,%rsp
   19ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a000:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a004:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1a008:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a00c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a010:	48 89 d6             	mov    %rdx,%rsi
   1a013:	48 89 c7             	mov    %rax,%rdi
   1a016:	e8 73 35 00 00       	call   1d58e <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   1a01b:	90                   	nop
   1a01c:	c9                   	leave
   1a01d:	c3                   	ret

000000000001a01e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1a01e:	55                   	push   %rbp
   1a01f:	48 89 e5             	mov    %rsp,%rbp
   1a022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a026:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1a02a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a02e:	5d                   	pop    %rbp
   1a02f:	c3                   	ret

000000000001a030 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1a030:	55                   	push   %rbp
   1a031:	48 89 e5             	mov    %rsp,%rbp
   1a034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1a03c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a040:	48 8b 10             	mov    (%rax),%rdx
   1a043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a047:	48 89 10             	mov    %rdx,(%rax)
   1a04a:	90                   	nop
   1a04b:	5d                   	pop    %rbp
   1a04c:	c3                   	ret
   1a04d:	90                   	nop

000000000001a04e <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1a04e:	55                   	push   %rbp
   1a04f:	48 89 e5             	mov    %rsp,%rbp
   1a052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1a056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a05a:	5d                   	pop    %rbp
   1a05b:	c3                   	ret

000000000001a05c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1a05c:	55                   	push   %rbp
   1a05d:	48 89 e5             	mov    %rsp,%rbp
   1a060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a064:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1a068:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a06c:	48 8b 10             	mov    (%rax),%rdx
   1a06f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a073:	48 89 10             	mov    %rdx,(%rax)
   1a076:	90                   	nop
   1a077:	5d                   	pop    %rbp
   1a078:	c3                   	ret
   1a079:	90                   	nop

000000000001a07a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1a07a:	55                   	push   %rbp
   1a07b:	48 89 e5             	mov    %rsp,%rbp
   1a07e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1a082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a086:	5d                   	pop    %rbp
   1a087:	c3                   	ret

000000000001a088 <_ZSt4moveIRSt6vectorIP17VkCommandBuffer_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   1a088:	55                   	push   %rbp
   1a089:	48 89 e5             	mov    %rsp,%rbp
   1a08c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1a090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a094:	5d                   	pop    %rbp
   1a095:	c3                   	ret

000000000001a096 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   1a096:	55                   	push   %rbp
   1a097:	48 89 e5             	mov    %rsp,%rbp
   1a09a:	53                   	push   %rbx
   1a09b:	48 83 ec 38          	sub    $0x38,%rsp
   1a09f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a0a3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   1a0a7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a0ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1a0af:	48 89 d6             	mov    %rdx,%rsi
   1a0b2:	48 89 c7             	mov    %rax,%rdi
   1a0b5:	e8 fa 34 00 00       	call   1d5b4 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>
   1a0ba:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1a0be:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a0c2:	48 89 d6             	mov    %rdx,%rsi
   1a0c5:	48 89 c7             	mov    %rax,%rdi
   1a0c8:	e8 1b 35 00 00       	call   1d5e8 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   1a0cd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1a0d1:	48 89 c7             	mov    %rax,%rdi
   1a0d4:	e8 e7 d7 fe ff       	call   78c0 <_ZNSaIP17VkCommandBuffer_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   1a0d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a0dd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1a0e1:	48 89 d6             	mov    %rdx,%rsi
   1a0e4:	48 89 c7             	mov    %rax,%rdi
   1a0e7:	e8 22 35 00 00       	call   1d60e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   1a0ec:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1a0f0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a0f4:	48 89 d6             	mov    %rdx,%rsi
   1a0f7:	48 89 c7             	mov    %rax,%rdi
   1a0fa:	e8 0f 35 00 00       	call   1d60e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   1a0ff:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a103:	48 89 c7             	mov    %rax,%rdi
   1a106:	e8 13 da fe ff       	call   7b1e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a10b:	48 89 c3             	mov    %rax,%rbx
   1a10e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a112:	48 89 c7             	mov    %rax,%rdi
   1a115:	e8 04 da fe ff       	call   7b1e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a11a:	48 89 de             	mov    %rbx,%rsi
   1a11d:	48 89 c7             	mov    %rax,%rdi
   1a120:	e8 41 35 00 00       	call   1d666 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>
      }
   1a125:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1a129:	48 89 c7             	mov    %rax,%rdi
   1a12c:	e8 21 d8 fe ff       	call   7952 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   1a131:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a135:	c9                   	leave
   1a136:	c3                   	ret
   1a137:	90                   	nop

000000000001a138 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1a138:	55                   	push   %rbp
   1a139:	48 89 e5             	mov    %rsp,%rbp
   1a13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a140:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1a144:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a148:	5d                   	pop    %rbp
   1a149:	c3                   	ret

000000000001a14a <_ZNKSt6vectorIN3vkh6VertexILNS0_11PositionDimE0ELNS0_8ColorDimE0EEESaIS4_EE11_M_data_ptrIS4_EEPT_S9_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1a14a:	55                   	push   %rbp
   1a14b:	48 89 e5             	mov    %rsp,%rbp
   1a14e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a152:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1a156:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a15a:	5d                   	pop    %rbp
   1a15b:	c3                   	ret

000000000001a15c <_ZNKSt6vectorItSaItEE11_M_data_ptrItEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1a15c:	55                   	push   %rbp
   1a15d:	48 89 e5             	mov    %rsp,%rbp
   1a160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1a168:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a16c:	5d                   	pop    %rbp
   1a16d:	c3                   	ret

000000000001a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1a16e:	55                   	push   %rbp
   1a16f:	48 89 e5             	mov    %rsp,%rbp
   1a172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1a176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a17a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a17e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a182:	48 8b 00             	mov    (%rax),%rax
   1a185:	48 29 c2             	sub    %rax,%rdx
   1a188:	48 89 d0             	mov    %rdx,%rax
   1a18b:	48 c1 f8 03          	sar    $0x3,%rax
   1a18f:	5d                   	pop    %rbp
   1a190:	c3                   	ret
   1a191:	90                   	nop

000000000001a192 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1a192:	55                   	push   %rbp
   1a193:	48 89 e5             	mov    %rsp,%rbp
   1a196:	53                   	push   %rbx
   1a197:	48 83 ec 38          	sub    $0x38,%rsp
   1a19b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a19f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1a1a3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1a1a8:	0f 84 e7 01 00 00    	je     1a395 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1a1ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1b2:	48 89 c7             	mov    %rax,%rdi
   1a1b5:	e8 b4 ff ff ff       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   1a1ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a1be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1c2:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1a1c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1ca:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a1ce:	48 29 c2             	sub    %rax,%rdx
   1a1d1:	48 89 d0             	mov    %rdx,%rax
   1a1d4:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a1d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1a1dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1e0:	48 89 c7             	mov    %rax,%rdi
   1a1e3:	e8 9e 34 00 00       	call   1d686 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE8max_sizeEv>
   1a1e8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a1ec:	72 16                	jb     1a204 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   1a1ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1f2:	48 89 c7             	mov    %rax,%rdi
   1a1f5:	e8 8c 34 00 00       	call   1d686 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE8max_sizeEv>
   1a1fa:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a1fe:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a202:	73 07                	jae    1a20b <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   1a204:	b8 01 00 00 00       	mov    $0x1,%eax
   1a209:	eb 05                	jmp    1a210 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   1a20b:	b8 00 00 00 00       	mov    $0x0,%eax
   1a210:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1a212:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a216:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1a21a:	72 33                	jb     1a24f <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1a21c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a220:	48 89 c7             	mov    %rax,%rdi
   1a223:	e8 bc 1d 00 00       	call   1bfe4 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a228:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1a22b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a22f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a233:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a237:	48 89 ce             	mov    %rcx,%rsi
   1a23a:	48 89 c7             	mov    %rax,%rdi
   1a23d:	e8 66 34 00 00       	call   1d6a8 <_ZSt27__uninitialized_default_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1a242:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a246:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1a24a:	e9 46 01 00 00       	jmp    1a395 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1a24f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a253:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a257:	48 8d 15 22 c6 00 00 	lea    0xc622(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   1a25e:	48 89 ce             	mov    %rcx,%rsi
   1a261:	48 89 c7             	mov    %rax,%rdi
   1a264:	e8 69 34 00 00       	call   1d6d2 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE12_M_check_lenEmPKc>
   1a269:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1a26d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a271:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a275:	48 89 d6             	mov    %rdx,%rsi
   1a278:	48 89 c7             	mov    %rax,%rdi
   1a27b:	e8 1a 35 00 00       	call   1d79a <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE11_M_allocateEm>
   1a280:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1a284:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a288:	48 89 c7             	mov    %rax,%rdi
   1a28b:	e8 54 1d 00 00       	call   1bfe4 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a290:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1a293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a297:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1a29e:	00 
   1a29f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a2a3:	48 01 c1             	add    %rax,%rcx
   1a2a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a2aa:	48 89 c6             	mov    %rax,%rsi
   1a2ad:	48 89 cf             	mov    %rcx,%rdi
   1a2b0:	e8 f3 33 00 00       	call   1d6a8 <_ZSt27__uninitialized_default_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1a2b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a2b9:	48 89 c7             	mov    %rax,%rdi
   1a2bc:	e8 23 1d 00 00       	call   1bfe4 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a2c1:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1a2c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a2c8:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a2cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a2d0:	48 8b 00             	mov    (%rax),%rax
   1a2d3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a2d7:	48 89 c7             	mov    %rax,%rdi
   1a2da:	e8 ee 34 00 00       	call   1d7cd <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1a2df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1a2e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a2e7:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1a2eb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a2ef:	48 8b 12             	mov    (%rdx),%rdx
   1a2f2:	48 29 d1             	sub    %rdx,%rcx
   1a2f5:	48 c1 f9 03          	sar    $0x3,%rcx
   1a2f9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1a2fc:	48 89 d6             	mov    %rdx,%rsi
   1a2ff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a303:	48 8b 0a             	mov    (%rdx),%rcx
   1a306:	48 89 f2             	mov    %rsi,%rdx
   1a309:	48 89 ce             	mov    %rcx,%rsi
   1a30c:	48 89 c7             	mov    %rax,%rdi
   1a30f:	e8 9a 1c 00 00       	call   1bfae <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1a314:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a318:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a31c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1a31f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a323:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a327:	48 01 d0             	add    %rdx,%rax
   1a32a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a331:	00 
   1a332:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a336:	48 01 c2             	add    %rax,%rdx
   1a339:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a33d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1a341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a345:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a34c:	00 
   1a34d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a351:	48 01 c2             	add    %rax,%rdx
   1a354:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a358:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1a35c:	eb 37                	jmp    1a395 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1a35e:	48 89 c7             	mov    %rax,%rdi
   1a361:	e8 3a ae fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1a366:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a36a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a36e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a372:	48 89 ce             	mov    %rcx,%rsi
   1a375:	48 89 c7             	mov    %rax,%rdi
   1a378:	e8 31 1c 00 00       	call   1bfae <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1a37d:	e8 be b4 fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   1a382:	48 89 c3             	mov    %rax,%rbx
   1a385:	e8 d6 b5 fe ff       	call   5960 <__cxa_end_catch@plt>
   1a38a:	48 89 d8             	mov    %rbx,%rax
   1a38d:	48 89 c7             	mov    %rax,%rdi
   1a390:	e8 6b b6 fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   1a395:	90                   	nop
   1a396:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a39a:	c9                   	leave
   1a39b:	c3                   	ret

000000000001a39c <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1a39c:	55                   	push   %rbp
   1a39d:	48 89 e5             	mov    %rsp,%rbp
   1a3a0:	48 83 ec 20          	sub    $0x20,%rsp
   1a3a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a3a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1a3ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3b0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a3b4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1a3b8:	48 c1 f8 03          	sar    $0x3,%rax
   1a3bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a3c0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a3c5:	74 32                	je     1a3f9 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1a3c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3cb:	48 89 c7             	mov    %rax,%rdi
   1a3ce:	e8 11 1c 00 00       	call   1bfe4 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a3d3:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1a3d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3da:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1a3de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a3e2:	48 89 ce             	mov    %rcx,%rsi
   1a3e5:	48 89 c7             	mov    %rax,%rdi
   1a3e8:	e8 05 1c 00 00       	call   1bff2 <_ZSt8_DestroyIPP10VkBuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1a3ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a3f1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a3f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1a3f9:	90                   	nop
   1a3fa:	c9                   	leave
   1a3fb:	c3                   	ret

000000000001a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1a3fc:	55                   	push   %rbp
   1a3fd:	48 89 e5             	mov    %rsp,%rbp
   1a400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1a404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a408:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a40c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a410:	48 8b 00             	mov    (%rax),%rax
   1a413:	48 29 c2             	sub    %rax,%rdx
   1a416:	48 89 d0             	mov    %rdx,%rax
   1a419:	48 c1 f8 03          	sar    $0x3,%rax
   1a41d:	5d                   	pop    %rbp
   1a41e:	c3                   	ret
   1a41f:	90                   	nop

000000000001a420 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1a420:	55                   	push   %rbp
   1a421:	48 89 e5             	mov    %rsp,%rbp
   1a424:	53                   	push   %rbx
   1a425:	48 83 ec 38          	sub    $0x38,%rsp
   1a429:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a42d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1a431:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1a436:	0f 84 e7 01 00 00    	je     1a623 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1a43c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a440:	48 89 c7             	mov    %rax,%rdi
   1a443:	e8 b4 ff ff ff       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   1a448:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a44c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a450:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1a454:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a458:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a45c:	48 29 c2             	sub    %rax,%rdx
   1a45f:	48 89 d0             	mov    %rdx,%rax
   1a462:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a466:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1a46a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a46e:	48 89 c7             	mov    %rax,%rdi
   1a471:	e8 8a 33 00 00       	call   1d800 <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE8max_sizeEv>
   1a476:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a47a:	72 16                	jb     1a492 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0x72>
   1a47c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a480:	48 89 c7             	mov    %rax,%rdi
   1a483:	e8 78 33 00 00       	call   1d800 <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE8max_sizeEv>
   1a488:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a48c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a490:	73 07                	jae    1a499 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0x79>
   1a492:	b8 01 00 00 00       	mov    $0x1,%eax
   1a497:	eb 05                	jmp    1a49e <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0x7e>
   1a499:	b8 00 00 00 00       	mov    $0x0,%eax
   1a49e:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1a4a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a4a4:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1a4a8:	72 33                	jb     1a4dd <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1a4aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4ae:	48 89 c7             	mov    %rax,%rdi
   1a4b1:	e8 f2 1b 00 00       	call   1c0a8 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a4b6:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1a4b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4bd:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a4c1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a4c5:	48 89 ce             	mov    %rcx,%rsi
   1a4c8:	48 89 c7             	mov    %rax,%rdi
   1a4cb:	e8 52 33 00 00       	call   1d822 <_ZSt27__uninitialized_default_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1a4d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a4d4:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1a4d8:	e9 46 01 00 00       	jmp    1a623 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1a4dd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a4e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4e5:	48 8d 15 94 c3 00 00 	lea    0xc394(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   1a4ec:	48 89 ce             	mov    %rcx,%rsi
   1a4ef:	48 89 c7             	mov    %rax,%rdi
   1a4f2:	e8 55 33 00 00       	call   1d84c <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE12_M_check_lenEmPKc>
   1a4f7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1a4fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a503:	48 89 d6             	mov    %rdx,%rsi
   1a506:	48 89 c7             	mov    %rax,%rdi
   1a509:	e8 06 34 00 00       	call   1d914 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE11_M_allocateEm>
   1a50e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1a512:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a516:	48 89 c7             	mov    %rax,%rdi
   1a519:	e8 8a 1b 00 00       	call   1c0a8 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a51e:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1a521:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a525:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1a52c:	00 
   1a52d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a531:	48 01 c1             	add    %rax,%rcx
   1a534:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a538:	48 89 c6             	mov    %rax,%rsi
   1a53b:	48 89 cf             	mov    %rcx,%rdi
   1a53e:	e8 df 32 00 00       	call   1d822 <_ZSt27__uninitialized_default_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1a543:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a547:	48 89 c7             	mov    %rax,%rdi
   1a54a:	e8 59 1b 00 00       	call   1c0a8 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a54f:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1a552:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a556:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a55a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a55e:	48 8b 00             	mov    (%rax),%rax
   1a561:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a565:	48 89 c7             	mov    %rax,%rdi
   1a568:	e8 da 33 00 00       	call   1d947 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1a56d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1a571:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a575:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1a579:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a57d:	48 8b 12             	mov    (%rdx),%rdx
   1a580:	48 29 d1             	sub    %rdx,%rcx
   1a583:	48 c1 f9 03          	sar    $0x3,%rcx
   1a587:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1a58a:	48 89 d6             	mov    %rdx,%rsi
   1a58d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a591:	48 8b 0a             	mov    (%rdx),%rcx
   1a594:	48 89 f2             	mov    %rsi,%rdx
   1a597:	48 89 ce             	mov    %rcx,%rsi
   1a59a:	48 89 c7             	mov    %rax,%rdi
   1a59d:	e8 d0 1a 00 00       	call   1c072 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1a5a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5a6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a5aa:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1a5ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a5b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a5b5:	48 01 d0             	add    %rdx,%rax
   1a5b8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5bf:	00 
   1a5c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a5c4:	48 01 c2             	add    %rax,%rdx
   1a5c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1a5cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a5d3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5da:	00 
   1a5db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a5df:	48 01 c2             	add    %rax,%rdx
   1a5e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5e6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1a5ea:	eb 37                	jmp    1a623 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1a5ec:	48 89 c7             	mov    %rax,%rdi
   1a5ef:	e8 ac ab fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1a5f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a5fc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a600:	48 89 ce             	mov    %rcx,%rsi
   1a603:	48 89 c7             	mov    %rax,%rdi
   1a606:	e8 67 1a 00 00       	call   1c072 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1a60b:	e8 30 b2 fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   1a610:	48 89 c3             	mov    %rax,%rbx
   1a613:	e8 48 b3 fe ff       	call   5960 <__cxa_end_catch@plt>
   1a618:	48 89 d8             	mov    %rbx,%rax
   1a61b:	48 89 c7             	mov    %rax,%rdi
   1a61e:	e8 dd b3 fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   1a623:	90                   	nop
   1a624:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a628:	c9                   	leave
   1a629:	c3                   	ret

000000000001a62a <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1a62a:	55                   	push   %rbp
   1a62b:	48 89 e5             	mov    %rsp,%rbp
   1a62e:	48 83 ec 20          	sub    $0x20,%rsp
   1a632:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a636:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1a63a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a63e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a642:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1a646:	48 c1 f8 03          	sar    $0x3,%rax
   1a64a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a64e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a653:	74 32                	je     1a687 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1a655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a659:	48 89 c7             	mov    %rax,%rdi
   1a65c:	e8 47 1a 00 00       	call   1c0a8 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1a661:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1a664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a668:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1a66c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a670:	48 89 ce             	mov    %rcx,%rsi
   1a673:	48 89 c7             	mov    %rax,%rdi
   1a676:	e8 3b 1a 00 00       	call   1c0b6 <_ZSt8_DestroyIPP16VkDeviceMemory_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1a67b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a67f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a683:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1a687:	90                   	nop
   1a688:	c9                   	leave
   1a689:	c3                   	ret

000000000001a68a <_ZNSt6chrono13duration_castINS_8durationIfSt5ratioILl1ELl1EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   1a68a:	55                   	push   %rbp
   1a68b:	48 89 e5             	mov    %rsp,%rbp
   1a68e:	48 83 ec 10          	sub    $0x10,%rsp
   1a692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   1a696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a69a:	48 89 c7             	mov    %rax,%rdi
   1a69d:	e8 d7 32 00 00       	call   1d979 <_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILl1ELl1EEEES2_ILl1ELl1000000000EEfLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE>
      }
   1a6a2:	c9                   	leave
   1a6a3:	c3                   	ret

000000000001a6a4 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IfiiiEET_T0_T1_T2_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, Z _z, W _w)
   1a6a4:	55                   	push   %rbp
   1a6a5:	48 89 e5             	mov    %rsp,%rbp
   1a6a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6ac:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
   1a6b1:	89 75 f0             	mov    %esi,-0x10(%rbp)
   1a6b4:	89 55 ec             	mov    %edx,-0x14(%rbp)
   1a6b7:	89 4d e8             	mov    %ecx,-0x18(%rbp)
		: x(static_cast<T>(_x))
   1a6ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6be:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   1a6c3:	f3 0f 11 00          	movss  %xmm0,(%rax)
		, y(static_cast<T>(_y))
   1a6c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a6cb:	f3 0f 2a 45 f0       	cvtsi2ssl -0x10(%rbp),%xmm0
   1a6d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6d4:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
		, z(static_cast<T>(_z))
   1a6d9:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a6dd:	f3 0f 2a 45 ec       	cvtsi2ssl -0x14(%rbp),%xmm0
   1a6e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6e6:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
		, w(static_cast<T>(_w))
   1a6eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a6ef:	f3 0f 2a 45 e8       	cvtsi2ssl -0x18(%rbp),%xmm0
   1a6f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6f8:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
	{}
   1a6fd:	90                   	nop
   1a6fe:	5d                   	pop    %rbp
   1a6ff:	c3                   	ret

000000000001a700 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IifiiEET_T0_T1_T2_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, Z _z, W _w)
   1a700:	55                   	push   %rbp
   1a701:	48 89 e5             	mov    %rsp,%rbp
   1a704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a708:	89 75 f4             	mov    %esi,-0xc(%rbp)
   1a70b:	f3 0f 11 45 f0       	movss  %xmm0,-0x10(%rbp)
   1a710:	89 55 ec             	mov    %edx,-0x14(%rbp)
   1a713:	89 4d e8             	mov    %ecx,-0x18(%rbp)
		: x(static_cast<T>(_x))
   1a716:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a71a:	f3 0f 2a 45 f4       	cvtsi2ssl -0xc(%rbp),%xmm0
   1a71f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a723:	f3 0f 11 00          	movss  %xmm0,(%rax)
		, y(static_cast<T>(_y))
   1a727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a72b:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   1a730:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
		, z(static_cast<T>(_z))
   1a735:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a739:	f3 0f 2a 45 ec       	cvtsi2ssl -0x14(%rbp),%xmm0
   1a73e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a742:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
		, w(static_cast<T>(_w))
   1a747:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a74b:	f3 0f 2a 45 e8       	cvtsi2ssl -0x18(%rbp),%xmm0
   1a750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a754:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
	{}
   1a759:	90                   	nop
   1a75a:	5d                   	pop    %rbp
   1a75b:	c3                   	ret

000000000001a75c <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IiifiEET_T0_T1_T2_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, Z _z, W _w)
   1a75c:	55                   	push   %rbp
   1a75d:	48 89 e5             	mov    %rsp,%rbp
   1a760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a764:	89 75 f4             	mov    %esi,-0xc(%rbp)
   1a767:	89 55 f0             	mov    %edx,-0x10(%rbp)
   1a76a:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
   1a76f:	89 4d e8             	mov    %ecx,-0x18(%rbp)
		: x(static_cast<T>(_x))
   1a772:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a776:	f3 0f 2a 45 f4       	cvtsi2ssl -0xc(%rbp),%xmm0
   1a77b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a77f:	f3 0f 11 00          	movss  %xmm0,(%rax)
		, y(static_cast<T>(_y))
   1a783:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a787:	f3 0f 2a 45 f0       	cvtsi2ssl -0x10(%rbp),%xmm0
   1a78c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a790:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
		, z(static_cast<T>(_z))
   1a795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a799:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
   1a79e:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
		, w(static_cast<T>(_w))
   1a7a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a7a7:	f3 0f 2a 45 e8       	cvtsi2ssl -0x18(%rbp),%xmm0
   1a7ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7b0:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
	{}
   1a7b5:	90                   	nop
   1a7b6:	5d                   	pop    %rbp
   1a7b7:	c3                   	ret

000000000001a7b8 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1IiiifEET_T0_T1_T2_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, Z _z, W _w)
   1a7b8:	55                   	push   %rbp
   1a7b9:	48 89 e5             	mov    %rsp,%rbp
   1a7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a7c0:	89 75 f4             	mov    %esi,-0xc(%rbp)
   1a7c3:	89 55 f0             	mov    %edx,-0x10(%rbp)
   1a7c6:	89 4d ec             	mov    %ecx,-0x14(%rbp)
   1a7c9:	f3 0f 11 45 e8       	movss  %xmm0,-0x18(%rbp)
		: x(static_cast<T>(_x))
   1a7ce:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a7d2:	f3 0f 2a 45 f4       	cvtsi2ssl -0xc(%rbp),%xmm0
   1a7d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7db:	f3 0f 11 00          	movss  %xmm0,(%rax)
		, y(static_cast<T>(_y))
   1a7df:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a7e3:	f3 0f 2a 45 f0       	cvtsi2ssl -0x10(%rbp),%xmm0
   1a7e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7ec:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
		, z(static_cast<T>(_z))
   1a7f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a7f5:	f3 0f 2a 45 ec       	cvtsi2ssl -0x14(%rbp),%xmm0
   1a7fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a7fe:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
		, w(static_cast<T>(_w))
   1a803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a807:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
   1a80c:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
	{}
   1a811:	90                   	nop
   1a812:	5d                   	pop    %rbp
   1a813:	c3                   	ret

000000000001a814 <_ZN3glm9normalizeILi3EfLNS_9qualifierE0EEENS_3vecIXT_ET0_XT1_EEERKS4_>:

		return x < genType(0) ? genType(-1) : genType(1);
	}
*/
	template<length_t L, typename T, qualifier Q>
	GLM_FUNC_QUALIFIER vec<L, T, Q> normalize(vec<L, T, Q> const& x)
   1a814:	55                   	push   %rbp
   1a815:	48 89 e5             	mov    %rsp,%rbp
   1a818:	48 83 ec 30          	sub    $0x30,%rsp
   1a81c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	{
		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'normalize' accepts only floating-point inputs");

		return detail::compute_normalize<L, T, Q, detail::is_aligned<Q>::value>::call(x);
   1a820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a824:	48 89 c7             	mov    %rax,%rdi
   1a827:	e8 99 31 00 00       	call   1d9c5 <_ZN3glm6detail17compute_normalizeILi3EfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi3EfLS2_0EEE>
   1a82c:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1a831:	0f 28 c1             	movaps %xmm1,%xmm0
   1a834:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   1a838:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   1a83d:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1a841:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1a846:	0f 28 c8             	movaps %xmm0,%xmm1
	}
   1a849:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1a84e:	c9                   	leave
   1a84f:	c3                   	ret

000000000001a850 <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEES3_RKS4_>:
			v.y * scalar.x,
			v.z * scalar.x);
	}

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(T scalar, vec<3, T, Q> const& v)
   1a850:	55                   	push   %rbp
   1a851:	48 89 e5             	mov    %rsp,%rbp
   1a854:	48 83 ec 40          	sub    $0x40,%rsp
   1a858:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)
   1a85d:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
	{
		return vec<3, T, Q>(
			scalar * v.x,
			scalar * v.y,
			scalar * v.z);
   1a861:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a865:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
		return vec<3, T, Q>(
   1a86a:	0f 28 d0             	movaps %xmm0,%xmm2
   1a86d:	f3 0f 59 55 dc       	mulss  -0x24(%rbp),%xmm2
			scalar * v.y,
   1a872:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a876:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
		return vec<3, T, Q>(
   1a87b:	0f 28 c8             	movaps %xmm0,%xmm1
   1a87e:	f3 0f 59 4d dc       	mulss  -0x24(%rbp),%xmm1
			scalar * v.x,
   1a883:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a887:	f3 0f 10 00          	movss  (%rax),%xmm0
		return vec<3, T, Q>(
   1a88b:	f3 0f 59 45 dc       	mulss  -0x24(%rbp),%xmm0
   1a890:	66 0f 7e c2          	movd   %xmm0,%edx
   1a894:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   1a898:	66 0f 6e c2          	movd   %edx,%xmm0
   1a89c:	48 89 c7             	mov    %rax,%rdi
   1a89f:	e8 36 ac ff ff       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
			scalar * v.z);
   1a8a4:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1a8a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1a8ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1a8af:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1a8b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a8b6:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   1a8bb:	0f 28 c8             	movaps %xmm0,%xmm1
	}
   1a8be:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1a8c3:	c9                   	leave
   1a8c4:	c3                   	ret
   1a8c5:	90                   	nop

000000000001a8c6 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>:

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::col_type const& mat<4, 4, T, Q>::operator[](typename mat<4, 4, T, Q>::length_type i) const
   1a8c6:	55                   	push   %rbp
   1a8c7:	48 89 e5             	mov    %rsp,%rbp
   1a8ca:	48 83 ec 10          	sub    $0x10,%rsp
   1a8ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a8d2:	89 75 f4             	mov    %esi,-0xc(%rbp)
	{
		assert(i < this->length());
   1a8d5:	e8 f8 06 00 00       	call   1afd2 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EE6lengthEv>
   1a8da:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   1a8dd:	7c 28                	jl     1a907 <_ZNK3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi+0x41>
   1a8df:	48 8d 05 ba bf 00 00 	lea    0xbfba(%rip),%rax        # 268a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x584>
   1a8e6:	48 89 c1             	mov    %rax,%rcx
   1a8e9:	ba 2a 01 00 00       	mov    $0x12a,%edx
   1a8ee:	48 8d 05 83 be 00 00 	lea    0xbe83(%rip),%rax        # 26778 <_ZZN9VulkanApp6renderEvE11submitCount+0x45c>
   1a8f5:	48 89 c6             	mov    %rax,%rsi
   1a8f8:	48 8d 05 a1 be 00 00 	lea    0xbea1(%rip),%rax        # 267a0 <_ZZN9VulkanApp6renderEvE11submitCount+0x484>
   1a8ff:	48 89 c7             	mov    %rax,%rdi
   1a902:	e8 f9 a9 fe ff       	call   5300 <__assert_fail@plt>
		return this->value[i];
   1a907:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1a90a:	48 98                	cltq
   1a90c:	48 c1 e0 04          	shl    $0x4,%rax
   1a910:	48 89 c2             	mov    %rax,%rdx
   1a913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a917:	48 01 d0             	add    %rdx,%rax
	}
   1a91a:	c9                   	leave
   1a91b:	c3                   	ret

000000000001a91c <_ZN3glmplIfLNS_9qualifierE0EEENS_3vecILi4ET_XT0_EEERKS4_S6_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v1, vec<4, T, Q> const& v2)
   1a91c:	55                   	push   %rbp
   1a91d:	48 89 e5             	mov    %rsp,%rbp
   1a920:	53                   	push   %rbx
   1a921:	48 83 ec 28          	sub    $0x28,%rsp
   1a925:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a929:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
		return vec<4, T, Q>(v1) += v2;
   1a92d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a931:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a935:	48 8b 00             	mov    (%rax),%rax
   1a938:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a93c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1a940:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a944:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1a948:	48 89 d6             	mov    %rdx,%rsi
   1a94b:	48 89 c7             	mov    %rax,%rdi
   1a94e:	e8 d7 30 00 00       	call   1da2a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEpLIfEERS2_RKNS0_ILi4ET_LS1_0EEE>
   1a953:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1a957:	48 8b 00             	mov    (%rax),%rax
   1a95a:	48 89 c1             	mov    %rax,%rcx
   1a95d:	48 89 d3             	mov    %rdx,%rbx
   1a960:	48 89 d0             	mov    %rdx,%rax
	}
   1a963:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   1a968:	66 48 0f 6e c8       	movq   %rax,%xmm1
   1a96d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a971:	c9                   	leave
   1a972:	c3                   	ret

000000000001a973 <_ZN3glm8lookAtRHIfLNS_9qualifierE0EEENS_3matILi4ELi4ET_XT0_EEERKNS_3vecILi3ES3_XT0_EEES8_S8_>:
	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAtRH(vec<3, T, Q> const& eye, vec<3, T, Q> const& center, vec<3, T, Q> const& up)
   1a973:	55                   	push   %rbp
   1a974:	48 89 e5             	mov    %rsp,%rbp
   1a977:	53                   	push   %rbx
   1a978:	48 83 ec 78          	sub    $0x78,%rsp
   1a97c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1a980:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1a984:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1a988:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
		vec<3, T, Q> const f(normalize(center - eye));
   1a98c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1a990:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1a994:	48 89 d6             	mov    %rdx,%rsi
   1a997:	48 89 c7             	mov    %rax,%rdi
   1a99a:	e8 dc 30 00 00       	call   1da7b <_ZN3glmmiIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>
   1a99f:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1a9a4:	0f 28 c1             	movaps %xmm1,%xmm0
   1a9a7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1a9ab:	f3 0f 11 45 e0       	movss  %xmm0,-0x20(%rbp)
   1a9b0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1a9b4:	48 89 c7             	mov    %rax,%rdi
   1a9b7:	e8 58 fe ff ff       	call   1a814 <_ZN3glm9normalizeILi3EfLNS_9qualifierE0EEENS_3vecIXT_ET0_XT1_EEERKS4_>
   1a9bc:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1a9c1:	0f 28 c1             	movaps %xmm1,%xmm0
   1a9c4:	48 89 45 cc          	mov    %rax,-0x34(%rbp)
   1a9c8:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
		vec<3, T, Q> const s(normalize(cross(f, up)));
   1a9cd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1a9d1:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
   1a9d5:	48 89 d6             	mov    %rdx,%rsi
   1a9d8:	48 89 c7             	mov    %rax,%rdi
   1a9db:	e8 29 31 00 00       	call   1db09 <_ZN3glm5crossIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>
   1a9e0:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1a9e5:	0f 28 c1             	movaps %xmm1,%xmm0
   1a9e8:	48 89 45 e4          	mov    %rax,-0x1c(%rbp)
   1a9ec:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
   1a9f1:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
   1a9f5:	48 89 c7             	mov    %rax,%rdi
   1a9f8:	e8 17 fe ff ff       	call   1a814 <_ZN3glm9normalizeILi3EfLNS_9qualifierE0EEENS_3vecIXT_ET0_XT1_EEERKS4_>
   1a9fd:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1aa02:	0f 28 c1             	movaps %xmm1,%xmm0
   1aa05:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1aa09:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
		vec<3, T, Q> const u(cross(s, f));
   1aa0e:	48 8d 55 cc          	lea    -0x34(%rbp),%rdx
   1aa12:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1aa16:	48 89 d6             	mov    %rdx,%rsi
   1aa19:	48 89 c7             	mov    %rax,%rdi
   1aa1c:	e8 e8 30 00 00       	call   1db09 <_ZN3glm5crossIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>
   1aa21:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1aa26:	0f 28 c1             	movaps %xmm1,%xmm0
   1aa29:	48 89 45 b4          	mov    %rax,-0x4c(%rbp)
   1aa2d:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
		mat<4, 4, T, Q> Result(1);
   1aa32:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa36:	f3 0f 10 05 ae c0 00 	movss  0xc0ae(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1aa3d:	00 
   1aa3e:	f3 0f 11 00          	movss  %xmm0,(%rax)
   1aa42:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa46:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aa4a:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
   1aa4f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa53:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aa57:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
   1aa5c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa60:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aa64:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
   1aa69:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa6d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aa71:	f3 0f 11 40 10       	movss  %xmm0,0x10(%rax)
   1aa76:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa7a:	f3 0f 10 05 6a c0 00 	movss  0xc06a(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1aa81:	00 
   1aa82:	f3 0f 11 40 14       	movss  %xmm0,0x14(%rax)
   1aa87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa8b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aa8f:	f3 0f 11 40 18       	movss  %xmm0,0x18(%rax)
   1aa94:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aa98:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aa9c:	f3 0f 11 40 1c       	movss  %xmm0,0x1c(%rax)
   1aaa1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aaa5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aaa9:	f3 0f 11 40 20       	movss  %xmm0,0x20(%rax)
   1aaae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aab2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aab6:	f3 0f 11 40 24       	movss  %xmm0,0x24(%rax)
   1aabb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aabf:	f3 0f 10 05 25 c0 00 	movss  0xc025(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1aac6:	00 
   1aac7:	f3 0f 11 40 28       	movss  %xmm0,0x28(%rax)
   1aacc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aad0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aad4:	f3 0f 11 40 2c       	movss  %xmm0,0x2c(%rax)
   1aad9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aadd:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aae1:	f3 0f 11 40 30       	movss  %xmm0,0x30(%rax)
   1aae6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aaea:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aaee:	f3 0f 11 40 34       	movss  %xmm0,0x34(%rax)
   1aaf3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1aaf7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1aafb:	f3 0f 11 40 38       	movss  %xmm0,0x38(%rax)
   1ab00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab04:	f3 0f 10 05 e0 bf 00 	movss  0xbfe0(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1ab0b:	00 
   1ab0c:	f3 0f 11 40 3c       	movss  %xmm0,0x3c(%rax)
		Result[0][0] = s.x;
   1ab11:	f3 0f 10 65 c0       	movss  -0x40(%rbp),%xmm4
   1ab16:	f3 0f 11 65 8c       	movss  %xmm4,-0x74(%rbp)
   1ab1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab1f:	be 00 00 00 00       	mov    $0x0,%esi
   1ab24:	48 89 c7             	mov    %rax,%rdi
   1ab27:	e8 08 d2 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ab2c:	be 00 00 00 00       	mov    $0x0,%esi
   1ab31:	48 89 c7             	mov    %rax,%rdi
   1ab34:	e8 51 d2 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ab39:	f3 0f 10 65 8c       	movss  -0x74(%rbp),%xmm4
   1ab3e:	f3 0f 11 20          	movss  %xmm4,(%rax)
		Result[1][0] = s.y;
   1ab42:	f3 0f 10 6d c4       	movss  -0x3c(%rbp),%xmm5
   1ab47:	f3 0f 11 6d 8c       	movss  %xmm5,-0x74(%rbp)
   1ab4c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab50:	be 01 00 00 00       	mov    $0x1,%esi
   1ab55:	48 89 c7             	mov    %rax,%rdi
   1ab58:	e8 d7 d1 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ab5d:	be 00 00 00 00       	mov    $0x0,%esi
   1ab62:	48 89 c7             	mov    %rax,%rdi
   1ab65:	e8 20 d2 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ab6a:	f3 0f 10 6d 8c       	movss  -0x74(%rbp),%xmm5
   1ab6f:	f3 0f 11 28          	movss  %xmm5,(%rax)
		Result[2][0] = s.z;
   1ab73:	f3 0f 10 75 c8       	movss  -0x38(%rbp),%xmm6
   1ab78:	f3 0f 11 75 8c       	movss  %xmm6,-0x74(%rbp)
   1ab7d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ab81:	be 02 00 00 00       	mov    $0x2,%esi
   1ab86:	48 89 c7             	mov    %rax,%rdi
   1ab89:	e8 a6 d1 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ab8e:	be 00 00 00 00       	mov    $0x0,%esi
   1ab93:	48 89 c7             	mov    %rax,%rdi
   1ab96:	e8 ef d1 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ab9b:	f3 0f 10 75 8c       	movss  -0x74(%rbp),%xmm6
   1aba0:	f3 0f 11 30          	movss  %xmm6,(%rax)
		Result[0][1] = u.x;
   1aba4:	f3 0f 10 7d b4       	movss  -0x4c(%rbp),%xmm7
   1aba9:	f3 0f 11 7d 8c       	movss  %xmm7,-0x74(%rbp)
   1abae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1abb2:	be 00 00 00 00       	mov    $0x0,%esi
   1abb7:	48 89 c7             	mov    %rax,%rdi
   1abba:	e8 75 d1 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1abbf:	be 01 00 00 00       	mov    $0x1,%esi
   1abc4:	48 89 c7             	mov    %rax,%rdi
   1abc7:	e8 be d1 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1abcc:	f3 0f 10 7d 8c       	movss  -0x74(%rbp),%xmm7
   1abd1:	f3 0f 11 38          	movss  %xmm7,(%rax)
		Result[1][1] = u.y;
   1abd5:	f3 0f 10 65 b8       	movss  -0x48(%rbp),%xmm4
   1abda:	f3 0f 11 65 8c       	movss  %xmm4,-0x74(%rbp)
   1abdf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1abe3:	be 01 00 00 00       	mov    $0x1,%esi
   1abe8:	48 89 c7             	mov    %rax,%rdi
   1abeb:	e8 44 d1 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1abf0:	be 01 00 00 00       	mov    $0x1,%esi
   1abf5:	48 89 c7             	mov    %rax,%rdi
   1abf8:	e8 8d d1 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1abfd:	f3 0f 10 65 8c       	movss  -0x74(%rbp),%xmm4
   1ac02:	f3 0f 11 20          	movss  %xmm4,(%rax)
		Result[2][1] = u.z;
   1ac06:	f3 0f 10 6d bc       	movss  -0x44(%rbp),%xmm5
   1ac0b:	f3 0f 11 6d 8c       	movss  %xmm5,-0x74(%rbp)
   1ac10:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ac14:	be 02 00 00 00       	mov    $0x2,%esi
   1ac19:	48 89 c7             	mov    %rax,%rdi
   1ac1c:	e8 13 d1 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ac21:	be 01 00 00 00       	mov    $0x1,%esi
   1ac26:	48 89 c7             	mov    %rax,%rdi
   1ac29:	e8 5c d1 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ac2e:	f3 0f 10 6d 8c       	movss  -0x74(%rbp),%xmm5
   1ac33:	f3 0f 11 28          	movss  %xmm5,(%rax)
		Result[0][2] =-f.x;
   1ac37:	f3 0f 10 45 cc       	movss  -0x34(%rbp),%xmm0
   1ac3c:	f3 0f 10 0d cc be 00 	movss  0xbecc(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1ac43:	00 
   1ac44:	0f 57 c1             	xorps  %xmm1,%xmm0
   1ac47:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
   1ac4c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ac50:	be 00 00 00 00       	mov    $0x0,%esi
   1ac55:	48 89 c7             	mov    %rax,%rdi
   1ac58:	e8 d7 d0 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ac5d:	be 02 00 00 00       	mov    $0x2,%esi
   1ac62:	48 89 c7             	mov    %rax,%rdi
   1ac65:	e8 20 d1 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ac6a:	f3 0f 10 45 8c       	movss  -0x74(%rbp),%xmm0
   1ac6f:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[1][2] =-f.y;
   1ac73:	f3 0f 10 45 d0       	movss  -0x30(%rbp),%xmm0
   1ac78:	f3 0f 10 0d 90 be 00 	movss  0xbe90(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1ac7f:	00 
   1ac80:	0f 57 c1             	xorps  %xmm1,%xmm0
   1ac83:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
   1ac88:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ac8c:	be 01 00 00 00       	mov    $0x1,%esi
   1ac91:	48 89 c7             	mov    %rax,%rdi
   1ac94:	e8 9b d0 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ac99:	be 02 00 00 00       	mov    $0x2,%esi
   1ac9e:	48 89 c7             	mov    %rax,%rdi
   1aca1:	e8 e4 d0 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1aca6:	f3 0f 10 45 8c       	movss  -0x74(%rbp),%xmm0
   1acab:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[2][2] =-f.z;
   1acaf:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
   1acb4:	f3 0f 10 0d 54 be 00 	movss  0xbe54(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1acbb:	00 
   1acbc:	0f 57 c1             	xorps  %xmm1,%xmm0
   1acbf:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
   1acc4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1acc8:	be 02 00 00 00       	mov    $0x2,%esi
   1accd:	48 89 c7             	mov    %rax,%rdi
   1acd0:	e8 5f d0 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1acd5:	be 02 00 00 00       	mov    $0x2,%esi
   1acda:	48 89 c7             	mov    %rax,%rdi
   1acdd:	e8 a8 d0 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ace2:	f3 0f 10 45 8c       	movss  -0x74(%rbp),%xmm0
   1ace7:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[3][0] =-dot(s, eye);
   1aceb:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1acef:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1acf3:	48 89 d6             	mov    %rdx,%rsi
   1acf6:	48 89 c7             	mov    %rax,%rdi
   1acf9:	e8 52 2e 00 00       	call   1db50 <_ZN3glm3dotILi3EfLNS_9qualifierE0EEET0_RKNS_3vecIXT_ES2_XT1_EEES6_>
   1acfe:	66 0f 7e c0          	movd   %xmm0,%eax
   1ad02:	f3 0f 10 05 06 be 00 	movss  0xbe06(%rip),%xmm0        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1ad09:	00 
   1ad0a:	66 0f 6e d0          	movd   %eax,%xmm2
   1ad0e:	0f 57 d0             	xorps  %xmm0,%xmm2
   1ad11:	f3 0f 11 55 8c       	movss  %xmm2,-0x74(%rbp)
   1ad16:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ad1a:	be 03 00 00 00       	mov    $0x3,%esi
   1ad1f:	48 89 c7             	mov    %rax,%rdi
   1ad22:	e8 0d d0 ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ad27:	be 00 00 00 00       	mov    $0x0,%esi
   1ad2c:	48 89 c7             	mov    %rax,%rdi
   1ad2f:	e8 56 d0 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ad34:	f3 0f 10 55 8c       	movss  -0x74(%rbp),%xmm2
   1ad39:	f3 0f 11 10          	movss  %xmm2,(%rax)
		Result[3][1] =-dot(u, eye);
   1ad3d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1ad41:	48 8d 45 b4          	lea    -0x4c(%rbp),%rax
   1ad45:	48 89 d6             	mov    %rdx,%rsi
   1ad48:	48 89 c7             	mov    %rax,%rdi
   1ad4b:	e8 00 2e 00 00       	call   1db50 <_ZN3glm3dotILi3EfLNS_9qualifierE0EEET0_RKNS_3vecIXT_ES2_XT1_EEES6_>
   1ad50:	66 0f 7e c0          	movd   %xmm0,%eax
   1ad54:	f3 0f 10 05 b4 bd 00 	movss  0xbdb4(%rip),%xmm0        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1ad5b:	00 
   1ad5c:	66 0f 6e d8          	movd   %eax,%xmm3
   1ad60:	0f 57 d8             	xorps  %xmm0,%xmm3
   1ad63:	f3 0f 11 5d 8c       	movss  %xmm3,-0x74(%rbp)
   1ad68:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ad6c:	be 03 00 00 00       	mov    $0x3,%esi
   1ad71:	48 89 c7             	mov    %rax,%rdi
   1ad74:	e8 bb cf ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1ad79:	be 01 00 00 00       	mov    $0x1,%esi
   1ad7e:	48 89 c7             	mov    %rax,%rdi
   1ad81:	e8 04 d0 ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1ad86:	f3 0f 10 5d 8c       	movss  -0x74(%rbp),%xmm3
   1ad8b:	f3 0f 11 18          	movss  %xmm3,(%rax)
		Result[3][2] = dot(f, eye);
   1ad8f:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1ad93:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
   1ad97:	48 89 d6             	mov    %rdx,%rsi
   1ad9a:	48 89 c7             	mov    %rax,%rdi
   1ad9d:	e8 ae 2d 00 00       	call   1db50 <_ZN3glm3dotILi3EfLNS_9qualifierE0EEET0_RKNS_3vecIXT_ES2_XT1_EEES6_>
   1ada2:	66 0f 7e c3          	movd   %xmm0,%ebx
   1ada6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1adaa:	be 03 00 00 00       	mov    $0x3,%esi
   1adaf:	48 89 c7             	mov    %rax,%rdi
   1adb2:	e8 7d cf ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1adb7:	be 02 00 00 00       	mov    $0x2,%esi
   1adbc:	48 89 c7             	mov    %rax,%rdi
   1adbf:	e8 c6 cf ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1adc4:	89 18                	mov    %ebx,(%rax)
		return Result;
   1adc6:	90                   	nop
	}
   1adc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1adcb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1adcf:	c9                   	leave
   1add0:	c3                   	ret

000000000001add1 <_ZN3glm16perspectiveRH_NOIfEENS_3matILi4ELi4ET_LNS_9qualifierE0EEES2_S2_S2_S2_>:
	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH_NO(T fovy, T aspect, T zNear, T zFar)
   1add1:	55                   	push   %rbp
   1add2:	48 89 e5             	mov    %rsp,%rbp
   1add5:	48 83 ec 30          	sub    $0x30,%rsp
   1add9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1addd:	f3 0f 11 45 e4       	movss  %xmm0,-0x1c(%rbp)
   1ade2:	f3 0f 11 4d e0       	movss  %xmm1,-0x20(%rbp)
   1ade7:	f3 0f 11 55 dc       	movss  %xmm2,-0x24(%rbp)
   1adec:	f3 0f 11 5d d8       	movss  %xmm3,-0x28(%rbp)
		assert(abs(aspect - std::numeric_limits<T>::epsilon()) > static_cast<T>(0));
   1adf1:	e8 a6 a6 ff ff       	call   1549c <_ZNSt14numeric_limitsIfE7epsilonEv>
   1adf6:	f3 0f 10 4d e0       	movss  -0x20(%rbp),%xmm1
   1adfb:	f3 0f 5c c8          	subss  %xmm0,%xmm1
   1adff:	66 0f 7e c8          	movd   %xmm1,%eax
   1ae03:	66 0f 6e c0          	movd   %eax,%xmm0
   1ae07:	e8 69 2d 00 00       	call   1db75 <_ZN3glm3absIfEET_S1_>
   1ae0c:	66 0f 7e c0          	movd   %xmm0,%eax
   1ae10:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ae14:	66 0f 6e e0          	movd   %eax,%xmm4
   1ae18:	0f 2f e0             	comiss %xmm0,%xmm4
   1ae1b:	77 28                	ja     1ae45 <_ZN3glm16perspectiveRH_NOIfEENS_3matILi4ELi4ET_LNS_9qualifierE0EEES2_S2_S2_S2_+0x74>
   1ae1d:	48 8d 05 5c bb 00 00 	lea    0xbb5c(%rip),%rax        # 26980 <_ZZN9VulkanApp6renderEvE11submitCount+0x664>
   1ae24:	48 89 c1             	mov    %rax,%rcx
   1ae27:	ba fb 00 00 00       	mov    $0xfb,%edx
   1ae2c:	48 8d 05 a5 bb 00 00 	lea    0xbba5(%rip),%rax        # 269d8 <_ZZN9VulkanApp6renderEvE11submitCount+0x6bc>
   1ae33:	48 89 c6             	mov    %rax,%rsi
   1ae36:	48 8d 05 cb bb 00 00 	lea    0xbbcb(%rip),%rax        # 26a08 <_ZZN9VulkanApp6renderEvE11submitCount+0x6ec>
   1ae3d:	48 89 c7             	mov    %rax,%rdi
   1ae40:	e8 bb a4 fe ff       	call   5300 <__assert_fail@plt>
		T const tanHalfFovy = tan(fovy / static_cast<T>(2));
   1ae45:	f3 0f 10 45 e4       	movss  -0x1c(%rbp),%xmm0
   1ae4a:	f3 0f 10 0d a6 bc 00 	movss  0xbca6(%rip),%xmm1        # 26af8 <_ZZN9VulkanApp6renderEvE11submitCount+0x7dc>
   1ae51:	00 
   1ae52:	f3 0f 5e c1          	divss  %xmm1,%xmm0
   1ae56:	66 0f 7e c0          	movd   %xmm0,%eax
   1ae5a:	66 0f 6e c0          	movd   %eax,%xmm0
   1ae5e:	e8 1e a6 ff ff       	call   15481 <_ZSt3tanf>
   1ae63:	66 0f 7e c0          	movd   %xmm0,%eax
   1ae67:	89 45 fc             	mov    %eax,-0x4(%rbp)
		mat<4, 4, T, defaultp> Result(static_cast<T>(0));
   1ae6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae6e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ae72:	0f 11 00             	movups %xmm0,(%rax)
   1ae75:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   1ae79:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   1ae7d:	0f 11 40 30          	movups %xmm0,0x30(%rax)
		Result[0][0] = static_cast<T>(1) / (aspect * tanHalfFovy);
   1ae81:	f3 0f 10 45 e0       	movss  -0x20(%rbp),%xmm0
   1ae86:	0f 28 c8             	movaps %xmm0,%xmm1
   1ae89:	f3 0f 59 4d fc       	mulss  -0x4(%rbp),%xmm1
   1ae8e:	f3 0f 10 05 56 bc 00 	movss  0xbc56(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1ae95:	00 
   1ae96:	f3 0f 5e c1          	divss  %xmm1,%xmm0
   1ae9a:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   1ae9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aea3:	be 00 00 00 00       	mov    $0x0,%esi
   1aea8:	48 89 c7             	mov    %rax,%rdi
   1aeab:	e8 84 ce ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1aeb0:	be 00 00 00 00       	mov    $0x0,%esi
   1aeb5:	48 89 c7             	mov    %rax,%rdi
   1aeb8:	e8 cd ce ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1aebd:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
   1aec2:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[1][1] = static_cast<T>(1) / (tanHalfFovy);
   1aec6:	f3 0f 10 05 1e bc 00 	movss  0xbc1e(%rip),%xmm0        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1aecd:	00 
   1aece:	f3 0f 5e 45 fc       	divss  -0x4(%rbp),%xmm0
   1aed3:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   1aed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aedc:	be 01 00 00 00       	mov    $0x1,%esi
   1aee1:	48 89 c7             	mov    %rax,%rdi
   1aee4:	e8 4b ce ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1aee9:	be 01 00 00 00       	mov    $0x1,%esi
   1aeee:	48 89 c7             	mov    %rax,%rdi
   1aef1:	e8 94 ce ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1aef6:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
   1aefb:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[2][2] = - (zFar + zNear) / (zFar - zNear);
   1aeff:	f3 0f 10 45 d8       	movss  -0x28(%rbp),%xmm0
   1af04:	f3 0f 58 45 dc       	addss  -0x24(%rbp),%xmm0
   1af09:	f3 0f 10 0d ff bb 00 	movss  0xbbff(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1af10:	00 
   1af11:	0f 57 c1             	xorps  %xmm1,%xmm0
   1af14:	f3 0f 10 4d d8       	movss  -0x28(%rbp),%xmm1
   1af19:	f3 0f 5c 4d dc       	subss  -0x24(%rbp),%xmm1
   1af1e:	f3 0f 5e c1          	divss  %xmm1,%xmm0
   1af22:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   1af27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1af2b:	be 02 00 00 00       	mov    $0x2,%esi
   1af30:	48 89 c7             	mov    %rax,%rdi
   1af33:	e8 fc cd ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1af38:	be 02 00 00 00       	mov    $0x2,%esi
   1af3d:	48 89 c7             	mov    %rax,%rdi
   1af40:	e8 45 ce ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1af45:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
   1af4a:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[2][3] = - static_cast<T>(1);
   1af4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1af52:	be 02 00 00 00       	mov    $0x2,%esi
   1af57:	48 89 c7             	mov    %rax,%rdi
   1af5a:	e8 d5 cd ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1af5f:	be 03 00 00 00       	mov    $0x3,%esi
   1af64:	48 89 c7             	mov    %rax,%rdi
   1af67:	e8 1e ce ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1af6c:	f3 0f 10 05 b0 bb 00 	movss  0xbbb0(%rip),%xmm0        # 26b24 <_ZZN9VulkanApp6renderEvE11submitCount+0x808>
   1af73:	00 
   1af74:	f3 0f 11 00          	movss  %xmm0,(%rax)
		Result[3][2] = - (static_cast<T>(2) * zFar * zNear) / (zFar - zNear);
   1af78:	f3 0f 10 45 d8       	movss  -0x28(%rbp),%xmm0
   1af7d:	f3 0f 58 c0          	addss  %xmm0,%xmm0
   1af81:	f3 0f 59 45 dc       	mulss  -0x24(%rbp),%xmm0
   1af86:	f3 0f 10 0d 82 bb 00 	movss  0xbb82(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1af8d:	00 
   1af8e:	0f 57 c1             	xorps  %xmm1,%xmm0
   1af91:	f3 0f 10 4d d8       	movss  -0x28(%rbp),%xmm1
   1af96:	f3 0f 5c 4d dc       	subss  -0x24(%rbp),%xmm1
   1af9b:	f3 0f 5e c1          	divss  %xmm1,%xmm0
   1af9f:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
   1afa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afa8:	be 03 00 00 00       	mov    $0x3,%esi
   1afad:	48 89 c7             	mov    %rax,%rdi
   1afb0:	e8 7f cd ff ff       	call   17d34 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EEixEi>
   1afb5:	be 02 00 00 00       	mov    $0x2,%esi
   1afba:	48 89 c7             	mov    %rax,%rdi
   1afbd:	e8 c8 cd ff ff       	call   17d8a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEixEi>
   1afc2:	f3 0f 10 45 d4       	movss  -0x2c(%rbp),%xmm0
   1afc7:	f3 0f 11 00          	movss  %xmm0,(%rax)
		return Result;
   1afcb:	90                   	nop
	}
   1afcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afd0:	c9                   	leave
   1afd1:	c3                   	ret

000000000001afd2 <_ZN3glm3matILi4ELi4EfLNS_9qualifierE0EE6lengthEv>:

	public:
		// -- Accesses --

		typedef length_t length_type;
		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}
   1afd2:	55                   	push   %rbp
   1afd3:	48 89 e5             	mov    %rsp,%rbp
   1afd6:	b8 04 00 00 00       	mov    $0x4,%eax
   1afdb:	5d                   	pop    %rbp
   1afdc:	c3                   	ret

000000000001afdd <_ZN3glm3vecILi4EfLNS_9qualifierE0EE6lengthEv>:
		// -- Component accesses --

		typedef length_t length_type;

		/// Return the count of components of the vector
		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}
   1afdd:	55                   	push   %rbp
   1afde:	48 89 e5             	mov    %rsp,%rbp
   1afe1:	b8 04 00 00 00       	mov    $0x4,%eax
   1afe6:	5d                   	pop    %rbp
   1afe7:	c3                   	ret

000000000001afe8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1afe8:	55                   	push   %rbp
   1afe9:	48 89 e5             	mov    %rsp,%rbp
   1afec:	53                   	push   %rbx
   1afed:	48 83 ec 38          	sub    $0x38,%rsp
   1aff1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1aff5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1aff9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1affe:	0f 84 e7 01 00 00    	je     1b1eb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1b004:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b008:	48 89 c7             	mov    %rax,%rdi
   1b00b:	e8 36 d3 ff ff       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1b010:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1b014:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b018:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1b01c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b020:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b024:	48 29 c2             	sub    %rax,%rdx
   1b027:	48 89 d0             	mov    %rdx,%rax
   1b02a:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1b02e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1b032:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b036:	48 89 c7             	mov    %rax,%rdi
   1b039:	e8 52 2b 00 00       	call   1db90 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1b03e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1b042:	72 16                	jb     1b05a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   1b044:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b048:	48 89 c7             	mov    %rax,%rdi
   1b04b:	e8 40 2b 00 00       	call   1db90 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1b050:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1b054:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1b058:	73 07                	jae    1b061 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   1b05a:	b8 01 00 00 00       	mov    $0x1,%eax
   1b05f:	eb 05                	jmp    1b066 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   1b061:	b8 00 00 00 00       	mov    $0x0,%eax
   1b066:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1b068:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b06c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1b070:	72 33                	jb     1b0a5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1b072:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b076:	48 89 c7             	mov    %rax,%rdi
   1b079:	e8 26 0a 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b07e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1b081:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b085:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b089:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1b08d:	48 89 ce             	mov    %rcx,%rsi
   1b090:	48 89 c7             	mov    %rax,%rdi
   1b093:	e8 1a 2b 00 00       	call   1dbb2 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1b098:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b09c:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1b0a0:	e9 46 01 00 00       	jmp    1b1eb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1b0a5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1b0a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b0ad:	48 8d 15 cc b7 00 00 	lea    0xb7cc(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   1b0b4:	48 89 ce             	mov    %rcx,%rsi
   1b0b7:	48 89 c7             	mov    %rax,%rdi
   1b0ba:	e8 1d 2b 00 00       	call   1dbdc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   1b0bf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1b0c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b0c7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b0cb:	48 89 d6             	mov    %rdx,%rsi
   1b0ce:	48 89 c7             	mov    %rax,%rdi
   1b0d1:	e8 ce 2b 00 00       	call   1dca4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   1b0d6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1b0da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b0de:	48 89 c7             	mov    %rax,%rdi
   1b0e1:	e8 be 09 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b0e6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1b0e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b0ed:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1b0f4:	00 
   1b0f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b0f9:	48 01 c1             	add    %rax,%rcx
   1b0fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b100:	48 89 c6             	mov    %rax,%rsi
   1b103:	48 89 cf             	mov    %rcx,%rdi
   1b106:	e8 a7 2a 00 00       	call   1dbb2 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1b10b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b10f:	48 89 c7             	mov    %rax,%rdi
   1b112:	e8 8d 09 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b117:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1b11a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b11e:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1b122:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b126:	48 8b 00             	mov    (%rax),%rax
   1b129:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b12d:	48 89 c7             	mov    %rax,%rdi
   1b130:	e8 a2 2b 00 00       	call   1dcd7 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1b135:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1b139:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b13d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1b141:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b145:	48 8b 12             	mov    (%rdx),%rdx
   1b148:	48 29 d1             	sub    %rdx,%rcx
   1b14b:	48 c1 f9 03          	sar    $0x3,%rcx
   1b14f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1b152:	48 89 d6             	mov    %rdx,%rsi
   1b155:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b159:	48 8b 0a             	mov    (%rdx),%rcx
   1b15c:	48 89 f2             	mov    %rsi,%rdx
   1b15f:	48 89 ce             	mov    %rcx,%rsi
   1b162:	48 89 c7             	mov    %rax,%rdi
   1b165:	e8 f4 0c 00 00       	call   1be5e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1b16a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b16e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b172:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1b175:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b179:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b17d:	48 01 d0             	add    %rdx,%rax
   1b180:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b187:	00 
   1b188:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b18c:	48 01 c2             	add    %rax,%rdx
   1b18f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b193:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1b197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b19b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b1a2:	00 
   1b1a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b1a7:	48 01 c2             	add    %rax,%rdx
   1b1aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b1ae:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1b1b2:	eb 37                	jmp    1b1eb <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1b1b4:	48 89 c7             	mov    %rax,%rdi
   1b1b7:	e8 e4 9f fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1b1bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b1c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b1c4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1b1c8:	48 89 ce             	mov    %rcx,%rsi
   1b1cb:	48 89 c7             	mov    %rax,%rdi
   1b1ce:	e8 8b 0c 00 00       	call   1be5e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1b1d3:	e8 68 a6 fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   1b1d8:	48 89 c3             	mov    %rax,%rbx
   1b1db:	e8 80 a7 fe ff       	call   5960 <__cxa_end_catch@plt>
   1b1e0:	48 89 d8             	mov    %rbx,%rax
   1b1e3:	48 89 c7             	mov    %rax,%rdi
   1b1e6:	e8 15 a8 fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   1b1eb:	90                   	nop
   1b1ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b1f0:	c9                   	leave
   1b1f1:	c3                   	ret

000000000001b1f2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1b1f2:	55                   	push   %rbp
   1b1f3:	48 89 e5             	mov    %rsp,%rbp
   1b1f6:	48 83 ec 20          	sub    $0x20,%rsp
   1b1fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b1fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1b202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b206:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b20a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1b20e:	48 c1 f8 03          	sar    $0x3,%rax
   1b212:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b216:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1b21b:	74 32                	je     1b24f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1b21d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b221:	48 89 c7             	mov    %rax,%rdi
   1b224:	e8 7b 08 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b229:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1b22c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b230:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1b234:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b238:	48 89 ce             	mov    %rcx,%rsi
   1b23b:	48 89 c7             	mov    %rax,%rdi
   1b23e:	e8 6f 08 00 00       	call   1bab2 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1b243:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b247:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b24b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1b24f:	90                   	nop
   1b250:	c9                   	leave
   1b251:	c3                   	ret

000000000001b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1b252:	55                   	push   %rbp
   1b253:	48 89 e5             	mov    %rsp,%rbp
   1b256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1b25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b25e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1b262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b266:	48 8b 00             	mov    (%rax),%rax
   1b269:	48 29 c2             	sub    %rax,%rdx
   1b26c:	48 89 d0             	mov    %rdx,%rax
   1b26f:	48 c1 f8 03          	sar    $0x3,%rax
   1b273:	5d                   	pop    %rbp
   1b274:	c3                   	ret
   1b275:	90                   	nop

000000000001b276 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1b276:	55                   	push   %rbp
   1b277:	48 89 e5             	mov    %rsp,%rbp
   1b27a:	53                   	push   %rbx
   1b27b:	48 83 ec 38          	sub    $0x38,%rsp
   1b27f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1b283:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1b287:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1b28c:	0f 84 e7 01 00 00    	je     1b479 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1b292:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b296:	48 89 c7             	mov    %rax,%rdi
   1b299:	e8 b4 ff ff ff       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1b29e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1b2a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b2a6:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1b2aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b2ae:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b2b2:	48 29 c2             	sub    %rax,%rdx
   1b2b5:	48 89 d0             	mov    %rdx,%rax
   1b2b8:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1b2bc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1b2c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b2c4:	48 89 c7             	mov    %rax,%rdi
   1b2c7:	e8 3e 2a 00 00       	call   1dd0a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1b2cc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1b2d0:	72 16                	jb     1b2e8 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   1b2d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b2d6:	48 89 c7             	mov    %rax,%rdi
   1b2d9:	e8 2c 2a 00 00       	call   1dd0a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1b2de:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1b2e2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1b2e6:	73 07                	jae    1b2ef <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   1b2e8:	b8 01 00 00 00       	mov    $0x1,%eax
   1b2ed:	eb 05                	jmp    1b2f4 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   1b2ef:	b8 00 00 00 00       	mov    $0x0,%eax
   1b2f4:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1b2f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2fa:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1b2fe:	72 33                	jb     1b333 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1b300:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b304:	48 89 c7             	mov    %rax,%rdi
   1b307:	e8 14 0c 00 00       	call   1bf20 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b30c:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1b30f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b313:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b317:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1b31b:	48 89 ce             	mov    %rcx,%rsi
   1b31e:	48 89 c7             	mov    %rax,%rdi
   1b321:	e8 06 2a 00 00       	call   1dd2c <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1b326:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b32a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1b32e:	e9 46 01 00 00       	jmp    1b479 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1b333:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1b337:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b33b:	48 8d 15 3e b5 00 00 	lea    0xb53e(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   1b342:	48 89 ce             	mov    %rcx,%rsi
   1b345:	48 89 c7             	mov    %rax,%rdi
   1b348:	e8 09 2a 00 00       	call   1dd56 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   1b34d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1b351:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b355:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b359:	48 89 d6             	mov    %rdx,%rsi
   1b35c:	48 89 c7             	mov    %rax,%rdi
   1b35f:	e8 ba 2a 00 00       	call   1de1e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   1b364:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1b368:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b36c:	48 89 c7             	mov    %rax,%rdi
   1b36f:	e8 ac 0b 00 00       	call   1bf20 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b374:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1b377:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b37b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1b382:	00 
   1b383:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b387:	48 01 c1             	add    %rax,%rcx
   1b38a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b38e:	48 89 c6             	mov    %rax,%rsi
   1b391:	48 89 cf             	mov    %rcx,%rdi
   1b394:	e8 93 29 00 00       	call   1dd2c <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1b399:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b39d:	48 89 c7             	mov    %rax,%rdi
   1b3a0:	e8 7b 0b 00 00       	call   1bf20 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b3a5:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1b3a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b3ac:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1b3b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b3b4:	48 8b 00             	mov    (%rax),%rax
   1b3b7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b3bb:	48 89 c7             	mov    %rax,%rdi
   1b3be:	e8 8e 2a 00 00       	call   1de51 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1b3c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1b3c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b3cb:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1b3cf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b3d3:	48 8b 12             	mov    (%rdx),%rdx
   1b3d6:	48 29 d1             	sub    %rdx,%rcx
   1b3d9:	48 c1 f9 03          	sar    $0x3,%rcx
   1b3dd:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1b3e0:	48 89 d6             	mov    %rdx,%rsi
   1b3e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b3e7:	48 8b 0a             	mov    (%rdx),%rcx
   1b3ea:	48 89 f2             	mov    %rsi,%rdx
   1b3ed:	48 89 ce             	mov    %rcx,%rsi
   1b3f0:	48 89 c7             	mov    %rax,%rdi
   1b3f3:	e8 f2 0a 00 00       	call   1beea <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1b3f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b3fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b400:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1b403:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b407:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b40b:	48 01 d0             	add    %rdx,%rax
   1b40e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b415:	00 
   1b416:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b41a:	48 01 c2             	add    %rax,%rdx
   1b41d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b421:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1b425:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b429:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b430:	00 
   1b431:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b435:	48 01 c2             	add    %rax,%rdx
   1b438:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b43c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1b440:	eb 37                	jmp    1b479 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1b442:	48 89 c7             	mov    %rax,%rdi
   1b445:	e8 56 9d fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1b44a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b44e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b452:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1b456:	48 89 ce             	mov    %rcx,%rsi
   1b459:	48 89 c7             	mov    %rax,%rdi
   1b45c:	e8 89 0a 00 00       	call   1beea <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1b461:	e8 da a3 fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   1b466:	48 89 c3             	mov    %rax,%rbx
   1b469:	e8 f2 a4 fe ff       	call   5960 <__cxa_end_catch@plt>
   1b46e:	48 89 d8             	mov    %rbx,%rax
   1b471:	48 89 c7             	mov    %rax,%rdi
   1b474:	e8 87 a5 fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   1b479:	90                   	nop
   1b47a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b47e:	c9                   	leave
   1b47f:	c3                   	ret

000000000001b480 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1b480:	55                   	push   %rbp
   1b481:	48 89 e5             	mov    %rsp,%rbp
   1b484:	48 83 ec 20          	sub    $0x20,%rsp
   1b488:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b48c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1b490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b494:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b498:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1b49c:	48 c1 f8 03          	sar    $0x3,%rax
   1b4a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b4a4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1b4a9:	74 32                	je     1b4dd <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1b4ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4af:	48 89 c7             	mov    %rax,%rdi
   1b4b2:	e8 69 0a 00 00       	call   1bf20 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b4b7:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1b4ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4be:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1b4c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b4c6:	48 89 ce             	mov    %rcx,%rsi
   1b4c9:	48 89 c7             	mov    %rax,%rdi
   1b4cc:	e8 5d 0a 00 00       	call   1bf2e <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1b4d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b4d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b4d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1b4dd:	90                   	nop
   1b4de:	c9                   	leave
   1b4df:	c3                   	ret

000000000001b4e0 <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1b4e0:	55                   	push   %rbp
   1b4e1:	48 89 e5             	mov    %rsp,%rbp
   1b4e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b4e8:	90                   	nop
   1b4e9:	5d                   	pop    %rbp
   1b4ea:	c3                   	ret
   1b4eb:	90                   	nop

000000000001b4ec <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1b4ec:	55                   	push   %rbp
   1b4ed:	48 89 e5             	mov    %rsp,%rbp
   1b4f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b4f4:	90                   	nop
   1b4f5:	5d                   	pop    %rbp
   1b4f6:	c3                   	ret

000000000001b4f7 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1b4f7:	55                   	push   %rbp
   1b4f8:	48 89 e5             	mov    %rsp,%rbp
   1b4fb:	53                   	push   %rbx
   1b4fc:	48 83 ec 28          	sub    $0x28,%rsp
   1b500:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b504:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1b508:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b50c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1b510:	48 89 d6             	mov    %rdx,%rsi
   1b513:	48 89 c7             	mov    %rax,%rdi
   1b516:	e8 ab 29 00 00       	call   1dec6 <_ZNSaIP23VkDescriptorSetLayout_TEC1ERKS1_>
   1b51b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1b51f:	48 89 c7             	mov    %rax,%rdi
   1b522:	e8 5c 29 00 00       	call   1de83 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE11_S_max_sizeERKS2_>
   1b527:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1b52b:	0f 92 c3             	setb   %bl
   1b52e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1b532:	48 89 c7             	mov    %rax,%rdi
   1b535:	e8 3c ca ff ff       	call   17f76 <_ZNSaIP23VkDescriptorSetLayout_TED1Ev>
   1b53a:	84 db                	test   %bl,%bl
   1b53c:	74 0f                	je     1b54d <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1b53e:	48 8d 05 0b b5 00 00 	lea    0xb50b(%rip),%rax        # 26a50 <_ZZN9VulkanApp6renderEvE11submitCount+0x734>
   1b545:	48 89 c7             	mov    %rax,%rdi
   1b548:	e8 03 9d fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1b54d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1b551:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b555:	c9                   	leave
   1b556:	c3                   	ret
   1b557:	90                   	nop

000000000001b558 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1b558:	55                   	push   %rbp
   1b559:	48 89 e5             	mov    %rsp,%rbp
   1b55c:	48 83 ec 10          	sub    $0x10,%rsp
   1b560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b568:	48 89 c7             	mov    %rax,%rdi
   1b56b:	e8 06 ca ff ff       	call   17f76 <_ZNSaIP23VkDescriptorSetLayout_TED1Ev>
   1b570:	90                   	nop
   1b571:	c9                   	leave
   1b572:	c3                   	ret
   1b573:	90                   	nop

000000000001b574 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1b574:	55                   	push   %rbp
   1b575:	48 89 e5             	mov    %rsp,%rbp
   1b578:	53                   	push   %rbx
   1b579:	48 83 ec 28          	sub    $0x28,%rsp
   1b57d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b581:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b585:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   1b589:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b58d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b591:	48 89 d6             	mov    %rdx,%rsi
   1b594:	48 89 c7             	mov    %rax,%rdi
   1b597:	e8 50 29 00 00       	call   1deec <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   1b59c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b5a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b5a4:	48 89 d6             	mov    %rdx,%rsi
   1b5a7:	48 89 c7             	mov    %rax,%rdi
   1b5aa:	e8 6f 29 00 00       	call   1df1e <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE17_M_create_storageEm>
   1b5af:	eb 1a                	jmp    1b5cb <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EEC1EmRKS2_+0x57>
   1b5b1:	48 89 c3             	mov    %rax,%rbx
   1b5b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b5b8:	48 89 c7             	mov    %rax,%rdi
   1b5bb:	e8 98 ff ff ff       	call   1b558 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE12_Vector_implD1Ev>
   1b5c0:	48 89 d8             	mov    %rbx,%rax
   1b5c3:	48 89 c7             	mov    %rax,%rdi
   1b5c6:	e8 35 a4 fe ff       	call   5a00 <_Unwind_Resume@plt>
   1b5cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b5cf:	c9                   	leave
   1b5d0:	c3                   	ret
   1b5d1:	90                   	nop

000000000001b5d2 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1b5d2:	55                   	push   %rbp
   1b5d3:	48 89 e5             	mov    %rsp,%rbp
   1b5d6:	48 83 ec 10          	sub    $0x10,%rsp
   1b5da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1b5de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5e2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1b5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5ea:	48 8b 00             	mov    (%rax),%rax
   1b5ed:	48 29 c2             	sub    %rax,%rdx
   1b5f0:	48 89 d0             	mov    %rdx,%rax
   1b5f3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1b5f7:	48 89 c2             	mov    %rax,%rdx
   1b5fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5fe:	48 8b 08             	mov    (%rax),%rcx
   1b601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b605:	48 89 ce             	mov    %rcx,%rsi
   1b608:	48 89 c7             	mov    %rax,%rdi
   1b60b:	e8 64 29 00 00       	call   1df74 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1b610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b614:	48 89 c7             	mov    %rax,%rdi
   1b617:	e8 3c ff ff ff       	call   1b558 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE12_Vector_implD1Ev>
   1b61c:	90                   	nop
   1b61d:	c9                   	leave
   1b61e:	c3                   	ret
   1b61f:	90                   	nop

000000000001b620 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE18_M_fill_initializeEmRKS1_>:
      _M_fill_initialize(size_type __n, const value_type& __value)
   1b620:	55                   	push   %rbp
   1b621:	48 89 e5             	mov    %rsp,%rbp
   1b624:	48 83 ec 20          	sub    $0x20,%rsp
   1b628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b62c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b630:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
					_M_get_Tp_allocator());
   1b634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b638:	48 89 c7             	mov    %rax,%rdi
   1b63b:	e8 26 00 00 00       	call   1b666 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b640:	48 89 c1             	mov    %rax,%rcx
	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
   1b643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b647:	48 8b 00             	mov    (%rax),%rax
   1b64a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b64e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1b652:	48 89 c7             	mov    %rax,%rdi
   1b655:	e8 4f 29 00 00       	call   1dfa9 <_ZSt24__uninitialized_fill_n_aIPP23VkDescriptorSetLayout_TmS1_S1_ET_S3_T0_RKT1_RSaIT2_E>
	this->_M_impl._M_finish =
   1b65a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b65e:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1b662:	90                   	nop
   1b663:	c9                   	leave
   1b664:	c3                   	ret
   1b665:	90                   	nop

000000000001b666 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1b666:	55                   	push   %rbp
   1b667:	48 89 e5             	mov    %rsp,%rbp
   1b66a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1b66e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b672:	5d                   	pop    %rbp
   1b673:	c3                   	ret

000000000001b674 <_ZSt8_DestroyIPP23VkDescriptorSetLayout_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1b674:	55                   	push   %rbp
   1b675:	48 89 e5             	mov    %rsp,%rbp
   1b678:	48 83 ec 20          	sub    $0x20,%rsp
   1b67c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b680:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b684:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1b688:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b68c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b690:	48 89 d6             	mov    %rdx,%rsi
   1b693:	48 89 c7             	mov    %rax,%rdi
   1b696:	e8 3f 29 00 00       	call   1dfda <_ZSt8_DestroyIPP23VkDescriptorSetLayout_TEvT_S3_>
    }
   1b69b:	90                   	nop
   1b69c:	c9                   	leave
   1b69d:	c3                   	ret

000000000001b69e <_ZNKSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1b69e:	55                   	push   %rbp
   1b69f:	48 89 e5             	mov    %rsp,%rbp
   1b6a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b6a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1b6aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b6ae:	5d                   	pop    %rbp
   1b6af:	c3                   	ret

000000000001b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1b6b0:	55                   	push   %rbp
   1b6b1:	48 89 e5             	mov    %rsp,%rbp
   1b6b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1b6b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6bc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1b6c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6c4:	48 8b 00             	mov    (%rax),%rax
   1b6c7:	48 29 c2             	sub    %rax,%rdx
   1b6ca:	48 89 d0             	mov    %rdx,%rax
   1b6cd:	48 c1 f8 03          	sar    $0x3,%rax
   1b6d1:	5d                   	pop    %rbp
   1b6d2:	c3                   	ret
   1b6d3:	90                   	nop

000000000001b6d4 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1b6d4:	55                   	push   %rbp
   1b6d5:	48 89 e5             	mov    %rsp,%rbp
   1b6d8:	53                   	push   %rbx
   1b6d9:	48 83 ec 38          	sub    $0x38,%rsp
   1b6dd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1b6e1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1b6e5:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1b6ea:	0f 84 e7 01 00 00    	je     1b8d7 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1b6f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b6f4:	48 89 c7             	mov    %rax,%rdi
   1b6f7:	e8 b4 ff ff ff       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   1b6fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1b700:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b704:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1b708:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b70c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b710:	48 29 c2             	sub    %rax,%rdx
   1b713:	48 89 d0             	mov    %rdx,%rax
   1b716:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1b71a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1b71e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b722:	48 89 c7             	mov    %rax,%rdi
   1b725:	e8 d6 28 00 00       	call   1e000 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE8max_sizeEv>
   1b72a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1b72e:	72 16                	jb     1b746 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0x72>
   1b730:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b734:	48 89 c7             	mov    %rax,%rdi
   1b737:	e8 c4 28 00 00       	call   1e000 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE8max_sizeEv>
   1b73c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1b740:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1b744:	73 07                	jae    1b74d <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0x79>
   1b746:	b8 01 00 00 00       	mov    $0x1,%eax
   1b74b:	eb 05                	jmp    1b752 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0x7e>
   1b74d:	b8 00 00 00 00       	mov    $0x0,%eax
   1b752:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1b754:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b758:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1b75c:	72 33                	jb     1b791 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1b75e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b762:	48 89 c7             	mov    %rax,%rdi
   1b765:	e8 02 0a 00 00       	call   1c16c <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b76a:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1b76d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b771:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b775:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1b779:	48 89 ce             	mov    %rcx,%rsi
   1b77c:	48 89 c7             	mov    %rax,%rdi
   1b77f:	e8 9e 28 00 00       	call   1e022 <_ZSt27__uninitialized_default_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1b784:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b788:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1b78c:	e9 46 01 00 00       	jmp    1b8d7 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1b791:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1b795:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b799:	48 8d 15 e0 b0 00 00 	lea    0xb0e0(%rip),%rdx        # 26880 <_ZZN9VulkanApp6renderEvE11submitCount+0x564>
   1b7a0:	48 89 ce             	mov    %rcx,%rsi
   1b7a3:	48 89 c7             	mov    %rax,%rdi
   1b7a6:	e8 a1 28 00 00       	call   1e04c <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE12_M_check_lenEmPKc>
   1b7ab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1b7af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b7b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b7b7:	48 89 d6             	mov    %rdx,%rsi
   1b7ba:	48 89 c7             	mov    %rax,%rdi
   1b7bd:	e8 52 29 00 00       	call   1e114 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE11_M_allocateEm>
   1b7c2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1b7c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b7ca:	48 89 c7             	mov    %rax,%rdi
   1b7cd:	e8 9a 09 00 00       	call   1c16c <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b7d2:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   1b7d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b7d9:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1b7e0:	00 
   1b7e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b7e5:	48 01 c1             	add    %rax,%rcx
   1b7e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b7ec:	48 89 c6             	mov    %rax,%rsi
   1b7ef:	48 89 cf             	mov    %rcx,%rdi
   1b7f2:	e8 2b 28 00 00       	call   1e022 <_ZSt27__uninitialized_default_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1b7f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b7fb:	48 89 c7             	mov    %rax,%rdi
   1b7fe:	e8 69 09 00 00       	call   1c16c <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b803:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1b806:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b80a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1b80e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b812:	48 8b 00             	mov    (%rax),%rax
   1b815:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b819:	48 89 c7             	mov    %rax,%rdi
   1b81c:	e8 26 29 00 00       	call   1e147 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1b821:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1b825:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b829:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1b82d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b831:	48 8b 12             	mov    (%rdx),%rdx
   1b834:	48 29 d1             	sub    %rdx,%rcx
   1b837:	48 c1 f9 03          	sar    $0x3,%rcx
   1b83b:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1b83e:	48 89 d6             	mov    %rdx,%rsi
   1b841:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1b845:	48 8b 0a             	mov    (%rdx),%rcx
   1b848:	48 89 f2             	mov    %rsi,%rdx
   1b84b:	48 89 ce             	mov    %rcx,%rsi
   1b84e:	48 89 c7             	mov    %rax,%rdi
   1b851:	e8 e0 08 00 00       	call   1c136 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1b856:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b85a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1b85e:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1b861:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b865:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1b869:	48 01 d0             	add    %rdx,%rax
   1b86c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b873:	00 
   1b874:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b878:	48 01 c2             	add    %rax,%rdx
   1b87b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b87f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1b883:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b887:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1b88e:	00 
   1b88f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b893:	48 01 c2             	add    %rax,%rdx
   1b896:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b89a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1b89e:	eb 37                	jmp    1b8d7 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1b8a0:	48 89 c7             	mov    %rax,%rdi
   1b8a3:	e8 f8 98 fe ff       	call   51a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1b8a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b8ac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1b8b0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1b8b4:	48 89 ce             	mov    %rcx,%rsi
   1b8b7:	48 89 c7             	mov    %rax,%rdi
   1b8ba:	e8 77 08 00 00       	call   1c136 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1b8bf:	e8 7c 9f fe ff       	call   5840 <__cxa_rethrow@plt>
		  __catch(...)
   1b8c4:	48 89 c3             	mov    %rax,%rbx
   1b8c7:	e8 94 a0 fe ff       	call   5960 <__cxa_end_catch@plt>
   1b8cc:	48 89 d8             	mov    %rbx,%rax
   1b8cf:	48 89 c7             	mov    %rax,%rdi
   1b8d2:	e8 29 a1 fe ff       	call   5a00 <_Unwind_Resume@plt>
    }
   1b8d7:	90                   	nop
   1b8d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b8dc:	c9                   	leave
   1b8dd:	c3                   	ret

000000000001b8de <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1b8de:	55                   	push   %rbp
   1b8df:	48 89 e5             	mov    %rsp,%rbp
   1b8e2:	48 83 ec 20          	sub    $0x20,%rsp
   1b8e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b8ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1b8ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b8f2:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b8f6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1b8fa:	48 c1 f8 03          	sar    $0x3,%rax
   1b8fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b902:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1b907:	74 32                	je     1b93b <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1b909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b90d:	48 89 c7             	mov    %rax,%rdi
   1b910:	e8 57 08 00 00       	call   1c16c <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b915:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1b918:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b91c:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1b920:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b924:	48 89 ce             	mov    %rcx,%rsi
   1b927:	48 89 c7             	mov    %rax,%rdi
   1b92a:	e8 4b 08 00 00       	call   1c17a <_ZSt8_DestroyIPP17VkDescriptorSet_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1b92f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b933:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b937:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1b93b:	90                   	nop
   1b93c:	c9                   	leave
   1b93d:	c3                   	ret

000000000001b93e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1b93e:	55                   	push   %rbp
   1b93f:	48 89 e5             	mov    %rsp,%rbp
   1b942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b946:	90                   	nop
   1b947:	5d                   	pop    %rbp
   1b948:	c3                   	ret
   1b949:	90                   	nop

000000000001b94a <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1b94a:	55                   	push   %rbp
   1b94b:	48 89 e5             	mov    %rsp,%rbp
   1b94e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b952:	90                   	nop
   1b953:	5d                   	pop    %rbp
   1b954:	c3                   	ret
   1b955:	90                   	nop

000000000001b956 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1b956:	55                   	push   %rbp
   1b957:	48 89 e5             	mov    %rsp,%rbp
   1b95a:	48 83 ec 10          	sub    $0x10,%rsp
   1b95e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b962:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1b966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b96a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b96e:	48 89 d6             	mov    %rdx,%rsi
   1b971:	48 89 c7             	mov    %rax,%rdi
   1b974:	e8 01 28 00 00       	call   1e17a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   1b979:	90                   	nop
   1b97a:	c9                   	leave
   1b97b:	c3                   	ret

000000000001b97c <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   1b97c:	55                   	push   %rbp
   1b97d:	48 89 e5             	mov    %rsp,%rbp
   1b980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b988:	48 8b 00             	mov    (%rax),%rax
   1b98b:	5d                   	pop    %rbp
   1b98c:	c3                   	ret
   1b98d:	90                   	nop

000000000001b98e <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   1b98e:	55                   	push   %rbp
   1b98f:	48 89 e5             	mov    %rsp,%rbp
   1b992:	53                   	push   %rbx
   1b993:	48 83 ec 18          	sub    $0x18,%rsp
   1b997:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b99b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b99f:	48 89 c7             	mov    %rax,%rdi
   1b9a2:	e8 d5 ff ff ff       	call   1b97c <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   1b9a7:	48 89 c3             	mov    %rax,%rbx
   1b9aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b9ae:	48 89 c7             	mov    %rax,%rdi
   1b9b1:	e8 f6 27 00 00       	call   1e1ac <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   1b9b6:	48 c1 e0 03          	shl    $0x3,%rax
   1b9ba:	48 01 d8             	add    %rbx,%rax
   1b9bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b9c1:	c9                   	leave
   1b9c2:	c3                   	ret

000000000001b9c3 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   1b9c3:	55                   	push   %rbp
   1b9c4:	48 89 e5             	mov    %rsp,%rbp
   1b9c7:	48 83 ec 10          	sub    $0x10,%rsp
   1b9cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b9cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1b9d3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b9d7:	48 89 c7             	mov    %rax,%rdi
   1b9da:	e8 df 27 00 00       	call   1e1be <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   1b9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b9e7:	48 89 d6             	mov    %rdx,%rsi
   1b9ea:	48 89 c7             	mov    %rax,%rdi
   1b9ed:	e8 d7 27 00 00       	call   1e1c9 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   1b9f2:	c9                   	leave
   1b9f3:	c3                   	ret

000000000001b9f4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1b9f4:	55                   	push   %rbp
   1b9f5:	48 89 e5             	mov    %rsp,%rbp
   1b9f8:	53                   	push   %rbx
   1b9f9:	48 83 ec 38          	sub    $0x38,%rsp
   1b9fd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ba01:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ba05:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1ba09:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ba0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ba11:	48 89 d6             	mov    %rdx,%rsi
   1ba14:	48 89 c7             	mov    %rax,%rdi
   1ba17:	e8 a7 ff ff ff       	call   1b9c3 <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   1ba1c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1ba20:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1ba24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ba28:	48 89 c7             	mov    %rax,%rdi
   1ba2b:	e8 74 00 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1ba30:	48 89 c2             	mov    %rax,%rdx
   1ba33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ba37:	48 89 d6             	mov    %rdx,%rsi
   1ba3a:	48 89 c7             	mov    %rax,%rdi
   1ba3d:	e8 a1 27 00 00       	call   1e1e3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   1ba42:	48 89 c6             	mov    %rax,%rsi
   1ba45:	48 89 df             	mov    %rbx,%rdi
   1ba48:	e8 57 22 00 00       	call   1dca4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   1ba4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ba51:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1ba54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ba58:	48 8b 00             	mov    (%rax),%rax
   1ba5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1ba5f:	48 c1 e2 03          	shl    $0x3,%rdx
   1ba63:	48 01 c2             	add    %rax,%rdx
   1ba66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ba6a:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1ba6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ba72:	48 89 c7             	mov    %rax,%rdi
   1ba75:	e8 2a 00 00 00       	call   1baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1ba7a:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1ba7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ba81:	48 8b 10             	mov    (%rax),%rdx
   1ba84:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1ba88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ba8c:	48 89 c7             	mov    %rax,%rdi
   1ba8f:	e8 af 27 00 00       	call   1e243 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   1ba94:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ba98:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1ba9c:	90                   	nop
   1ba9d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1baa1:	c9                   	leave
   1baa2:	c3                   	ret
   1baa3:	90                   	nop

000000000001baa4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1baa4:	55                   	push   %rbp
   1baa5:	48 89 e5             	mov    %rsp,%rbp
   1baa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1baac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bab0:	5d                   	pop    %rbp
   1bab1:	c3                   	ret

000000000001bab2 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1bab2:	55                   	push   %rbp
   1bab3:	48 89 e5             	mov    %rsp,%rbp
   1bab6:	48 83 ec 20          	sub    $0x20,%rsp
   1baba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1babe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bac2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1bac6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1baca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bace:	48 89 d6             	mov    %rdx,%rsi
   1bad1:	48 89 c7             	mov    %rax,%rdi
   1bad4:	e8 9b 27 00 00       	call   1e274 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   1bad9:	90                   	nop
   1bada:	c9                   	leave
   1badb:	c3                   	ret

000000000001badc <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1badc:	55                   	push   %rbp
   1badd:	48 89 e5             	mov    %rsp,%rbp
   1bae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bae4:	90                   	nop
   1bae5:	5d                   	pop    %rbp
   1bae6:	c3                   	ret
   1bae7:	90                   	nop

000000000001bae8 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1bae8:	55                   	push   %rbp
   1bae9:	48 89 e5             	mov    %rsp,%rbp
   1baec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1baf0:	90                   	nop
   1baf1:	5d                   	pop    %rbp
   1baf2:	c3                   	ret
   1baf3:	90                   	nop

000000000001baf4 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   1baf4:	55                   	push   %rbp
   1baf5:	48 89 e5             	mov    %rsp,%rbp
   1baf8:	48 83 ec 10          	sub    $0x10,%rsp
   1bafc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb04:	48 89 c7             	mov    %rax,%rdi
   1bb07:	e8 52 c7 ff ff       	call   1825e <_ZNSaIjED1Ev>
   1bb0c:	90                   	nop
   1bb0d:	c9                   	leave
   1bb0e:	c3                   	ret
   1bb0f:	90                   	nop

000000000001bb10 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1bb10:	55                   	push   %rbp
   1bb11:	48 89 e5             	mov    %rsp,%rbp
   1bb14:	48 83 ec 10          	sub    $0x10,%rsp
   1bb18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1bb20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1bb28:	48 89 d6             	mov    %rdx,%rsi
   1bb2b:	48 89 c7             	mov    %rax,%rdi
   1bb2e:	e8 67 27 00 00       	call   1e29a <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   1bb33:	90                   	nop
   1bb34:	c9                   	leave
   1bb35:	c3                   	ret

000000000001bb36 <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1bb36:	55                   	push   %rbp
   1bb37:	48 89 e5             	mov    %rsp,%rbp
   1bb3a:	48 83 ec 10          	sub    $0x10,%rsp
   1bb3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1bb42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb46:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1bb4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb4e:	48 8b 00             	mov    (%rax),%rax
   1bb51:	48 29 c2             	sub    %rax,%rdx
   1bb54:	48 89 d0             	mov    %rdx,%rax
   1bb57:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   1bb5b:	48 89 c2             	mov    %rax,%rdx
   1bb5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb62:	48 8b 08             	mov    (%rax),%rcx
   1bb65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb69:	48 89 ce             	mov    %rcx,%rsi
   1bb6c:	48 89 c7             	mov    %rax,%rdi
   1bb6f:	e8 58 27 00 00       	call   1e2cc <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   1bb74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb78:	48 89 c7             	mov    %rax,%rdi
   1bb7b:	e8 74 ff ff ff       	call   1baf4 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   1bb80:	90                   	nop
   1bb81:	c9                   	leave
   1bb82:	c3                   	ret
   1bb83:	90                   	nop

000000000001bb84 <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   1bb84:	55                   	push   %rbp
   1bb85:	48 89 e5             	mov    %rsp,%rbp
   1bb88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bb8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb90:	48 8b 00             	mov    (%rax),%rax
   1bb93:	5d                   	pop    %rbp
   1bb94:	c3                   	ret
   1bb95:	90                   	nop

000000000001bb96 <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   1bb96:	55                   	push   %rbp
   1bb97:	48 89 e5             	mov    %rsp,%rbp
   1bb9a:	53                   	push   %rbx
   1bb9b:	48 83 ec 18          	sub    $0x18,%rsp
   1bb9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bba7:	48 89 c7             	mov    %rax,%rdi
   1bbaa:	e8 d5 ff ff ff       	call   1bb84 <_ZNKSt16initializer_listIjE5beginEv>
   1bbaf:	48 89 c3             	mov    %rax,%rbx
   1bbb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bbb6:	48 89 c7             	mov    %rax,%rdi
   1bbb9:	e8 44 27 00 00       	call   1e302 <_ZNKSt16initializer_listIjE4sizeEv>
   1bbbe:	48 c1 e0 02          	shl    $0x2,%rax
   1bbc2:	48 01 d8             	add    %rbx,%rax
   1bbc5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1bbc9:	c9                   	leave
   1bbca:	c3                   	ret

000000000001bbcb <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   1bbcb:	55                   	push   %rbp
   1bbcc:	48 89 e5             	mov    %rsp,%rbp
   1bbcf:	48 83 ec 10          	sub    $0x10,%rsp
   1bbd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bbd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1bbdb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1bbdf:	48 89 c7             	mov    %rax,%rdi
   1bbe2:	e8 2d 27 00 00       	call   1e314 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   1bbe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bbeb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1bbef:	48 89 d6             	mov    %rdx,%rsi
   1bbf2:	48 89 c7             	mov    %rax,%rdi
   1bbf5:	e8 25 27 00 00       	call   1e31f <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   1bbfa:	c9                   	leave
   1bbfb:	c3                   	ret

000000000001bbfc <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1bbfc:	55                   	push   %rbp
   1bbfd:	48 89 e5             	mov    %rsp,%rbp
   1bc00:	53                   	push   %rbx
   1bc01:	48 83 ec 38          	sub    $0x38,%rsp
   1bc05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1bc09:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1bc0d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1bc11:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1bc15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc19:	48 89 d6             	mov    %rdx,%rsi
   1bc1c:	48 89 c7             	mov    %rax,%rdi
   1bc1f:	e8 a7 ff ff ff       	call   1bbcb <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   1bc24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1bc28:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1bc2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc30:	48 89 c7             	mov    %rax,%rdi
   1bc33:	e8 74 00 00 00       	call   1bcac <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   1bc38:	48 89 c2             	mov    %rax,%rdx
   1bc3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bc3f:	48 89 d6             	mov    %rdx,%rsi
   1bc42:	48 89 c7             	mov    %rax,%rdi
   1bc45:	e8 ef 26 00 00       	call   1e339 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   1bc4a:	48 89 c6             	mov    %rax,%rsi
   1bc4d:	48 89 df             	mov    %rbx,%rdi
   1bc50:	e8 45 27 00 00       	call   1e39a <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   1bc55:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1bc59:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1bc5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc60:	48 8b 00             	mov    (%rax),%rax
   1bc63:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bc67:	48 c1 e2 02          	shl    $0x2,%rdx
   1bc6b:	48 01 c2             	add    %rax,%rdx
   1bc6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc72:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1bc76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc7a:	48 89 c7             	mov    %rax,%rdi
   1bc7d:	e8 2a 00 00 00       	call   1bcac <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   1bc82:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1bc85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bc89:	48 8b 10             	mov    (%rax),%rdx
   1bc8c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1bc90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bc94:	48 89 c7             	mov    %rax,%rdi
   1bc97:	e8 31 27 00 00       	call   1e3cd <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   1bc9c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1bca0:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1bca4:	90                   	nop
   1bca5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1bca9:	c9                   	leave
   1bcaa:	c3                   	ret
   1bcab:	90                   	nop

000000000001bcac <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1bcac:	55                   	push   %rbp
   1bcad:	48 89 e5             	mov    %rsp,%rbp
   1bcb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1bcb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bcb8:	5d                   	pop    %rbp
   1bcb9:	c3                   	ret

000000000001bcba <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1bcba:	55                   	push   %rbp
   1bcbb:	48 89 e5             	mov    %rsp,%rbp
   1bcbe:	48 83 ec 20          	sub    $0x20,%rsp
   1bcc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bcc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bcca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1bcce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1bcd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bcd6:	48 89 d6             	mov    %rdx,%rsi
   1bcd9:	48 89 c7             	mov    %rax,%rdi
   1bcdc:	e8 1d 27 00 00       	call   1e3fe <_ZSt8_DestroyIPjEvT_S1_>
    }
   1bce1:	90                   	nop
   1bce2:	c9                   	leave
   1bce3:	c3                   	ret

000000000001bce4 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1bce4:	55                   	push   %rbp
   1bce5:	48 89 e5             	mov    %rsp,%rbp
   1bce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bcec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1bcf0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bcf4:	5d                   	pop    %rbp
   1bcf5:	c3                   	ret

000000000001bcf6 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1bcf6:	55                   	push   %rbp
   1bcf7:	48 89 e5             	mov    %rsp,%rbp
   1bcfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bcfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1bd02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1bd06:	5d                   	pop    %rbp
   1bd07:	c3                   	ret

000000000001bd08 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1bd08:	55                   	push   %rbp
   1bd09:	48 89 e5             	mov    %rsp,%rbp
   1bd0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1bd10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd14:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1bd1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd1f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1bd26:	00 
   1bd27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd2b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1bd32:	00 
	{ }
   1bd33:	90                   	nop
   1bd34:	5d                   	pop    %rbp
   1bd35:	c3                   	ret

000000000001bd36 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1bd36:	55                   	push   %rbp
   1bd37:	48 89 e5             	mov    %rsp,%rbp
   1bd3a:	48 83 ec 20          	sub    $0x20,%rsp
   1bd3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bd42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bd46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1bd4a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1bd4f:	74 17                	je     1bd68 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1bd51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bd59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bd5d:	48 89 ce             	mov    %rcx,%rsi
   1bd60:	48 89 c7             	mov    %rax,%rdi
   1bd63:	e8 bc 26 00 00       	call   1e424 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   1bd68:	90                   	nop
   1bd69:	c9                   	leave
   1bd6a:	c3                   	ret
   1bd6b:	90                   	nop

000000000001bd6c <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1bd6c:	55                   	push   %rbp
   1bd6d:	48 89 e5             	mov    %rsp,%rbp
   1bd70:	48 83 ec 10          	sub    $0x10,%rsp
   1bd74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bd78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd7c:	48 89 c7             	mov    %rax,%rdi
   1bd7f:	e8 ce 26 00 00       	call   1e452 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   1bd84:	90                   	nop
   1bd85:	c9                   	leave
   1bd86:	c3                   	ret
   1bd87:	90                   	nop

000000000001bd88 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1bd88:	55                   	push   %rbp
   1bd89:	48 89 e5             	mov    %rsp,%rbp
   1bd8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1bd90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd94:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1bd9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bd9f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1bda6:	00 
   1bda7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bdab:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1bdb2:	00 
	{ }
   1bdb3:	90                   	nop
   1bdb4:	5d                   	pop    %rbp
   1bdb5:	c3                   	ret

000000000001bdb6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   1bdb6:	55                   	push   %rbp
   1bdb7:	48 89 e5             	mov    %rsp,%rbp
   1bdba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bdbe:	90                   	nop
   1bdbf:	5d                   	pop    %rbp
   1bdc0:	c3                   	ret
   1bdc1:	90                   	nop

000000000001bdc2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1bdc2:	55                   	push   %rbp
   1bdc3:	48 89 e5             	mov    %rsp,%rbp
   1bdc6:	48 83 ec 20          	sub    $0x20,%rsp
   1bdca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bdce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bdd2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1bdd6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1bddb:	74 17                	je     1bdf4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1bddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bde1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bde5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bde9:	48 89 ce             	mov    %rcx,%rsi
   1bdec:	48 89 c7             	mov    %rax,%rdi
   1bdef:	e8 69 26 00 00       	call   1e45d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   1bdf4:	90                   	nop
   1bdf5:	c9                   	leave
   1bdf6:	c3                   	ret
   1bdf7:	90                   	nop

000000000001bdf8 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1bdf8:	55                   	push   %rbp
   1bdf9:	48 89 e5             	mov    %rsp,%rbp
   1bdfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1be00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be04:	5d                   	pop    %rbp
   1be05:	c3                   	ret

000000000001be06 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1be06:	55                   	push   %rbp
   1be07:	48 89 e5             	mov    %rsp,%rbp
   1be0a:	48 83 ec 20          	sub    $0x20,%rsp
   1be0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1be12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1be16:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1be1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1be1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be22:	48 89 d6             	mov    %rdx,%rsi
   1be25:	48 89 c7             	mov    %rax,%rdi
   1be28:	e8 5e 26 00 00       	call   1e48b <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   1be2d:	90                   	nop
   1be2e:	c9                   	leave
   1be2f:	c3                   	ret

000000000001be30 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1be30:	55                   	push   %rbp
   1be31:	48 89 e5             	mov    %rsp,%rbp
   1be34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1be38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be3c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1be43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be47:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1be4e:	00 
   1be4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be53:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1be5a:	00 
	{ }
   1be5b:	90                   	nop
   1be5c:	5d                   	pop    %rbp
   1be5d:	c3                   	ret

000000000001be5e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1be5e:	55                   	push   %rbp
   1be5f:	48 89 e5             	mov    %rsp,%rbp
   1be62:	48 83 ec 20          	sub    $0x20,%rsp
   1be66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1be6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1be6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1be72:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1be77:	74 17                	je     1be90 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1be79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1be7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1be81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1be85:	48 89 ce             	mov    %rcx,%rsi
   1be88:	48 89 c7             	mov    %rax,%rdi
   1be8b:	e8 21 26 00 00       	call   1e4b1 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   1be90:	90                   	nop
   1be91:	c9                   	leave
   1be92:	c3                   	ret
   1be93:	90                   	nop

000000000001be94 <_ZNSaIP9VkFence_TEC1Ev>:
   1be94:	55                   	push   %rbp
   1be95:	48 89 e5             	mov    %rsp,%rbp
   1be98:	48 83 ec 10          	sub    $0x10,%rsp
   1be9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bea4:	48 89 c7             	mov    %rax,%rdi
   1bea7:	e8 34 26 00 00       	call   1e4e0 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
   1beac:	90                   	nop
   1bead:	c9                   	leave
   1beae:	c3                   	ret
   1beaf:	90                   	nop

000000000001beb0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1beb0:	55                   	push   %rbp
   1beb1:	48 89 e5             	mov    %rsp,%rbp
   1beb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1beb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bebc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1bec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bec7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1bece:	00 
   1becf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bed3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1beda:	00 
	{ }
   1bedb:	90                   	nop
   1bedc:	5d                   	pop    %rbp
   1bedd:	c3                   	ret

000000000001bede <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
   1bede:	55                   	push   %rbp
   1bedf:	48 89 e5             	mov    %rsp,%rbp
   1bee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bee6:	90                   	nop
   1bee7:	5d                   	pop    %rbp
   1bee8:	c3                   	ret
   1bee9:	90                   	nop

000000000001beea <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1beea:	55                   	push   %rbp
   1beeb:	48 89 e5             	mov    %rsp,%rbp
   1beee:	48 83 ec 20          	sub    $0x20,%rsp
   1bef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bef6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1befa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1befe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1bf03:	74 17                	je     1bf1c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1bf05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bf0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bf11:	48 89 ce             	mov    %rcx,%rsi
   1bf14:	48 89 c7             	mov    %rax,%rdi
   1bf17:	e8 cf 25 00 00       	call   1e4eb <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
   1bf1c:	90                   	nop
   1bf1d:	c9                   	leave
   1bf1e:	c3                   	ret
   1bf1f:	90                   	nop

000000000001bf20 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1bf20:	55                   	push   %rbp
   1bf21:	48 89 e5             	mov    %rsp,%rbp
   1bf24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1bf28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf2c:	5d                   	pop    %rbp
   1bf2d:	c3                   	ret

000000000001bf2e <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1bf2e:	55                   	push   %rbp
   1bf2f:	48 89 e5             	mov    %rsp,%rbp
   1bf32:	48 83 ec 20          	sub    $0x20,%rsp
   1bf36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bf3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bf3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1bf42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1bf46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf4a:	48 89 d6             	mov    %rdx,%rsi
   1bf4d:	48 89 c7             	mov    %rax,%rdi
   1bf50:	e8 c4 25 00 00       	call   1e519 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
   1bf55:	90                   	nop
   1bf56:	c9                   	leave
   1bf57:	c3                   	ret

000000000001bf58 <_ZNSaIP10VkBuffer_TEC1Ev>:
   1bf58:	55                   	push   %rbp
   1bf59:	48 89 e5             	mov    %rsp,%rbp
   1bf5c:	48 83 ec 10          	sub    $0x10,%rsp
   1bf60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bf64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf68:	48 89 c7             	mov    %rax,%rdi
   1bf6b:	e8 d0 25 00 00       	call   1e540 <_ZNSt15__new_allocatorIP10VkBuffer_TEC1Ev>
   1bf70:	90                   	nop
   1bf71:	c9                   	leave
   1bf72:	c3                   	ret
   1bf73:	90                   	nop

000000000001bf74 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1bf74:	55                   	push   %rbp
   1bf75:	48 89 e5             	mov    %rsp,%rbp
   1bf78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1bf7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf80:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1bf87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf8b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1bf92:	00 
   1bf93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf97:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1bf9e:	00 
	{ }
   1bf9f:	90                   	nop
   1bfa0:	5d                   	pop    %rbp
   1bfa1:	c3                   	ret

000000000001bfa2 <_ZNSt15__new_allocatorIP10VkBuffer_TED1Ev>:
   1bfa2:	55                   	push   %rbp
   1bfa3:	48 89 e5             	mov    %rsp,%rbp
   1bfa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bfaa:	90                   	nop
   1bfab:	5d                   	pop    %rbp
   1bfac:	c3                   	ret
   1bfad:	90                   	nop

000000000001bfae <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1bfae:	55                   	push   %rbp
   1bfaf:	48 89 e5             	mov    %rsp,%rbp
   1bfb2:	48 83 ec 20          	sub    $0x20,%rsp
   1bfb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bfba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1bfbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1bfc2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1bfc7:	74 17                	je     1bfe0 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1bfc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bfcd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bfd1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1bfd5:	48 89 ce             	mov    %rcx,%rsi
   1bfd8:	48 89 c7             	mov    %rax,%rdi
   1bfdb:	e8 6b 25 00 00       	call   1e54b <_ZNSt16allocator_traitsISaIP10VkBuffer_TEE10deallocateERS2_PS1_m>
      }
   1bfe0:	90                   	nop
   1bfe1:	c9                   	leave
   1bfe2:	c3                   	ret
   1bfe3:	90                   	nop

000000000001bfe4 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1bfe4:	55                   	push   %rbp
   1bfe5:	48 89 e5             	mov    %rsp,%rbp
   1bfe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1bfec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bff0:	5d                   	pop    %rbp
   1bff1:	c3                   	ret

000000000001bff2 <_ZSt8_DestroyIPP10VkBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1bff2:	55                   	push   %rbp
   1bff3:	48 89 e5             	mov    %rsp,%rbp
   1bff6:	48 83 ec 20          	sub    $0x20,%rsp
   1bffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1bffe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c002:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1c006:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c00e:	48 89 d6             	mov    %rdx,%rsi
   1c011:	48 89 c7             	mov    %rax,%rdi
   1c014:	e8 60 25 00 00       	call   1e579 <_ZSt8_DestroyIPP10VkBuffer_TEvT_S3_>
    }
   1c019:	90                   	nop
   1c01a:	c9                   	leave
   1c01b:	c3                   	ret

000000000001c01c <_ZNSaIP16VkDeviceMemory_TEC1Ev>:
   1c01c:	55                   	push   %rbp
   1c01d:	48 89 e5             	mov    %rsp,%rbp
   1c020:	48 83 ec 10          	sub    $0x10,%rsp
   1c024:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c02c:	48 89 c7             	mov    %rax,%rdi
   1c02f:	e8 6c 25 00 00       	call   1e5a0 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TEC1Ev>
   1c034:	90                   	nop
   1c035:	c9                   	leave
   1c036:	c3                   	ret
   1c037:	90                   	nop

000000000001c038 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1c038:	55                   	push   %rbp
   1c039:	48 89 e5             	mov    %rsp,%rbp
   1c03c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1c040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c044:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1c04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c04f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1c056:	00 
   1c057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c05b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1c062:	00 
	{ }
   1c063:	90                   	nop
   1c064:	5d                   	pop    %rbp
   1c065:	c3                   	ret

000000000001c066 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TED1Ev>:
   1c066:	55                   	push   %rbp
   1c067:	48 89 e5             	mov    %rsp,%rbp
   1c06a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c06e:	90                   	nop
   1c06f:	5d                   	pop    %rbp
   1c070:	c3                   	ret
   1c071:	90                   	nop

000000000001c072 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1c072:	55                   	push   %rbp
   1c073:	48 89 e5             	mov    %rsp,%rbp
   1c076:	48 83 ec 20          	sub    $0x20,%rsp
   1c07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c082:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1c086:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1c08b:	74 17                	je     1c0a4 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1c08d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c091:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c095:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c099:	48 89 ce             	mov    %rcx,%rsi
   1c09c:	48 89 c7             	mov    %rax,%rdi
   1c09f:	e8 07 25 00 00       	call   1e5ab <_ZNSt16allocator_traitsISaIP16VkDeviceMemory_TEE10deallocateERS2_PS1_m>
      }
   1c0a4:	90                   	nop
   1c0a5:	c9                   	leave
   1c0a6:	c3                   	ret
   1c0a7:	90                   	nop

000000000001c0a8 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1c0a8:	55                   	push   %rbp
   1c0a9:	48 89 e5             	mov    %rsp,%rbp
   1c0ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1c0b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0b4:	5d                   	pop    %rbp
   1c0b5:	c3                   	ret

000000000001c0b6 <_ZSt8_DestroyIPP16VkDeviceMemory_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1c0b6:	55                   	push   %rbp
   1c0b7:	48 89 e5             	mov    %rsp,%rbp
   1c0ba:	48 83 ec 20          	sub    $0x20,%rsp
   1c0be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c0c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c0c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1c0ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c0ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0d2:	48 89 d6             	mov    %rdx,%rsi
   1c0d5:	48 89 c7             	mov    %rax,%rdi
   1c0d8:	e8 fc 24 00 00       	call   1e5d9 <_ZSt8_DestroyIPP16VkDeviceMemory_TEvT_S3_>
    }
   1c0dd:	90                   	nop
   1c0de:	c9                   	leave
   1c0df:	c3                   	ret

000000000001c0e0 <_ZNSaIP17VkDescriptorSet_TEC1Ev>:
   1c0e0:	55                   	push   %rbp
   1c0e1:	48 89 e5             	mov    %rsp,%rbp
   1c0e4:	48 83 ec 10          	sub    $0x10,%rsp
   1c0e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c0ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0f0:	48 89 c7             	mov    %rax,%rdi
   1c0f3:	e8 08 25 00 00       	call   1e600 <_ZNSt15__new_allocatorIP17VkDescriptorSet_TEC1Ev>
   1c0f8:	90                   	nop
   1c0f9:	c9                   	leave
   1c0fa:	c3                   	ret
   1c0fb:	90                   	nop

000000000001c0fc <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1c0fc:	55                   	push   %rbp
   1c0fd:	48 89 e5             	mov    %rsp,%rbp
   1c100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1c104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c108:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1c10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c113:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1c11a:	00 
   1c11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c11f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1c126:	00 
	{ }
   1c127:	90                   	nop
   1c128:	5d                   	pop    %rbp
   1c129:	c3                   	ret

000000000001c12a <_ZNSt15__new_allocatorIP17VkDescriptorSet_TED1Ev>:
   1c12a:	55                   	push   %rbp
   1c12b:	48 89 e5             	mov    %rsp,%rbp
   1c12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c132:	90                   	nop
   1c133:	5d                   	pop    %rbp
   1c134:	c3                   	ret
   1c135:	90                   	nop

000000000001c136 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1c136:	55                   	push   %rbp
   1c137:	48 89 e5             	mov    %rsp,%rbp
   1c13a:	48 83 ec 20          	sub    $0x20,%rsp
   1c13e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c146:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1c14a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1c14f:	74 17                	je     1c168 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1c151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c155:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c159:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c15d:	48 89 ce             	mov    %rcx,%rsi
   1c160:	48 89 c7             	mov    %rax,%rdi
   1c163:	e8 a3 24 00 00       	call   1e60b <_ZNSt16allocator_traitsISaIP17VkDescriptorSet_TEE10deallocateERS2_PS1_m>
      }
   1c168:	90                   	nop
   1c169:	c9                   	leave
   1c16a:	c3                   	ret
   1c16b:	90                   	nop

000000000001c16c <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1c16c:	55                   	push   %rbp
   1c16d:	48 89 e5             	mov    %rsp,%rbp
   1c170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1c174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c178:	5d                   	pop    %rbp
   1c179:	c3                   	ret

000000000001c17a <_ZSt8_DestroyIPP17VkDescriptorSet_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1c17a:	55                   	push   %rbp
   1c17b:	48 89 e5             	mov    %rsp,%rbp
   1c17e:	48 83 ec 20          	sub    $0x20,%rsp
   1c182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c186:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c18a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1c18e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c196:	48 89 d6             	mov    %rdx,%rsi
   1c199:	48 89 c7             	mov    %rax,%rdi
   1c19c:	e8 98 24 00 00       	call   1e639 <_ZSt8_DestroyIPP17VkDescriptorSet_TEvT_S3_>
    }
   1c1a1:	90                   	nop
   1c1a2:	c9                   	leave
   1c1a3:	c3                   	ret

000000000001c1a4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1c1a4:	55                   	push   %rbp
   1c1a5:	48 89 e5             	mov    %rsp,%rbp
   1c1a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c1ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1c1b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c1b4:	48 8b 10             	mov    (%rax),%rdx
   1c1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c1bb:	48 89 10             	mov    %rdx,(%rax)
   1c1be:	90                   	nop
   1c1bf:	5d                   	pop    %rbp
   1c1c0:	c3                   	ret
   1c1c1:	90                   	nop

000000000001c1c2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1c1c2:	55                   	push   %rbp
   1c1c3:	48 89 e5             	mov    %rsp,%rbp
   1c1c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1c1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c1ce:	5d                   	pop    %rbp
   1c1cf:	c3                   	ret

000000000001c1d0 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   1c1d0:	55                   	push   %rbp
   1c1d1:	48 89 e5             	mov    %rsp,%rbp
   1c1d4:	48 83 ec 10          	sub    $0x10,%rsp
   1c1d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c1dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1c1e0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1c1e4:	48 89 c7             	mov    %rax,%rdi
   1c1e7:	e8 73 24 00 00       	call   1e65f <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   1c1ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c1f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c1f4:	48 89 d6             	mov    %rdx,%rsi
   1c1f7:	48 89 c7             	mov    %rax,%rdi
   1c1fa:	e8 6b 24 00 00       	call   1e66a <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   1c1ff:	c9                   	leave
   1c200:	c3                   	ret

000000000001c201 <_ZN3glm6detail16compute_vec4_mulIfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi4EfLS2_0EEES7_>:
		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)
   1c201:	55                   	push   %rbp
   1c202:	48 89 e5             	mov    %rsp,%rbp
   1c205:	53                   	push   %rbx
   1c206:	48 83 ec 28          	sub    $0x28,%rsp
   1c20a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1c20e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
   1c212:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c216:	f3 0f 10 48 0c       	movss  0xc(%rax),%xmm1
   1c21b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c21f:	f3 0f 10 40 0c       	movss  0xc(%rax),%xmm0
   1c224:	0f 28 d9             	movaps %xmm1,%xmm3
   1c227:	f3 0f 59 d8          	mulss  %xmm0,%xmm3
   1c22b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c22f:	f3 0f 10 48 08       	movss  0x8(%rax),%xmm1
   1c234:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c238:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
   1c23d:	0f 28 d1             	movaps %xmm1,%xmm2
   1c240:	f3 0f 59 d0          	mulss  %xmm0,%xmm2
   1c244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c248:	f3 0f 10 48 04       	movss  0x4(%rax),%xmm1
   1c24d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c251:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
   1c256:	0f 28 e1             	movaps %xmm1,%xmm4
   1c259:	f3 0f 59 e0          	mulss  %xmm0,%xmm4
   1c25d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c261:	f3 0f 10 08          	movss  (%rax),%xmm1
   1c265:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c269:	f3 0f 10 00          	movss  (%rax),%xmm0
   1c26d:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
   1c271:	66 0f 7e ca          	movd   %xmm1,%edx
   1c275:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1c279:	0f 28 cc             	movaps %xmm4,%xmm1
   1c27c:	66 0f 6e c2          	movd   %edx,%xmm0
   1c280:	48 89 c7             	mov    %rax,%rdi
   1c283:	e8 f8 23 00 00       	call   1e680 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1Effff>
   1c288:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c28c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c290:	48 89 c1             	mov    %rax,%rcx
   1c293:	48 89 d3             	mov    %rdx,%rbx
   1c296:	48 89 d0             	mov    %rdx,%rax
		}
   1c299:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   1c29e:	66 48 0f 6e c8       	movq   %rax,%xmm1
   1c2a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c2a7:	c9                   	leave
   1c2a8:	c3                   	ret
   1c2a9:	90                   	nop

000000000001c2aa <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   1c2aa:	55                   	push   %rbp
   1c2ab:	48 89 e5             	mov    %rsp,%rbp
   1c2ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c2b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c2b6:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c2ba:	5d                   	pop    %rbp
   1c2bb:	c3                   	ret

000000000001c2bc <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1c2bc:	55                   	push   %rbp
   1c2bd:	48 89 e5             	mov    %rsp,%rbp
   1c2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1c2c4:	90                   	nop
   1c2c5:	5d                   	pop    %rbp
   1c2c6:	c3                   	ret

000000000001c2c7 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1c2c7:	55                   	push   %rbp
   1c2c8:	48 89 e5             	mov    %rsp,%rbp
   1c2cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c2cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1c2d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c2d7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1c2db:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1c2df:	5d                   	pop    %rbp
   1c2e0:	c3                   	ret

000000000001c2e1 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1c2e1:	55                   	push   %rbp
   1c2e2:	48 89 e5             	mov    %rsp,%rbp
   1c2e5:	48 83 ec 20          	sub    $0x20,%rsp
   1c2e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c2ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c2f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1c2f5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1c2f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c2fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c305:	48 89 ce             	mov    %rcx,%rsi
   1c308:	48 89 c7             	mov    %rax,%rdi
   1c30b:	e8 c6 23 00 00       	call   1e6d6 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   1c310:	c9                   	leave
   1c311:	c3                   	ret

000000000001c312 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1c312:	55                   	push   %rbp
   1c313:	48 89 e5             	mov    %rsp,%rbp
   1c316:	48 83 ec 10          	sub    $0x10,%rsp
   1c31a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c31e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1c322:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c32a:	48 89 d6             	mov    %rdx,%rsi
   1c32d:	48 89 c7             	mov    %rax,%rdi
   1c330:	e8 d6 23 00 00       	call   1e70b <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   1c335:	90                   	nop
   1c336:	c9                   	leave
   1c337:	c3                   	ret

000000000001c338 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1c338:	55                   	push   %rbp
   1c339:	48 89 e5             	mov    %rsp,%rbp
   1c33c:	53                   	push   %rbx
   1c33d:	48 83 ec 28          	sub    $0x28,%rsp
   1c341:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c345:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c349:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1c34d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c351:	48 89 c6             	mov    %rax,%rsi
   1c354:	bf 08 00 00 00       	mov    $0x8,%edi
   1c359:	e8 0a b5 fe ff       	call   7868 <_ZnwmPv>
   1c35e:	48 89 c3             	mov    %rax,%rbx
   1c361:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c365:	48 89 c7             	mov    %rax,%rdi
   1c368:	e8 1f ca ff ff       	call   18d8c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1c36d:	48 8b 00             	mov    (%rax),%rax
   1c370:	48 89 03             	mov    %rax,(%rbx)
   1c373:	90                   	nop
   1c374:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c378:	c9                   	leave
   1c379:	c3                   	ret

000000000001c37a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   1c37a:	55                   	push   %rbp
   1c37b:	48 89 e5             	mov    %rsp,%rbp
   1c37e:	53                   	push   %rbx
   1c37f:	48 83 ec 38          	sub    $0x38,%rsp
   1c383:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1c387:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1c38b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1c38f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c393:	48 89 c7             	mov    %rax,%rdi
   1c396:	e8 7f 23 00 00       	call   1e71a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1c39b:	48 89 c3             	mov    %rax,%rbx
   1c39e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c3a2:	48 89 c7             	mov    %rax,%rdi
   1c3a5:	e8 ac 9a ff ff       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1c3aa:	48 29 c3             	sub    %rax,%rbx
   1c3ad:	48 89 da             	mov    %rbx,%rdx
   1c3b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c3b4:	48 39 c2             	cmp    %rax,%rdx
   1c3b7:	0f 92 c0             	setb   %al
   1c3ba:	84 c0                	test   %al,%al
   1c3bc:	74 0c                	je     1c3ca <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   1c3be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c3c2:	48 89 c7             	mov    %rax,%rdi
   1c3c5:	e8 86 8e fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1c3ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c3ce:	48 89 c7             	mov    %rax,%rdi
   1c3d1:	e8 80 9a ff ff       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1c3d6:	48 89 c3             	mov    %rax,%rbx
   1c3d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c3dd:	48 89 c7             	mov    %rax,%rdi
   1c3e0:	e8 71 9a ff ff       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1c3e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1c3e9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1c3ed:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1c3f1:	48 89 d6             	mov    %rdx,%rsi
   1c3f4:	48 89 c7             	mov    %rax,%rdi
   1c3f7:	e8 40 23 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1c3fc:	48 8b 00             	mov    (%rax),%rax
   1c3ff:	48 01 d8             	add    %rbx,%rax
   1c402:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1c406:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c40a:	48 89 c7             	mov    %rax,%rdi
   1c40d:	e8 44 9a ff ff       	call   15e56 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1c412:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1c416:	72 12                	jb     1c42a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   1c418:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c41c:	48 89 c7             	mov    %rax,%rdi
   1c41f:	e8 f6 22 00 00       	call   1e71a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1c424:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1c428:	73 0e                	jae    1c438 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1c42a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c42e:	48 89 c7             	mov    %rax,%rdi
   1c431:	e8 e4 22 00 00       	call   1e71a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1c436:	eb 04                	jmp    1c43c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   1c438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1c43c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c440:	c9                   	leave
   1c441:	c3                   	ret

000000000001c442 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   1c442:	55                   	push   %rbp
   1c443:	48 89 e5             	mov    %rsp,%rbp
   1c446:	53                   	push   %rbx
   1c447:	48 83 ec 18          	sub    $0x18,%rsp
   1c44b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c44f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   1c453:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c457:	48 89 c7             	mov    %rax,%rdi
   1c45a:	e8 1f c9 ff ff       	call   18d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1c45f:	48 8b 18             	mov    (%rax),%rbx
   1c462:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c466:	48 89 c7             	mov    %rax,%rdi
   1c469:	e8 10 c9 ff ff       	call   18d7e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1c46e:	48 8b 00             	mov    (%rax),%rax
   1c471:	48 89 da             	mov    %rbx,%rdx
   1c474:	48 29 c2             	sub    %rax,%rdx
   1c477:	48 89 d0             	mov    %rdx,%rax
   1c47a:	48 c1 f8 03          	sar    $0x3,%rax
   1c47e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c482:	c9                   	leave
   1c483:	c3                   	ret

000000000001c484 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1c484:	55                   	push   %rbp
   1c485:	48 89 e5             	mov    %rsp,%rbp
   1c488:	48 83 ec 20          	sub    $0x20,%rsp
   1c48c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c490:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c494:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1c498:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1c49c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1c4a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c4a4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1c4a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c4ac:	48 89 c7             	mov    %rax,%rdi
   1c4af:	e8 b3 22 00 00       	call   1e767 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1c4b4:	c9                   	leave
   1c4b5:	c3                   	ret

000000000001c4b6 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   1c4b6:	55                   	push   %rbp
   1c4b7:	48 89 e5             	mov    %rsp,%rbp
   1c4ba:	48 83 ec 20          	sub    $0x20,%rsp
   1c4be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c4c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   1c4c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c4ca:	48 8b 00             	mov    (%rax),%rax
   1c4cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c4d1:	48 c1 e2 03          	shl    $0x3,%rdx
   1c4d5:	48 f7 da             	neg    %rdx
   1c4d8:	48 01 d0             	add    %rdx,%rax
   1c4db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c4df:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1c4e3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1c4e7:	48 89 d6             	mov    %rdx,%rsi
   1c4ea:	48 89 c7             	mov    %rax,%rdi
   1c4ed:	e8 6e c8 ff ff       	call   18d60 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1c4f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c4f6:	c9                   	leave
   1c4f7:	c3                   	ret

000000000001c4f8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   1c4f8:	55                   	push   %rbp
   1c4f9:	48 89 e5             	mov    %rsp,%rbp
   1c4fc:	53                   	push   %rbx
   1c4fd:	48 83 ec 28          	sub    $0x28,%rsp
   1c501:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c505:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   1c509:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1c50d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c511:	48 89 c7             	mov    %rax,%rdi
   1c514:	e8 bb ca ff ff       	call   18fd4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1c519:	48 89 c6             	mov    %rax,%rsi
   1c51c:	48 89 df             	mov    %rbx,%rdi
   1c51f:	e8 a6 22 00 00       	call   1e7ca <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   1c524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c528:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1c52c:	90                   	nop
   1c52d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c531:	c9                   	leave
   1c532:	c3                   	ret
   1c533:	90                   	nop

000000000001c534 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   1c534:	55                   	push   %rbp
   1c535:	48 89 e5             	mov    %rsp,%rbp
   1c538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1c53c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c540:	5d                   	pop    %rbp
   1c541:	c3                   	ret

000000000001c542 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   1c542:	55                   	push   %rbp
   1c543:	48 89 e5             	mov    %rsp,%rbp
   1c546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c54a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   1c54e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c552:	8b 10                	mov    (%rax),%edx
   1c554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c558:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   1c55a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1c55e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1c562:	48 8b 46 04          	mov    0x4(%rsi),%rax
   1c566:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   1c56a:	48 89 41 04          	mov    %rax,0x4(%rcx)
   1c56e:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   1c572:	48 8b 46 14          	mov    0x14(%rsi),%rax
   1c576:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   1c57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1c57e:	5d                   	pop    %rbp
   1c57f:	c3                   	ret

000000000001c580 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   1c580:	55                   	push   %rbp
   1c581:	48 89 e5             	mov    %rsp,%rbp
   1c584:	53                   	push   %rbx
   1c585:	48 83 ec 18          	sub    $0x18,%rsp
   1c589:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c58d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   1c591:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c595:	48 89 c7             	mov    %rax,%rdi
   1c598:	e8 7f 22 00 00       	call   1e81c <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   1c59d:	48 89 c3             	mov    %rax,%rbx
   1c5a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c5a4:	48 89 c7             	mov    %rax,%rdi
   1c5a7:	e8 62 22 00 00       	call   1e80e <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   1c5ac:	48 89 de             	mov    %rbx,%rsi
   1c5af:	48 89 c7             	mov    %rax,%rdi
   1c5b2:	e8 73 22 00 00       	call   1e82a <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   1c5b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c5bb:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   1c5bf:	90                   	nop
   1c5c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c5c4:	c9                   	leave
   1c5c5:	c3                   	ret

000000000001c5c6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   1c5c6:	55                   	push   %rbp
   1c5c7:	48 89 e5             	mov    %rsp,%rbp
   1c5ca:	48 83 ec 10          	sub    $0x10,%rsp
   1c5ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   1c5d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c5d6:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1c5da:	84 c0                	test   %al,%al
   1c5dc:	74 0c                	je     1c5ea <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   1c5de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c5e2:	48 89 c7             	mov    %rax,%rdi
   1c5e5:	e8 9a 22 00 00       	call   1e884 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   1c5ea:	90                   	nop
   1c5eb:	c9                   	leave
   1c5ec:	c3                   	ret
   1c5ed:	90                   	nop

000000000001c5ee <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1c5ee:	55                   	push   %rbp
   1c5ef:	48 89 e5             	mov    %rsp,%rbp
   1c5f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c5f6:	90                   	nop
   1c5f7:	5d                   	pop    %rbp
   1c5f8:	c3                   	ret

000000000001c5f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1c5f9:	55                   	push   %rbp
   1c5fa:	48 89 e5             	mov    %rsp,%rbp
   1c5fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1c601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c605:	48 8b 40 18          	mov    0x18(%rax),%rax
   1c609:	5d                   	pop    %rbp
   1c60a:	c3                   	ret

000000000001c60b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1c60b:	55                   	push   %rbp
   1c60c:	48 89 e5             	mov    %rsp,%rbp
   1c60f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1c613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c617:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c61b:	5d                   	pop    %rbp
   1c61c:	c3                   	ret
   1c61d:	90                   	nop

000000000001c61e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1c61e:	55                   	push   %rbp
   1c61f:	48 89 e5             	mov    %rsp,%rbp
   1c622:	48 83 ec 10          	sub    $0x10,%rsp
   1c626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c62a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   1c62e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c636:	48 89 d6             	mov    %rdx,%rsi
   1c639:	48 89 c7             	mov    %rax,%rdi
   1c63c:	e8 57 22 00 00       	call   1e898 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   1c641:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c649:	48 89 d6             	mov    %rdx,%rsi
   1c64c:	48 89 c7             	mov    %rax,%rdi
   1c64f:	e8 82 22 00 00       	call   1e8d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   1c654:	90                   	nop
   1c655:	c9                   	leave
   1c656:	c3                   	ret
   1c657:	90                   	nop

000000000001c658 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   1c658:	55                   	push   %rbp
   1c659:	48 89 e5             	mov    %rsp,%rbp
   1c65c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1c660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c664:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c668:	5d                   	pop    %rbp
   1c669:	c3                   	ret

000000000001c66a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   1c66a:	55                   	push   %rbp
   1c66b:	48 89 e5             	mov    %rsp,%rbp
   1c66e:	53                   	push   %rbx
   1c66f:	48 83 ec 18          	sub    $0x18,%rsp
   1c673:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c677:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   1c67b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c67f:	48 89 c7             	mov    %rax,%rdi
   1c682:	e8 85 22 00 00       	call   1e90c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1c687:	48 89 c3             	mov    %rax,%rbx
   1c68a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c68e:	48 89 c7             	mov    %rax,%rdi
   1c691:	e8 0c cb ff ff       	call   191a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1c696:	48 89 c6             	mov    %rax,%rsi
   1c699:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c69d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6a1:	48 89 d1             	mov    %rdx,%rcx
   1c6a4:	48 89 da             	mov    %rbx,%rdx
   1c6a7:	48 89 c7             	mov    %rax,%rdi
   1c6aa:	e8 6f 22 00 00       	call   1e91e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   1c6af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c6b3:	c9                   	leave
   1c6b4:	c3                   	ret
   1c6b5:	90                   	nop

000000000001c6b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1c6b6:	55                   	push   %rbp
   1c6b7:	48 89 e5             	mov    %rsp,%rbp
   1c6ba:	48 83 ec 20          	sub    $0x20,%rsp
   1c6be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   1c6c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c6c6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1c6ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1c6ce:	48 89 d6             	mov    %rdx,%rsi
   1c6d1:	48 89 c7             	mov    %rax,%rdi
   1c6d4:	e8 39 06 00 00       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1c6d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c6dd:	c9                   	leave
   1c6de:	c3                   	ret
   1c6df:	90                   	nop

000000000001c6e0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   1c6e0:	55                   	push   %rbp
   1c6e1:	48 89 e5             	mov    %rsp,%rbp
   1c6e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   1c6e8:	90                   	nop
   1c6e9:	5d                   	pop    %rbp
   1c6ea:	c3                   	ret
   1c6eb:	90                   	nop

000000000001c6ec <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   1c6ec:	55                   	push   %rbp
   1c6ed:	48 89 e5             	mov    %rsp,%rbp
   1c6f0:	48 83 ec 10          	sub    $0x10,%rsp
   1c6f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1c6f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c6fc:	48 83 c0 20          	add    $0x20,%rax
   1c700:	48 89 c7             	mov    %rax,%rdi
   1c703:	e8 ac 22 00 00       	call   1e9b4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1c708:	c9                   	leave
   1c709:	c3                   	ret

000000000001c70a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   1c70a:	55                   	push   %rbp
   1c70b:	48 89 e5             	mov    %rsp,%rbp
   1c70e:	48 83 ec 10          	sub    $0x10,%rsp
   1c712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   1c71a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c71e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c722:	48 89 d6             	mov    %rdx,%rsi
   1c725:	48 89 c7             	mov    %rax,%rdi
   1c728:	e8 03 89 fe ff       	call   5030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   1c72d:	c1 e8 1f             	shr    $0x1f,%eax
   1c730:	c9                   	leave
   1c731:	c3                   	ret

000000000001c732 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1c732:	55                   	push   %rbp
   1c733:	48 89 e5             	mov    %rsp,%rbp
   1c736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1c73a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c73e:	5d                   	pop    %rbp
   1c73f:	c3                   	ret

000000000001c740 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   1c740:	55                   	push   %rbp
   1c741:	48 89 e5             	mov    %rsp,%rbp
   1c744:	53                   	push   %rbx
   1c745:	48 83 ec 18          	sub    $0x18,%rsp
   1c749:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c74d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   1c751:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1c755:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c759:	48 89 c7             	mov    %rax,%rdi
   1c75c:	e8 d1 ff ff ff       	call   1c732 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1c761:	48 89 c6             	mov    %rax,%rsi
   1c764:	48 89 df             	mov    %rbx,%rdi
   1c767:	e8 62 22 00 00       	call   1e9ce <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   1c76c:	90                   	nop
   1c76d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c771:	c9                   	leave
   1c772:	c3                   	ret

000000000001c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1c773:	55                   	push   %rbp
   1c774:	48 89 e5             	mov    %rsp,%rbp
   1c777:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1c77b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c77f:	5d                   	pop    %rbp
   1c780:	c3                   	ret

000000000001c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1c781:	55                   	push   %rbp
   1c782:	48 89 e5             	mov    %rsp,%rbp
   1c785:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1c789:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c78d:	5d                   	pop    %rbp
   1c78e:	c3                   	ret

000000000001c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1c78f:	55                   	push   %rbp
   1c790:	48 89 e5             	mov    %rsp,%rbp
   1c793:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1c797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c79b:	5d                   	pop    %rbp
   1c79c:	c3                   	ret
   1c79d:	90                   	nop

000000000001c79e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   1c79e:	55                   	push   %rbp
   1c79f:	48 89 e5             	mov    %rsp,%rbp
   1c7a2:	41 54                	push   %r12
   1c7a4:	53                   	push   %rbx
   1c7a5:	48 83 ec 30          	sub    $0x30,%rsp
   1c7a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c7ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c7b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1c7b5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1c7b9:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   1c7bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c7c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c7c5:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   1c7c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c7cc:	48 89 c7             	mov    %rax,%rdi
   1c7cf:	e8 bb ff ff ff       	call   1c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1c7d4:	49 89 c4             	mov    %rax,%r12
   1c7d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c7db:	48 89 c7             	mov    %rax,%rdi
   1c7de:	e8 9e ff ff ff       	call   1c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1c7e3:	48 89 c3             	mov    %rax,%rbx
   1c7e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c7ea:	48 89 c7             	mov    %rax,%rdi
   1c7ed:	e8 81 ff ff ff       	call   1c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1c7f2:	48 89 c6             	mov    %rax,%rsi
   1c7f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c7f9:	4c 89 e1             	mov    %r12,%rcx
   1c7fc:	48 89 da             	mov    %rbx,%rdx
   1c7ff:	48 89 c7             	mov    %rax,%rdi
   1c802:	e8 fb 21 00 00       	call   1ea02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   1c807:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1c80b:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   1c80f:	90                   	nop
   1c810:	48 83 c4 30          	add    $0x30,%rsp
   1c814:	5b                   	pop    %rbx
   1c815:	41 5c                	pop    %r12
   1c817:	5d                   	pop    %rbp
   1c818:	c3                   	ret
   1c819:	90                   	nop

000000000001c81a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   1c81a:	55                   	push   %rbp
   1c81b:	48 89 e5             	mov    %rsp,%rbp
   1c81e:	48 83 ec 10          	sub    $0x10,%rsp
   1c822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   1c826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c82a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c82e:	48 85 c0             	test   %rax,%rax
   1c831:	74 1a                	je     1c84d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   1c833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c837:	48 8b 00             	mov    (%rax),%rax
   1c83a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1c83e:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   1c842:	48 89 d6             	mov    %rdx,%rsi
   1c845:	48 89 c7             	mov    %rax,%rdi
   1c848:	e8 d1 fd ff ff       	call   1c61e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   1c84d:	90                   	nop
   1c84e:	c9                   	leave
   1c84f:	c3                   	ret

000000000001c850 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1c850:	55                   	push   %rbp
   1c851:	48 89 e5             	mov    %rsp,%rbp
   1c854:	53                   	push   %rbx
   1c855:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1c85c:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   1c863:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   1c86a:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   1c871:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1c878:	48 89 c7             	mov    %rax,%rdi
   1c87b:	e8 fe 21 00 00       	call   1ea7e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   1c880:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   1c887:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1c88e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c895:	48 89 c7             	mov    %rax,%rdi
   1c898:	e8 6f 20 00 00       	call   1e90c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1c89d:	48 39 c3             	cmp    %rax,%rbx
   1c8a0:	0f 94 c0             	sete   %al
   1c8a3:	84 c0                	test   %al,%al
   1c8a5:	0f 84 c8 00 00 00    	je     1c973 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   1c8ab:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c8b2:	48 89 c7             	mov    %rax,%rdi
   1c8b5:	e8 ec 21 00 00       	call   1eaa6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   1c8ba:	48 85 c0             	test   %rax,%rax
   1c8bd:	74 44                	je     1c903 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1c8bf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1c8c6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c8cd:	48 89 c7             	mov    %rax,%rdi
   1c8d0:	e8 e3 21 00 00       	call   1eab8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1c8d5:	48 8b 00             	mov    (%rax),%rax
   1c8d8:	48 89 c7             	mov    %rax,%rdi
   1c8db:	e8 ea 21 00 00       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1c8e0:	48 89 c1             	mov    %rax,%rcx
   1c8e3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1c8ea:	48 89 c2             	mov    %rax,%rdx
   1c8ed:	48 89 ce             	mov    %rcx,%rsi
   1c8f0:	48 89 df             	mov    %rbx,%rdi
   1c8f3:	e8 8c c9 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1c8f8:	84 c0                	test   %al,%al
   1c8fa:	74 07                	je     1c903 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1c8fc:	b8 01 00 00 00       	mov    $0x1,%eax
   1c901:	eb 05                	jmp    1c908 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   1c903:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   1c908:	84 c0                	test   %al,%al
   1c90a:	74 49                	je     1c955 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   1c90c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c913:	48 89 c7             	mov    %rax,%rdi
   1c916:	e8 9d 21 00 00       	call   1eab8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1c91b:	48 89 c2             	mov    %rax,%rdx
   1c91e:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   1c925:	00 00 00 00 
   1c929:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   1c930:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1c937:	48 89 ce             	mov    %rcx,%rsi
   1c93a:	48 89 c7             	mov    %rax,%rdi
   1c93d:	e8 a2 21 00 00       	call   1eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1c942:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1c949:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1c950:	e9 43 03 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1c955:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1c95c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c963:	48 89 d6             	mov    %rdx,%rsi
   1c966:	48 89 c7             	mov    %rax,%rdi
   1c969:	e8 a6 21 00 00       	call   1eb14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1c96e:	e9 25 03 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   1c973:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1c97a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c981:	48 89 c7             	mov    %rax,%rdi
   1c984:	e8 41 21 00 00       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1c989:	48 89 c2             	mov    %rax,%rdx
   1c98c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1c993:	48 89 c6             	mov    %rax,%rsi
   1c996:	48 89 df             	mov    %rbx,%rdi
   1c999:	e8 e6 c8 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1c99e:	84 c0                	test   %al,%al
   1c9a0:	0f 84 66 01 00 00    	je     1cb0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   1c9a6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1c9ad:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   1c9b4:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1c9bb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c9c2:	48 89 c7             	mov    %rax,%rdi
   1c9c5:	e8 c0 22 00 00       	call   1ec8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1c9ca:	48 8b 00             	mov    (%rax),%rax
   1c9cd:	48 39 c3             	cmp    %rax,%rbx
   1c9d0:	0f 94 c0             	sete   %al
   1c9d3:	84 c0                	test   %al,%al
   1c9d5:	74 4c                	je     1ca23 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   1c9d7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c9de:	48 89 c7             	mov    %rax,%rdi
   1c9e1:	e8 a4 22 00 00       	call   1ec8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1c9e6:	48 89 c3             	mov    %rax,%rbx
   1c9e9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1c9f0:	48 89 c7             	mov    %rax,%rdi
   1c9f3:	e8 92 22 00 00       	call   1ec8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1c9f8:	48 89 c1             	mov    %rax,%rcx
   1c9fb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1ca02:	48 89 da             	mov    %rbx,%rdx
   1ca05:	48 89 ce             	mov    %rcx,%rsi
   1ca08:	48 89 c7             	mov    %rax,%rdi
   1ca0b:	e8 8c 22 00 00       	call   1ec9c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1ca10:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1ca17:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1ca1e:	e9 75 02 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   1ca23:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1ca2a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   1ca31:	48 89 c7             	mov    %rax,%rdi
   1ca34:	e8 a7 22 00 00       	call   1ece0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   1ca39:	48 8b 00             	mov    (%rax),%rax
   1ca3c:	48 89 c7             	mov    %rax,%rdi
   1ca3f:	e8 86 20 00 00       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1ca44:	48 89 c1             	mov    %rax,%rcx
   1ca47:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1ca4e:	48 89 c2             	mov    %rax,%rdx
   1ca51:	48 89 ce             	mov    %rcx,%rsi
   1ca54:	48 89 df             	mov    %rbx,%rdi
   1ca57:	e8 28 c8 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1ca5c:	84 c0                	test   %al,%al
   1ca5e:	0f 84 8a 00 00 00    	je     1caee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   1ca64:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1ca6b:	48 89 c7             	mov    %rax,%rdi
   1ca6e:	e8 86 fb ff ff       	call   1c5f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1ca73:	48 85 c0             	test   %rax,%rax
   1ca76:	0f 94 c0             	sete   %al
   1ca79:	84 c0                	test   %al,%al
   1ca7b:	74 3e                	je     1cabb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   1ca7d:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   1ca84:	00 00 00 00 
   1ca88:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   1ca8f:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   1ca96:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1ca9d:	48 89 ce             	mov    %rcx,%rsi
   1caa0:	48 89 c7             	mov    %rax,%rdi
   1caa3:	e8 3c 20 00 00       	call   1eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1caa8:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1caaf:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1cab6:	e9 dd 01 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   1cabb:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1cac2:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   1cac9:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1cad0:	48 89 ce             	mov    %rcx,%rsi
   1cad3:	48 89 c7             	mov    %rax,%rdi
   1cad6:	e8 c1 21 00 00       	call   1ec9c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1cadb:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1cae2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1cae9:	e9 aa 01 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1caee:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1caf5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cafc:	48 89 d6             	mov    %rdx,%rsi
   1caff:	48 89 c7             	mov    %rax,%rdi
   1cb02:	e8 0d 20 00 00       	call   1eb14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1cb07:	e9 8c 01 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   1cb0c:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1cb13:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1cb1a:	48 89 c7             	mov    %rax,%rdi
   1cb1d:	e8 a8 1f 00 00       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1cb22:	48 89 c1             	mov    %rax,%rcx
   1cb25:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1cb2c:	48 89 c2             	mov    %rax,%rdx
   1cb2f:	48 89 ce             	mov    %rcx,%rsi
   1cb32:	48 89 df             	mov    %rbx,%rdi
   1cb35:	e8 4a c7 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1cb3a:	84 c0                	test   %al,%al
   1cb3c:	0f 84 2c 01 00 00    	je     1cc6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   1cb42:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1cb49:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   1cb50:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1cb57:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cb5e:	48 89 c7             	mov    %rax,%rdi
   1cb61:	e8 52 1f 00 00       	call   1eab8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1cb66:	48 8b 00             	mov    (%rax),%rax
   1cb69:	48 39 c3             	cmp    %rax,%rbx
   1cb6c:	0f 94 c0             	sete   %al
   1cb6f:	84 c0                	test   %al,%al
   1cb71:	74 3a                	je     1cbad <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   1cb73:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cb7a:	48 89 c7             	mov    %rax,%rdi
   1cb7d:	e8 36 1f 00 00       	call   1eab8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1cb82:	48 89 c2             	mov    %rax,%rdx
   1cb85:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   1cb8c:	00 
   1cb8d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   1cb91:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1cb95:	48 89 ce             	mov    %rcx,%rsi
   1cb98:	48 89 c7             	mov    %rax,%rdi
   1cb9b:	e8 44 1f 00 00       	call   1eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1cba0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cba4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1cba8:	e9 eb 00 00 00       	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   1cbad:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1cbb4:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   1cbbb:	48 89 c7             	mov    %rax,%rdi
   1cbbe:	e8 45 21 00 00       	call   1ed08 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   1cbc3:	48 8b 00             	mov    (%rax),%rax
   1cbc6:	48 89 c7             	mov    %rax,%rdi
   1cbc9:	e8 fc 1e 00 00       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1cbce:	48 89 c2             	mov    %rax,%rdx
   1cbd1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1cbd8:	48 89 c6             	mov    %rax,%rsi
   1cbdb:	48 89 df             	mov    %rbx,%rdi
   1cbde:	e8 a1 c6 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1cbe3:	84 c0                	test   %al,%al
   1cbe5:	74 6c                	je     1cc53 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   1cbe7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1cbee:	48 89 c7             	mov    %rax,%rdi
   1cbf1:	e8 03 fa ff ff       	call   1c5f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1cbf6:	48 85 c0             	test   %rax,%rax
   1cbf9:	0f 94 c0             	sete   %al
   1cbfc:	84 c0                	test   %al,%al
   1cbfe:	74 2c                	je     1cc2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   1cc00:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   1cc07:	00 
   1cc08:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1cc0f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   1cc13:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1cc17:	48 89 ce             	mov    %rcx,%rsi
   1cc1a:	48 89 c7             	mov    %rax,%rdi
   1cc1d:	e8 c2 1e 00 00       	call   1eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1cc22:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc26:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1cc2a:	eb 6c                	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   1cc2c:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   1cc33:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   1cc3a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1cc3e:	48 89 ce             	mov    %rcx,%rsi
   1cc41:	48 89 c7             	mov    %rax,%rdi
   1cc44:	e8 53 20 00 00       	call   1ec9c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1cc49:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cc4d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1cc51:	eb 45                	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1cc53:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1cc5a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1cc61:	48 89 d6             	mov    %rdx,%rsi
   1cc64:	48 89 c7             	mov    %rax,%rdi
   1cc67:	e8 a8 1e 00 00       	call   1eb14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1cc6c:	eb 2a                	jmp    1cc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   1cc6e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1cc75:	00 
   1cc76:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1cc7a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   1cc81:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cc85:	48 89 ce             	mov    %rcx,%rsi
   1cc88:	48 89 c7             	mov    %rax,%rdi
   1cc8b:	e8 54 1e 00 00       	call   1eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1cc90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cc94:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1cc98:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1cc9c:	c9                   	leave
   1cc9d:	c3                   	ret

000000000001cc9e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   1cc9e:	55                   	push   %rbp
   1cc9f:	48 89 e5             	mov    %rsp,%rbp
   1cca2:	48 83 ec 10          	sub    $0x10,%rsp
   1cca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   1ccaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ccae:	48 8b 40 08          	mov    0x8(%rax),%rax
   1ccb2:	48 89 c7             	mov    %rax,%rdi
   1ccb5:	e8 76 20 00 00       	call   1ed30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1ccba:	c9                   	leave
   1ccbb:	c3                   	ret

000000000001ccbc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   1ccbc:	55                   	push   %rbp
   1ccbd:	48 89 e5             	mov    %rsp,%rbp
   1ccc0:	48 83 ec 30          	sub    $0x30,%rsp
   1ccc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ccc8:	48 89 d1             	mov    %rdx,%rcx
   1cccb:	48 89 f0             	mov    %rsi,%rax
   1ccce:	48 89 fa             	mov    %rdi,%rdx
   1ccd1:	48 89 ca             	mov    %rcx,%rdx
   1ccd4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1ccd8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   1ccdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cce0:	48 8b 00             	mov    (%rax),%rax
   1cce3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1cce7:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1cceb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ccef:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   1ccf3:	48 89 c7             	mov    %rax,%rdi
   1ccf6:	e8 61 20 00 00       	call   1ed5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   1ccfb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   1ccff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cd03:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1cd0a:	00 
	  return __it;
   1cd0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1cd0f:	c9                   	leave
   1cd10:	c3                   	ret
   1cd11:	90                   	nop

000000000001cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1cd12:	55                   	push   %rbp
   1cd13:	48 89 e5             	mov    %rsp,%rbp
   1cd16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cd1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1cd1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1cd26:	48 89 10             	mov    %rdx,(%rax)
   1cd29:	90                   	nop
   1cd2a:	5d                   	pop    %rbp
   1cd2b:	c3                   	ret

000000000001cd2c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1cd2c:	55                   	push   %rbp
   1cd2d:	48 89 e5             	mov    %rsp,%rbp
   1cd30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cd34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1cd38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cd3c:	48 8b 10             	mov    (%rax),%rdx
   1cd3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd43:	48 89 10             	mov    %rdx,(%rax)
   1cd46:	90                   	nop
   1cd47:	5d                   	pop    %rbp
   1cd48:	c3                   	ret
   1cd49:	90                   	nop

000000000001cd4a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1cd4a:	55                   	push   %rbp
   1cd4b:	48 89 e5             	mov    %rsp,%rbp
   1cd4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1cd52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd56:	5d                   	pop    %rbp
   1cd57:	c3                   	ret

000000000001cd58 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   1cd58:	55                   	push   %rbp
   1cd59:	48 89 e5             	mov    %rsp,%rbp
   1cd5c:	48 83 ec 10          	sub    $0x10,%rsp
   1cd60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cd64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   1cd68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cd6c:	48 89 c7             	mov    %rax,%rdi
   1cd6f:	e8 ac 20 00 00       	call   1ee20 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1cd74:	48 89 c2             	mov    %rax,%rdx
   1cd77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd7b:	48 89 d6             	mov    %rdx,%rsi
   1cd7e:	48 89 c7             	mov    %rax,%rdi
   1cd81:	e8 54 f9 fe ff       	call   c6da <_ZNSaIP9VkImage_TEC1ERKS1_>
   1cd86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd8a:	c9                   	leave
   1cd8b:	c3                   	ret

000000000001cd8c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1cd8c:	55                   	push   %rbp
   1cd8d:	48 89 e5             	mov    %rsp,%rbp
   1cd90:	48 83 ec 10          	sub    $0x10,%rsp
   1cd94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cd98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   1cd9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cda0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1cda4:	48 89 d6             	mov    %rdx,%rsi
   1cda7:	48 89 c7             	mov    %rax,%rdi
   1cdaa:	e8 7f 20 00 00       	call   1ee2e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   1cdaf:	90                   	nop
   1cdb0:	c9                   	leave
   1cdb1:	c3                   	ret

000000000001cdb2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   1cdb2:	55                   	push   %rbp
   1cdb3:	48 89 e5             	mov    %rsp,%rbp
   1cdb6:	48 83 ec 30          	sub    $0x30,%rsp
   1cdba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1cdbe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   1cdc2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1cdc6:	48 89 c7             	mov    %rax,%rdi
   1cdc9:	e8 8e 0d ff ff       	call   db5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   1cdce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1cdd2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1cdd6:	48 89 d6             	mov    %rdx,%rsi
   1cdd9:	48 89 c7             	mov    %rax,%rdi
   1cddc:	e8 73 20 00 00       	call   1ee54 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   1cde1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1cde5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cde9:	48 89 d6             	mov    %rdx,%rsi
   1cdec:	48 89 c7             	mov    %rax,%rdi
   1cdef:	e8 60 20 00 00       	call   1ee54 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   1cdf4:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1cdf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cdfc:	48 89 d6             	mov    %rdx,%rsi
   1cdff:	48 89 c7             	mov    %rax,%rdi
   1ce02:	e8 4d 20 00 00       	call   1ee54 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   1ce07:	90                   	nop
   1ce08:	c9                   	leave
   1ce09:	c3                   	ret

000000000001ce0a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   1ce0a:	55                   	push   %rbp
   1ce0b:	48 89 e5             	mov    %rsp,%rbp
   1ce0e:	48 83 ec 10          	sub    $0x10,%rsp
   1ce12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ce16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   1ce1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ce1e:	48 89 c7             	mov    %rax,%rdi
   1ce21:	e8 6b 20 00 00       	call   1ee91 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   1ce26:	90                   	nop
   1ce27:	c9                   	leave
   1ce28:	c3                   	ret
   1ce29:	90                   	nop

000000000001ce2a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1ce2a:	55                   	push   %rbp
   1ce2b:	48 89 e5             	mov    %rsp,%rbp
   1ce2e:	48 83 ec 10          	sub    $0x10,%rsp
   1ce32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1ce36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce3a:	48 89 c7             	mov    %rax,%rdi
   1ce3d:	e8 a0 20 00 00       	call   1eee2 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1ce42:	48 89 c7             	mov    %rax,%rdi
   1ce45:	e8 55 20 00 00       	call   1ee9f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1ce4a:	c9                   	leave
   1ce4b:	c3                   	ret

000000000001ce4c <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1ce4c:	55                   	push   %rbp
   1ce4d:	48 89 e5             	mov    %rsp,%rbp
   1ce50:	48 83 ec 20          	sub    $0x20,%rsp
   1ce54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ce58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ce5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1ce60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1ce64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ce68:	48 89 d6             	mov    %rdx,%rsi
   1ce6b:	48 89 c7             	mov    %rax,%rdi
   1ce6e:	e8 7d 20 00 00       	call   1eef0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   1ce73:	c9                   	leave
   1ce74:	c3                   	ret
   1ce75:	90                   	nop

000000000001ce76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1ce76:	55                   	push   %rbp
   1ce77:	48 89 e5             	mov    %rsp,%rbp
   1ce7a:	53                   	push   %rbx
   1ce7b:	48 83 ec 38          	sub    $0x38,%rsp
   1ce7f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ce83:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ce87:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1ce8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ce8f:	48 89 c7             	mov    %rax,%rdi
   1ce92:	e8 93 ff ff ff       	call   1ce2a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1ce97:	48 89 c3             	mov    %rax,%rbx
   1ce9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ce9e:	48 89 c7             	mov    %rax,%rdi
   1cea1:	e8 94 9b ff ff       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1cea6:	48 29 c3             	sub    %rax,%rbx
   1cea9:	48 89 da             	mov    %rbx,%rdx
   1ceac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ceb0:	48 39 c2             	cmp    %rax,%rdx
   1ceb3:	0f 92 c0             	setb   %al
   1ceb6:	84 c0                	test   %al,%al
   1ceb8:	74 0c                	je     1cec6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1ceba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1cebe:	48 89 c7             	mov    %rax,%rdi
   1cec1:	e8 8a 83 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1cec6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ceca:	48 89 c7             	mov    %rax,%rdi
   1cecd:	e8 68 9b ff ff       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1ced2:	48 89 c3             	mov    %rax,%rbx
   1ced5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ced9:	48 89 c7             	mov    %rax,%rdi
   1cedc:	e8 59 9b ff ff       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1cee1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1cee5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1cee9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1ceed:	48 89 d6             	mov    %rdx,%rsi
   1cef0:	48 89 c7             	mov    %rax,%rdi
   1cef3:	e8 44 18 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1cef8:	48 8b 00             	mov    (%rax),%rax
   1cefb:	48 01 d8             	add    %rbx,%rax
   1cefe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1cf02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cf06:	48 89 c7             	mov    %rax,%rdi
   1cf09:	e8 2c 9b ff ff       	call   16a3a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1cf0e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1cf12:	72 12                	jb     1cf26 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1cf14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cf18:	48 89 c7             	mov    %rax,%rdi
   1cf1b:	e8 0a ff ff ff       	call   1ce2a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1cf20:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1cf24:	73 0e                	jae    1cf34 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1cf26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cf2a:	48 89 c7             	mov    %rax,%rdi
   1cf2d:	e8 f8 fe ff ff       	call   1ce2a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1cf32:	eb 04                	jmp    1cf38 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1cf34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1cf38:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1cf3c:	c9                   	leave
   1cf3d:	c3                   	ret

000000000001cf3e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1cf3e:	55                   	push   %rbp
   1cf3f:	48 89 e5             	mov    %rsp,%rbp
   1cf42:	48 83 ec 10          	sub    $0x10,%rsp
   1cf46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cf4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1cf4e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1cf53:	74 15                	je     1cf6a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   1cf55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1cf5d:	48 89 d6             	mov    %rdx,%rsi
   1cf60:	48 89 c7             	mov    %rax,%rdi
   1cf63:	e8 b1 1f 00 00       	call   1ef19 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   1cf68:	eb 05                	jmp    1cf6f <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   1cf6a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1cf6f:	c9                   	leave
   1cf70:	c3                   	ret

000000000001cf71 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1cf71:	55                   	push   %rbp
   1cf72:	48 89 e5             	mov    %rsp,%rbp
   1cf75:	48 83 ec 20          	sub    $0x20,%rsp
   1cf79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cf7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1cf81:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1cf85:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1cf89:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1cf8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1cf91:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1cf95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf99:	48 89 c7             	mov    %rax,%rdi
   1cf9c:	e8 a2 1f 00 00       	call   1ef43 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1cfa1:	c9                   	leave
   1cfa2:	c3                   	ret

000000000001cfa3 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   1cfa3:	55                   	push   %rbp
   1cfa4:	48 89 e5             	mov    %rsp,%rbp
   1cfa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cfab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   1cfaf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cfb3:	48 c1 e0 04          	shl    $0x4,%rax
   1cfb7:	48 89 c2             	mov    %rax,%rdx
   1cfba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfbe:	48 01 d0             	add    %rdx,%rax
   1cfc1:	5d                   	pop    %rbp
   1cfc2:	c3                   	ret
   1cfc3:	90                   	nop

000000000001cfc4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1cfc4:	55                   	push   %rbp
   1cfc5:	48 89 e5             	mov    %rsp,%rbp
   1cfc8:	48 83 ec 10          	sub    $0x10,%rsp
   1cfcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cfd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1cfd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1cfd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfdc:	48 89 d6             	mov    %rdx,%rsi
   1cfdf:	48 89 c7             	mov    %rax,%rdi
   1cfe2:	e8 bf 1f 00 00       	call   1efa6 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   1cfe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfeb:	48 89 c7             	mov    %rax,%rdi
   1cfee:	e8 d9 1f 00 00       	call   1efcc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   1cff3:	90                   	nop
   1cff4:	c9                   	leave
   1cff5:	c3                   	ret

000000000001cff6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   1cff6:	55                   	push   %rbp
   1cff7:	48 89 e5             	mov    %rsp,%rbp
   1cffa:	48 83 ec 20          	sub    $0x20,%rsp
   1cffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1d00a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1d00f:	74 17                	je     1d028 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1d011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d015:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d019:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d01d:	48 89 ce             	mov    %rcx,%rsi
   1d020:	48 89 c7             	mov    %rax,%rdi
   1d023:	e8 d2 1f 00 00       	call   1effa <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   1d028:	90                   	nop
   1d029:	c9                   	leave
   1d02a:	c3                   	ret
   1d02b:	90                   	nop

000000000001d02c <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   1d02c:	55                   	push   %rbp
   1d02d:	48 89 e5             	mov    %rsp,%rbp
   1d030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d038:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d03c:	5d                   	pop    %rbp
   1d03d:	c3                   	ret

000000000001d03e <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1d03e:	55                   	push   %rbp
   1d03f:	48 89 e5             	mov    %rsp,%rbp
   1d042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1d046:	90                   	nop
   1d047:	5d                   	pop    %rbp
   1d048:	c3                   	ret

000000000001d049 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1d049:	55                   	push   %rbp
   1d04a:	48 89 e5             	mov    %rsp,%rbp
   1d04d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d051:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1d055:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d059:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1d05d:	48 c1 f8 04          	sar    $0x4,%rax
   1d061:	48 89 c2             	mov    %rax,%rdx
   1d064:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1d06b:	e3 38 8e 
   1d06e:	48 0f af c2          	imul   %rdx,%rax
    }
   1d072:	5d                   	pop    %rbp
   1d073:	c3                   	ret

000000000001d074 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1d074:	55                   	push   %rbp
   1d075:	48 89 e5             	mov    %rsp,%rbp
   1d078:	53                   	push   %rbx
   1d079:	48 83 ec 28          	sub    $0x28,%rsp
   1d07d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d081:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1d085:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d089:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d08d:	48 89 d6             	mov    %rdx,%rsi
   1d090:	48 89 c7             	mov    %rax,%rdi
   1d093:	e8 0e 1f 00 00       	call   1efa6 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   1d098:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d09c:	48 89 c7             	mov    %rax,%rdi
   1d09f:	e8 84 1f 00 00       	call   1f028 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   1d0a4:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1d0a8:	0f 92 c3             	setb   %bl
   1d0ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d0af:	48 89 c7             	mov    %rax,%rdi
   1d0b2:	e8 ef 96 ff ff       	call   167a6 <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   1d0b7:	84 db                	test   %bl,%bl
   1d0b9:	74 0f                	je     1d0ca <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   1d0bb:	48 8d 05 8e 99 00 00 	lea    0x998e(%rip),%rax        # 26a50 <_ZZN9VulkanApp6renderEvE11submitCount+0x734>
   1d0c2:	48 89 c7             	mov    %rax,%rdi
   1d0c5:	e8 86 81 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1d0ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1d0ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d0d2:	c9                   	leave
   1d0d3:	c3                   	ret

000000000001d0d4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1d0d4:	55                   	push   %rbp
   1d0d5:	48 89 e5             	mov    %rsp,%rbp
   1d0d8:	48 83 ec 10          	sub    $0x10,%rsp
   1d0dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d0e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1d0e4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1d0e9:	74 15                	je     1d100 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   1d0eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d0ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d0f3:	48 89 d6             	mov    %rdx,%rsi
   1d0f6:	48 89 c7             	mov    %rax,%rdi
   1d0f9:	e8 6c 1f 00 00       	call   1f06a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   1d0fe:	eb 05                	jmp    1d105 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   1d100:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1d105:	c9                   	leave
   1d106:	c3                   	ret

000000000001d107 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1d107:	55                   	push   %rbp
   1d108:	48 89 e5             	mov    %rsp,%rbp
   1d10b:	48 83 ec 20          	sub    $0x20,%rsp
   1d10f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d113:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d117:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d11b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1d11f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d123:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d12b:	48 89 ce             	mov    %rcx,%rsi
   1d12e:	48 89 c7             	mov    %rax,%rdi
   1d131:	e8 5e 1f 00 00       	call   1f094 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   1d136:	c9                   	leave
   1d137:	c3                   	ret

000000000001d138 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1d138:	55                   	push   %rbp
   1d139:	48 89 e5             	mov    %rsp,%rbp
   1d13c:	48 83 ec 10          	sub    $0x10,%rsp
   1d140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d144:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1d148:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d14c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d150:	48 89 d6             	mov    %rdx,%rsi
   1d153:	48 89 c7             	mov    %rax,%rdi
   1d156:	e8 6e 1f 00 00       	call   1f0c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   1d15b:	90                   	nop
   1d15c:	c9                   	leave
   1d15d:	c3                   	ret

000000000001d15e <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   1d15e:	55                   	push   %rbp
   1d15f:	48 89 e5             	mov    %rsp,%rbp
   1d162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d166:	90                   	nop
   1d167:	5d                   	pop    %rbp
   1d168:	c3                   	ret
   1d169:	90                   	nop

000000000001d16a <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1d16a:	55                   	push   %rbp
   1d16b:	48 89 e5             	mov    %rsp,%rbp
   1d16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d172:	90                   	nop
   1d173:	5d                   	pop    %rbp
   1d174:	c3                   	ret

000000000001d175 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1d175:	55                   	push   %rbp
   1d176:	48 89 e5             	mov    %rsp,%rbp
   1d179:	53                   	push   %rbx
   1d17a:	48 83 ec 28          	sub    $0x28,%rsp
   1d17e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d182:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1d186:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d18a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d18e:	48 89 d6             	mov    %rdx,%rsi
   1d191:	48 89 c7             	mov    %rax,%rdi
   1d194:	e8 ff 00 00 00       	call   1d298 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   1d199:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d19d:	48 89 c7             	mov    %rax,%rdi
   1d1a0:	e8 33 1f 00 00       	call   1f0d8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   1d1a5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1d1a9:	0f 92 c3             	setb   %bl
   1d1ac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d1b0:	48 89 c7             	mov    %rax,%rdi
   1d1b3:	e8 da c8 ff ff       	call   19a92 <_ZNSaIP12VkPipeline_TED1Ev>
   1d1b8:	84 db                	test   %bl,%bl
   1d1ba:	74 0f                	je     1d1cb <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1d1bc:	48 8d 05 8d 98 00 00 	lea    0x988d(%rip),%rax        # 26a50 <_ZZN9VulkanApp6renderEvE11submitCount+0x734>
   1d1c3:	48 89 c7             	mov    %rax,%rdi
   1d1c6:	e8 85 80 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1d1cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1d1cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d1d3:	c9                   	leave
   1d1d4:	c3                   	ret
   1d1d5:	90                   	nop

000000000001d1d6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1d1d6:	55                   	push   %rbp
   1d1d7:	48 89 e5             	mov    %rsp,%rbp
   1d1da:	53                   	push   %rbx
   1d1db:	48 83 ec 28          	sub    $0x28,%rsp
   1d1df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d1e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1d1e7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   1d1eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d1ef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1d1f3:	48 89 d6             	mov    %rdx,%rsi
   1d1f6:	48 89 c7             	mov    %rax,%rdi
   1d1f9:	e8 1c 1f 00 00       	call   1f11a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   1d1fe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1d202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d206:	48 89 d6             	mov    %rdx,%rsi
   1d209:	48 89 c7             	mov    %rax,%rdi
   1d20c:	e8 3b 1f 00 00       	call   1f14c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   1d211:	eb 1a                	jmp    1d22d <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   1d213:	48 89 c3             	mov    %rax,%rbx
   1d216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d21a:	48 89 c7             	mov    %rax,%rdi
   1d21d:	e8 6c 96 ff ff       	call   1688e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1d222:	48 89 d8             	mov    %rbx,%rax
   1d225:	48 89 c7             	mov    %rax,%rdi
   1d228:	e8 d3 87 fe ff       	call   5a00 <_Unwind_Resume@plt>
   1d22d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d231:	c9                   	leave
   1d232:	c3                   	ret
   1d233:	90                   	nop

000000000001d234 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   1d234:	55                   	push   %rbp
   1d235:	48 89 e5             	mov    %rsp,%rbp
   1d238:	48 83 ec 10          	sub    $0x10,%rsp
   1d23c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d240:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   1d244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d248:	48 89 c7             	mov    %rax,%rdi
   1d24b:	e8 6a c9 ff ff       	call   19bba <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1d250:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   1d253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d257:	48 8b 00             	mov    (%rax),%rax
   1d25a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d25e:	48 89 ce             	mov    %rcx,%rsi
   1d261:	48 89 c7             	mov    %rax,%rdi
   1d264:	e8 39 1f 00 00       	call   1f1a2 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   1d269:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1d26d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1d271:	90                   	nop
   1d272:	c9                   	leave
   1d273:	c3                   	ret

000000000001d274 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1d274:	55                   	push   %rbp
   1d275:	48 89 e5             	mov    %rsp,%rbp
   1d278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d27c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1d280:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d284:	5d                   	pop    %rbp
   1d285:	c3                   	ret

000000000001d286 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1d286:	55                   	push   %rbp
   1d287:	48 89 e5             	mov    %rsp,%rbp
   1d28a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d28e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1d292:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d296:	5d                   	pop    %rbp
   1d297:	c3                   	ret

000000000001d298 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1d298:	55                   	push   %rbp
   1d299:	48 89 e5             	mov    %rsp,%rbp
   1d29c:	48 83 ec 10          	sub    $0x10,%rsp
   1d2a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d2a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1d2a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d2ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d2b0:	48 89 d6             	mov    %rdx,%rsi
   1d2b3:	48 89 c7             	mov    %rax,%rdi
   1d2b6:	e8 11 1f 00 00       	call   1f1cc <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   1d2bb:	90                   	nop
   1d2bc:	c9                   	leave
   1d2bd:	c3                   	ret

000000000001d2be <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1d2be:	55                   	push   %rbp
   1d2bf:	48 89 e5             	mov    %rsp,%rbp
   1d2c2:	48 83 ec 20          	sub    $0x20,%rsp
   1d2c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d2ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d2ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1d2d2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1d2d7:	74 17                	je     1d2f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1d2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d2dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d2e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d2e5:	48 89 ce             	mov    %rcx,%rsi
   1d2e8:	48 89 c7             	mov    %rax,%rdi
   1d2eb:	e8 eb 1e 00 00       	call   1f1db <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   1d2f0:	90                   	nop
   1d2f1:	c9                   	leave
   1d2f2:	c3                   	ret

000000000001d2f3 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1d2f3:	55                   	push   %rbp
   1d2f4:	48 89 e5             	mov    %rsp,%rbp
   1d2f7:	48 83 ec 10          	sub    $0x10,%rsp
   1d2fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d2ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1d303:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d30b:	48 89 d6             	mov    %rdx,%rsi
   1d30e:	48 89 c7             	mov    %rax,%rdi
   1d311:	e8 f3 1e 00 00       	call   1f209 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   1d316:	90                   	nop
   1d317:	c9                   	leave
   1d318:	c3                   	ret
   1d319:	90                   	nop

000000000001d31a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1d31a:	55                   	push   %rbp
   1d31b:	48 89 e5             	mov    %rsp,%rbp
   1d31e:	48 83 ec 10          	sub    $0x10,%rsp
   1d322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1d326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d32a:	48 89 c7             	mov    %rax,%rdi
   1d32d:	e8 28 1f 00 00       	call   1f25a <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1d332:	48 89 c7             	mov    %rax,%rdi
   1d335:	e8 de 1e 00 00       	call   1f218 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   1d33a:	c9                   	leave
   1d33b:	c3                   	ret

000000000001d33c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1d33c:	55                   	push   %rbp
   1d33d:	48 89 e5             	mov    %rsp,%rbp
   1d340:	48 83 ec 20          	sub    $0x20,%rsp
   1d344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d34c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1d350:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d358:	48 89 d6             	mov    %rdx,%rsi
   1d35b:	48 89 c7             	mov    %rax,%rdi
   1d35e:	e8 05 1f 00 00       	call   1f268 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   1d363:	c9                   	leave
   1d364:	c3                   	ret
   1d365:	90                   	nop

000000000001d366 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1d366:	55                   	push   %rbp
   1d367:	48 89 e5             	mov    %rsp,%rbp
   1d36a:	53                   	push   %rbx
   1d36b:	48 83 ec 38          	sub    $0x38,%rsp
   1d36f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d373:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d377:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1d37b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d37f:	48 89 c7             	mov    %rax,%rdi
   1d382:	e8 93 ff ff ff       	call   1d31a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1d387:	48 89 c3             	mov    %rax,%rbx
   1d38a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d38e:	48 89 c7             	mov    %rax,%rdi
   1d391:	e8 5c c8 ff ff       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1d396:	48 29 c3             	sub    %rax,%rbx
   1d399:	48 89 da             	mov    %rbx,%rdx
   1d39c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d3a0:	48 39 c2             	cmp    %rax,%rdx
   1d3a3:	0f 92 c0             	setb   %al
   1d3a6:	84 c0                	test   %al,%al
   1d3a8:	74 0c                	je     1d3b6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1d3aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d3ae:	48 89 c7             	mov    %rax,%rdi
   1d3b1:	e8 9a 7e fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1d3b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d3ba:	48 89 c7             	mov    %rax,%rdi
   1d3bd:	e8 30 c8 ff ff       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1d3c2:	48 89 c3             	mov    %rax,%rbx
   1d3c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d3c9:	48 89 c7             	mov    %rax,%rdi
   1d3cc:	e8 21 c8 ff ff       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1d3d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1d3d5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1d3d9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1d3dd:	48 89 d6             	mov    %rdx,%rsi
   1d3e0:	48 89 c7             	mov    %rax,%rdi
   1d3e3:	e8 54 13 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1d3e8:	48 8b 00             	mov    (%rax),%rax
   1d3eb:	48 01 d8             	add    %rbx,%rax
   1d3ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1d3f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d3f6:	48 89 c7             	mov    %rax,%rdi
   1d3f9:	e8 f4 c7 ff ff       	call   19bf2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1d3fe:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d402:	72 12                	jb     1d416 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1d404:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d408:	48 89 c7             	mov    %rax,%rdi
   1d40b:	e8 0a ff ff ff       	call   1d31a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1d410:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1d414:	73 0e                	jae    1d424 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1d416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d41a:	48 89 c7             	mov    %rax,%rdi
   1d41d:	e8 f8 fe ff ff       	call   1d31a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1d422:	eb 04                	jmp    1d428 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1d424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1d428:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d42c:	c9                   	leave
   1d42d:	c3                   	ret

000000000001d42e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1d42e:	55                   	push   %rbp
   1d42f:	48 89 e5             	mov    %rsp,%rbp
   1d432:	48 83 ec 10          	sub    $0x10,%rsp
   1d436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d43a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1d43e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1d443:	74 15                	je     1d45a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   1d445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d449:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d44d:	48 89 d6             	mov    %rdx,%rsi
   1d450:	48 89 c7             	mov    %rax,%rdi
   1d453:	e8 39 1e 00 00       	call   1f291 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   1d458:	eb 05                	jmp    1d45f <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   1d45a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1d45f:	c9                   	leave
   1d460:	c3                   	ret

000000000001d461 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1d461:	55                   	push   %rbp
   1d462:	48 89 e5             	mov    %rsp,%rbp
   1d465:	48 83 ec 20          	sub    $0x20,%rsp
   1d469:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d46d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d471:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d475:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1d479:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1d47d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d481:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1d485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d489:	48 89 c7             	mov    %rax,%rdi
   1d48c:	e8 2a 1e 00 00       	call   1f2bb <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1d491:	c9                   	leave
   1d492:	c3                   	ret
   1d493:	90                   	nop

000000000001d494 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1d494:	55                   	push   %rbp
   1d495:	48 89 e5             	mov    %rsp,%rbp
   1d498:	48 83 ec 10          	sub    $0x10,%rsp
   1d49c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d4a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1d4a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d4a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4ac:	48 89 d6             	mov    %rdx,%rsi
   1d4af:	48 89 c7             	mov    %rax,%rdi
   1d4b2:	e8 67 1e 00 00       	call   1f31e <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1d4b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4bb:	48 89 c7             	mov    %rax,%rdi
   1d4be:	e8 45 e8 ff ff       	call   1bd08 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1d4c3:	90                   	nop
   1d4c4:	c9                   	leave
   1d4c5:	c3                   	ret

000000000001d4c6 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   1d4c6:	55                   	push   %rbp
   1d4c7:	48 89 e5             	mov    %rsp,%rbp
   1d4ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d4ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4d2:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d4d6:	5d                   	pop    %rbp
   1d4d7:	c3                   	ret

000000000001d4d8 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1d4d8:	55                   	push   %rbp
   1d4d9:	48 89 e5             	mov    %rsp,%rbp
   1d4dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1d4e0:	90                   	nop
   1d4e1:	5d                   	pop    %rbp
   1d4e2:	c3                   	ret

000000000001d4e3 <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1d4e3:	55                   	push   %rbp
   1d4e4:	48 89 e5             	mov    %rsp,%rbp
   1d4e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d4eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1d4ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d4f3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1d4f7:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1d4fb:	5d                   	pop    %rbp
   1d4fc:	c3                   	ret

000000000001d4fd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1d4fd:	55                   	push   %rbp
   1d4fe:	48 89 e5             	mov    %rsp,%rbp
   1d501:	53                   	push   %rbx
   1d502:	48 83 ec 28          	sub    $0x28,%rsp
   1d506:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d50a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1d50e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d512:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d516:	48 89 d6             	mov    %rdx,%rsi
   1d519:	48 89 c7             	mov    %rax,%rdi
   1d51c:	e8 fd 1d 00 00       	call   1f31e <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1d521:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d525:	48 89 c7             	mov    %rax,%rdi
   1d528:	e8 72 19 00 00       	call   1ee9f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1d52d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1d531:	0f 92 c3             	setb   %bl
   1d534:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1d538:	48 89 c7             	mov    %rax,%rdi
   1d53b:	e8 c0 95 ff ff       	call   16b00 <_ZNSaIP13VkImageView_TED1Ev>
   1d540:	84 db                	test   %bl,%bl
   1d542:	74 0f                	je     1d553 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1d544:	48 8d 05 05 95 00 00 	lea    0x9505(%rip),%rax        # 26a50 <_ZZN9VulkanApp6renderEvE11submitCount+0x734>
   1d54b:	48 89 c7             	mov    %rax,%rdi
   1d54e:	e8 fd 7c fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1d553:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1d557:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d55b:	c9                   	leave
   1d55c:	c3                   	ret

000000000001d55d <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1d55d:	55                   	push   %rbp
   1d55e:	48 89 e5             	mov    %rsp,%rbp
   1d561:	48 83 ec 20          	sub    $0x20,%rsp
   1d565:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d569:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d56d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d571:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1d575:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d579:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d57d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d581:	48 89 ce             	mov    %rcx,%rsi
   1d584:	48 89 c7             	mov    %rax,%rdi
   1d587:	e8 b8 1d 00 00       	call   1f344 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   1d58c:	c9                   	leave
   1d58d:	c3                   	ret

000000000001d58e <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1d58e:	55                   	push   %rbp
   1d58f:	48 89 e5             	mov    %rsp,%rbp
   1d592:	48 83 ec 10          	sub    $0x10,%rsp
   1d596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d59a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1d59e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d5a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d5a6:	48 89 d6             	mov    %rdx,%rsi
   1d5a9:	48 89 c7             	mov    %rax,%rdi
   1d5ac:	e8 c8 1d 00 00       	call   1f379 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   1d5b1:	90                   	nop
   1d5b2:	c9                   	leave
   1d5b3:	c3                   	ret

000000000001d5b4 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   1d5b4:	55                   	push   %rbp
   1d5b5:	48 89 e5             	mov    %rsp,%rbp
   1d5b8:	48 83 ec 10          	sub    $0x10,%rsp
   1d5bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d5c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   1d5c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d5c8:	48 89 c7             	mov    %rax,%rdi
   1d5cb:	e8 b8 1d 00 00       	call   1f388 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1d5d0:	48 89 c2             	mov    %rax,%rdx
   1d5d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d5d7:	48 89 d6             	mov    %rdx,%rsi
   1d5da:	48 89 c7             	mov    %rax,%rdi
   1d5dd:	e8 86 a5 fe ff       	call   7b68 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   1d5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d5e6:	c9                   	leave
   1d5e7:	c3                   	ret

000000000001d5e8 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1d5e8:	55                   	push   %rbp
   1d5e9:	48 89 e5             	mov    %rsp,%rbp
   1d5ec:	48 83 ec 10          	sub    $0x10,%rsp
   1d5f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d5f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   1d5f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d5fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d600:	48 89 d6             	mov    %rdx,%rsi
   1d603:	48 89 c7             	mov    %rax,%rdi
   1d606:	e8 8b 1d 00 00       	call   1f396 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>
   1d60b:	90                   	nop
   1d60c:	c9                   	leave
   1d60d:	c3                   	ret

000000000001d60e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   1d60e:	55                   	push   %rbp
   1d60f:	48 89 e5             	mov    %rsp,%rbp
   1d612:	48 83 ec 30          	sub    $0x30,%rsp
   1d616:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d61a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   1d61e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1d622:	48 89 c7             	mov    %rax,%rdi
   1d625:	e8 0c a7 fe ff       	call   7d36 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   1d62a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1d62e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1d632:	48 89 d6             	mov    %rdx,%rsi
   1d635:	48 89 c7             	mov    %rax,%rdi
   1d638:	e8 7f 1d 00 00       	call   1f3bc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   1d63d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d641:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d645:	48 89 d6             	mov    %rdx,%rsi
   1d648:	48 89 c7             	mov    %rax,%rdi
   1d64b:	e8 6c 1d 00 00       	call   1f3bc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   1d650:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1d654:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d658:	48 89 d6             	mov    %rdx,%rsi
   1d65b:	48 89 c7             	mov    %rax,%rdi
   1d65e:	e8 59 1d 00 00       	call   1f3bc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   1d663:	90                   	nop
   1d664:	c9                   	leave
   1d665:	c3                   	ret

000000000001d666 <_ZSt15__alloc_on_moveISaIP17VkCommandBuffer_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   1d666:	55                   	push   %rbp
   1d667:	48 89 e5             	mov    %rsp,%rbp
   1d66a:	48 83 ec 10          	sub    $0x10,%rsp
   1d66e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   1d676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d67a:	48 89 c7             	mov    %rax,%rdi
   1d67d:	e8 77 1d 00 00       	call   1f3f9 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   1d682:	90                   	nop
   1d683:	c9                   	leave
   1d684:	c3                   	ret
   1d685:	90                   	nop

000000000001d686 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1d686:	55                   	push   %rbp
   1d687:	48 89 e5             	mov    %rsp,%rbp
   1d68a:	48 83 ec 10          	sub    $0x10,%rsp
   1d68e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1d692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d696:	48 89 c7             	mov    %rax,%rdi
   1d699:	e8 ac 1d 00 00       	call   1f44a <_ZNKSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1d69e:	48 89 c7             	mov    %rax,%rdi
   1d6a1:	e8 61 1d 00 00       	call   1f407 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   1d6a6:	c9                   	leave
   1d6a7:	c3                   	ret

000000000001d6a8 <_ZSt27__uninitialized_default_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1d6a8:	55                   	push   %rbp
   1d6a9:	48 89 e5             	mov    %rsp,%rbp
   1d6ac:	48 83 ec 20          	sub    $0x20,%rsp
   1d6b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d6b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d6b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1d6bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d6c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d6c4:	48 89 d6             	mov    %rdx,%rsi
   1d6c7:	48 89 c7             	mov    %rax,%rdi
   1d6ca:	e8 89 1d 00 00       	call   1f458 <_ZSt25__uninitialized_default_nIPP10VkBuffer_TmET_S3_T0_>
   1d6cf:	c9                   	leave
   1d6d0:	c3                   	ret
   1d6d1:	90                   	nop

000000000001d6d2 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1d6d2:	55                   	push   %rbp
   1d6d3:	48 89 e5             	mov    %rsp,%rbp
   1d6d6:	53                   	push   %rbx
   1d6d7:	48 83 ec 38          	sub    $0x38,%rsp
   1d6db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d6df:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d6e3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1d6e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d6eb:	48 89 c7             	mov    %rax,%rdi
   1d6ee:	e8 93 ff ff ff       	call   1d686 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE8max_sizeEv>
   1d6f3:	48 89 c3             	mov    %rax,%rbx
   1d6f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d6fa:	48 89 c7             	mov    %rax,%rdi
   1d6fd:	e8 6c ca ff ff       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   1d702:	48 29 c3             	sub    %rax,%rbx
   1d705:	48 89 da             	mov    %rbx,%rdx
   1d708:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d70c:	48 39 c2             	cmp    %rax,%rdx
   1d70f:	0f 92 c0             	setb   %al
   1d712:	84 c0                	test   %al,%al
   1d714:	74 0c                	je     1d722 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1d716:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d71a:	48 89 c7             	mov    %rax,%rdi
   1d71d:	e8 2e 7b fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1d722:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d726:	48 89 c7             	mov    %rax,%rdi
   1d729:	e8 40 ca ff ff       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   1d72e:	48 89 c3             	mov    %rax,%rbx
   1d731:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d735:	48 89 c7             	mov    %rax,%rdi
   1d738:	e8 31 ca ff ff       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   1d73d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1d741:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1d745:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1d749:	48 89 d6             	mov    %rdx,%rsi
   1d74c:	48 89 c7             	mov    %rax,%rdi
   1d74f:	e8 e8 0f 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1d754:	48 8b 00             	mov    (%rax),%rax
   1d757:	48 01 d8             	add    %rbx,%rax
   1d75a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1d75e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d762:	48 89 c7             	mov    %rax,%rdi
   1d765:	e8 04 ca ff ff       	call   1a16e <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE4sizeEv>
   1d76a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d76e:	72 12                	jb     1d782 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1d770:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d774:	48 89 c7             	mov    %rax,%rdi
   1d777:	e8 0a ff ff ff       	call   1d686 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE8max_sizeEv>
   1d77c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1d780:	73 0e                	jae    1d790 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1d782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d786:	48 89 c7             	mov    %rax,%rdi
   1d789:	e8 f8 fe ff ff       	call   1d686 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE8max_sizeEv>
   1d78e:	eb 04                	jmp    1d794 <_ZNKSt6vectorIP10VkBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1d790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1d794:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d798:	c9                   	leave
   1d799:	c3                   	ret

000000000001d79a <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1d79a:	55                   	push   %rbp
   1d79b:	48 89 e5             	mov    %rsp,%rbp
   1d79e:	48 83 ec 10          	sub    $0x10,%rsp
   1d7a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d7a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1d7aa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1d7af:	74 15                	je     1d7c6 <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   1d7b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d7b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d7b9:	48 89 d6             	mov    %rdx,%rsi
   1d7bc:	48 89 c7             	mov    %rax,%rdi
   1d7bf:	e8 bd 1c 00 00       	call   1f481 <_ZNSt16allocator_traitsISaIP10VkBuffer_TEE8allocateERS2_m>
   1d7c4:	eb 05                	jmp    1d7cb <_ZNSt12_Vector_baseIP10VkBuffer_TSaIS1_EE11_M_allocateEm+0x31>
   1d7c6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1d7cb:	c9                   	leave
   1d7cc:	c3                   	ret

000000000001d7cd <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1d7cd:	55                   	push   %rbp
   1d7ce:	48 89 e5             	mov    %rsp,%rbp
   1d7d1:	48 83 ec 20          	sub    $0x20,%rsp
   1d7d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d7d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d7dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d7e1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1d7e5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1d7e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d7ed:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1d7f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d7f5:	48 89 c7             	mov    %rax,%rdi
   1d7f8:	e8 ae 1c 00 00       	call   1f4ab <_ZSt12__relocate_aIPP10VkBuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1d7fd:	c9                   	leave
   1d7fe:	c3                   	ret
   1d7ff:	90                   	nop

000000000001d800 <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1d800:	55                   	push   %rbp
   1d801:	48 89 e5             	mov    %rsp,%rbp
   1d804:	48 83 ec 10          	sub    $0x10,%rsp
   1d808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1d80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d810:	48 89 c7             	mov    %rax,%rdi
   1d813:	e8 38 1d 00 00       	call   1f550 <_ZNKSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1d818:	48 89 c7             	mov    %rax,%rdi
   1d81b:	e8 ee 1c 00 00       	call   1f50e <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE11_S_max_sizeERKS2_>
   1d820:	c9                   	leave
   1d821:	c3                   	ret

000000000001d822 <_ZSt27__uninitialized_default_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1d822:	55                   	push   %rbp
   1d823:	48 89 e5             	mov    %rsp,%rbp
   1d826:	48 83 ec 20          	sub    $0x20,%rsp
   1d82a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d82e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d832:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1d836:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d83a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d83e:	48 89 d6             	mov    %rdx,%rsi
   1d841:	48 89 c7             	mov    %rax,%rdi
   1d844:	e8 15 1d 00 00       	call   1f55e <_ZSt25__uninitialized_default_nIPP16VkDeviceMemory_TmET_S3_T0_>
   1d849:	c9                   	leave
   1d84a:	c3                   	ret
   1d84b:	90                   	nop

000000000001d84c <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1d84c:	55                   	push   %rbp
   1d84d:	48 89 e5             	mov    %rsp,%rbp
   1d850:	53                   	push   %rbx
   1d851:	48 83 ec 38          	sub    $0x38,%rsp
   1d855:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d859:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d85d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1d861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d865:	48 89 c7             	mov    %rax,%rdi
   1d868:	e8 93 ff ff ff       	call   1d800 <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE8max_sizeEv>
   1d86d:	48 89 c3             	mov    %rax,%rbx
   1d870:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d874:	48 89 c7             	mov    %rax,%rdi
   1d877:	e8 80 cb ff ff       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   1d87c:	48 29 c3             	sub    %rax,%rbx
   1d87f:	48 89 da             	mov    %rbx,%rdx
   1d882:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d886:	48 39 c2             	cmp    %rax,%rdx
   1d889:	0f 92 c0             	setb   %al
   1d88c:	84 c0                	test   %al,%al
   1d88e:	74 0c                	je     1d89c <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1d890:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d894:	48 89 c7             	mov    %rax,%rdi
   1d897:	e8 b4 79 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1d89c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8a0:	48 89 c7             	mov    %rax,%rdi
   1d8a3:	e8 54 cb ff ff       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   1d8a8:	48 89 c3             	mov    %rax,%rbx
   1d8ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8af:	48 89 c7             	mov    %rax,%rdi
   1d8b2:	e8 45 cb ff ff       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   1d8b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1d8bb:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1d8bf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1d8c3:	48 89 d6             	mov    %rdx,%rsi
   1d8c6:	48 89 c7             	mov    %rax,%rdi
   1d8c9:	e8 6e 0e 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1d8ce:	48 8b 00             	mov    (%rax),%rax
   1d8d1:	48 01 d8             	add    %rbx,%rax
   1d8d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1d8d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8dc:	48 89 c7             	mov    %rax,%rdi
   1d8df:	e8 18 cb ff ff       	call   1a3fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE4sizeEv>
   1d8e4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1d8e8:	72 12                	jb     1d8fc <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1d8ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d8ee:	48 89 c7             	mov    %rax,%rdi
   1d8f1:	e8 0a ff ff ff       	call   1d800 <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE8max_sizeEv>
   1d8f6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1d8fa:	73 0e                	jae    1d90a <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1d8fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d900:	48 89 c7             	mov    %rax,%rdi
   1d903:	e8 f8 fe ff ff       	call   1d800 <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE8max_sizeEv>
   1d908:	eb 04                	jmp    1d90e <_ZNKSt6vectorIP16VkDeviceMemory_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1d90a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1d90e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d912:	c9                   	leave
   1d913:	c3                   	ret

000000000001d914 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1d914:	55                   	push   %rbp
   1d915:	48 89 e5             	mov    %rsp,%rbp
   1d918:	48 83 ec 10          	sub    $0x10,%rsp
   1d91c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d920:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1d924:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1d929:	74 15                	je     1d940 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE11_M_allocateEm+0x2c>
   1d92b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d92f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d933:	48 89 d6             	mov    %rdx,%rsi
   1d936:	48 89 c7             	mov    %rax,%rdi
   1d939:	e8 49 1c 00 00       	call   1f587 <_ZNSt16allocator_traitsISaIP16VkDeviceMemory_TEE8allocateERS2_m>
   1d93e:	eb 05                	jmp    1d945 <_ZNSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE11_M_allocateEm+0x31>
   1d940:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1d945:	c9                   	leave
   1d946:	c3                   	ret

000000000001d947 <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1d947:	55                   	push   %rbp
   1d948:	48 89 e5             	mov    %rsp,%rbp
   1d94b:	48 83 ec 20          	sub    $0x20,%rsp
   1d94f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d953:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d957:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1d95b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1d95f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1d963:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d967:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1d96b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d96f:	48 89 c7             	mov    %rax,%rdi
   1d972:	e8 3a 1c 00 00       	call   1f5b1 <_ZSt12__relocate_aIPP16VkDeviceMemory_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1d977:	c9                   	leave
   1d978:	c3                   	ret

000000000001d979 <_ZNSt6chrono20__duration_cast_implINS_8durationIfSt5ratioILl1ELl1EEEES2_ILl1ELl1000000000EEfLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   1d979:	55                   	push   %rbp
   1d97a:	48 89 e5             	mov    %rsp,%rbp
   1d97d:	48 83 ec 20          	sub    $0x20,%rsp
   1d981:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1d985:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d989:	48 89 c7             	mov    %rax,%rdi
   1d98c:	e8 37 7b ff ff       	call   154c8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1d991:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1d995:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
   1d99a:	f3 0f 10 0d 86 91 00 	movss  0x9186(%rip),%xmm1        # 26b28 <_ZZN9VulkanApp6renderEvE11submitCount+0x80c>
   1d9a1:	00 
   1d9a2:	f3 0f 5e c1          	divss  %xmm1,%xmm0
	    return _ToDur(static_cast<__to_rep>(
   1d9a6:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   1d9ab:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx
   1d9af:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1d9b3:	48 89 d6             	mov    %rdx,%rsi
   1d9b6:	48 89 c7             	mov    %rax,%rdi
   1d9b9:	e8 56 1c 00 00       	call   1f614 <_ZNSt6chrono8durationIfSt5ratioILl1ELl1EEEC1IfvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1d9be:	f3 0f 10 45 f8       	movss  -0x8(%rbp),%xmm0
	  }
   1d9c3:	c9                   	leave
   1d9c4:	c3                   	ret

000000000001d9c5 <_ZN3glm6detail17compute_normalizeILi3EfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi3EfLS2_0EEE>:
		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)
   1d9c5:	55                   	push   %rbp
   1d9c6:	48 89 e5             	mov    %rsp,%rbp
   1d9c9:	48 83 ec 30          	sub    $0x30,%rsp
   1d9cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
			return v * inversesqrt(dot(v, v));
   1d9d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d9d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d9d9:	48 89 d6             	mov    %rdx,%rsi
   1d9dc:	48 89 c7             	mov    %rax,%rdi
   1d9df:	e8 6c 01 00 00       	call   1db50 <_ZN3glm3dotILi3EfLNS_9qualifierE0EEET0_RKNS_3vecIXT_ES2_XT1_EEES6_>
   1d9e4:	66 0f 7e c0          	movd   %xmm0,%eax
   1d9e8:	66 0f 6e c0          	movd   %eax,%xmm0
   1d9ec:	e8 42 1c 00 00       	call   1f633 <_ZN3glm11inversesqrtIfEET_S1_>
   1d9f1:	66 0f 7e c0          	movd   %xmm0,%eax
   1d9f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d9f9:	66 0f 6e c0          	movd   %eax,%xmm0
   1d9fd:	48 89 d7             	mov    %rdx,%rdi
   1da00:	e8 58 1c 00 00       	call   1f65d <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S3_>
   1da05:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1da0a:	0f 28 c1             	movaps %xmm1,%xmm0
   1da0d:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   1da11:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   1da16:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1da1a:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1da1f:	0f 28 c8             	movaps %xmm0,%xmm1
		}
   1da22:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1da27:	c9                   	leave
   1da28:	c3                   	ret
   1da29:	90                   	nop

000000000001da2a <_ZN3glm3vecILi4EfLNS_9qualifierE0EEpLIfEERS2_RKNS0_ILi4ET_LS1_0EEE>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(vec<4, U, Q> const& v)
   1da2a:	55                   	push   %rbp
   1da2b:	48 89 e5             	mov    %rsp,%rbp
   1da2e:	48 83 ec 20          	sub    $0x20,%rsp
   1da32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1da36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		return (*this = detail::compute_vec4_add<T, Q, detail::is_aligned<Q>::value>::call(*this, vec<4, T, Q>(v)));
   1da3a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1da3e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1da42:	48 8b 00             	mov    (%rax),%rax
   1da45:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1da49:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
   1da4d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1da51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1da55:	48 89 d6             	mov    %rdx,%rsi
   1da58:	48 89 c7             	mov    %rax,%rdi
   1da5b:	e8 72 1c 00 00       	call   1f6d2 <_ZN3glm6detail16compute_vec4_addIfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi4EfLS2_0EEES7_>
   1da60:	66 48 0f 7e c2       	movq   %xmm0,%rdx
   1da65:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   1da69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1da6d:	48 89 10             	mov    %rdx,(%rax)
   1da70:	66 0f d6 40 08       	movq   %xmm0,0x8(%rax)
   1da75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1da79:	c9                   	leave
   1da7a:	c3                   	ret

000000000001da7b <_ZN3glmmiIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2)
   1da7b:	55                   	push   %rbp
   1da7c:	48 89 e5             	mov    %rsp,%rbp
   1da7f:	48 83 ec 40          	sub    $0x40,%rsp
   1da83:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1da87:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
			v1.z - v2.z);
   1da8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1da8f:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
   1da94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1da98:	f3 0f 10 48 08       	movss  0x8(%rax),%xmm1
		return vec<3, T, Q>(
   1da9d:	0f 28 d0             	movaps %xmm0,%xmm2
   1daa0:	f3 0f 5c d1          	subss  %xmm1,%xmm2
			v1.y - v2.y,
   1daa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1daa8:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
   1daad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dab1:	f3 0f 10 48 04       	movss  0x4(%rax),%xmm1
		return vec<3, T, Q>(
   1dab6:	0f 28 d8             	movaps %xmm0,%xmm3
   1dab9:	f3 0f 5c d9          	subss  %xmm1,%xmm3
			v1.x - v2.x,
   1dabd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dac1:	f3 0f 10 00          	movss  (%rax),%xmm0
   1dac5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dac9:	f3 0f 10 08          	movss  (%rax),%xmm1
		return vec<3, T, Q>(
   1dacd:	f3 0f 5c c1          	subss  %xmm1,%xmm0
   1dad1:	66 0f 7e c2          	movd   %xmm0,%edx
   1dad5:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   1dad9:	0f 28 cb             	movaps %xmm3,%xmm1
   1dadc:	66 0f 6e c2          	movd   %edx,%xmm0
   1dae0:	48 89 c7             	mov    %rax,%rdi
   1dae3:	e8 f2 79 ff ff       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
			v1.z - v2.z);
   1dae8:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1daec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1daf0:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1daf3:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1daf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dafa:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   1daff:	0f 28 c8             	movaps %xmm0,%xmm1
	}
   1db02:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1db07:	c9                   	leave
   1db08:	c3                   	ret

000000000001db09 <_ZN3glm5crossIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>:
	GLM_FUNC_QUALIFIER vec<3, T, Q> cross(vec<3, T, Q> const& x, vec<3, T, Q> const& y)
   1db09:	55                   	push   %rbp
   1db0a:	48 89 e5             	mov    %rsp,%rbp
   1db0d:	48 83 ec 30          	sub    $0x30,%rsp
   1db11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1db15:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);
   1db19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1db1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1db21:	48 89 d6             	mov    %rdx,%rsi
   1db24:	48 89 c7             	mov    %rax,%rdi
   1db27:	e8 4e 1c 00 00       	call   1f77a <_ZN3glm6detail13compute_crossIfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi3EfLS2_0EEES7_>
   1db2c:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1db31:	0f 28 c1             	movaps %xmm1,%xmm0
   1db34:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   1db38:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
   1db3d:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1db41:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1db46:	0f 28 c8             	movaps %xmm0,%xmm1
	}
   1db49:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1db4e:	c9                   	leave
   1db4f:	c3                   	ret

000000000001db50 <_ZN3glm3dotILi3EfLNS_9qualifierE0EEET0_RKNS_3vecIXT_ES2_XT1_EEES6_>:
	GLM_FUNC_QUALIFIER T dot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)
   1db50:	55                   	push   %rbp
   1db51:	48 89 e5             	mov    %rsp,%rbp
   1db54:	48 83 ec 10          	sub    $0x10,%rsp
   1db58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1db5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
   1db60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1db64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1db68:	48 89 d6             	mov    %rdx,%rsi
   1db6b:	48 89 c7             	mov    %rax,%rdi
   1db6e:	e8 e4 1c 00 00       	call   1f857 <_ZN3glm6detail11compute_dotINS_3vecILi3EfLNS_9qualifierE0EEEfLb0EE4callERKS4_S7_>
	}
   1db73:	c9                   	leave
   1db74:	c3                   	ret

000000000001db75 <_ZN3glm3absIfEET_S1_>:
		}
	};
}//namespace detail

	template<typename genFIType>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType abs(genFIType x)
   1db75:	55                   	push   %rbp
   1db76:	48 89 e5             	mov    %rsp,%rbp
   1db79:	48 83 ec 10          	sub    $0x10,%rsp
   1db7d:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
	{
		return detail::compute_abs<genFIType, std::numeric_limits<genFIType>::is_signed>::call(x);
   1db82:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1db85:	66 0f 6e c0          	movd   %eax,%xmm0
   1db89:	e8 16 1d 00 00       	call   1f8a4 <_ZN3glm6detail11compute_absIfLb1EE4callEf>
	}
   1db8e:	c9                   	leave
   1db8f:	c3                   	ret

000000000001db90 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1db90:	55                   	push   %rbp
   1db91:	48 89 e5             	mov    %rsp,%rbp
   1db94:	48 83 ec 10          	sub    $0x10,%rsp
   1db98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1db9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dba0:	48 89 c7             	mov    %rax,%rdi
   1dba3:	e8 6e 1d 00 00       	call   1f916 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1dba8:	48 89 c7             	mov    %rax,%rdi
   1dbab:	e8 24 1d 00 00       	call   1f8d4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   1dbb0:	c9                   	leave
   1dbb1:	c3                   	ret

000000000001dbb2 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1dbb2:	55                   	push   %rbp
   1dbb3:	48 89 e5             	mov    %rsp,%rbp
   1dbb6:	48 83 ec 20          	sub    $0x20,%rsp
   1dbba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dbbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1dbc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1dbc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1dbca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dbce:	48 89 d6             	mov    %rdx,%rsi
   1dbd1:	48 89 c7             	mov    %rax,%rdi
   1dbd4:	e8 4b 1d 00 00       	call   1f924 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   1dbd9:	c9                   	leave
   1dbda:	c3                   	ret
   1dbdb:	90                   	nop

000000000001dbdc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1dbdc:	55                   	push   %rbp
   1dbdd:	48 89 e5             	mov    %rsp,%rbp
   1dbe0:	53                   	push   %rbx
   1dbe1:	48 83 ec 38          	sub    $0x38,%rsp
   1dbe5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1dbe9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1dbed:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1dbf1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dbf5:	48 89 c7             	mov    %rax,%rdi
   1dbf8:	e8 93 ff ff ff       	call   1db90 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1dbfd:	48 89 c3             	mov    %rax,%rbx
   1dc00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc04:	48 89 c7             	mov    %rax,%rdi
   1dc07:	e8 3a a7 ff ff       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1dc0c:	48 29 c3             	sub    %rax,%rbx
   1dc0f:	48 89 da             	mov    %rbx,%rdx
   1dc12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dc16:	48 39 c2             	cmp    %rax,%rdx
   1dc19:	0f 92 c0             	setb   %al
   1dc1c:	84 c0                	test   %al,%al
   1dc1e:	74 0c                	je     1dc2c <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1dc20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dc24:	48 89 c7             	mov    %rax,%rdi
   1dc27:	e8 24 76 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1dc2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc30:	48 89 c7             	mov    %rax,%rdi
   1dc33:	e8 0e a7 ff ff       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1dc38:	48 89 c3             	mov    %rax,%rbx
   1dc3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc3f:	48 89 c7             	mov    %rax,%rdi
   1dc42:	e8 ff a6 ff ff       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1dc47:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1dc4b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1dc4f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1dc53:	48 89 d6             	mov    %rdx,%rsi
   1dc56:	48 89 c7             	mov    %rax,%rdi
   1dc59:	e8 de 0a 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1dc5e:	48 8b 00             	mov    (%rax),%rax
   1dc61:	48 01 d8             	add    %rbx,%rax
   1dc64:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1dc68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc6c:	48 89 c7             	mov    %rax,%rdi
   1dc6f:	e8 d2 a6 ff ff       	call   18346 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   1dc74:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1dc78:	72 12                	jb     1dc8c <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1dc7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc7e:	48 89 c7             	mov    %rax,%rdi
   1dc81:	e8 0a ff ff ff       	call   1db90 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1dc86:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1dc8a:	73 0e                	jae    1dc9a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1dc8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dc90:	48 89 c7             	mov    %rax,%rdi
   1dc93:	e8 f8 fe ff ff       	call   1db90 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   1dc98:	eb 04                	jmp    1dc9e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1dc9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1dc9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1dca2:	c9                   	leave
   1dca3:	c3                   	ret

000000000001dca4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1dca4:	55                   	push   %rbp
   1dca5:	48 89 e5             	mov    %rsp,%rbp
   1dca8:	48 83 ec 10          	sub    $0x10,%rsp
   1dcac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dcb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1dcb4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1dcb9:	74 15                	je     1dcd0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   1dcbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dcbf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1dcc3:	48 89 d6             	mov    %rdx,%rsi
   1dcc6:	48 89 c7             	mov    %rax,%rdi
   1dcc9:	e8 7f 1c 00 00       	call   1f94d <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   1dcce:	eb 05                	jmp    1dcd5 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   1dcd0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1dcd5:	c9                   	leave
   1dcd6:	c3                   	ret

000000000001dcd7 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1dcd7:	55                   	push   %rbp
   1dcd8:	48 89 e5             	mov    %rsp,%rbp
   1dcdb:	48 83 ec 20          	sub    $0x20,%rsp
   1dcdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dce3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1dce7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1dceb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1dcef:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1dcf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1dcf7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1dcfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dcff:	48 89 c7             	mov    %rax,%rdi
   1dd02:	e8 70 1c 00 00       	call   1f977 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1dd07:	c9                   	leave
   1dd08:	c3                   	ret
   1dd09:	90                   	nop

000000000001dd0a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1dd0a:	55                   	push   %rbp
   1dd0b:	48 89 e5             	mov    %rsp,%rbp
   1dd0e:	48 83 ec 10          	sub    $0x10,%rsp
   1dd12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1dd16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd1a:	48 89 c7             	mov    %rax,%rdi
   1dd1d:	e8 fa 1c 00 00       	call   1fa1c <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1dd22:	48 89 c7             	mov    %rax,%rdi
   1dd25:	e8 b0 1c 00 00       	call   1f9da <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   1dd2a:	c9                   	leave
   1dd2b:	c3                   	ret

000000000001dd2c <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1dd2c:	55                   	push   %rbp
   1dd2d:	48 89 e5             	mov    %rsp,%rbp
   1dd30:	48 83 ec 20          	sub    $0x20,%rsp
   1dd34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dd38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1dd3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1dd40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1dd44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd48:	48 89 d6             	mov    %rdx,%rsi
   1dd4b:	48 89 c7             	mov    %rax,%rdi
   1dd4e:	e8 d7 1c 00 00       	call   1fa2a <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   1dd53:	c9                   	leave
   1dd54:	c3                   	ret
   1dd55:	90                   	nop

000000000001dd56 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1dd56:	55                   	push   %rbp
   1dd57:	48 89 e5             	mov    %rsp,%rbp
   1dd5a:	53                   	push   %rbx
   1dd5b:	48 83 ec 38          	sub    $0x38,%rsp
   1dd5f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1dd63:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1dd67:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1dd6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd6f:	48 89 c7             	mov    %rax,%rdi
   1dd72:	e8 93 ff ff ff       	call   1dd0a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1dd77:	48 89 c3             	mov    %rax,%rbx
   1dd7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dd7e:	48 89 c7             	mov    %rax,%rdi
   1dd81:	e8 cc d4 ff ff       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1dd86:	48 29 c3             	sub    %rax,%rbx
   1dd89:	48 89 da             	mov    %rbx,%rdx
   1dd8c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1dd90:	48 39 c2             	cmp    %rax,%rdx
   1dd93:	0f 92 c0             	setb   %al
   1dd96:	84 c0                	test   %al,%al
   1dd98:	74 0c                	je     1dda6 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1dd9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dd9e:	48 89 c7             	mov    %rax,%rdi
   1dda1:	e8 aa 74 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1dda6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddaa:	48 89 c7             	mov    %rax,%rdi
   1ddad:	e8 a0 d4 ff ff       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1ddb2:	48 89 c3             	mov    %rax,%rbx
   1ddb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddb9:	48 89 c7             	mov    %rax,%rdi
   1ddbc:	e8 91 d4 ff ff       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1ddc1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1ddc5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1ddc9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1ddcd:	48 89 d6             	mov    %rdx,%rsi
   1ddd0:	48 89 c7             	mov    %rax,%rdi
   1ddd3:	e8 64 09 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1ddd8:	48 8b 00             	mov    (%rax),%rax
   1dddb:	48 01 d8             	add    %rbx,%rax
   1ddde:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1dde2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1dde6:	48 89 c7             	mov    %rax,%rdi
   1dde9:	e8 64 d4 ff ff       	call   1b252 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1ddee:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1ddf2:	72 12                	jb     1de06 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1ddf4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ddf8:	48 89 c7             	mov    %rax,%rdi
   1ddfb:	e8 0a ff ff ff       	call   1dd0a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1de00:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1de04:	73 0e                	jae    1de14 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1de06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1de0a:	48 89 c7             	mov    %rax,%rdi
   1de0d:	e8 f8 fe ff ff       	call   1dd0a <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1de12:	eb 04                	jmp    1de18 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1de14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1de18:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1de1c:	c9                   	leave
   1de1d:	c3                   	ret

000000000001de1e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1de1e:	55                   	push   %rbp
   1de1f:	48 89 e5             	mov    %rsp,%rbp
   1de22:	48 83 ec 10          	sub    $0x10,%rsp
   1de26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1de2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1de2e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1de33:	74 15                	je     1de4a <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   1de35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1de39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1de3d:	48 89 d6             	mov    %rdx,%rsi
   1de40:	48 89 c7             	mov    %rax,%rdi
   1de43:	e8 0b 1c 00 00       	call   1fa53 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   1de48:	eb 05                	jmp    1de4f <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   1de4a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1de4f:	c9                   	leave
   1de50:	c3                   	ret

000000000001de51 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1de51:	55                   	push   %rbp
   1de52:	48 89 e5             	mov    %rsp,%rbp
   1de55:	48 83 ec 20          	sub    $0x20,%rsp
   1de59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1de5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1de61:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1de65:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1de69:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1de6d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1de71:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1de75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1de79:	48 89 c7             	mov    %rax,%rdi
   1de7c:	e8 fc 1b 00 00       	call   1fa7d <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1de81:	c9                   	leave
   1de82:	c3                   	ret

000000000001de83 <_ZNSt6vectorIP23VkDescriptorSetLayout_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1de83:	55                   	push   %rbp
   1de84:	48 89 e5             	mov    %rsp,%rbp
   1de87:	48 83 ec 20          	sub    $0x20,%rsp
   1de8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1de8f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1de96:	ff ff 0f 
   1de99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1de9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dea1:	48 89 c7             	mov    %rax,%rdi
   1dea4:	e8 37 1c 00 00       	call   1fae0 <_ZNSt16allocator_traitsISaIP23VkDescriptorSetLayout_TEE8max_sizeERKS2_>
   1dea9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1dead:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1deb1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1deb5:	48 89 d6             	mov    %rdx,%rsi
   1deb8:	48 89 c7             	mov    %rax,%rdi
   1debb:	e8 d1 8f fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1dec0:	48 8b 00             	mov    (%rax),%rax
      }
   1dec3:	c9                   	leave
   1dec4:	c3                   	ret
   1dec5:	90                   	nop

000000000001dec6 <_ZNSaIP23VkDescriptorSetLayout_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1dec6:	55                   	push   %rbp
   1dec7:	48 89 e5             	mov    %rsp,%rbp
   1deca:	48 83 ec 10          	sub    $0x10,%rsp
   1dece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ded2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1ded6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1deda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dede:	48 89 d6             	mov    %rdx,%rsi
   1dee1:	48 89 c7             	mov    %rax,%rdi
   1dee4:	e8 11 1c 00 00       	call   1fafa <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TEC1ERKS2_>
   1dee9:	90                   	nop
   1deea:	c9                   	leave
   1deeb:	c3                   	ret

000000000001deec <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1deec:	55                   	push   %rbp
   1deed:	48 89 e5             	mov    %rsp,%rbp
   1def0:	48 83 ec 10          	sub    $0x10,%rsp
   1def4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1def8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1defc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1df00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df04:	48 89 d6             	mov    %rdx,%rsi
   1df07:	48 89 c7             	mov    %rax,%rdi
   1df0a:	e8 b7 ff ff ff       	call   1dec6 <_ZNSaIP23VkDescriptorSetLayout_TEC1ERKS1_>
   1df0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df13:	48 89 c7             	mov    %rax,%rdi
   1df16:	e8 ef 1b 00 00       	call   1fb0a <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1df1b:	90                   	nop
   1df1c:	c9                   	leave
   1df1d:	c3                   	ret

000000000001df1e <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   1df1e:	55                   	push   %rbp
   1df1f:	48 89 e5             	mov    %rsp,%rbp
   1df22:	48 83 ec 10          	sub    $0x10,%rsp
   1df26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1df2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   1df2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1df32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df36:	48 89 d6             	mov    %rdx,%rsi
   1df39:	48 89 c7             	mov    %rax,%rdi
   1df3c:	e8 f7 1b 00 00       	call   1fb38 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE11_M_allocateEm>
   1df41:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1df45:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1df48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df4c:	48 8b 10             	mov    (%rax),%rdx
   1df4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df53:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1df57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df5b:	48 8b 00             	mov    (%rax),%rax
   1df5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1df62:	48 c1 e2 03          	shl    $0x3,%rdx
   1df66:	48 01 c2             	add    %rax,%rdx
   1df69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df6d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1df71:	90                   	nop
   1df72:	c9                   	leave
   1df73:	c3                   	ret

000000000001df74 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1df74:	55                   	push   %rbp
   1df75:	48 89 e5             	mov    %rsp,%rbp
   1df78:	48 83 ec 20          	sub    $0x20,%rsp
   1df7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1df80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1df84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1df88:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1df8d:	74 17                	je     1dfa6 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1df8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df93:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1df97:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1df9b:	48 89 ce             	mov    %rcx,%rsi
   1df9e:	48 89 c7             	mov    %rax,%rdi
   1dfa1:	e8 c5 1b 00 00       	call   1fb6b <_ZNSt16allocator_traitsISaIP23VkDescriptorSetLayout_TEE10deallocateERS2_PS1_m>
      }
   1dfa6:	90                   	nop
   1dfa7:	c9                   	leave
   1dfa8:	c3                   	ret

000000000001dfa9 <_ZSt24__uninitialized_fill_n_aIPP23VkDescriptorSetLayout_TmS1_S1_ET_S3_T0_RKT1_RSaIT2_E>:
    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n,
   1dfa9:	55                   	push   %rbp
   1dfaa:	48 89 e5             	mov    %rsp,%rbp
   1dfad:	48 83 ec 20          	sub    $0x20,%rsp
   1dfb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dfb5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1dfb9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1dfbd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_fill_n(__first, __n, __x);
   1dfc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1dfc5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1dfc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dfcd:	48 89 ce             	mov    %rcx,%rsi
   1dfd0:	48 89 c7             	mov    %rax,%rdi
   1dfd3:	e8 c1 1b 00 00       	call   1fb99 <_ZSt20uninitialized_fill_nIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_>
    }
   1dfd8:	c9                   	leave
   1dfd9:	c3                   	ret

000000000001dfda <_ZSt8_DestroyIPP23VkDescriptorSetLayout_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1dfda:	55                   	push   %rbp
   1dfdb:	48 89 e5             	mov    %rsp,%rbp
   1dfde:	48 83 ec 10          	sub    $0x10,%rsp
   1dfe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dfe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1dfea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1dfee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dff2:	48 89 d6             	mov    %rdx,%rsi
   1dff5:	48 89 c7             	mov    %rax,%rdi
   1dff8:	e8 cd 1b 00 00       	call   1fbca <_ZNSt12_Destroy_auxILb1EE9__destroyIPP23VkDescriptorSetLayout_TEEvT_S5_>
    }
   1dffd:	90                   	nop
   1dffe:	c9                   	leave
   1dfff:	c3                   	ret

000000000001e000 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1e000:	55                   	push   %rbp
   1e001:	48 89 e5             	mov    %rsp,%rbp
   1e004:	48 83 ec 10          	sub    $0x10,%rsp
   1e008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1e00c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e010:	48 89 c7             	mov    %rax,%rdi
   1e013:	e8 04 1c 00 00       	call   1fc1c <_ZNKSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1e018:	48 89 c7             	mov    %rax,%rdi
   1e01b:	e8 b9 1b 00 00       	call   1fbd9 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE11_S_max_sizeERKS2_>
   1e020:	c9                   	leave
   1e021:	c3                   	ret

000000000001e022 <_ZSt27__uninitialized_default_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1e022:	55                   	push   %rbp
   1e023:	48 89 e5             	mov    %rsp,%rbp
   1e026:	48 83 ec 20          	sub    $0x20,%rsp
   1e02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e02e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e032:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1e036:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e03e:	48 89 d6             	mov    %rdx,%rsi
   1e041:	48 89 c7             	mov    %rax,%rdi
   1e044:	e8 e1 1b 00 00       	call   1fc2a <_ZSt25__uninitialized_default_nIPP17VkDescriptorSet_TmET_S3_T0_>
   1e049:	c9                   	leave
   1e04a:	c3                   	ret
   1e04b:	90                   	nop

000000000001e04c <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1e04c:	55                   	push   %rbp
   1e04d:	48 89 e5             	mov    %rsp,%rbp
   1e050:	53                   	push   %rbx
   1e051:	48 83 ec 38          	sub    $0x38,%rsp
   1e055:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e059:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1e05d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1e061:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e065:	48 89 c7             	mov    %rax,%rdi
   1e068:	e8 93 ff ff ff       	call   1e000 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE8max_sizeEv>
   1e06d:	48 89 c3             	mov    %rax,%rbx
   1e070:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e074:	48 89 c7             	mov    %rax,%rdi
   1e077:	e8 34 d6 ff ff       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   1e07c:	48 29 c3             	sub    %rax,%rbx
   1e07f:	48 89 da             	mov    %rbx,%rdx
   1e082:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e086:	48 39 c2             	cmp    %rax,%rdx
   1e089:	0f 92 c0             	setb   %al
   1e08c:	84 c0                	test   %al,%al
   1e08e:	74 0c                	je     1e09c <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1e090:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e094:	48 89 c7             	mov    %rax,%rdi
   1e097:	e8 b4 71 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1e09c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e0a0:	48 89 c7             	mov    %rax,%rdi
   1e0a3:	e8 08 d6 ff ff       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   1e0a8:	48 89 c3             	mov    %rax,%rbx
   1e0ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e0af:	48 89 c7             	mov    %rax,%rdi
   1e0b2:	e8 f9 d5 ff ff       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   1e0b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1e0bb:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1e0bf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1e0c3:	48 89 d6             	mov    %rdx,%rsi
   1e0c6:	48 89 c7             	mov    %rax,%rdi
   1e0c9:	e8 6e 06 00 00       	call   1e73c <_ZSt3maxImERKT_S2_S2_>
   1e0ce:	48 8b 00             	mov    (%rax),%rax
   1e0d1:	48 01 d8             	add    %rbx,%rax
   1e0d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1e0d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e0dc:	48 89 c7             	mov    %rax,%rdi
   1e0df:	e8 cc d5 ff ff       	call   1b6b0 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE4sizeEv>
   1e0e4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1e0e8:	72 12                	jb     1e0fc <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1e0ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e0ee:	48 89 c7             	mov    %rax,%rdi
   1e0f1:	e8 0a ff ff ff       	call   1e000 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE8max_sizeEv>
   1e0f6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1e0fa:	73 0e                	jae    1e10a <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1e0fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e100:	48 89 c7             	mov    %rax,%rdi
   1e103:	e8 f8 fe ff ff       	call   1e000 <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE8max_sizeEv>
   1e108:	eb 04                	jmp    1e10e <_ZNKSt6vectorIP17VkDescriptorSet_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1e10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1e10e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e112:	c9                   	leave
   1e113:	c3                   	ret

000000000001e114 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1e114:	55                   	push   %rbp
   1e115:	48 89 e5             	mov    %rsp,%rbp
   1e118:	48 83 ec 10          	sub    $0x10,%rsp
   1e11c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e120:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1e124:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e129:	74 15                	je     1e140 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE11_M_allocateEm+0x2c>
   1e12b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e12f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e133:	48 89 d6             	mov    %rdx,%rsi
   1e136:	48 89 c7             	mov    %rax,%rdi
   1e139:	e8 15 1b 00 00       	call   1fc53 <_ZNSt16allocator_traitsISaIP17VkDescriptorSet_TEE8allocateERS2_m>
   1e13e:	eb 05                	jmp    1e145 <_ZNSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE11_M_allocateEm+0x31>
   1e140:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1e145:	c9                   	leave
   1e146:	c3                   	ret

000000000001e147 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1e147:	55                   	push   %rbp
   1e148:	48 89 e5             	mov    %rsp,%rbp
   1e14b:	48 83 ec 20          	sub    $0x20,%rsp
   1e14f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e153:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e157:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e15b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1e15f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1e163:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e167:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1e16b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e16f:	48 89 c7             	mov    %rax,%rdi
   1e172:	e8 06 1b 00 00       	call   1fc7d <_ZSt12__relocate_aIPP17VkDescriptorSet_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1e177:	c9                   	leave
   1e178:	c3                   	ret
   1e179:	90                   	nop

000000000001e17a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1e17a:	55                   	push   %rbp
   1e17b:	48 89 e5             	mov    %rsp,%rbp
   1e17e:	48 83 ec 10          	sub    $0x10,%rsp
   1e182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e186:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1e18a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e192:	48 89 d6             	mov    %rdx,%rsi
   1e195:	48 89 c7             	mov    %rax,%rdi
   1e198:	e8 43 1b 00 00       	call   1fce0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   1e19d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e1a1:	48 89 c7             	mov    %rax,%rdi
   1e1a4:	e8 87 dc ff ff       	call   1be30 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1e1a9:	90                   	nop
   1e1aa:	c9                   	leave
   1e1ab:	c3                   	ret

000000000001e1ac <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   1e1ac:	55                   	push   %rbp
   1e1ad:	48 89 e5             	mov    %rsp,%rbp
   1e1b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e1b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e1b8:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e1bc:	5d                   	pop    %rbp
   1e1bd:	c3                   	ret

000000000001e1be <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1e1be:	55                   	push   %rbp
   1e1bf:	48 89 e5             	mov    %rsp,%rbp
   1e1c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1e1c6:	90                   	nop
   1e1c7:	5d                   	pop    %rbp
   1e1c8:	c3                   	ret

000000000001e1c9 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1e1c9:	55                   	push   %rbp
   1e1ca:	48 89 e5             	mov    %rsp,%rbp
   1e1cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e1d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1e1d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e1d9:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1e1dd:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1e1e1:	5d                   	pop    %rbp
   1e1e2:	c3                   	ret

000000000001e1e3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1e1e3:	55                   	push   %rbp
   1e1e4:	48 89 e5             	mov    %rsp,%rbp
   1e1e7:	53                   	push   %rbx
   1e1e8:	48 83 ec 28          	sub    $0x28,%rsp
   1e1ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e1f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1e1f4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1e1f8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e1fc:	48 89 d6             	mov    %rdx,%rsi
   1e1ff:	48 89 c7             	mov    %rax,%rdi
   1e202:	e8 d9 1a 00 00       	call   1fce0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   1e207:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e20b:	48 89 c7             	mov    %rax,%rdi
   1e20e:	e8 c1 16 00 00       	call   1f8d4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   1e213:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1e217:	0f 92 c3             	setb   %bl
   1e21a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e21e:	48 89 c7             	mov    %rax,%rdi
   1e221:	e8 34 9f ff ff       	call   1815a <_ZNSaIP13VkSemaphore_TED1Ev>
   1e226:	84 db                	test   %bl,%bl
   1e228:	74 0f                	je     1e239 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1e22a:	48 8d 05 1f 88 00 00 	lea    0x881f(%rip),%rax        # 26a50 <_ZZN9VulkanApp6renderEvE11submitCount+0x734>
   1e231:	48 89 c7             	mov    %rax,%rdi
   1e234:	e8 17 70 fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1e239:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1e23d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e241:	c9                   	leave
   1e242:	c3                   	ret

000000000001e243 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1e243:	55                   	push   %rbp
   1e244:	48 89 e5             	mov    %rsp,%rbp
   1e247:	48 83 ec 20          	sub    $0x20,%rsp
   1e24b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e24f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e253:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e257:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1e25b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e25f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e267:	48 89 ce             	mov    %rcx,%rsi
   1e26a:	48 89 c7             	mov    %rax,%rdi
   1e26d:	e8 94 1a 00 00       	call   1fd06 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   1e272:	c9                   	leave
   1e273:	c3                   	ret

000000000001e274 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e274:	55                   	push   %rbp
   1e275:	48 89 e5             	mov    %rsp,%rbp
   1e278:	48 83 ec 10          	sub    $0x10,%rsp
   1e27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e284:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e28c:	48 89 d6             	mov    %rdx,%rsi
   1e28f:	48 89 c7             	mov    %rax,%rdi
   1e292:	e8 a4 1a 00 00       	call   1fd3b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   1e297:	90                   	nop
   1e298:	c9                   	leave
   1e299:	c3                   	ret

000000000001e29a <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1e29a:	55                   	push   %rbp
   1e29b:	48 89 e5             	mov    %rsp,%rbp
   1e29e:	48 83 ec 10          	sub    $0x10,%rsp
   1e2a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e2a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1e2aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e2ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e2b2:	48 89 d6             	mov    %rdx,%rsi
   1e2b5:	48 89 c7             	mov    %rax,%rdi
   1e2b8:	e8 8d 1a 00 00       	call   1fd4a <_ZNSaIjEC1ERKS_>
   1e2bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e2c1:	48 89 c7             	mov    %rax,%rdi
   1e2c4:	e8 a7 1a 00 00       	call   1fd70 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   1e2c9:	90                   	nop
   1e2ca:	c9                   	leave
   1e2cb:	c3                   	ret

000000000001e2cc <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   1e2cc:	55                   	push   %rbp
   1e2cd:	48 89 e5             	mov    %rsp,%rbp
   1e2d0:	48 83 ec 20          	sub    $0x20,%rsp
   1e2d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e2d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e2dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1e2e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e2e5:	74 17                	je     1e2fe <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1e2e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e2eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e2ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e2f3:	48 89 ce             	mov    %rcx,%rsi
   1e2f6:	48 89 c7             	mov    %rax,%rdi
   1e2f9:	e8 a0 1a 00 00       	call   1fd9e <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   1e2fe:	90                   	nop
   1e2ff:	c9                   	leave
   1e300:	c3                   	ret
   1e301:	90                   	nop

000000000001e302 <_ZNKSt16initializer_listIjE4sizeEv>:
   1e302:	55                   	push   %rbp
   1e303:	48 89 e5             	mov    %rsp,%rbp
   1e306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e30a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e30e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e312:	5d                   	pop    %rbp
   1e313:	c3                   	ret

000000000001e314 <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   1e314:	55                   	push   %rbp
   1e315:	48 89 e5             	mov    %rsp,%rbp
   1e318:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1e31c:	90                   	nop
   1e31d:	5d                   	pop    %rbp
   1e31e:	c3                   	ret

000000000001e31f <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1e31f:	55                   	push   %rbp
   1e320:	48 89 e5             	mov    %rsp,%rbp
   1e323:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e327:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1e32b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e32f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1e333:	48 c1 f8 02          	sar    $0x2,%rax
    }
   1e337:	5d                   	pop    %rbp
   1e338:	c3                   	ret

000000000001e339 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1e339:	55                   	push   %rbp
   1e33a:	48 89 e5             	mov    %rsp,%rbp
   1e33d:	53                   	push   %rbx
   1e33e:	48 83 ec 28          	sub    $0x28,%rsp
   1e342:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e346:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1e34a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1e34e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e352:	48 89 d6             	mov    %rdx,%rsi
   1e355:	48 89 c7             	mov    %rax,%rdi
   1e358:	e8 ed 19 00 00       	call   1fd4a <_ZNSaIjEC1ERKS_>
   1e35d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e361:	48 89 c7             	mov    %rax,%rdi
   1e364:	e8 63 1a 00 00       	call   1fdcc <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   1e369:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1e36d:	0f 92 c3             	setb   %bl
   1e370:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1e374:	48 89 c7             	mov    %rax,%rdi
   1e377:	e8 e2 9e ff ff       	call   1825e <_ZNSaIjED1Ev>
   1e37c:	84 db                	test   %bl,%bl
   1e37e:	74 0f                	je     1e38f <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   1e380:	48 8d 05 c9 86 00 00 	lea    0x86c9(%rip),%rax        # 26a50 <_ZZN9VulkanApp6renderEvE11submitCount+0x734>
   1e387:	48 89 c7             	mov    %rax,%rdi
   1e38a:	e8 c1 6e fe ff       	call   5250 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1e38f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1e393:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e397:	c9                   	leave
   1e398:	c3                   	ret
   1e399:	90                   	nop

000000000001e39a <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1e39a:	55                   	push   %rbp
   1e39b:	48 89 e5             	mov    %rsp,%rbp
   1e39e:	48 83 ec 10          	sub    $0x10,%rsp
   1e3a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e3a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1e3aa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e3af:	74 15                	je     1e3c6 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   1e3b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e3b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e3b9:	48 89 d6             	mov    %rdx,%rsi
   1e3bc:	48 89 c7             	mov    %rax,%rdi
   1e3bf:	e8 4a 1a 00 00       	call   1fe0e <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   1e3c4:	eb 05                	jmp    1e3cb <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   1e3c6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1e3cb:	c9                   	leave
   1e3cc:	c3                   	ret

000000000001e3cd <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1e3cd:	55                   	push   %rbp
   1e3ce:	48 89 e5             	mov    %rsp,%rbp
   1e3d1:	48 83 ec 20          	sub    $0x20,%rsp
   1e3d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e3d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e3dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1e3e1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1e3e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e3e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e3ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e3f1:	48 89 ce             	mov    %rcx,%rsi
   1e3f4:	48 89 c7             	mov    %rax,%rdi
   1e3f7:	e8 3c 1a 00 00       	call   1fe38 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   1e3fc:	c9                   	leave
   1e3fd:	c3                   	ret

000000000001e3fe <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e3fe:	55                   	push   %rbp
   1e3ff:	48 89 e5             	mov    %rsp,%rbp
   1e402:	48 83 ec 10          	sub    $0x10,%rsp
   1e406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e40a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e40e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e416:	48 89 d6             	mov    %rdx,%rsi
   1e419:	48 89 c7             	mov    %rax,%rdi
   1e41c:	e8 4c 1a 00 00       	call   1fe6d <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   1e421:	90                   	nop
   1e422:	c9                   	leave
   1e423:	c3                   	ret

000000000001e424 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e424:	55                   	push   %rbp
   1e425:	48 89 e5             	mov    %rsp,%rbp
   1e428:	48 83 ec 20          	sub    $0x20,%rsp
   1e42c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e430:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e434:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e438:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e43c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e444:	48 89 ce             	mov    %rcx,%rsi
   1e447:	48 89 c7             	mov    %rax,%rdi
   1e44a:	e8 2d 1a 00 00       	call   1fe7c <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   1e44f:	90                   	nop
   1e450:	c9                   	leave
   1e451:	c3                   	ret

000000000001e452 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1e452:	55                   	push   %rbp
   1e453:	48 89 e5             	mov    %rsp,%rbp
   1e456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e45a:	90                   	nop
   1e45b:	5d                   	pop    %rbp
   1e45c:	c3                   	ret

000000000001e45d <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e45d:	55                   	push   %rbp
   1e45e:	48 89 e5             	mov    %rsp,%rbp
   1e461:	48 83 ec 20          	sub    $0x20,%rsp
   1e465:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e469:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e46d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e471:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e475:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e479:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e47d:	48 89 ce             	mov    %rcx,%rsi
   1e480:	48 89 c7             	mov    %rax,%rdi
   1e483:	e8 26 1a 00 00       	call   1feae <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   1e488:	90                   	nop
   1e489:	c9                   	leave
   1e48a:	c3                   	ret

000000000001e48b <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e48b:	55                   	push   %rbp
   1e48c:	48 89 e5             	mov    %rsp,%rbp
   1e48f:	48 83 ec 10          	sub    $0x10,%rsp
   1e493:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e497:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e49b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e49f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e4a3:	48 89 d6             	mov    %rdx,%rsi
   1e4a6:	48 89 c7             	mov    %rax,%rdi
   1e4a9:	e8 31 1a 00 00       	call   1fedf <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   1e4ae:	90                   	nop
   1e4af:	c9                   	leave
   1e4b0:	c3                   	ret

000000000001e4b1 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e4b1:	55                   	push   %rbp
   1e4b2:	48 89 e5             	mov    %rsp,%rbp
   1e4b5:	48 83 ec 20          	sub    $0x20,%rsp
   1e4b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e4bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e4c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e4c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e4c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e4cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e4d1:	48 89 ce             	mov    %rcx,%rsi
   1e4d4:	48 89 c7             	mov    %rax,%rdi
   1e4d7:	e8 12 1a 00 00       	call   1feee <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   1e4dc:	90                   	nop
   1e4dd:	c9                   	leave
   1e4de:	c3                   	ret
   1e4df:	90                   	nop

000000000001e4e0 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
   1e4e0:	55                   	push   %rbp
   1e4e1:	48 89 e5             	mov    %rsp,%rbp
   1e4e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e4e8:	90                   	nop
   1e4e9:	5d                   	pop    %rbp
   1e4ea:	c3                   	ret

000000000001e4eb <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e4eb:	55                   	push   %rbp
   1e4ec:	48 89 e5             	mov    %rsp,%rbp
   1e4ef:	48 83 ec 20          	sub    $0x20,%rsp
   1e4f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e4f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e4fb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e4ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e503:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e50b:	48 89 ce             	mov    %rcx,%rsi
   1e50e:	48 89 c7             	mov    %rax,%rdi
   1e511:	e8 0a 1a 00 00       	call   1ff20 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   1e516:	90                   	nop
   1e517:	c9                   	leave
   1e518:	c3                   	ret

000000000001e519 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e519:	55                   	push   %rbp
   1e51a:	48 89 e5             	mov    %rsp,%rbp
   1e51d:	48 83 ec 10          	sub    $0x10,%rsp
   1e521:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e525:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e529:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e531:	48 89 d6             	mov    %rdx,%rsi
   1e534:	48 89 c7             	mov    %rax,%rdi
   1e537:	e8 15 1a 00 00       	call   1ff51 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   1e53c:	90                   	nop
   1e53d:	c9                   	leave
   1e53e:	c3                   	ret
   1e53f:	90                   	nop

000000000001e540 <_ZNSt15__new_allocatorIP10VkBuffer_TEC1Ev>:
   1e540:	55                   	push   %rbp
   1e541:	48 89 e5             	mov    %rsp,%rbp
   1e544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e548:	90                   	nop
   1e549:	5d                   	pop    %rbp
   1e54a:	c3                   	ret

000000000001e54b <_ZNSt16allocator_traitsISaIP10VkBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e54b:	55                   	push   %rbp
   1e54c:	48 89 e5             	mov    %rsp,%rbp
   1e54f:	48 83 ec 20          	sub    $0x20,%rsp
   1e553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e557:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e55b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e55f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e563:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e56b:	48 89 ce             	mov    %rcx,%rsi
   1e56e:	48 89 c7             	mov    %rax,%rdi
   1e571:	e8 ea 19 00 00       	call   1ff60 <_ZNSt15__new_allocatorIP10VkBuffer_TE10deallocateEPS1_m>
   1e576:	90                   	nop
   1e577:	c9                   	leave
   1e578:	c3                   	ret

000000000001e579 <_ZSt8_DestroyIPP10VkBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e579:	55                   	push   %rbp
   1e57a:	48 89 e5             	mov    %rsp,%rbp
   1e57d:	48 83 ec 10          	sub    $0x10,%rsp
   1e581:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e585:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e589:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e58d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e591:	48 89 d6             	mov    %rdx,%rsi
   1e594:	48 89 c7             	mov    %rax,%rdi
   1e597:	e8 f5 19 00 00       	call   1ff91 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10VkBuffer_TEEvT_S5_>
    }
   1e59c:	90                   	nop
   1e59d:	c9                   	leave
   1e59e:	c3                   	ret
   1e59f:	90                   	nop

000000000001e5a0 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TEC1Ev>:
   1e5a0:	55                   	push   %rbp
   1e5a1:	48 89 e5             	mov    %rsp,%rbp
   1e5a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e5a8:	90                   	nop
   1e5a9:	5d                   	pop    %rbp
   1e5aa:	c3                   	ret

000000000001e5ab <_ZNSt16allocator_traitsISaIP16VkDeviceMemory_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e5ab:	55                   	push   %rbp
   1e5ac:	48 89 e5             	mov    %rsp,%rbp
   1e5af:	48 83 ec 20          	sub    $0x20,%rsp
   1e5b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e5b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e5bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e5bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e5c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e5c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e5cb:	48 89 ce             	mov    %rcx,%rsi
   1e5ce:	48 89 c7             	mov    %rax,%rdi
   1e5d1:	e8 ca 19 00 00       	call   1ffa0 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TE10deallocateEPS1_m>
   1e5d6:	90                   	nop
   1e5d7:	c9                   	leave
   1e5d8:	c3                   	ret

000000000001e5d9 <_ZSt8_DestroyIPP16VkDeviceMemory_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e5d9:	55                   	push   %rbp
   1e5da:	48 89 e5             	mov    %rsp,%rbp
   1e5dd:	48 83 ec 10          	sub    $0x10,%rsp
   1e5e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e5e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e5e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e5ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e5f1:	48 89 d6             	mov    %rdx,%rsi
   1e5f4:	48 89 c7             	mov    %rax,%rdi
   1e5f7:	e8 d5 19 00 00       	call   1ffd1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16VkDeviceMemory_TEEvT_S5_>
    }
   1e5fc:	90                   	nop
   1e5fd:	c9                   	leave
   1e5fe:	c3                   	ret
   1e5ff:	90                   	nop

000000000001e600 <_ZNSt15__new_allocatorIP17VkDescriptorSet_TEC1Ev>:
   1e600:	55                   	push   %rbp
   1e601:	48 89 e5             	mov    %rsp,%rbp
   1e604:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e608:	90                   	nop
   1e609:	5d                   	pop    %rbp
   1e60a:	c3                   	ret

000000000001e60b <_ZNSt16allocator_traitsISaIP17VkDescriptorSet_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1e60b:	55                   	push   %rbp
   1e60c:	48 89 e5             	mov    %rsp,%rbp
   1e60f:	48 83 ec 20          	sub    $0x20,%rsp
   1e613:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e617:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e61b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1e61f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e623:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e62b:	48 89 ce             	mov    %rcx,%rsi
   1e62e:	48 89 c7             	mov    %rax,%rdi
   1e631:	e8 aa 19 00 00       	call   1ffe0 <_ZNSt15__new_allocatorIP17VkDescriptorSet_TE10deallocateEPS1_m>
   1e636:	90                   	nop
   1e637:	c9                   	leave
   1e638:	c3                   	ret

000000000001e639 <_ZSt8_DestroyIPP17VkDescriptorSet_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1e639:	55                   	push   %rbp
   1e63a:	48 89 e5             	mov    %rsp,%rbp
   1e63d:	48 83 ec 10          	sub    $0x10,%rsp
   1e641:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e645:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1e649:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e651:	48 89 d6             	mov    %rdx,%rsi
   1e654:	48 89 c7             	mov    %rax,%rdi
   1e657:	e8 b5 19 00 00       	call   20011 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkDescriptorSet_TEEvT_S5_>
    }
   1e65c:	90                   	nop
   1e65d:	c9                   	leave
   1e65e:	c3                   	ret

000000000001e65f <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   1e65f:	55                   	push   %rbp
   1e660:	48 89 e5             	mov    %rsp,%rbp
   1e663:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1e667:	90                   	nop
   1e668:	5d                   	pop    %rbp
   1e669:	c3                   	ret

000000000001e66a <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1e66a:	55                   	push   %rbp
   1e66b:	48 89 e5             	mov    %rsp,%rbp
   1e66e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1e676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e67a:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
   1e67e:	5d                   	pop    %rbp
   1e67f:	c3                   	ret

000000000001e680 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1Effff>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(T _x, T _y, T _z, T _w)
   1e680:	55                   	push   %rbp
   1e681:	48 89 e5             	mov    %rsp,%rbp
   1e684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e688:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
   1e68d:	f3 0f 11 4d f0       	movss  %xmm1,-0x10(%rbp)
   1e692:	f3 0f 11 55 ec       	movss  %xmm2,-0x14(%rbp)
   1e697:	f3 0f 11 5d e8       	movss  %xmm3,-0x18(%rbp)
		: x(_x), y(_y), z(_z), w(_w)
   1e69c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e6a0:	f3 0f 10 45 f4       	movss  -0xc(%rbp),%xmm0
   1e6a5:	f3 0f 11 00          	movss  %xmm0,(%rax)
   1e6a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e6ad:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   1e6b2:	f3 0f 11 40 04       	movss  %xmm0,0x4(%rax)
   1e6b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e6bb:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
   1e6c0:	f3 0f 11 40 08       	movss  %xmm0,0x8(%rax)
   1e6c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e6c9:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
   1e6ce:	f3 0f 11 40 0c       	movss  %xmm0,0xc(%rax)
	{}
   1e6d3:	90                   	nop
   1e6d4:	5d                   	pop    %rbp
   1e6d5:	c3                   	ret

000000000001e6d6 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1e6d6:	55                   	push   %rbp
   1e6d7:	48 89 e5             	mov    %rsp,%rbp
   1e6da:	48 83 ec 30          	sub    $0x30,%rsp
   1e6de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e6e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1e6e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1e6ea:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1e6ee:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1e6f2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1e6f6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1e6fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e6fe:	48 89 ce             	mov    %rcx,%rsi
   1e701:	48 89 c7             	mov    %rax,%rdi
   1e704:	e8 17 19 00 00       	call   20020 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   1e709:	c9                   	leave
   1e70a:	c3                   	ret

000000000001e70b <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1e70b:	55                   	push   %rbp
   1e70c:	48 89 e5             	mov    %rsp,%rbp
   1e70f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e713:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e717:	90                   	nop
   1e718:	5d                   	pop    %rbp
   1e719:	c3                   	ret

000000000001e71a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1e71a:	55                   	push   %rbp
   1e71b:	48 89 e5             	mov    %rsp,%rbp
   1e71e:	48 83 ec 10          	sub    $0x10,%rsp
   1e722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1e726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e72a:	48 89 c7             	mov    %rax,%rdi
   1e72d:	e8 1c 19 00 00       	call   2004e <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1e732:	48 89 c7             	mov    %rax,%rdi
   1e735:	e8 bf e2 fe ff       	call   c9f9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   1e73a:	c9                   	leave
   1e73b:	c3                   	ret

000000000001e73c <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   1e73c:	55                   	push   %rbp
   1e73d:	48 89 e5             	mov    %rsp,%rbp
   1e740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e744:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   1e748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e74c:	48 8b 10             	mov    (%rax),%rdx
   1e74f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e753:	48 8b 00             	mov    (%rax),%rax
   1e756:	48 39 c2             	cmp    %rax,%rdx
   1e759:	73 06                	jae    1e761 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   1e75b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e75f:	eb 04                	jmp    1e765 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   1e761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   1e765:	5d                   	pop    %rbp
   1e766:	c3                   	ret

000000000001e767 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1e767:	55                   	push   %rbp
   1e768:	48 89 e5             	mov    %rsp,%rbp
   1e76b:	41 54                	push   %r12
   1e76d:	53                   	push   %rbx
   1e76e:	48 83 ec 20          	sub    $0x20,%rsp
   1e772:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e776:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1e77a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1e77e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   1e782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e786:	48 89 c7             	mov    %rax,%rdi
   1e789:	e8 ce 18 00 00       	call   2005c <_ZSt12__niter_baseIPPKcET_S3_>
   1e78e:	49 89 c4             	mov    %rax,%r12
   1e791:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e795:	48 89 c7             	mov    %rax,%rdi
   1e798:	e8 bf 18 00 00       	call   2005c <_ZSt12__niter_baseIPPKcET_S3_>
   1e79d:	48 89 c3             	mov    %rax,%rbx
   1e7a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e7a4:	48 89 c7             	mov    %rax,%rdi
   1e7a7:	e8 b0 18 00 00       	call   2005c <_ZSt12__niter_baseIPPKcET_S3_>
   1e7ac:	48 89 c7             	mov    %rax,%rdi
   1e7af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e7b3:	48 89 c1             	mov    %rax,%rcx
   1e7b6:	4c 89 e2             	mov    %r12,%rdx
   1e7b9:	48 89 de             	mov    %rbx,%rsi
   1e7bc:	e8 a9 18 00 00       	call   2006a <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   1e7c1:	48 83 c4 20          	add    $0x20,%rsp
   1e7c5:	5b                   	pop    %rbx
   1e7c6:	41 5c                	pop    %r12
   1e7c8:	5d                   	pop    %rbp
   1e7c9:	c3                   	ret

000000000001e7ca <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   1e7ca:	55                   	push   %rbp
   1e7cb:	48 89 e5             	mov    %rsp,%rbp
   1e7ce:	48 83 ec 10          	sub    $0x10,%rsp
   1e7d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e7d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   1e7da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e7de:	48 89 c7             	mov    %rax,%rdi
   1e7e1:	e8 ee a7 ff ff       	call   18fd4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1e7e6:	48 89 c1             	mov    %rax,%rcx
   1e7e9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1e7ed:	48 8b 01             	mov    (%rcx),%rax
   1e7f0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   1e7f4:	48 89 06             	mov    %rax,(%rsi)
   1e7f7:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   1e7fb:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1e7ff:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   1e803:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   1e807:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   1e80b:	90                   	nop
   1e80c:	c9                   	leave
   1e80d:	c3                   	ret

000000000001e80e <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1e80e:	55                   	push   %rbp
   1e80f:	48 89 e5             	mov    %rsp,%rbp
   1e812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1e816:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e81a:	5d                   	pop    %rbp
   1e81b:	c3                   	ret

000000000001e81c <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e81c:	55                   	push   %rbp
   1e81d:	48 89 e5             	mov    %rsp,%rbp
   1e820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e828:	5d                   	pop    %rbp
   1e829:	c3                   	ret

000000000001e82a <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1e82a:	55                   	push   %rbp
   1e82b:	48 89 e5             	mov    %rsp,%rbp
   1e82e:	53                   	push   %rbx
   1e82f:	48 83 ec 18          	sub    $0x18,%rsp
   1e833:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e837:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1e83b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e83f:	48 89 c6             	mov    %rax,%rsi
   1e842:	bf 1c 00 00 00       	mov    $0x1c,%edi
   1e847:	e8 1c 90 fe ff       	call   7868 <_ZnwmPv>
   1e84c:	48 89 c3             	mov    %rax,%rbx
   1e84f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e853:	48 89 c7             	mov    %rax,%rdi
   1e856:	e8 c1 ff ff ff       	call   1e81c <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   1e85b:	48 89 c1             	mov    %rax,%rcx
   1e85e:	48 8b 01             	mov    (%rcx),%rax
   1e861:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   1e865:	48 89 03             	mov    %rax,(%rbx)
   1e868:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1e86c:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1e870:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   1e874:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   1e878:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   1e87c:	90                   	nop
   1e87d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e881:	c9                   	leave
   1e882:	c3                   	ret
   1e883:	90                   	nop

000000000001e884 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   1e884:	55                   	push   %rbp
   1e885:	48 89 e5             	mov    %rsp,%rbp
   1e888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   1e88c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e890:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   1e894:	90                   	nop
   1e895:	5d                   	pop    %rbp
   1e896:	c3                   	ret
   1e897:	90                   	nop

000000000001e898 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1e898:	55                   	push   %rbp
   1e899:	48 89 e5             	mov    %rsp,%rbp
   1e89c:	53                   	push   %rbx
   1e89d:	48 83 ec 18          	sub    $0x18,%rsp
   1e8a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e8a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   1e8a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e8ad:	48 89 c7             	mov    %rax,%rdi
   1e8b0:	e8 37 de ff ff       	call   1c6ec <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1e8b5:	48 89 c3             	mov    %rax,%rbx
   1e8b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e8bc:	48 89 c7             	mov    %rax,%rdi
   1e8bf:	e8 0a 18 00 00       	call   200ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1e8c4:	48 89 de             	mov    %rbx,%rsi
   1e8c7:	48 89 c7             	mov    %rax,%rdi
   1e8ca:	e8 0d 18 00 00       	call   200dc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   1e8cf:	90                   	nop
   1e8d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e8d4:	c9                   	leave
   1e8d5:	c3                   	ret

000000000001e8d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1e8d6:	55                   	push   %rbp
   1e8d7:	48 89 e5             	mov    %rsp,%rbp
   1e8da:	48 83 ec 10          	sub    $0x10,%rsp
   1e8de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e8e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   1e8e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e8ea:	48 89 c7             	mov    %rax,%rdi
   1e8ed:	e8 dc 17 00 00       	call   200ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1e8f2:	48 89 c1             	mov    %rax,%rcx
   1e8f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e8f9:	ba 01 00 00 00       	mov    $0x1,%edx
   1e8fe:	48 89 c6             	mov    %rax,%rsi
   1e901:	48 89 cf             	mov    %rcx,%rdi
   1e904:	e8 f9 17 00 00       	call   20102 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   1e909:	90                   	nop
   1e90a:	c9                   	leave
   1e90b:	c3                   	ret

000000000001e90c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   1e90c:	55                   	push   %rbp
   1e90d:	48 89 e5             	mov    %rsp,%rbp
   1e910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1e914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e918:	48 83 c0 08          	add    $0x8,%rax
   1e91c:	5d                   	pop    %rbp
   1e91d:	c3                   	ret

000000000001e91e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1e91e:	55                   	push   %rbp
   1e91f:	48 89 e5             	mov    %rsp,%rbp
   1e922:	53                   	push   %rbx
   1e923:	48 83 ec 38          	sub    $0x38,%rsp
   1e927:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1e92b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1e92f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1e933:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   1e937:	eb 56                	jmp    1e98f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1e939:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1e93d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e941:	48 89 c7             	mov    %rax,%rdi
   1e944:	e8 e7 03 00 00       	call   1ed30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1e949:	48 89 c1             	mov    %rax,%rcx
   1e94c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e950:	48 89 c2             	mov    %rax,%rdx
   1e953:	48 89 ce             	mov    %rcx,%rsi
   1e956:	48 89 df             	mov    %rbx,%rdi
   1e959:	e8 26 a9 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1e95e:	83 f0 01             	xor    $0x1,%eax
   1e961:	84 c0                	test   %al,%al
   1e963:	74 1a                	je     1e97f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   1e965:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e969:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1e96d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e971:	48 89 c7             	mov    %rax,%rdi
   1e974:	e8 92 dc ff ff       	call   1c60b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1e979:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1e97d:	eb 10                	jmp    1e98f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   1e97f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e983:	48 89 c7             	mov    %rax,%rdi
   1e986:	e8 6e dc ff ff       	call   1c5f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1e98b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   1e98f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1e994:	75 a3                	jne    1e939 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   1e996:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1e99a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1e99e:	48 89 d6             	mov    %rdx,%rsi
   1e9a1:	48 89 c7             	mov    %rax,%rdi
   1e9a4:	e8 69 e3 ff ff       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1e9a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1e9ad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e9b1:	c9                   	leave
   1e9b2:	c3                   	ret
   1e9b3:	90                   	nop

000000000001e9b4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   1e9b4:	55                   	push   %rbp
   1e9b5:	48 89 e5             	mov    %rsp,%rbp
   1e9b8:	48 83 ec 10          	sub    $0x10,%rsp
   1e9bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   1e9c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e9c4:	48 89 c7             	mov    %rax,%rdi
   1e9c7:	e8 64 17 00 00       	call   20130 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1e9cc:	c9                   	leave
   1e9cd:	c3                   	ret

000000000001e9ce <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   1e9ce:	55                   	push   %rbp
   1e9cf:	48 89 e5             	mov    %rsp,%rbp
   1e9d2:	53                   	push   %rbx
   1e9d3:	48 83 ec 18          	sub    $0x18,%rsp
   1e9d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e9db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   1e9df:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1e9e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e9e7:	48 89 c7             	mov    %rax,%rdi
   1e9ea:	e8 43 dd ff ff       	call   1c732 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1e9ef:	48 89 c6             	mov    %rax,%rsi
   1e9f2:	48 89 df             	mov    %rbx,%rdi
   1e9f5:	e8 44 17 00 00       	call   2013e <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   1e9fa:	90                   	nop
   1e9fb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e9ff:	c9                   	leave
   1ea00:	c3                   	ret
   1ea01:	90                   	nop

000000000001ea02 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   1ea02:	55                   	push   %rbp
   1ea03:	48 89 e5             	mov    %rsp,%rbp
   1ea06:	41 54                	push   %r12
   1ea08:	53                   	push   %rbx
   1ea09:	48 83 ec 30          	sub    $0x30,%rsp
   1ea0d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ea11:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ea15:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1ea19:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   1ea1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ea21:	48 89 c7             	mov    %rax,%rdi
   1ea24:	e8 3b 17 00 00       	call   20164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   1ea29:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   1ea2d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ea31:	48 89 c7             	mov    %rax,%rdi
   1ea34:	e8 56 dd ff ff       	call   1c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1ea39:	49 89 c4             	mov    %rax,%r12
   1ea3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ea40:	48 89 c7             	mov    %rax,%rdi
   1ea43:	e8 39 dd ff ff       	call   1c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1ea48:	48 89 c3             	mov    %rax,%rbx
   1ea4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ea4f:	48 89 c7             	mov    %rax,%rdi
   1ea52:	e8 1c dd ff ff       	call   1c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1ea57:	48 89 c2             	mov    %rax,%rdx
   1ea5a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1ea5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ea62:	4d 89 e0             	mov    %r12,%r8
   1ea65:	48 89 d9             	mov    %rbx,%rcx
   1ea68:	48 89 c7             	mov    %rax,%rdi
   1ea6b:	e8 1c 17 00 00       	call   2018c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   1ea70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1ea74:	48 83 c4 30          	add    $0x30,%rsp
   1ea78:	5b                   	pop    %rbx
   1ea79:	41 5c                	pop    %r12
   1ea7b:	5d                   	pop    %rbp
   1ea7c:	c3                   	ret
   1ea7d:	90                   	nop

000000000001ea7e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1ea7e:	55                   	push   %rbp
   1ea7f:	48 89 e5             	mov    %rsp,%rbp
   1ea82:	48 83 ec 20          	sub    $0x20,%rsp
   1ea86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   1ea8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ea8e:	48 8b 10             	mov    (%rax),%rdx
   1ea91:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1ea95:	48 89 d6             	mov    %rdx,%rsi
   1ea98:	48 89 c7             	mov    %rax,%rdi
   1ea9b:	e8 72 e2 ff ff       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1eaa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eaa4:	c9                   	leave
   1eaa5:	c3                   	ret

000000000001eaa6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1eaa6:	55                   	push   %rbp
   1eaa7:	48 89 e5             	mov    %rsp,%rbp
   1eaaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1eaae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eab2:	48 8b 40 28          	mov    0x28(%rax),%rax
   1eab6:	5d                   	pop    %rbp
   1eab7:	c3                   	ret

000000000001eab8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   1eab8:	55                   	push   %rbp
   1eab9:	48 89 e5             	mov    %rsp,%rbp
   1eabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1eac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eac4:	48 83 c0 20          	add    $0x20,%rax
   1eac8:	5d                   	pop    %rbp
   1eac9:	c3                   	ret

000000000001eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   1eaca:	55                   	push   %rbp
   1eacb:	48 89 e5             	mov    %rsp,%rbp
   1eace:	48 83 ec 10          	sub    $0x10,%rsp
   1ead2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   1ead6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eada:	48 89 c7             	mov    %rax,%rdi
   1eadd:	e8 4e 02 00 00       	call   1ed30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1eae2:	c9                   	leave
   1eae3:	c3                   	ret

000000000001eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   1eae4:	55                   	push   %rbp
   1eae5:	48 89 e5             	mov    %rsp,%rbp
   1eae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eaec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1eaf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   1eaf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1eaf8:	48 8b 10             	mov    (%rax),%rdx
   1eafb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eaff:	48 89 10             	mov    %rdx,(%rax)
   1eb02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eb06:	48 8b 10             	mov    (%rax),%rdx
   1eb09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eb0d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1eb11:	90                   	nop
   1eb12:	5d                   	pop    %rbp
   1eb13:	c3                   	ret

000000000001eb14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1eb14:	55                   	push   %rbp
   1eb15:	48 89 e5             	mov    %rsp,%rbp
   1eb18:	53                   	push   %rbx
   1eb19:	48 83 ec 78          	sub    $0x78,%rsp
   1eb1d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1eb21:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   1eb25:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1eb29:	48 89 c7             	mov    %rax,%rdi
   1eb2c:	e8 71 a6 ff ff       	call   191a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1eb31:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   1eb35:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1eb39:	48 89 c7             	mov    %rax,%rdi
   1eb3c:	e8 cb fd ff ff       	call   1e90c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1eb41:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   1eb45:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   1eb49:	eb 51                	jmp    1eb9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   1eb4b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eb4f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   1eb53:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1eb57:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eb5b:	48 89 c7             	mov    %rax,%rdi
   1eb5e:	e8 cd 01 00 00       	call   1ed30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1eb63:	48 89 c2             	mov    %rax,%rdx
   1eb66:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1eb6a:	48 89 c6             	mov    %rax,%rsi
   1eb6d:	48 89 df             	mov    %rbx,%rdi
   1eb70:	e8 0f a7 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1eb75:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1eb78:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1eb7c:	74 0e                	je     1eb8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   1eb7e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eb82:	48 89 c7             	mov    %rax,%rdi
   1eb85:	e8 81 da ff ff       	call   1c60b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1eb8a:	eb 0c                	jmp    1eb98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   1eb8c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eb90:	48 89 c7             	mov    %rax,%rdi
   1eb93:	e8 61 da ff ff       	call   1c5f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1eb98:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   1eb9c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1eba0:	48 85 c0             	test   %rax,%rax
   1eba3:	75 a6                	jne    1eb4b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   1eba5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1eba9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ebad:	48 89 d6             	mov    %rdx,%rsi
   1ebb0:	48 89 c7             	mov    %rax,%rdi
   1ebb3:	e8 5a e1 ff ff       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   1ebb8:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1ebbc:	74 54                	je     1ec12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   1ebbe:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1ebc2:	48 89 c7             	mov    %rax,%rdi
   1ebc5:	e8 94 16 00 00       	call   2025e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   1ebca:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1ebce:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1ebd2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ebd6:	48 89 d6             	mov    %rdx,%rsi
   1ebd9:	48 89 c7             	mov    %rax,%rdi
   1ebdc:	e8 47 a6 ff ff       	call   19228 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   1ebe1:	84 c0                	test   %al,%al
   1ebe3:	74 21                	je     1ec06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   1ebe5:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1ebe9:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1ebed:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1ebf1:	48 89 ce             	mov    %rcx,%rsi
   1ebf4:	48 89 c7             	mov    %rax,%rdi
   1ebf7:	e8 8c 16 00 00       	call   20288 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1ebfc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1ec00:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1ec04:	eb 7d                	jmp    1ec83 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   1ec06:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ec0a:	48 89 c7             	mov    %rax,%rdi
   1ec0d:	e8 ce 00 00 00       	call   1ece0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   1ec12:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1ec16:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ec1a:	48 89 c7             	mov    %rax,%rdi
   1ec1d:	e8 a8 fe ff ff       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1ec22:	48 89 c1             	mov    %rax,%rcx
   1ec25:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ec29:	48 89 c2             	mov    %rax,%rdx
   1ec2c:	48 89 ce             	mov    %rcx,%rsi
   1ec2f:	48 89 df             	mov    %rbx,%rdi
   1ec32:	e8 4d a6 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1ec37:	84 c0                	test   %al,%al
   1ec39:	74 21                	je     1ec5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   1ec3b:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1ec3f:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1ec43:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1ec47:	48 89 ce             	mov    %rcx,%rsi
   1ec4a:	48 89 c7             	mov    %rax,%rdi
   1ec4d:	e8 36 16 00 00       	call   20288 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1ec52:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ec56:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ec5a:	eb 27                	jmp    1ec83 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   1ec5c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1ec63:	00 
   1ec64:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1ec68:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   1ec6c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ec70:	48 89 ce             	mov    %rcx,%rsi
   1ec73:	48 89 c7             	mov    %rax,%rdi
   1ec76:	e8 69 fe ff ff       	call   1eae4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1ec7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ec7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1ec83:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ec87:	c9                   	leave
   1ec88:	c3                   	ret
   1ec89:	90                   	nop

000000000001ec8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   1ec8a:	55                   	push   %rbp
   1ec8b:	48 89 e5             	mov    %rsp,%rbp
   1ec8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1ec92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ec96:	48 83 c0 18          	add    $0x18,%rax
   1ec9a:	5d                   	pop    %rbp
   1ec9b:	c3                   	ret

000000000001ec9c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1ec9c:	55                   	push   %rbp
   1ec9d:	48 89 e5             	mov    %rsp,%rbp
   1eca0:	48 83 ec 20          	sub    $0x20,%rsp
   1eca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eca8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ecac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1ecb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ecb4:	48 89 c7             	mov    %rax,%rdi
   1ecb7:	e8 10 16 00 00       	call   202cc <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1ecbc:	48 8b 10             	mov    (%rax),%rdx
   1ecbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ecc3:	48 89 10             	mov    %rdx,(%rax)
   1ecc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ecca:	48 89 c7             	mov    %rax,%rdi
   1eccd:	e8 fa 15 00 00       	call   202cc <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1ecd2:	48 8b 10             	mov    (%rax),%rdx
   1ecd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ecd9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1ecdd:	90                   	nop
   1ecde:	c9                   	leave
   1ecdf:	c3                   	ret

000000000001ece0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   1ece0:	55                   	push   %rbp
   1ece1:	48 89 e5             	mov    %rsp,%rbp
   1ece4:	48 83 ec 10          	sub    $0x10,%rsp
   1ece8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   1ecec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ecf0:	48 8b 00             	mov    (%rax),%rax
   1ecf3:	48 89 c7             	mov    %rax,%rdi
   1ecf6:	e8 85 68 fe ff       	call   5580 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   1ecfb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ecff:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1ed02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1ed06:	c9                   	leave
   1ed07:	c3                   	ret

000000000001ed08 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1ed08:	55                   	push   %rbp
   1ed09:	48 89 e5             	mov    %rsp,%rbp
   1ed0c:	48 83 ec 10          	sub    $0x10,%rsp
   1ed10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   1ed14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ed18:	48 8b 00             	mov    (%rax),%rax
   1ed1b:	48 89 c7             	mov    %rax,%rdi
   1ed1e:	e8 fd 65 fe ff       	call   5320 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   1ed23:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1ed27:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1ed2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1ed2e:	c9                   	leave
   1ed2f:	c3                   	ret

000000000001ed30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   1ed30:	55                   	push   %rbp
   1ed31:	48 89 e5             	mov    %rsp,%rbp
   1ed34:	48 83 ec 20          	sub    $0x20,%rsp
   1ed38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   1ed3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ed40:	48 89 c7             	mov    %rax,%rdi
   1ed43:	e8 92 15 00 00       	call   202da <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1ed48:	48 89 c2             	mov    %rax,%rdx
   1ed4b:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1ed4f:	48 89 d6             	mov    %rdx,%rsi
   1ed52:	48 89 c7             	mov    %rax,%rdi
   1ed55:	e8 9e 15 00 00       	call   202f8 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   1ed5a:	c9                   	leave
   1ed5b:	c3                   	ret

000000000001ed5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1ed5c:	55                   	push   %rbp
   1ed5d:	48 89 e5             	mov    %rsp,%rbp
   1ed60:	41 54                	push   %r12
   1ed62:	53                   	push   %rbx
   1ed63:	48 83 ec 30          	sub    $0x30,%rsp
   1ed67:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ed6b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ed6f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1ed73:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   1ed77:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1ed7c:	75 43                	jne    1edc1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   1ed7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ed82:	48 89 c7             	mov    %rax,%rdi
   1ed85:	e8 82 fb ff ff       	call   1e90c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1ed8a:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1ed8e:	74 31                	je     1edc1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1ed90:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1ed94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ed98:	48 89 c7             	mov    %rax,%rdi
   1ed9b:	e8 2a fd ff ff       	call   1eaca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1eda0:	49 89 c4             	mov    %rax,%r12
   1eda3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1eda7:	48 89 c7             	mov    %rax,%rdi
   1edaa:	e8 81 ff ff ff       	call   1ed30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1edaf:	4c 89 e2             	mov    %r12,%rdx
   1edb2:	48 89 c6             	mov    %rax,%rsi
   1edb5:	48 89 df             	mov    %rbx,%rdi
   1edb8:	e8 c7 a4 ff ff       	call   19284 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1edbd:	84 c0                	test   %al,%al
   1edbf:	74 07                	je     1edc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1edc1:	b8 01 00 00 00       	mov    $0x1,%eax
   1edc6:	eb 05                	jmp    1edcd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   1edc8:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   1edcd:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1edd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1edd4:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   1edd8:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   1eddc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ede0:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   1ede4:	89 c7                	mov    %eax,%edi
   1ede6:	e8 95 62 fe ff       	call   5080 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   1edeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1edef:	48 8b 40 28          	mov    0x28(%rax),%rax
   1edf3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1edf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1edfb:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   1edff:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1ee03:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1ee07:	48 89 d6             	mov    %rdx,%rsi
   1ee0a:	48 89 c7             	mov    %rax,%rdi
   1ee0d:	e8 00 df ff ff       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1ee12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   1ee16:	48 83 c4 30          	add    $0x30,%rsp
   1ee1a:	5b                   	pop    %rbx
   1ee1b:	41 5c                	pop    %r12
   1ee1d:	5d                   	pop    %rbp
   1ee1e:	c3                   	ret
   1ee1f:	90                   	nop

000000000001ee20 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1ee20:	55                   	push   %rbp
   1ee21:	48 89 e5             	mov    %rsp,%rbp
   1ee24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1ee28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee2c:	5d                   	pop    %rbp
   1ee2d:	c3                   	ret

000000000001ee2e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1ee2e:	55                   	push   %rbp
   1ee2f:	48 89 e5             	mov    %rsp,%rbp
   1ee32:	48 83 ec 10          	sub    $0x10,%rsp
   1ee36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ee3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1ee3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1ee46:	48 89 d6             	mov    %rdx,%rsi
   1ee49:	48 89 c7             	mov    %rax,%rdi
   1ee4c:	e8 3d e4 fe ff       	call   d28e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   1ee51:	90                   	nop
   1ee52:	c9                   	leave
   1ee53:	c3                   	ret

000000000001ee54 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   1ee54:	55                   	push   %rbp
   1ee55:	48 89 e5             	mov    %rsp,%rbp
   1ee58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ee5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   1ee60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ee64:	48 8b 10             	mov    (%rax),%rdx
   1ee67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee6b:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1ee6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ee72:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1ee76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee7a:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1ee7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ee82:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1ee86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee8a:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1ee8e:	90                   	nop
   1ee8f:	5d                   	pop    %rbp
   1ee90:	c3                   	ret

000000000001ee91 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1ee91:	55                   	push   %rbp
   1ee92:	48 89 e5             	mov    %rsp,%rbp
   1ee95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1ee99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ee9d:	5d                   	pop    %rbp
   1ee9e:	c3                   	ret

000000000001ee9f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1ee9f:	55                   	push   %rbp
   1eea0:	48 89 e5             	mov    %rsp,%rbp
   1eea3:	48 83 ec 20          	sub    $0x20,%rsp
   1eea7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1eeab:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1eeb2:	ff ff 0f 
   1eeb5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1eeb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1eebd:	48 89 c7             	mov    %rax,%rdi
   1eec0:	e8 45 14 00 00       	call   2030a <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   1eec5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1eec9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1eecd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1eed1:	48 89 d6             	mov    %rdx,%rsi
   1eed4:	48 89 c7             	mov    %rax,%rdi
   1eed7:	e8 b5 7f fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1eedc:	48 8b 00             	mov    (%rax),%rax
      }
   1eedf:	c9                   	leave
   1eee0:	c3                   	ret
   1eee1:	90                   	nop

000000000001eee2 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1eee2:	55                   	push   %rbp
   1eee3:	48 89 e5             	mov    %rsp,%rbp
   1eee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1eeea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eeee:	5d                   	pop    %rbp
   1eeef:	c3                   	ret

000000000001eef0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1eef0:	55                   	push   %rbp
   1eef1:	48 89 e5             	mov    %rsp,%rbp
   1eef4:	48 83 ec 20          	sub    $0x20,%rsp
   1eef8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1eefc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1ef00:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1ef04:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1ef08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ef0c:	48 89 d6             	mov    %rdx,%rsi
   1ef0f:	48 89 c7             	mov    %rax,%rdi
   1ef12:	e8 0d 14 00 00       	call   20324 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   1ef17:	c9                   	leave
   1ef18:	c3                   	ret

000000000001ef19 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1ef19:	55                   	push   %rbp
   1ef1a:	48 89 e5             	mov    %rsp,%rbp
   1ef1d:	48 83 ec 10          	sub    $0x10,%rsp
   1ef21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ef25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1ef29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ef2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ef31:	ba 00 00 00 00       	mov    $0x0,%edx
   1ef36:	48 89 ce             	mov    %rcx,%rsi
   1ef39:	48 89 c7             	mov    %rax,%rdi
   1ef3c:	e8 41 14 00 00       	call   20382 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   1ef41:	c9                   	leave
   1ef42:	c3                   	ret

000000000001ef43 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1ef43:	55                   	push   %rbp
   1ef44:	48 89 e5             	mov    %rsp,%rbp
   1ef47:	41 54                	push   %r12
   1ef49:	53                   	push   %rbx
   1ef4a:	48 83 ec 20          	sub    $0x20,%rsp
   1ef4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ef52:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ef56:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1ef5a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1ef5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ef62:	48 89 c7             	mov    %rax,%rdi
   1ef65:	e8 79 14 00 00       	call   203e3 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1ef6a:	49 89 c4             	mov    %rax,%r12
   1ef6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ef71:	48 89 c7             	mov    %rax,%rdi
   1ef74:	e8 6a 14 00 00       	call   203e3 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1ef79:	48 89 c3             	mov    %rax,%rbx
   1ef7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ef80:	48 89 c7             	mov    %rax,%rdi
   1ef83:	e8 5b 14 00 00       	call   203e3 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1ef88:	48 89 c7             	mov    %rax,%rdi
   1ef8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1ef8f:	48 89 c1             	mov    %rax,%rcx
   1ef92:	4c 89 e2             	mov    %r12,%rdx
   1ef95:	48 89 de             	mov    %rbx,%rsi
   1ef98:	e8 54 14 00 00       	call   203f1 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1ef9d:	48 83 c4 20          	add    $0x20,%rsp
   1efa1:	5b                   	pop    %rbx
   1efa2:	41 5c                	pop    %r12
   1efa4:	5d                   	pop    %rbp
   1efa5:	c3                   	ret

000000000001efa6 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1efa6:	55                   	push   %rbp
   1efa7:	48 89 e5             	mov    %rsp,%rbp
   1efaa:	48 83 ec 10          	sub    $0x10,%rsp
   1efae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1efb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1efb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1efba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1efbe:	48 89 d6             	mov    %rdx,%rsi
   1efc1:	48 89 c7             	mov    %rax,%rdi
   1efc4:	e8 8b 14 00 00       	call   20454 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   1efc9:	90                   	nop
   1efca:	c9                   	leave
   1efcb:	c3                   	ret

000000000001efcc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1efcc:	55                   	push   %rbp
   1efcd:	48 89 e5             	mov    %rsp,%rbp
   1efd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1efd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1efd8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1efdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1efe3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1efea:	00 
   1efeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1efef:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1eff6:	00 
	{ }
   1eff7:	90                   	nop
   1eff8:	5d                   	pop    %rbp
   1eff9:	c3                   	ret

000000000001effa <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1effa:	55                   	push   %rbp
   1effb:	48 89 e5             	mov    %rsp,%rbp
   1effe:	48 83 ec 20          	sub    $0x20,%rsp
   1f002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f00a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1f00e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f012:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f01a:	48 89 ce             	mov    %rcx,%rsi
   1f01d:	48 89 c7             	mov    %rax,%rdi
   1f020:	e8 3f 14 00 00       	call   20464 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   1f025:	90                   	nop
   1f026:	c9                   	leave
   1f027:	c3                   	ret

000000000001f028 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f028:	55                   	push   %rbp
   1f029:	48 89 e5             	mov    %rsp,%rbp
   1f02c:	48 83 ec 20          	sub    $0x20,%rsp
   1f030:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f034:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   1f03b:	8e e3 00 
   1f03e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f046:	48 89 c7             	mov    %rax,%rdi
   1f049:	e8 50 14 00 00       	call   2049e <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   1f04e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1f052:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1f056:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1f05a:	48 89 d6             	mov    %rdx,%rsi
   1f05d:	48 89 c7             	mov    %rax,%rdi
   1f060:	e8 2c 7e fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1f065:	48 8b 00             	mov    (%rax),%rax
      }
   1f068:	c9                   	leave
   1f069:	c3                   	ret

000000000001f06a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1f06a:	55                   	push   %rbp
   1f06b:	48 89 e5             	mov    %rsp,%rbp
   1f06e:	48 83 ec 10          	sub    $0x10,%rsp
   1f072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f076:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1f07a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f07e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f082:	ba 00 00 00 00       	mov    $0x0,%edx
   1f087:	48 89 ce             	mov    %rcx,%rsi
   1f08a:	48 89 c7             	mov    %rax,%rdi
   1f08d:	e8 26 14 00 00       	call   204b8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   1f092:	c9                   	leave
   1f093:	c3                   	ret

000000000001f094 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1f094:	55                   	push   %rbp
   1f095:	48 89 e5             	mov    %rsp,%rbp
   1f098:	48 83 ec 30          	sub    $0x30,%rsp
   1f09c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f0a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f0a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1f0a8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1f0ac:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1f0b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f0b4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1f0b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f0bc:	48 89 ce             	mov    %rcx,%rsi
   1f0bf:	48 89 c7             	mov    %rax,%rdi
   1f0c2:	e8 5c 14 00 00       	call   20523 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   1f0c7:	c9                   	leave
   1f0c8:	c3                   	ret

000000000001f0c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1f0c9:	55                   	push   %rbp
   1f0ca:	48 89 e5             	mov    %rsp,%rbp
   1f0cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f0d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f0d5:	90                   	nop
   1f0d6:	5d                   	pop    %rbp
   1f0d7:	c3                   	ret

000000000001f0d8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f0d8:	55                   	push   %rbp
   1f0d9:	48 89 e5             	mov    %rsp,%rbp
   1f0dc:	48 83 ec 20          	sub    $0x20,%rsp
   1f0e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f0e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1f0eb:	ff ff 0f 
   1f0ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f0f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f0f6:	48 89 c7             	mov    %rax,%rdi
   1f0f9:	e8 52 14 00 00       	call   20550 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   1f0fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1f102:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1f106:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1f10a:	48 89 d6             	mov    %rdx,%rsi
   1f10d:	48 89 c7             	mov    %rax,%rdi
   1f110:	e8 7c 7d fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1f115:	48 8b 00             	mov    (%rax),%rax
      }
   1f118:	c9                   	leave
   1f119:	c3                   	ret

000000000001f11a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1f11a:	55                   	push   %rbp
   1f11b:	48 89 e5             	mov    %rsp,%rbp
   1f11e:	48 83 ec 10          	sub    $0x10,%rsp
   1f122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f126:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1f12a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f132:	48 89 d6             	mov    %rdx,%rsi
   1f135:	48 89 c7             	mov    %rax,%rdi
   1f138:	e8 5b e1 ff ff       	call   1d298 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   1f13d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f141:	48 89 c7             	mov    %rax,%rdi
   1f144:	e8 21 14 00 00       	call   2056a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1f149:	90                   	nop
   1f14a:	c9                   	leave
   1f14b:	c3                   	ret

000000000001f14c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   1f14c:	55                   	push   %rbp
   1f14d:	48 89 e5             	mov    %rsp,%rbp
   1f150:	48 83 ec 10          	sub    $0x10,%rsp
   1f154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f158:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   1f15c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f164:	48 89 d6             	mov    %rdx,%rsi
   1f167:	48 89 c7             	mov    %rax,%rdi
   1f16a:	e8 29 14 00 00       	call   20598 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   1f16f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1f173:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1f176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f17a:	48 8b 10             	mov    (%rax),%rdx
   1f17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f181:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1f185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f189:	48 8b 00             	mov    (%rax),%rax
   1f18c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f190:	48 c1 e2 03          	shl    $0x3,%rdx
   1f194:	48 01 c2             	add    %rax,%rdx
   1f197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f19b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1f19f:	90                   	nop
   1f1a0:	c9                   	leave
   1f1a1:	c3                   	ret

000000000001f1a2 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1f1a2:	55                   	push   %rbp
   1f1a3:	48 89 e5             	mov    %rsp,%rbp
   1f1a6:	48 83 ec 20          	sub    $0x20,%rsp
   1f1aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f1ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f1b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1f1b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f1ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f1be:	48 89 d6             	mov    %rdx,%rsi
   1f1c1:	48 89 c7             	mov    %rax,%rdi
   1f1c4:	e8 02 14 00 00       	call   205cb <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   1f1c9:	c9                   	leave
   1f1ca:	c3                   	ret
   1f1cb:	90                   	nop

000000000001f1cc <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1f1cc:	55                   	push   %rbp
   1f1cd:	48 89 e5             	mov    %rsp,%rbp
   1f1d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f1d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f1d8:	90                   	nop
   1f1d9:	5d                   	pop    %rbp
   1f1da:	c3                   	ret

000000000001f1db <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1f1db:	55                   	push   %rbp
   1f1dc:	48 89 e5             	mov    %rsp,%rbp
   1f1df:	48 83 ec 20          	sub    $0x20,%rsp
   1f1e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f1e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f1eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1f1ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f1f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f1f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f1fb:	48 89 ce             	mov    %rcx,%rsi
   1f1fe:	48 89 c7             	mov    %rax,%rdi
   1f201:	e8 ee 13 00 00       	call   205f4 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   1f206:	90                   	nop
   1f207:	c9                   	leave
   1f208:	c3                   	ret

000000000001f209 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   1f209:	55                   	push   %rbp
   1f20a:	48 89 e5             	mov    %rsp,%rbp
   1f20d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f211:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f215:	90                   	nop
   1f216:	5d                   	pop    %rbp
   1f217:	c3                   	ret

000000000001f218 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f218:	55                   	push   %rbp
   1f219:	48 89 e5             	mov    %rsp,%rbp
   1f21c:	48 83 ec 20          	sub    $0x20,%rsp
   1f220:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f224:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1f22b:	ff ff 0f 
   1f22e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f236:	48 89 c7             	mov    %rax,%rdi
   1f239:	e8 e7 13 00 00       	call   20625 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   1f23e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1f242:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1f246:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1f24a:	48 89 d6             	mov    %rdx,%rsi
   1f24d:	48 89 c7             	mov    %rax,%rdi
   1f250:	e8 3c 7c fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1f255:	48 8b 00             	mov    (%rax),%rax
      }
   1f258:	c9                   	leave
   1f259:	c3                   	ret

000000000001f25a <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1f25a:	55                   	push   %rbp
   1f25b:	48 89 e5             	mov    %rsp,%rbp
   1f25e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1f262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f266:	5d                   	pop    %rbp
   1f267:	c3                   	ret

000000000001f268 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1f268:	55                   	push   %rbp
   1f269:	48 89 e5             	mov    %rsp,%rbp
   1f26c:	48 83 ec 20          	sub    $0x20,%rsp
   1f270:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f274:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1f278:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1f27c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f280:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f284:	48 89 d6             	mov    %rdx,%rsi
   1f287:	48 89 c7             	mov    %rax,%rdi
   1f28a:	e8 b0 13 00 00       	call   2063f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   1f28f:	c9                   	leave
   1f290:	c3                   	ret

000000000001f291 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1f291:	55                   	push   %rbp
   1f292:	48 89 e5             	mov    %rsp,%rbp
   1f295:	48 83 ec 10          	sub    $0x10,%rsp
   1f299:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f29d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1f2a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f2a9:	ba 00 00 00 00       	mov    $0x0,%edx
   1f2ae:	48 89 ce             	mov    %rcx,%rsi
   1f2b1:	48 89 c7             	mov    %rax,%rdi
   1f2b4:	e8 e3 13 00 00       	call   2069c <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   1f2b9:	c9                   	leave
   1f2ba:	c3                   	ret

000000000001f2bb <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1f2bb:	55                   	push   %rbp
   1f2bc:	48 89 e5             	mov    %rsp,%rbp
   1f2bf:	41 54                	push   %r12
   1f2c1:	53                   	push   %rbx
   1f2c2:	48 83 ec 20          	sub    $0x20,%rsp
   1f2c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f2ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f2ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1f2d2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1f2d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f2da:	48 89 c7             	mov    %rax,%rdi
   1f2dd:	e8 1b 14 00 00       	call   206fd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1f2e2:	49 89 c4             	mov    %rax,%r12
   1f2e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f2e9:	48 89 c7             	mov    %rax,%rdi
   1f2ec:	e8 0c 14 00 00       	call   206fd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1f2f1:	48 89 c3             	mov    %rax,%rbx
   1f2f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f2f8:	48 89 c7             	mov    %rax,%rdi
   1f2fb:	e8 fd 13 00 00       	call   206fd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   1f300:	48 89 c7             	mov    %rax,%rdi
   1f303:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f307:	48 89 c1             	mov    %rax,%rcx
   1f30a:	4c 89 e2             	mov    %r12,%rdx
   1f30d:	48 89 de             	mov    %rbx,%rsi
   1f310:	e8 f6 13 00 00       	call   2070b <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1f315:	48 83 c4 20          	add    $0x20,%rsp
   1f319:	5b                   	pop    %rbx
   1f31a:	41 5c                	pop    %r12
   1f31c:	5d                   	pop    %rbp
   1f31d:	c3                   	ret

000000000001f31e <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1f31e:	55                   	push   %rbp
   1f31f:	48 89 e5             	mov    %rsp,%rbp
   1f322:	48 83 ec 10          	sub    $0x10,%rsp
   1f326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f32a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1f32e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f336:	48 89 d6             	mov    %rdx,%rsi
   1f339:	48 89 c7             	mov    %rax,%rdi
   1f33c:	e8 2d 14 00 00       	call   2076e <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   1f341:	90                   	nop
   1f342:	c9                   	leave
   1f343:	c3                   	ret

000000000001f344 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1f344:	55                   	push   %rbp
   1f345:	48 89 e5             	mov    %rsp,%rbp
   1f348:	48 83 ec 30          	sub    $0x30,%rsp
   1f34c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f350:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f354:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1f358:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1f35c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1f360:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1f364:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1f368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f36c:	48 89 ce             	mov    %rcx,%rsi
   1f36f:	48 89 c7             	mov    %rax,%rdi
   1f372:	e8 06 14 00 00       	call   2077d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   1f377:	c9                   	leave
   1f378:	c3                   	ret

000000000001f379 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   1f379:	55                   	push   %rbp
   1f37a:	48 89 e5             	mov    %rsp,%rbp
   1f37d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f381:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1f385:	90                   	nop
   1f386:	5d                   	pop    %rbp
   1f387:	c3                   	ret

000000000001f388 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1f388:	55                   	push   %rbp
   1f389:	48 89 e5             	mov    %rsp,%rbp
   1f38c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1f390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f394:	5d                   	pop    %rbp
   1f395:	c3                   	ret

000000000001f396 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1f396:	55                   	push   %rbp
   1f397:	48 89 e5             	mov    %rsp,%rbp
   1f39a:	48 83 ec 10          	sub    $0x10,%rsp
   1f39e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f3a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1f3a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f3aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1f3ae:	48 89 d6             	mov    %rdx,%rsi
   1f3b1:	48 89 c7             	mov    %rax,%rdi
   1f3b4:	e8 4d 88 fe ff       	call   7c06 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
   1f3b9:	90                   	nop
   1f3ba:	c9                   	leave
   1f3bb:	c3                   	ret

000000000001f3bc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   1f3bc:	55                   	push   %rbp
   1f3bd:	48 89 e5             	mov    %rsp,%rbp
   1f3c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f3c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   1f3c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f3cc:	48 8b 10             	mov    (%rax),%rdx
   1f3cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f3d3:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1f3d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f3da:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1f3de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f3e2:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1f3e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f3ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f3ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f3f2:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1f3f6:	90                   	nop
   1f3f7:	5d                   	pop    %rbp
   1f3f8:	c3                   	ret

000000000001f3f9 <_ZSt4moveIRSaIP17VkCommandBuffer_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1f3f9:	55                   	push   %rbp
   1f3fa:	48 89 e5             	mov    %rsp,%rbp
   1f3fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1f401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f405:	5d                   	pop    %rbp
   1f406:	c3                   	ret

000000000001f407 <_ZNSt6vectorIP10VkBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f407:	55                   	push   %rbp
   1f408:	48 89 e5             	mov    %rsp,%rbp
   1f40b:	48 83 ec 20          	sub    $0x20,%rsp
   1f40f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f413:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1f41a:	ff ff 0f 
   1f41d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f425:	48 89 c7             	mov    %rax,%rdi
   1f428:	e8 7d 13 00 00       	call   207aa <_ZNSt16allocator_traitsISaIP10VkBuffer_TEE8max_sizeERKS2_>
   1f42d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1f431:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1f435:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1f439:	48 89 d6             	mov    %rdx,%rsi
   1f43c:	48 89 c7             	mov    %rax,%rdi
   1f43f:	e8 4d 7a fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1f444:	48 8b 00             	mov    (%rax),%rax
      }
   1f447:	c9                   	leave
   1f448:	c3                   	ret
   1f449:	90                   	nop

000000000001f44a <_ZNKSt12_Vector_baseIP10VkBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1f44a:	55                   	push   %rbp
   1f44b:	48 89 e5             	mov    %rsp,%rbp
   1f44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1f452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f456:	5d                   	pop    %rbp
   1f457:	c3                   	ret

000000000001f458 <_ZSt25__uninitialized_default_nIPP10VkBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1f458:	55                   	push   %rbp
   1f459:	48 89 e5             	mov    %rsp,%rbp
   1f45c:	48 83 ec 20          	sub    $0x20,%rsp
   1f460:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f464:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1f468:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1f46c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f470:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f474:	48 89 d6             	mov    %rdx,%rsi
   1f477:	48 89 c7             	mov    %rax,%rdi
   1f47a:	e8 45 13 00 00       	call   207c4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP10VkBuffer_TmEET_S5_T0_>
    }
   1f47f:	c9                   	leave
   1f480:	c3                   	ret

000000000001f481 <_ZNSt16allocator_traitsISaIP10VkBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1f481:	55                   	push   %rbp
   1f482:	48 89 e5             	mov    %rsp,%rbp
   1f485:	48 83 ec 10          	sub    $0x10,%rsp
   1f489:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f48d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1f491:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f499:	ba 00 00 00 00       	mov    $0x0,%edx
   1f49e:	48 89 ce             	mov    %rcx,%rsi
   1f4a1:	48 89 c7             	mov    %rax,%rdi
   1f4a4:	e8 79 13 00 00       	call   20822 <_ZNSt15__new_allocatorIP10VkBuffer_TE8allocateEmPKv>
   1f4a9:	c9                   	leave
   1f4aa:	c3                   	ret

000000000001f4ab <_ZSt12__relocate_aIPP10VkBuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1f4ab:	55                   	push   %rbp
   1f4ac:	48 89 e5             	mov    %rsp,%rbp
   1f4af:	41 54                	push   %r12
   1f4b1:	53                   	push   %rbx
   1f4b2:	48 83 ec 20          	sub    $0x20,%rsp
   1f4b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f4ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f4be:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1f4c2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1f4c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f4ca:	48 89 c7             	mov    %rax,%rdi
   1f4cd:	e8 b1 13 00 00       	call   20883 <_ZSt12__niter_baseIPP10VkBuffer_TET_S3_>
   1f4d2:	49 89 c4             	mov    %rax,%r12
   1f4d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f4d9:	48 89 c7             	mov    %rax,%rdi
   1f4dc:	e8 a2 13 00 00       	call   20883 <_ZSt12__niter_baseIPP10VkBuffer_TET_S3_>
   1f4e1:	48 89 c3             	mov    %rax,%rbx
   1f4e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f4e8:	48 89 c7             	mov    %rax,%rdi
   1f4eb:	e8 93 13 00 00       	call   20883 <_ZSt12__niter_baseIPP10VkBuffer_TET_S3_>
   1f4f0:	48 89 c7             	mov    %rax,%rdi
   1f4f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f4f7:	48 89 c1             	mov    %rax,%rcx
   1f4fa:	4c 89 e2             	mov    %r12,%rdx
   1f4fd:	48 89 de             	mov    %rbx,%rsi
   1f500:	e8 8c 13 00 00       	call   20891 <_ZSt14__relocate_a_1IP10VkBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1f505:	48 83 c4 20          	add    $0x20,%rsp
   1f509:	5b                   	pop    %rbx
   1f50a:	41 5c                	pop    %r12
   1f50c:	5d                   	pop    %rbp
   1f50d:	c3                   	ret

000000000001f50e <_ZNSt6vectorIP16VkDeviceMemory_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f50e:	55                   	push   %rbp
   1f50f:	48 89 e5             	mov    %rsp,%rbp
   1f512:	48 83 ec 20          	sub    $0x20,%rsp
   1f516:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f51a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1f521:	ff ff 0f 
   1f524:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f52c:	48 89 c7             	mov    %rax,%rdi
   1f52f:	e8 c0 13 00 00       	call   208f4 <_ZNSt16allocator_traitsISaIP16VkDeviceMemory_TEE8max_sizeERKS2_>
   1f534:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1f538:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1f53c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1f540:	48 89 d6             	mov    %rdx,%rsi
   1f543:	48 89 c7             	mov    %rax,%rdi
   1f546:	e8 46 79 fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1f54b:	48 8b 00             	mov    (%rax),%rax
      }
   1f54e:	c9                   	leave
   1f54f:	c3                   	ret

000000000001f550 <_ZNKSt12_Vector_baseIP16VkDeviceMemory_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1f550:	55                   	push   %rbp
   1f551:	48 89 e5             	mov    %rsp,%rbp
   1f554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1f558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f55c:	5d                   	pop    %rbp
   1f55d:	c3                   	ret

000000000001f55e <_ZSt25__uninitialized_default_nIPP16VkDeviceMemory_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1f55e:	55                   	push   %rbp
   1f55f:	48 89 e5             	mov    %rsp,%rbp
   1f562:	48 83 ec 20          	sub    $0x20,%rsp
   1f566:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f56a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1f56e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1f572:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f576:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f57a:	48 89 d6             	mov    %rdx,%rsi
   1f57d:	48 89 c7             	mov    %rax,%rdi
   1f580:	e8 89 13 00 00       	call   2090e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP16VkDeviceMemory_TmEET_S5_T0_>
    }
   1f585:	c9                   	leave
   1f586:	c3                   	ret

000000000001f587 <_ZNSt16allocator_traitsISaIP16VkDeviceMemory_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1f587:	55                   	push   %rbp
   1f588:	48 89 e5             	mov    %rsp,%rbp
   1f58b:	48 83 ec 10          	sub    $0x10,%rsp
   1f58f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f593:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1f597:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f59b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f59f:	ba 00 00 00 00       	mov    $0x0,%edx
   1f5a4:	48 89 ce             	mov    %rcx,%rsi
   1f5a7:	48 89 c7             	mov    %rax,%rdi
   1f5aa:	e8 bd 13 00 00       	call   2096c <_ZNSt15__new_allocatorIP16VkDeviceMemory_TE8allocateEmPKv>
   1f5af:	c9                   	leave
   1f5b0:	c3                   	ret

000000000001f5b1 <_ZSt12__relocate_aIPP16VkDeviceMemory_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1f5b1:	55                   	push   %rbp
   1f5b2:	48 89 e5             	mov    %rsp,%rbp
   1f5b5:	41 54                	push   %r12
   1f5b7:	53                   	push   %rbx
   1f5b8:	48 83 ec 20          	sub    $0x20,%rsp
   1f5bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f5c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f5c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1f5c8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1f5cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f5d0:	48 89 c7             	mov    %rax,%rdi
   1f5d3:	e8 f5 13 00 00       	call   209cd <_ZSt12__niter_baseIPP16VkDeviceMemory_TET_S3_>
   1f5d8:	49 89 c4             	mov    %rax,%r12
   1f5db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f5df:	48 89 c7             	mov    %rax,%rdi
   1f5e2:	e8 e6 13 00 00       	call   209cd <_ZSt12__niter_baseIPP16VkDeviceMemory_TET_S3_>
   1f5e7:	48 89 c3             	mov    %rax,%rbx
   1f5ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f5ee:	48 89 c7             	mov    %rax,%rdi
   1f5f1:	e8 d7 13 00 00       	call   209cd <_ZSt12__niter_baseIPP16VkDeviceMemory_TET_S3_>
   1f5f6:	48 89 c7             	mov    %rax,%rdi
   1f5f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f5fd:	48 89 c1             	mov    %rax,%rcx
   1f600:	4c 89 e2             	mov    %r12,%rdx
   1f603:	48 89 de             	mov    %rbx,%rsi
   1f606:	e8 d0 13 00 00       	call   209db <_ZSt14__relocate_a_1IP16VkDeviceMemory_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1f60b:	48 83 c4 20          	add    $0x20,%rsp
   1f60f:	5b                   	pop    %rbx
   1f610:	41 5c                	pop    %r12
   1f612:	5d                   	pop    %rbp
   1f613:	c3                   	ret

000000000001f614 <_ZNSt6chrono8durationIfSt5ratioILl1ELl1EEEC1IfvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   1f614:	55                   	push   %rbp
   1f615:	48 89 e5             	mov    %rsp,%rbp
   1f618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f61c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   1f620:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f624:	f3 0f 10 00          	movss  (%rax),%xmm0
   1f628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f62c:	f3 0f 11 00          	movss  %xmm0,(%rax)
   1f630:	90                   	nop
   1f631:	5d                   	pop    %rbp
   1f632:	c3                   	ret

000000000001f633 <_ZN3glm11inversesqrtIfEET_S1_>:
		return detail::compute_sqrt<L, T, Q, detail::is_aligned<Q>::value>::call(x);
	}

	// inversesqrt
	template<typename genType>
	GLM_FUNC_QUALIFIER genType inversesqrt(genType x)
   1f633:	55                   	push   %rbp
   1f634:	48 89 e5             	mov    %rsp,%rbp
   1f637:	48 83 ec 10          	sub    $0x10,%rsp
   1f63b:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
	{
		return static_cast<genType>(1) / sqrt(x);
   1f640:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1f643:	66 0f 6e c0          	movd   %eax,%xmm0
   1f647:	e8 1a 5e ff ff       	call   15466 <_ZSt4sqrtf>
   1f64c:	f3 0f 10 0d 98 74 00 	movss  0x7498(%rip),%xmm1        # 26aec <_ZZN9VulkanApp6renderEvE11submitCount+0x7d0>
   1f653:	00 
   1f654:	f3 0f 5e c8          	divss  %xmm0,%xmm1
   1f658:	0f 28 c1             	movaps %xmm1,%xmm0
	}
   1f65b:	c9                   	leave
   1f65c:	c3                   	ret

000000000001f65d <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S3_>:
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, T scalar)
   1f65d:	55                   	push   %rbp
   1f65e:	48 89 e5             	mov    %rsp,%rbp
   1f661:	48 83 ec 40          	sub    $0x40,%rsp
   1f665:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1f669:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
			v.z * scalar);
   1f66e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f672:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
		return vec<3, T, Q>(
   1f677:	0f 28 d0             	movaps %xmm0,%xmm2
   1f67a:	f3 0f 59 55 d4       	mulss  -0x2c(%rbp),%xmm2
			v.y * scalar,
   1f67f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f683:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
		return vec<3, T, Q>(
   1f688:	0f 28 c8             	movaps %xmm0,%xmm1
   1f68b:	f3 0f 59 4d d4       	mulss  -0x2c(%rbp),%xmm1
			v.x * scalar,
   1f690:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f694:	f3 0f 10 00          	movss  (%rax),%xmm0
		return vec<3, T, Q>(
   1f698:	f3 0f 59 45 d4       	mulss  -0x2c(%rbp),%xmm0
   1f69d:	66 0f 7e c2          	movd   %xmm0,%edx
   1f6a1:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   1f6a5:	66 0f 6e c2          	movd   %edx,%xmm0
   1f6a9:	48 89 c7             	mov    %rax,%rdi
   1f6ac:	e8 29 5e ff ff       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
			v.z * scalar);
   1f6b1:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1f6b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f6b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1f6bc:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1f6bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f6c3:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   1f6c8:	0f 28 c8             	movaps %xmm0,%xmm1
	}
   1f6cb:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1f6d0:	c9                   	leave
   1f6d1:	c3                   	ret

000000000001f6d2 <_ZN3glm6detail16compute_vec4_addIfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi4EfLS2_0EEES7_>:
		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)
   1f6d2:	55                   	push   %rbp
   1f6d3:	48 89 e5             	mov    %rsp,%rbp
   1f6d6:	53                   	push   %rbx
   1f6d7:	48 83 ec 28          	sub    $0x28,%rsp
   1f6db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1f6df:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);
   1f6e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f6e7:	f3 0f 10 48 0c       	movss  0xc(%rax),%xmm1
   1f6ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f6f0:	f3 0f 10 40 0c       	movss  0xc(%rax),%xmm0
   1f6f5:	0f 28 d9             	movaps %xmm1,%xmm3
   1f6f8:	f3 0f 58 d8          	addss  %xmm0,%xmm3
   1f6fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f700:	f3 0f 10 48 08       	movss  0x8(%rax),%xmm1
   1f705:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f709:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
   1f70e:	0f 28 d1             	movaps %xmm1,%xmm2
   1f711:	f3 0f 58 d0          	addss  %xmm0,%xmm2
   1f715:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f719:	f3 0f 10 48 04       	movss  0x4(%rax),%xmm1
   1f71e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f722:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
   1f727:	0f 28 e1             	movaps %xmm1,%xmm4
   1f72a:	f3 0f 58 e0          	addss  %xmm0,%xmm4
   1f72e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f732:	f3 0f 10 08          	movss  (%rax),%xmm1
   1f736:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f73a:	f3 0f 10 00          	movss  (%rax),%xmm0
   1f73e:	f3 0f 58 c8          	addss  %xmm0,%xmm1
   1f742:	66 0f 7e ca          	movd   %xmm1,%edx
   1f746:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1f74a:	0f 28 cc             	movaps %xmm4,%xmm1
   1f74d:	66 0f 6e c2          	movd   %edx,%xmm0
   1f751:	48 89 c7             	mov    %rax,%rdi
   1f754:	e8 27 ef ff ff       	call   1e680 <_ZN3glm3vecILi4EfLNS_9qualifierE0EEC1Effff>
   1f759:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f75d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1f761:	48 89 c1             	mov    %rax,%rcx
   1f764:	48 89 d3             	mov    %rdx,%rbx
   1f767:	48 89 d0             	mov    %rdx,%rax
		}
   1f76a:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   1f76f:	66 48 0f 6e c8       	movq   %rax,%xmm1
   1f774:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1f778:	c9                   	leave
   1f779:	c3                   	ret

000000000001f77a <_ZN3glm6detail13compute_crossIfLNS_9qualifierE0ELb0EE4callERKNS_3vecILi3EfLS2_0EEES7_>:
		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(vec<3, T, Q> const& x, vec<3, T, Q> const& y)
   1f77a:	55                   	push   %rbp
   1f77b:	48 89 e5             	mov    %rsp,%rbp
   1f77e:	48 83 ec 40          	sub    $0x40,%rsp
   1f782:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1f786:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
				x.x * y.y - y.x * x.y);
   1f78a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f78e:	f3 0f 10 08          	movss  (%rax),%xmm1
   1f792:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f796:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
   1f79b:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
   1f79f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f7a3:	f3 0f 10 10          	movss  (%rax),%xmm2
   1f7a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f7ab:	f3 0f 10 48 04       	movss  0x4(%rax),%xmm1
   1f7b0:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
			return vec<3, T, Q>(
   1f7b4:	0f 28 e0             	movaps %xmm0,%xmm4
   1f7b7:	f3 0f 5c e1          	subss  %xmm1,%xmm4
				x.z * y.x - y.z * x.x,
   1f7bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f7bf:	f3 0f 10 48 08       	movss  0x8(%rax),%xmm1
   1f7c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f7c8:	f3 0f 10 00          	movss  (%rax),%xmm0
   1f7cc:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
   1f7d0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f7d4:	f3 0f 10 50 08       	movss  0x8(%rax),%xmm2
   1f7d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f7dd:	f3 0f 10 08          	movss  (%rax),%xmm1
   1f7e1:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
			return vec<3, T, Q>(
   1f7e5:	0f 28 d8             	movaps %xmm0,%xmm3
   1f7e8:	f3 0f 5c d9          	subss  %xmm1,%xmm3
				x.y * y.z - y.y * x.z,
   1f7ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f7f0:	f3 0f 10 48 04       	movss  0x4(%rax),%xmm1
   1f7f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f7f9:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
   1f7fe:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
   1f802:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f806:	f3 0f 10 50 04       	movss  0x4(%rax),%xmm2
   1f80b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f80f:	f3 0f 10 48 08       	movss  0x8(%rax),%xmm1
   1f814:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
			return vec<3, T, Q>(
   1f818:	f3 0f 5c c1          	subss  %xmm1,%xmm0
   1f81c:	66 0f 7e c2          	movd   %xmm0,%edx
   1f820:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   1f824:	0f 28 d4             	movaps %xmm4,%xmm2
   1f827:	0f 28 cb             	movaps %xmm3,%xmm1
   1f82a:	66 0f 6e c2          	movd   %edx,%xmm0
   1f82e:	48 89 c7             	mov    %rax,%rdi
   1f831:	e8 a4 5c ff ff       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
				x.x * y.y - y.x * x.y);
   1f836:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1f83a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f83e:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1f841:	89 45 f0             	mov    %eax,-0x10(%rbp)
   1f844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f848:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   1f84d:	0f 28 c8             	movaps %xmm0,%xmm1
		}
   1f850:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1f855:	c9                   	leave
   1f856:	c3                   	ret

000000000001f857 <_ZN3glm6detail11compute_dotINS_3vecILi3EfLNS_9qualifierE0EEEfLb0EE4callERKS4_S7_>:
		GLM_FUNC_QUALIFIER static T call(vec<3, T, Q> const& a, vec<3, T, Q> const& b)
   1f857:	55                   	push   %rbp
   1f858:	48 89 e5             	mov    %rsp,%rbp
   1f85b:	48 83 ec 20          	sub    $0x20,%rsp
   1f85f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f863:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
			vec<3, T, Q> tmp(a * b);
   1f867:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f86b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f86f:	48 89 d6             	mov    %rdx,%rsi
   1f872:	48 89 c7             	mov    %rax,%rdi
   1f875:	e8 c4 11 00 00       	call   20a3e <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>
   1f87a:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1f87f:	0f 28 c1             	movaps %xmm1,%xmm0
   1f882:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   1f886:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
			return tmp.x + tmp.y + tmp.z;
   1f88b:	f3 0f 10 4d f4       	movss  -0xc(%rbp),%xmm1
   1f890:	f3 0f 10 45 f8       	movss  -0x8(%rbp),%xmm0
   1f895:	f3 0f 58 c8          	addss  %xmm0,%xmm1
   1f899:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1f89e:	f3 0f 58 c1          	addss  %xmm1,%xmm0
		}
   1f8a2:	c9                   	leave
   1f8a3:	c3                   	ret

000000000001f8a4 <_ZN3glm6detail11compute_absIfLb1EE4callEf>:
	{};

	template<typename genFIType>
	struct compute_abs<genFIType, true>
	{
		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static genFIType call(genFIType x)
   1f8a4:	55                   	push   %rbp
   1f8a5:	48 89 e5             	mov    %rsp,%rbp
   1f8a8:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
		{
			GLM_STATIC_ASSERT(
				std::numeric_limits<genFIType>::is_iec559 || std::numeric_limits<genFIType>::is_signed,
				"'abs' only accept floating-point and integer scalar or vector inputs");

			return x >= genFIType(0) ? x : -x;
   1f8ad:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1f8b2:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1f8b6:	0f 2f c1             	comiss %xmm1,%xmm0
   1f8b9:	72 07                	jb     1f8c2 <_ZN3glm6detail11compute_absIfLb1EE4callEf+0x1e>
   1f8bb:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1f8c0:	eb 10                	jmp    1f8d2 <_ZN3glm6detail11compute_absIfLb1EE4callEf+0x2e>
   1f8c2:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
   1f8c7:	f3 0f 10 0d 41 72 00 	movss  0x7241(%rip),%xmm1        # 26b10 <_ZZN9VulkanApp6renderEvE11submitCount+0x7f4>
   1f8ce:	00 
   1f8cf:	0f 57 c1             	xorps  %xmm1,%xmm0
			// TODO, perf comp with: *(((int *) &x) + 1) &= 0x7fffffff;
		}
   1f8d2:	5d                   	pop    %rbp
   1f8d3:	c3                   	ret

000000000001f8d4 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f8d4:	55                   	push   %rbp
   1f8d5:	48 89 e5             	mov    %rsp,%rbp
   1f8d8:	48 83 ec 20          	sub    $0x20,%rsp
   1f8dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f8e0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1f8e7:	ff ff 0f 
   1f8ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f8ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f8f2:	48 89 c7             	mov    %rax,%rdi
   1f8f5:	e8 d2 11 00 00       	call   20acc <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   1f8fa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1f8fe:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1f902:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1f906:	48 89 d6             	mov    %rdx,%rsi
   1f909:	48 89 c7             	mov    %rax,%rdi
   1f90c:	e8 80 75 fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1f911:	48 8b 00             	mov    (%rax),%rax
      }
   1f914:	c9                   	leave
   1f915:	c3                   	ret

000000000001f916 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1f916:	55                   	push   %rbp
   1f917:	48 89 e5             	mov    %rsp,%rbp
   1f91a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1f91e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f922:	5d                   	pop    %rbp
   1f923:	c3                   	ret

000000000001f924 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1f924:	55                   	push   %rbp
   1f925:	48 89 e5             	mov    %rsp,%rbp
   1f928:	48 83 ec 20          	sub    $0x20,%rsp
   1f92c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f930:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1f934:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1f938:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1f93c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f940:	48 89 d6             	mov    %rdx,%rsi
   1f943:	48 89 c7             	mov    %rax,%rdi
   1f946:	e8 9b 11 00 00       	call   20ae6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   1f94b:	c9                   	leave
   1f94c:	c3                   	ret

000000000001f94d <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1f94d:	55                   	push   %rbp
   1f94e:	48 89 e5             	mov    %rsp,%rbp
   1f951:	48 83 ec 10          	sub    $0x10,%rsp
   1f955:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1f959:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1f95d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1f961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f965:	ba 00 00 00 00       	mov    $0x0,%edx
   1f96a:	48 89 ce             	mov    %rcx,%rsi
   1f96d:	48 89 c7             	mov    %rax,%rdi
   1f970:	e8 cf 11 00 00       	call   20b44 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   1f975:	c9                   	leave
   1f976:	c3                   	ret

000000000001f977 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1f977:	55                   	push   %rbp
   1f978:	48 89 e5             	mov    %rsp,%rbp
   1f97b:	41 54                	push   %r12
   1f97d:	53                   	push   %rbx
   1f97e:	48 83 ec 20          	sub    $0x20,%rsp
   1f982:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1f986:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1f98a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1f98e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1f992:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f996:	48 89 c7             	mov    %rax,%rdi
   1f999:	e8 07 12 00 00       	call   20ba5 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1f99e:	49 89 c4             	mov    %rax,%r12
   1f9a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1f9a5:	48 89 c7             	mov    %rax,%rdi
   1f9a8:	e8 f8 11 00 00       	call   20ba5 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1f9ad:	48 89 c3             	mov    %rax,%rbx
   1f9b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9b4:	48 89 c7             	mov    %rax,%rdi
   1f9b7:	e8 e9 11 00 00       	call   20ba5 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   1f9bc:	48 89 c7             	mov    %rax,%rdi
   1f9bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f9c3:	48 89 c1             	mov    %rax,%rcx
   1f9c6:	4c 89 e2             	mov    %r12,%rdx
   1f9c9:	48 89 de             	mov    %rbx,%rsi
   1f9cc:	e8 e2 11 00 00       	call   20bb3 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1f9d1:	48 83 c4 20          	add    $0x20,%rsp
   1f9d5:	5b                   	pop    %rbx
   1f9d6:	41 5c                	pop    %r12
   1f9d8:	5d                   	pop    %rbp
   1f9d9:	c3                   	ret

000000000001f9da <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1f9da:	55                   	push   %rbp
   1f9db:	48 89 e5             	mov    %rsp,%rbp
   1f9de:	48 83 ec 20          	sub    $0x20,%rsp
   1f9e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1f9e6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1f9ed:	ff ff 0f 
   1f9f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1f9f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1f9f8:	48 89 c7             	mov    %rax,%rdi
   1f9fb:	e8 16 12 00 00       	call   20c16 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   1fa00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1fa04:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1fa08:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1fa0c:	48 89 d6             	mov    %rdx,%rsi
   1fa0f:	48 89 c7             	mov    %rax,%rdi
   1fa12:	e8 7a 74 fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1fa17:	48 8b 00             	mov    (%rax),%rax
      }
   1fa1a:	c9                   	leave
   1fa1b:	c3                   	ret

000000000001fa1c <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1fa1c:	55                   	push   %rbp
   1fa1d:	48 89 e5             	mov    %rsp,%rbp
   1fa20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1fa24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fa28:	5d                   	pop    %rbp
   1fa29:	c3                   	ret

000000000001fa2a <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1fa2a:	55                   	push   %rbp
   1fa2b:	48 89 e5             	mov    %rsp,%rbp
   1fa2e:	48 83 ec 20          	sub    $0x20,%rsp
   1fa32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fa36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1fa3a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1fa3e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1fa42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fa46:	48 89 d6             	mov    %rdx,%rsi
   1fa49:	48 89 c7             	mov    %rax,%rdi
   1fa4c:	e8 df 11 00 00       	call   20c30 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   1fa51:	c9                   	leave
   1fa52:	c3                   	ret

000000000001fa53 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1fa53:	55                   	push   %rbp
   1fa54:	48 89 e5             	mov    %rsp,%rbp
   1fa57:	48 83 ec 10          	sub    $0x10,%rsp
   1fa5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fa5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1fa63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1fa67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fa6b:	ba 00 00 00 00       	mov    $0x0,%edx
   1fa70:	48 89 ce             	mov    %rcx,%rsi
   1fa73:	48 89 c7             	mov    %rax,%rdi
   1fa76:	e8 13 12 00 00       	call   20c8e <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   1fa7b:	c9                   	leave
   1fa7c:	c3                   	ret

000000000001fa7d <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1fa7d:	55                   	push   %rbp
   1fa7e:	48 89 e5             	mov    %rsp,%rbp
   1fa81:	41 54                	push   %r12
   1fa83:	53                   	push   %rbx
   1fa84:	48 83 ec 20          	sub    $0x20,%rsp
   1fa88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fa8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1fa90:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1fa94:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1fa98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1fa9c:	48 89 c7             	mov    %rax,%rdi
   1fa9f:	e8 4b 12 00 00       	call   20cef <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   1faa4:	49 89 c4             	mov    %rax,%r12
   1faa7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1faab:	48 89 c7             	mov    %rax,%rdi
   1faae:	e8 3c 12 00 00       	call   20cef <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   1fab3:	48 89 c3             	mov    %rax,%rbx
   1fab6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1faba:	48 89 c7             	mov    %rax,%rdi
   1fabd:	e8 2d 12 00 00       	call   20cef <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   1fac2:	48 89 c7             	mov    %rax,%rdi
   1fac5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1fac9:	48 89 c1             	mov    %rax,%rcx
   1facc:	4c 89 e2             	mov    %r12,%rdx
   1facf:	48 89 de             	mov    %rbx,%rsi
   1fad2:	e8 26 12 00 00       	call   20cfd <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1fad7:	48 83 c4 20          	add    $0x20,%rsp
   1fadb:	5b                   	pop    %rbx
   1fadc:	41 5c                	pop    %r12
   1fade:	5d                   	pop    %rbp
   1fadf:	c3                   	ret

000000000001fae0 <_ZNSt16allocator_traitsISaIP23VkDescriptorSetLayout_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1fae0:	55                   	push   %rbp
   1fae1:	48 89 e5             	mov    %rsp,%rbp
   1fae4:	48 83 ec 10          	sub    $0x10,%rsp
   1fae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1faec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1faf0:	48 89 c7             	mov    %rax,%rdi
   1faf3:	e8 68 12 00 00       	call   20d60 <_ZNKSt15__new_allocatorIP23VkDescriptorSetLayout_TE8max_sizeEv>
      }
   1faf8:	c9                   	leave
   1faf9:	c3                   	ret

000000000001fafa <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TEC1ERKS2_>:
   1fafa:	55                   	push   %rbp
   1fafb:	48 89 e5             	mov    %rsp,%rbp
   1fafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fb02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fb06:	90                   	nop
   1fb07:	5d                   	pop    %rbp
   1fb08:	c3                   	ret
   1fb09:	90                   	nop

000000000001fb0a <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1fb0a:	55                   	push   %rbp
   1fb0b:	48 89 e5             	mov    %rsp,%rbp
   1fb0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1fb12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fb16:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1fb1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fb21:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1fb28:	00 
   1fb29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fb2d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1fb34:	00 
	{ }
   1fb35:	90                   	nop
   1fb36:	5d                   	pop    %rbp
   1fb37:	c3                   	ret

000000000001fb38 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1fb38:	55                   	push   %rbp
   1fb39:	48 89 e5             	mov    %rsp,%rbp
   1fb3c:	48 83 ec 10          	sub    $0x10,%rsp
   1fb40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fb44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1fb48:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1fb4d:	74 15                	je     1fb64 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE11_M_allocateEm+0x2c>
   1fb4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fb53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1fb57:	48 89 d6             	mov    %rdx,%rsi
   1fb5a:	48 89 c7             	mov    %rax,%rdi
   1fb5d:	e8 18 12 00 00       	call   20d7a <_ZNSt16allocator_traitsISaIP23VkDescriptorSetLayout_TEE8allocateERS2_m>
   1fb62:	eb 05                	jmp    1fb69 <_ZNSt12_Vector_baseIP23VkDescriptorSetLayout_TSaIS1_EE11_M_allocateEm+0x31>
   1fb64:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1fb69:	c9                   	leave
   1fb6a:	c3                   	ret

000000000001fb6b <_ZNSt16allocator_traitsISaIP23VkDescriptorSetLayout_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1fb6b:	55                   	push   %rbp
   1fb6c:	48 89 e5             	mov    %rsp,%rbp
   1fb6f:	48 83 ec 20          	sub    $0x20,%rsp
   1fb73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fb77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fb7b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1fb7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1fb83:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1fb87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fb8b:	48 89 ce             	mov    %rcx,%rsi
   1fb8e:	48 89 c7             	mov    %rax,%rdi
   1fb91:	e8 0e 12 00 00       	call   20da4 <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TE10deallocateEPS1_m>
   1fb96:	90                   	nop
   1fb97:	c9                   	leave
   1fb98:	c3                   	ret

000000000001fb99 <_ZSt20uninitialized_fill_nIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_>:
    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
   1fb99:	55                   	push   %rbp
   1fb9a:	48 89 e5             	mov    %rsp,%rbp
   1fb9d:	48 83 ec 30          	sub    $0x30,%rsp
   1fba1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fba5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1fba9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_fill
   1fbad:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_fill_n(__first, __n, __x);
   1fbb1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1fbb5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1fbb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fbbd:	48 89 ce             	mov    %rcx,%rsi
   1fbc0:	48 89 c7             	mov    %rax,%rdi
   1fbc3:	e8 0d 12 00 00       	call   20dd5 <_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPP23VkDescriptorSetLayout_TmS3_EET_S5_T0_RKT1_>
    }
   1fbc8:	c9                   	leave
   1fbc9:	c3                   	ret

000000000001fbca <_ZNSt12_Destroy_auxILb1EE9__destroyIPP23VkDescriptorSetLayout_TEEvT_S5_>:
   1fbca:	55                   	push   %rbp
   1fbcb:	48 89 e5             	mov    %rsp,%rbp
   1fbce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fbd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fbd6:	90                   	nop
   1fbd7:	5d                   	pop    %rbp
   1fbd8:	c3                   	ret

000000000001fbd9 <_ZNSt6vectorIP17VkDescriptorSet_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1fbd9:	55                   	push   %rbp
   1fbda:	48 89 e5             	mov    %rsp,%rbp
   1fbdd:	48 83 ec 20          	sub    $0x20,%rsp
   1fbe1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1fbe5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1fbec:	ff ff 0f 
   1fbef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1fbf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fbf7:	48 89 c7             	mov    %rax,%rdi
   1fbfa:	e8 03 12 00 00       	call   20e02 <_ZNSt16allocator_traitsISaIP17VkDescriptorSet_TEE8max_sizeERKS2_>
   1fbff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1fc03:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1fc07:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1fc0b:	48 89 d6             	mov    %rdx,%rsi
   1fc0e:	48 89 c7             	mov    %rax,%rdi
   1fc11:	e8 7b 72 fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1fc16:	48 8b 00             	mov    (%rax),%rax
      }
   1fc19:	c9                   	leave
   1fc1a:	c3                   	ret
   1fc1b:	90                   	nop

000000000001fc1c <_ZNKSt12_Vector_baseIP17VkDescriptorSet_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1fc1c:	55                   	push   %rbp
   1fc1d:	48 89 e5             	mov    %rsp,%rbp
   1fc20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1fc24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fc28:	5d                   	pop    %rbp
   1fc29:	c3                   	ret

000000000001fc2a <_ZSt25__uninitialized_default_nIPP17VkDescriptorSet_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1fc2a:	55                   	push   %rbp
   1fc2b:	48 89 e5             	mov    %rsp,%rbp
   1fc2e:	48 83 ec 20          	sub    $0x20,%rsp
   1fc32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fc36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1fc3a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1fc3e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1fc42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fc46:	48 89 d6             	mov    %rdx,%rsi
   1fc49:	48 89 c7             	mov    %rax,%rdi
   1fc4c:	e8 cb 11 00 00       	call   20e1c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkDescriptorSet_TmEET_S5_T0_>
    }
   1fc51:	c9                   	leave
   1fc52:	c3                   	ret

000000000001fc53 <_ZNSt16allocator_traitsISaIP17VkDescriptorSet_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1fc53:	55                   	push   %rbp
   1fc54:	48 89 e5             	mov    %rsp,%rbp
   1fc57:	48 83 ec 10          	sub    $0x10,%rsp
   1fc5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fc5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1fc63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1fc67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fc6b:	ba 00 00 00 00       	mov    $0x0,%edx
   1fc70:	48 89 ce             	mov    %rcx,%rsi
   1fc73:	48 89 c7             	mov    %rax,%rdi
   1fc76:	e8 ff 11 00 00       	call   20e7a <_ZNSt15__new_allocatorIP17VkDescriptorSet_TE8allocateEmPKv>
   1fc7b:	c9                   	leave
   1fc7c:	c3                   	ret

000000000001fc7d <_ZSt12__relocate_aIPP17VkDescriptorSet_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1fc7d:	55                   	push   %rbp
   1fc7e:	48 89 e5             	mov    %rsp,%rbp
   1fc81:	41 54                	push   %r12
   1fc83:	53                   	push   %rbx
   1fc84:	48 83 ec 20          	sub    $0x20,%rsp
   1fc88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fc8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1fc90:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1fc94:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1fc98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1fc9c:	48 89 c7             	mov    %rax,%rdi
   1fc9f:	e8 37 12 00 00       	call   20edb <_ZSt12__niter_baseIPP17VkDescriptorSet_TET_S3_>
   1fca4:	49 89 c4             	mov    %rax,%r12
   1fca7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1fcab:	48 89 c7             	mov    %rax,%rdi
   1fcae:	e8 28 12 00 00       	call   20edb <_ZSt12__niter_baseIPP17VkDescriptorSet_TET_S3_>
   1fcb3:	48 89 c3             	mov    %rax,%rbx
   1fcb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fcba:	48 89 c7             	mov    %rax,%rdi
   1fcbd:	e8 19 12 00 00       	call   20edb <_ZSt12__niter_baseIPP17VkDescriptorSet_TET_S3_>
   1fcc2:	48 89 c7             	mov    %rax,%rdi
   1fcc5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1fcc9:	48 89 c1             	mov    %rax,%rcx
   1fccc:	4c 89 e2             	mov    %r12,%rdx
   1fccf:	48 89 de             	mov    %rbx,%rsi
   1fcd2:	e8 12 12 00 00       	call   20ee9 <_ZSt14__relocate_a_1IP17VkDescriptorSet_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1fcd7:	48 83 c4 20          	add    $0x20,%rsp
   1fcdb:	5b                   	pop    %rbx
   1fcdc:	41 5c                	pop    %r12
   1fcde:	5d                   	pop    %rbp
   1fcdf:	c3                   	ret

000000000001fce0 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1fce0:	55                   	push   %rbp
   1fce1:	48 89 e5             	mov    %rsp,%rbp
   1fce4:	48 83 ec 10          	sub    $0x10,%rsp
   1fce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fcec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1fcf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1fcf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fcf8:	48 89 d6             	mov    %rdx,%rsi
   1fcfb:	48 89 c7             	mov    %rax,%rdi
   1fcfe:	e8 49 12 00 00       	call   20f4c <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   1fd03:	90                   	nop
   1fd04:	c9                   	leave
   1fd05:	c3                   	ret

000000000001fd06 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1fd06:	55                   	push   %rbp
   1fd07:	48 89 e5             	mov    %rsp,%rbp
   1fd0a:	48 83 ec 30          	sub    $0x30,%rsp
   1fd0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fd12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1fd16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1fd1a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1fd1e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1fd22:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1fd26:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1fd2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fd2e:	48 89 ce             	mov    %rcx,%rsi
   1fd31:	48 89 c7             	mov    %rax,%rdi
   1fd34:	e8 22 12 00 00       	call   20f5b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   1fd39:	c9                   	leave
   1fd3a:	c3                   	ret

000000000001fd3b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   1fd3b:	55                   	push   %rbp
   1fd3c:	48 89 e5             	mov    %rsp,%rbp
   1fd3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fd43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fd47:	90                   	nop
   1fd48:	5d                   	pop    %rbp
   1fd49:	c3                   	ret

000000000001fd4a <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1fd4a:	55                   	push   %rbp
   1fd4b:	48 89 e5             	mov    %rsp,%rbp
   1fd4e:	48 83 ec 10          	sub    $0x10,%rsp
   1fd52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fd56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1fd5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1fd5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fd62:	48 89 d6             	mov    %rdx,%rsi
   1fd65:	48 89 c7             	mov    %rax,%rdi
   1fd68:	e8 1b 12 00 00       	call   20f88 <_ZNSt15__new_allocatorIjEC1ERKS0_>
   1fd6d:	90                   	nop
   1fd6e:	c9                   	leave
   1fd6f:	c3                   	ret

000000000001fd70 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1fd70:	55                   	push   %rbp
   1fd71:	48 89 e5             	mov    %rsp,%rbp
   1fd74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1fd78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fd7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1fd83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fd87:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1fd8e:	00 
   1fd8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fd93:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1fd9a:	00 
	{ }
   1fd9b:	90                   	nop
   1fd9c:	5d                   	pop    %rbp
   1fd9d:	c3                   	ret

000000000001fd9e <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1fd9e:	55                   	push   %rbp
   1fd9f:	48 89 e5             	mov    %rsp,%rbp
   1fda2:	48 83 ec 20          	sub    $0x20,%rsp
   1fda6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fdaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fdae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1fdb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1fdb6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1fdba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fdbe:	48 89 ce             	mov    %rcx,%rsi
   1fdc1:	48 89 c7             	mov    %rax,%rdi
   1fdc4:	e8 cf 11 00 00       	call   20f98 <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   1fdc9:	90                   	nop
   1fdca:	c9                   	leave
   1fdcb:	c3                   	ret

000000000001fdcc <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1fdcc:	55                   	push   %rbp
   1fdcd:	48 89 e5             	mov    %rsp,%rbp
   1fdd0:	48 83 ec 20          	sub    $0x20,%rsp
   1fdd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1fdd8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1fddf:	ff ff 1f 
   1fde2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1fde6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fdea:	48 89 c7             	mov    %rax,%rdi
   1fded:	e8 d7 11 00 00       	call   20fc9 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   1fdf2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1fdf6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1fdfa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1fdfe:	48 89 d6             	mov    %rdx,%rsi
   1fe01:	48 89 c7             	mov    %rax,%rdi
   1fe04:	e8 88 70 fe ff       	call   6e91 <_ZSt3minImERKT_S2_S2_>
   1fe09:	48 8b 00             	mov    (%rax),%rax
      }
   1fe0c:	c9                   	leave
   1fe0d:	c3                   	ret

000000000001fe0e <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   1fe0e:	55                   	push   %rbp
   1fe0f:	48 89 e5             	mov    %rsp,%rbp
   1fe12:	48 83 ec 10          	sub    $0x10,%rsp
   1fe16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fe1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1fe1e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1fe22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1fe26:	ba 00 00 00 00       	mov    $0x0,%edx
   1fe2b:	48 89 ce             	mov    %rcx,%rsi
   1fe2e:	48 89 c7             	mov    %rax,%rdi
   1fe31:	e8 ae 11 00 00       	call   20fe4 <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   1fe36:	c9                   	leave
   1fe37:	c3                   	ret

000000000001fe38 <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1fe38:	55                   	push   %rbp
   1fe39:	48 89 e5             	mov    %rsp,%rbp
   1fe3c:	48 83 ec 30          	sub    $0x30,%rsp
   1fe40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1fe44:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1fe48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1fe4c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1fe50:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1fe54:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1fe58:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1fe5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fe60:	48 89 ce             	mov    %rcx,%rsi
   1fe63:	48 89 c7             	mov    %rax,%rdi
   1fe66:	e8 da 11 00 00       	call   21045 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   1fe6b:	c9                   	leave
   1fe6c:	c3                   	ret

000000000001fe6d <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
   1fe6d:	55                   	push   %rbp
   1fe6e:	48 89 e5             	mov    %rsp,%rbp
   1fe71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fe75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fe79:	90                   	nop
   1fe7a:	5d                   	pop    %rbp
   1fe7b:	c3                   	ret

000000000001fe7c <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1fe7c:	55                   	push   %rbp
   1fe7d:	48 89 e5             	mov    %rsp,%rbp
   1fe80:	48 83 ec 20          	sub    $0x20,%rsp
   1fe84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fe88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fe8c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1fe90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fe94:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fe9b:	00 
   1fe9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1fea0:	48 89 d6             	mov    %rdx,%rsi
   1fea3:	48 89 c7             	mov    %rax,%rdi
   1fea6:	e8 95 56 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   1feab:	c9                   	leave
   1feac:	c3                   	ret
   1fead:	90                   	nop

000000000001feae <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1feae:	55                   	push   %rbp
   1feaf:	48 89 e5             	mov    %rsp,%rbp
   1feb2:	48 83 ec 20          	sub    $0x20,%rsp
   1feb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1feba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1febe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1fec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fec6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1fecd:	00 
   1fece:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1fed2:	48 89 d6             	mov    %rdx,%rsi
   1fed5:	48 89 c7             	mov    %rax,%rdi
   1fed8:	e8 63 56 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   1fedd:	c9                   	leave
   1fede:	c3                   	ret

000000000001fedf <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   1fedf:	55                   	push   %rbp
   1fee0:	48 89 e5             	mov    %rsp,%rbp
   1fee3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fee7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1feeb:	90                   	nop
   1feec:	5d                   	pop    %rbp
   1feed:	c3                   	ret

000000000001feee <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1feee:	55                   	push   %rbp
   1feef:	48 89 e5             	mov    %rsp,%rbp
   1fef2:	48 83 ec 20          	sub    $0x20,%rsp
   1fef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1fefa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fefe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ff02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ff06:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ff0d:	00 
   1ff0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ff12:	48 89 d6             	mov    %rdx,%rsi
   1ff15:	48 89 c7             	mov    %rax,%rdi
   1ff18:	e8 23 56 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   1ff1d:	c9                   	leave
   1ff1e:	c3                   	ret
   1ff1f:	90                   	nop

000000000001ff20 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1ff20:	55                   	push   %rbp
   1ff21:	48 89 e5             	mov    %rsp,%rbp
   1ff24:	48 83 ec 20          	sub    $0x20,%rsp
   1ff28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ff2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ff30:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ff34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ff38:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ff3f:	00 
   1ff40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ff44:	48 89 d6             	mov    %rdx,%rsi
   1ff47:	48 89 c7             	mov    %rax,%rdi
   1ff4a:	e8 f1 55 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   1ff4f:	c9                   	leave
   1ff50:	c3                   	ret

000000000001ff51 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   1ff51:	55                   	push   %rbp
   1ff52:	48 89 e5             	mov    %rsp,%rbp
   1ff55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ff59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ff5d:	90                   	nop
   1ff5e:	5d                   	pop    %rbp
   1ff5f:	c3                   	ret

000000000001ff60 <_ZNSt15__new_allocatorIP10VkBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1ff60:	55                   	push   %rbp
   1ff61:	48 89 e5             	mov    %rsp,%rbp
   1ff64:	48 83 ec 20          	sub    $0x20,%rsp
   1ff68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ff6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ff70:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ff74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ff78:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ff7f:	00 
   1ff80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ff84:	48 89 d6             	mov    %rdx,%rsi
   1ff87:	48 89 c7             	mov    %rax,%rdi
   1ff8a:	e8 b1 55 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   1ff8f:	c9                   	leave
   1ff90:	c3                   	ret

000000000001ff91 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10VkBuffer_TEEvT_S5_>:
   1ff91:	55                   	push   %rbp
   1ff92:	48 89 e5             	mov    %rsp,%rbp
   1ff95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ff99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ff9d:	90                   	nop
   1ff9e:	5d                   	pop    %rbp
   1ff9f:	c3                   	ret

000000000001ffa0 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1ffa0:	55                   	push   %rbp
   1ffa1:	48 89 e5             	mov    %rsp,%rbp
   1ffa4:	48 83 ec 20          	sub    $0x20,%rsp
   1ffa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ffac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ffb0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1ffb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ffb8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ffbf:	00 
   1ffc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ffc4:	48 89 d6             	mov    %rdx,%rsi
   1ffc7:	48 89 c7             	mov    %rax,%rdi
   1ffca:	e8 71 55 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   1ffcf:	c9                   	leave
   1ffd0:	c3                   	ret

000000000001ffd1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16VkDeviceMemory_TEEvT_S5_>:
   1ffd1:	55                   	push   %rbp
   1ffd2:	48 89 e5             	mov    %rsp,%rbp
   1ffd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ffd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ffdd:	90                   	nop
   1ffde:	5d                   	pop    %rbp
   1ffdf:	c3                   	ret

000000000001ffe0 <_ZNSt15__new_allocatorIP17VkDescriptorSet_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1ffe0:	55                   	push   %rbp
   1ffe1:	48 89 e5             	mov    %rsp,%rbp
   1ffe4:	48 83 ec 20          	sub    $0x20,%rsp
   1ffe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ffec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1fff0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1fff4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1fff8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ffff:	00 
   20000:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20004:	48 89 d6             	mov    %rdx,%rsi
   20007:	48 89 c7             	mov    %rax,%rdi
   2000a:	e8 31 55 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   2000f:	c9                   	leave
   20010:	c3                   	ret

0000000000020011 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkDescriptorSet_TEEvT_S5_>:
   20011:	55                   	push   %rbp
   20012:	48 89 e5             	mov    %rsp,%rbp
   20015:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20019:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2001d:	90                   	nop
   2001e:	5d                   	pop    %rbp
   2001f:	c3                   	ret

0000000000020020 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   20020:	55                   	push   %rbp
   20021:	48 89 e5             	mov    %rsp,%rbp
   20024:	48 83 ec 20          	sub    $0x20,%rsp
   20028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2002c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20030:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   20034:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20038:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2003c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20040:	48 89 ce             	mov    %rcx,%rsi
   20043:	48 89 c7             	mov    %rax,%rdi
   20046:	e8 27 10 00 00       	call   21072 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   2004b:	c9                   	leave
   2004c:	c3                   	ret
   2004d:	90                   	nop

000000000002004e <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   2004e:	55                   	push   %rbp
   2004f:	48 89 e5             	mov    %rsp,%rbp
   20052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   20056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2005a:	5d                   	pop    %rbp
   2005b:	c3                   	ret

000000000002005c <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   2005c:	55                   	push   %rbp
   2005d:	48 89 e5             	mov    %rsp,%rbp
   20060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   20064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20068:	5d                   	pop    %rbp
   20069:	c3                   	ret

000000000002006a <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   2006a:	55                   	push   %rbp
   2006b:	48 89 e5             	mov    %rsp,%rbp
   2006e:	48 83 ec 30          	sub    $0x30,%rsp
   20072:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20076:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2007a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2007e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   20082:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20086:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2008a:	48 c1 f8 03          	sar    $0x3,%rax
   2008e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20092:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20097:	7e 1f                	jle    200b8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   20099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2009d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   200a4:	00 
   200a5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   200a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   200ad:	48 89 ce             	mov    %rcx,%rsi
   200b0:	48 89 c7             	mov    %rax,%rdi
   200b3:	e8 98 58 fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   200b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   200bc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   200c3:	00 
   200c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   200c8:	48 01 d0             	add    %rdx,%rax
    }
   200cb:	c9                   	leave
   200cc:	c3                   	ret
   200cd:	90                   	nop

00000000000200ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   200ce:	55                   	push   %rbp
   200cf:	48 89 e5             	mov    %rsp,%rbp
   200d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   200d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   200da:	5d                   	pop    %rbp
   200db:	c3                   	ret

00000000000200dc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   200dc:	55                   	push   %rbp
   200dd:	48 89 e5             	mov    %rsp,%rbp
   200e0:	48 83 ec 10          	sub    $0x10,%rsp
   200e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   200e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   200ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   200f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   200f4:	48 89 d6             	mov    %rdx,%rsi
   200f7:	48 89 c7             	mov    %rax,%rdi
   200fa:	e8 db 0f 00 00       	call   210da <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   200ff:	90                   	nop
   20100:	c9                   	leave
   20101:	c3                   	ret

0000000000020102 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   20102:	55                   	push   %rbp
   20103:	48 89 e5             	mov    %rsp,%rbp
   20106:	48 83 ec 20          	sub    $0x20,%rsp
   2010a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2010e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20112:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   20116:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2011a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2011e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20122:	48 89 ce             	mov    %rcx,%rsi
   20125:	48 89 c7             	mov    %rax,%rdi
   20128:	e8 cd 0f 00 00       	call   210fa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   2012d:	90                   	nop
   2012e:	c9                   	leave
   2012f:	c3                   	ret

0000000000020130 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   20130:	55                   	push   %rbp
   20131:	48 89 e5             	mov    %rsp,%rbp
   20134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   20138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2013c:	5d                   	pop    %rbp
   2013d:	c3                   	ret

000000000002013e <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   2013e:	55                   	push   %rbp
   2013f:	48 89 e5             	mov    %rsp,%rbp
   20142:	48 83 ec 10          	sub    $0x10,%rsp
   20146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2014a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   2014e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20152:	48 89 c7             	mov    %rax,%rdi
   20155:	e8 d8 c5 ff ff       	call   1c732 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   2015a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2015e:	48 89 02             	mov    %rax,(%rdx)
   20161:	90                   	nop
   20162:	c9                   	leave
   20163:	c3                   	ret

0000000000020164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   20164:	55                   	push   %rbp
   20165:	48 89 e5             	mov    %rsp,%rbp
   20168:	48 83 ec 10          	sub    $0x10,%rsp
   2016c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   20170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20174:	48 89 c7             	mov    %rax,%rdi
   20177:	e8 52 ff ff ff       	call   200ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   2017c:	be 01 00 00 00       	mov    $0x1,%esi
   20181:	48 89 c7             	mov    %rax,%rdi
   20184:	e8 ab 0f 00 00       	call   21134 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   20189:	c9                   	leave
   2018a:	c3                   	ret
   2018b:	90                   	nop

000000000002018c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   2018c:	55                   	push   %rbp
   2018d:	48 89 e5             	mov    %rsp,%rbp
   20190:	41 56                	push   %r14
   20192:	41 55                	push   %r13
   20194:	41 54                	push   %r12
   20196:	53                   	push   %rbx
   20197:	48 83 ec 30          	sub    $0x30,%rsp
   2019b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2019f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   201a3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   201a7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   201ab:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   201af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   201b3:	48 89 c6             	mov    %rax,%rsi
   201b6:	bf 48 00 00 00       	mov    $0x48,%edi
   201bb:	e8 a8 76 fe ff       	call   7868 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   201c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   201c4:	48 89 c7             	mov    %rax,%rdi
   201c7:	e8 c3 c5 ff ff       	call   1c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   201cc:	49 89 c6             	mov    %rax,%r14
   201cf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   201d3:	48 89 c7             	mov    %rax,%rdi
   201d6:	e8 a6 c5 ff ff       	call   1c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   201db:	49 89 c5             	mov    %rax,%r13
   201de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   201e2:	48 89 c7             	mov    %rax,%rdi
   201e5:	e8 89 c5 ff ff       	call   1c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   201ea:	49 89 c4             	mov    %rax,%r12
   201ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   201f1:	48 89 c7             	mov    %rax,%rdi
   201f4:	e8 f3 c4 ff ff       	call   1c6ec <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   201f9:	48 89 c3             	mov    %rax,%rbx
   201fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20200:	48 89 c7             	mov    %rax,%rdi
   20203:	e8 c6 fe ff ff       	call   200ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   20208:	4d 89 f0             	mov    %r14,%r8
   2020b:	4c 89 e9             	mov    %r13,%rcx
   2020e:	4c 89 e2             	mov    %r12,%rdx
   20211:	48 89 de             	mov    %rbx,%rsi
   20214:	48 89 c7             	mov    %rax,%rdi
   20217:	e8 42 0f 00 00       	call   2115e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   2021c:	eb 33                	jmp    20251 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   2021e:	48 89 c7             	mov    %rax,%rdi
   20221:	e8 7a 4f fe ff       	call   51a0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   20226:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2022a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2022e:	48 89 d6             	mov    %rdx,%rsi
   20231:	48 89 c7             	mov    %rax,%rdi
   20234:	e8 9d e6 ff ff       	call   1e8d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   20239:	e8 02 56 fe ff       	call   5840 <__cxa_rethrow@plt>
	  __catch(...)
   2023e:	48 89 c3             	mov    %rax,%rbx
   20241:	e8 1a 57 fe ff       	call   5960 <__cxa_end_catch@plt>
   20246:	48 89 d8             	mov    %rbx,%rax
   20249:	48 89 c7             	mov    %rax,%rdi
   2024c:	e8 af 57 fe ff       	call   5a00 <_Unwind_Resume@plt>
	}
   20251:	48 83 c4 30          	add    $0x30,%rsp
   20255:	5b                   	pop    %rbx
   20256:	41 5c                	pop    %r12
   20258:	41 5d                	pop    %r13
   2025a:	41 5e                	pop    %r14
   2025c:	5d                   	pop    %rbp
   2025d:	c3                   	ret

000000000002025e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   2025e:	55                   	push   %rbp
   2025f:	48 89 e5             	mov    %rsp,%rbp
   20262:	48 83 ec 20          	sub    $0x20,%rsp
   20266:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   2026a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2026e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   20272:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   20276:	48 89 d6             	mov    %rdx,%rsi
   20279:	48 89 c7             	mov    %rax,%rdi
   2027c:	e8 91 ca ff ff       	call   1cd12 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   20281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20285:	c9                   	leave
   20286:	c3                   	ret
   20287:	90                   	nop

0000000000020288 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   20288:	55                   	push   %rbp
   20289:	48 89 e5             	mov    %rsp,%rbp
   2028c:	48 83 ec 20          	sub    $0x20,%rsp
   20290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20294:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20298:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   2029c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   202a0:	48 89 c7             	mov    %rax,%rdi
   202a3:	e8 22 0f 00 00       	call   211ca <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   202a8:	48 8b 10             	mov    (%rax),%rdx
   202ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202af:	48 89 10             	mov    %rdx,(%rax)
   202b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   202b6:	48 89 c7             	mov    %rax,%rdi
   202b9:	e8 0e 00 00 00       	call   202cc <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   202be:	48 8b 10             	mov    (%rax),%rdx
   202c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202c5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   202c9:	90                   	nop
   202ca:	c9                   	leave
   202cb:	c3                   	ret

00000000000202cc <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   202cc:	55                   	push   %rbp
   202cd:	48 89 e5             	mov    %rsp,%rbp
   202d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   202d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202d8:	5d                   	pop    %rbp
   202d9:	c3                   	ret

00000000000202da <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   202da:	55                   	push   %rbp
   202db:	48 89 e5             	mov    %rsp,%rbp
   202de:	48 83 ec 10          	sub    $0x10,%rsp
   202e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   202e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202ea:	48 83 c0 20          	add    $0x20,%rax
   202ee:	48 89 c7             	mov    %rax,%rdi
   202f1:	e8 e2 0e 00 00       	call   211d8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   202f6:	c9                   	leave
   202f7:	c3                   	ret

00000000000202f8 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   202f8:	55                   	push   %rbp
   202f9:	48 89 e5             	mov    %rsp,%rbp
   202fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20300:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   20304:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20308:	5d                   	pop    %rbp
   20309:	c3                   	ret

000000000002030a <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   2030a:	55                   	push   %rbp
   2030b:	48 89 e5             	mov    %rsp,%rbp
   2030e:	48 83 ec 10          	sub    $0x10,%rsp
   20312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2031a:	48 89 c7             	mov    %rax,%rdi
   2031d:	e8 d0 0e 00 00       	call   211f2 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   20322:	c9                   	leave
   20323:	c3                   	ret

0000000000020324 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   20324:	55                   	push   %rbp
   20325:	48 89 e5             	mov    %rsp,%rbp
   20328:	48 83 ec 20          	sub    $0x20,%rsp
   2032c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20330:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   20334:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20339:	74 40                	je     2037b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   2033b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2033f:	48 89 c7             	mov    %rax,%rdi
   20342:	e8 c5 0e 00 00       	call   2120c <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   20347:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   2034b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2034f:	48 89 c7             	mov    %rax,%rdi
   20352:	e8 c3 0e 00 00       	call   2121a <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   20357:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   2035c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20360:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   20364:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2036c:	48 89 ce             	mov    %rcx,%rsi
   2036f:	48 89 c7             	mov    %rax,%rdi
   20372:	e8 ca 0e 00 00       	call   21241 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   20377:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   2037b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   2037f:	c9                   	leave
   20380:	c3                   	ret
   20381:	90                   	nop

0000000000020382 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   20382:	55                   	push   %rbp
   20383:	48 89 e5             	mov    %rsp,%rbp
   20386:	48 83 ec 20          	sub    $0x20,%rsp
   2038a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2038e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20392:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2039a:	48 89 c7             	mov    %rax,%rdi
   2039d:	e8 e4 0e 00 00       	call   21286 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   203a2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   203a6:	0f 92 c0             	setb   %al
   203a9:	0f b6 c0             	movzbl %al,%eax
   203ac:	48 85 c0             	test   %rax,%rax
   203af:	0f 95 c0             	setne  %al
   203b2:	84 c0                	test   %al,%al
   203b4:	74 1a                	je     203d0 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   203b6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   203bd:	ff ff 1f 
   203c0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   203c4:	73 05                	jae    203cb <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   203c6:	e8 d5 4f fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   203cb:	e8 80 4d fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   203d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   203d4:	48 c1 e0 03          	shl    $0x3,%rax
   203d8:	48 89 c7             	mov    %rax,%rdi
   203db:	e8 40 51 fe ff       	call   5520 <_Znwm@plt>
   203e0:	90                   	nop
      }
   203e1:	c9                   	leave
   203e2:	c3                   	ret

00000000000203e3 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   203e3:	55                   	push   %rbp
   203e4:	48 89 e5             	mov    %rsp,%rbp
   203e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   203eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   203ef:	5d                   	pop    %rbp
   203f0:	c3                   	ret

00000000000203f1 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   203f1:	55                   	push   %rbp
   203f2:	48 89 e5             	mov    %rsp,%rbp
   203f5:	48 83 ec 30          	sub    $0x30,%rsp
   203f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   203fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   20401:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   20405:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   20409:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2040d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   20411:	48 c1 f8 03          	sar    $0x3,%rax
   20415:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20419:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2041e:	7e 1f                	jle    2043f <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   20420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20424:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2042b:	00 
   2042c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   20430:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20434:	48 89 ce             	mov    %rcx,%rsi
   20437:	48 89 c7             	mov    %rax,%rdi
   2043a:	e8 11 55 fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   2043f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20443:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2044a:	00 
   2044b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2044f:	48 01 d0             	add    %rdx,%rax
    }
   20452:	c9                   	leave
   20453:	c3                   	ret

0000000000020454 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   20454:	55                   	push   %rbp
   20455:	48 89 e5             	mov    %rsp,%rbp
   20458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2045c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20460:	90                   	nop
   20461:	5d                   	pop    %rbp
   20462:	c3                   	ret
   20463:	90                   	nop

0000000000020464 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   20464:	55                   	push   %rbp
   20465:	48 89 e5             	mov    %rsp,%rbp
   20468:	48 83 ec 20          	sub    $0x20,%rsp
   2046c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20470:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20474:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   20478:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2047c:	48 89 d0             	mov    %rdx,%rax
   2047f:	48 c1 e0 03          	shl    $0x3,%rax
   20483:	48 01 d0             	add    %rdx,%rax
   20486:	48 c1 e0 04          	shl    $0x4,%rax
   2048a:	48 89 c2             	mov    %rax,%rdx
   2048d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20491:	48 89 d6             	mov    %rdx,%rsi
   20494:	48 89 c7             	mov    %rax,%rdi
   20497:	e8 a4 50 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   2049c:	c9                   	leave
   2049d:	c3                   	ret

000000000002049e <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   2049e:	55                   	push   %rbp
   2049f:	48 89 e5             	mov    %rsp,%rbp
   204a2:	48 83 ec 10          	sub    $0x10,%rsp
   204a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   204aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   204ae:	48 89 c7             	mov    %rax,%rdi
   204b1:	e8 e4 0d 00 00       	call   2129a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   204b6:	c9                   	leave
   204b7:	c3                   	ret

00000000000204b8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   204b8:	55                   	push   %rbp
   204b9:	48 89 e5             	mov    %rsp,%rbp
   204bc:	48 83 ec 20          	sub    $0x20,%rsp
   204c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   204c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   204c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   204cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   204d0:	48 89 c7             	mov    %rax,%rdi
   204d3:	e8 dc 0d 00 00       	call   212b4 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   204d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   204dc:	0f 92 c0             	setb   %al
   204df:	0f b6 c0             	movzbl %al,%eax
   204e2:	48 85 c0             	test   %rax,%rax
   204e5:	0f 95 c0             	setne  %al
   204e8:	84 c0                	test   %al,%al
   204ea:	74 1a                	je     20506 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   204ec:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   204f3:	1c c7 01 
   204f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   204fa:	73 05                	jae    20501 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   204fc:	e8 9f 4e fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   20501:	e8 4a 4c fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   20506:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2050a:	48 89 d0             	mov    %rdx,%rax
   2050d:	48 c1 e0 03          	shl    $0x3,%rax
   20511:	48 01 d0             	add    %rdx,%rax
   20514:	48 c1 e0 04          	shl    $0x4,%rax
   20518:	48 89 c7             	mov    %rax,%rdi
   2051b:	e8 00 50 fe ff       	call   5520 <_Znwm@plt>
   20520:	90                   	nop
      }
   20521:	c9                   	leave
   20522:	c3                   	ret

0000000000020523 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   20523:	55                   	push   %rbp
   20524:	48 89 e5             	mov    %rsp,%rbp
   20527:	48 83 ec 20          	sub    $0x20,%rsp
   2052b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2052f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20533:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   20537:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2053b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2053f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20543:	48 89 ce             	mov    %rcx,%rsi
   20546:	48 89 c7             	mov    %rax,%rdi
   20549:	e8 7a 0d 00 00       	call   212c8 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   2054e:	c9                   	leave
   2054f:	c3                   	ret

0000000000020550 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   20550:	55                   	push   %rbp
   20551:	48 89 e5             	mov    %rsp,%rbp
   20554:	48 83 ec 10          	sub    $0x10,%rsp
   20558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   2055c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20560:	48 89 c7             	mov    %rax,%rdi
   20563:	e8 ac 0d 00 00       	call   21314 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   20568:	c9                   	leave
   20569:	c3                   	ret

000000000002056a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   2056a:	55                   	push   %rbp
   2056b:	48 89 e5             	mov    %rsp,%rbp
   2056e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   20572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20576:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2057d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20581:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   20588:	00 
   20589:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2058d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   20594:	00 
	{ }
   20595:	90                   	nop
   20596:	5d                   	pop    %rbp
   20597:	c3                   	ret

0000000000020598 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   20598:	55                   	push   %rbp
   20599:	48 89 e5             	mov    %rsp,%rbp
   2059c:	48 83 ec 10          	sub    $0x10,%rsp
   205a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   205a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   205a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   205ad:	74 15                	je     205c4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   205af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   205b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   205b7:	48 89 d6             	mov    %rdx,%rsi
   205ba:	48 89 c7             	mov    %rax,%rdi
   205bd:	e8 6c 0d 00 00       	call   2132e <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   205c2:	eb 05                	jmp    205c9 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   205c4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   205c9:	c9                   	leave
   205ca:	c3                   	ret

00000000000205cb <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   205cb:	55                   	push   %rbp
   205cc:	48 89 e5             	mov    %rsp,%rbp
   205cf:	48 83 ec 20          	sub    $0x20,%rsp
   205d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   205d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   205db:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   205df:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   205e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   205e7:	48 89 d6             	mov    %rdx,%rsi
   205ea:	48 89 c7             	mov    %rax,%rdi
   205ed:	e8 66 0d 00 00       	call   21358 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   205f2:	c9                   	leave
   205f3:	c3                   	ret

00000000000205f4 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   205f4:	55                   	push   %rbp
   205f5:	48 89 e5             	mov    %rsp,%rbp
   205f8:	48 83 ec 20          	sub    $0x20,%rsp
   205fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20600:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20604:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   20608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2060c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20613:	00 
   20614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20618:	48 89 d6             	mov    %rdx,%rsi
   2061b:	48 89 c7             	mov    %rax,%rdi
   2061e:	e8 1d 4f fe ff       	call   5540 <_ZdlPvm@plt>
      }
   20623:	c9                   	leave
   20624:	c3                   	ret

0000000000020625 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   20625:	55                   	push   %rbp
   20626:	48 89 e5             	mov    %rsp,%rbp
   20629:	48 83 ec 10          	sub    $0x10,%rsp
   2062d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20635:	48 89 c7             	mov    %rax,%rdi
   20638:	e8 79 0d 00 00       	call   213b6 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   2063d:	c9                   	leave
   2063e:	c3                   	ret

000000000002063f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   2063f:	55                   	push   %rbp
   20640:	48 89 e5             	mov    %rsp,%rbp
   20643:	48 83 ec 20          	sub    $0x20,%rsp
   20647:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2064b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   2064f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20654:	74 40                	je     20696 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   20656:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2065a:	48 89 c7             	mov    %rax,%rdi
   2065d:	e8 6e 0d 00 00       	call   213d0 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   20662:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   20666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2066a:	48 89 c7             	mov    %rax,%rdi
   2066d:	e8 6c 0d 00 00       	call   213de <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   20672:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   20677:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2067b:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   2067f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20683:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20687:	48 89 ce             	mov    %rcx,%rsi
   2068a:	48 89 c7             	mov    %rax,%rdi
   2068d:	e8 73 0d 00 00       	call   21405 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   20692:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   20696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   2069a:	c9                   	leave
   2069b:	c3                   	ret

000000000002069c <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   2069c:	55                   	push   %rbp
   2069d:	48 89 e5             	mov    %rsp,%rbp
   206a0:	48 83 ec 20          	sub    $0x20,%rsp
   206a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   206a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   206ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   206b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   206b4:	48 89 c7             	mov    %rax,%rdi
   206b7:	e8 8e 0d 00 00       	call   2144a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   206bc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   206c0:	0f 92 c0             	setb   %al
   206c3:	0f b6 c0             	movzbl %al,%eax
   206c6:	48 85 c0             	test   %rax,%rax
   206c9:	0f 95 c0             	setne  %al
   206cc:	84 c0                	test   %al,%al
   206ce:	74 1a                	je     206ea <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   206d0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   206d7:	ff ff 1f 
   206da:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   206de:	73 05                	jae    206e5 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   206e0:	e8 bb 4c fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   206e5:	e8 66 4a fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   206ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   206ee:	48 c1 e0 03          	shl    $0x3,%rax
   206f2:	48 89 c7             	mov    %rax,%rdi
   206f5:	e8 26 4e fe ff       	call   5520 <_Znwm@plt>
   206fa:	90                   	nop
      }
   206fb:	c9                   	leave
   206fc:	c3                   	ret

00000000000206fd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   206fd:	55                   	push   %rbp
   206fe:	48 89 e5             	mov    %rsp,%rbp
   20701:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   20705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20709:	5d                   	pop    %rbp
   2070a:	c3                   	ret

000000000002070b <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   2070b:	55                   	push   %rbp
   2070c:	48 89 e5             	mov    %rsp,%rbp
   2070f:	48 83 ec 30          	sub    $0x30,%rsp
   20713:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20717:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2071b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2071f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   20723:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20727:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2072b:	48 c1 f8 03          	sar    $0x3,%rax
   2072f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20733:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20738:	7e 1f                	jle    20759 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   2073a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2073e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20745:	00 
   20746:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   2074a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2074e:	48 89 ce             	mov    %rcx,%rsi
   20751:	48 89 c7             	mov    %rax,%rdi
   20754:	e8 f7 51 fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   20759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2075d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20764:	00 
   20765:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20769:	48 01 d0             	add    %rdx,%rax
    }
   2076c:	c9                   	leave
   2076d:	c3                   	ret

000000000002076e <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   2076e:	55                   	push   %rbp
   2076f:	48 89 e5             	mov    %rsp,%rbp
   20772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20776:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2077a:	90                   	nop
   2077b:	5d                   	pop    %rbp
   2077c:	c3                   	ret

000000000002077d <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   2077d:	55                   	push   %rbp
   2077e:	48 89 e5             	mov    %rsp,%rbp
   20781:	48 83 ec 20          	sub    $0x20,%rsp
   20785:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20789:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2078d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   20791:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20795:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2079d:	48 89 ce             	mov    %rcx,%rsi
   207a0:	48 89 c7             	mov    %rax,%rdi
   207a3:	e8 b6 0c 00 00       	call   2145e <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   207a8:	c9                   	leave
   207a9:	c3                   	ret

00000000000207aa <_ZNSt16allocator_traitsISaIP10VkBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   207aa:	55                   	push   %rbp
   207ab:	48 89 e5             	mov    %rsp,%rbp
   207ae:	48 83 ec 10          	sub    $0x10,%rsp
   207b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   207b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   207ba:	48 89 c7             	mov    %rax,%rdi
   207bd:	e8 e8 0c 00 00       	call   214aa <_ZNKSt15__new_allocatorIP10VkBuffer_TE8max_sizeEv>
      }
   207c2:	c9                   	leave
   207c3:	c3                   	ret

00000000000207c4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP10VkBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   207c4:	55                   	push   %rbp
   207c5:	48 89 e5             	mov    %rsp,%rbp
   207c8:	48 83 ec 20          	sub    $0x20,%rsp
   207cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   207d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   207d4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   207d9:	74 40                	je     2081b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP10VkBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   207db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   207df:	48 89 c7             	mov    %rax,%rdi
   207e2:	e8 dd 0c 00 00       	call   214c4 <_ZSt11__addressofIP10VkBuffer_TEPT_RS2_>
   207e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   207eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   207ef:	48 89 c7             	mov    %rax,%rdi
   207f2:	e8 db 0c 00 00       	call   214d2 <_ZSt10_ConstructIP10VkBuffer_TJEEvPT_DpOT0_>
	      ++__first;
   207f7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   207fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20800:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   20804:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2080c:	48 89 ce             	mov    %rcx,%rsi
   2080f:	48 89 c7             	mov    %rax,%rdi
   20812:	e8 e2 0c 00 00       	call   214f9 <_ZSt6fill_nIPP10VkBuffer_TmS1_ET_S3_T0_RKT1_>
   20817:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   2081b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   2081f:	c9                   	leave
   20820:	c3                   	ret
   20821:	90                   	nop

0000000000020822 <_ZNSt15__new_allocatorIP10VkBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   20822:	55                   	push   %rbp
   20823:	48 89 e5             	mov    %rsp,%rbp
   20826:	48 83 ec 20          	sub    $0x20,%rsp
   2082a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2082e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20832:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2083a:	48 89 c7             	mov    %rax,%rdi
   2083d:	e8 fc 0c 00 00       	call   2153e <_ZNKSt15__new_allocatorIP10VkBuffer_TE11_M_max_sizeEv>
   20842:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20846:	0f 92 c0             	setb   %al
   20849:	0f b6 c0             	movzbl %al,%eax
   2084c:	48 85 c0             	test   %rax,%rax
   2084f:	0f 95 c0             	setne  %al
   20852:	84 c0                	test   %al,%al
   20854:	74 1a                	je     20870 <_ZNSt15__new_allocatorIP10VkBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   20856:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   2085d:	ff ff 1f 
   20860:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20864:	73 05                	jae    2086b <_ZNSt15__new_allocatorIP10VkBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   20866:	e8 35 4b fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   2086b:	e8 e0 48 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   20870:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20874:	48 c1 e0 03          	shl    $0x3,%rax
   20878:	48 89 c7             	mov    %rax,%rdi
   2087b:	e8 a0 4c fe ff       	call   5520 <_Znwm@plt>
   20880:	90                   	nop
      }
   20881:	c9                   	leave
   20882:	c3                   	ret

0000000000020883 <_ZSt12__niter_baseIPP10VkBuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   20883:	55                   	push   %rbp
   20884:	48 89 e5             	mov    %rsp,%rbp
   20887:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   2088b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2088f:	5d                   	pop    %rbp
   20890:	c3                   	ret

0000000000020891 <_ZSt14__relocate_a_1IP10VkBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   20891:	55                   	push   %rbp
   20892:	48 89 e5             	mov    %rsp,%rbp
   20895:	48 83 ec 30          	sub    $0x30,%rsp
   20899:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2089d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   208a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   208a5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   208a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   208ad:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   208b1:	48 c1 f8 03          	sar    $0x3,%rax
   208b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   208b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   208be:	7e 1f                	jle    208df <_ZSt14__relocate_a_1IP10VkBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   208c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   208c4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   208cb:	00 
   208cc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   208d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   208d4:	48 89 ce             	mov    %rcx,%rsi
   208d7:	48 89 c7             	mov    %rax,%rdi
   208da:	e8 71 50 fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   208df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   208e3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   208ea:	00 
   208eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   208ef:	48 01 d0             	add    %rdx,%rax
    }
   208f2:	c9                   	leave
   208f3:	c3                   	ret

00000000000208f4 <_ZNSt16allocator_traitsISaIP16VkDeviceMemory_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   208f4:	55                   	push   %rbp
   208f5:	48 89 e5             	mov    %rsp,%rbp
   208f8:	48 83 ec 10          	sub    $0x10,%rsp
   208fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20904:	48 89 c7             	mov    %rax,%rdi
   20907:	e8 46 0c 00 00       	call   21552 <_ZNKSt15__new_allocatorIP16VkDeviceMemory_TE8max_sizeEv>
      }
   2090c:	c9                   	leave
   2090d:	c3                   	ret

000000000002090e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP16VkDeviceMemory_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   2090e:	55                   	push   %rbp
   2090f:	48 89 e5             	mov    %rsp,%rbp
   20912:	48 83 ec 20          	sub    $0x20,%rsp
   20916:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2091a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   2091e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20923:	74 40                	je     20965 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP16VkDeviceMemory_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   20925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20929:	48 89 c7             	mov    %rax,%rdi
   2092c:	e8 3b 0c 00 00       	call   2156c <_ZSt11__addressofIP16VkDeviceMemory_TEPT_RS2_>
   20931:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   20935:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20939:	48 89 c7             	mov    %rax,%rdi
   2093c:	e8 39 0c 00 00       	call   2157a <_ZSt10_ConstructIP16VkDeviceMemory_TJEEvPT_DpOT0_>
	      ++__first;
   20941:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   20946:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2094a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   2094e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20952:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20956:	48 89 ce             	mov    %rcx,%rsi
   20959:	48 89 c7             	mov    %rax,%rdi
   2095c:	e8 40 0c 00 00       	call   215a1 <_ZSt6fill_nIPP16VkDeviceMemory_TmS1_ET_S3_T0_RKT1_>
   20961:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   20965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   20969:	c9                   	leave
   2096a:	c3                   	ret
   2096b:	90                   	nop

000000000002096c <_ZNSt15__new_allocatorIP16VkDeviceMemory_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   2096c:	55                   	push   %rbp
   2096d:	48 89 e5             	mov    %rsp,%rbp
   20970:	48 83 ec 20          	sub    $0x20,%rsp
   20974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20978:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2097c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20984:	48 89 c7             	mov    %rax,%rdi
   20987:	e8 5a 0c 00 00       	call   215e6 <_ZNKSt15__new_allocatorIP16VkDeviceMemory_TE11_M_max_sizeEv>
   2098c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20990:	0f 92 c0             	setb   %al
   20993:	0f b6 c0             	movzbl %al,%eax
   20996:	48 85 c0             	test   %rax,%rax
   20999:	0f 95 c0             	setne  %al
   2099c:	84 c0                	test   %al,%al
   2099e:	74 1a                	je     209ba <_ZNSt15__new_allocatorIP16VkDeviceMemory_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   209a0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   209a7:	ff ff 1f 
   209aa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   209ae:	73 05                	jae    209b5 <_ZNSt15__new_allocatorIP16VkDeviceMemory_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   209b0:	e8 eb 49 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   209b5:	e8 96 47 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   209ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   209be:	48 c1 e0 03          	shl    $0x3,%rax
   209c2:	48 89 c7             	mov    %rax,%rdi
   209c5:	e8 56 4b fe ff       	call   5520 <_Znwm@plt>
   209ca:	90                   	nop
      }
   209cb:	c9                   	leave
   209cc:	c3                   	ret

00000000000209cd <_ZSt12__niter_baseIPP16VkDeviceMemory_TET_S3_>:
    __niter_base(_Iterator __it)
   209cd:	55                   	push   %rbp
   209ce:	48 89 e5             	mov    %rsp,%rbp
   209d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   209d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   209d9:	5d                   	pop    %rbp
   209da:	c3                   	ret

00000000000209db <_ZSt14__relocate_a_1IP16VkDeviceMemory_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   209db:	55                   	push   %rbp
   209dc:	48 89 e5             	mov    %rsp,%rbp
   209df:	48 83 ec 30          	sub    $0x30,%rsp
   209e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   209e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   209eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   209ef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   209f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   209f7:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   209fb:	48 c1 f8 03          	sar    $0x3,%rax
   209ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20a03:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20a08:	7e 1f                	jle    20a29 <_ZSt14__relocate_a_1IP16VkDeviceMemory_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   20a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20a0e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20a15:	00 
   20a16:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   20a1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a1e:	48 89 ce             	mov    %rcx,%rsi
   20a21:	48 89 c7             	mov    %rax,%rdi
   20a24:	e8 27 4f fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   20a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20a2d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20a34:	00 
   20a35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a39:	48 01 d0             	add    %rdx,%rax
    }
   20a3c:	c9                   	leave
   20a3d:	c3                   	ret

0000000000020a3e <_ZN3glmmlIfLNS_9qualifierE0EEENS_3vecILi3ET_XT0_EEERKS4_S6_>:
			scalar.x * v.y,
			scalar.x * v.z);
	}

	template<typename T, qualifier Q>
	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2)
   20a3e:	55                   	push   %rbp
   20a3f:	48 89 e5             	mov    %rsp,%rbp
   20a42:	48 83 ec 40          	sub    $0x40,%rsp
   20a46:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20a4a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	{
		return vec<3, T, Q>(
			v1.x * v2.x,
			v1.y * v2.y,
			v1.z * v2.z);
   20a4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a52:	f3 0f 10 48 08       	movss  0x8(%rax),%xmm1
   20a57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20a5b:	f3 0f 10 40 08       	movss  0x8(%rax),%xmm0
		return vec<3, T, Q>(
   20a60:	0f 28 d1             	movaps %xmm1,%xmm2
   20a63:	f3 0f 59 d0          	mulss  %xmm0,%xmm2
			v1.y * v2.y,
   20a67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a6b:	f3 0f 10 48 04       	movss  0x4(%rax),%xmm1
   20a70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20a74:	f3 0f 10 40 04       	movss  0x4(%rax),%xmm0
		return vec<3, T, Q>(
   20a79:	0f 28 d9             	movaps %xmm1,%xmm3
   20a7c:	f3 0f 59 d8          	mulss  %xmm0,%xmm3
			v1.x * v2.x,
   20a80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a84:	f3 0f 10 08          	movss  (%rax),%xmm1
   20a88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20a8c:	f3 0f 10 00          	movss  (%rax),%xmm0
		return vec<3, T, Q>(
   20a90:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
   20a94:	66 0f 7e ca          	movd   %xmm1,%edx
   20a98:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   20a9c:	0f 28 cb             	movaps %xmm3,%xmm1
   20a9f:	66 0f 6e c2          	movd   %edx,%xmm0
   20aa3:	48 89 c7             	mov    %rax,%rdi
   20aa6:	e8 2f 4a ff ff       	call   154da <_ZN3glm3vecILi3EfLNS_9qualifierE0EEC1Efff>
			v1.z * v2.z);
   20aab:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   20aaf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   20ab3:	8b 45 fc             	mov    -0x4(%rbp),%eax
   20ab6:	89 45 f0             	mov    %eax,-0x10(%rbp)
   20ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20abd:	f3 0f 10 45 f0       	movss  -0x10(%rbp),%xmm0
   20ac2:	0f 28 c8             	movaps %xmm0,%xmm1
	}
   20ac5:	66 48 0f 6e c0       	movq   %rax,%xmm0
   20aca:	c9                   	leave
   20acb:	c3                   	ret

0000000000020acc <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   20acc:	55                   	push   %rbp
   20acd:	48 89 e5             	mov    %rsp,%rbp
   20ad0:	48 83 ec 10          	sub    $0x10,%rsp
   20ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20adc:	48 89 c7             	mov    %rax,%rdi
   20adf:	e8 16 0b 00 00       	call   215fa <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   20ae4:	c9                   	leave
   20ae5:	c3                   	ret

0000000000020ae6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   20ae6:	55                   	push   %rbp
   20ae7:	48 89 e5             	mov    %rsp,%rbp
   20aea:	48 83 ec 20          	sub    $0x20,%rsp
   20aee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20af2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   20af6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20afb:	74 40                	je     20b3d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   20afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b01:	48 89 c7             	mov    %rax,%rdi
   20b04:	e8 0b 0b 00 00       	call   21614 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   20b09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   20b0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20b11:	48 89 c7             	mov    %rax,%rdi
   20b14:	e8 09 0b 00 00       	call   21622 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   20b19:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   20b1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20b22:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   20b26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20b2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b2e:	48 89 ce             	mov    %rcx,%rsi
   20b31:	48 89 c7             	mov    %rax,%rdi
   20b34:	e8 10 0b 00 00       	call   21649 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   20b39:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   20b3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   20b41:	c9                   	leave
   20b42:	c3                   	ret
   20b43:	90                   	nop

0000000000020b44 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   20b44:	55                   	push   %rbp
   20b45:	48 89 e5             	mov    %rsp,%rbp
   20b48:	48 83 ec 20          	sub    $0x20,%rsp
   20b4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20b50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20b54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20b5c:	48 89 c7             	mov    %rax,%rdi
   20b5f:	e8 2a 0b 00 00       	call   2168e <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   20b64:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20b68:	0f 92 c0             	setb   %al
   20b6b:	0f b6 c0             	movzbl %al,%eax
   20b6e:	48 85 c0             	test   %rax,%rax
   20b71:	0f 95 c0             	setne  %al
   20b74:	84 c0                	test   %al,%al
   20b76:	74 1a                	je     20b92 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   20b78:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   20b7f:	ff ff 1f 
   20b82:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20b86:	73 05                	jae    20b8d <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   20b88:	e8 13 48 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   20b8d:	e8 be 45 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   20b92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20b96:	48 c1 e0 03          	shl    $0x3,%rax
   20b9a:	48 89 c7             	mov    %rax,%rdi
   20b9d:	e8 7e 49 fe ff       	call   5520 <_Znwm@plt>
   20ba2:	90                   	nop
      }
   20ba3:	c9                   	leave
   20ba4:	c3                   	ret

0000000000020ba5 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   20ba5:	55                   	push   %rbp
   20ba6:	48 89 e5             	mov    %rsp,%rbp
   20ba9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   20bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20bb1:	5d                   	pop    %rbp
   20bb2:	c3                   	ret

0000000000020bb3 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   20bb3:	55                   	push   %rbp
   20bb4:	48 89 e5             	mov    %rsp,%rbp
   20bb7:	48 83 ec 30          	sub    $0x30,%rsp
   20bbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20bbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   20bc3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   20bc7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   20bcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20bcf:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   20bd3:	48 c1 f8 03          	sar    $0x3,%rax
   20bd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20bdb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20be0:	7e 1f                	jle    20c01 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   20be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20be6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20bed:	00 
   20bee:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   20bf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20bf6:	48 89 ce             	mov    %rcx,%rsi
   20bf9:	48 89 c7             	mov    %rax,%rdi
   20bfc:	e8 4f 4d fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   20c01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20c05:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20c0c:	00 
   20c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c11:	48 01 d0             	add    %rdx,%rax
    }
   20c14:	c9                   	leave
   20c15:	c3                   	ret

0000000000020c16 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   20c16:	55                   	push   %rbp
   20c17:	48 89 e5             	mov    %rsp,%rbp
   20c1a:	48 83 ec 10          	sub    $0x10,%rsp
   20c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20c26:	48 89 c7             	mov    %rax,%rdi
   20c29:	e8 74 0a 00 00       	call   216a2 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   20c2e:	c9                   	leave
   20c2f:	c3                   	ret

0000000000020c30 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   20c30:	55                   	push   %rbp
   20c31:	48 89 e5             	mov    %rsp,%rbp
   20c34:	48 83 ec 20          	sub    $0x20,%rsp
   20c38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20c3c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   20c40:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20c45:	74 40                	je     20c87 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   20c47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c4b:	48 89 c7             	mov    %rax,%rdi
   20c4e:	e8 69 0a 00 00       	call   216bc <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   20c53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   20c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20c5b:	48 89 c7             	mov    %rax,%rdi
   20c5e:	e8 67 0a 00 00       	call   216ca <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   20c63:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   20c68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20c6c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   20c70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20c74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20c78:	48 89 ce             	mov    %rcx,%rsi
   20c7b:	48 89 c7             	mov    %rax,%rdi
   20c7e:	e8 6e 0a 00 00       	call   216f1 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   20c83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   20c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   20c8b:	c9                   	leave
   20c8c:	c3                   	ret
   20c8d:	90                   	nop

0000000000020c8e <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   20c8e:	55                   	push   %rbp
   20c8f:	48 89 e5             	mov    %rsp,%rbp
   20c92:	48 83 ec 20          	sub    $0x20,%rsp
   20c96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20c9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20c9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ca6:	48 89 c7             	mov    %rax,%rdi
   20ca9:	e8 88 0a 00 00       	call   21736 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   20cae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20cb2:	0f 92 c0             	setb   %al
   20cb5:	0f b6 c0             	movzbl %al,%eax
   20cb8:	48 85 c0             	test   %rax,%rax
   20cbb:	0f 95 c0             	setne  %al
   20cbe:	84 c0                	test   %al,%al
   20cc0:	74 1a                	je     20cdc <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   20cc2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   20cc9:	ff ff 1f 
   20ccc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20cd0:	73 05                	jae    20cd7 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   20cd2:	e8 c9 46 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   20cd7:	e8 74 44 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   20cdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20ce0:	48 c1 e0 03          	shl    $0x3,%rax
   20ce4:	48 89 c7             	mov    %rax,%rdi
   20ce7:	e8 34 48 fe ff       	call   5520 <_Znwm@plt>
   20cec:	90                   	nop
      }
   20ced:	c9                   	leave
   20cee:	c3                   	ret

0000000000020cef <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   20cef:	55                   	push   %rbp
   20cf0:	48 89 e5             	mov    %rsp,%rbp
   20cf3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   20cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20cfb:	5d                   	pop    %rbp
   20cfc:	c3                   	ret

0000000000020cfd <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   20cfd:	55                   	push   %rbp
   20cfe:	48 89 e5             	mov    %rsp,%rbp
   20d01:	48 83 ec 30          	sub    $0x30,%rsp
   20d05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20d09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   20d0d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   20d11:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   20d15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20d19:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   20d1d:	48 c1 f8 03          	sar    $0x3,%rax
   20d21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20d25:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20d2a:	7e 1f                	jle    20d4b <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   20d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d30:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20d37:	00 
   20d38:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   20d3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20d40:	48 89 ce             	mov    %rcx,%rsi
   20d43:	48 89 c7             	mov    %rax,%rdi
   20d46:	e8 05 4c fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   20d4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d4f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20d56:	00 
   20d57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20d5b:	48 01 d0             	add    %rdx,%rax
    }
   20d5e:	c9                   	leave
   20d5f:	c3                   	ret

0000000000020d60 <_ZNKSt15__new_allocatorIP23VkDescriptorSetLayout_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   20d60:	55                   	push   %rbp
   20d61:	48 89 e5             	mov    %rsp,%rbp
   20d64:	48 83 ec 10          	sub    $0x10,%rsp
   20d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   20d6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d70:	48 89 c7             	mov    %rax,%rdi
   20d73:	e8 d2 09 00 00       	call   2174a <_ZNKSt15__new_allocatorIP23VkDescriptorSetLayout_TE11_M_max_sizeEv>
   20d78:	c9                   	leave
   20d79:	c3                   	ret

0000000000020d7a <_ZNSt16allocator_traitsISaIP23VkDescriptorSetLayout_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   20d7a:	55                   	push   %rbp
   20d7b:	48 89 e5             	mov    %rsp,%rbp
   20d7e:	48 83 ec 10          	sub    $0x10,%rsp
   20d82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20d86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   20d8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d92:	ba 00 00 00 00       	mov    $0x0,%edx
   20d97:	48 89 ce             	mov    %rcx,%rsi
   20d9a:	48 89 c7             	mov    %rax,%rdi
   20d9d:	e8 bc 09 00 00       	call   2175e <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TE8allocateEmPKv>
   20da2:	c9                   	leave
   20da3:	c3                   	ret

0000000000020da4 <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   20da4:	55                   	push   %rbp
   20da5:	48 89 e5             	mov    %rsp,%rbp
   20da8:	48 83 ec 20          	sub    $0x20,%rsp
   20dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20db0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20db4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   20db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20dbc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20dc3:	00 
   20dc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20dc8:	48 89 d6             	mov    %rdx,%rsi
   20dcb:	48 89 c7             	mov    %rax,%rdi
   20dce:	e8 6d 47 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   20dd3:	c9                   	leave
   20dd4:	c3                   	ret

0000000000020dd5 <_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPP23VkDescriptorSetLayout_TmS3_EET_S5_T0_RKT1_>:
        __uninit_fill_n(_ForwardIterator __first, _Size __n,
   20dd5:	55                   	push   %rbp
   20dd6:	48 89 e5             	mov    %rsp,%rbp
   20dd9:	48 83 ec 20          	sub    $0x20,%rsp
   20ddd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20de1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20de5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::fill_n(__first, __n, __x); }
   20de9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20ded:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20df5:	48 89 ce             	mov    %rcx,%rsi
   20df8:	48 89 c7             	mov    %rax,%rdi
   20dfb:	e8 bf 09 00 00       	call   217bf <_ZSt6fill_nIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_>
   20e00:	c9                   	leave
   20e01:	c3                   	ret

0000000000020e02 <_ZNSt16allocator_traitsISaIP17VkDescriptorSet_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   20e02:	55                   	push   %rbp
   20e03:	48 89 e5             	mov    %rsp,%rbp
   20e06:	48 83 ec 10          	sub    $0x10,%rsp
   20e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e12:	48 89 c7             	mov    %rax,%rdi
   20e15:	e8 ea 09 00 00       	call   21804 <_ZNKSt15__new_allocatorIP17VkDescriptorSet_TE8max_sizeEv>
      }
   20e1a:	c9                   	leave
   20e1b:	c3                   	ret

0000000000020e1c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkDescriptorSet_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   20e1c:	55                   	push   %rbp
   20e1d:	48 89 e5             	mov    %rsp,%rbp
   20e20:	48 83 ec 20          	sub    $0x20,%rsp
   20e24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20e28:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   20e2c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   20e31:	74 40                	je     20e73 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkDescriptorSet_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   20e33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20e37:	48 89 c7             	mov    %rax,%rdi
   20e3a:	e8 df 09 00 00       	call   2181e <_ZSt11__addressofIP17VkDescriptorSet_TEPT_RS2_>
   20e3f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   20e43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e47:	48 89 c7             	mov    %rax,%rdi
   20e4a:	e8 dd 09 00 00       	call   2182c <_ZSt10_ConstructIP17VkDescriptorSet_TJEEvPT_DpOT0_>
	      ++__first;
   20e4f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   20e54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20e58:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   20e5c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   20e60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20e64:	48 89 ce             	mov    %rcx,%rsi
   20e67:	48 89 c7             	mov    %rax,%rdi
   20e6a:	e8 e4 09 00 00       	call   21853 <_ZSt6fill_nIPP17VkDescriptorSet_TmS1_ET_S3_T0_RKT1_>
   20e6f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   20e73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   20e77:	c9                   	leave
   20e78:	c3                   	ret
   20e79:	90                   	nop

0000000000020e7a <_ZNSt15__new_allocatorIP17VkDescriptorSet_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   20e7a:	55                   	push   %rbp
   20e7b:	48 89 e5             	mov    %rsp,%rbp
   20e7e:	48 83 ec 20          	sub    $0x20,%rsp
   20e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20e8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e92:	48 89 c7             	mov    %rax,%rdi
   20e95:	e8 fe 09 00 00       	call   21898 <_ZNKSt15__new_allocatorIP17VkDescriptorSet_TE11_M_max_sizeEv>
   20e9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20e9e:	0f 92 c0             	setb   %al
   20ea1:	0f b6 c0             	movzbl %al,%eax
   20ea4:	48 85 c0             	test   %rax,%rax
   20ea7:	0f 95 c0             	setne  %al
   20eaa:	84 c0                	test   %al,%al
   20eac:	74 1a                	je     20ec8 <_ZNSt15__new_allocatorIP17VkDescriptorSet_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   20eae:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   20eb5:	ff ff 1f 
   20eb8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   20ebc:	73 05                	jae    20ec3 <_ZNSt15__new_allocatorIP17VkDescriptorSet_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   20ebe:	e8 dd 44 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   20ec3:	e8 88 42 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   20ec8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20ecc:	48 c1 e0 03          	shl    $0x3,%rax
   20ed0:	48 89 c7             	mov    %rax,%rdi
   20ed3:	e8 48 46 fe ff       	call   5520 <_Znwm@plt>
   20ed8:	90                   	nop
      }
   20ed9:	c9                   	leave
   20eda:	c3                   	ret

0000000000020edb <_ZSt12__niter_baseIPP17VkDescriptorSet_TET_S3_>:
    __niter_base(_Iterator __it)
   20edb:	55                   	push   %rbp
   20edc:	48 89 e5             	mov    %rsp,%rbp
   20edf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   20ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ee7:	5d                   	pop    %rbp
   20ee8:	c3                   	ret

0000000000020ee9 <_ZSt14__relocate_a_1IP17VkDescriptorSet_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   20ee9:	55                   	push   %rbp
   20eea:	48 89 e5             	mov    %rsp,%rbp
   20eed:	48 83 ec 30          	sub    $0x30,%rsp
   20ef1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20ef5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   20ef9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   20efd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   20f01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20f05:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   20f09:	48 c1 f8 03          	sar    $0x3,%rax
   20f0d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   20f11:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20f16:	7e 1f                	jle    20f37 <_ZSt14__relocate_a_1IP17VkDescriptorSet_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   20f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20f23:	00 
   20f24:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   20f28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20f2c:	48 89 ce             	mov    %rcx,%rsi
   20f2f:	48 89 c7             	mov    %rax,%rdi
   20f32:	e8 19 4a fe ff       	call   5950 <memmove@plt>
      return __result + __count;
   20f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f3b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20f42:	00 
   20f43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20f47:	48 01 d0             	add    %rdx,%rax
    }
   20f4a:	c9                   	leave
   20f4b:	c3                   	ret

0000000000020f4c <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   20f4c:	55                   	push   %rbp
   20f4d:	48 89 e5             	mov    %rsp,%rbp
   20f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20f54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20f58:	90                   	nop
   20f59:	5d                   	pop    %rbp
   20f5a:	c3                   	ret

0000000000020f5b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   20f5b:	55                   	push   %rbp
   20f5c:	48 89 e5             	mov    %rsp,%rbp
   20f5f:	48 83 ec 20          	sub    $0x20,%rsp
   20f63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20f67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20f6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   20f6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20f73:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f7b:	48 89 ce             	mov    %rcx,%rsi
   20f7e:	48 89 c7             	mov    %rax,%rdi
   20f81:	e8 26 09 00 00       	call   218ac <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   20f86:	c9                   	leave
   20f87:	c3                   	ret

0000000000020f88 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
   20f88:	55                   	push   %rbp
   20f89:	48 89 e5             	mov    %rsp,%rbp
   20f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20f90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20f94:	90                   	nop
   20f95:	5d                   	pop    %rbp
   20f96:	c3                   	ret
   20f97:	90                   	nop

0000000000020f98 <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   20f98:	55                   	push   %rbp
   20f99:	48 89 e5             	mov    %rsp,%rbp
   20f9c:	48 83 ec 20          	sub    $0x20,%rsp
   20fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20fa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20fa8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   20fac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20fb0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   20fb7:	00 
   20fb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20fbc:	48 89 d6             	mov    %rdx,%rsi
   20fbf:	48 89 c7             	mov    %rax,%rdi
   20fc2:	e8 79 45 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   20fc7:	c9                   	leave
   20fc8:	c3                   	ret

0000000000020fc9 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   20fc9:	55                   	push   %rbp
   20fca:	48 89 e5             	mov    %rsp,%rbp
   20fcd:	48 83 ec 10          	sub    $0x10,%rsp
   20fd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   20fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fd9:	48 89 c7             	mov    %rax,%rdi
   20fdc:	e8 17 09 00 00       	call   218f8 <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   20fe1:	c9                   	leave
   20fe2:	c3                   	ret
   20fe3:	90                   	nop

0000000000020fe4 <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   20fe4:	55                   	push   %rbp
   20fe5:	48 89 e5             	mov    %rsp,%rbp
   20fe8:	48 83 ec 20          	sub    $0x20,%rsp
   20fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20ff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20ff4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   20ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ffc:	48 89 c7             	mov    %rax,%rdi
   20fff:	e8 0e 09 00 00       	call   21912 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   21004:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21008:	0f 92 c0             	setb   %al
   2100b:	0f b6 c0             	movzbl %al,%eax
   2100e:	48 85 c0             	test   %rax,%rax
   21011:	0f 95 c0             	setne  %al
   21014:	84 c0                	test   %al,%al
   21016:	74 1a                	je     21032 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   21018:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   2101f:	ff ff 3f 
   21022:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21026:	73 05                	jae    2102d <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   21028:	e8 73 43 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   2102d:	e8 1e 41 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   21032:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21036:	48 c1 e0 02          	shl    $0x2,%rax
   2103a:	48 89 c7             	mov    %rax,%rdi
   2103d:	e8 de 44 fe ff       	call   5520 <_Znwm@plt>
   21042:	90                   	nop
      }
   21043:	c9                   	leave
   21044:	c3                   	ret

0000000000021045 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   21045:	55                   	push   %rbp
   21046:	48 89 e5             	mov    %rsp,%rbp
   21049:	48 83 ec 20          	sub    $0x20,%rsp
   2104d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21051:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21055:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   21059:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2105d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   21061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21065:	48 89 ce             	mov    %rcx,%rsi
   21068:	48 89 c7             	mov    %rax,%rdi
   2106b:	e8 b6 08 00 00       	call   21926 <_ZSt4copyIPKjPjET0_T_S4_S3_>
   21070:	c9                   	leave
   21071:	c3                   	ret

0000000000021072 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   21072:	55                   	push   %rbp
   21073:	48 89 e5             	mov    %rsp,%rbp
   21076:	53                   	push   %rbx
   21077:	48 83 ec 28          	sub    $0x28,%rsp
   2107b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2107f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21083:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   21087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2108b:	48 89 c7             	mov    %rax,%rdi
   2108e:	e8 de 08 00 00       	call   21971 <_ZSt12__miter_baseIPKPKcET_S4_>
   21093:	48 89 c3             	mov    %rax,%rbx
   21096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2109a:	48 89 c7             	mov    %rax,%rdi
   2109d:	e8 cf 08 00 00       	call   21971 <_ZSt12__miter_baseIPKPKcET_S4_>
   210a2:	48 89 c1             	mov    %rax,%rcx
   210a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   210a9:	48 89 c2             	mov    %rax,%rdx
   210ac:	48 89 de             	mov    %rbx,%rsi
   210af:	48 89 cf             	mov    %rcx,%rdi
   210b2:	e8 c8 08 00 00       	call   2197f <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   210b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   210bb:	c9                   	leave
   210bc:	c3                   	ret
   210bd:	90                   	nop

00000000000210be <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   210be:	55                   	push   %rbp
   210bf:	48 89 e5             	mov    %rsp,%rbp
   210c2:	48 83 ec 10          	sub    $0x10,%rsp
   210c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   210ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   210ce:	48 89 c7             	mov    %rax,%rdi
   210d1:	e8 12 4a fe ff       	call   5ae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   210d6:	90                   	nop
   210d7:	c9                   	leave
   210d8:	c3                   	ret
   210d9:	90                   	nop

00000000000210da <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   210da:	55                   	push   %rbp
   210db:	48 89 e5             	mov    %rsp,%rbp
   210de:	48 83 ec 10          	sub    $0x10,%rsp
   210e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   210e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   210ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   210ee:	48 89 c7             	mov    %rax,%rdi
   210f1:	e8 c8 ff ff ff       	call   210be <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   210f6:	90                   	nop
   210f7:	c9                   	leave
   210f8:	c3                   	ret
   210f9:	90                   	nop

00000000000210fa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   210fa:	55                   	push   %rbp
   210fb:	48 89 e5             	mov    %rsp,%rbp
   210fe:	48 83 ec 20          	sub    $0x20,%rsp
   21102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21106:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2110a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   2110e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21112:	48 89 d0             	mov    %rdx,%rax
   21115:	48 c1 e0 03          	shl    $0x3,%rax
   21119:	48 01 d0             	add    %rdx,%rax
   2111c:	48 c1 e0 03          	shl    $0x3,%rax
   21120:	48 89 c2             	mov    %rax,%rdx
   21123:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21127:	48 89 d6             	mov    %rdx,%rsi
   2112a:	48 89 c7             	mov    %rax,%rdi
   2112d:	e8 0e 44 fe ff       	call   5540 <_ZdlPvm@plt>
      }
   21132:	c9                   	leave
   21133:	c3                   	ret

0000000000021134 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   21134:	55                   	push   %rbp
   21135:	48 89 e5             	mov    %rsp,%rbp
   21138:	48 83 ec 10          	sub    $0x10,%rsp
   2113c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21140:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   21144:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   21148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2114c:	ba 00 00 00 00       	mov    $0x0,%edx
   21151:	48 89 ce             	mov    %rcx,%rsi
   21154:	48 89 c7             	mov    %rax,%rdi
   21157:	e8 8e 08 00 00       	call   219ea <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   2115c:	c9                   	leave
   2115d:	c3                   	ret

000000000002115e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   2115e:	55                   	push   %rbp
   2115f:	48 89 e5             	mov    %rsp,%rbp
   21162:	41 54                	push   %r12
   21164:	53                   	push   %rbx
   21165:	48 83 ec 30          	sub    $0x30,%rsp
   21169:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2116d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21171:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   21175:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   21179:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   2117d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   21181:	48 89 c7             	mov    %rax,%rdi
   21184:	e8 06 b6 ff ff       	call   1c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   21189:	49 89 c4             	mov    %rax,%r12
   2118c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21190:	48 89 c7             	mov    %rax,%rdi
   21193:	e8 e9 b5 ff ff       	call   1c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   21198:	48 89 c3             	mov    %rax,%rbx
   2119b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2119f:	48 89 c7             	mov    %rax,%rdi
   211a2:	e8 cc b5 ff ff       	call   1c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   211a7:	48 89 c2             	mov    %rax,%rdx
   211aa:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   211ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   211b2:	4d 89 e0             	mov    %r12,%r8
   211b5:	48 89 d9             	mov    %rbx,%rcx
   211b8:	48 89 c7             	mov    %rax,%rdi
   211bb:	e8 bc 08 00 00       	call   21a7c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   211c0:	90                   	nop
   211c1:	48 83 c4 30          	add    $0x30,%rsp
   211c5:	5b                   	pop    %rbx
   211c6:	41 5c                	pop    %r12
   211c8:	5d                   	pop    %rbp
   211c9:	c3                   	ret

00000000000211ca <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   211ca:	55                   	push   %rbp
   211cb:	48 89 e5             	mov    %rsp,%rbp
   211ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   211d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   211d6:	5d                   	pop    %rbp
   211d7:	c3                   	ret

00000000000211d8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   211d8:	55                   	push   %rbp
   211d9:	48 89 e5             	mov    %rsp,%rbp
   211dc:	48 83 ec 10          	sub    $0x10,%rsp
   211e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   211e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   211e8:	48 89 c7             	mov    %rax,%rdi
   211eb:	e8 3c 09 00 00       	call   21b2c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   211f0:	c9                   	leave
   211f1:	c3                   	ret

00000000000211f2 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   211f2:	55                   	push   %rbp
   211f3:	48 89 e5             	mov    %rsp,%rbp
   211f6:	48 83 ec 10          	sub    $0x10,%rsp
   211fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   211fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21202:	48 89 c7             	mov    %rax,%rdi
   21205:	e8 7c 00 00 00       	call   21286 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   2120a:	c9                   	leave
   2120b:	c3                   	ret

000000000002120c <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   2120c:	55                   	push   %rbp
   2120d:	48 89 e5             	mov    %rsp,%rbp
   21210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   21214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21218:	5d                   	pop    %rbp
   21219:	c3                   	ret

000000000002121a <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   2121a:	55                   	push   %rbp
   2121b:	48 89 e5             	mov    %rsp,%rbp
   2121e:	48 83 ec 10          	sub    $0x10,%rsp
   21222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   21226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2122a:	48 89 c6             	mov    %rax,%rsi
   2122d:	bf 08 00 00 00       	mov    $0x8,%edi
   21232:	e8 31 66 fe ff       	call   7868 <_ZnwmPv>
   21237:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   2123e:	90                   	nop
   2123f:	c9                   	leave
   21240:	c3                   	ret

0000000000021241 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   21241:	55                   	push   %rbp
   21242:	48 89 e5             	mov    %rsp,%rbp
   21245:	48 83 ec 20          	sub    $0x20,%rsp
   21249:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2124d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21251:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   21255:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   21259:	48 89 c7             	mov    %rax,%rdi
   2125c:	e8 d9 08 00 00       	call   21b3a <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21261:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21265:	48 89 c7             	mov    %rax,%rdi
   21268:	e8 0d 66 fe ff       	call   787a <_ZSt17__size_to_integerm>
   2126d:	48 89 c1             	mov    %rax,%rcx
   21270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21274:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21278:	48 89 ce             	mov    %rcx,%rsi
   2127b:	48 89 c7             	mov    %rax,%rdi
   2127e:	e8 c2 08 00 00       	call   21b45 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   21283:	c9                   	leave
   21284:	c3                   	ret
   21285:	90                   	nop

0000000000021286 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21286:	55                   	push   %rbp
   21287:	48 89 e5             	mov    %rsp,%rbp
   2128a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   2128e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   21295:	ff ff 0f 
      }
   21298:	5d                   	pop    %rbp
   21299:	c3                   	ret

000000000002129a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   2129a:	55                   	push   %rbp
   2129b:	48 89 e5             	mov    %rsp,%rbp
   2129e:	48 83 ec 10          	sub    $0x10,%rsp
   212a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   212a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   212aa:	48 89 c7             	mov    %rax,%rdi
   212ad:	e8 02 00 00 00       	call   212b4 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   212b2:	c9                   	leave
   212b3:	c3                   	ret

00000000000212b4 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   212b4:	55                   	push   %rbp
   212b5:	48 89 e5             	mov    %rsp,%rbp
   212b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   212bc:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   212c3:	8e e3 00 
      }
   212c6:	5d                   	pop    %rbp
   212c7:	c3                   	ret

00000000000212c8 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   212c8:	55                   	push   %rbp
   212c9:	48 89 e5             	mov    %rsp,%rbp
   212cc:	53                   	push   %rbx
   212cd:	48 83 ec 28          	sub    $0x28,%rsp
   212d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   212d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   212d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   212dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   212e1:	48 89 c7             	mov    %rax,%rdi
   212e4:	e8 b9 08 00 00       	call   21ba2 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   212e9:	48 89 c3             	mov    %rax,%rbx
   212ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   212f0:	48 89 c7             	mov    %rax,%rdi
   212f3:	e8 aa 08 00 00       	call   21ba2 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   212f8:	48 89 c1             	mov    %rax,%rcx
   212fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   212ff:	48 89 c2             	mov    %rax,%rdx
   21302:	48 89 de             	mov    %rbx,%rsi
   21305:	48 89 cf             	mov    %rcx,%rdi
   21308:	e8 a3 08 00 00       	call   21bb0 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   2130d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   21311:	c9                   	leave
   21312:	c3                   	ret
   21313:	90                   	nop

0000000000021314 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   21314:	55                   	push   %rbp
   21315:	48 89 e5             	mov    %rsp,%rbp
   21318:	48 83 ec 10          	sub    $0x10,%rsp
   2131c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   21320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21324:	48 89 c7             	mov    %rax,%rdi
   21327:	e8 ee 08 00 00       	call   21c1a <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   2132c:	c9                   	leave
   2132d:	c3                   	ret

000000000002132e <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   2132e:	55                   	push   %rbp
   2132f:	48 89 e5             	mov    %rsp,%rbp
   21332:	48 83 ec 10          	sub    $0x10,%rsp
   21336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2133a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   2133e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   21342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21346:	ba 00 00 00 00       	mov    $0x0,%edx
   2134b:	48 89 ce             	mov    %rcx,%rsi
   2134e:	48 89 c7             	mov    %rax,%rdi
   21351:	e8 d8 08 00 00       	call   21c2e <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   21356:	c9                   	leave
   21357:	c3                   	ret

0000000000021358 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   21358:	55                   	push   %rbp
   21359:	48 89 e5             	mov    %rsp,%rbp
   2135c:	48 83 ec 20          	sub    $0x20,%rsp
   21360:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21364:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   21368:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   2136d:	74 40                	je     213af <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   2136f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21373:	48 89 c7             	mov    %rax,%rdi
   21376:	e8 14 09 00 00       	call   21c8f <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   2137b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   2137f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21383:	48 89 c7             	mov    %rax,%rdi
   21386:	e8 12 09 00 00       	call   21c9d <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   2138b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   21390:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21394:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   21398:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2139c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   213a0:	48 89 ce             	mov    %rcx,%rsi
   213a3:	48 89 c7             	mov    %rax,%rdi
   213a6:	e8 19 09 00 00       	call   21cc4 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   213ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   213af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   213b3:	c9                   	leave
   213b4:	c3                   	ret
   213b5:	90                   	nop

00000000000213b6 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   213b6:	55                   	push   %rbp
   213b7:	48 89 e5             	mov    %rsp,%rbp
   213ba:	48 83 ec 10          	sub    $0x10,%rsp
   213be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   213c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   213c6:	48 89 c7             	mov    %rax,%rdi
   213c9:	e8 7c 00 00 00       	call   2144a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   213ce:	c9                   	leave
   213cf:	c3                   	ret

00000000000213d0 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   213d0:	55                   	push   %rbp
   213d1:	48 89 e5             	mov    %rsp,%rbp
   213d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   213d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   213dc:	5d                   	pop    %rbp
   213dd:	c3                   	ret

00000000000213de <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   213de:	55                   	push   %rbp
   213df:	48 89 e5             	mov    %rsp,%rbp
   213e2:	48 83 ec 10          	sub    $0x10,%rsp
   213e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   213ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   213ee:	48 89 c6             	mov    %rax,%rsi
   213f1:	bf 08 00 00 00       	mov    $0x8,%edi
   213f6:	e8 6d 64 fe ff       	call   7868 <_ZnwmPv>
   213fb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   21402:	90                   	nop
   21403:	c9                   	leave
   21404:	c3                   	ret

0000000000021405 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   21405:	55                   	push   %rbp
   21406:	48 89 e5             	mov    %rsp,%rbp
   21409:	48 83 ec 20          	sub    $0x20,%rsp
   2140d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21411:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21415:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   21419:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   2141d:	48 89 c7             	mov    %rax,%rdi
   21420:	e8 e3 08 00 00       	call   21d08 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21425:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21429:	48 89 c7             	mov    %rax,%rdi
   2142c:	e8 49 64 fe ff       	call   787a <_ZSt17__size_to_integerm>
   21431:	48 89 c1             	mov    %rax,%rcx
   21434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21438:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2143c:	48 89 ce             	mov    %rcx,%rsi
   2143f:	48 89 c7             	mov    %rax,%rdi
   21442:	e8 cc 08 00 00       	call   21d13 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   21447:	c9                   	leave
   21448:	c3                   	ret
   21449:	90                   	nop

000000000002144a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   2144a:	55                   	push   %rbp
   2144b:	48 89 e5             	mov    %rsp,%rbp
   2144e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21452:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   21459:	ff ff 0f 
      }
   2145c:	5d                   	pop    %rbp
   2145d:	c3                   	ret

000000000002145e <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   2145e:	55                   	push   %rbp
   2145f:	48 89 e5             	mov    %rsp,%rbp
   21462:	53                   	push   %rbx
   21463:	48 83 ec 28          	sub    $0x28,%rsp
   21467:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2146b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2146f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   21473:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21477:	48 89 c7             	mov    %rax,%rdi
   2147a:	e8 f1 08 00 00       	call   21d70 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   2147f:	48 89 c3             	mov    %rax,%rbx
   21482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21486:	48 89 c7             	mov    %rax,%rdi
   21489:	e8 e2 08 00 00       	call   21d70 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   2148e:	48 89 c1             	mov    %rax,%rcx
   21491:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21495:	48 89 c2             	mov    %rax,%rdx
   21498:	48 89 de             	mov    %rbx,%rsi
   2149b:	48 89 cf             	mov    %rcx,%rdi
   2149e:	e8 db 08 00 00       	call   21d7e <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   214a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   214a7:	c9                   	leave
   214a8:	c3                   	ret
   214a9:	90                   	nop

00000000000214aa <_ZNKSt15__new_allocatorIP10VkBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   214aa:	55                   	push   %rbp
   214ab:	48 89 e5             	mov    %rsp,%rbp
   214ae:	48 83 ec 10          	sub    $0x10,%rsp
   214b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   214b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   214ba:	48 89 c7             	mov    %rax,%rdi
   214bd:	e8 7c 00 00 00       	call   2153e <_ZNKSt15__new_allocatorIP10VkBuffer_TE11_M_max_sizeEv>
   214c2:	c9                   	leave
   214c3:	c3                   	ret

00000000000214c4 <_ZSt11__addressofIP10VkBuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   214c4:	55                   	push   %rbp
   214c5:	48 89 e5             	mov    %rsp,%rbp
   214c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   214cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   214d0:	5d                   	pop    %rbp
   214d1:	c3                   	ret

00000000000214d2 <_ZSt10_ConstructIP10VkBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   214d2:	55                   	push   %rbp
   214d3:	48 89 e5             	mov    %rsp,%rbp
   214d6:	48 83 ec 10          	sub    $0x10,%rsp
   214da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   214de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   214e2:	48 89 c6             	mov    %rax,%rsi
   214e5:	bf 08 00 00 00       	mov    $0x8,%edi
   214ea:	e8 79 63 fe ff       	call   7868 <_ZnwmPv>
   214ef:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   214f6:	90                   	nop
   214f7:	c9                   	leave
   214f8:	c3                   	ret

00000000000214f9 <_ZSt6fill_nIPP10VkBuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   214f9:	55                   	push   %rbp
   214fa:	48 89 e5             	mov    %rsp,%rbp
   214fd:	48 83 ec 20          	sub    $0x20,%rsp
   21501:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21505:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21509:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   2150d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   21511:	48 89 c7             	mov    %rax,%rdi
   21514:	e8 cf 08 00 00       	call   21de8 <_ZSt19__iterator_categoryIPP10VkBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21519:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2151d:	48 89 c7             	mov    %rax,%rdi
   21520:	e8 55 63 fe ff       	call   787a <_ZSt17__size_to_integerm>
   21525:	48 89 c1             	mov    %rax,%rcx
   21528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2152c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21530:	48 89 ce             	mov    %rcx,%rsi
   21533:	48 89 c7             	mov    %rax,%rdi
   21536:	e8 b8 08 00 00       	call   21df3 <_ZSt10__fill_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   2153b:	c9                   	leave
   2153c:	c3                   	ret
   2153d:	90                   	nop

000000000002153e <_ZNKSt15__new_allocatorIP10VkBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   2153e:	55                   	push   %rbp
   2153f:	48 89 e5             	mov    %rsp,%rbp
   21542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21546:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   2154d:	ff ff 0f 
      }
   21550:	5d                   	pop    %rbp
   21551:	c3                   	ret

0000000000021552 <_ZNKSt15__new_allocatorIP16VkDeviceMemory_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   21552:	55                   	push   %rbp
   21553:	48 89 e5             	mov    %rsp,%rbp
   21556:	48 83 ec 10          	sub    $0x10,%rsp
   2155a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   2155e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21562:	48 89 c7             	mov    %rax,%rdi
   21565:	e8 7c 00 00 00       	call   215e6 <_ZNKSt15__new_allocatorIP16VkDeviceMemory_TE11_M_max_sizeEv>
   2156a:	c9                   	leave
   2156b:	c3                   	ret

000000000002156c <_ZSt11__addressofIP16VkDeviceMemory_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   2156c:	55                   	push   %rbp
   2156d:	48 89 e5             	mov    %rsp,%rbp
   21570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   21574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21578:	5d                   	pop    %rbp
   21579:	c3                   	ret

000000000002157a <_ZSt10_ConstructIP16VkDeviceMemory_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   2157a:	55                   	push   %rbp
   2157b:	48 89 e5             	mov    %rsp,%rbp
   2157e:	48 83 ec 10          	sub    $0x10,%rsp
   21582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   21586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2158a:	48 89 c6             	mov    %rax,%rsi
   2158d:	bf 08 00 00 00       	mov    $0x8,%edi
   21592:	e8 d1 62 fe ff       	call   7868 <_ZnwmPv>
   21597:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   2159e:	90                   	nop
   2159f:	c9                   	leave
   215a0:	c3                   	ret

00000000000215a1 <_ZSt6fill_nIPP16VkDeviceMemory_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   215a1:	55                   	push   %rbp
   215a2:	48 89 e5             	mov    %rsp,%rbp
   215a5:	48 83 ec 20          	sub    $0x20,%rsp
   215a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   215ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   215b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   215b5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   215b9:	48 89 c7             	mov    %rax,%rdi
   215bc:	e8 8f 08 00 00       	call   21e50 <_ZSt19__iterator_categoryIPP16VkDeviceMemory_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   215c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   215c5:	48 89 c7             	mov    %rax,%rdi
   215c8:	e8 ad 62 fe ff       	call   787a <_ZSt17__size_to_integerm>
   215cd:	48 89 c1             	mov    %rax,%rcx
   215d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   215d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   215d8:	48 89 ce             	mov    %rcx,%rsi
   215db:	48 89 c7             	mov    %rax,%rdi
   215de:	e8 78 08 00 00       	call   21e5b <_ZSt10__fill_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   215e3:	c9                   	leave
   215e4:	c3                   	ret
   215e5:	90                   	nop

00000000000215e6 <_ZNKSt15__new_allocatorIP16VkDeviceMemory_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   215e6:	55                   	push   %rbp
   215e7:	48 89 e5             	mov    %rsp,%rbp
   215ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   215ee:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   215f5:	ff ff 0f 
      }
   215f8:	5d                   	pop    %rbp
   215f9:	c3                   	ret

00000000000215fa <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   215fa:	55                   	push   %rbp
   215fb:	48 89 e5             	mov    %rsp,%rbp
   215fe:	48 83 ec 10          	sub    $0x10,%rsp
   21602:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   21606:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2160a:	48 89 c7             	mov    %rax,%rdi
   2160d:	e8 7c 00 00 00       	call   2168e <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   21612:	c9                   	leave
   21613:	c3                   	ret

0000000000021614 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   21614:	55                   	push   %rbp
   21615:	48 89 e5             	mov    %rsp,%rbp
   21618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   2161c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21620:	5d                   	pop    %rbp
   21621:	c3                   	ret

0000000000021622 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   21622:	55                   	push   %rbp
   21623:	48 89 e5             	mov    %rsp,%rbp
   21626:	48 83 ec 10          	sub    $0x10,%rsp
   2162a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   2162e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21632:	48 89 c6             	mov    %rax,%rsi
   21635:	bf 08 00 00 00       	mov    $0x8,%edi
   2163a:	e8 29 62 fe ff       	call   7868 <_ZnwmPv>
   2163f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   21646:	90                   	nop
   21647:	c9                   	leave
   21648:	c3                   	ret

0000000000021649 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   21649:	55                   	push   %rbp
   2164a:	48 89 e5             	mov    %rsp,%rbp
   2164d:	48 83 ec 20          	sub    $0x20,%rsp
   21651:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21655:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21659:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   2165d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   21661:	48 89 c7             	mov    %rax,%rdi
   21664:	e8 4f 08 00 00       	call   21eb8 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21669:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2166d:	48 89 c7             	mov    %rax,%rdi
   21670:	e8 05 62 fe ff       	call   787a <_ZSt17__size_to_integerm>
   21675:	48 89 c1             	mov    %rax,%rcx
   21678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2167c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21680:	48 89 ce             	mov    %rcx,%rsi
   21683:	48 89 c7             	mov    %rax,%rdi
   21686:	e8 38 08 00 00       	call   21ec3 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   2168b:	c9                   	leave
   2168c:	c3                   	ret
   2168d:	90                   	nop

000000000002168e <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   2168e:	55                   	push   %rbp
   2168f:	48 89 e5             	mov    %rsp,%rbp
   21692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21696:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   2169d:	ff ff 0f 
      }
   216a0:	5d                   	pop    %rbp
   216a1:	c3                   	ret

00000000000216a2 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   216a2:	55                   	push   %rbp
   216a3:	48 89 e5             	mov    %rsp,%rbp
   216a6:	48 83 ec 10          	sub    $0x10,%rsp
   216aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   216ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216b2:	48 89 c7             	mov    %rax,%rdi
   216b5:	e8 7c 00 00 00       	call   21736 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   216ba:	c9                   	leave
   216bb:	c3                   	ret

00000000000216bc <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   216bc:	55                   	push   %rbp
   216bd:	48 89 e5             	mov    %rsp,%rbp
   216c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   216c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216c8:	5d                   	pop    %rbp
   216c9:	c3                   	ret

00000000000216ca <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   216ca:	55                   	push   %rbp
   216cb:	48 89 e5             	mov    %rsp,%rbp
   216ce:	48 83 ec 10          	sub    $0x10,%rsp
   216d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   216d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216da:	48 89 c6             	mov    %rax,%rsi
   216dd:	bf 08 00 00 00       	mov    $0x8,%edi
   216e2:	e8 81 61 fe ff       	call   7868 <_ZnwmPv>
   216e7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   216ee:	90                   	nop
   216ef:	c9                   	leave
   216f0:	c3                   	ret

00000000000216f1 <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   216f1:	55                   	push   %rbp
   216f2:	48 89 e5             	mov    %rsp,%rbp
   216f5:	48 83 ec 20          	sub    $0x20,%rsp
   216f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   216fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21701:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   21705:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   21709:	48 89 c7             	mov    %rax,%rdi
   2170c:	e8 0f 08 00 00       	call   21f20 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21711:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21715:	48 89 c7             	mov    %rax,%rdi
   21718:	e8 5d 61 fe ff       	call   787a <_ZSt17__size_to_integerm>
   2171d:	48 89 c1             	mov    %rax,%rcx
   21720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21724:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21728:	48 89 ce             	mov    %rcx,%rsi
   2172b:	48 89 c7             	mov    %rax,%rdi
   2172e:	e8 f8 07 00 00       	call   21f2b <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   21733:	c9                   	leave
   21734:	c3                   	ret
   21735:	90                   	nop

0000000000021736 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21736:	55                   	push   %rbp
   21737:	48 89 e5             	mov    %rsp,%rbp
   2173a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   2173e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   21745:	ff ff 0f 
      }
   21748:	5d                   	pop    %rbp
   21749:	c3                   	ret

000000000002174a <_ZNKSt15__new_allocatorIP23VkDescriptorSetLayout_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   2174a:	55                   	push   %rbp
   2174b:	48 89 e5             	mov    %rsp,%rbp
   2174e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21752:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   21759:	ff ff 0f 
      }
   2175c:	5d                   	pop    %rbp
   2175d:	c3                   	ret

000000000002175e <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   2175e:	55                   	push   %rbp
   2175f:	48 89 e5             	mov    %rsp,%rbp
   21762:	48 83 ec 20          	sub    $0x20,%rsp
   21766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2176a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2176e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   21772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21776:	48 89 c7             	mov    %rax,%rdi
   21779:	e8 cc ff ff ff       	call   2174a <_ZNKSt15__new_allocatorIP23VkDescriptorSetLayout_TE11_M_max_sizeEv>
   2177e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21782:	0f 92 c0             	setb   %al
   21785:	0f b6 c0             	movzbl %al,%eax
   21788:	48 85 c0             	test   %rax,%rax
   2178b:	0f 95 c0             	setne  %al
   2178e:	84 c0                	test   %al,%al
   21790:	74 1a                	je     217ac <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   21792:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   21799:	ff ff 1f 
   2179c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   217a0:	73 05                	jae    217a7 <_ZNSt15__new_allocatorIP23VkDescriptorSetLayout_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   217a2:	e8 f9 3b fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   217a7:	e8 a4 39 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   217ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   217b0:	48 c1 e0 03          	shl    $0x3,%rax
   217b4:	48 89 c7             	mov    %rax,%rdi
   217b7:	e8 64 3d fe ff       	call   5520 <_Znwm@plt>
   217bc:	90                   	nop
      }
   217bd:	c9                   	leave
   217be:	c3                   	ret

00000000000217bf <_ZSt6fill_nIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   217bf:	55                   	push   %rbp
   217c0:	48 89 e5             	mov    %rsp,%rbp
   217c3:	48 83 ec 20          	sub    $0x20,%rsp
   217c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   217cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   217cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   217d3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   217d7:	48 89 c7             	mov    %rax,%rdi
   217da:	e8 a9 07 00 00       	call   21f88 <_ZSt19__iterator_categoryIPP23VkDescriptorSetLayout_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   217df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   217e3:	48 89 c7             	mov    %rax,%rdi
   217e6:	e8 8f 60 fe ff       	call   787a <_ZSt17__size_to_integerm>
   217eb:	48 89 c1             	mov    %rax,%rcx
   217ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   217f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   217f6:	48 89 ce             	mov    %rcx,%rsi
   217f9:	48 89 c7             	mov    %rax,%rdi
   217fc:	e8 92 07 00 00       	call   21f93 <_ZSt10__fill_n_aIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   21801:	c9                   	leave
   21802:	c3                   	ret
   21803:	90                   	nop

0000000000021804 <_ZNKSt15__new_allocatorIP17VkDescriptorSet_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   21804:	55                   	push   %rbp
   21805:	48 89 e5             	mov    %rsp,%rbp
   21808:	48 83 ec 10          	sub    $0x10,%rsp
   2180c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   21810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21814:	48 89 c7             	mov    %rax,%rdi
   21817:	e8 7c 00 00 00       	call   21898 <_ZNKSt15__new_allocatorIP17VkDescriptorSet_TE11_M_max_sizeEv>
   2181c:	c9                   	leave
   2181d:	c3                   	ret

000000000002181e <_ZSt11__addressofIP17VkDescriptorSet_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   2181e:	55                   	push   %rbp
   2181f:	48 89 e5             	mov    %rsp,%rbp
   21822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   21826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2182a:	5d                   	pop    %rbp
   2182b:	c3                   	ret

000000000002182c <_ZSt10_ConstructIP17VkDescriptorSet_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   2182c:	55                   	push   %rbp
   2182d:	48 89 e5             	mov    %rsp,%rbp
   21830:	48 83 ec 10          	sub    $0x10,%rsp
   21834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   21838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2183c:	48 89 c6             	mov    %rax,%rsi
   2183f:	bf 08 00 00 00       	mov    $0x8,%edi
   21844:	e8 1f 60 fe ff       	call   7868 <_ZnwmPv>
   21849:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   21850:	90                   	nop
   21851:	c9                   	leave
   21852:	c3                   	ret

0000000000021853 <_ZSt6fill_nIPP17VkDescriptorSet_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   21853:	55                   	push   %rbp
   21854:	48 89 e5             	mov    %rsp,%rbp
   21857:	48 83 ec 20          	sub    $0x20,%rsp
   2185b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2185f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21863:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   21867:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   2186b:	48 89 c7             	mov    %rax,%rdi
   2186e:	e8 7d 07 00 00       	call   21ff0 <_ZSt19__iterator_categoryIPP17VkDescriptorSet_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21873:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21877:	48 89 c7             	mov    %rax,%rdi
   2187a:	e8 fb 5f fe ff       	call   787a <_ZSt17__size_to_integerm>
   2187f:	48 89 c1             	mov    %rax,%rcx
   21882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21886:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2188a:	48 89 ce             	mov    %rcx,%rsi
   2188d:	48 89 c7             	mov    %rax,%rdi
   21890:	e8 66 07 00 00       	call   21ffb <_ZSt10__fill_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   21895:	c9                   	leave
   21896:	c3                   	ret
   21897:	90                   	nop

0000000000021898 <_ZNKSt15__new_allocatorIP17VkDescriptorSet_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21898:	55                   	push   %rbp
   21899:	48 89 e5             	mov    %rsp,%rbp
   2189c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   218a0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   218a7:	ff ff 0f 
      }
   218aa:	5d                   	pop    %rbp
   218ab:	c3                   	ret

00000000000218ac <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   218ac:	55                   	push   %rbp
   218ad:	48 89 e5             	mov    %rsp,%rbp
   218b0:	53                   	push   %rbx
   218b1:	48 83 ec 28          	sub    $0x28,%rsp
   218b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   218b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   218bd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   218c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   218c5:	48 89 c7             	mov    %rax,%rdi
   218c8:	e8 8b 07 00 00       	call   22058 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   218cd:	48 89 c3             	mov    %rax,%rbx
   218d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   218d4:	48 89 c7             	mov    %rax,%rdi
   218d7:	e8 7c 07 00 00       	call   22058 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   218dc:	48 89 c1             	mov    %rax,%rcx
   218df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   218e3:	48 89 c2             	mov    %rax,%rdx
   218e6:	48 89 de             	mov    %rbx,%rsi
   218e9:	48 89 cf             	mov    %rcx,%rdi
   218ec:	e8 75 07 00 00       	call   22066 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   218f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   218f5:	c9                   	leave
   218f6:	c3                   	ret
   218f7:	90                   	nop

00000000000218f8 <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   218f8:	55                   	push   %rbp
   218f9:	48 89 e5             	mov    %rsp,%rbp
   218fc:	48 83 ec 10          	sub    $0x10,%rsp
   21900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   21904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21908:	48 89 c7             	mov    %rax,%rdi
   2190b:	e8 02 00 00 00       	call   21912 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   21910:	c9                   	leave
   21911:	c3                   	ret

0000000000021912 <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21912:	55                   	push   %rbp
   21913:	48 89 e5             	mov    %rsp,%rbp
   21916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   2191a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   21921:	ff ff 1f 
      }
   21924:	5d                   	pop    %rbp
   21925:	c3                   	ret

0000000000021926 <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   21926:	55                   	push   %rbp
   21927:	48 89 e5             	mov    %rsp,%rbp
   2192a:	53                   	push   %rbx
   2192b:	48 83 ec 28          	sub    $0x28,%rsp
   2192f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21933:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21937:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   2193b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2193f:	48 89 c7             	mov    %rax,%rdi
   21942:	e8 89 07 00 00       	call   220d0 <_ZSt12__miter_baseIPKjET_S2_>
   21947:	48 89 c3             	mov    %rax,%rbx
   2194a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2194e:	48 89 c7             	mov    %rax,%rdi
   21951:	e8 7a 07 00 00       	call   220d0 <_ZSt12__miter_baseIPKjET_S2_>
   21956:	48 89 c1             	mov    %rax,%rcx
   21959:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2195d:	48 89 c2             	mov    %rax,%rdx
   21960:	48 89 de             	mov    %rbx,%rsi
   21963:	48 89 cf             	mov    %rcx,%rdi
   21966:	e8 73 07 00 00       	call   220de <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   2196b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2196f:	c9                   	leave
   21970:	c3                   	ret

0000000000021971 <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
   21971:	55                   	push   %rbp
   21972:	48 89 e5             	mov    %rsp,%rbp
   21975:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   21979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2197d:	5d                   	pop    %rbp
   2197e:	c3                   	ret

000000000002197f <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   2197f:	55                   	push   %rbp
   21980:	48 89 e5             	mov    %rsp,%rbp
   21983:	41 54                	push   %r12
   21985:	53                   	push   %rbx
   21986:	48 83 ec 20          	sub    $0x20,%rsp
   2198a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2198e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21992:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   21996:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2199a:	48 89 c7             	mov    %rax,%rdi
   2199d:	e8 ba e6 ff ff       	call   2005c <_ZSt12__niter_baseIPPKcET_S3_>
   219a2:	49 89 c4             	mov    %rax,%r12
   219a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   219a9:	48 89 c7             	mov    %rax,%rdi
   219ac:	e8 97 07 00 00       	call   22148 <_ZSt12__niter_baseIPKPKcET_S4_>
   219b1:	48 89 c3             	mov    %rax,%rbx
   219b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   219b8:	48 89 c7             	mov    %rax,%rdi
   219bb:	e8 88 07 00 00       	call   22148 <_ZSt12__niter_baseIPKPKcET_S4_>
   219c0:	4c 89 e2             	mov    %r12,%rdx
   219c3:	48 89 de             	mov    %rbx,%rsi
   219c6:	48 89 c7             	mov    %rax,%rdi
   219c9:	e8 88 07 00 00       	call   22156 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   219ce:	48 89 c2             	mov    %rax,%rdx
   219d1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   219d5:	48 89 d6             	mov    %rdx,%rsi
   219d8:	48 89 c7             	mov    %rax,%rdi
   219db:	e8 a3 07 00 00       	call   22183 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   219e0:	48 83 c4 20          	add    $0x20,%rsp
   219e4:	5b                   	pop    %rbx
   219e5:	41 5c                	pop    %r12
   219e7:	5d                   	pop    %rbp
   219e8:	c3                   	ret
   219e9:	90                   	nop

00000000000219ea <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   219ea:	55                   	push   %rbp
   219eb:	48 89 e5             	mov    %rsp,%rbp
   219ee:	48 83 ec 20          	sub    $0x20,%rsp
   219f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   219f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   219fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   219fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a02:	48 89 c7             	mov    %rax,%rdi
   21a05:	e8 8c 07 00 00       	call   22196 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   21a0a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21a0e:	0f 92 c0             	setb   %al
   21a11:	0f b6 c0             	movzbl %al,%eax
   21a14:	48 85 c0             	test   %rax,%rax
   21a17:	0f 95 c0             	setne  %al
   21a1a:	84 c0                	test   %al,%al
   21a1c:	74 1a                	je     21a38 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   21a1e:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   21a25:	38 8e 03 
   21a28:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21a2c:	73 05                	jae    21a33 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   21a2e:	e8 6d 39 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   21a33:	e8 18 37 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   21a38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21a3c:	48 89 d0             	mov    %rdx,%rax
   21a3f:	48 c1 e0 03          	shl    $0x3,%rax
   21a43:	48 01 d0             	add    %rdx,%rax
   21a46:	48 c1 e0 03          	shl    $0x3,%rax
   21a4a:	48 89 c7             	mov    %rax,%rdi
   21a4d:	e8 ce 3a fe ff       	call   5520 <_Znwm@plt>
   21a52:	90                   	nop
      }
   21a53:	c9                   	leave
   21a54:	c3                   	ret
   21a55:	90                   	nop

0000000000021a56 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   21a56:	55                   	push   %rbp
   21a57:	48 89 e5             	mov    %rsp,%rbp
   21a5a:	48 83 ec 10          	sub    $0x10,%rsp
   21a5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21a62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21a6e:	48 89 d6             	mov    %rdx,%rsi
   21a71:	48 89 c7             	mov    %rax,%rdi
   21a74:	e8 31 07 00 00       	call   221aa <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   21a79:	90                   	nop
   21a7a:	c9                   	leave
   21a7b:	c3                   	ret

0000000000021a7c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   21a7c:	55                   	push   %rbp
   21a7d:	48 89 e5             	mov    %rsp,%rbp
   21a80:	41 56                	push   %r14
   21a82:	41 55                	push   %r13
   21a84:	41 54                	push   %r12
   21a86:	53                   	push   %rbx
   21a87:	48 83 ec 40          	sub    $0x40,%rsp
   21a8b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   21a8f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   21a93:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   21a97:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   21a9b:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   21a9f:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   21aa3:	48 89 de             	mov    %rbx,%rsi
   21aa6:	bf 28 00 00 00       	mov    $0x28,%edi
   21aab:	e8 b8 5d fe ff       	call   7868 <_ZnwmPv>
   21ab0:	49 89 c4             	mov    %rax,%r12
   21ab3:	41 be 01 00 00 00    	mov    $0x1,%r14d
   21ab9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   21abd:	48 89 c7             	mov    %rax,%rdi
   21ac0:	e8 ca ac ff ff       	call   1c78f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   21ac5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   21ac9:	48 89 c7             	mov    %rax,%rdi
   21acc:	e8 b0 ac ff ff       	call   1c781 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   21ad1:	48 89 c2             	mov    %rax,%rdx
   21ad4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   21ad8:	48 89 d6             	mov    %rdx,%rsi
   21adb:	48 89 c7             	mov    %rax,%rdi
   21ade:	e8 73 ff ff ff       	call   21a56 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   21ae3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   21ae7:	48 89 c7             	mov    %rax,%rdi
   21aea:	e8 84 ac ff ff       	call   1c773 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   21aef:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   21af3:	48 89 c6             	mov    %rax,%rsi
   21af6:	4c 89 e7             	mov    %r12,%rdi
   21af9:	e8 ca 06 00 00       	call   221c8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   21afe:	eb 1e                	jmp    21b1e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   21b00:	49 89 c5             	mov    %rax,%r13
   21b03:	45 84 f6             	test   %r14b,%r14b
   21b06:	74 0b                	je     21b13 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   21b08:	48 89 de             	mov    %rbx,%rsi
   21b0b:	4c 89 e7             	mov    %r12,%rdi
   21b0e:	e8 92 38 ff ff       	call   153a5 <_ZdlPvS_>
   21b13:	4c 89 e8             	mov    %r13,%rax
   21b16:	48 89 c7             	mov    %rax,%rdi
   21b19:	e8 e2 3e fe ff       	call   5a00 <_Unwind_Resume@plt>
   21b1e:	48 83 c4 40          	add    $0x40,%rsp
   21b22:	5b                   	pop    %rbx
   21b23:	41 5c                	pop    %r12
   21b25:	41 5d                	pop    %r13
   21b27:	41 5e                	pop    %r14
   21b29:	5d                   	pop    %rbp
   21b2a:	c3                   	ret
   21b2b:	90                   	nop

0000000000021b2c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   21b2c:	55                   	push   %rbp
   21b2d:	48 89 e5             	mov    %rsp,%rbp
   21b30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   21b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b38:	5d                   	pop    %rbp
   21b39:	c3                   	ret

0000000000021b3a <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21b3a:	55                   	push   %rbp
   21b3b:	48 89 e5             	mov    %rsp,%rbp
   21b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21b42:	90                   	nop
   21b43:	5d                   	pop    %rbp
   21b44:	c3                   	ret

0000000000021b45 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21b45:	55                   	push   %rbp
   21b46:	48 89 e5             	mov    %rsp,%rbp
   21b49:	48 83 ec 20          	sub    $0x20,%rsp
   21b4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21b51:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21b55:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21b59:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21b5e:	75 06                	jne    21b66 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b64:	eb 3a                	jmp    21ba0 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21b66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21b6a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21b71:	00 
   21b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b76:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21b7a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b82:	48 89 ce             	mov    %rcx,%rsi
   21b85:	48 89 c7             	mov    %rax,%rdi
   21b88:	e8 65 06 00 00       	call   221f2 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21b8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21b91:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21b98:	00 
   21b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b9d:	48 01 d0             	add    %rdx,%rax
    }
   21ba0:	c9                   	leave
   21ba1:	c3                   	ret

0000000000021ba2 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   21ba2:	55                   	push   %rbp
   21ba3:	48 89 e5             	mov    %rsp,%rbp
   21ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   21baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21bae:	5d                   	pop    %rbp
   21baf:	c3                   	ret

0000000000021bb0 <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   21bb0:	55                   	push   %rbp
   21bb1:	48 89 e5             	mov    %rsp,%rbp
   21bb4:	41 54                	push   %r12
   21bb6:	53                   	push   %rbx
   21bb7:	48 83 ec 20          	sub    $0x20,%rsp
   21bbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21bbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21bc3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   21bc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21bcb:	48 89 c7             	mov    %rax,%rdi
   21bce:	e8 5b 06 00 00       	call   2222e <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   21bd3:	49 89 c4             	mov    %rax,%r12
   21bd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21bda:	48 89 c7             	mov    %rax,%rdi
   21bdd:	e8 3e 06 00 00       	call   22220 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   21be2:	48 89 c3             	mov    %rax,%rbx
   21be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21be9:	48 89 c7             	mov    %rax,%rdi
   21bec:	e8 2f 06 00 00       	call   22220 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   21bf1:	4c 89 e2             	mov    %r12,%rdx
   21bf4:	48 89 de             	mov    %rbx,%rsi
   21bf7:	48 89 c7             	mov    %rax,%rdi
   21bfa:	e8 3d 06 00 00       	call   2223c <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   21bff:	48 89 c2             	mov    %rax,%rdx
   21c02:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   21c06:	48 89 d6             	mov    %rdx,%rsi
   21c09:	48 89 c7             	mov    %rax,%rdi
   21c0c:	e8 58 06 00 00       	call   22269 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   21c11:	48 83 c4 20          	add    $0x20,%rsp
   21c15:	5b                   	pop    %rbx
   21c16:	41 5c                	pop    %r12
   21c18:	5d                   	pop    %rbp
   21c19:	c3                   	ret

0000000000021c1a <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21c1a:	55                   	push   %rbp
   21c1b:	48 89 e5             	mov    %rsp,%rbp
   21c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21c22:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   21c29:	ff ff 0f 
      }
   21c2c:	5d                   	pop    %rbp
   21c2d:	c3                   	ret

0000000000021c2e <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   21c2e:	55                   	push   %rbp
   21c2f:	48 89 e5             	mov    %rsp,%rbp
   21c32:	48 83 ec 20          	sub    $0x20,%rsp
   21c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21c3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   21c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c46:	48 89 c7             	mov    %rax,%rdi
   21c49:	e8 cc ff ff ff       	call   21c1a <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   21c4e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21c52:	0f 92 c0             	setb   %al
   21c55:	0f b6 c0             	movzbl %al,%eax
   21c58:	48 85 c0             	test   %rax,%rax
   21c5b:	0f 95 c0             	setne  %al
   21c5e:	84 c0                	test   %al,%al
   21c60:	74 1a                	je     21c7c <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   21c62:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   21c69:	ff ff 1f 
   21c6c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21c70:	73 05                	jae    21c77 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   21c72:	e8 29 37 fe ff       	call   53a0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   21c77:	e8 d4 34 fe ff       	call   5150 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   21c7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21c80:	48 c1 e0 03          	shl    $0x3,%rax
   21c84:	48 89 c7             	mov    %rax,%rdi
   21c87:	e8 94 38 fe ff       	call   5520 <_Znwm@plt>
   21c8c:	90                   	nop
      }
   21c8d:	c9                   	leave
   21c8e:	c3                   	ret

0000000000021c8f <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   21c8f:	55                   	push   %rbp
   21c90:	48 89 e5             	mov    %rsp,%rbp
   21c93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   21c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c9b:	5d                   	pop    %rbp
   21c9c:	c3                   	ret

0000000000021c9d <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   21c9d:	55                   	push   %rbp
   21c9e:	48 89 e5             	mov    %rsp,%rbp
   21ca1:	48 83 ec 10          	sub    $0x10,%rsp
   21ca5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   21ca9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21cad:	48 89 c6             	mov    %rax,%rsi
   21cb0:	bf 08 00 00 00       	mov    $0x8,%edi
   21cb5:	e8 ae 5b fe ff       	call   7868 <_ZnwmPv>
   21cba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   21cc1:	90                   	nop
   21cc2:	c9                   	leave
   21cc3:	c3                   	ret

0000000000021cc4 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   21cc4:	55                   	push   %rbp
   21cc5:	48 89 e5             	mov    %rsp,%rbp
   21cc8:	48 83 ec 20          	sub    $0x20,%rsp
   21ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21cd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21cd4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   21cd8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   21cdc:	48 89 c7             	mov    %rax,%rdi
   21cdf:	e8 97 05 00 00       	call   2227b <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   21ce4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21ce8:	48 89 c7             	mov    %rax,%rdi
   21ceb:	e8 8a 5b fe ff       	call   787a <_ZSt17__size_to_integerm>
   21cf0:	48 89 c1             	mov    %rax,%rcx
   21cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21cf7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21cfb:	48 89 ce             	mov    %rcx,%rsi
   21cfe:	48 89 c7             	mov    %rax,%rdi
   21d01:	e8 80 05 00 00       	call   22286 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   21d06:	c9                   	leave
   21d07:	c3                   	ret

0000000000021d08 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21d08:	55                   	push   %rbp
   21d09:	48 89 e5             	mov    %rsp,%rbp
   21d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21d10:	90                   	nop
   21d11:	5d                   	pop    %rbp
   21d12:	c3                   	ret

0000000000021d13 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21d13:	55                   	push   %rbp
   21d14:	48 89 e5             	mov    %rsp,%rbp
   21d17:	48 83 ec 20          	sub    $0x20,%rsp
   21d1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21d1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21d23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21d27:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21d2c:	75 06                	jne    21d34 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d32:	eb 3a                	jmp    21d6e <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21d34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21d38:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21d3f:	00 
   21d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d44:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21d48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d50:	48 89 ce             	mov    %rcx,%rsi
   21d53:	48 89 c7             	mov    %rax,%rdi
   21d56:	e8 88 05 00 00       	call   222e3 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21d5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21d5f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21d66:	00 
   21d67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d6b:	48 01 d0             	add    %rdx,%rax
    }
   21d6e:	c9                   	leave
   21d6f:	c3                   	ret

0000000000021d70 <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   21d70:	55                   	push   %rbp
   21d71:	48 89 e5             	mov    %rsp,%rbp
   21d74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   21d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21d7c:	5d                   	pop    %rbp
   21d7d:	c3                   	ret

0000000000021d7e <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   21d7e:	55                   	push   %rbp
   21d7f:	48 89 e5             	mov    %rsp,%rbp
   21d82:	41 54                	push   %r12
   21d84:	53                   	push   %rbx
   21d85:	48 83 ec 20          	sub    $0x20,%rsp
   21d89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21d8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21d91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   21d95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21d99:	48 89 c7             	mov    %rax,%rdi
   21d9c:	e8 42 e6 ff ff       	call   203e3 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   21da1:	49 89 c4             	mov    %rax,%r12
   21da4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21da8:	48 89 c7             	mov    %rax,%rdi
   21dab:	e8 61 05 00 00       	call   22311 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   21db0:	48 89 c3             	mov    %rax,%rbx
   21db3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21db7:	48 89 c7             	mov    %rax,%rdi
   21dba:	e8 52 05 00 00       	call   22311 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   21dbf:	4c 89 e2             	mov    %r12,%rdx
   21dc2:	48 89 de             	mov    %rbx,%rsi
   21dc5:	48 89 c7             	mov    %rax,%rdi
   21dc8:	e8 52 05 00 00       	call   2231f <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   21dcd:	48 89 c2             	mov    %rax,%rdx
   21dd0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   21dd4:	48 89 d6             	mov    %rdx,%rsi
   21dd7:	48 89 c7             	mov    %rax,%rdi
   21dda:	e8 6d 05 00 00       	call   2234c <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   21ddf:	48 83 c4 20          	add    $0x20,%rsp
   21de3:	5b                   	pop    %rbx
   21de4:	41 5c                	pop    %r12
   21de6:	5d                   	pop    %rbp
   21de7:	c3                   	ret

0000000000021de8 <_ZSt19__iterator_categoryIPP10VkBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21de8:	55                   	push   %rbp
   21de9:	48 89 e5             	mov    %rsp,%rbp
   21dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21df0:	90                   	nop
   21df1:	5d                   	pop    %rbp
   21df2:	c3                   	ret

0000000000021df3 <_ZSt10__fill_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21df3:	55                   	push   %rbp
   21df4:	48 89 e5             	mov    %rsp,%rbp
   21df7:	48 83 ec 20          	sub    $0x20,%rsp
   21dfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21dff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21e03:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21e07:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21e0c:	75 06                	jne    21e14 <_ZSt10__fill_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e12:	eb 3a                	jmp    21e4e <_ZSt10__fill_n_aIPP10VkBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21e14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21e18:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21e1f:	00 
   21e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e24:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21e28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e30:	48 89 ce             	mov    %rcx,%rsi
   21e33:	48 89 c7             	mov    %rax,%rdi
   21e36:	e8 23 05 00 00       	call   2235e <_ZSt8__fill_aIPP10VkBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21e3b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21e3f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21e46:	00 
   21e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e4b:	48 01 d0             	add    %rdx,%rax
    }
   21e4e:	c9                   	leave
   21e4f:	c3                   	ret

0000000000021e50 <_ZSt19__iterator_categoryIPP16VkDeviceMemory_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21e50:	55                   	push   %rbp
   21e51:	48 89 e5             	mov    %rsp,%rbp
   21e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21e58:	90                   	nop
   21e59:	5d                   	pop    %rbp
   21e5a:	c3                   	ret

0000000000021e5b <_ZSt10__fill_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21e5b:	55                   	push   %rbp
   21e5c:	48 89 e5             	mov    %rsp,%rbp
   21e5f:	48 83 ec 20          	sub    $0x20,%rsp
   21e63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21e67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21e6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21e6f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21e74:	75 06                	jne    21e7c <_ZSt10__fill_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e7a:	eb 3a                	jmp    21eb6 <_ZSt10__fill_n_aIPP16VkDeviceMemory_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21e7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21e80:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21e87:	00 
   21e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e8c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21e90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21e98:	48 89 ce             	mov    %rcx,%rsi
   21e9b:	48 89 c7             	mov    %rax,%rdi
   21e9e:	e8 e9 04 00 00       	call   2238c <_ZSt8__fill_aIPP16VkDeviceMemory_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21ea3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21ea7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21eae:	00 
   21eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21eb3:	48 01 d0             	add    %rdx,%rax
    }
   21eb6:	c9                   	leave
   21eb7:	c3                   	ret

0000000000021eb8 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21eb8:	55                   	push   %rbp
   21eb9:	48 89 e5             	mov    %rsp,%rbp
   21ebc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21ec0:	90                   	nop
   21ec1:	5d                   	pop    %rbp
   21ec2:	c3                   	ret

0000000000021ec3 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21ec3:	55                   	push   %rbp
   21ec4:	48 89 e5             	mov    %rsp,%rbp
   21ec7:	48 83 ec 20          	sub    $0x20,%rsp
   21ecb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21ecf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21ed3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21ed7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21edc:	75 06                	jne    21ee4 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ee2:	eb 3a                	jmp    21f1e <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21ee4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21ee8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21eef:	00 
   21ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ef4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21ef8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f00:	48 89 ce             	mov    %rcx,%rsi
   21f03:	48 89 c7             	mov    %rax,%rdi
   21f06:	e8 af 04 00 00       	call   223ba <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21f0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f0f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21f16:	00 
   21f17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f1b:	48 01 d0             	add    %rdx,%rax
    }
   21f1e:	c9                   	leave
   21f1f:	c3                   	ret

0000000000021f20 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21f20:	55                   	push   %rbp
   21f21:	48 89 e5             	mov    %rsp,%rbp
   21f24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21f28:	90                   	nop
   21f29:	5d                   	pop    %rbp
   21f2a:	c3                   	ret

0000000000021f2b <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21f2b:	55                   	push   %rbp
   21f2c:	48 89 e5             	mov    %rsp,%rbp
   21f2f:	48 83 ec 20          	sub    $0x20,%rsp
   21f33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21f37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21f3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21f3f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21f44:	75 06                	jne    21f4c <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f4a:	eb 3a                	jmp    21f86 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21f4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f50:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21f57:	00 
   21f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f5c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21f60:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f68:	48 89 ce             	mov    %rcx,%rsi
   21f6b:	48 89 c7             	mov    %rax,%rdi
   21f6e:	e8 75 04 00 00       	call   223e8 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21f73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21f77:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21f7e:	00 
   21f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21f83:	48 01 d0             	add    %rdx,%rax
    }
   21f86:	c9                   	leave
   21f87:	c3                   	ret

0000000000021f88 <_ZSt19__iterator_categoryIPP23VkDescriptorSetLayout_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21f88:	55                   	push   %rbp
   21f89:	48 89 e5             	mov    %rsp,%rbp
   21f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21f90:	90                   	nop
   21f91:	5d                   	pop    %rbp
   21f92:	c3                   	ret

0000000000021f93 <_ZSt10__fill_n_aIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21f93:	55                   	push   %rbp
   21f94:	48 89 e5             	mov    %rsp,%rbp
   21f97:	48 83 ec 20          	sub    $0x20,%rsp
   21f9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21f9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21fa3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21fa7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21fac:	75 06                	jne    21fb4 <_ZSt10__fill_n_aIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21fb2:	eb 3a                	jmp    21fee <_ZSt10__fill_n_aIPP23VkDescriptorSetLayout_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21fb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21fb8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21fbf:	00 
   21fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21fc4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21fc8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21fd0:	48 89 ce             	mov    %rcx,%rsi
   21fd3:	48 89 c7             	mov    %rax,%rdi
   21fd6:	e8 3b 04 00 00       	call   22416 <_ZSt8__fill_aIPP23VkDescriptorSetLayout_TS1_EvT_S3_RKT0_>
      return __first + __n;
   21fdb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21fdf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   21fe6:	00 
   21fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21feb:	48 01 d0             	add    %rdx,%rax
    }
   21fee:	c9                   	leave
   21fef:	c3                   	ret

0000000000021ff0 <_ZSt19__iterator_categoryIPP17VkDescriptorSet_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21ff0:	55                   	push   %rbp
   21ff1:	48 89 e5             	mov    %rsp,%rbp
   21ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21ff8:	90                   	nop
   21ff9:	5d                   	pop    %rbp
   21ffa:	c3                   	ret

0000000000021ffb <_ZSt10__fill_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21ffb:	55                   	push   %rbp
   21ffc:	48 89 e5             	mov    %rsp,%rbp
   21fff:	48 83 ec 20          	sub    $0x20,%rsp
   22003:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22007:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2200b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   2200f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   22014:	75 06                	jne    2201c <_ZSt10__fill_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   22016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2201a:	eb 3a                	jmp    22056 <_ZSt10__fill_n_aIPP17VkDescriptorSet_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   2201c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22020:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   22027:	00 
   22028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2202c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   22030:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22038:	48 89 ce             	mov    %rcx,%rsi
   2203b:	48 89 c7             	mov    %rax,%rdi
   2203e:	e8 01 04 00 00       	call   22444 <_ZSt8__fill_aIPP17VkDescriptorSet_TS1_EvT_S3_RKT0_>
      return __first + __n;
   22043:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22047:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2204e:	00 
   2204f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22053:	48 01 d0             	add    %rdx,%rax
    }
   22056:	c9                   	leave
   22057:	c3                   	ret

0000000000022058 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   22058:	55                   	push   %rbp
   22059:	48 89 e5             	mov    %rsp,%rbp
   2205c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   22060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22064:	5d                   	pop    %rbp
   22065:	c3                   	ret

0000000000022066 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   22066:	55                   	push   %rbp
   22067:	48 89 e5             	mov    %rsp,%rbp
   2206a:	41 54                	push   %r12
   2206c:	53                   	push   %rbx
   2206d:	48 83 ec 20          	sub    $0x20,%rsp
   22071:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22075:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22079:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   2207d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22081:	48 89 c7             	mov    %rax,%rdi
   22084:	e8 1c eb ff ff       	call   20ba5 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   22089:	49 89 c4             	mov    %rax,%r12
   2208c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22090:	48 89 c7             	mov    %rax,%rdi
   22093:	e8 da 03 00 00       	call   22472 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   22098:	48 89 c3             	mov    %rax,%rbx
   2209b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2209f:	48 89 c7             	mov    %rax,%rdi
   220a2:	e8 cb 03 00 00       	call   22472 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   220a7:	4c 89 e2             	mov    %r12,%rdx
   220aa:	48 89 de             	mov    %rbx,%rsi
   220ad:	48 89 c7             	mov    %rax,%rdi
   220b0:	e8 cb 03 00 00       	call   22480 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   220b5:	48 89 c2             	mov    %rax,%rdx
   220b8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   220bc:	48 89 d6             	mov    %rdx,%rsi
   220bf:	48 89 c7             	mov    %rax,%rdi
   220c2:	e8 e6 03 00 00       	call   224ad <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   220c7:	48 83 c4 20          	add    $0x20,%rsp
   220cb:	5b                   	pop    %rbx
   220cc:	41 5c                	pop    %r12
   220ce:	5d                   	pop    %rbp
   220cf:	c3                   	ret

00000000000220d0 <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   220d0:	55                   	push   %rbp
   220d1:	48 89 e5             	mov    %rsp,%rbp
   220d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   220d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   220dc:	5d                   	pop    %rbp
   220dd:	c3                   	ret

00000000000220de <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   220de:	55                   	push   %rbp
   220df:	48 89 e5             	mov    %rsp,%rbp
   220e2:	41 54                	push   %r12
   220e4:	53                   	push   %rbx
   220e5:	48 83 ec 20          	sub    $0x20,%rsp
   220e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   220ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   220f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   220f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   220f9:	48 89 c7             	mov    %rax,%rdi
   220fc:	e8 cc 03 00 00       	call   224cd <_ZSt12__niter_baseIPjET_S1_>
   22101:	49 89 c4             	mov    %rax,%r12
   22104:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22108:	48 89 c7             	mov    %rax,%rdi
   2210b:	e8 af 03 00 00       	call   224bf <_ZSt12__niter_baseIPKjET_S2_>
   22110:	48 89 c3             	mov    %rax,%rbx
   22113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22117:	48 89 c7             	mov    %rax,%rdi
   2211a:	e8 a0 03 00 00       	call   224bf <_ZSt12__niter_baseIPKjET_S2_>
   2211f:	4c 89 e2             	mov    %r12,%rdx
   22122:	48 89 de             	mov    %rbx,%rsi
   22125:	48 89 c7             	mov    %rax,%rdi
   22128:	e8 ae 03 00 00       	call   224db <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   2212d:	48 89 c2             	mov    %rax,%rdx
   22130:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   22134:	48 89 d6             	mov    %rdx,%rsi
   22137:	48 89 c7             	mov    %rax,%rdi
   2213a:	e8 c9 03 00 00       	call   22508 <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   2213f:	48 83 c4 20          	add    $0x20,%rsp
   22143:	5b                   	pop    %rbx
   22144:	41 5c                	pop    %r12
   22146:	5d                   	pop    %rbp
   22147:	c3                   	ret

0000000000022148 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   22148:	55                   	push   %rbp
   22149:	48 89 e5             	mov    %rsp,%rbp
   2214c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   22150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22154:	5d                   	pop    %rbp
   22155:	c3                   	ret

0000000000022156 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   22156:	55                   	push   %rbp
   22157:	48 89 e5             	mov    %rsp,%rbp
   2215a:	48 83 ec 20          	sub    $0x20,%rsp
   2215e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22166:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   2216a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2216e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22176:	48 89 ce             	mov    %rcx,%rsi
   22179:	48 89 c7             	mov    %rax,%rdi
   2217c:	e8 99 03 00 00       	call   2251a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   22181:	c9                   	leave
   22182:	c3                   	ret

0000000000022183 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   22183:	55                   	push   %rbp
   22184:	48 89 e5             	mov    %rsp,%rbp
   22187:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2218b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   2218f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22193:	5d                   	pop    %rbp
   22194:	c3                   	ret
   22195:	90                   	nop

0000000000022196 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   22196:	55                   	push   %rbp
   22197:	48 89 e5             	mov    %rsp,%rbp
   2219a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   2219e:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   221a5:	1c c7 01 
      }
   221a8:	5d                   	pop    %rbp
   221a9:	c3                   	ret

00000000000221aa <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   221aa:	55                   	push   %rbp
   221ab:	48 89 e5             	mov    %rsp,%rbp
   221ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   221b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   221b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   221ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   221be:	48 8b 12             	mov    (%rdx),%rdx
   221c1:	48 89 10             	mov    %rdx,(%rax)
      { }
   221c4:	90                   	nop
   221c5:	5d                   	pop    %rbp
   221c6:	c3                   	ret
   221c7:	90                   	nop

00000000000221c8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   221c8:	55                   	push   %rbp
   221c9:	48 89 e5             	mov    %rsp,%rbp
   221cc:	48 83 ec 20          	sub    $0x20,%rsp
   221d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   221d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   221d8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   221dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   221e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   221e4:	48 89 ce             	mov    %rcx,%rsi
   221e7:	48 89 c7             	mov    %rax,%rdi
   221ea:	e8 59 03 00 00       	call   22548 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   221ef:	90                   	nop
   221f0:	c9                   	leave
   221f1:	c3                   	ret

00000000000221f2 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   221f2:	55                   	push   %rbp
   221f3:	48 89 e5             	mov    %rsp,%rbp
   221f6:	48 83 ec 20          	sub    $0x20,%rsp
   221fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   221fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22202:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   22206:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2220a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2220e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22212:	48 89 ce             	mov    %rcx,%rsi
   22215:	48 89 c7             	mov    %rax,%rdi
   22218:	e8 75 03 00 00       	call   22592 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   2221d:	90                   	nop
   2221e:	c9                   	leave
   2221f:	c3                   	ret

0000000000022220 <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   22220:	55                   	push   %rbp
   22221:	48 89 e5             	mov    %rsp,%rbp
   22224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   22228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2222c:	5d                   	pop    %rbp
   2222d:	c3                   	ret

000000000002222e <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   2222e:	55                   	push   %rbp
   2222f:	48 89 e5             	mov    %rsp,%rbp
   22232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   22236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2223a:	5d                   	pop    %rbp
   2223b:	c3                   	ret

000000000002223c <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   2223c:	55                   	push   %rbp
   2223d:	48 89 e5             	mov    %rsp,%rbp
   22240:	48 83 ec 20          	sub    $0x20,%rsp
   22244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22248:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2224c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   22250:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22254:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2225c:	48 89 ce             	mov    %rcx,%rsi
   2225f:	48 89 c7             	mov    %rax,%rdi
   22262:	e8 66 03 00 00       	call   225cd <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   22267:	c9                   	leave
   22268:	c3                   	ret

0000000000022269 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   22269:	55                   	push   %rbp
   2226a:	48 89 e5             	mov    %rsp,%rbp
   2226d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22271:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   22275:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22279:	5d                   	pop    %rbp
   2227a:	c3                   	ret

000000000002227b <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   2227b:	55                   	push   %rbp
   2227c:	48 89 e5             	mov    %rsp,%rbp
   2227f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   22283:	90                   	nop
   22284:	5d                   	pop    %rbp
   22285:	c3                   	ret

0000000000022286 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   22286:	55                   	push   %rbp
   22287:	48 89 e5             	mov    %rsp,%rbp
   2228a:	48 83 ec 20          	sub    $0x20,%rsp
   2228e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   2229a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2229f:	75 06                	jne    222a7 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   222a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222a5:	eb 3a                	jmp    222e1 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   222a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   222ab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   222b2:	00 
   222b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222b7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   222bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   222bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222c3:	48 89 ce             	mov    %rcx,%rsi
   222c6:	48 89 c7             	mov    %rax,%rdi
   222c9:	e8 2c 03 00 00       	call   225fa <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   222ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   222d2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   222d9:	00 
   222da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   222de:	48 01 d0             	add    %rdx,%rax
    }
   222e1:	c9                   	leave
   222e2:	c3                   	ret

00000000000222e3 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   222e3:	55                   	push   %rbp
   222e4:	48 89 e5             	mov    %rsp,%rbp
   222e7:	48 83 ec 20          	sub    $0x20,%rsp
   222eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   222ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   222f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   222f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   222fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   222ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22303:	48 89 ce             	mov    %rcx,%rsi
   22306:	48 89 c7             	mov    %rax,%rdi
   22309:	e8 1a 03 00 00       	call   22628 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   2230e:	90                   	nop
   2230f:	c9                   	leave
   22310:	c3                   	ret

0000000000022311 <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   22311:	55                   	push   %rbp
   22312:	48 89 e5             	mov    %rsp,%rbp
   22315:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   22319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2231d:	5d                   	pop    %rbp
   2231e:	c3                   	ret

000000000002231f <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   2231f:	55                   	push   %rbp
   22320:	48 89 e5             	mov    %rsp,%rbp
   22323:	48 83 ec 20          	sub    $0x20,%rsp
   22327:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2232b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2232f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   22333:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22337:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2233b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2233f:	48 89 ce             	mov    %rcx,%rsi
   22342:	48 89 c7             	mov    %rax,%rdi
   22345:	e8 19 03 00 00       	call   22663 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   2234a:	c9                   	leave
   2234b:	c3                   	ret

000000000002234c <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   2234c:	55                   	push   %rbp
   2234d:	48 89 e5             	mov    %rsp,%rbp
   22350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   22358:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2235c:	5d                   	pop    %rbp
   2235d:	c3                   	ret

000000000002235e <_ZSt8__fill_aIPP10VkBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   2235e:	55                   	push   %rbp
   2235f:	48 89 e5             	mov    %rsp,%rbp
   22362:	48 83 ec 20          	sub    $0x20,%rsp
   22366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2236a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2236e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   22372:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22376:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2237a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2237e:	48 89 ce             	mov    %rcx,%rsi
   22381:	48 89 c7             	mov    %rax,%rdi
   22384:	e8 07 03 00 00       	call   22690 <_ZSt9__fill_a1IPP10VkBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   22389:	90                   	nop
   2238a:	c9                   	leave
   2238b:	c3                   	ret

000000000002238c <_ZSt8__fill_aIPP16VkDeviceMemory_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   2238c:	55                   	push   %rbp
   2238d:	48 89 e5             	mov    %rsp,%rbp
   22390:	48 83 ec 20          	sub    $0x20,%rsp
   22394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22398:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2239c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   223a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   223a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   223a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   223ac:	48 89 ce             	mov    %rcx,%rsi
   223af:	48 89 c7             	mov    %rax,%rdi
   223b2:	e8 14 03 00 00       	call   226cb <_ZSt9__fill_a1IPP16VkDeviceMemory_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   223b7:	90                   	nop
   223b8:	c9                   	leave
   223b9:	c3                   	ret

00000000000223ba <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   223ba:	55                   	push   %rbp
   223bb:	48 89 e5             	mov    %rsp,%rbp
   223be:	48 83 ec 20          	sub    $0x20,%rsp
   223c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   223c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   223ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   223ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   223d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   223d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   223da:	48 89 ce             	mov    %rcx,%rsi
   223dd:	48 89 c7             	mov    %rax,%rdi
   223e0:	e8 21 03 00 00       	call   22706 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   223e5:	90                   	nop
   223e6:	c9                   	leave
   223e7:	c3                   	ret

00000000000223e8 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   223e8:	55                   	push   %rbp
   223e9:	48 89 e5             	mov    %rsp,%rbp
   223ec:	48 83 ec 20          	sub    $0x20,%rsp
   223f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   223f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   223f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   223fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22400:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22408:	48 89 ce             	mov    %rcx,%rsi
   2240b:	48 89 c7             	mov    %rax,%rdi
   2240e:	e8 2e 03 00 00       	call   22741 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   22413:	90                   	nop
   22414:	c9                   	leave
   22415:	c3                   	ret

0000000000022416 <_ZSt8__fill_aIPP23VkDescriptorSetLayout_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   22416:	55                   	push   %rbp
   22417:	48 89 e5             	mov    %rsp,%rbp
   2241a:	48 83 ec 20          	sub    $0x20,%rsp
   2241e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22426:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   2242a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2242e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22436:	48 89 ce             	mov    %rcx,%rsi
   22439:	48 89 c7             	mov    %rax,%rdi
   2243c:	e8 3b 03 00 00       	call   2277c <_ZSt9__fill_a1IPP23VkDescriptorSetLayout_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   22441:	90                   	nop
   22442:	c9                   	leave
   22443:	c3                   	ret

0000000000022444 <_ZSt8__fill_aIPP17VkDescriptorSet_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   22444:	55                   	push   %rbp
   22445:	48 89 e5             	mov    %rsp,%rbp
   22448:	48 83 ec 20          	sub    $0x20,%rsp
   2244c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22450:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22454:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   22458:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2245c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22464:	48 89 ce             	mov    %rcx,%rsi
   22467:	48 89 c7             	mov    %rax,%rdi
   2246a:	e8 48 03 00 00       	call   227b7 <_ZSt9__fill_a1IPP17VkDescriptorSet_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   2246f:	90                   	nop
   22470:	c9                   	leave
   22471:	c3                   	ret

0000000000022472 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   22472:	55                   	push   %rbp
   22473:	48 89 e5             	mov    %rsp,%rbp
   22476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   2247a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2247e:	5d                   	pop    %rbp
   2247f:	c3                   	ret

0000000000022480 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   22480:	55                   	push   %rbp
   22481:	48 89 e5             	mov    %rsp,%rbp
   22484:	48 83 ec 20          	sub    $0x20,%rsp
   22488:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2248c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22490:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   22494:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22498:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2249c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224a0:	48 89 ce             	mov    %rcx,%rsi
   224a3:	48 89 c7             	mov    %rax,%rdi
   224a6:	e8 47 03 00 00       	call   227f2 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   224ab:	c9                   	leave
   224ac:	c3                   	ret

00000000000224ad <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   224ad:	55                   	push   %rbp
   224ae:	48 89 e5             	mov    %rsp,%rbp
   224b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   224b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   224b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   224bd:	5d                   	pop    %rbp
   224be:	c3                   	ret

00000000000224bf <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   224bf:	55                   	push   %rbp
   224c0:	48 89 e5             	mov    %rsp,%rbp
   224c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   224c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224cb:	5d                   	pop    %rbp
   224cc:	c3                   	ret

00000000000224cd <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   224cd:	55                   	push   %rbp
   224ce:	48 89 e5             	mov    %rsp,%rbp
   224d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   224d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224d9:	5d                   	pop    %rbp
   224da:	c3                   	ret

00000000000224db <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   224db:	55                   	push   %rbp
   224dc:	48 89 e5             	mov    %rsp,%rbp
   224df:	48 83 ec 20          	sub    $0x20,%rsp
   224e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   224e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   224eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   224ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   224f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   224f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   224fb:	48 89 ce             	mov    %rcx,%rsi
   224fe:	48 89 c7             	mov    %rax,%rdi
   22501:	e8 19 03 00 00       	call   2281f <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   22506:	c9                   	leave
   22507:	c3                   	ret

0000000000022508 <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   22508:	55                   	push   %rbp
   22509:	48 89 e5             	mov    %rsp,%rbp
   2250c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22510:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   22514:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22518:	5d                   	pop    %rbp
   22519:	c3                   	ret

000000000002251a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   2251a:	55                   	push   %rbp
   2251b:	48 89 e5             	mov    %rsp,%rbp
   2251e:	48 83 ec 20          	sub    $0x20,%rsp
   22522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2252a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   2252e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22532:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2253a:	48 89 ce             	mov    %rcx,%rsi
   2253d:	48 89 c7             	mov    %rax,%rdi
   22540:	e8 07 03 00 00       	call   2284c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   22545:	c9                   	leave
   22546:	c3                   	ret
   22547:	90                   	nop

0000000000022548 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   22548:	55                   	push   %rbp
   22549:	48 89 e5             	mov    %rsp,%rbp
   2254c:	53                   	push   %rbx
   2254d:	48 83 ec 28          	sub    $0x28,%rsp
   22551:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22555:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22559:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   2255d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   22561:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22565:	48 89 c7             	mov    %rax,%rdi
   22568:	e8 3e 03 00 00       	call   228ab <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   2256d:	48 89 c7             	mov    %rax,%rdi
   22570:	e8 50 03 00 00       	call   228c5 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   22575:	48 89 c6             	mov    %rax,%rsi
   22578:	48 89 df             	mov    %rbx,%rdi
   2257b:	e8 50 2d fe ff       	call   52d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   22580:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22584:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   2258b:	90                   	nop
   2258c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   22590:	c9                   	leave
   22591:	c3                   	ret

0000000000022592 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   22592:	55                   	push   %rbp
   22593:	48 89 e5             	mov    %rsp,%rbp
   22596:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2259a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2259e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   225a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   225a6:	48 8b 00             	mov    (%rax),%rax
   225a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   225ad:	eb 10                	jmp    225bf <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   225af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   225b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   225b7:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   225ba:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   225bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   225c3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   225c7:	75 e6                	jne    225af <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   225c9:	90                   	nop
   225ca:	90                   	nop
   225cb:	5d                   	pop    %rbp
   225cc:	c3                   	ret

00000000000225cd <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   225cd:	55                   	push   %rbp
   225ce:	48 89 e5             	mov    %rsp,%rbp
   225d1:	48 83 ec 20          	sub    $0x20,%rsp
   225d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   225d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   225dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   225e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   225e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   225e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   225ed:	48 89 ce             	mov    %rcx,%rsi
   225f0:	48 89 c7             	mov    %rax,%rdi
   225f3:	e8 db 02 00 00       	call   228d3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   225f8:	c9                   	leave
   225f9:	c3                   	ret

00000000000225fa <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   225fa:	55                   	push   %rbp
   225fb:	48 89 e5             	mov    %rsp,%rbp
   225fe:	48 83 ec 20          	sub    $0x20,%rsp
   22602:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22606:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2260a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   2260e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22612:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   22616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2261a:	48 89 ce             	mov    %rcx,%rsi
   2261d:	48 89 c7             	mov    %rax,%rdi
   22620:	e8 30 03 00 00       	call   22955 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   22625:	90                   	nop
   22626:	c9                   	leave
   22627:	c3                   	ret

0000000000022628 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   22628:	55                   	push   %rbp
   22629:	48 89 e5             	mov    %rsp,%rbp
   2262c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22630:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22634:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   22638:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2263c:	48 8b 00             	mov    (%rax),%rax
   2263f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   22643:	eb 10                	jmp    22655 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   22645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22649:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2264d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   22650:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   22655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22659:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2265d:	75 e6                	jne    22645 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   2265f:	90                   	nop
   22660:	90                   	nop
   22661:	5d                   	pop    %rbp
   22662:	c3                   	ret

0000000000022663 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   22663:	55                   	push   %rbp
   22664:	48 89 e5             	mov    %rsp,%rbp
   22667:	48 83 ec 20          	sub    $0x20,%rsp
   2266b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2266f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22673:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   22677:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2267b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2267f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22683:	48 89 ce             	mov    %rcx,%rsi
   22686:	48 89 c7             	mov    %rax,%rdi
   22689:	e8 02 03 00 00       	call   22990 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   2268e:	c9                   	leave
   2268f:	c3                   	ret

0000000000022690 <_ZSt9__fill_a1IPP10VkBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   22690:	55                   	push   %rbp
   22691:	48 89 e5             	mov    %rsp,%rbp
   22694:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22698:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2269c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   226a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   226a4:	48 8b 00             	mov    (%rax),%rax
   226a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   226ab:	eb 10                	jmp    226bd <_ZSt9__fill_a1IPP10VkBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   226ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   226b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   226b5:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   226b8:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   226bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   226c1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   226c5:	75 e6                	jne    226ad <_ZSt9__fill_a1IPP10VkBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   226c7:	90                   	nop
   226c8:	90                   	nop
   226c9:	5d                   	pop    %rbp
   226ca:	c3                   	ret

00000000000226cb <_ZSt9__fill_a1IPP16VkDeviceMemory_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   226cb:	55                   	push   %rbp
   226cc:	48 89 e5             	mov    %rsp,%rbp
   226cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   226d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   226d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   226db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   226df:	48 8b 00             	mov    (%rax),%rax
   226e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   226e6:	eb 10                	jmp    226f8 <_ZSt9__fill_a1IPP16VkDeviceMemory_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   226e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   226ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   226f0:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   226f3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   226f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   226fc:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   22700:	75 e6                	jne    226e8 <_ZSt9__fill_a1IPP16VkDeviceMemory_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   22702:	90                   	nop
   22703:	90                   	nop
   22704:	5d                   	pop    %rbp
   22705:	c3                   	ret

0000000000022706 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   22706:	55                   	push   %rbp
   22707:	48 89 e5             	mov    %rsp,%rbp
   2270a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2270e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22712:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   22716:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2271a:	48 8b 00             	mov    (%rax),%rax
   2271d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   22721:	eb 10                	jmp    22733 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   22723:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22727:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2272b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   2272e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   22733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22737:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2273b:	75 e6                	jne    22723 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   2273d:	90                   	nop
   2273e:	90                   	nop
   2273f:	5d                   	pop    %rbp
   22740:	c3                   	ret

0000000000022741 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   22741:	55                   	push   %rbp
   22742:	48 89 e5             	mov    %rsp,%rbp
   22745:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22749:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2274d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   22751:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22755:	48 8b 00             	mov    (%rax),%rax
   22758:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   2275c:	eb 10                	jmp    2276e <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   2275e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22762:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22766:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   22769:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   2276e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22772:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   22776:	75 e6                	jne    2275e <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   22778:	90                   	nop
   22779:	90                   	nop
   2277a:	5d                   	pop    %rbp
   2277b:	c3                   	ret

000000000002277c <_ZSt9__fill_a1IPP23VkDescriptorSetLayout_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   2277c:	55                   	push   %rbp
   2277d:	48 89 e5             	mov    %rsp,%rbp
   22780:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22784:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22788:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   2278c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22790:	48 8b 00             	mov    (%rax),%rax
   22793:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   22797:	eb 10                	jmp    227a9 <_ZSt9__fill_a1IPP23VkDescriptorSetLayout_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   22799:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2279d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   227a1:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   227a4:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   227a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   227ad:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   227b1:	75 e6                	jne    22799 <_ZSt9__fill_a1IPP23VkDescriptorSetLayout_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   227b3:	90                   	nop
   227b4:	90                   	nop
   227b5:	5d                   	pop    %rbp
   227b6:	c3                   	ret

00000000000227b7 <_ZSt9__fill_a1IPP17VkDescriptorSet_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   227b7:	55                   	push   %rbp
   227b8:	48 89 e5             	mov    %rsp,%rbp
   227bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   227bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   227c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   227c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   227cb:	48 8b 00             	mov    (%rax),%rax
   227ce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   227d2:	eb 10                	jmp    227e4 <_ZSt9__fill_a1IPP17VkDescriptorSet_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   227d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   227d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   227dc:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   227df:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   227e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   227e8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   227ec:	75 e6                	jne    227d4 <_ZSt9__fill_a1IPP17VkDescriptorSet_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   227ee:	90                   	nop
   227ef:	90                   	nop
   227f0:	5d                   	pop    %rbp
   227f1:	c3                   	ret

00000000000227f2 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   227f2:	55                   	push   %rbp
   227f3:	48 89 e5             	mov    %rsp,%rbp
   227f6:	48 83 ec 20          	sub    $0x20,%rsp
   227fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   227fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22802:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   22806:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2280a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2280e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22812:	48 89 ce             	mov    %rcx,%rsi
   22815:	48 89 c7             	mov    %rax,%rdi
   22818:	e8 d2 01 00 00       	call   229ef <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   2281d:	c9                   	leave
   2281e:	c3                   	ret

000000000002281f <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   2281f:	55                   	push   %rbp
   22820:	48 89 e5             	mov    %rsp,%rbp
   22823:	48 83 ec 20          	sub    $0x20,%rsp
   22827:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2282b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2282f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   22833:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22837:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2283b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2283f:	48 89 ce             	mov    %rcx,%rsi
   22842:	48 89 c7             	mov    %rax,%rdi
   22845:	e8 04 02 00 00       	call   22a4e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   2284a:	c9                   	leave
   2284b:	c3                   	ret

000000000002284c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   2284c:	55                   	push   %rbp
   2284d:	48 89 e5             	mov    %rsp,%rbp
   22850:	48 83 ec 30          	sub    $0x30,%rsp
   22854:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22858:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2285c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   22860:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22864:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   22868:	48 c1 f8 03          	sar    $0x3,%rax
   2286c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   22870:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   22875:	74 1f                	je     22896 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   22877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2287b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   22882:	00 
   22883:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   22887:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2288b:	48 89 ce             	mov    %rcx,%rsi
   2288e:	48 89 c7             	mov    %rax,%rdi
   22891:	e8 ba 30 fe ff       	call   5950 <memmove@plt>
	  return __result + _Num;
   22896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2289a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   228a1:	00 
   228a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   228a6:	48 01 d0             	add    %rdx,%rax
	}
   228a9:	c9                   	leave
   228aa:	c3                   	ret

00000000000228ab <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   228ab:	55                   	push   %rbp
   228ac:	48 89 e5             	mov    %rsp,%rbp
   228af:	48 83 ec 10          	sub    $0x10,%rsp
   228b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   228b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   228bb:	48 89 c7             	mov    %rax,%rdi
   228be:	e8 ea 01 00 00       	call   22aad <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   228c3:	c9                   	leave
   228c4:	c3                   	ret

00000000000228c5 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   228c5:	55                   	push   %rbp
   228c6:	48 89 e5             	mov    %rsp,%rbp
   228c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   228cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   228d1:	5d                   	pop    %rbp
   228d2:	c3                   	ret

00000000000228d3 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   228d3:	55                   	push   %rbp
   228d4:	48 89 e5             	mov    %rsp,%rbp
   228d7:	48 83 ec 30          	sub    $0x30,%rsp
   228db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   228df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   228e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   228e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   228eb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   228ef:	48 c1 f8 04          	sar    $0x4,%rax
   228f3:	48 89 c2             	mov    %rax,%rdx
   228f6:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   228fd:	e3 38 8e 
   22900:	48 0f af c2          	imul   %rdx,%rax
   22904:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   22908:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2290d:	74 28                	je     22937 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   2290f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22913:	48 89 d0             	mov    %rdx,%rax
   22916:	48 c1 e0 03          	shl    $0x3,%rax
   2291a:	48 01 d0             	add    %rdx,%rax
   2291d:	48 c1 e0 04          	shl    $0x4,%rax
   22921:	48 89 c2             	mov    %rax,%rdx
   22924:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   22928:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2292c:	48 89 ce             	mov    %rcx,%rsi
   2292f:	48 89 c7             	mov    %rax,%rdi
   22932:	e8 19 30 fe ff       	call   5950 <memmove@plt>
	  return __result + _Num;
   22937:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2293b:	48 89 d0             	mov    %rdx,%rax
   2293e:	48 c1 e0 03          	shl    $0x3,%rax
   22942:	48 01 d0             	add    %rdx,%rax
   22945:	48 c1 e0 04          	shl    $0x4,%rax
   22949:	48 89 c2             	mov    %rax,%rdx
   2294c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22950:	48 01 d0             	add    %rdx,%rax
	}
   22953:	c9                   	leave
   22954:	c3                   	ret

0000000000022955 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   22955:	55                   	push   %rbp
   22956:	48 89 e5             	mov    %rsp,%rbp
   22959:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2295d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22961:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   22965:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22969:	48 8b 00             	mov    (%rax),%rax
   2296c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   22970:	eb 10                	jmp    22982 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   22972:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22976:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2297a:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   2297d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   22982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22986:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   2298a:	75 e6                	jne    22972 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   2298c:	90                   	nop
   2298d:	90                   	nop
   2298e:	5d                   	pop    %rbp
   2298f:	c3                   	ret

0000000000022990 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   22990:	55                   	push   %rbp
   22991:	48 89 e5             	mov    %rsp,%rbp
   22994:	48 83 ec 30          	sub    $0x30,%rsp
   22998:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2299c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   229a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   229a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   229a8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   229ac:	48 c1 f8 03          	sar    $0x3,%rax
   229b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   229b4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   229b9:	74 1f                	je     229da <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   229bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   229bf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   229c6:	00 
   229c7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   229cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   229cf:	48 89 ce             	mov    %rcx,%rsi
   229d2:	48 89 c7             	mov    %rax,%rdi
   229d5:	e8 76 2f fe ff       	call   5950 <memmove@plt>
	  return __result + _Num;
   229da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   229de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   229e5:	00 
   229e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   229ea:	48 01 d0             	add    %rdx,%rax
	}
   229ed:	c9                   	leave
   229ee:	c3                   	ret

00000000000229ef <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   229ef:	55                   	push   %rbp
   229f0:	48 89 e5             	mov    %rsp,%rbp
   229f3:	48 83 ec 30          	sub    $0x30,%rsp
   229f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   229fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   229ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   22a03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22a07:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   22a0b:	48 c1 f8 03          	sar    $0x3,%rax
   22a0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   22a13:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   22a18:	74 1f                	je     22a39 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   22a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22a1e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   22a25:	00 
   22a26:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   22a2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22a2e:	48 89 ce             	mov    %rcx,%rsi
   22a31:	48 89 c7             	mov    %rax,%rdi
   22a34:	e8 17 2f fe ff       	call   5950 <memmove@plt>
	  return __result + _Num;
   22a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22a3d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   22a44:	00 
   22a45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22a49:	48 01 d0             	add    %rdx,%rax
	}
   22a4c:	c9                   	leave
   22a4d:	c3                   	ret

0000000000022a4e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   22a4e:	55                   	push   %rbp
   22a4f:	48 89 e5             	mov    %rsp,%rbp
   22a52:	48 83 ec 30          	sub    $0x30,%rsp
   22a56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22a5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22a5e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   22a62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22a66:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   22a6a:	48 c1 f8 02          	sar    $0x2,%rax
   22a6e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   22a72:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   22a77:	74 1f                	je     22a98 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   22a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22a7d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   22a84:	00 
   22a85:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   22a89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22a8d:	48 89 ce             	mov    %rcx,%rsi
   22a90:	48 89 c7             	mov    %rax,%rdi
   22a93:	e8 b8 2e fe ff       	call   5950 <memmove@plt>
	  return __result + _Num;
   22a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22a9c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   22aa3:	00 
   22aa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22aa8:	48 01 d0             	add    %rdx,%rax
	}
   22aab:	c9                   	leave
   22aac:	c3                   	ret

0000000000022aad <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   22aad:	55                   	push   %rbp
   22aae:	48 89 e5             	mov    %rsp,%rbp
   22ab1:	48 83 ec 10          	sub    $0x10,%rsp
   22ab5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   22ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22abd:	48 89 c7             	mov    %rax,%rdi
   22ac0:	e8 02 00 00 00       	call   22ac7 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   22ac5:	c9                   	leave
   22ac6:	c3                   	ret

0000000000022ac7 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   22ac7:	55                   	push   %rbp
   22ac8:	48 89 e5             	mov    %rsp,%rbp
   22acb:	48 83 ec 10          	sub    $0x10,%rsp
   22acf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22ad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22ad7:	48 89 c7             	mov    %rax,%rdi
   22ada:	e8 02 00 00 00       	call   22ae1 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   22adf:	c9                   	leave
   22ae0:	c3                   	ret

0000000000022ae1 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   22ae1:	55                   	push   %rbp
   22ae2:	48 89 e5             	mov    %rsp,%rbp
   22ae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22aed:	48 8b 00             	mov    (%rax),%rax
   22af0:	5d                   	pop    %rbp
   22af1:	c3                   	ret

0000000000022af2 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   22af2:	55                   	push   %rbp
   22af3:	48 89 e5             	mov    %rsp,%rbp
   22af6:	48 83 ec 10          	sub    $0x10,%rsp
   22afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22afe:	48 8d 15 bb 61 01 00 	lea    0x161bb(%rip),%rdx        # 38cc0 <_ZTVSt19bad_optional_access+0x10>
   22b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22b09:	48 89 10             	mov    %rdx,(%rax)
   22b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22b10:	48 89 c7             	mov    %rax,%rdi
   22b13:	e8 58 2f fe ff       	call   5a70 <_ZNSt9exceptionD2Ev@plt>
   22b18:	90                   	nop
   22b19:	c9                   	leave
   22b1a:	c3                   	ret
   22b1b:	90                   	nop

0000000000022b1c <_ZNSt19bad_optional_accessD0Ev>:
   22b1c:	55                   	push   %rbp
   22b1d:	48 89 e5             	mov    %rsp,%rbp
   22b20:	48 83 ec 10          	sub    $0x10,%rsp
   22b24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22b2c:	48 89 c7             	mov    %rax,%rdi
   22b2f:	e8 be ff ff ff       	call   22af2 <_ZNSt19bad_optional_accessD1Ev>
   22b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22b38:	be 08 00 00 00       	mov    $0x8,%esi
   22b3d:	48 89 c7             	mov    %rax,%rdi
   22b40:	e8 fb 29 fe ff       	call   5540 <_ZdlPvm@plt>
   22b45:	c9                   	leave
   22b46:	c3                   	ret

Disassembly of section .fini:

0000000000022b48 <_fini>:
   22b48:	48 83 ec 08          	sub    $0x8,%rsp
   22b4c:	48 83 c4 08          	add    $0x8,%rsp
   22b50:	c3                   	ret
