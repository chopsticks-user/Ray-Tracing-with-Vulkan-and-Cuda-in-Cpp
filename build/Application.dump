
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	48 83 ec 08          	sub    $0x8,%rsp
    5004:	48 8b 05 b5 cf 03 00 	mov    0x3cfb5(%rip),%rax        # 41fc0 <__gmon_start__@Base>
    500b:	48 85 c0             	test   %rax,%rax
    500e:	74 02                	je     5012 <_init+0x12>
    5010:	ff d0                	call   *%rax
    5012:	48 83 c4 08          	add    $0x8,%rsp
    5016:	c3                   	ret

Disassembly of section .plt:

0000000000005020 <_Znam@plt-0x10>:
    5020:	ff 35 ca cf 03 00    	push   0x3cfca(%rip)        # 41ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 cc cf 03 00    	jmp    *0x3cfcc(%rip)        # 41ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <_Znam@plt>:
    5030:	ff 25 ca cf 03 00    	jmp    *0x3cfca(%rip)        # 42000 <_Znam@GLIBCXX_3.4>
    5036:	68 00 00 00 00       	push   $0x0
    503b:	e9 e0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    5040:	ff 25 c2 cf 03 00    	jmp    *0x3cfc2(%rip)        # 42008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    5046:	68 01 00 00 00       	push   $0x1
    504b:	e9 d0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005050 <_ZNSaIcED2Ev@plt>:
    5050:	ff 25 ba cf 03 00    	jmp    *0x3cfba(%rip)        # 42010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    5056:	68 02 00 00 00       	push   $0x2
    505b:	e9 c0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005060 <glfwDestroyWindow@plt>:
    5060:	ff 25 b2 cf 03 00    	jmp    *0x3cfb2(%rip)        # 42018 <glfwDestroyWindow@Base>
    5066:	68 03 00 00 00       	push   $0x3
    506b:	e9 b0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005070 <_ZNSolsEPFRSt8ios_baseS0_E@plt>:
    5070:	ff 25 aa cf 03 00    	jmp    *0x3cfaa(%rip)        # 42020 <_ZNSolsEPFRSt8ios_baseS0_E@GLIBCXX_3.4>
    5076:	68 04 00 00 00       	push   $0x4
    507b:	e9 a0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005080 <_ZSt17__throw_bad_allocv@plt>:
    5080:	ff 25 a2 cf 03 00    	jmp    *0x3cfa2(%rip)        # 42028 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    5086:	68 05 00 00 00       	push   $0x5
    508b:	e9 90 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005090 <_ZNSt13runtime_errorC1EPKc@plt>:
    5090:	ff 25 9a cf 03 00    	jmp    *0x3cf9a(%rip)        # 42030 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    5096:	68 06 00 00 00       	push   $0x6
    509b:	e9 80 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050a0 <__cxa_begin_catch@plt>:
    50a0:	ff 25 92 cf 03 00    	jmp    *0x3cf92(%rip)        # 42038 <__cxa_begin_catch@CXXABI_1.3>
    50a6:	68 07 00 00 00       	push   $0x7
    50ab:	e9 70 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050b0 <strlen@plt>:
    50b0:	ff 25 8a cf 03 00    	jmp    *0x3cf8a(%rip)        # 42040 <strlen@GLIBC_2.2.5>
    50b6:	68 08 00 00 00       	push   $0x8
    50bb:	e9 60 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050c0 <memcmp@plt>:
    50c0:	ff 25 82 cf 03 00    	jmp    *0x3cf82(%rip)        # 42048 <memcmp@GLIBC_2.2.5>
    50c6:	68 09 00 00 00       	push   $0x9
    50cb:	e9 50 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050d0 <__cxa_allocate_exception@plt>:
    50d0:	ff 25 7a cf 03 00    	jmp    *0x3cf7a(%rip)        # 42050 <__cxa_allocate_exception@CXXABI_1.3>
    50d6:	68 0a 00 00 00       	push   $0xa
    50db:	e9 40 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050e0 <_ZSt20__throw_length_errorPKc@plt>:
    50e0:	ff 25 72 cf 03 00    	jmp    *0x3cf72(%rip)        # 42058 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    50e6:	68 0b 00 00 00       	push   $0xb
    50eb:	e9 30 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050f0 <__cxa_guard_abort@plt>:
    50f0:	ff 25 6a cf 03 00    	jmp    *0x3cf6a(%rip)        # 42060 <__cxa_guard_abort@CXXABI_1.3>
    50f6:	68 0c 00 00 00       	push   $0xc
    50fb:	e9 20 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005100 <__cxa_guard_release@plt>:
    5100:	ff 25 62 cf 03 00    	jmp    *0x3cf62(%rip)        # 42068 <__cxa_guard_release@CXXABI_1.3>
    5106:	68 0d 00 00 00       	push   $0xd
    510b:	e9 10 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005110 <__assert_fail@plt>:
    5110:	ff 25 5a cf 03 00    	jmp    *0x3cf5a(%rip)        # 42070 <__assert_fail@GLIBC_2.2.5>
    5116:	68 0e 00 00 00       	push   $0xe
    511b:	e9 00 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005120 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    5120:	ff 25 52 cf 03 00    	jmp    *0x3cf52(%rip)        # 42078 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    5126:	68 0f 00 00 00       	push   $0xf
    512b:	e9 f0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005130 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    5130:	ff 25 4a cf 03 00    	jmp    *0x3cf4a(%rip)        # 42080 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.26>
    5136:	68 10 00 00 00       	push   $0x10
    513b:	e9 e0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005140 <_ZSt19__throw_logic_errorPKc@plt>:
    5140:	ff 25 42 cf 03 00    	jmp    *0x3cf42(%rip)        # 42088 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    5146:	68 11 00 00 00       	push   $0x11
    514b:	e9 d0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005150 <__cxa_free_exception@plt>:
    5150:	ff 25 3a cf 03 00    	jmp    *0x3cf3a(%rip)        # 42090 <__cxa_free_exception@CXXABI_1.3>
    5156:	68 12 00 00 00       	push   $0x12
    515b:	e9 c0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005160 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    5160:	ff 25 32 cf 03 00    	jmp    *0x3cf32(%rip)        # 42098 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    5166:	68 13 00 00 00       	push   $0x13
    516b:	e9 b0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005170 <glfwGetRequiredInstanceExtensions@plt>:
    5170:	ff 25 2a cf 03 00    	jmp    *0x3cf2a(%rip)        # 420a0 <glfwGetRequiredInstanceExtensions@Base>
    5176:	68 14 00 00 00       	push   $0x14
    517b:	e9 a0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005180 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    5180:	ff 25 22 cf 03 00    	jmp    *0x3cf22(%rip)        # 420a8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    5186:	68 15 00 00 00       	push   $0x15
    518b:	e9 90 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005190 <dlclose@plt>:
    5190:	ff 25 1a cf 03 00    	jmp    *0x3cf1a(%rip)        # 420b0 <dlclose@GLIBC_2.34>
    5196:	68 16 00 00 00       	push   $0x16
    519b:	e9 80 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051a0 <memcpy@plt>:
    51a0:	ff 25 12 cf 03 00    	jmp    *0x3cf12(%rip)        # 420b8 <memcpy@GLIBC_2.14>
    51a6:	68 17 00 00 00       	push   $0x17
    51ab:	e9 70 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051b0 <glfwWindowHint@plt>:
    51b0:	ff 25 0a cf 03 00    	jmp    *0x3cf0a(%rip)        # 420c0 <glfwWindowHint@Base>
    51b6:	68 18 00 00 00       	push   $0x18
    51bb:	e9 60 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051c0 <_ZNSt12system_errorD2Ev@plt>:
    51c0:	ff 25 02 cf 03 00    	jmp    *0x3cf02(%rip)        # 420c8 <_ZNSt12system_errorD2Ev@GLIBCXX_3.4.11>
    51c6:	68 19 00 00 00       	push   $0x19
    51cb:	e9 50 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051d0 <__cxa_atexit@plt>:
    51d0:	ff 25 fa ce 03 00    	jmp    *0x3cefa(%rip)        # 420d0 <__cxa_atexit@GLIBC_2.2.5>
    51d6:	68 1a 00 00 00       	push   $0x1a
    51db:	e9 40 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051e0 <dlsym@plt>:
    51e0:	ff 25 f2 ce 03 00    	jmp    *0x3cef2(%rip)        # 420d8 <dlsym@GLIBC_2.34>
    51e6:	68 1b 00 00 00       	push   $0x1b
    51eb:	e9 30 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051f0 <_ZdlPv@plt>:
    51f0:	ff 25 ea ce 03 00    	jmp    *0x3ceea(%rip)        # 420e0 <_ZdlPv@GLIBCXX_3.4>
    51f6:	68 1c 00 00 00       	push   $0x1c
    51fb:	e9 20 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005200 <glfwPollEvents@plt>:
    5200:	ff 25 e2 ce 03 00    	jmp    *0x3cee2(%rip)        # 420e8 <glfwPollEvents@Base>
    5206:	68 1d 00 00 00       	push   $0x1d
    520b:	e9 10 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    5210:	ff 25 da ce 03 00    	jmp    *0x3ceda(%rip)        # 420f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    5216:	68 1e 00 00 00       	push   $0x1e
    521b:	e9 00 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005220 <_Znwm@plt>:
    5220:	ff 25 d2 ce 03 00    	jmp    *0x3ced2(%rip)        # 420f8 <_Znwm@GLIBCXX_3.4>
    5226:	68 1f 00 00 00       	push   $0x1f
    522b:	e9 f0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005230 <_ZdlPvm@plt>:
    5230:	ff 25 ca ce 03 00    	jmp    *0x3ceca(%rip)        # 42100 <_ZdlPvm@CXXABI_1.3.9>
    5236:	68 20 00 00 00       	push   $0x20
    523b:	e9 e0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005240 <glfwTerminate@plt>:
    5240:	ff 25 c2 ce 03 00    	jmp    *0x3cec2(%rip)        # 42108 <glfwTerminate@Base>
    5246:	68 21 00 00 00       	push   $0x21
    524b:	e9 d0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005250 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    5250:	ff 25 ba ce 03 00    	jmp    *0x3ceba(%rip)        # 42110 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    5256:	68 22 00 00 00       	push   $0x22
    525b:	e9 c0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005260 <_ZNSolsEPFRSoS_E@plt>:
    5260:	ff 25 b2 ce 03 00    	jmp    *0x3ceb2(%rip)        # 42118 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    5266:	68 23 00 00 00       	push   $0x23
    526b:	e9 b0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005270 <_ZNSaIcED1Ev@plt>:
    5270:	ff 25 aa ce 03 00    	jmp    *0x3ceaa(%rip)        # 42120 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    5276:	68 24 00 00 00       	push   $0x24
    527b:	e9 a0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005280 <vkEnumerateInstanceLayerProperties@plt>:
    5280:	ff 25 a2 ce 03 00    	jmp    *0x3cea2(%rip)        # 42128 <vkEnumerateInstanceLayerProperties@Base>
    5286:	68 25 00 00 00       	push   $0x25
    528b:	e9 90 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005290 <glfwInit@plt>:
    5290:	ff 25 9a ce 03 00    	jmp    *0x3ce9a(%rip)        # 42130 <glfwInit@Base>
    5296:	68 26 00 00 00       	push   $0x26
    529b:	e9 80 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    52a0:	ff 25 92 ce 03 00    	jmp    *0x3ce92(%rip)        # 42138 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    52a6:	68 27 00 00 00       	push   $0x27
    52ab:	e9 70 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052b0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    52b0:	ff 25 8a ce 03 00    	jmp    *0x3ce8a(%rip)        # 42140 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    52b6:	68 28 00 00 00       	push   $0x28
    52bb:	e9 60 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052c0 <_ZdaPv@plt>:
    52c0:	ff 25 82 ce 03 00    	jmp    *0x3ce82(%rip)        # 42148 <_ZdaPv@GLIBCXX_3.4>
    52c6:	68 29 00 00 00       	push   $0x29
    52cb:	e9 50 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052d0 <_ZNSolsEj@plt>:
    52d0:	ff 25 7a ce 03 00    	jmp    *0x3ce7a(%rip)        # 42150 <_ZNSolsEj@GLIBCXX_3.4>
    52d6:	68 2a 00 00 00       	push   $0x2a
    52db:	e9 40 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052e0 <_ZNKSt13runtime_error4whatEv@plt>:
    52e0:	ff 25 72 ce 03 00    	jmp    *0x3ce72(%rip)        # 42158 <_ZNKSt13runtime_error4whatEv@GLIBCXX_3.4>
    52e6:	68 2b 00 00 00       	push   $0x2b
    52eb:	e9 30 fd ff ff       	jmp    5020 <_init+0x20>

00000000000052f0 <dlopen@plt>:
    52f0:	ff 25 6a ce 03 00    	jmp    *0x3ce6a(%rip)        # 42160 <dlopen@GLIBC_2.34>
    52f6:	68 2c 00 00 00       	push   $0x2c
    52fb:	e9 20 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005300 <_ZNSaIcEC2ERKS_@plt>:
    5300:	ff 25 62 ce 03 00    	jmp    *0x3ce62(%rip)        # 42168 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    5306:	68 2d 00 00 00       	push   $0x2d
    530b:	e9 10 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005310 <__cxa_rethrow@plt>:
    5310:	ff 25 5a ce 03 00    	jmp    *0x3ce5a(%rip)        # 42170 <__cxa_rethrow@CXXABI_1.3>
    5316:	68 2e 00 00 00       	push   $0x2e
    531b:	e9 00 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005320 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    5320:	ff 25 52 ce 03 00    	jmp    *0x3ce52(%rip)        # 42178 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    5326:	68 2f 00 00 00       	push   $0x2f
    532b:	e9 f0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005330 <_ZNSt8ios_base4InitC1Ev@plt>:
    5330:	ff 25 4a ce 03 00    	jmp    *0x3ce4a(%rip)        # 42180 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    5336:	68 30 00 00 00       	push   $0x30
    533b:	e9 e0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005340 <glfwCreateWindowSurface@plt>:
    5340:	ff 25 42 ce 03 00    	jmp    *0x3ce42(%rip)        # 42188 <glfwCreateWindowSurface@Base>
    5346:	68 31 00 00 00       	push   $0x31
    534b:	e9 d0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005350 <glfwCreateWindow@plt>:
    5350:	ff 25 3a ce 03 00    	jmp    *0x3ce3a(%rip)        # 42190 <glfwCreateWindow@Base>
    5356:	68 32 00 00 00       	push   $0x32
    535b:	e9 c0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005360 <memmove@plt>:
    5360:	ff 25 32 ce 03 00    	jmp    *0x3ce32(%rip)        # 42198 <memmove@GLIBC_2.2.5>
    5366:	68 33 00 00 00       	push   $0x33
    536b:	e9 b0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005370 <__cxa_end_catch@plt>:
    5370:	ff 25 2a ce 03 00    	jmp    *0x3ce2a(%rip)        # 421a0 <__cxa_end_catch@CXXABI_1.3>
    5376:	68 34 00 00 00       	push   $0x34
    537b:	e9 a0 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005380 <__cxa_throw@plt>:
    5380:	ff 25 22 ce 03 00    	jmp    *0x3ce22(%rip)        # 421a8 <__cxa_throw@CXXABI_1.3>
    5386:	68 35 00 00 00       	push   $0x35
    538b:	e9 90 fc ff ff       	jmp    5020 <_init+0x20>

0000000000005390 <_ZNSt3_V214error_categoryD2Ev@plt>:
    5390:	ff 25 1a ce 03 00    	jmp    *0x3ce1a(%rip)        # 421b0 <_ZNSt3_V214error_categoryD2Ev@GLIBCXX_3.4.21>
    5396:	68 36 00 00 00       	push   $0x36
    539b:	e9 80 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053a0 <_Unwind_Resume@plt>:
    53a0:	ff 25 12 ce 03 00    	jmp    *0x3ce12(%rip)        # 421b8 <_Unwind_Resume@GCC_3.0>
    53a6:	68 37 00 00 00       	push   $0x37
    53ab:	e9 70 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053b0 <_ZNSaIcEC1Ev@plt>:
    53b0:	ff 25 0a ce 03 00    	jmp    *0x3ce0a(%rip)        # 421c0 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    53b6:	68 38 00 00 00       	push   $0x38
    53bb:	e9 60 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053c0 <__cxa_guard_acquire@plt>:
    53c0:	ff 25 02 ce 03 00    	jmp    *0x3ce02(%rip)        # 421c8 <__cxa_guard_acquire@CXXABI_1.3>
    53c6:	68 39 00 00 00       	push   $0x39
    53cb:	e9 50 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053d0 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>:
    53d0:	ff 25 fa cd 03 00    	jmp    *0x3cdfa(%rip)        # 421d0 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@GLIBCXX_3.4.29>
    53d6:	68 3a 00 00 00       	push   $0x3a
    53db:	e9 40 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053e0 <_ZNSt9exceptionD2Ev@plt>:
    53e0:	ff 25 f2 cd 03 00    	jmp    *0x3cdf2(%rip)        # 421d8 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    53e6:	68 3b 00 00 00       	push   $0x3b
    53eb:	e9 30 fc ff ff       	jmp    5020 <_init+0x20>

00000000000053f0 <glfwWindowShouldClose@plt>:
    53f0:	ff 25 ea cd 03 00    	jmp    *0x3cdea(%rip)        # 421e0 <glfwWindowShouldClose@Base>
    53f6:	68 3c 00 00 00       	push   $0x3c
    53fb:	e9 20 fc ff ff       	jmp    5020 <_init+0x20>

Disassembly of section .plt.got:

0000000000005400 <__cxa_finalize@plt>:
    5400:	ff 25 92 cb 03 00    	jmp    *0x3cb92(%rip)        # 41f98 <__cxa_finalize@GLIBC_2.2.5>
    5406:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000005410 <_start>:
    5410:	31 ed                	xor    %ebp,%ebp
    5412:	49 89 d1             	mov    %rdx,%r9
    5415:	5e                   	pop    %rsi
    5416:	48 89 e2             	mov    %rsp,%rdx
    5419:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    541d:	50                   	push   %rax
    541e:	54                   	push   %rsp
    541f:	45 31 c0             	xor    %r8d,%r8d
    5422:	31 c9                	xor    %ecx,%ecx
    5424:	48 8d 3d c3 0b 00 00 	lea    0xbc3(%rip),%rdi        # 5fee <main>
    542b:	ff 15 77 cb 03 00    	call   *0x3cb77(%rip)        # 41fa8 <__libc_start_main@GLIBC_2.34>
    5431:	f4                   	hlt
    5432:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5439:	00 00 00 
    543c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005440 <deregister_tm_clones>:
    5440:	48 8d 3d e9 cd 03 00 	lea    0x3cde9(%rip),%rdi        # 42230 <__TMC_END__>
    5447:	48 8d 05 e2 cd 03 00 	lea    0x3cde2(%rip),%rax        # 42230 <__TMC_END__>
    544e:	48 39 f8             	cmp    %rdi,%rax
    5451:	74 15                	je     5468 <deregister_tm_clones+0x28>
    5453:	48 8b 05 5e cb 03 00 	mov    0x3cb5e(%rip),%rax        # 41fb8 <_ITM_deregisterTMCloneTable@Base>
    545a:	48 85 c0             	test   %rax,%rax
    545d:	74 09                	je     5468 <deregister_tm_clones+0x28>
    545f:	ff e0                	jmp    *%rax
    5461:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5468:	c3                   	ret
    5469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005470 <register_tm_clones>:
    5470:	48 8d 3d b9 cd 03 00 	lea    0x3cdb9(%rip),%rdi        # 42230 <__TMC_END__>
    5477:	48 8d 35 b2 cd 03 00 	lea    0x3cdb2(%rip),%rsi        # 42230 <__TMC_END__>
    547e:	48 29 fe             	sub    %rdi,%rsi
    5481:	48 89 f0             	mov    %rsi,%rax
    5484:	48 c1 ee 3f          	shr    $0x3f,%rsi
    5488:	48 c1 f8 03          	sar    $0x3,%rax
    548c:	48 01 c6             	add    %rax,%rsi
    548f:	48 d1 fe             	sar    %rsi
    5492:	74 14                	je     54a8 <register_tm_clones+0x38>
    5494:	48 8b 05 2d cb 03 00 	mov    0x3cb2d(%rip),%rax        # 41fc8 <_ITM_registerTMCloneTable@Base>
    549b:	48 85 c0             	test   %rax,%rax
    549e:	74 08                	je     54a8 <register_tm_clones+0x38>
    54a0:	ff e0                	jmp    *%rax
    54a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    54a8:	c3                   	ret
    54a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000054b0 <__do_global_dtors_aux>:
    54b0:	f3 0f 1e fa          	endbr64
    54b4:	80 3d 95 ce 03 00 00 	cmpb   $0x0,0x3ce95(%rip)        # 42350 <completed.0>
    54bb:	75 2b                	jne    54e8 <__do_global_dtors_aux+0x38>
    54bd:	55                   	push   %rbp
    54be:	48 83 3d d2 ca 03 00 	cmpq   $0x0,0x3cad2(%rip)        # 41f98 <__cxa_finalize@GLIBC_2.2.5>
    54c5:	00 
    54c6:	48 89 e5             	mov    %rsp,%rbp
    54c9:	74 0c                	je     54d7 <__do_global_dtors_aux+0x27>
    54cb:	48 8b 3d 26 cd 03 00 	mov    0x3cd26(%rip),%rdi        # 421f8 <__dso_handle>
    54d2:	e8 29 ff ff ff       	call   5400 <__cxa_finalize@plt>
    54d7:	e8 64 ff ff ff       	call   5440 <deregister_tm_clones>
    54dc:	c6 05 6d ce 03 00 01 	movb   $0x1,0x3ce6d(%rip)        # 42350 <completed.0>
    54e3:	5d                   	pop    %rbp
    54e4:	c3                   	ret
    54e5:	0f 1f 00             	nopl   (%rax)
    54e8:	c3                   	ret
    54e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000054f0 <frame_dummy>:
    54f0:	f3 0f 1e fa          	endbr64
    54f4:	e9 77 ff ff ff       	jmp    5470 <register_tm_clones>

00000000000054f9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
  };

  namespace
  {
    [[noreturn]] void throwResultException( Result result, char const * message )
    {
    54f9:	55                   	push   %rbp
    54fa:	48 89 e5             	mov    %rsp,%rbp
    54fd:	41 54                	push   %r12
    54ff:	53                   	push   %rbx
    5500:	48 83 ec 30          	sub    $0x30,%rsp
    5504:	89 7d cc             	mov    %edi,-0x34(%rbp)
    5507:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    550b:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    550f:	0f 89 28 07 00 00    	jns    5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5515:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    5519:	0f 8d 3d 01 00 00    	jge    565c <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    551f:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    5526:	0f 84 19 05 00 00    	je     5a45 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    552c:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    5533:	0f 8f 04 07 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5539:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    5540:	0f 84 37 05 00 00    	je     5a7d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    5546:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    554d:	0f 8f ea 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5553:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    555a:	0f 84 55 05 00 00    	je     5ab5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    5560:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    5567:	0f 8f d0 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    556d:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    5574:	0f 84 73 05 00 00    	je     5aed <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    557a:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    5581:	0f 8f b6 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5587:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    558e:	0f 84 91 05 00 00    	je     5b25 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    5594:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    559b:	0f 8f 9c 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55a1:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    55a8:	0f 84 af 05 00 00    	je     5b5d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    55ae:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    55b5:	0f 8f 82 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55bb:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    55c2:	0f 84 9d 03 00 00    	je     5965 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    55c8:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    55cf:	0f 8f 68 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55d5:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    55dc:	0f 84 bb 03 00 00    	je     599d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    55e2:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    55e9:	0f 8f 4e 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    55ef:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    55f6:	0f 84 99 05 00 00    	je     5b95 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    55fc:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    5603:	0f 8f 34 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5609:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    5610:	0f 84 bf 03 00 00    	je     59d5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    5616:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    561d:	0f 8f 1a 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5623:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    562a:	0f 84 9d 05 00 00    	je     5bcd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    5630:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    5637:	0f 8f 00 06 00 00    	jg     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    563d:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    5644:	0f 84 bb 05 00 00    	je     5c05 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    564a:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    5651:	0f 84 b6 03 00 00    	je     5a0d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    5657:	e9 e1 05 00 00       	jmp    5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    565c:	8b 45 cc             	mov    -0x34(%rbp),%eax
    565f:	83 c0 0d             	add    $0xd,%eax
    5662:	83 f8 0c             	cmp    $0xc,%eax
    5665:	0f 87 d2 05 00 00    	ja     5c3d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    566b:	89 c0                	mov    %eax,%eax
    566d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5674:	00 
    5675:	48 8d 05 64 43 02 00 	lea    0x24364(%rip),%rax        # 299e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    567c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    567f:	48 98                	cltq
    5681:	48 8d 15 58 43 02 00 	lea    0x24358(%rip),%rdx        # 299e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    5688:	48 01 d0             	add    %rdx,%rax
    568b:	ff e0                	jmp    *%rax
      {
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    568d:	bf 28 00 00 00       	mov    $0x28,%edi
    5692:	e8 39 fa ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5697:	48 89 c3             	mov    %rax,%rbx
    569a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    569e:	48 89 c6             	mov    %rax,%rsi
    56a1:	48 89 df             	mov    %rbx,%rdi
    56a4:	e8 1d 23 00 00       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    56a9:	48 8d 05 74 75 00 00 	lea    0x7574(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    56b0:	48 89 c2             	mov    %rax,%rdx
    56b3:	48 8d 05 2e c6 03 00 	lea    0x3c62e(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56ba:	48 89 c6             	mov    %rax,%rsi
    56bd:	48 89 df             	mov    %rbx,%rdi
    56c0:	e8 bb fc ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    56c5:	bf 28 00 00 00       	mov    $0x28,%edi
    56ca:	e8 01 fa ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    56cf:	48 89 c3             	mov    %rax,%rbx
    56d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56d6:	48 89 c6             	mov    %rax,%rsi
    56d9:	48 89 df             	mov    %rbx,%rdi
    56dc:	e8 b7 23 00 00       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    56e1:	48 8d 05 cc 74 00 00 	lea    0x74cc(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    56e8:	48 89 c2             	mov    %rax,%rdx
    56eb:	48 8d 05 de c5 03 00 	lea    0x3c5de(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56f2:	48 89 c6             	mov    %rax,%rsi
    56f5:	48 89 df             	mov    %rbx,%rdi
    56f8:	e8 83 fc ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    56fd:	bf 28 00 00 00       	mov    $0x28,%edi
    5702:	e8 c9 f9 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5707:	48 89 c3             	mov    %rax,%rbx
    570a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    570e:	48 89 c6             	mov    %rax,%rsi
    5711:	48 89 df             	mov    %rbx,%rdi
    5714:	e8 51 24 00 00       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
    5719:	48 8d 05 24 74 00 00 	lea    0x7424(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
    5720:	48 89 c2             	mov    %rax,%rdx
    5723:	48 8d 05 8e c5 03 00 	lea    0x3c58e(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    572a:	48 89 c6             	mov    %rax,%rsi
    572d:	48 89 df             	mov    %rbx,%rdi
    5730:	e8 4b fc ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    5735:	bf 28 00 00 00       	mov    $0x28,%edi
    573a:	e8 91 f9 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    573f:	48 89 c3             	mov    %rax,%rbx
    5742:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5746:	48 89 c6             	mov    %rax,%rsi
    5749:	48 89 df             	mov    %rbx,%rdi
    574c:	e8 eb 24 00 00       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
    5751:	48 8d 05 7c 73 00 00 	lea    0x737c(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
    5758:	48 89 c2             	mov    %rax,%rdx
    575b:	48 8d 05 3e c5 03 00 	lea    0x3c53e(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5762:	48 89 c6             	mov    %rax,%rsi
    5765:	48 89 df             	mov    %rbx,%rdi
    5768:	e8 13 fc ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    576d:	bf 28 00 00 00       	mov    $0x28,%edi
    5772:	e8 59 f9 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5777:	48 89 c3             	mov    %rax,%rbx
    577a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    577e:	48 89 c6             	mov    %rax,%rsi
    5781:	48 89 df             	mov    %rbx,%rdi
    5784:	e8 85 25 00 00       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    5789:	48 8d 05 d4 72 00 00 	lea    0x72d4(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    5790:	48 89 c2             	mov    %rax,%rdx
    5793:	48 8d 05 ee c4 03 00 	lea    0x3c4ee(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    579a:	48 89 c6             	mov    %rax,%rsi
    579d:	48 89 df             	mov    %rbx,%rdi
    57a0:	e8 db fb ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    57a5:	bf 28 00 00 00       	mov    $0x28,%edi
    57aa:	e8 21 f9 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    57af:	48 89 c3             	mov    %rax,%rbx
    57b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57b6:	48 89 c6             	mov    %rax,%rsi
    57b9:	48 89 df             	mov    %rbx,%rdi
    57bc:	e8 1f 26 00 00       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
    57c1:	48 8d 05 2c 72 00 00 	lea    0x722c(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
    57c8:	48 89 c2             	mov    %rax,%rdx
    57cb:	48 8d 05 9e c4 03 00 	lea    0x3c49e(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    57d2:	48 89 c6             	mov    %rax,%rsi
    57d5:	48 89 df             	mov    %rbx,%rdi
    57d8:	e8 a3 fb ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    57dd:	bf 28 00 00 00       	mov    $0x28,%edi
    57e2:	e8 e9 f8 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    57e7:	48 89 c3             	mov    %rax,%rbx
    57ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57ee:	48 89 c6             	mov    %rax,%rsi
    57f1:	48 89 df             	mov    %rbx,%rdi
    57f4:	e8 b9 26 00 00       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    57f9:	48 8d 05 84 71 00 00 	lea    0x7184(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    5800:	48 89 c2             	mov    %rax,%rdx
    5803:	48 8d 05 4e c4 03 00 	lea    0x3c44e(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    580a:	48 89 c6             	mov    %rax,%rsi
    580d:	48 89 df             	mov    %rbx,%rdi
    5810:	e8 6b fb ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5815:	bf 28 00 00 00       	mov    $0x28,%edi
    581a:	e8 b1 f8 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    581f:	48 89 c3             	mov    %rax,%rbx
    5822:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5826:	48 89 c6             	mov    %rax,%rsi
    5829:	48 89 df             	mov    %rbx,%rdi
    582c:	e8 53 27 00 00       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    5831:	48 8d 05 dc 70 00 00 	lea    0x70dc(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    5838:	48 89 c2             	mov    %rax,%rdx
    583b:	48 8d 05 fe c3 03 00 	lea    0x3c3fe(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5842:	48 89 c6             	mov    %rax,%rsi
    5845:	48 89 df             	mov    %rbx,%rdi
    5848:	e8 33 fb ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    584d:	bf 28 00 00 00       	mov    $0x28,%edi
    5852:	e8 79 f8 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5857:	48 89 c3             	mov    %rax,%rbx
    585a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    585e:	48 89 c6             	mov    %rax,%rsi
    5861:	48 89 df             	mov    %rbx,%rdi
    5864:	e8 ed 27 00 00       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    5869:	48 8d 05 34 70 00 00 	lea    0x7034(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    5870:	48 89 c2             	mov    %rax,%rdx
    5873:	48 8d 05 ae c3 03 00 	lea    0x3c3ae(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    587a:	48 89 c6             	mov    %rax,%rsi
    587d:	48 89 df             	mov    %rbx,%rdi
    5880:	e8 fb fa ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    5885:	bf 28 00 00 00       	mov    $0x28,%edi
    588a:	e8 41 f8 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    588f:	48 89 c3             	mov    %rax,%rbx
    5892:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5896:	48 89 c6             	mov    %rax,%rsi
    5899:	48 89 df             	mov    %rbx,%rdi
    589c:	e8 87 28 00 00       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    58a1:	48 8d 05 8c 6f 00 00 	lea    0x6f8c(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
    58a8:	48 89 c2             	mov    %rax,%rdx
    58ab:	48 8d 05 5e c3 03 00 	lea    0x3c35e(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58b2:	48 89 c6             	mov    %rax,%rsi
    58b5:	48 89 df             	mov    %rbx,%rdi
    58b8:	e8 c3 fa ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    58bd:	bf 28 00 00 00       	mov    $0x28,%edi
    58c2:	e8 09 f8 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    58c7:	48 89 c3             	mov    %rax,%rbx
    58ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58ce:	48 89 c6             	mov    %rax,%rsi
    58d1:	48 89 df             	mov    %rbx,%rdi
    58d4:	e8 21 29 00 00       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    58d9:	48 8d 05 e4 6e 00 00 	lea    0x6ee4(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    58e0:	48 89 c2             	mov    %rax,%rdx
    58e3:	48 8d 05 0e c3 03 00 	lea    0x3c30e(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58ea:	48 89 c6             	mov    %rax,%rsi
    58ed:	48 89 df             	mov    %rbx,%rdi
    58f0:	e8 8b fa ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    58f5:	bf 28 00 00 00       	mov    $0x28,%edi
    58fa:	e8 d1 f7 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    58ff:	48 89 c3             	mov    %rax,%rbx
    5902:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5906:	48 89 c6             	mov    %rax,%rsi
    5909:	48 89 df             	mov    %rbx,%rdi
    590c:	e8 bb 29 00 00       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
    5911:	48 8d 05 3c 6e 00 00 	lea    0x6e3c(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
    5918:	48 89 c2             	mov    %rax,%rdx
    591b:	48 8d 05 be c2 03 00 	lea    0x3c2be(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5922:	48 89 c6             	mov    %rax,%rsi
    5925:	48 89 df             	mov    %rbx,%rdi
    5928:	e8 53 fa ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    592d:	bf 28 00 00 00       	mov    $0x28,%edi
    5932:	e8 99 f7 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5937:	48 89 c3             	mov    %rax,%rbx
    593a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    593e:	48 89 c6             	mov    %rax,%rsi
    5941:	48 89 df             	mov    %rbx,%rdi
    5944:	e8 55 2a 00 00       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
    5949:	48 8d 05 94 6d 00 00 	lea    0x6d94(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
    5950:	48 89 c2             	mov    %rax,%rdx
    5953:	48 8d 05 6e c2 03 00 	lea    0x3c26e(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    595a:	48 89 c6             	mov    %rax,%rsi
    595d:	48 89 df             	mov    %rbx,%rdi
    5960:	e8 1b fa ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    5965:	bf 28 00 00 00       	mov    $0x28,%edi
    596a:	e8 61 f7 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    596f:	48 89 c3             	mov    %rax,%rbx
    5972:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5976:	48 89 c6             	mov    %rax,%rsi
    5979:	48 89 df             	mov    %rbx,%rdi
    597c:	e8 ef 2a 00 00       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    5981:	48 8d 05 ec 6c 00 00 	lea    0x6cec(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    5988:	48 89 c2             	mov    %rax,%rdx
    598b:	48 8d 05 1e c2 03 00 	lea    0x3c21e(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5992:	48 89 c6             	mov    %rax,%rsi
    5995:	48 89 df             	mov    %rbx,%rdi
    5998:	e8 e3 f9 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    599d:	bf 28 00 00 00       	mov    $0x28,%edi
    59a2:	e8 29 f7 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    59a7:	48 89 c3             	mov    %rax,%rbx
    59aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59ae:	48 89 c6             	mov    %rax,%rsi
    59b1:	48 89 df             	mov    %rbx,%rdi
    59b4:	e8 89 2b 00 00       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    59b9:	48 8d 05 44 6c 00 00 	lea    0x6c44(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    59c0:	48 89 c2             	mov    %rax,%rdx
    59c3:	48 8d 05 ce c1 03 00 	lea    0x3c1ce(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59ca:	48 89 c6             	mov    %rax,%rsi
    59cd:	48 89 df             	mov    %rbx,%rdi
    59d0:	e8 ab f9 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    59d5:	bf 28 00 00 00       	mov    $0x28,%edi
    59da:	e8 f1 f6 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    59df:	48 89 c3             	mov    %rax,%rbx
    59e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59e6:	48 89 c6             	mov    %rax,%rsi
    59e9:	48 89 df             	mov    %rbx,%rdi
    59ec:	e8 23 2c 00 00       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
    59f1:	48 8d 05 9c 6b 00 00 	lea    0x6b9c(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
    59f8:	48 89 c2             	mov    %rax,%rdx
    59fb:	48 8d 05 7e c1 03 00 	lea    0x3c17e(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a02:	48 89 c6             	mov    %rax,%rsi
    5a05:	48 89 df             	mov    %rbx,%rdi
    5a08:	e8 73 f9 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    5a0d:	bf 28 00 00 00       	mov    $0x28,%edi
    5a12:	e8 b9 f6 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5a17:	48 89 c3             	mov    %rax,%rbx
    5a1a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a1e:	48 89 c6             	mov    %rax,%rsi
    5a21:	48 89 df             	mov    %rbx,%rdi
    5a24:	e8 bd 2c 00 00       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    5a29:	48 8d 05 f4 6a 00 00 	lea    0x6af4(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    5a30:	48 89 c2             	mov    %rax,%rdx
    5a33:	48 8d 05 2e c1 03 00 	lea    0x3c12e(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a3a:	48 89 c6             	mov    %rax,%rsi
    5a3d:	48 89 df             	mov    %rbx,%rdi
    5a40:	e8 3b f9 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    5a45:	bf 28 00 00 00       	mov    $0x28,%edi
    5a4a:	e8 81 f6 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5a4f:	48 89 c3             	mov    %rax,%rbx
    5a52:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a56:	48 89 c6             	mov    %rax,%rsi
    5a59:	48 89 df             	mov    %rbx,%rdi
    5a5c:	e8 57 2d 00 00       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    5a61:	48 8d 05 4c 6a 00 00 	lea    0x6a4c(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    5a68:	48 89 c2             	mov    %rax,%rdx
    5a6b:	48 8d 05 de c0 03 00 	lea    0x3c0de(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a72:	48 89 c6             	mov    %rax,%rsi
    5a75:	48 89 df             	mov    %rbx,%rdi
    5a78:	e8 03 f9 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    5a7d:	bf 28 00 00 00       	mov    $0x28,%edi
    5a82:	e8 49 f6 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5a87:	48 89 c3             	mov    %rax,%rbx
    5a8a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a8e:	48 89 c6             	mov    %rax,%rsi
    5a91:	48 89 df             	mov    %rbx,%rdi
    5a94:	e8 f1 2d 00 00       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    5a99:	48 8d 05 a4 69 00 00 	lea    0x69a4(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    5aa0:	48 89 c2             	mov    %rax,%rdx
    5aa3:	48 8d 05 8e c0 03 00 	lea    0x3c08e(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5aaa:	48 89 c6             	mov    %rax,%rsi
    5aad:	48 89 df             	mov    %rbx,%rdi
    5ab0:	e8 cb f8 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5ab5:	bf 28 00 00 00       	mov    $0x28,%edi
    5aba:	e8 11 f6 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5abf:	48 89 c3             	mov    %rax,%rbx
    5ac2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ac6:	48 89 c6             	mov    %rax,%rsi
    5ac9:	48 89 df             	mov    %rbx,%rdi
    5acc:	e8 8b 2e 00 00       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    5ad1:	48 8d 05 fc 68 00 00 	lea    0x68fc(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    5ad8:	48 89 c2             	mov    %rax,%rdx
    5adb:	48 8d 05 3e c0 03 00 	lea    0x3c03e(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5ae2:	48 89 c6             	mov    %rax,%rsi
    5ae5:	48 89 df             	mov    %rbx,%rdi
    5ae8:	e8 93 f8 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5aed:	bf 28 00 00 00       	mov    $0x28,%edi
    5af2:	e8 d9 f5 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5af7:	48 89 c3             	mov    %rax,%rbx
    5afa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5afe:	48 89 c6             	mov    %rax,%rsi
    5b01:	48 89 df             	mov    %rbx,%rdi
    5b04:	e8 25 2f 00 00       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    5b09:	48 8d 05 54 68 00 00 	lea    0x6854(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    5b10:	48 89 c2             	mov    %rax,%rdx
    5b13:	48 8d 05 ee bf 03 00 	lea    0x3bfee(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b1a:	48 89 c6             	mov    %rax,%rsi
    5b1d:	48 89 df             	mov    %rbx,%rdi
    5b20:	e8 5b f8 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5b25:	bf 28 00 00 00       	mov    $0x28,%edi
    5b2a:	e8 a1 f5 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5b2f:	48 89 c3             	mov    %rax,%rbx
    5b32:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b36:	48 89 c6             	mov    %rax,%rsi
    5b39:	48 89 df             	mov    %rbx,%rdi
    5b3c:	e8 bf 2f 00 00       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    5b41:	48 8d 05 ac 67 00 00 	lea    0x67ac(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    5b48:	48 89 c2             	mov    %rax,%rdx
    5b4b:	48 8d 05 9e bf 03 00 	lea    0x3bf9e(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b52:	48 89 c6             	mov    %rax,%rsi
    5b55:	48 89 df             	mov    %rbx,%rdi
    5b58:	e8 23 f8 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5b5d:	bf 28 00 00 00       	mov    $0x28,%edi
    5b62:	e8 69 f5 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5b67:	48 89 c3             	mov    %rax,%rbx
    5b6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5b6e:	48 89 c6             	mov    %rax,%rsi
    5b71:	48 89 df             	mov    %rbx,%rdi
    5b74:	e8 59 30 00 00       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    5b79:	48 8d 05 04 67 00 00 	lea    0x6704(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    5b80:	48 89 c2             	mov    %rax,%rdx
    5b83:	48 8d 05 4e bf 03 00 	lea    0x3bf4e(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5b8a:	48 89 c6             	mov    %rax,%rsi
    5b8d:	48 89 df             	mov    %rbx,%rdi
    5b90:	e8 eb f7 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorVideoProfileCodecNotSupportedKHR: throw VideoProfileCodecNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
#  if defined( VK_ENABLE_BETA_EXTENSIONS )
        case Result::eErrorVideoStdVersionNotSupportedKHR: throw VideoStdVersionNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5b95:	bf 28 00 00 00       	mov    $0x28,%edi
    5b9a:	e8 31 f5 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5b9f:	48 89 c3             	mov    %rax,%rbx
    5ba2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ba6:	48 89 c6             	mov    %rax,%rsi
    5ba9:	48 89 df             	mov    %rbx,%rdi
    5bac:	e8 f3 30 00 00       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    5bb1:	48 8d 05 5c 66 00 00 	lea    0x665c(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    5bb8:	48 89 c2             	mov    %rax,%rdx
    5bbb:	48 8d 05 fe be 03 00 	lea    0x3befe(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5bc2:	48 89 c6             	mov    %rax,%rsi
    5bc5:	48 89 df             	mov    %rbx,%rdi
    5bc8:	e8 b3 f7 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5bcd:	bf 28 00 00 00       	mov    $0x28,%edi
    5bd2:	e8 f9 f4 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5bd7:	48 89 c3             	mov    %rax,%rbx
    5bda:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5bde:	48 89 c6             	mov    %rax,%rsi
    5be1:	48 89 df             	mov    %rbx,%rdi
    5be4:	e8 8d 31 00 00       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    5be9:	48 8d 05 b4 65 00 00 	lea    0x65b4(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    5bf0:	48 89 c2             	mov    %rax,%rdx
    5bf3:	48 8d 05 ae be 03 00 	lea    0x3beae(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5bfa:	48 89 c6             	mov    %rax,%rsi
    5bfd:	48 89 df             	mov    %rbx,%rdi
    5c00:	e8 7b f7 ff ff       	call   5380 <__cxa_throw@plt>
#  if defined( VK_USE_PLATFORM_WIN32_KHR )
        case Result::eErrorFullScreenExclusiveModeLostEXT: throw FullScreenExclusiveModeLostEXTError( message );
#  endif /*VK_USE_PLATFORM_WIN32_KHR*/
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5c05:	bf 28 00 00 00       	mov    $0x28,%edi
    5c0a:	e8 c1 f4 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5c0f:	48 89 c3             	mov    %rax,%rbx
    5c12:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5c16:	48 89 c6             	mov    %rax,%rsi
    5c19:	48 89 df             	mov    %rbx,%rdi
    5c1c:	e8 27 32 00 00       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    5c21:	48 8d 05 0c 65 00 00 	lea    0x650c(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    5c28:	48 89 c2             	mov    %rax,%rdx
    5c2b:	48 8d 05 5e be 03 00 	lea    0x3be5e(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5c32:	48 89 c6             	mov    %rax,%rsi
    5c35:	48 89 df             	mov    %rbx,%rdi
    5c38:	e8 43 f7 ff ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    5c3d:	bf 28 00 00 00       	mov    $0x28,%edi
    5c42:	e8 89 f4 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    5c47:	48 89 c3             	mov    %rax,%rbx
    5c4a:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5c4d:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    5c50:	0f b6 05 01 c7 03 00 	movzbl 0x3c701(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    5c57:	84 c0                	test   %al,%al
    5c59:	0f 94 c0             	sete   %al
    5c5c:	84 c0                	test   %al,%al
    5c5e:	74 4a                	je     5caa <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5c60:	48 8d 05 f1 c6 03 00 	lea    0x3c6f1(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    5c67:	48 89 c7             	mov    %rax,%rdi
    5c6a:	e8 51 f7 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    5c6f:	85 c0                	test   %eax,%eax
    5c71:	0f 95 c0             	setne  %al
    5c74:	84 c0                	test   %al,%al
    5c76:	74 32                	je     5caa <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5c78:	48 8d 05 79 c5 03 00 	lea    0x3c579(%rip),%rax        # 421f8 <__dso_handle>
    5c7f:	48 89 c2             	mov    %rax,%rdx
    5c82:	48 8d 05 77 c5 03 00 	lea    0x3c577(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    5c89:	48 89 c6             	mov    %rax,%rsi
    5c8c:	48 8d 05 01 70 00 00 	lea    0x7001(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    5c93:	48 89 c7             	mov    %rax,%rdi
    5c96:	e8 35 f5 ff ff       	call   51d0 <__cxa_atexit@plt>
    5c9b:	48 8d 05 b6 c6 03 00 	lea    0x3c6b6(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    5ca2:	48 89 c7             	mov    %rax,%rdi
    5ca5:	e8 56 f4 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    5caa:	48 8d 15 4f c5 03 00 	lea    0x3c54f(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    5cb1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    5cb4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5cb8:	89 ce                	mov    %ecx,%esi
    5cba:	48 89 c7             	mov    %rax,%rdi
    5cbd:	e8 46 06 00 00       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    5cc2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5cc6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    5cca:	48 89 c6             	mov    %rax,%rsi
    5ccd:	48 89 d7             	mov    %rdx,%rdi
    5cd0:	89 f1                	mov    %esi,%ecx
    5cd2:	48 89 d0             	mov    %rdx,%rax
    5cd5:	89 ce                	mov    %ecx,%esi
    5cd7:	48 89 c2             	mov    %rax,%rdx
    5cda:	48 89 df             	mov    %rbx,%rdi
    5cdd:	e8 2e 1b 00 00       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
    5ce2:	48 8d 05 5d 1c 00 00 	lea    0x1c5d(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
    5ce9:	48 89 c2             	mov    %rax,%rdx
    5cec:	48 8d 05 0d c0 03 00 	lea    0x3c00d(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    5cf3:	48 89 c6             	mov    %rax,%rsi
    5cf6:	48 89 df             	mov    %rbx,%rdi
    5cf9:	e8 82 f6 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    5cfe:	49 89 c4             	mov    %rax,%r12
    5d01:	48 89 df             	mov    %rbx,%rdi
    5d04:	e8 47 f4 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d09:	4c 89 e0             	mov    %r12,%rax
    5d0c:	48 89 c7             	mov    %rax,%rdi
    5d0f:	e8 8c f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5d14:	49 89 c4             	mov    %rax,%r12
    5d17:	48 89 df             	mov    %rbx,%rdi
    5d1a:	e8 31 f4 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d1f:	4c 89 e0             	mov    %r12,%rax
    5d22:	48 89 c7             	mov    %rax,%rdi
    5d25:	e8 76 f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    5d2a:	49 89 c4             	mov    %rax,%r12
    5d2d:	48 89 df             	mov    %rbx,%rdi
    5d30:	e8 1b f4 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d35:	4c 89 e0             	mov    %r12,%rax
    5d38:	48 89 c7             	mov    %rax,%rdi
    5d3b:	e8 60 f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    5d40:	49 89 c4             	mov    %rax,%r12
    5d43:	48 89 df             	mov    %rbx,%rdi
    5d46:	e8 05 f4 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d4b:	4c 89 e0             	mov    %r12,%rax
    5d4e:	48 89 c7             	mov    %rax,%rdi
    5d51:	e8 4a f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    5d56:	49 89 c4             	mov    %rax,%r12
    5d59:	48 89 df             	mov    %rbx,%rdi
    5d5c:	e8 ef f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d61:	4c 89 e0             	mov    %r12,%rax
    5d64:	48 89 c7             	mov    %rax,%rdi
    5d67:	e8 34 f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    5d6c:	49 89 c4             	mov    %rax,%r12
    5d6f:	48 89 df             	mov    %rbx,%rdi
    5d72:	e8 d9 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d77:	4c 89 e0             	mov    %r12,%rax
    5d7a:	48 89 c7             	mov    %rax,%rdi
    5d7d:	e8 1e f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    5d82:	49 89 c4             	mov    %rax,%r12
    5d85:	48 89 df             	mov    %rbx,%rdi
    5d88:	e8 c3 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5d8d:	4c 89 e0             	mov    %r12,%rax
    5d90:	48 89 c7             	mov    %rax,%rdi
    5d93:	e8 08 f6 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5d98:	49 89 c4             	mov    %rax,%r12
    5d9b:	48 89 df             	mov    %rbx,%rdi
    5d9e:	e8 ad f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5da3:	4c 89 e0             	mov    %r12,%rax
    5da6:	48 89 c7             	mov    %rax,%rdi
    5da9:	e8 f2 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    5dae:	49 89 c4             	mov    %rax,%r12
    5db1:	48 89 df             	mov    %rbx,%rdi
    5db4:	e8 97 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5db9:	4c 89 e0             	mov    %r12,%rax
    5dbc:	48 89 c7             	mov    %rax,%rdi
    5dbf:	e8 dc f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    5dc4:	49 89 c4             	mov    %rax,%r12
    5dc7:	48 89 df             	mov    %rbx,%rdi
    5dca:	e8 81 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5dcf:	4c 89 e0             	mov    %r12,%rax
    5dd2:	48 89 c7             	mov    %rax,%rdi
    5dd5:	e8 c6 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    5dda:	49 89 c4             	mov    %rax,%r12
    5ddd:	48 89 df             	mov    %rbx,%rdi
    5de0:	e8 6b f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5de5:	4c 89 e0             	mov    %r12,%rax
    5de8:	48 89 c7             	mov    %rax,%rdi
    5deb:	e8 b0 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5df0:	49 89 c4             	mov    %rax,%r12
    5df3:	48 89 df             	mov    %rbx,%rdi
    5df6:	e8 55 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5dfb:	4c 89 e0             	mov    %r12,%rax
    5dfe:	48 89 c7             	mov    %rax,%rdi
    5e01:	e8 9a f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    5e06:	49 89 c4             	mov    %rax,%r12
    5e09:	48 89 df             	mov    %rbx,%rdi
    5e0c:	e8 3f f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e11:	4c 89 e0             	mov    %r12,%rax
    5e14:	48 89 c7             	mov    %rax,%rdi
    5e17:	e8 84 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    5e1c:	49 89 c4             	mov    %rax,%r12
    5e1f:	48 89 df             	mov    %rbx,%rdi
    5e22:	e8 29 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e27:	4c 89 e0             	mov    %r12,%rax
    5e2a:	48 89 c7             	mov    %rax,%rdi
    5e2d:	e8 6e f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    5e32:	49 89 c4             	mov    %rax,%r12
    5e35:	48 89 df             	mov    %rbx,%rdi
    5e38:	e8 13 f3 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e3d:	4c 89 e0             	mov    %r12,%rax
    5e40:	48 89 c7             	mov    %rax,%rdi
    5e43:	e8 58 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5e48:	49 89 c4             	mov    %rax,%r12
    5e4b:	48 89 df             	mov    %rbx,%rdi
    5e4e:	e8 fd f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e53:	4c 89 e0             	mov    %r12,%rax
    5e56:	48 89 c7             	mov    %rax,%rdi
    5e59:	e8 42 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    5e5e:	49 89 c4             	mov    %rax,%r12
    5e61:	48 89 df             	mov    %rbx,%rdi
    5e64:	e8 e7 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e69:	4c 89 e0             	mov    %r12,%rax
    5e6c:	48 89 c7             	mov    %rax,%rdi
    5e6f:	e8 2c f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    5e74:	49 89 c4             	mov    %rax,%r12
    5e77:	48 89 df             	mov    %rbx,%rdi
    5e7a:	e8 d1 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e7f:	4c 89 e0             	mov    %r12,%rax
    5e82:	48 89 c7             	mov    %rax,%rdi
    5e85:	e8 16 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    5e8a:	49 89 c4             	mov    %rax,%r12
    5e8d:	48 89 df             	mov    %rbx,%rdi
    5e90:	e8 bb f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5e95:	4c 89 e0             	mov    %r12,%rax
    5e98:	48 89 c7             	mov    %rax,%rdi
    5e9b:	e8 00 f5 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5ea0:	49 89 c4             	mov    %rax,%r12
    5ea3:	48 89 df             	mov    %rbx,%rdi
    5ea6:	e8 a5 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5eab:	4c 89 e0             	mov    %r12,%rax
    5eae:	48 89 c7             	mov    %rax,%rdi
    5eb1:	e8 ea f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5eb6:	49 89 c4             	mov    %rax,%r12
    5eb9:	48 89 df             	mov    %rbx,%rdi
    5ebc:	e8 8f f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5ec1:	4c 89 e0             	mov    %r12,%rax
    5ec4:	48 89 c7             	mov    %rax,%rdi
    5ec7:	e8 d4 f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5ecc:	49 89 c4             	mov    %rax,%r12
    5ecf:	48 89 df             	mov    %rbx,%rdi
    5ed2:	e8 79 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5ed7:	4c 89 e0             	mov    %r12,%rax
    5eda:	48 89 c7             	mov    %rax,%rdi
    5edd:	e8 be f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5ee2:	49 89 c4             	mov    %rax,%r12
    5ee5:	48 89 df             	mov    %rbx,%rdi
    5ee8:	e8 63 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5eed:	4c 89 e0             	mov    %r12,%rax
    5ef0:	48 89 c7             	mov    %rax,%rdi
    5ef3:	e8 a8 f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5ef8:	49 89 c4             	mov    %rax,%r12
    5efb:	48 89 df             	mov    %rbx,%rdi
    5efe:	e8 4d f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5f03:	4c 89 e0             	mov    %r12,%rax
    5f06:	48 89 c7             	mov    %rax,%rdi
    5f09:	e8 92 f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5f0e:	49 89 c4             	mov    %rax,%r12
    5f11:	48 89 df             	mov    %rbx,%rdi
    5f14:	e8 37 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5f19:	4c 89 e0             	mov    %r12,%rax
    5f1c:	48 89 c7             	mov    %rax,%rdi
    5f1f:	e8 7c f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5f24:	49 89 c4             	mov    %rax,%r12
    5f27:	48 89 df             	mov    %rbx,%rdi
    5f2a:	e8 21 f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5f2f:	4c 89 e0             	mov    %r12,%rax
    5f32:	48 89 c7             	mov    %rax,%rdi
    5f35:	e8 66 f4 ff ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    5f3a:	49 89 c4             	mov    %rax,%r12
    5f3d:	48 89 df             	mov    %rbx,%rdi
    5f40:	e8 0b f2 ff ff       	call   5150 <__cxa_free_exception@plt>
    5f45:	4c 89 e0             	mov    %r12,%rax
    5f48:	48 89 c7             	mov    %rax,%rdi
    5f4b:	e8 50 f4 ff ff       	call   53a0 <_Unwind_Resume@plt>

0000000000005f50 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>

int protected_main() {
    5f50:	55                   	push   %rbp
    5f51:	48 89 e5             	mov    %rsp,%rbp
    5f54:	41 55                	push   %r13
    5f56:	41 54                	push   %r12
    5f58:	53                   	push   %rbx
    5f59:	48 83 ec 18          	sub    $0x18,%rsp
  auto app = new rtvc::VulkanApp{};
    5f5d:	bf 30 01 00 00       	mov    $0x130,%edi
    5f62:	e8 b9 f2 ff ff       	call   5220 <_Znwm@plt>
    5f67:	48 89 c3             	mov    %rax,%rbx
    5f6a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    5f70:	48 89 de             	mov    %rbx,%rsi
    5f73:	b8 00 00 00 00       	mov    $0x0,%eax
    5f78:	ba 26 00 00 00       	mov    $0x26,%edx
    5f7d:	48 89 f7             	mov    %rsi,%rdi
    5f80:	48 89 d1             	mov    %rdx,%rcx
    5f83:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5f86:	48 89 df             	mov    %rbx,%rdi
    5f89:	e8 ee 3e 00 00       	call   9e7c <_ZN4rtvc9VulkanAppC1Ev>
    5f8e:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
  app->render();
    5f92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f96:	48 89 c7             	mov    %rax,%rdi
    5f99:	e8 a6 3e 00 00       	call   9e44 <_ZN4rtvc9VulkanApp6renderEv>
  delete app;
    5f9e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5fa2:	48 85 db             	test   %rbx,%rbx
    5fa5:	74 15                	je     5fbc <_Z14protected_mainv+0x6c>
    5fa7:	48 89 df             	mov    %rbx,%rdi
    5faa:	e8 fd 40 00 00       	call   a0ac <_ZN4rtvc9VulkanAppD1Ev>
    5faf:	be 30 01 00 00       	mov    $0x130,%esi
    5fb4:	48 89 df             	mov    %rbx,%rdi
    5fb7:	e8 74 f2 ff ff       	call   5230 <_ZdlPvm@plt>
  return EXIT_SUCCESS;
    5fbc:	b8 00 00 00 00       	mov    $0x0,%eax
    5fc1:	eb 20                	jmp    5fe3 <_Z14protected_mainv+0x93>
  auto app = new rtvc::VulkanApp{};
    5fc3:	49 89 c4             	mov    %rax,%r12
    5fc6:	45 84 ed             	test   %r13b,%r13b
    5fc9:	74 0d                	je     5fd8 <_Z14protected_mainv+0x88>
    5fcb:	be 30 01 00 00       	mov    $0x130,%esi
    5fd0:	48 89 df             	mov    %rbx,%rdi
    5fd3:	e8 58 f2 ff ff       	call   5230 <_ZdlPvm@plt>
    5fd8:	4c 89 e0             	mov    %r12,%rax
    5fdb:	48 89 c7             	mov    %rax,%rdi
    5fde:	e8 bd f3 ff ff       	call   53a0 <_Unwind_Resume@plt>
}
    5fe3:	48 83 c4 18          	add    $0x18,%rsp
    5fe7:	5b                   	pop    %rbx
    5fe8:	41 5c                	pop    %r12
    5fea:	41 5d                	pop    %r13
    5fec:	5d                   	pop    %rbp
    5fed:	c3                   	ret

0000000000005fee <main>:

int main() {
    5fee:	55                   	push   %rbp
    5fef:	48 89 e5             	mov    %rsp,%rbp
    5ff2:	53                   	push   %rbx
    5ff3:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    5ff7:	e8 54 ff ff ff       	call   5f50 <_Z14protected_mainv>
    5ffc:	e9 30 01 00 00       	jmp    6131 <main+0x143>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    6001:	b8 01 00 00 00       	mov    $0x1,%eax
    6006:	e9 26 01 00 00       	jmp    6131 <main+0x143>
  } catch (vk::SystemError &e) {
    600b:	48 83 fa 01          	cmp    $0x1,%rdx
    600f:	74 0b                	je     601c <main+0x2e>
    6011:	48 83 fa 02          	cmp    $0x2,%rdx
    6015:	74 53                	je     606a <main+0x7c>
    6017:	e9 9f 00 00 00       	jmp    60bb <main+0xcd>
    601c:	48 89 c7             	mov    %rax,%rdi
    601f:	e8 7c f0 ff ff       	call   50a0 <__cxa_begin_catch@plt>
    6024:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    std::cerr << e.what() << std::endl;
    6028:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    602c:	48 8b 00             	mov    (%rax),%rax
    602f:	48 83 c0 10          	add    $0x10,%rax
    6033:	48 8b 10             	mov    (%rax),%rdx
    6036:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    603a:	48 89 c7             	mov    %rax,%rdi
    603d:	ff d2                	call   *%rdx
    603f:	48 89 c6             	mov    %rax,%rsi
    6042:	48 8d 05 f7 c1 03 00 	lea    0x3c1f7(%rip),%rax        # 42240 <_ZSt4cerr@GLIBCXX_3.4>
    6049:	48 89 c7             	mov    %rax,%rdi
    604c:	e8 bf f1 ff ff       	call   5210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    6051:	48 8b 15 48 bf 03 00 	mov    0x3bf48(%rip),%rdx        # 41fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    6058:	48 89 d6             	mov    %rdx,%rsi
    605b:	48 89 c7             	mov    %rax,%rdi
    605e:	e8 fd f1 ff ff       	call   5260 <_ZNSolsEPFRSoS_E@plt>
  } catch (std::exception &e) {
    6063:	e8 08 f3 ff ff       	call   5370 <__cxa_end_catch@plt>
    6068:	eb 97                	jmp    6001 <main+0x13>
    606a:	48 89 c7             	mov    %rax,%rdi
    606d:	e8 2e f0 ff ff       	call   50a0 <__cxa_begin_catch@plt>
    6072:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    6076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    607a:	48 8b 00             	mov    (%rax),%rax
    607d:	48 83 c0 10          	add    $0x10,%rax
    6081:	48 8b 10             	mov    (%rax),%rdx
    6084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6088:	48 89 c7             	mov    %rax,%rdi
    608b:	ff d2                	call   *%rdx
    608d:	48 89 c6             	mov    %rax,%rsi
    6090:	48 8d 05 a9 c1 03 00 	lea    0x3c1a9(%rip),%rax        # 42240 <_ZSt4cerr@GLIBCXX_3.4>
    6097:	48 89 c7             	mov    %rax,%rdi
    609a:	e8 71 f1 ff ff       	call   5210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    609f:	48 8b 15 fa be 03 00 	mov    0x3befa(%rip),%rdx        # 41fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    60a6:	48 89 d6             	mov    %rdx,%rsi
    60a9:	48 89 c7             	mov    %rax,%rdi
    60ac:	e8 af f1 ff ff       	call   5260 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    60b1:	e8 ba f2 ff ff       	call   5370 <__cxa_end_catch@plt>
    60b6:	e9 46 ff ff ff       	jmp    6001 <main+0x13>
    60bb:	48 89 c7             	mov    %rax,%rdi
    60be:	e8 dd ef ff ff       	call   50a0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    60c3:	48 8d 05 f0 3c 02 00 	lea    0x23cf0(%rip),%rax        # 29dba <_ZNSt8__detailL19__atomic_spin_countE+0x356>
    60ca:	48 89 c6             	mov    %rax,%rsi
    60cd:	48 8d 05 6c c1 03 00 	lea    0x3c16c(%rip),%rax        # 42240 <_ZSt4cerr@GLIBCXX_3.4>
    60d4:	48 89 c7             	mov    %rax,%rdi
    60d7:	e8 34 f1 ff ff       	call   5210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    60dc:	48 8b 15 bd be 03 00 	mov    0x3bebd(%rip),%rdx        # 41fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    60e3:	48 89 d6             	mov    %rdx,%rsi
    60e6:	48 89 c7             	mov    %rax,%rdi
    60e9:	e8 72 f1 ff ff       	call   5260 <_ZNSolsEPFRSoS_E@plt>
  }
    60ee:	e8 7d f2 ff ff       	call   5370 <__cxa_end_catch@plt>
    60f3:	e9 09 ff ff ff       	jmp    6001 <main+0x13>
  } catch (std::exception &e) {
    60f8:	48 89 c3             	mov    %rax,%rbx
    60fb:	e8 70 f2 ff ff       	call   5370 <__cxa_end_catch@plt>
    6100:	48 89 d8             	mov    %rbx,%rax
    6103:	48 89 c7             	mov    %rax,%rdi
    6106:	e8 95 f2 ff ff       	call   53a0 <_Unwind_Resume@plt>
  } catch (...) {
    610b:	48 89 c3             	mov    %rax,%rbx
    610e:	e8 5d f2 ff ff       	call   5370 <__cxa_end_catch@plt>
    6113:	48 89 d8             	mov    %rbx,%rax
    6116:	48 89 c7             	mov    %rax,%rdi
    6119:	e8 82 f2 ff ff       	call   53a0 <_Unwind_Resume@plt>
  }
    611e:	48 89 c3             	mov    %rax,%rbx
    6121:	e8 4a f2 ff ff       	call   5370 <__cxa_end_catch@plt>
    6126:	48 89 d8             	mov    %rbx,%rax
    6129:	48 89 c7             	mov    %rax,%rdi
    612c:	e8 6f f2 ff ff       	call   53a0 <_Unwind_Resume@plt>
    6131:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6135:	c9                   	leave
    6136:	c3                   	ret

0000000000006137 <_Z41__static_initialization_and_destruction_0ii>:
    6137:	55                   	push   %rbp
    6138:	48 89 e5             	mov    %rsp,%rbp
    613b:	48 83 ec 10          	sub    $0x10,%rsp
    613f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6142:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6145:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    6149:	75 3b                	jne    6186 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    614b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6152:	75 32                	jne    6186 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    6154:	48 8d 05 f6 c1 03 00 	lea    0x3c1f6(%rip),%rax        # 42351 <_ZStL8__ioinit>
    615b:	48 89 c7             	mov    %rax,%rdi
    615e:	e8 cd f1 ff ff       	call   5330 <_ZNSt8ios_base4InitC1Ev@plt>
    6163:	48 8d 05 8e c0 03 00 	lea    0x3c08e(%rip),%rax        # 421f8 <__dso_handle>
    616a:	48 89 c2             	mov    %rax,%rdx
    616d:	48 8d 05 dd c1 03 00 	lea    0x3c1dd(%rip),%rax        # 42351 <_ZStL8__ioinit>
    6174:	48 89 c6             	mov    %rax,%rsi
    6177:	48 8b 05 52 be 03 00 	mov    0x3be52(%rip),%rax        # 41fd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    617e:	48 89 c7             	mov    %rax,%rdi
    6181:	e8 4a f0 ff ff       	call   51d0 <__cxa_atexit@plt>
    6186:	90                   	nop
    6187:	c9                   	leave
    6188:	c3                   	ret

0000000000006189 <_GLOBAL__sub_I__Z14protected_mainv>:
    6189:	55                   	push   %rbp
    618a:	48 89 e5             	mov    %rsp,%rbp
    618d:	be ff ff 00 00       	mov    $0xffff,%esi
    6192:	bf 01 00 00 00       	mov    $0x1,%edi
    6197:	e8 9b ff ff ff       	call   6137 <_Z41__static_initialization_and_destruction_0ii>
    619c:	5d                   	pop    %rbp
    619d:	c3                   	ret

000000000000619e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    619e:	55                   	push   %rbp
    619f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    61a2:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    61a7:	5d                   	pop    %rbp
    61a8:	c3                   	ret

00000000000061a9 <_ZSt21is_constant_evaluatedv>:

  /// Returns true only when called during constant evaluation.
  /// @since C++20
  constexpr inline bool
  is_constant_evaluated() noexcept
  {
    61a9:	55                   	push   %rbp
    61aa:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
    if consteval { return true; } else { return false; }
#else
    return __builtin_is_constant_evaluated();
    61ad:	b8 00 00 00 00       	mov    $0x0,%eax
#endif
  }
    61b2:	5d                   	pop    %rbp
    61b3:	c3                   	ret

00000000000061b4 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    61b4:	55                   	push   %rbp
    61b5:	48 89 e5             	mov    %rsp,%rbp
    61b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61c4:	5d                   	pop    %rbp
    61c5:	c3                   	ret

00000000000061c6 <_ZNSt11char_traitsIcE6assignERcRKc>:
#if __cpp_lib_three_way_comparison
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    61c6:	55                   	push   %rbp
    61c7:	48 89 e5             	mov    %rsp,%rbp
    61ca:	48 83 ec 10          	sub    $0x10,%rsp
    61ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
#if __cpp_constexpr_dynamic_alloc
	if (std::__is_constant_evaluated())
    61d6:	e8 c3 ff ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    61db:	84 c0                	test   %al,%al
    61dd:	74 15                	je     61f4 <_ZNSt11char_traitsIcE6assignERcRKc+0x2e>
	  std::construct_at(__builtin_addressof(__c1), __c2);
    61df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e7:	48 89 d6             	mov    %rdx,%rsi
    61ea:	48 89 c7             	mov    %rax,%rdi
    61ed:	e8 71 3f 00 00       	call   a163 <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	else
#endif
	__c1 = __c2;
      }
    61f2:	eb 0d                	jmp    6201 <_ZNSt11char_traitsIcE6assignERcRKc+0x3b>
	__c1 = __c2;
    61f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61f8:	0f b6 10             	movzbl (%rax),%edx
    61fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ff:	88 10                	mov    %dl,(%rax)
      }
    6201:	90                   	nop
    6202:	c9                   	leave
    6203:	c3                   	ret

0000000000006204 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    6204:	55                   	push   %rbp
    6205:	48 89 e5             	mov    %rsp,%rbp
    6208:	48 83 ec 10          	sub    $0x10,%rsp
    620c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    6210:	e8 89 ff ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    6215:	84 c0                	test   %al,%al
    6217:	74 0e                	je     6227 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    6219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    621d:	48 89 c7             	mov    %rax,%rdi
    6220:	e8 7f 3a 00 00       	call   9ca4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    6225:	eb 0d                	jmp    6234 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    6227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    622b:	48 89 c7             	mov    %rax,%rdi
    622e:	e8 7d ee ff ff       	call   50b0 <strlen@plt>
    6233:	90                   	nop
      }
    6234:	c9                   	leave
    6235:	c3                   	ret

0000000000006236 <_ZNSt11char_traitsIcE4moveEPcPKcm>:
#endif
	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
    6236:	55                   	push   %rbp
    6237:	48 89 e5             	mov    %rsp,%rbp
    623a:	48 83 ec 20          	sub    $0x20,%rsp
    623e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6242:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6246:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    624a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    624f:	75 06                	jne    6257 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x21>
	  return __s1;
    6251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6255:	eb 3a                	jmp    6291 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    6257:	e8 42 ff ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    625c:	84 c0                	test   %al,%al
    625e:	74 19                	je     6279 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
    6260:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6264:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626c:	48 89 ce             	mov    %rcx,%rsi
    626f:	48 89 c7             	mov    %rax,%rdi
    6272:	e8 2b 3f 00 00       	call   a1a2 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>
    6277:	eb 18                	jmp    6291 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#endif
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
    6279:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    627d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6285:	48 89 ce             	mov    %rcx,%rsi
    6288:	48 89 c7             	mov    %rax,%rdi
    628b:	e8 d0 f0 ff ff       	call   5360 <memmove@plt>
    6290:	90                   	nop
      }
    6291:	c9                   	leave
    6292:	c3                   	ret

0000000000006293 <_ZNSt11char_traitsIcE4copyEPcPKcm>:

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
    6293:	55                   	push   %rbp
    6294:	48 89 e5             	mov    %rsp,%rbp
    6297:	48 83 ec 20          	sub    $0x20,%rsp
    629b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    629f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    62a7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    62ac:	75 06                	jne    62b4 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x21>
	  return __s1;
    62ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b2:	eb 40                	jmp    62f4 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    62b4:	e8 e5 fe ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    62b9:	84 c0                	test   %al,%al
    62bb:	74 19                	je     62d6 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
    62bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    62c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62c9:	48 89 ce             	mov    %rcx,%rsi
    62cc:	48 89 c7             	mov    %rax,%rdi
    62cf:	e8 80 3f 00 00       	call   a254 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
    62d4:	eb 1e                	jmp    62f4 <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    62d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    62da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62de:	48 89 d1             	mov    %rdx,%rcx
    62e1:	48 89 c6             	mov    %rax,%rsi
    62e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62e8:	48 89 c2             	mov    %rax,%rdx
    62eb:	48 89 cf             	mov    %rcx,%rdi
    62ee:	e8 ad ee ff ff       	call   51a0 <memcpy@plt>
    62f3:	90                   	nop
      }
    62f4:	c9                   	leave
    62f5:	c3                   	ret

00000000000062f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
      // Capacity:
      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
    62f6:	55                   	push   %rbp
    62f7:	48 89 e5             	mov    %rsp,%rbp
    62fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    62fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6302:	48 8b 40 08          	mov    0x8(%rax),%rax
    6306:	5d                   	pop    %rbp
    6307:	c3                   	ret

0000000000006308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>:
  {
  public:
    error_code() noexcept
    : _M_value(0), _M_cat(&system_category()) { }

    error_code(int __v, const error_category& __cat) noexcept
    6308:	55                   	push   %rbp
    6309:	48 89 e5             	mov    %rsp,%rbp
    630c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6310:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6313:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    : _M_value(__v), _M_cat(&__cat) { }
    6317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    631b:	8b 55 f4             	mov    -0xc(%rbp),%edx
    631e:	89 10                	mov    %edx,(%rax)
    6320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6324:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6328:	48 89 50 08          	mov    %rdx,0x8(%rax)
    632c:	90                   	nop
    632d:	5d                   	pop    %rbp
    632e:	c3                   	ret
    632f:	90                   	nop

0000000000006330 <_ZNKSt10error_code5valueEv>:
			 error_code&>::type
      operator=(_ErrorCodeEnum __e) noexcept
      { return *this = make_error_code(__e); }

    int
    value() const noexcept { return _M_value; }
    6330:	55                   	push   %rbp
    6331:	48 89 e5             	mov    %rsp,%rbp
    6334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    633c:	8b 00                	mov    (%rax),%eax
    633e:	5d                   	pop    %rbp
    633f:	c3                   	ret

0000000000006340 <_ZNKSt10error_code8categoryEv>:

    const error_category&
    category() const noexcept { return *_M_cat; }
    6340:	55                   	push   %rbp
    6341:	48 89 e5             	mov    %rsp,%rbp
    6344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    634c:	48 8b 40 08          	mov    0x8(%rax),%rax
    6350:	5d                   	pop    %rbp
    6351:	c3                   	ret

0000000000006352 <_ZNKSt10error_code7messageB5cxx11Ev>:
    error_condition
    default_error_condition() const noexcept;

    _GLIBCXX_DEFAULT_ABI_TAG
    string
    message() const
    6352:	55                   	push   %rbp
    6353:	48 89 e5             	mov    %rsp,%rbp
    6356:	41 54                	push   %r12
    6358:	53                   	push   %rbx
    6359:	48 83 ec 10          	sub    $0x10,%rsp
    635d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6361:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return category().message(value()); }
    6365:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6369:	48 89 c7             	mov    %rax,%rdi
    636c:	e8 cf ff ff ff       	call   6340 <_ZNKSt10error_code8categoryEv>
    6371:	48 89 c3             	mov    %rax,%rbx
    6374:	48 8b 03             	mov    (%rbx),%rax
    6377:	48 83 c0 20          	add    $0x20,%rax
    637b:	4c 8b 20             	mov    (%rax),%r12
    637e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6382:	48 89 c7             	mov    %rax,%rdi
    6385:	e8 a6 ff ff ff       	call   6330 <_ZNKSt10error_code5valueEv>
    638a:	89 c2                	mov    %eax,%edx
    638c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6390:	48 89 de             	mov    %rbx,%rsi
    6393:	48 89 c7             	mov    %rax,%rdi
    6396:	41 ff d4             	call   *%r12
    6399:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    639d:	48 83 c4 10          	add    $0x10,%rsp
    63a1:	5b                   	pop    %rbx
    63a2:	41 5c                	pop    %r12
    63a4:	5d                   	pop    %rbp
    63a5:	c3                   	ret

00000000000063a6 <_ZNSt12system_errorC1ESt10error_code>:
  {
  private:
    error_code 	_M_code;

  public:
    system_error(error_code __ec = error_code())
    63a6:	55                   	push   %rbp
    63a7:	48 89 e5             	mov    %rsp,%rbp
    63aa:	53                   	push   %rbx
    63ab:	48 83 ec 48          	sub    $0x48,%rsp
    63af:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    63b3:	48 89 d1             	mov    %rdx,%rcx
    63b6:	48 89 f0             	mov    %rsi,%rax
    63b9:	48 89 fa             	mov    %rdi,%rdx
    63bc:	48 89 ca             	mov    %rcx,%rdx
    63bf:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    63c3:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    : runtime_error(__ec.message()), _M_code(__ec) { }
    63c7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    63cb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63cf:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    63d3:	48 89 d6             	mov    %rdx,%rsi
    63d6:	48 89 c7             	mov    %rax,%rdi
    63d9:	e8 74 ff ff ff       	call   6352 <_ZNKSt10error_code7messageB5cxx11Ev>
    63de:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63e2:	48 89 c6             	mov    %rax,%rsi
    63e5:	48 89 df             	mov    %rbx,%rdi
    63e8:	e8 c3 ee ff ff       	call   52b0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    63ed:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63f1:	48 89 c7             	mov    %rax,%rdi
    63f4:	e8 f5 3e 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    63f9:	48 8d 15 d8 b5 03 00 	lea    0x3b5d8(%rip),%rdx        # 419d8 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    6400:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6404:	48 89 10             	mov    %rdx,(%rax)
    6407:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    640b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    640f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    6413:	48 89 41 10          	mov    %rax,0x10(%rcx)
    6417:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    641b:	eb 1a                	jmp    6437 <_ZNSt12system_errorC1ESt10error_code+0x91>
    641d:	48 89 c3             	mov    %rax,%rbx
    6420:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6424:	48 89 c7             	mov    %rax,%rdi
    6427:	e8 c2 3e 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    642c:	48 89 d8             	mov    %rbx,%rax
    642f:	48 89 c7             	mov    %rax,%rdi
    6432:	e8 69 ef ff ff       	call   53a0 <_Unwind_Resume@plt>
    6437:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    643b:	c9                   	leave
    643c:	c3                   	ret
    643d:	90                   	nop

000000000000643e <_ZNSt12system_errorC1ESt10error_codePKc>:

    system_error(error_code __ec, const string& __what)
    : runtime_error(__what + ": " + __ec.message()), _M_code(__ec) { }

    system_error(error_code __ec, const char* __what)
    643e:	55                   	push   %rbp
    643f:	48 89 e5             	mov    %rsp,%rbp
    6442:	53                   	push   %rbx
    6443:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    644a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    644e:	89 f0                	mov    %esi,%eax
    6450:	48 89 d6             	mov    %rdx,%rsi
    6453:	48 89 f2             	mov    %rsi,%rdx
    6456:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    645d:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    6464:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    : runtime_error(__what + (": " + __ec.message())), _M_code(__ec) { }
    6468:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    646c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6470:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    6477:	48 89 d6             	mov    %rdx,%rsi
    647a:	48 89 c7             	mov    %rax,%rdi
    647d:	e8 d0 fe ff ff       	call   6352 <_ZNKSt10error_code7messageB5cxx11Ev>
    6482:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6486:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    648a:	48 8d 0d af 31 02 00 	lea    0x231af(%rip),%rcx        # 29640 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6491:	48 89 ce             	mov    %rcx,%rsi
    6494:	48 89 c7             	mov    %rax,%rdi
    6497:	e8 9e 3f 00 00       	call   a43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    649c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    64a0:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    64a4:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    64a8:	48 89 ce             	mov    %rcx,%rsi
    64ab:	48 89 c7             	mov    %rax,%rdi
    64ae:	e8 87 3f 00 00       	call   a43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    64b3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    64b7:	48 89 c6             	mov    %rax,%rsi
    64ba:	48 89 df             	mov    %rbx,%rdi
    64bd:	e8 ee ed ff ff       	call   52b0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    64c2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    64c6:	48 89 c7             	mov    %rax,%rdi
    64c9:	e8 20 3e 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64ce:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    64d2:	48 89 c7             	mov    %rax,%rdi
    64d5:	e8 14 3e 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64da:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    64de:	48 89 c7             	mov    %rax,%rdi
    64e1:	e8 08 3e 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64e6:	48 8d 15 eb b4 03 00 	lea    0x3b4eb(%rip),%rdx        # 419d8 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    64ed:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    64f1:	48 89 10             	mov    %rdx,(%rax)
    64f4:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    64f8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    64ff:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6506:	48 89 41 10          	mov    %rax,0x10(%rcx)
    650a:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    650e:	eb 3c                	jmp    654c <_ZNSt12system_errorC1ESt10error_codePKc+0x10e>
    6510:	48 89 c3             	mov    %rax,%rbx
    6513:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6517:	48 89 c7             	mov    %rax,%rdi
    651a:	e8 cf 3d 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    651f:	eb 03                	jmp    6524 <_ZNSt12system_errorC1ESt10error_codePKc+0xe6>
    6521:	48 89 c3             	mov    %rax,%rbx
    6524:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6528:	48 89 c7             	mov    %rax,%rdi
    652b:	e8 be 3d 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6530:	eb 03                	jmp    6535 <_ZNSt12system_errorC1ESt10error_codePKc+0xf7>
    6532:	48 89 c3             	mov    %rax,%rbx
    6535:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6539:	48 89 c7             	mov    %rax,%rdi
    653c:	e8 ad 3d 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6541:	48 89 d8             	mov    %rbx,%rax
    6544:	48 89 c7             	mov    %rax,%rdi
    6547:	e8 54 ee ff ff       	call   53a0 <_Unwind_Resume@plt>
    654c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6550:	c9                   	leave
    6551:	c3                   	ret

0000000000006552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>:
    size_t getVkHeaderVersion() const
    6552:	55                   	push   %rbp
    6553:	48 89 e5             	mov    %rsp,%rbp
    6556:	48 83 ec 10          	sub    $0x10,%rsp
    655a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      VULKAN_HPP_ASSERT( m_valid );
    655e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6562:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6566:	84 c0                	test   %al,%al
    6568:	75 28                	jne    6592 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv+0x40>
    656a:	48 8d 05 d7 30 02 00 	lea    0x230d7(%rip),%rax        # 29648 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x10>
    6571:	48 89 c1             	mov    %rax,%rcx
    6574:	ba 16 05 00 00       	mov    $0x516,%edx
    6579:	48 8d 05 08 31 02 00 	lea    0x23108(%rip),%rax        # 29688 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x50>
    6580:	48 89 c6             	mov    %rax,%rsi
    6583:	48 8d 05 1d 31 02 00 	lea    0x2311d(%rip),%rax        # 296a7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x6f>
    658a:	48 89 c7             	mov    %rax,%rdi
    658d:	e8 7e eb ff ff       	call   5110 <__assert_fail@plt>
      return vkHeaderVersion;
    6592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6596:	48 8b 00             	mov    (%rax),%rax
    }
    6599:	c9                   	leave
    659a:	c3                   	ret
    659b:	90                   	nop

000000000000659c <_ZN2vk18DispatchLoaderBaseC1Ev>:
    DispatchLoaderBase() = default;
    659c:	55                   	push   %rbp
    659d:	48 89 e5             	mov    %rsp,%rbp
    65a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65a8:	48 c7 00 e7 00 00 00 	movq   $0xe7,(%rax)
    65af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b3:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    65b7:	90                   	nop
    65b8:	5d                   	pop    %rbp
    65b9:	c3                   	ret

00000000000065ba <_ZStanSt13_Ios_FmtflagsS_>:
      _S_ios_fmtflags_min = ~__INT_MAX__
    };

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
    65ba:	55                   	push   %rbp
    65bb:	48 89 e5             	mov    %rsp,%rbp
    65be:	89 7d fc             	mov    %edi,-0x4(%rbp)
    65c1:	89 75 f8             	mov    %esi,-0x8(%rbp)
    65c4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    65c7:	23 45 f8             	and    -0x8(%rbp),%eax
    65ca:	5d                   	pop    %rbp
    65cb:	c3                   	ret

00000000000065cc <_ZStorSt13_Ios_FmtflagsS_>:

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
    65cc:	55                   	push   %rbp
    65cd:	48 89 e5             	mov    %rsp,%rbp
    65d0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    65d3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    65d6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    65d9:	0b 45 f8             	or     -0x8(%rbp),%eax
    65dc:	5d                   	pop    %rbp
    65dd:	c3                   	ret

00000000000065de <_ZStcoSt13_Ios_Fmtflags>:
  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator~(_Ios_Fmtflags __a)
  { return _Ios_Fmtflags(~static_cast<int>(__a)); }
    65de:	55                   	push   %rbp
    65df:	48 89 e5             	mov    %rsp,%rbp
    65e2:	89 7d fc             	mov    %edi,-0x4(%rbp)
    65e5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    65e8:	f7 d0                	not    %eax
    65ea:	5d                   	pop    %rbp
    65eb:	c3                   	ret

00000000000065ec <_ZStoRRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a | __b; }
    65ec:	55                   	push   %rbp
    65ed:	48 89 e5             	mov    %rsp,%rbp
    65f0:	48 83 ec 10          	sub    $0x10,%rsp
    65f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65f8:	89 75 f4             	mov    %esi,-0xc(%rbp)
    65fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65ff:	8b 00                	mov    (%rax),%eax
    6601:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6604:	89 d6                	mov    %edx,%esi
    6606:	89 c7                	mov    %eax,%edi
    6608:	e8 bf ff ff ff       	call   65cc <_ZStorSt13_Ios_FmtflagsS_>
    660d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6611:	89 02                	mov    %eax,(%rdx)
    6613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6617:	c9                   	leave
    6618:	c3                   	ret

0000000000006619 <_ZStaNRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a & __b; }
    6619:	55                   	push   %rbp
    661a:	48 89 e5             	mov    %rsp,%rbp
    661d:	48 83 ec 10          	sub    $0x10,%rsp
    6621:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6625:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    662c:	8b 00                	mov    (%rax),%eax
    662e:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6631:	89 d6                	mov    %edx,%esi
    6633:	89 c7                	mov    %eax,%edi
    6635:	e8 80 ff ff ff       	call   65ba <_ZStanSt13_Ios_FmtflagsS_>
    663a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    663e:	89 02                	mov    %eax,(%rdx)
    6640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6644:	c9                   	leave
    6645:	c3                   	ret

0000000000006646 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>:
     *
     *  This function clears @a mask in the format flags, then sets
     *  @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.
    */
    fmtflags
    setf(fmtflags __fmtfl, fmtflags __mask)
    6646:	55                   	push   %rbp
    6647:	48 89 e5             	mov    %rsp,%rbp
    664a:	48 83 ec 20          	sub    $0x20,%rsp
    664e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6652:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    6655:	89 55 e0             	mov    %edx,-0x20(%rbp)
    {
      fmtflags __old = _M_flags;
    6658:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    665c:	8b 40 18             	mov    0x18(%rax),%eax
    665f:	89 45 fc             	mov    %eax,-0x4(%rbp)
      _M_flags &= ~__mask;
    6662:	8b 45 e0             	mov    -0x20(%rbp),%eax
    6665:	89 c7                	mov    %eax,%edi
    6667:	e8 72 ff ff ff       	call   65de <_ZStcoSt13_Ios_Fmtflags>
    666c:	89 c2                	mov    %eax,%edx
    666e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6672:	48 83 c0 18          	add    $0x18,%rax
    6676:	89 d6                	mov    %edx,%esi
    6678:	48 89 c7             	mov    %rax,%rdi
    667b:	e8 99 ff ff ff       	call   6619 <_ZStaNRSt13_Ios_FmtflagsS_>
      _M_flags |= (__fmtfl & __mask);
    6680:	8b 55 e0             	mov    -0x20(%rbp),%edx
    6683:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    6686:	89 d6                	mov    %edx,%esi
    6688:	89 c7                	mov    %eax,%edi
    668a:	e8 2b ff ff ff       	call   65ba <_ZStanSt13_Ios_FmtflagsS_>
    668f:	89 c2                	mov    %eax,%edx
    6691:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6695:	48 83 c0 18          	add    $0x18,%rax
    6699:	89 d6                	mov    %edx,%esi
    669b:	48 89 c7             	mov    %rax,%rdi
    669e:	e8 49 ff ff ff       	call   65ec <_ZStoRRSt13_Ios_FmtflagsS_>
      return __old;
    66a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
    66a6:	c9                   	leave
    66a7:	c3                   	ret

00000000000066a8 <_ZSt3hexRSt8ios_base>:
  }

  /// Calls base.setf(ios_base::hex, ios_base::basefield).
  inline ios_base&
  hex(ios_base& __base)
  {
    66a8:	55                   	push   %rbp
    66a9:	48 89 e5             	mov    %rsp,%rbp
    66ac:	48 83 ec 10          	sub    $0x10,%rsp
    66b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    __base.setf(ios_base::hex, ios_base::basefield);
    66b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66b8:	ba 4a 00 00 00       	mov    $0x4a,%edx
    66bd:	be 08 00 00 00       	mov    $0x8,%esi
    66c2:	48 89 c7             	mov    %rax,%rdi
    66c5:	e8 7c ff ff ff       	call   6646 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>
    return __base;
    66ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  }
    66ce:	c9                   	leave
    66cf:	c3                   	ret

00000000000066d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
    66d0:	55                   	push   %rbp
    66d1:	48 89 e5             	mov    %rsp,%rbp
    66d4:	48 83 ec 10          	sub    $0x10,%rsp
    66d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e0:	48 89 c7             	mov    %rax,%rdi
    66e3:	e8 68 e9 ff ff       	call   5050 <_ZNSaIcED2Ev@plt>
    66e8:	90                   	nop
    66e9:	c9                   	leave
    66ea:	c3                   	ret
    66eb:	90                   	nop

00000000000066ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
      basic_string()
    66ec:	55                   	push   %rbp
    66ed:	48 89 e5             	mov    %rsp,%rbp
    66f0:	53                   	push   %rbx
    66f1:	48 83 ec 48          	sub    $0x48,%rsp
    66f5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
      : _M_dataplus(_M_local_data())
    66f9:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    66fd:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    6701:	48 89 c7             	mov    %rax,%rdi
    6704:	e8 a7 ec ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6709:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    670d:	48 89 c7             	mov    %rax,%rdi
    6710:	e8 97 00 00 00       	call   67ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6715:	48 89 c1             	mov    %rax,%rcx
    6718:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    671c:	48 89 c2             	mov    %rax,%rdx
    671f:	48 89 ce             	mov    %rcx,%rsi
    6722:	48 89 df             	mov    %rbx,%rdi
    6725:	e8 e2 00 00 00       	call   680c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
    672a:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    672e:	48 89 c7             	mov    %rax,%rdi
    6731:	e8 3a eb ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6736:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    673a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::is_constant_evaluated())
    673e:	e8 66 fa ff ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
    6743:	84 c0                	test   %al,%al
    6745:	74 40                	je     6787 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x9b>
	  for (_CharT& __c : _M_local_buf)
    6747:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    674b:	48 83 c0 10          	add    $0x10,%rax
    674f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6753:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6757:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    675b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    675f:	48 83 c0 10          	add    $0x10,%rax
    6763:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6767:	eb 14                	jmp    677d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x91>
    6769:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    676d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	    __c = _CharT();
    6771:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6775:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    6778:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    677d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6781:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6785:	75 e2                	jne    6769 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x7d>
	return _M_local_data();
    6787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    678b:	48 89 c7             	mov    %rax,%rdi
    678e:	e8 19 00 00 00       	call   67ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6793:	90                   	nop
	_M_set_length(0);
    6794:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6798:	be 00 00 00 00       	mov    $0x0,%esi
    679d:	48 89 c7             	mov    %rax,%rdi
    67a0:	e8 7f 3d 00 00       	call   a524 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    67a5:	90                   	nop
    67a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    67aa:	c9                   	leave
    67ab:	c3                   	ret

00000000000067ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data()
    67ac:	55                   	push   %rbp
    67ad:	48 89 e5             	mov    %rsp,%rbp
    67b0:	48 83 ec 10          	sub    $0x10,%rsp
    67b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    67b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67bc:	48 83 c0 10          	add    $0x10,%rax
    67c0:	48 89 c7             	mov    %rax,%rdi
    67c3:	e8 02 00 00 00       	call   67ca <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>
      }
    67c8:	c9                   	leave
    67c9:	c3                   	ret

00000000000067ca <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>:
       *  @brief  Obtain a pointer to an object
       *  @param  __r  A reference to an object of type `element_type`
       *  @return `addressof(__r)`
      */
      static _GLIBCXX20_CONSTEXPR pointer
      pointer_to(element_type& __r) noexcept
    67ca:	55                   	push   %rbp
    67cb:	48 89 e5             	mov    %rsp,%rbp
    67ce:	48 83 ec 10          	sub    $0x10,%rsp
    67d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    67d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67da:	48 89 c7             	mov    %rax,%rdi
    67dd:	e8 02 00 00 00       	call   67e4 <_ZSt9addressofIcEPT_RS0_>
    67e2:	c9                   	leave
    67e3:	c3                   	ret

00000000000067e4 <_ZSt9addressofIcEPT_RS0_>:
   *  @return   The actual address.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
    67e4:	55                   	push   %rbp
    67e5:	48 89 e5             	mov    %rsp,%rbp
    67e8:	48 83 ec 10          	sub    $0x10,%rsp
    67ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    67f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67f4:	48 89 c7             	mov    %rax,%rdi
    67f7:	e8 02 00 00 00       	call   67fe <_ZSt11__addressofIcEPT_RS0_>
    67fc:	c9                   	leave
    67fd:	c3                   	ret

00000000000067fe <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    67fe:	55                   	push   %rbp
    67ff:	48 89 e5             	mov    %rsp,%rbp
    6802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680a:	5d                   	pop    %rbp
    680b:	c3                   	ret

000000000000680c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
    680c:	55                   	push   %rbp
    680d:	48 89 e5             	mov    %rsp,%rbp
    6810:	48 83 ec 20          	sub    $0x20,%rsp
    6814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6818:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    681c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    6820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6824:	48 89 c7             	mov    %rax,%rdi
    6827:	e8 20 00 00 00       	call   684c <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    682c:	48 89 c2             	mov    %rax,%rdx
    682f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6833:	48 89 d6             	mov    %rdx,%rsi
    6836:	48 89 c7             	mov    %rax,%rdi
    6839:	e8 c2 ea ff ff       	call   5300 <_ZNSaIcEC2ERKS_@plt>
    683e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6842:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6846:	48 89 10             	mov    %rdx,(%rax)
    6849:	90                   	nop
    684a:	c9                   	leave
    684b:	c3                   	ret

000000000000684c <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    684c:	55                   	push   %rbp
    684d:	48 89 e5             	mov    %rsp,%rbp
    6850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6858:	5d                   	pop    %rbp
    6859:	c3                   	ret

000000000000685a <_ZNK2vk17ErrorCategoryImpl4nameEv>:
    virtual const char * name() const VULKAN_HPP_NOEXCEPT override
    685a:	55                   	push   %rbp
    685b:	48 89 e5             	mov    %rsp,%rbp
    685e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return VULKAN_HPP_NAMESPACE_STRING "::Result";
    6862:	48 8d 05 46 2e 02 00 	lea    0x22e46(%rip),%rax        # 296af <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x77>
    }
    6869:	5d                   	pop    %rbp
    686a:	c3                   	ret
    686b:	90                   	nop

000000000000686c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei>:
    virtual std::string message( int ev ) const override
    686c:	55                   	push   %rbp
    686d:	48 89 e5             	mov    %rsp,%rbp
    6870:	41 54                	push   %r12
    6872:	53                   	push   %rbx
    6873:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    687a:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
    6881:	48 89 b5 e0 fd ff ff 	mov    %rsi,-0x220(%rbp)
    6888:	89 95 dc fd ff ff    	mov    %edx,-0x224(%rbp)
    688e:	8b 85 dc fd ff ff    	mov    -0x224(%rbp),%eax
    6894:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6897:	48 8b 9d e8 fd ff ff 	mov    -0x218(%rbp),%rbx

  //=== VK_VERSION_1_0 ===

  VULKAN_HPP_INLINE std::string to_string( Result value )
  {
    switch ( value )
    689e:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    68a5:	0f 84 eb 06 00 00    	je     6f96 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x72a>
    68ab:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    68b2:	0f 8f 08 0a 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68b8:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    68bf:	0f 84 8f 09 00 00    	je     7254 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9e8>
    68c5:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    68cc:	0f 8f ee 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68d2:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    68d9:	0f 84 3f 09 00 00    	je     721e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9b2>
    68df:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    68e6:	0f 8f d4 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68ec:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    68f3:	0f 84 ef 08 00 00    	je     71e8 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x97c>
    68f9:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    6900:	0f 8f ba 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6906:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    690d:	0f 84 9f 08 00 00    	je     71b2 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x946>
    6913:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    691a:	0f 8f a0 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6920:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    6927:	0f 84 0b 07 00 00    	je     7038 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x7cc>
    692d:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    6934:	0f 8f 86 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    693a:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    693e:	0f 8f 7c 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6944:	83 7d ec f3          	cmpl   $0xfffffff3,-0x14(%rbp)
    6948:	0f 8d 3d 01 00 00    	jge    6a8b <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x21f>
    694e:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    6955:	0f 84 71 06 00 00    	je     6fcc <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x760>
    695b:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    6962:	0f 8f 58 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6968:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    696f:	0f 84 8d 06 00 00    	je     7002 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x796>
    6975:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    697c:	0f 8f 3e 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6982:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    6989:	0f 84 df 06 00 00    	je     706e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x802>
    698f:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    6996:	0f 8f 24 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    699c:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    69a3:	0f 84 fb 06 00 00    	je     70a4 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x838>
    69a9:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    69b0:	0f 8f 0a 09 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69b6:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    69bd:	0f 84 17 07 00 00    	je     70da <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x86e>
    69c3:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    69ca:	0f 8f f0 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69d0:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    69d7:	0f 84 33 07 00 00    	je     7110 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8a4>
    69dd:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    69e4:	0f 8f d6 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69ea:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    69f1:	0f 84 c7 04 00 00    	je     6ebe <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x652>
    69f7:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    69fe:	0f 8f bc 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a04:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6a0b:	0f 84 e3 04 00 00    	je     6ef4 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x688>
    6a11:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6a18:	0f 8f a2 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a1e:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    6a25:	0f 84 1b 07 00 00    	je     7146 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8da>
    6a2b:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    6a32:	0f 8f 88 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a38:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    6a3f:	0f 84 e5 04 00 00    	je     6f2a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6be>
    6a45:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    6a4c:	0f 8f 6e 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a52:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    6a59:	0f 84 1d 07 00 00    	je     717c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x910>
    6a5f:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    6a66:	0f 8f 54 08 00 00    	jg     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a6c:	81 7d ec b0 0d 60 c4 	cmpl   $0xc4600db0,-0x14(%rbp)
    6a73:	0f 84 11 08 00 00    	je     728a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa1e>
    6a79:	81 7d ec 18 4a 61 c4 	cmpl   $0xc4614a18,-0x14(%rbp)
    6a80:	0f 84 da 04 00 00    	je     6f60 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6f4>
    6a86:	e9 35 08 00 00       	jmp    72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a8b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6a8e:	83 c0 0d             	add    $0xd,%eax
    6a91:	83 f8 12             	cmp    $0x12,%eax
    6a94:	0f 87 26 08 00 00    	ja     72c0 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a9a:	89 c0                	mov    %eax,%eax
    6a9c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    6aa3:	00 
    6aa4:	48 8d 05 ed 33 02 00 	lea    0x233ed(%rip),%rax        # 29e98 <_ZNSt8__detailL19__atomic_spin_countE+0x434>
    6aab:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    6aae:	48 98                	cltq
    6ab0:	48 8d 15 e1 33 02 00 	lea    0x233e1(%rip),%rdx        # 29e98 <_ZNSt8__detailL19__atomic_spin_countE+0x434>
    6ab7:	48 01 d0             	add    %rdx,%rax
    6aba:	ff e0                	jmp    *%rax
    {
      case Result::eSuccess: return "Success";
    6abc:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6ac0:	48 89 c7             	mov    %rax,%rdi
    6ac3:	e8 e8 e8 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6ac8:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6acc:	48 89 c2             	mov    %rax,%rdx
    6acf:	48 8d 05 e4 2b 02 00 	lea    0x22be4(%rip),%rax        # 296ba <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x82>
    6ad6:	48 89 c6             	mov    %rax,%rsi
    6ad9:	48 89 df             	mov    %rbx,%rdi
    6adc:	e8 a3 39 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ae1:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6ae5:	48 89 c7             	mov    %rax,%rdi
    6ae8:	e8 83 e7 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
      return VULKAN_HPP_NAMESPACE::to_string( static_cast<VULKAN_HPP_NAMESPACE::Result>( ev ) );
    6aed:	e9 aa 0c 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eNotReady: return "NotReady";
    6af2:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6af6:	48 89 c7             	mov    %rax,%rdi
    6af9:	e8 b2 e8 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6afe:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6b02:	48 89 c2             	mov    %rax,%rdx
    6b05:	48 8d 05 b6 2b 02 00 	lea    0x22bb6(%rip),%rax        # 296c2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8a>
    6b0c:	48 89 c6             	mov    %rax,%rsi
    6b0f:	48 89 df             	mov    %rbx,%rdi
    6b12:	e8 6d 39 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b17:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6b1b:	48 89 c7             	mov    %rax,%rdi
    6b1e:	e8 4d e7 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6b23:	e9 74 0c 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eTimeout: return "Timeout";
    6b28:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6b2c:	48 89 c7             	mov    %rax,%rdi
    6b2f:	e8 7c e8 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6b34:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6b38:	48 89 c2             	mov    %rax,%rdx
    6b3b:	48 8d 05 89 2b 02 00 	lea    0x22b89(%rip),%rax        # 296cb <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    6b42:	48 89 c6             	mov    %rax,%rsi
    6b45:	48 89 df             	mov    %rbx,%rdi
    6b48:	e8 37 39 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b4d:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6b51:	48 89 c7             	mov    %rax,%rdi
    6b54:	e8 17 e7 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6b59:	e9 3e 0c 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventSet: return "EventSet";
    6b5e:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6b62:	48 89 c7             	mov    %rax,%rdi
    6b65:	e8 46 e8 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6b6a:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6b6e:	48 89 c2             	mov    %rax,%rdx
    6b71:	48 8d 05 5b 2b 02 00 	lea    0x22b5b(%rip),%rax        # 296d3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x9b>
    6b78:	48 89 c6             	mov    %rax,%rsi
    6b7b:	48 89 df             	mov    %rbx,%rdi
    6b7e:	e8 01 39 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b83:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6b87:	48 89 c7             	mov    %rax,%rdi
    6b8a:	e8 e1 e6 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6b8f:	e9 08 0c 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventReset: return "EventReset";
    6b94:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b98:	48 89 c7             	mov    %rax,%rdi
    6b9b:	e8 10 e8 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6ba0:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6ba4:	48 89 c2             	mov    %rax,%rdx
    6ba7:	48 8d 05 2e 2b 02 00 	lea    0x22b2e(%rip),%rax        # 296dc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa4>
    6bae:	48 89 c6             	mov    %rax,%rsi
    6bb1:	48 89 df             	mov    %rbx,%rdi
    6bb4:	e8 cb 38 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6bb9:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6bbd:	48 89 c7             	mov    %rax,%rdi
    6bc0:	e8 ab e6 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6bc5:	e9 d2 0b 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eIncomplete: return "Incomplete";
    6bca:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6bce:	48 89 c7             	mov    %rax,%rdi
    6bd1:	e8 da e7 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6bd6:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6bda:	48 89 c2             	mov    %rax,%rdx
    6bdd:	48 8d 05 03 2b 02 00 	lea    0x22b03(%rip),%rax        # 296e7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xaf>
    6be4:	48 89 c6             	mov    %rax,%rsi
    6be7:	48 89 df             	mov    %rbx,%rdi
    6bea:	e8 95 38 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6bef:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6bf3:	48 89 c7             	mov    %rax,%rdi
    6bf6:	e8 75 e6 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6bfb:	e9 9c 0b 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    6c00:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6c04:	48 89 c7             	mov    %rax,%rdi
    6c07:	e8 a4 e7 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6c0c:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6c10:	48 89 c2             	mov    %rax,%rdx
    6c13:	48 8d 05 d8 2a 02 00 	lea    0x22ad8(%rip),%rax        # 296f2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xba>
    6c1a:	48 89 c6             	mov    %rax,%rsi
    6c1d:	48 89 df             	mov    %rbx,%rdi
    6c20:	e8 5f 38 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c25:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6c29:	48 89 c7             	mov    %rax,%rdi
    6c2c:	e8 3f e6 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6c31:	e9 66 0b 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    6c36:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c3a:	48 89 c7             	mov    %rax,%rdi
    6c3d:	e8 6e e7 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6c42:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c46:	48 89 c2             	mov    %rax,%rdx
    6c49:	48 8d 05 b7 2a 02 00 	lea    0x22ab7(%rip),%rax        # 29707 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xcf>
    6c50:	48 89 c6             	mov    %rax,%rsi
    6c53:	48 89 df             	mov    %rbx,%rdi
    6c56:	e8 29 38 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c5b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c5f:	48 89 c7             	mov    %rax,%rdi
    6c62:	e8 09 e6 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6c67:	e9 30 0b 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    6c6c:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6c70:	48 89 c7             	mov    %rax,%rdi
    6c73:	e8 38 e7 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6c78:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6c7c:	48 89 c2             	mov    %rax,%rdx
    6c7f:	48 8d 05 98 2a 02 00 	lea    0x22a98(%rip),%rax        # 2971e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe6>
    6c86:	48 89 c6             	mov    %rax,%rsi
    6c89:	48 89 df             	mov    %rbx,%rdi
    6c8c:	e8 f3 37 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c91:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6c95:	48 89 c7             	mov    %rax,%rdi
    6c98:	e8 d3 e5 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6c9d:	e9 fa 0a 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    6ca2:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6ca6:	48 89 c7             	mov    %rax,%rdi
    6ca9:	e8 02 e7 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6cae:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6cb2:	48 89 c2             	mov    %rax,%rdx
    6cb5:	48 8d 05 7c 2a 02 00 	lea    0x22a7c(%rip),%rax        # 29738 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x100>
    6cbc:	48 89 c6             	mov    %rax,%rsi
    6cbf:	48 89 df             	mov    %rbx,%rdi
    6cc2:	e8 bd 37 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6cc7:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6ccb:	48 89 c7             	mov    %rax,%rdi
    6cce:	e8 9d e5 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6cd3:	e9 c4 0a 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    6cd8:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6cdc:	48 89 c7             	mov    %rax,%rdi
    6cdf:	e8 cc e6 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6ce4:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6ce8:	48 89 c2             	mov    %rax,%rdx
    6ceb:	48 8d 05 56 2a 02 00 	lea    0x22a56(%rip),%rax        # 29748 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x110>
    6cf2:	48 89 c6             	mov    %rax,%rsi
    6cf5:	48 89 df             	mov    %rbx,%rdi
    6cf8:	e8 87 37 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6cfd:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6d01:	48 89 c7             	mov    %rax,%rdi
    6d04:	e8 67 e5 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6d09:	e9 8e 0a 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    6d0e:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6d12:	48 89 c7             	mov    %rax,%rdi
    6d15:	e8 96 e6 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6d1a:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6d1e:	48 89 c2             	mov    %rax,%rdx
    6d21:	48 8d 05 35 2a 02 00 	lea    0x22a35(%rip),%rax        # 2975d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x125>
    6d28:	48 89 c6             	mov    %rax,%rsi
    6d2b:	48 89 df             	mov    %rbx,%rdi
    6d2e:	e8 51 37 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d33:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6d37:	48 89 c7             	mov    %rax,%rdi
    6d3a:	e8 31 e5 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6d3f:	e9 58 0a 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    6d44:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6d48:	48 89 c7             	mov    %rax,%rdi
    6d4b:	e8 60 e6 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6d50:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6d54:	48 89 c2             	mov    %rax,%rdx
    6d57:	48 8d 05 14 2a 02 00 	lea    0x22a14(%rip),%rax        # 29772 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x13a>
    6d5e:	48 89 c6             	mov    %rax,%rsi
    6d61:	48 89 df             	mov    %rbx,%rdi
    6d64:	e8 1b 37 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d69:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6d6d:	48 89 c7             	mov    %rax,%rdi
    6d70:	e8 fb e4 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6d75:	e9 22 0a 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    6d7a:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6d7e:	48 89 c7             	mov    %rax,%rdi
    6d81:	e8 2a e6 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6d86:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6d8a:	48 89 c2             	mov    %rax,%rdx
    6d8d:	48 8d 05 f7 29 02 00 	lea    0x229f7(%rip),%rax        # 2978b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x153>
    6d94:	48 89 c6             	mov    %rax,%rsi
    6d97:	48 89 df             	mov    %rbx,%rdi
    6d9a:	e8 e5 36 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d9f:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6da3:	48 89 c7             	mov    %rax,%rdi
    6da6:	e8 c5 e4 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6dab:	e9 ec 09 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    6db0:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6db4:	48 89 c7             	mov    %rax,%rdi
    6db7:	e8 f4 e5 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6dbc:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6dc0:	48 89 c2             	mov    %rax,%rdx
    6dc3:	48 8d 05 d8 29 02 00 	lea    0x229d8(%rip),%rax        # 297a2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x16a>
    6dca:	48 89 c6             	mov    %rax,%rsi
    6dcd:	48 89 df             	mov    %rbx,%rdi
    6dd0:	e8 af 36 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6dd5:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6dd9:	48 89 c7             	mov    %rax,%rdi
    6ddc:	e8 8f e4 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6de1:	e9 b6 09 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    6de6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6dea:	48 89 c7             	mov    %rax,%rdi
    6ded:	e8 be e5 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6df2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6df6:	48 89 c2             	mov    %rax,%rdx
    6df9:	48 8d 05 ba 29 02 00 	lea    0x229ba(%rip),%rax        # 297ba <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x182>
    6e00:	48 89 c6             	mov    %rax,%rsi
    6e03:	48 89 df             	mov    %rbx,%rdi
    6e06:	e8 79 36 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e0b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6e0f:	48 89 c7             	mov    %rax,%rdi
    6e12:	e8 59 e4 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6e17:	e9 80 09 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    6e1c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6e20:	48 89 c7             	mov    %rax,%rdi
    6e23:	e8 88 e5 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6e28:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6e2c:	48 89 c2             	mov    %rax,%rdx
    6e2f:	48 8d 05 98 29 02 00 	lea    0x22998(%rip),%rax        # 297ce <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x196>
    6e36:	48 89 c6             	mov    %rax,%rsi
    6e39:	48 89 df             	mov    %rbx,%rdi
    6e3c:	e8 43 36 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e41:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6e45:	48 89 c7             	mov    %rax,%rdi
    6e48:	e8 23 e4 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6e4d:	e9 4a 09 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    6e52:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6e56:	48 89 c7             	mov    %rax,%rdi
    6e59:	e8 52 e5 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6e5e:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6e62:	48 89 c2             	mov    %rax,%rdx
    6e65:	48 8d 05 7a 29 02 00 	lea    0x2297a(%rip),%rax        # 297e6 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1ae>
    6e6c:	48 89 c6             	mov    %rax,%rsi
    6e6f:	48 89 df             	mov    %rbx,%rdi
    6e72:	e8 0d 36 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e77:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6e7b:	48 89 c7             	mov    %rax,%rdi
    6e7e:	e8 ed e3 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6e83:	e9 14 09 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorUnknown: return "ErrorUnknown";
    6e88:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6e8c:	48 89 c7             	mov    %rax,%rdi
    6e8f:	e8 1c e5 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6e94:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6e98:	48 89 c2             	mov    %rax,%rdx
    6e9b:	48 8d 05 58 29 02 00 	lea    0x22958(%rip),%rax        # 297fa <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c2>
    6ea2:	48 89 c6             	mov    %rax,%rsi
    6ea5:	48 89 df             	mov    %rbx,%rdi
    6ea8:	e8 d7 35 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ead:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6eb1:	48 89 c7             	mov    %rax,%rdi
    6eb4:	e8 b7 e3 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6eb9:	e9 de 08 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    6ebe:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6ec2:	48 89 c7             	mov    %rax,%rdi
    6ec5:	e8 e6 e4 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6eca:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6ece:	48 89 c2             	mov    %rax,%rdx
    6ed1:	48 8d 05 2f 29 02 00 	lea    0x2292f(%rip),%rax        # 29807 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1cf>
    6ed8:	48 89 c6             	mov    %rax,%rsi
    6edb:	48 89 df             	mov    %rbx,%rdi
    6ede:	e8 a1 35 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ee3:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6ee7:	48 89 c7             	mov    %rax,%rdi
    6eea:	e8 81 e3 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6eef:	e9 a8 08 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    6ef4:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6ef8:	48 89 c7             	mov    %rax,%rdi
    6efb:	e8 b0 e4 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6f00:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6f04:	48 89 c2             	mov    %rax,%rdx
    6f07:	48 8d 05 0e 29 02 00 	lea    0x2290e(%rip),%rax        # 2981c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1e4>
    6f0e:	48 89 c6             	mov    %rax,%rsi
    6f11:	48 89 df             	mov    %rbx,%rdi
    6f14:	e8 6b 35 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f19:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6f1d:	48 89 c7             	mov    %rax,%rdi
    6f20:	e8 4b e3 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6f25:	e9 72 08 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    6f2a:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6f2e:	48 89 c7             	mov    %rax,%rdi
    6f31:	e8 7a e4 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6f36:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6f3a:	48 89 c2             	mov    %rax,%rdx
    6f3d:	48 8d 05 f3 28 02 00 	lea    0x228f3(%rip),%rax        # 29837 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1ff>
    6f44:	48 89 c6             	mov    %rax,%rsi
    6f47:	48 89 df             	mov    %rbx,%rdi
    6f4a:	e8 35 35 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f4f:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6f53:	48 89 c7             	mov    %rax,%rdi
    6f56:	e8 15 e3 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6f5b:	e9 3c 08 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    6f60:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6f64:	48 89 c7             	mov    %rax,%rdi
    6f67:	e8 44 e4 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6f6c:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6f70:	48 89 c2             	mov    %rax,%rdx
    6f73:	48 8d 05 d6 28 02 00 	lea    0x228d6(%rip),%rax        # 29850 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x218>
    6f7a:	48 89 c6             	mov    %rax,%rsi
    6f7d:	48 89 df             	mov    %rbx,%rdi
    6f80:	e8 ff 34 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f85:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6f89:	48 89 c7             	mov    %rax,%rdi
    6f8c:	e8 df e2 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6f91:	e9 06 08 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    6f96:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f9a:	48 89 c7             	mov    %rax,%rdi
    6f9d:	e8 0e e4 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6fa2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6fa6:	48 89 c2             	mov    %rax,%rdx
    6fa9:	48 8d 05 c1 28 02 00 	lea    0x228c1(%rip),%rax        # 29871 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x239>
    6fb0:	48 89 c6             	mov    %rax,%rsi
    6fb3:	48 89 df             	mov    %rbx,%rdi
    6fb6:	e8 c9 34 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6fbb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6fbf:	48 89 c7             	mov    %rax,%rdi
    6fc2:	e8 a9 e2 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6fc7:	e9 d0 07 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    6fcc:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6fd0:	48 89 c7             	mov    %rax,%rdi
    6fd3:	e8 d8 e3 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    6fd8:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6fdc:	48 89 c2             	mov    %rax,%rdx
    6fdf:	48 8d 05 a3 28 02 00 	lea    0x228a3(%rip),%rax        # 29889 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x251>
    6fe6:	48 89 c6             	mov    %rax,%rsi
    6fe9:	48 89 df             	mov    %rbx,%rdi
    6fec:	e8 93 34 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ff1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6ff5:	48 89 c7             	mov    %rax,%rdi
    6ff8:	e8 73 e2 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    6ffd:	e9 9a 07 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    7002:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    7006:	48 89 c7             	mov    %rax,%rdi
    7009:	e8 a2 e3 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    700e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    7012:	48 89 c2             	mov    %rax,%rdx
    7015:	48 8d 05 81 28 02 00 	lea    0x22881(%rip),%rax        # 2989d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x265>
    701c:	48 89 c6             	mov    %rax,%rsi
    701f:	48 89 df             	mov    %rbx,%rdi
    7022:	e8 5d 34 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7027:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    702b:	48 89 c7             	mov    %rax,%rdi
    702e:	e8 3d e2 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7033:	e9 64 07 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    7038:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    703c:	48 89 c7             	mov    %rax,%rdi
    703f:	e8 6c e3 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    7044:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    7048:	48 89 c2             	mov    %rax,%rdx
    704b:	48 8d 05 65 28 02 00 	lea    0x22865(%rip),%rax        # 298b7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x27f>
    7052:	48 89 c6             	mov    %rax,%rsi
    7055:	48 89 df             	mov    %rbx,%rdi
    7058:	e8 27 34 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    705d:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    7061:	48 89 c7             	mov    %rax,%rdi
    7064:	e8 07 e2 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7069:	e9 2e 07 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    706e:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    7072:	48 89 c7             	mov    %rax,%rdi
    7075:	e8 36 e3 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    707a:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    707e:	48 89 c2             	mov    %rax,%rdx
    7081:	48 8d 05 3d 28 02 00 	lea    0x2283d(%rip),%rax        # 298c5 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28d>
    7088:	48 89 c6             	mov    %rax,%rsi
    708b:	48 89 df             	mov    %rbx,%rdi
    708e:	e8 f1 33 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7093:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    7097:	48 89 c7             	mov    %rax,%rdi
    709a:	e8 d1 e1 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    709f:	e9 f8 06 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    70a4:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    70a8:	48 89 c7             	mov    %rax,%rdi
    70ab:	e8 00 e3 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    70b0:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    70b4:	48 89 c2             	mov    %rax,%rdx
    70b7:	48 8d 05 19 28 02 00 	lea    0x22819(%rip),%rax        # 298d7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29f>
    70be:	48 89 c6             	mov    %rax,%rsi
    70c1:	48 89 df             	mov    %rbx,%rdi
    70c4:	e8 bb 33 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70c9:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    70cd:	48 89 c7             	mov    %rax,%rdi
    70d0:	e8 9b e1 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    70d5:	e9 c2 06 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    70da:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    70de:	48 89 c7             	mov    %rax,%rdi
    70e1:	e8 ca e2 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    70e6:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    70ea:	48 89 c2             	mov    %rax,%rdx
    70ed:	48 8d 05 ff 27 02 00 	lea    0x227ff(%rip),%rax        # 298f3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2bb>
    70f4:	48 89 c6             	mov    %rax,%rsi
    70f7:	48 89 df             	mov    %rbx,%rdi
    70fa:	e8 85 33 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70ff:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    7103:	48 89 c7             	mov    %rax,%rdi
    7106:	e8 65 e1 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    710b:	e9 8c 06 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    7110:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7114:	48 89 c7             	mov    %rax,%rdi
    7117:	e8 94 e2 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    711c:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7120:	48 89 c2             	mov    %rax,%rdx
    7123:	48 8d 05 e2 27 02 00 	lea    0x227e2(%rip),%rax        # 2990c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2d4>
    712a:	48 89 c6             	mov    %rax,%rsi
    712d:	48 89 df             	mov    %rbx,%rdi
    7130:	e8 4f 33 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7135:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7139:	48 89 c7             	mov    %rax,%rdi
    713c:	e8 2f e1 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7141:	e9 56 06 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorVideoProfileOperationNotSupportedKHR: return "ErrorVideoProfileOperationNotSupportedKHR";
      case Result::eErrorVideoProfileFormatNotSupportedKHR: return "ErrorVideoProfileFormatNotSupportedKHR";
      case Result::eErrorVideoProfileCodecNotSupportedKHR: return "ErrorVideoProfileCodecNotSupportedKHR";
      case Result::eErrorVideoStdVersionNotSupportedKHR: return "ErrorVideoStdVersionNotSupportedKHR";
#endif /*VK_ENABLE_BETA_EXTENSIONS*/
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    7146:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    714a:	48 89 c7             	mov    %rax,%rdi
    714d:	e8 5e e2 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    7152:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    7156:	48 89 c2             	mov    %rax,%rdx
    7159:	48 8d 05 c8 27 02 00 	lea    0x227c8(%rip),%rax        # 29928 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f0>
    7160:	48 89 c6             	mov    %rax,%rsi
    7163:	48 89 df             	mov    %rbx,%rdi
    7166:	e8 19 33 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    716b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    716f:	48 89 c7             	mov    %rax,%rdi
    7172:	e8 f9 e0 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7177:	e9 20 06 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    717c:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7180:	48 89 c7             	mov    %rax,%rdi
    7183:	e8 28 e2 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    7188:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    718c:	48 89 c2             	mov    %rax,%rdx
    718f:	48 8d 05 be 27 02 00 	lea    0x227be(%rip),%rax        # 29954 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x31c>
    7196:	48 89 c6             	mov    %rax,%rsi
    7199:	48 89 df             	mov    %rbx,%rdi
    719c:	e8 e3 32 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71a1:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    71a5:	48 89 c7             	mov    %rax,%rdi
    71a8:	e8 c3 e0 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    71ad:	e9 ea 05 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
#if defined( VK_USE_PLATFORM_WIN32_KHR )
      case Result::eErrorFullScreenExclusiveModeLostEXT: return "ErrorFullScreenExclusiveModeLostEXT";
#endif /*VK_USE_PLATFORM_WIN32_KHR*/
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    71b2:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    71b6:	48 89 c7             	mov    %rax,%rdi
    71b9:	e8 f2 e1 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    71be:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    71c2:	48 89 c2             	mov    %rax,%rdx
    71c5:	48 8d 05 9d 27 02 00 	lea    0x2279d(%rip),%rax        # 29969 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x331>
    71cc:	48 89 c6             	mov    %rax,%rsi
    71cf:	48 89 df             	mov    %rbx,%rdi
    71d2:	e8 ad 32 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71d7:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    71db:	48 89 c7             	mov    %rax,%rdi
    71de:	e8 8d e0 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    71e3:	e9 b4 05 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    71e8:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    71ec:	48 89 c7             	mov    %rax,%rdi
    71ef:	e8 bc e1 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    71f4:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    71f8:	48 89 c2             	mov    %rax,%rdx
    71fb:	48 8d 05 75 27 02 00 	lea    0x22775(%rip),%rax        # 29977 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x33f>
    7202:	48 89 c6             	mov    %rax,%rsi
    7205:	48 89 df             	mov    %rbx,%rdi
    7208:	e8 77 32 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    720d:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    7211:	48 89 c7             	mov    %rax,%rdi
    7214:	e8 57 e0 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7219:	e9 7e 05 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    721e:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7222:	48 89 c7             	mov    %rax,%rdi
    7225:	e8 86 e1 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    722a:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    722e:	48 89 c2             	mov    %rax,%rdx
    7231:	48 8d 05 4d 27 02 00 	lea    0x2274d(%rip),%rax        # 29985 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x34d>
    7238:	48 89 c6             	mov    %rax,%rsi
    723b:	48 89 df             	mov    %rbx,%rdi
    723e:	e8 41 32 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7243:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7247:	48 89 c7             	mov    %rax,%rdi
    724a:	e8 21 e0 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    724f:	e9 48 05 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    7254:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    7258:	48 89 c7             	mov    %rax,%rdi
    725b:	e8 50 e1 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    7260:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    7264:	48 89 c2             	mov    %rax,%rdx
    7267:	48 8d 05 2c 27 02 00 	lea    0x2272c(%rip),%rax        # 2999a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x362>
    726e:	48 89 c6             	mov    %rax,%rsi
    7271:	48 89 df             	mov    %rbx,%rdi
    7274:	e8 0b 32 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7279:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    727d:	48 89 c7             	mov    %rax,%rdi
    7280:	e8 eb df ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7285:	e9 12 05 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    728a:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    728e:	48 89 c7             	mov    %rax,%rdi
    7291:	e8 1a e1 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    7296:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    729a:	48 89 c2             	mov    %rax,%rdx
    729d:	48 8d 05 0e 27 02 00 	lea    0x2270e(%rip),%rax        # 299b2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x37a>
    72a4:	48 89 c6             	mov    %rax,%rsi
    72a7:	48 89 df             	mov    %rbx,%rdi
    72aa:	e8 d5 31 00 00       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    72af:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    72b3:	48 89 c7             	mov    %rax,%rdi
    72b6:	e8 b5 df ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    72bb:	e9 dc 04 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    72c0:	8b 45 ec             	mov    -0x14(%rbp),%eax
    72c3:	89 45 e8             	mov    %eax,-0x18(%rbp)
    72c6:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    std::stringstream stream;
    72ca:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    72d1:	48 89 c7             	mov    %rax,%rdi
    72d4:	e8 57 de ff ff       	call   5130 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    stream << std::hex << value;
    72d9:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    72e0:	48 83 c0 10          	add    $0x10,%rax
    72e4:	48 8d 15 bd f3 ff ff 	lea    -0xc43(%rip),%rdx        # 66a8 <_ZSt3hexRSt8ios_base>
    72eb:	48 89 d6             	mov    %rdx,%rsi
    72ee:	48 89 c7             	mov    %rax,%rdi
    72f1:	e8 7a dd ff ff       	call   5070 <_ZNSolsEPFRSt8ios_baseS0_E@plt>
    72f6:	48 89 c2             	mov    %rax,%rdx
    72f9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    72fc:	89 c6                	mov    %eax,%esi
    72fe:	48 89 d7             	mov    %rdx,%rdi
    7301:	e8 ca df ff ff       	call   52d0 <_ZNSolsEj@plt>
    return stream.str();
    7306:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    730d:	48 89 c6             	mov    %rax,%rsi
    7310:	4c 89 e7             	mov    %r12,%rdi
    7313:	e8 b8 e0 ff ff       	call   53d0 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>
    7318:	90                   	nop
  }
    7319:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    7320:	48 89 c7             	mov    %rax,%rdi
    7323:	e8 38 de ff ff       	call   5160 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    return stream.str();
    7328:	90                   	nop
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    7329:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    732d:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    7331:	48 8d 0d 97 26 02 00 	lea    0x22697(%rip),%rcx        # 299cf <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x397>
    7338:	48 89 ce             	mov    %rcx,%rsi
    733b:	48 89 c7             	mov    %rax,%rdi
    733e:	e8 f7 30 00 00       	call   a43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    7343:	eb 1a                	jmp    735f <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xaf3>
  }
    7345:	48 89 c3             	mov    %rax,%rbx
    7348:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    734f:	48 89 c7             	mov    %rax,%rdi
    7352:	e8 09 de ff ff       	call   5160 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    7357:	48 89 d8             	mov    %rbx,%rax
    735a:	e9 35 04 00 00       	jmp    7794 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    735f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7363:	48 8d 15 70 26 02 00 	lea    0x22670(%rip),%rdx        # 299da <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a2>
    736a:	48 89 c6             	mov    %rax,%rsi
    736d:	48 89 df             	mov    %rbx,%rdi
    7370:	e8 fb 31 00 00       	call   a570 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    7375:	90                   	nop
    7376:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    737a:	48 89 c7             	mov    %rax,%rdi
    737d:	e8 6c 2f 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    7382:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7386:	48 89 c7             	mov    %rax,%rdi
    7389:	e8 60 2f 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    738e:	e9 09 04 00 00       	jmp    779c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuccess: return "Success";
    7393:	48 89 c3             	mov    %rax,%rbx
    7396:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    739a:	48 89 c7             	mov    %rax,%rdi
    739d:	e8 ce de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    73a2:	48 89 d8             	mov    %rbx,%rax
    73a5:	48 89 c7             	mov    %rax,%rdi
    73a8:	e8 f3 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eNotReady: return "NotReady";
    73ad:	48 89 c3             	mov    %rax,%rbx
    73b0:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    73b4:	48 89 c7             	mov    %rax,%rdi
    73b7:	e8 b4 de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    73bc:	48 89 d8             	mov    %rbx,%rax
    73bf:	48 89 c7             	mov    %rax,%rdi
    73c2:	e8 d9 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eTimeout: return "Timeout";
    73c7:	48 89 c3             	mov    %rax,%rbx
    73ca:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    73ce:	48 89 c7             	mov    %rax,%rdi
    73d1:	e8 9a de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    73d6:	48 89 d8             	mov    %rbx,%rax
    73d9:	48 89 c7             	mov    %rax,%rdi
    73dc:	e8 bf df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eEventSet: return "EventSet";
    73e1:	48 89 c3             	mov    %rax,%rbx
    73e4:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    73e8:	48 89 c7             	mov    %rax,%rdi
    73eb:	e8 80 de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    73f0:	48 89 d8             	mov    %rbx,%rax
    73f3:	48 89 c7             	mov    %rax,%rdi
    73f6:	e8 a5 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eEventReset: return "EventReset";
    73fb:	48 89 c3             	mov    %rax,%rbx
    73fe:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    7402:	48 89 c7             	mov    %rax,%rdi
    7405:	e8 66 de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    740a:	48 89 d8             	mov    %rbx,%rax
    740d:	48 89 c7             	mov    %rax,%rdi
    7410:	e8 8b df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eIncomplete: return "Incomplete";
    7415:	48 89 c3             	mov    %rax,%rbx
    7418:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    741c:	48 89 c7             	mov    %rax,%rdi
    741f:	e8 4c de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7424:	48 89 d8             	mov    %rbx,%rax
    7427:	48 89 c7             	mov    %rax,%rdi
    742a:	e8 71 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    742f:	48 89 c3             	mov    %rax,%rbx
    7432:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    7436:	48 89 c7             	mov    %rax,%rdi
    7439:	e8 32 de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    743e:	48 89 d8             	mov    %rbx,%rax
    7441:	48 89 c7             	mov    %rax,%rdi
    7444:	e8 57 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    7449:	48 89 c3             	mov    %rax,%rbx
    744c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7450:	48 89 c7             	mov    %rax,%rdi
    7453:	e8 18 de ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7458:	48 89 d8             	mov    %rbx,%rax
    745b:	48 89 c7             	mov    %rax,%rdi
    745e:	e8 3d df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    7463:	48 89 c3             	mov    %rax,%rbx
    7466:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    746a:	48 89 c7             	mov    %rax,%rdi
    746d:	e8 fe dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7472:	48 89 d8             	mov    %rbx,%rax
    7475:	48 89 c7             	mov    %rax,%rdi
    7478:	e8 23 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    747d:	48 89 c3             	mov    %rax,%rbx
    7480:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    7484:	48 89 c7             	mov    %rax,%rdi
    7487:	e8 e4 dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    748c:	48 89 d8             	mov    %rbx,%rax
    748f:	48 89 c7             	mov    %rax,%rdi
    7492:	e8 09 df ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    7497:	48 89 c3             	mov    %rax,%rbx
    749a:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    749e:	48 89 c7             	mov    %rax,%rdi
    74a1:	e8 ca dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    74a6:	48 89 d8             	mov    %rbx,%rax
    74a9:	48 89 c7             	mov    %rax,%rdi
    74ac:	e8 ef de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    74b1:	48 89 c3             	mov    %rax,%rbx
    74b4:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    74b8:	48 89 c7             	mov    %rax,%rdi
    74bb:	e8 b0 dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    74c0:	48 89 d8             	mov    %rbx,%rax
    74c3:	48 89 c7             	mov    %rax,%rdi
    74c6:	e8 d5 de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    74cb:	48 89 c3             	mov    %rax,%rbx
    74ce:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    74d2:	48 89 c7             	mov    %rax,%rdi
    74d5:	e8 96 dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    74da:	48 89 d8             	mov    %rbx,%rax
    74dd:	48 89 c7             	mov    %rax,%rdi
    74e0:	e8 bb de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    74e5:	48 89 c3             	mov    %rax,%rbx
    74e8:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    74ec:	48 89 c7             	mov    %rax,%rdi
    74ef:	e8 7c dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    74f4:	48 89 d8             	mov    %rbx,%rax
    74f7:	48 89 c7             	mov    %rax,%rdi
    74fa:	e8 a1 de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    74ff:	48 89 c3             	mov    %rax,%rbx
    7502:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    7506:	48 89 c7             	mov    %rax,%rdi
    7509:	e8 62 dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    750e:	48 89 d8             	mov    %rbx,%rax
    7511:	48 89 c7             	mov    %rax,%rdi
    7514:	e8 87 de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    7519:	48 89 c3             	mov    %rax,%rbx
    751c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7520:	48 89 c7             	mov    %rax,%rdi
    7523:	e8 48 dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7528:	48 89 d8             	mov    %rbx,%rax
    752b:	48 89 c7             	mov    %rax,%rdi
    752e:	e8 6d de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    7533:	48 89 c3             	mov    %rax,%rbx
    7536:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    753a:	48 89 c7             	mov    %rax,%rdi
    753d:	e8 2e dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7542:	48 89 d8             	mov    %rbx,%rax
    7545:	48 89 c7             	mov    %rax,%rdi
    7548:	e8 53 de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    754d:	48 89 c3             	mov    %rax,%rbx
    7550:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    7554:	48 89 c7             	mov    %rax,%rdi
    7557:	e8 14 dd ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    755c:	48 89 d8             	mov    %rbx,%rax
    755f:	48 89 c7             	mov    %rax,%rdi
    7562:	e8 39 de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorUnknown: return "ErrorUnknown";
    7567:	48 89 c3             	mov    %rax,%rbx
    756a:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    756e:	48 89 c7             	mov    %rax,%rdi
    7571:	e8 fa dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7576:	48 89 d8             	mov    %rbx,%rax
    7579:	48 89 c7             	mov    %rax,%rdi
    757c:	e8 1f de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    7581:	48 89 c3             	mov    %rax,%rbx
    7584:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    7588:	48 89 c7             	mov    %rax,%rdi
    758b:	e8 e0 dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7590:	48 89 d8             	mov    %rbx,%rax
    7593:	48 89 c7             	mov    %rax,%rdi
    7596:	e8 05 de ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    759b:	48 89 c3             	mov    %rax,%rbx
    759e:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    75a2:	48 89 c7             	mov    %rax,%rdi
    75a5:	e8 c6 dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    75aa:	48 89 d8             	mov    %rbx,%rax
    75ad:	48 89 c7             	mov    %rax,%rdi
    75b0:	e8 eb dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    75b5:	48 89 c3             	mov    %rax,%rbx
    75b8:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    75bc:	48 89 c7             	mov    %rax,%rdi
    75bf:	e8 ac dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    75c4:	48 89 d8             	mov    %rbx,%rax
    75c7:	48 89 c7             	mov    %rax,%rdi
    75ca:	e8 d1 dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    75cf:	48 89 c3             	mov    %rax,%rbx
    75d2:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    75d6:	48 89 c7             	mov    %rax,%rdi
    75d9:	e8 92 dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    75de:	48 89 d8             	mov    %rbx,%rax
    75e1:	48 89 c7             	mov    %rax,%rdi
    75e4:	e8 b7 dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    75e9:	48 89 c3             	mov    %rax,%rbx
    75ec:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    75f0:	48 89 c7             	mov    %rax,%rdi
    75f3:	e8 78 dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    75f8:	48 89 d8             	mov    %rbx,%rax
    75fb:	48 89 c7             	mov    %rax,%rdi
    75fe:	e8 9d dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    7603:	48 89 c3             	mov    %rax,%rbx
    7606:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    760a:	48 89 c7             	mov    %rax,%rdi
    760d:	e8 5e dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7612:	48 89 d8             	mov    %rbx,%rax
    7615:	48 89 c7             	mov    %rax,%rdi
    7618:	e8 83 dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    761d:	48 89 c3             	mov    %rax,%rbx
    7620:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    7624:	48 89 c7             	mov    %rax,%rdi
    7627:	e8 44 dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    762c:	48 89 d8             	mov    %rbx,%rax
    762f:	48 89 c7             	mov    %rax,%rdi
    7632:	e8 69 dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    7637:	48 89 c3             	mov    %rax,%rbx
    763a:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    763e:	48 89 c7             	mov    %rax,%rdi
    7641:	e8 2a dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7646:	48 89 d8             	mov    %rbx,%rax
    7649:	48 89 c7             	mov    %rax,%rdi
    764c:	e8 4f dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    7651:	48 89 c3             	mov    %rax,%rbx
    7654:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    7658:	48 89 c7             	mov    %rax,%rdi
    765b:	e8 10 dc ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7660:	48 89 d8             	mov    %rbx,%rax
    7663:	48 89 c7             	mov    %rax,%rdi
    7666:	e8 35 dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    766b:	48 89 c3             	mov    %rax,%rbx
    766e:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    7672:	48 89 c7             	mov    %rax,%rdi
    7675:	e8 f6 db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    767a:	48 89 d8             	mov    %rbx,%rax
    767d:	48 89 c7             	mov    %rax,%rdi
    7680:	e8 1b dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    7685:	48 89 c3             	mov    %rax,%rbx
    7688:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    768c:	48 89 c7             	mov    %rax,%rdi
    768f:	e8 dc db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7694:	48 89 d8             	mov    %rbx,%rax
    7697:	48 89 c7             	mov    %rax,%rdi
    769a:	e8 01 dd ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    769f:	48 89 c3             	mov    %rax,%rbx
    76a2:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    76a6:	48 89 c7             	mov    %rax,%rdi
    76a9:	e8 c2 db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    76ae:	48 89 d8             	mov    %rbx,%rax
    76b1:	48 89 c7             	mov    %rax,%rdi
    76b4:	e8 e7 dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    76b9:	48 89 c3             	mov    %rax,%rbx
    76bc:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    76c0:	48 89 c7             	mov    %rax,%rdi
    76c3:	e8 a8 db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    76c8:	48 89 d8             	mov    %rbx,%rax
    76cb:	48 89 c7             	mov    %rax,%rdi
    76ce:	e8 cd dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    76d3:	48 89 c3             	mov    %rax,%rbx
    76d6:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    76da:	48 89 c7             	mov    %rax,%rdi
    76dd:	e8 8e db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    76e2:	48 89 d8             	mov    %rbx,%rax
    76e5:	48 89 c7             	mov    %rax,%rdi
    76e8:	e8 b3 dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    76ed:	48 89 c3             	mov    %rax,%rbx
    76f0:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    76f4:	48 89 c7             	mov    %rax,%rdi
    76f7:	e8 74 db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    76fc:	48 89 d8             	mov    %rbx,%rax
    76ff:	48 89 c7             	mov    %rax,%rdi
    7702:	e8 99 dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7707:	48 89 c3             	mov    %rax,%rbx
    770a:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    770e:	48 89 c7             	mov    %rax,%rdi
    7711:	e8 5a db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7716:	48 89 d8             	mov    %rbx,%rax
    7719:	48 89 c7             	mov    %rax,%rdi
    771c:	e8 7f dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    7721:	48 89 c3             	mov    %rax,%rbx
    7724:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7728:	48 89 c7             	mov    %rax,%rdi
    772b:	e8 40 db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7730:	48 89 d8             	mov    %rbx,%rax
    7733:	48 89 c7             	mov    %rax,%rdi
    7736:	e8 65 dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    773b:	48 89 c3             	mov    %rax,%rbx
    773e:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    7742:	48 89 c7             	mov    %rax,%rdi
    7745:	e8 26 db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    774a:	48 89 d8             	mov    %rbx,%rax
    774d:	48 89 c7             	mov    %rax,%rdi
    7750:	e8 4b dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    7755:	48 89 c3             	mov    %rax,%rbx
    7758:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    775c:	48 89 c7             	mov    %rax,%rdi
    775f:	e8 0c db ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    7764:	48 89 d8             	mov    %rbx,%rax
    7767:	48 89 c7             	mov    %rax,%rdi
    776a:	e8 31 dc ff ff       	call   53a0 <_Unwind_Resume@plt>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    776f:	48 89 c3             	mov    %rax,%rbx
    7772:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7776:	48 89 c7             	mov    %rax,%rdi
    7779:	e8 70 2b 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    777e:	eb 03                	jmp    7783 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf17>
    7780:	48 89 c3             	mov    %rax,%rbx
    7783:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7787:	48 89 c7             	mov    %rax,%rdi
    778a:	e8 5f 2b 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    778f:	48 89 d8             	mov    %rbx,%rax
    7792:	eb 00                	jmp    7794 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
    7794:	48 89 c7             	mov    %rax,%rdi
    7797:	e8 04 dc ff ff       	call   53a0 <_Unwind_Resume@plt>
    }
    779c:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    77a3:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    77aa:	5b                   	pop    %rbx
    77ab:	41 5c                	pop    %r12
    77ad:	5d                   	pop    %rbp
    77ae:	c3                   	ret
    77af:	90                   	nop

00000000000077b0 <_ZN2vk5ErrorC1Ev>:
    Error() VULKAN_HPP_NOEXCEPT                = default;
    77b0:	55                   	push   %rbp
    77b1:	48 89 e5             	mov    %rsp,%rbp
    77b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77b8:	48 8d 15 69 a2 03 00 	lea    0x3a269(%rip),%rdx        # 41a28 <_ZTVN2vk5ErrorE+0x10>
    77bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77c3:	48 89 10             	mov    %rdx,(%rax)
    77c6:	90                   	nop
    77c7:	5d                   	pop    %rbp
    77c8:	c3                   	ret
    77c9:	90                   	nop

00000000000077ca <_ZN2vk5ErrorD1Ev>:
    virtual ~Error() VULKAN_HPP_NOEXCEPT       = default;
    77ca:	55                   	push   %rbp
    77cb:	48 89 e5             	mov    %rsp,%rbp
    77ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77d2:	48 8d 15 4f a2 03 00 	lea    0x3a24f(%rip),%rdx        # 41a28 <_ZTVN2vk5ErrorE+0x10>
    77d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77dd:	48 89 10             	mov    %rdx,(%rax)
    77e0:	90                   	nop
    77e1:	5d                   	pop    %rbp
    77e2:	c3                   	ret
    77e3:	90                   	nop

00000000000077e4 <_ZN2vk5ErrorD0Ev>:
    77e4:	55                   	push   %rbp
    77e5:	48 89 e5             	mov    %rsp,%rbp
    77e8:	48 83 ec 10          	sub    $0x10,%rsp
    77ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77f4:	48 89 c7             	mov    %rax,%rdi
    77f7:	e8 ce ff ff ff       	call   77ca <_ZN2vk5ErrorD1Ev>
    77fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7800:	be 08 00 00 00       	mov    $0x8,%esi
    7805:	48 89 c7             	mov    %rax,%rdi
    7808:	e8 23 da ff ff       	call   5230 <_ZdlPvm@plt>
    780d:	c9                   	leave
    780e:	c3                   	ret
    780f:	90                   	nop

0000000000007810 <_ZN2vk11SystemErrorC1ESt10error_code>:
    SystemError( std::error_code ec ) : Error(), std::system_error( ec ) {}
    7810:	55                   	push   %rbp
    7811:	48 89 e5             	mov    %rsp,%rbp
    7814:	53                   	push   %rbx
    7815:	48 83 ec 28          	sub    $0x28,%rsp
    7819:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    781d:	48 89 d1             	mov    %rdx,%rcx
    7820:	48 89 f0             	mov    %rsi,%rax
    7823:	48 89 fa             	mov    %rdi,%rdx
    7826:	48 89 ca             	mov    %rcx,%rdx
    7829:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    782d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7835:	48 89 c7             	mov    %rax,%rdi
    7838:	e8 73 ff ff ff       	call   77b0 <_ZN2vk5ErrorC1Ev>
    783d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7841:	48 8d 48 08          	lea    0x8(%rax),%rcx
    7845:	8b 55 d0             	mov    -0x30(%rbp),%edx
    7848:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    784c:	89 d6                	mov    %edx,%esi
    784e:	48 89 c2             	mov    %rax,%rdx
    7851:	48 89 cf             	mov    %rcx,%rdi
    7854:	e8 4d eb ff ff       	call   63a6 <_ZNSt12system_errorC1ESt10error_code>
    7859:	48 8d 15 b0 a0 03 00 	lea    0x3a0b0(%rip),%rdx        # 41910 <_ZTVN2vk11SystemErrorE+0x10>
    7860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7864:	48 89 10             	mov    %rdx,(%rax)
    7867:	48 8d 15 ca a0 03 00 	lea    0x3a0ca(%rip),%rdx        # 41938 <_ZTVN2vk11SystemErrorE+0x38>
    786e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7872:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7876:	eb 1a                	jmp    7892 <_ZN2vk11SystemErrorC1ESt10error_code+0x82>
    7878:	48 89 c3             	mov    %rax,%rbx
    787b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    787f:	48 89 c7             	mov    %rax,%rdi
    7882:	e8 43 ff ff ff       	call   77ca <_ZN2vk5ErrorD1Ev>
    7887:	48 89 d8             	mov    %rbx,%rax
    788a:	48 89 c7             	mov    %rax,%rdi
    788d:	e8 0e db ff ff       	call   53a0 <_Unwind_Resume@plt>
    7892:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7896:	c9                   	leave
    7897:	c3                   	ret

0000000000007898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>:
    SystemError( std::error_code ec, char const * what ) : Error(), std::system_error( ec, what ) {}
    7898:	55                   	push   %rbp
    7899:	48 89 e5             	mov    %rsp,%rbp
    789c:	53                   	push   %rbx
    789d:	48 83 ec 28          	sub    $0x28,%rsp
    78a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78a5:	89 f0                	mov    %esi,%eax
    78a7:	48 89 d6             	mov    %rdx,%rsi
    78aa:	48 89 f2             	mov    %rsi,%rdx
    78ad:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    78b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    78b5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    78b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78bd:	48 89 c7             	mov    %rax,%rdi
    78c0:	e8 eb fe ff ff       	call   77b0 <_ZN2vk5ErrorC1Ev>
    78c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78c9:	48 8d 78 08          	lea    0x8(%rax),%rdi
    78cd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    78d1:	8b 55 d0             	mov    -0x30(%rbp),%edx
    78d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78d8:	89 d6                	mov    %edx,%esi
    78da:	48 89 c2             	mov    %rax,%rdx
    78dd:	e8 5c eb ff ff       	call   643e <_ZNSt12system_errorC1ESt10error_codePKc>
    78e2:	48 8d 15 27 a0 03 00 	lea    0x3a027(%rip),%rdx        # 41910 <_ZTVN2vk11SystemErrorE+0x10>
    78e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78ed:	48 89 10             	mov    %rdx,(%rax)
    78f0:	48 8d 15 41 a0 03 00 	lea    0x3a041(%rip),%rdx        # 41938 <_ZTVN2vk11SystemErrorE+0x38>
    78f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78fb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    78ff:	eb 1a                	jmp    791b <_ZN2vk11SystemErrorC1ESt10error_codePKc+0x83>
    7901:	48 89 c3             	mov    %rax,%rbx
    7904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7908:	48 89 c7             	mov    %rax,%rdi
    790b:	e8 ba fe ff ff       	call   77ca <_ZN2vk5ErrorD1Ev>
    7910:	48 89 d8             	mov    %rbx,%rax
    7913:	48 89 c7             	mov    %rax,%rdi
    7916:	e8 85 da ff ff       	call   53a0 <_Unwind_Resume@plt>
    791b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    791f:	c9                   	leave
    7920:	c3                   	ret
    7921:	90                   	nop

0000000000007922 <_ZNK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    7922:	55                   	push   %rbp
    7923:	48 89 e5             	mov    %rsp,%rbp
    7926:	48 83 ec 10          	sub    $0x10,%rsp
    792a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::system_error::what();
    792e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7932:	48 83 c0 08          	add    $0x8,%rax
    7936:	48 89 c7             	mov    %rax,%rdi
    7939:	e8 a2 d9 ff ff       	call   52e0 <_ZNKSt13runtime_error4whatEv@plt>
    }
    793e:	c9                   	leave
    793f:	c3                   	ret

0000000000007940 <_ZThn8_NK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    7940:	48 83 ef 08          	sub    $0x8,%rdi
    7944:	eb dc                	jmp    7922 <_ZNK2vk11SystemError4whatEv>

0000000000007946 <_ZN2vk11SystemErrorD1Ev>:
  class SystemError
    7946:	55                   	push   %rbp
    7947:	48 89 e5             	mov    %rsp,%rbp
    794a:	48 83 ec 10          	sub    $0x10,%rsp
    794e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7952:	48 8d 15 b7 9f 03 00 	lea    0x39fb7(%rip),%rdx        # 41910 <_ZTVN2vk11SystemErrorE+0x10>
    7959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    795d:	48 89 10             	mov    %rdx,(%rax)
    7960:	48 8d 15 d1 9f 03 00 	lea    0x39fd1(%rip),%rdx        # 41938 <_ZTVN2vk11SystemErrorE+0x38>
    7967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    796b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    796f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7973:	48 83 c0 08          	add    $0x8,%rax
    7977:	48 89 c7             	mov    %rax,%rdi
    797a:	e8 41 d8 ff ff       	call   51c0 <_ZNSt12system_errorD2Ev@plt>
    797f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7983:	48 89 c7             	mov    %rax,%rdi
    7986:	e8 3f fe ff ff       	call   77ca <_ZN2vk5ErrorD1Ev>
    798b:	90                   	nop
    798c:	c9                   	leave
    798d:	c3                   	ret

000000000000798e <_ZThn8_N2vk11SystemErrorD1Ev>:
    798e:	48 83 ef 08          	sub    $0x8,%rdi
    7992:	eb b2                	jmp    7946 <_ZN2vk11SystemErrorD1Ev>

0000000000007994 <_ZN2vk11SystemErrorD0Ev>:
    7994:	55                   	push   %rbp
    7995:	48 89 e5             	mov    %rsp,%rbp
    7998:	48 83 ec 10          	sub    $0x10,%rsp
    799c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79a4:	48 89 c7             	mov    %rax,%rdi
    79a7:	e8 9a ff ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    79ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79b0:	be 28 00 00 00       	mov    $0x28,%esi
    79b5:	48 89 c7             	mov    %rax,%rdi
    79b8:	e8 73 d8 ff ff       	call   5230 <_ZdlPvm@plt>
    79bd:	c9                   	leave
    79be:	c3                   	ret

00000000000079bf <_ZThn8_N2vk11SystemErrorD0Ev>:
    79bf:	48 83 ef 08          	sub    $0x8,%rdi
    79c3:	eb cf                	jmp    7994 <_ZN2vk11SystemErrorD0Ev>
    79c5:	90                   	nop

00000000000079c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>:
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    79c6:	55                   	push   %rbp
    79c7:	48 89 e5             	mov    %rsp,%rbp
    79ca:	53                   	push   %rbx
    79cb:	48 83 ec 38          	sub    $0x38,%rsp
    79cf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    79d3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    79d7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    79db:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    79e2:	0f b6 05 6f a9 03 00 	movzbl 0x3a96f(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    79e9:	84 c0                	test   %al,%al
    79eb:	0f 94 c0             	sete   %al
    79ee:	84 c0                	test   %al,%al
    79f0:	74 4a                	je     7a3c <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    79f2:	48 8d 05 5f a9 03 00 	lea    0x3a95f(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    79f9:	48 89 c7             	mov    %rax,%rdi
    79fc:	e8 bf d9 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7a01:	85 c0                	test   %eax,%eax
    7a03:	0f 95 c0             	setne  %al
    7a06:	84 c0                	test   %al,%al
    7a08:	74 32                	je     7a3c <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    7a0a:	48 8d 05 e7 a7 03 00 	lea    0x3a7e7(%rip),%rax        # 421f8 <__dso_handle>
    7a11:	48 89 c2             	mov    %rax,%rdx
    7a14:	48 8d 05 e5 a7 03 00 	lea    0x3a7e5(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7a1b:	48 89 c6             	mov    %rax,%rsi
    7a1e:	48 8d 05 6f 52 00 00 	lea    0x526f(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 a3 d7 ff ff       	call   51d0 <__cxa_atexit@plt>
    7a2d:	48 8d 05 24 a9 03 00 	lea    0x3a924(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a34:	48 89 c7             	mov    %rax,%rdi
    7a37:	e8 c4 d6 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7a3c:	48 8d 15 bd a7 03 00 	lea    0x3a7bd(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7a43:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7a46:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7a4a:	89 ce                	mov    %ecx,%esi
    7a4c:	48 89 c7             	mov    %rax,%rdi
    7a4f:	e8 b4 e8 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7a54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a58:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    7a5c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7a60:	48 89 c6             	mov    %rax,%rsi
    7a63:	48 89 d7             	mov    %rdx,%rdi
    7a66:	48 89 d0             	mov    %rdx,%rax
    7a69:	48 89 c2             	mov    %rax,%rdx
    7a6c:	48 89 df             	mov    %rbx,%rdi
    7a6f:	e8 24 fe ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7a74:	48 8d 15 45 9e 03 00 	lea    0x39e45(%rip),%rdx        # 418c0 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    7a7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a7f:	48 89 10             	mov    %rdx,(%rax)
    7a82:	48 8d 15 5f 9e 03 00 	lea    0x39e5f(%rip),%rdx        # 418e8 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    7a89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a8d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7a91:	90                   	nop
    7a92:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a96:	c9                   	leave
    7a97:	c3                   	ret

0000000000007a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>:
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7a98:	55                   	push   %rbp
    7a99:	48 89 e5             	mov    %rsp,%rbp
    7a9c:	53                   	push   %rbx
    7a9d:	48 83 ec 38          	sub    $0x38,%rsp
    7aa1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7aa5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7aa9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7aad:	c7 45 ec fe ff ff ff 	movl   $0xfffffffe,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7ab4:	0f b6 05 9d a8 03 00 	movzbl 0x3a89d(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7abb:	84 c0                	test   %al,%al
    7abd:	0f 94 c0             	sete   %al
    7ac0:	84 c0                	test   %al,%al
    7ac2:	74 4a                	je     7b0e <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7ac4:	48 8d 05 8d a8 03 00 	lea    0x3a88d(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7acb:	48 89 c7             	mov    %rax,%rdi
    7ace:	e8 ed d8 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7ad3:	85 c0                	test   %eax,%eax
    7ad5:	0f 95 c0             	setne  %al
    7ad8:	84 c0                	test   %al,%al
    7ada:	74 32                	je     7b0e <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7adc:	48 8d 05 15 a7 03 00 	lea    0x3a715(%rip),%rax        # 421f8 <__dso_handle>
    7ae3:	48 89 c2             	mov    %rax,%rdx
    7ae6:	48 8d 05 13 a7 03 00 	lea    0x3a713(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7aed:	48 89 c6             	mov    %rax,%rsi
    7af0:	48 8d 05 9d 51 00 00 	lea    0x519d(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7af7:	48 89 c7             	mov    %rax,%rdi
    7afa:	e8 d1 d6 ff ff       	call   51d0 <__cxa_atexit@plt>
    7aff:	48 8d 05 52 a8 03 00 	lea    0x3a852(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b06:	48 89 c7             	mov    %rax,%rdi
    7b09:	e8 f2 d5 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7b0e:	48 8d 15 eb a6 03 00 	lea    0x3a6eb(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7b15:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7b18:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7b1c:	89 ce                	mov    %ecx,%esi
    7b1e:	48 89 c7             	mov    %rax,%rdi
    7b21:	e8 e2 e7 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7b26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b2a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7b2e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7b32:	48 89 c6             	mov    %rax,%rsi
    7b35:	48 89 d7             	mov    %rdx,%rdi
    7b38:	48 89 d0             	mov    %rdx,%rax
    7b3b:	48 89 c2             	mov    %rax,%rdx
    7b3e:	48 89 df             	mov    %rbx,%rdi
    7b41:	e8 52 fd ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7b46:	48 8d 15 23 9d 03 00 	lea    0x39d23(%rip),%rdx        # 41870 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    7b4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b51:	48 89 10             	mov    %rdx,(%rax)
    7b54:	48 8d 15 3d 9d 03 00 	lea    0x39d3d(%rip),%rdx        # 41898 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    7b5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b5f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7b63:	90                   	nop
    7b64:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b68:	c9                   	leave
    7b69:	c3                   	ret

0000000000007b6a <_ZN2vk25InitializationFailedErrorC1EPKc>:
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7b6a:	55                   	push   %rbp
    7b6b:	48 89 e5             	mov    %rsp,%rbp
    7b6e:	53                   	push   %rbx
    7b6f:	48 83 ec 38          	sub    $0x38,%rsp
    7b73:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7b77:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7b7b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7b7f:	c7 45 ec fd ff ff ff 	movl   $0xfffffffd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7b86:	0f b6 05 cb a7 03 00 	movzbl 0x3a7cb(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b8d:	84 c0                	test   %al,%al
    7b8f:	0f 94 c0             	sete   %al
    7b92:	84 c0                	test   %al,%al
    7b94:	74 4a                	je     7be0 <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7b96:	48 8d 05 bb a7 03 00 	lea    0x3a7bb(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b9d:	48 89 c7             	mov    %rax,%rdi
    7ba0:	e8 1b d8 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7ba5:	85 c0                	test   %eax,%eax
    7ba7:	0f 95 c0             	setne  %al
    7baa:	84 c0                	test   %al,%al
    7bac:	74 32                	je     7be0 <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7bae:	48 8d 05 43 a6 03 00 	lea    0x3a643(%rip),%rax        # 421f8 <__dso_handle>
    7bb5:	48 89 c2             	mov    %rax,%rdx
    7bb8:	48 8d 05 41 a6 03 00 	lea    0x3a641(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7bbf:	48 89 c6             	mov    %rax,%rsi
    7bc2:	48 8d 05 cb 50 00 00 	lea    0x50cb(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7bc9:	48 89 c7             	mov    %rax,%rdi
    7bcc:	e8 ff d5 ff ff       	call   51d0 <__cxa_atexit@plt>
    7bd1:	48 8d 05 80 a7 03 00 	lea    0x3a780(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bd8:	48 89 c7             	mov    %rax,%rdi
    7bdb:	e8 20 d5 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7be0:	48 8d 15 19 a6 03 00 	lea    0x3a619(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7be7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7bea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7bee:	89 ce                	mov    %ecx,%esi
    7bf0:	48 89 c7             	mov    %rax,%rdi
    7bf3:	e8 10 e7 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7bf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7bfc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7c00:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7c04:	48 89 c6             	mov    %rax,%rsi
    7c07:	48 89 d7             	mov    %rdx,%rdi
    7c0a:	48 89 d0             	mov    %rdx,%rax
    7c0d:	48 89 c2             	mov    %rax,%rdx
    7c10:	48 89 df             	mov    %rbx,%rdi
    7c13:	e8 80 fc ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7c18:	48 8d 15 01 9c 03 00 	lea    0x39c01(%rip),%rdx        # 41820 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    7c1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c23:	48 89 10             	mov    %rdx,(%rax)
    7c26:	48 8d 15 1b 9c 03 00 	lea    0x39c1b(%rip),%rdx        # 41848 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    7c2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c31:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7c35:	90                   	nop
    7c36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c3a:	c9                   	leave
    7c3b:	c3                   	ret

0000000000007c3c <_ZN2vk15DeviceLostErrorC1EPKc>:
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7c3c:	55                   	push   %rbp
    7c3d:	48 89 e5             	mov    %rsp,%rbp
    7c40:	53                   	push   %rbx
    7c41:	48 83 ec 38          	sub    $0x38,%rsp
    7c45:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7c49:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7c4d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7c51:	c7 45 ec fc ff ff ff 	movl   $0xfffffffc,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7c58:	0f b6 05 f9 a6 03 00 	movzbl 0x3a6f9(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c5f:	84 c0                	test   %al,%al
    7c61:	0f 94 c0             	sete   %al
    7c64:	84 c0                	test   %al,%al
    7c66:	74 4a                	je     7cb2 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7c68:	48 8d 05 e9 a6 03 00 	lea    0x3a6e9(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c6f:	48 89 c7             	mov    %rax,%rdi
    7c72:	e8 49 d7 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7c77:	85 c0                	test   %eax,%eax
    7c79:	0f 95 c0             	setne  %al
    7c7c:	84 c0                	test   %al,%al
    7c7e:	74 32                	je     7cb2 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7c80:	48 8d 05 71 a5 03 00 	lea    0x3a571(%rip),%rax        # 421f8 <__dso_handle>
    7c87:	48 89 c2             	mov    %rax,%rdx
    7c8a:	48 8d 05 6f a5 03 00 	lea    0x3a56f(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7c91:	48 89 c6             	mov    %rax,%rsi
    7c94:	48 8d 05 f9 4f 00 00 	lea    0x4ff9(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7c9b:	48 89 c7             	mov    %rax,%rdi
    7c9e:	e8 2d d5 ff ff       	call   51d0 <__cxa_atexit@plt>
    7ca3:	48 8d 05 ae a6 03 00 	lea    0x3a6ae(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7caa:	48 89 c7             	mov    %rax,%rdi
    7cad:	e8 4e d4 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7cb2:	48 8d 15 47 a5 03 00 	lea    0x3a547(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7cb9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7cbc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7cc0:	89 ce                	mov    %ecx,%esi
    7cc2:	48 89 c7             	mov    %rax,%rdi
    7cc5:	e8 3e e6 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7cca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7cce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7cd2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7cd6:	48 89 c6             	mov    %rax,%rsi
    7cd9:	48 89 d7             	mov    %rdx,%rdi
    7cdc:	48 89 d0             	mov    %rdx,%rax
    7cdf:	48 89 c2             	mov    %rax,%rdx
    7ce2:	48 89 df             	mov    %rbx,%rdi
    7ce5:	e8 ae fb ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7cea:	48 8d 15 df 9a 03 00 	lea    0x39adf(%rip),%rdx        # 417d0 <_ZTVN2vk15DeviceLostErrorE+0x10>
    7cf1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7cf5:	48 89 10             	mov    %rdx,(%rax)
    7cf8:	48 8d 15 f9 9a 03 00 	lea    0x39af9(%rip),%rdx        # 417f8 <_ZTVN2vk15DeviceLostErrorE+0x38>
    7cff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d03:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7d07:	90                   	nop
    7d08:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d0c:	c9                   	leave
    7d0d:	c3                   	ret

0000000000007d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>:
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7d0e:	55                   	push   %rbp
    7d0f:	48 89 e5             	mov    %rsp,%rbp
    7d12:	53                   	push   %rbx
    7d13:	48 83 ec 38          	sub    $0x38,%rsp
    7d17:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7d1b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7d1f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7d23:	c7 45 ec fb ff ff ff 	movl   $0xfffffffb,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7d2a:	0f b6 05 27 a6 03 00 	movzbl 0x3a627(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d31:	84 c0                	test   %al,%al
    7d33:	0f 94 c0             	sete   %al
    7d36:	84 c0                	test   %al,%al
    7d38:	74 4a                	je     7d84 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7d3a:	48 8d 05 17 a6 03 00 	lea    0x3a617(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d41:	48 89 c7             	mov    %rax,%rdi
    7d44:	e8 77 d6 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7d49:	85 c0                	test   %eax,%eax
    7d4b:	0f 95 c0             	setne  %al
    7d4e:	84 c0                	test   %al,%al
    7d50:	74 32                	je     7d84 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7d52:	48 8d 05 9f a4 03 00 	lea    0x3a49f(%rip),%rax        # 421f8 <__dso_handle>
    7d59:	48 89 c2             	mov    %rax,%rdx
    7d5c:	48 8d 05 9d a4 03 00 	lea    0x3a49d(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7d63:	48 89 c6             	mov    %rax,%rsi
    7d66:	48 8d 05 27 4f 00 00 	lea    0x4f27(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7d6d:	48 89 c7             	mov    %rax,%rdi
    7d70:	e8 5b d4 ff ff       	call   51d0 <__cxa_atexit@plt>
    7d75:	48 8d 05 dc a5 03 00 	lea    0x3a5dc(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d7c:	48 89 c7             	mov    %rax,%rdi
    7d7f:	e8 7c d3 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7d84:	48 8d 15 75 a4 03 00 	lea    0x3a475(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7d8b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7d8e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7d92:	89 ce                	mov    %ecx,%esi
    7d94:	48 89 c7             	mov    %rax,%rdi
    7d97:	e8 6c e5 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7d9c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7da0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7da4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7da8:	48 89 c6             	mov    %rax,%rsi
    7dab:	48 89 d7             	mov    %rdx,%rdi
    7dae:	48 89 d0             	mov    %rdx,%rax
    7db1:	48 89 c2             	mov    %rax,%rdx
    7db4:	48 89 df             	mov    %rbx,%rdi
    7db7:	e8 dc fa ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7dbc:	48 8d 15 bd 99 03 00 	lea    0x399bd(%rip),%rdx        # 41780 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    7dc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7dc7:	48 89 10             	mov    %rdx,(%rax)
    7dca:	48 8d 15 d7 99 03 00 	lea    0x399d7(%rip),%rdx        # 417a8 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    7dd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7dd5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7dd9:	90                   	nop
    7dda:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7dde:	c9                   	leave
    7ddf:	c3                   	ret

0000000000007de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>:
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7de0:	55                   	push   %rbp
    7de1:	48 89 e5             	mov    %rsp,%rbp
    7de4:	53                   	push   %rbx
    7de5:	48 83 ec 38          	sub    $0x38,%rsp
    7de9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7ded:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7df1:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7df5:	c7 45 ec fa ff ff ff 	movl   $0xfffffffa,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7dfc:	0f b6 05 55 a5 03 00 	movzbl 0x3a555(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e03:	84 c0                	test   %al,%al
    7e05:	0f 94 c0             	sete   %al
    7e08:	84 c0                	test   %al,%al
    7e0a:	74 4a                	je     7e56 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7e0c:	48 8d 05 45 a5 03 00 	lea    0x3a545(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e13:	48 89 c7             	mov    %rax,%rdi
    7e16:	e8 a5 d5 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7e1b:	85 c0                	test   %eax,%eax
    7e1d:	0f 95 c0             	setne  %al
    7e20:	84 c0                	test   %al,%al
    7e22:	74 32                	je     7e56 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7e24:	48 8d 05 cd a3 03 00 	lea    0x3a3cd(%rip),%rax        # 421f8 <__dso_handle>
    7e2b:	48 89 c2             	mov    %rax,%rdx
    7e2e:	48 8d 05 cb a3 03 00 	lea    0x3a3cb(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7e35:	48 89 c6             	mov    %rax,%rsi
    7e38:	48 8d 05 55 4e 00 00 	lea    0x4e55(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7e3f:	48 89 c7             	mov    %rax,%rdi
    7e42:	e8 89 d3 ff ff       	call   51d0 <__cxa_atexit@plt>
    7e47:	48 8d 05 0a a5 03 00 	lea    0x3a50a(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e4e:	48 89 c7             	mov    %rax,%rdi
    7e51:	e8 aa d2 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7e56:	48 8d 15 a3 a3 03 00 	lea    0x3a3a3(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7e5d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7e60:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7e64:	89 ce                	mov    %ecx,%esi
    7e66:	48 89 c7             	mov    %rax,%rdi
    7e69:	e8 9a e4 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7e6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7e72:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7e76:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7e7a:	48 89 c6             	mov    %rax,%rsi
    7e7d:	48 89 d7             	mov    %rdx,%rdi
    7e80:	48 89 d0             	mov    %rdx,%rax
    7e83:	48 89 c2             	mov    %rax,%rdx
    7e86:	48 89 df             	mov    %rbx,%rdi
    7e89:	e8 0a fa ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7e8e:	48 8d 15 9b 98 03 00 	lea    0x3989b(%rip),%rdx        # 41730 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    7e95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e99:	48 89 10             	mov    %rdx,(%rax)
    7e9c:	48 8d 15 b5 98 03 00 	lea    0x398b5(%rip),%rdx        # 41758 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    7ea3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ea7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7eab:	90                   	nop
    7eac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7eb0:	c9                   	leave
    7eb1:	c3                   	ret

0000000000007eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>:
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7eb2:	55                   	push   %rbp
    7eb3:	48 89 e5             	mov    %rsp,%rbp
    7eb6:	53                   	push   %rbx
    7eb7:	48 83 ec 38          	sub    $0x38,%rsp
    7ebb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7ebf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7ec3:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7ec7:	c7 45 ec f9 ff ff ff 	movl   $0xfffffff9,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7ece:	0f b6 05 83 a4 03 00 	movzbl 0x3a483(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ed5:	84 c0                	test   %al,%al
    7ed7:	0f 94 c0             	sete   %al
    7eda:	84 c0                	test   %al,%al
    7edc:	74 4a                	je     7f28 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7ede:	48 8d 05 73 a4 03 00 	lea    0x3a473(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ee5:	48 89 c7             	mov    %rax,%rdi
    7ee8:	e8 d3 d4 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7eed:	85 c0                	test   %eax,%eax
    7eef:	0f 95 c0             	setne  %al
    7ef2:	84 c0                	test   %al,%al
    7ef4:	74 32                	je     7f28 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7ef6:	48 8d 05 fb a2 03 00 	lea    0x3a2fb(%rip),%rax        # 421f8 <__dso_handle>
    7efd:	48 89 c2             	mov    %rax,%rdx
    7f00:	48 8d 05 f9 a2 03 00 	lea    0x3a2f9(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7f07:	48 89 c6             	mov    %rax,%rsi
    7f0a:	48 8d 05 83 4d 00 00 	lea    0x4d83(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7f11:	48 89 c7             	mov    %rax,%rdi
    7f14:	e8 b7 d2 ff ff       	call   51d0 <__cxa_atexit@plt>
    7f19:	48 8d 05 38 a4 03 00 	lea    0x3a438(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f20:	48 89 c7             	mov    %rax,%rdi
    7f23:	e8 d8 d1 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7f28:	48 8d 15 d1 a2 03 00 	lea    0x3a2d1(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7f2f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7f32:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7f36:	89 ce                	mov    %ecx,%esi
    7f38:	48 89 c7             	mov    %rax,%rdi
    7f3b:	e8 c8 e3 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7f40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f44:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7f48:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7f4c:	48 89 c6             	mov    %rax,%rsi
    7f4f:	48 89 d7             	mov    %rdx,%rdi
    7f52:	48 89 d0             	mov    %rdx,%rax
    7f55:	48 89 c2             	mov    %rax,%rdx
    7f58:	48 89 df             	mov    %rbx,%rdi
    7f5b:	e8 38 f9 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7f60:	48 8d 15 79 97 03 00 	lea    0x39779(%rip),%rdx        # 416e0 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    7f67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f6b:	48 89 10             	mov    %rdx,(%rax)
    7f6e:	48 8d 15 93 97 03 00 	lea    0x39793(%rip),%rdx        # 41708 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    7f75:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f79:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7f7d:	90                   	nop
    7f7e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f82:	c9                   	leave
    7f83:	c3                   	ret

0000000000007f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>:
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7f84:	55                   	push   %rbp
    7f85:	48 89 e5             	mov    %rsp,%rbp
    7f88:	53                   	push   %rbx
    7f89:	48 83 ec 38          	sub    $0x38,%rsp
    7f8d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7f91:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7f95:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7f99:	c7 45 ec f8 ff ff ff 	movl   $0xfffffff8,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7fa0:	0f b6 05 b1 a3 03 00 	movzbl 0x3a3b1(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7fa7:	84 c0                	test   %al,%al
    7fa9:	0f 94 c0             	sete   %al
    7fac:	84 c0                	test   %al,%al
    7fae:	74 4a                	je     7ffa <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7fb0:	48 8d 05 a1 a3 03 00 	lea    0x3a3a1(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7fb7:	48 89 c7             	mov    %rax,%rdi
    7fba:	e8 01 d4 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    7fbf:	85 c0                	test   %eax,%eax
    7fc1:	0f 95 c0             	setne  %al
    7fc4:	84 c0                	test   %al,%al
    7fc6:	74 32                	je     7ffa <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7fc8:	48 8d 05 29 a2 03 00 	lea    0x3a229(%rip),%rax        # 421f8 <__dso_handle>
    7fcf:	48 89 c2             	mov    %rax,%rdx
    7fd2:	48 8d 05 27 a2 03 00 	lea    0x3a227(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    7fd9:	48 89 c6             	mov    %rax,%rsi
    7fdc:	48 8d 05 b1 4c 00 00 	lea    0x4cb1(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    7fe3:	48 89 c7             	mov    %rax,%rdi
    7fe6:	e8 e5 d1 ff ff       	call   51d0 <__cxa_atexit@plt>
    7feb:	48 8d 05 66 a3 03 00 	lea    0x3a366(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ff2:	48 89 c7             	mov    %rax,%rdi
    7ff5:	e8 06 d1 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    7ffa:	48 8d 15 ff a1 03 00 	lea    0x3a1ff(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8001:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8004:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8008:	89 ce                	mov    %ecx,%esi
    800a:	48 89 c7             	mov    %rax,%rdi
    800d:	e8 f6 e2 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8012:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8016:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    801a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    801e:	48 89 c6             	mov    %rax,%rsi
    8021:	48 89 d7             	mov    %rdx,%rdi
    8024:	48 89 d0             	mov    %rdx,%rax
    8027:	48 89 c2             	mov    %rax,%rdx
    802a:	48 89 df             	mov    %rbx,%rdi
    802d:	e8 66 f8 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8032:	48 8d 15 57 96 03 00 	lea    0x39657(%rip),%rdx        # 41690 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    8039:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    803d:	48 89 10             	mov    %rdx,(%rax)
    8040:	48 8d 15 71 96 03 00 	lea    0x39671(%rip),%rdx        # 416b8 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    8047:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    804b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    804f:	90                   	nop
    8050:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8054:	c9                   	leave
    8055:	c3                   	ret

0000000000008056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>:
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    8056:	55                   	push   %rbp
    8057:	48 89 e5             	mov    %rsp,%rbp
    805a:	53                   	push   %rbx
    805b:	48 83 ec 38          	sub    $0x38,%rsp
    805f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8063:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8067:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    806b:	c7 45 ec f7 ff ff ff 	movl   $0xfffffff7,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8072:	0f b6 05 df a2 03 00 	movzbl 0x3a2df(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8079:	84 c0                	test   %al,%al
    807b:	0f 94 c0             	sete   %al
    807e:	84 c0                	test   %al,%al
    8080:	74 4a                	je     80cc <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    8082:	48 8d 05 cf a2 03 00 	lea    0x3a2cf(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8089:	48 89 c7             	mov    %rax,%rdi
    808c:	e8 2f d3 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8091:	85 c0                	test   %eax,%eax
    8093:	0f 95 c0             	setne  %al
    8096:	84 c0                	test   %al,%al
    8098:	74 32                	je     80cc <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    809a:	48 8d 05 57 a1 03 00 	lea    0x3a157(%rip),%rax        # 421f8 <__dso_handle>
    80a1:	48 89 c2             	mov    %rax,%rdx
    80a4:	48 8d 05 55 a1 03 00 	lea    0x3a155(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    80ab:	48 89 c6             	mov    %rax,%rsi
    80ae:	48 8d 05 df 4b 00 00 	lea    0x4bdf(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    80b5:	48 89 c7             	mov    %rax,%rdi
    80b8:	e8 13 d1 ff ff       	call   51d0 <__cxa_atexit@plt>
    80bd:	48 8d 05 94 a2 03 00 	lea    0x3a294(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    80c4:	48 89 c7             	mov    %rax,%rdi
    80c7:	e8 34 d0 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    80cc:	48 8d 15 2d a1 03 00 	lea    0x3a12d(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    80d3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    80d6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    80da:	89 ce                	mov    %ecx,%esi
    80dc:	48 89 c7             	mov    %rax,%rdi
    80df:	e8 24 e2 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    80e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    80e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    80ec:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    80f0:	48 89 c6             	mov    %rax,%rsi
    80f3:	48 89 d7             	mov    %rdx,%rdi
    80f6:	48 89 d0             	mov    %rdx,%rax
    80f9:	48 89 c2             	mov    %rax,%rdx
    80fc:	48 89 df             	mov    %rbx,%rdi
    80ff:	e8 94 f7 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8104:	48 8d 15 35 95 03 00 	lea    0x39535(%rip),%rdx        # 41640 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    810b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    810f:	48 89 10             	mov    %rdx,(%rax)
    8112:	48 8d 15 4f 95 03 00 	lea    0x3954f(%rip),%rdx        # 41668 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    8119:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    811d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8121:	90                   	nop
    8122:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8126:	c9                   	leave
    8127:	c3                   	ret

0000000000008128 <_ZN2vk19TooManyObjectsErrorC1EPKc>:
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    8128:	55                   	push   %rbp
    8129:	48 89 e5             	mov    %rsp,%rbp
    812c:	53                   	push   %rbx
    812d:	48 83 ec 38          	sub    $0x38,%rsp
    8131:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8135:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8139:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    813d:	c7 45 ec f6 ff ff ff 	movl   $0xfffffff6,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8144:	0f b6 05 0d a2 03 00 	movzbl 0x3a20d(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    814b:	84 c0                	test   %al,%al
    814d:	0f 94 c0             	sete   %al
    8150:	84 c0                	test   %al,%al
    8152:	74 4a                	je     819e <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    8154:	48 8d 05 fd a1 03 00 	lea    0x3a1fd(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    815b:	48 89 c7             	mov    %rax,%rdi
    815e:	e8 5d d2 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8163:	85 c0                	test   %eax,%eax
    8165:	0f 95 c0             	setne  %al
    8168:	84 c0                	test   %al,%al
    816a:	74 32                	je     819e <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    816c:	48 8d 05 85 a0 03 00 	lea    0x3a085(%rip),%rax        # 421f8 <__dso_handle>
    8173:	48 89 c2             	mov    %rax,%rdx
    8176:	48 8d 05 83 a0 03 00 	lea    0x3a083(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    817d:	48 89 c6             	mov    %rax,%rsi
    8180:	48 8d 05 0d 4b 00 00 	lea    0x4b0d(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8187:	48 89 c7             	mov    %rax,%rdi
    818a:	e8 41 d0 ff ff       	call   51d0 <__cxa_atexit@plt>
    818f:	48 8d 05 c2 a1 03 00 	lea    0x3a1c2(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8196:	48 89 c7             	mov    %rax,%rdi
    8199:	e8 62 cf ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    819e:	48 8d 15 5b a0 03 00 	lea    0x3a05b(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    81a5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    81a8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    81ac:	89 ce                	mov    %ecx,%esi
    81ae:	48 89 c7             	mov    %rax,%rdi
    81b1:	e8 52 e1 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    81b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    81be:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    81c2:	48 89 c6             	mov    %rax,%rsi
    81c5:	48 89 d7             	mov    %rdx,%rdi
    81c8:	48 89 d0             	mov    %rdx,%rax
    81cb:	48 89 c2             	mov    %rax,%rdx
    81ce:	48 89 df             	mov    %rbx,%rdi
    81d1:	e8 c2 f6 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    81d6:	48 8d 15 13 94 03 00 	lea    0x39413(%rip),%rdx        # 415f0 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    81dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    81e1:	48 89 10             	mov    %rdx,(%rax)
    81e4:	48 8d 15 2d 94 03 00 	lea    0x3942d(%rip),%rdx        # 41618 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    81eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    81ef:	48 89 50 08          	mov    %rdx,0x8(%rax)
    81f3:	90                   	nop
    81f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81f8:	c9                   	leave
    81f9:	c3                   	ret

00000000000081fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>:
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    81fa:	55                   	push   %rbp
    81fb:	48 89 e5             	mov    %rsp,%rbp
    81fe:	53                   	push   %rbx
    81ff:	48 83 ec 38          	sub    $0x38,%rsp
    8203:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8207:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    820b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    820f:	c7 45 ec f5 ff ff ff 	movl   $0xfffffff5,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8216:	0f b6 05 3b a1 03 00 	movzbl 0x3a13b(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    821d:	84 c0                	test   %al,%al
    821f:	0f 94 c0             	sete   %al
    8222:	84 c0                	test   %al,%al
    8224:	74 4a                	je     8270 <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    8226:	48 8d 05 2b a1 03 00 	lea    0x3a12b(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    822d:	48 89 c7             	mov    %rax,%rdi
    8230:	e8 8b d1 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8235:	85 c0                	test   %eax,%eax
    8237:	0f 95 c0             	setne  %al
    823a:	84 c0                	test   %al,%al
    823c:	74 32                	je     8270 <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    823e:	48 8d 05 b3 9f 03 00 	lea    0x39fb3(%rip),%rax        # 421f8 <__dso_handle>
    8245:	48 89 c2             	mov    %rax,%rdx
    8248:	48 8d 05 b1 9f 03 00 	lea    0x39fb1(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    824f:	48 89 c6             	mov    %rax,%rsi
    8252:	48 8d 05 3b 4a 00 00 	lea    0x4a3b(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8259:	48 89 c7             	mov    %rax,%rdi
    825c:	e8 6f cf ff ff       	call   51d0 <__cxa_atexit@plt>
    8261:	48 8d 05 f0 a0 03 00 	lea    0x3a0f0(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8268:	48 89 c7             	mov    %rax,%rdi
    826b:	e8 90 ce ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8270:	48 8d 15 89 9f 03 00 	lea    0x39f89(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8277:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    827a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    827e:	89 ce                	mov    %ecx,%esi
    8280:	48 89 c7             	mov    %rax,%rdi
    8283:	e8 80 e0 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8288:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    828c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    8290:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8294:	48 89 c6             	mov    %rax,%rsi
    8297:	48 89 d7             	mov    %rdx,%rdi
    829a:	48 89 d0             	mov    %rdx,%rax
    829d:	48 89 c2             	mov    %rax,%rdx
    82a0:	48 89 df             	mov    %rbx,%rdi
    82a3:	e8 f0 f5 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    82a8:	48 8d 15 f1 92 03 00 	lea    0x392f1(%rip),%rdx        # 415a0 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    82af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    82b3:	48 89 10             	mov    %rdx,(%rax)
    82b6:	48 8d 15 0b 93 03 00 	lea    0x3930b(%rip),%rdx        # 415c8 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    82bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    82c1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    82c5:	90                   	nop
    82c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    82ca:	c9                   	leave
    82cb:	c3                   	ret

00000000000082cc <_ZN2vk19FragmentedPoolErrorC1EPKc>:
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    82cc:	55                   	push   %rbp
    82cd:	48 89 e5             	mov    %rsp,%rbp
    82d0:	53                   	push   %rbx
    82d1:	48 83 ec 38          	sub    $0x38,%rsp
    82d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    82d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    82dd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    82e1:	c7 45 ec f4 ff ff ff 	movl   $0xfffffff4,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    82e8:	0f b6 05 69 a0 03 00 	movzbl 0x3a069(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    82ef:	84 c0                	test   %al,%al
    82f1:	0f 94 c0             	sete   %al
    82f4:	84 c0                	test   %al,%al
    82f6:	74 4a                	je     8342 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    82f8:	48 8d 05 59 a0 03 00 	lea    0x3a059(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    82ff:	48 89 c7             	mov    %rax,%rdi
    8302:	e8 b9 d0 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8307:	85 c0                	test   %eax,%eax
    8309:	0f 95 c0             	setne  %al
    830c:	84 c0                	test   %al,%al
    830e:	74 32                	je     8342 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    8310:	48 8d 05 e1 9e 03 00 	lea    0x39ee1(%rip),%rax        # 421f8 <__dso_handle>
    8317:	48 89 c2             	mov    %rax,%rdx
    831a:	48 8d 05 df 9e 03 00 	lea    0x39edf(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8321:	48 89 c6             	mov    %rax,%rsi
    8324:	48 8d 05 69 49 00 00 	lea    0x4969(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    832b:	48 89 c7             	mov    %rax,%rdi
    832e:	e8 9d ce ff ff       	call   51d0 <__cxa_atexit@plt>
    8333:	48 8d 05 1e a0 03 00 	lea    0x3a01e(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    833a:	48 89 c7             	mov    %rax,%rdi
    833d:	e8 be cd ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8342:	48 8d 15 b7 9e 03 00 	lea    0x39eb7(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8349:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    834c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8350:	89 ce                	mov    %ecx,%esi
    8352:	48 89 c7             	mov    %rax,%rdi
    8355:	e8 ae df ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    835a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    835e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    8362:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8366:	48 89 c6             	mov    %rax,%rsi
    8369:	48 89 d7             	mov    %rdx,%rdi
    836c:	48 89 d0             	mov    %rdx,%rax
    836f:	48 89 c2             	mov    %rax,%rdx
    8372:	48 89 df             	mov    %rbx,%rdi
    8375:	e8 1e f5 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    837a:	48 8d 15 cf 91 03 00 	lea    0x391cf(%rip),%rdx        # 41550 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    8381:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8385:	48 89 10             	mov    %rdx,(%rax)
    8388:	48 8d 15 e9 91 03 00 	lea    0x391e9(%rip),%rdx        # 41578 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    838f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8393:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8397:	90                   	nop
    8398:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    839c:	c9                   	leave
    839d:	c3                   	ret

000000000000839e <_ZN2vk12UnknownErrorC1EPKc>:
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    839e:	55                   	push   %rbp
    839f:	48 89 e5             	mov    %rsp,%rbp
    83a2:	53                   	push   %rbx
    83a3:	48 83 ec 38          	sub    $0x38,%rsp
    83a7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    83ab:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    83af:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    83b3:	c7 45 ec f3 ff ff ff 	movl   $0xfffffff3,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    83ba:	0f b6 05 97 9f 03 00 	movzbl 0x39f97(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    83c1:	84 c0                	test   %al,%al
    83c3:	0f 94 c0             	sete   %al
    83c6:	84 c0                	test   %al,%al
    83c8:	74 4a                	je     8414 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    83ca:	48 8d 05 87 9f 03 00 	lea    0x39f87(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    83d1:	48 89 c7             	mov    %rax,%rdi
    83d4:	e8 e7 cf ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    83d9:	85 c0                	test   %eax,%eax
    83db:	0f 95 c0             	setne  %al
    83de:	84 c0                	test   %al,%al
    83e0:	74 32                	je     8414 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    83e2:	48 8d 05 0f 9e 03 00 	lea    0x39e0f(%rip),%rax        # 421f8 <__dso_handle>
    83e9:	48 89 c2             	mov    %rax,%rdx
    83ec:	48 8d 05 0d 9e 03 00 	lea    0x39e0d(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    83f3:	48 89 c6             	mov    %rax,%rsi
    83f6:	48 8d 05 97 48 00 00 	lea    0x4897(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    83fd:	48 89 c7             	mov    %rax,%rdi
    8400:	e8 cb cd ff ff       	call   51d0 <__cxa_atexit@plt>
    8405:	48 8d 05 4c 9f 03 00 	lea    0x39f4c(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    840c:	48 89 c7             	mov    %rax,%rdi
    840f:	e8 ec cc ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8414:	48 8d 15 e5 9d 03 00 	lea    0x39de5(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    841b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    841e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8422:	89 ce                	mov    %ecx,%esi
    8424:	48 89 c7             	mov    %rax,%rdi
    8427:	e8 dc de ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    842c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8430:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    8434:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8438:	48 89 c6             	mov    %rax,%rsi
    843b:	48 89 d7             	mov    %rdx,%rdi
    843e:	48 89 d0             	mov    %rdx,%rax
    8441:	48 89 c2             	mov    %rax,%rdx
    8444:	48 89 df             	mov    %rbx,%rdi
    8447:	e8 4c f4 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    844c:	48 8d 15 ad 90 03 00 	lea    0x390ad(%rip),%rdx        # 41500 <_ZTVN2vk12UnknownErrorE+0x10>
    8453:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8457:	48 89 10             	mov    %rdx,(%rax)
    845a:	48 8d 15 c7 90 03 00 	lea    0x390c7(%rip),%rdx        # 41528 <_ZTVN2vk12UnknownErrorE+0x38>
    8461:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8465:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8469:	90                   	nop
    846a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    846e:	c9                   	leave
    846f:	c3                   	ret

0000000000008470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>:
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    8470:	55                   	push   %rbp
    8471:	48 89 e5             	mov    %rsp,%rbp
    8474:	53                   	push   %rbx
    8475:	48 83 ec 38          	sub    $0x38,%rsp
    8479:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    847d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8481:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8485:	c7 45 ec 78 28 64 c4 	movl   $0xc4642878,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    848c:	0f b6 05 c5 9e 03 00 	movzbl 0x39ec5(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8493:	84 c0                	test   %al,%al
    8495:	0f 94 c0             	sete   %al
    8498:	84 c0                	test   %al,%al
    849a:	74 4a                	je     84e6 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    849c:	48 8d 05 b5 9e 03 00 	lea    0x39eb5(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    84a3:	48 89 c7             	mov    %rax,%rdi
    84a6:	e8 15 cf ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    84ab:	85 c0                	test   %eax,%eax
    84ad:	0f 95 c0             	setne  %al
    84b0:	84 c0                	test   %al,%al
    84b2:	74 32                	je     84e6 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    84b4:	48 8d 05 3d 9d 03 00 	lea    0x39d3d(%rip),%rax        # 421f8 <__dso_handle>
    84bb:	48 89 c2             	mov    %rax,%rdx
    84be:	48 8d 05 3b 9d 03 00 	lea    0x39d3b(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    84c5:	48 89 c6             	mov    %rax,%rsi
    84c8:	48 8d 05 c5 47 00 00 	lea    0x47c5(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    84cf:	48 89 c7             	mov    %rax,%rdi
    84d2:	e8 f9 cc ff ff       	call   51d0 <__cxa_atexit@plt>
    84d7:	48 8d 05 7a 9e 03 00 	lea    0x39e7a(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    84de:	48 89 c7             	mov    %rax,%rdi
    84e1:	e8 1a cc ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    84e6:	48 8d 15 13 9d 03 00 	lea    0x39d13(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    84ed:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    84f0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    84f4:	89 ce                	mov    %ecx,%esi
    84f6:	48 89 c7             	mov    %rax,%rdi
    84f9:	e8 0a de ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    84fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8502:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    8506:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    850a:	48 89 c6             	mov    %rax,%rsi
    850d:	48 89 d7             	mov    %rdx,%rdi
    8510:	48 89 d0             	mov    %rdx,%rax
    8513:	48 89 c2             	mov    %rax,%rdx
    8516:	48 89 df             	mov    %rbx,%rdi
    8519:	e8 7a f3 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    851e:	48 8d 15 8b 8f 03 00 	lea    0x38f8b(%rip),%rdx        # 414b0 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    8525:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8529:	48 89 10             	mov    %rdx,(%rax)
    852c:	48 8d 15 a5 8f 03 00 	lea    0x38fa5(%rip),%rdx        # 414d8 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    8533:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8537:	48 89 50 08          	mov    %rdx,0x8(%rax)
    853b:	90                   	nop
    853c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8540:	c9                   	leave
    8541:	c3                   	ret

0000000000008542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>:
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    8542:	55                   	push   %rbp
    8543:	48 89 e5             	mov    %rsp,%rbp
    8546:	53                   	push   %rbx
    8547:	48 83 ec 38          	sub    $0x38,%rsp
    854b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    854f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8553:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8557:	c7 45 ec bd 1c 64 c4 	movl   $0xc4641cbd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    855e:	0f b6 05 f3 9d 03 00 	movzbl 0x39df3(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8565:	84 c0                	test   %al,%al
    8567:	0f 94 c0             	sete   %al
    856a:	84 c0                	test   %al,%al
    856c:	74 4a                	je     85b8 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    856e:	48 8d 05 e3 9d 03 00 	lea    0x39de3(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8575:	48 89 c7             	mov    %rax,%rdi
    8578:	e8 43 ce ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    857d:	85 c0                	test   %eax,%eax
    857f:	0f 95 c0             	setne  %al
    8582:	84 c0                	test   %al,%al
    8584:	74 32                	je     85b8 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    8586:	48 8d 05 6b 9c 03 00 	lea    0x39c6b(%rip),%rax        # 421f8 <__dso_handle>
    858d:	48 89 c2             	mov    %rax,%rdx
    8590:	48 8d 05 69 9c 03 00 	lea    0x39c69(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8597:	48 89 c6             	mov    %rax,%rsi
    859a:	48 8d 05 f3 46 00 00 	lea    0x46f3(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    85a1:	48 89 c7             	mov    %rax,%rdi
    85a4:	e8 27 cc ff ff       	call   51d0 <__cxa_atexit@plt>
    85a9:	48 8d 05 a8 9d 03 00 	lea    0x39da8(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    85b0:	48 89 c7             	mov    %rax,%rdi
    85b3:	e8 48 cb ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    85b8:	48 8d 15 41 9c 03 00 	lea    0x39c41(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    85bf:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    85c2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    85c6:	89 ce                	mov    %ecx,%esi
    85c8:	48 89 c7             	mov    %rax,%rdi
    85cb:	e8 38 dd ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    85d0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    85d4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    85d8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    85dc:	48 89 c6             	mov    %rax,%rsi
    85df:	48 89 d7             	mov    %rdx,%rdi
    85e2:	48 89 d0             	mov    %rdx,%rax
    85e5:	48 89 c2             	mov    %rax,%rdx
    85e8:	48 89 df             	mov    %rbx,%rdi
    85eb:	e8 a8 f2 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    85f0:	48 8d 15 69 8e 03 00 	lea    0x38e69(%rip),%rdx        # 41460 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    85f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    85fb:	48 89 10             	mov    %rdx,(%rax)
    85fe:	48 8d 15 83 8e 03 00 	lea    0x38e83(%rip),%rdx        # 41488 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    8605:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8609:	48 89 50 08          	mov    %rdx,0x8(%rax)
    860d:	90                   	nop
    860e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8612:	c9                   	leave
    8613:	c3                   	ret

0000000000008614 <_ZN2vk18FragmentationErrorC1EPKc>:
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    8614:	55                   	push   %rbp
    8615:	48 89 e5             	mov    %rsp,%rbp
    8618:	53                   	push   %rbx
    8619:	48 83 ec 38          	sub    $0x38,%rsp
    861d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8621:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8625:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8629:	c7 45 ec 18 c1 62 c4 	movl   $0xc462c118,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8630:	0f b6 05 21 9d 03 00 	movzbl 0x39d21(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8637:	84 c0                	test   %al,%al
    8639:	0f 94 c0             	sete   %al
    863c:	84 c0                	test   %al,%al
    863e:	74 4a                	je     868a <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    8640:	48 8d 05 11 9d 03 00 	lea    0x39d11(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8647:	48 89 c7             	mov    %rax,%rdi
    864a:	e8 71 cd ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    864f:	85 c0                	test   %eax,%eax
    8651:	0f 95 c0             	setne  %al
    8654:	84 c0                	test   %al,%al
    8656:	74 32                	je     868a <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    8658:	48 8d 05 99 9b 03 00 	lea    0x39b99(%rip),%rax        # 421f8 <__dso_handle>
    865f:	48 89 c2             	mov    %rax,%rdx
    8662:	48 8d 05 97 9b 03 00 	lea    0x39b97(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8669:	48 89 c6             	mov    %rax,%rsi
    866c:	48 8d 05 21 46 00 00 	lea    0x4621(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8673:	48 89 c7             	mov    %rax,%rdi
    8676:	e8 55 cb ff ff       	call   51d0 <__cxa_atexit@plt>
    867b:	48 8d 05 d6 9c 03 00 	lea    0x39cd6(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8682:	48 89 c7             	mov    %rax,%rdi
    8685:	e8 76 ca ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    868a:	48 8d 15 6f 9b 03 00 	lea    0x39b6f(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8691:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8694:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8698:	89 ce                	mov    %ecx,%esi
    869a:	48 89 c7             	mov    %rax,%rdi
    869d:	e8 66 dc ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    86a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    86aa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    86ae:	48 89 c6             	mov    %rax,%rsi
    86b1:	48 89 d7             	mov    %rdx,%rdi
    86b4:	48 89 d0             	mov    %rdx,%rax
    86b7:	48 89 c2             	mov    %rax,%rdx
    86ba:	48 89 df             	mov    %rbx,%rdi
    86bd:	e8 d6 f1 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    86c2:	48 8d 15 47 8d 03 00 	lea    0x38d47(%rip),%rdx        # 41410 <_ZTVN2vk18FragmentationErrorE+0x10>
    86c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    86cd:	48 89 10             	mov    %rdx,(%rax)
    86d0:	48 8d 15 61 8d 03 00 	lea    0x38d61(%rip),%rdx        # 41438 <_ZTVN2vk18FragmentationErrorE+0x38>
    86d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    86db:	48 89 50 08          	mov    %rdx,0x8(%rax)
    86df:	90                   	nop
    86e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86e4:	c9                   	leave
    86e5:	c3                   	ret

00000000000086e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>:
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    86e6:	55                   	push   %rbp
    86e7:	48 89 e5             	mov    %rsp,%rbp
    86ea:	53                   	push   %rbx
    86eb:	48 83 ec 38          	sub    $0x38,%rsp
    86ef:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    86f3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    86f7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    86fb:	c7 45 ec 18 4a 61 c4 	movl   $0xc4614a18,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8702:	0f b6 05 4f 9c 03 00 	movzbl 0x39c4f(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8709:	84 c0                	test   %al,%al
    870b:	0f 94 c0             	sete   %al
    870e:	84 c0                	test   %al,%al
    8710:	74 4a                	je     875c <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    8712:	48 8d 05 3f 9c 03 00 	lea    0x39c3f(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8719:	48 89 c7             	mov    %rax,%rdi
    871c:	e8 9f cc ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8721:	85 c0                	test   %eax,%eax
    8723:	0f 95 c0             	setne  %al
    8726:	84 c0                	test   %al,%al
    8728:	74 32                	je     875c <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    872a:	48 8d 05 c7 9a 03 00 	lea    0x39ac7(%rip),%rax        # 421f8 <__dso_handle>
    8731:	48 89 c2             	mov    %rax,%rdx
    8734:	48 8d 05 c5 9a 03 00 	lea    0x39ac5(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    873b:	48 89 c6             	mov    %rax,%rsi
    873e:	48 8d 05 4f 45 00 00 	lea    0x454f(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8745:	48 89 c7             	mov    %rax,%rdi
    8748:	e8 83 ca ff ff       	call   51d0 <__cxa_atexit@plt>
    874d:	48 8d 05 04 9c 03 00 	lea    0x39c04(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8754:	48 89 c7             	mov    %rax,%rdi
    8757:	e8 a4 c9 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    875c:	48 8d 15 9d 9a 03 00 	lea    0x39a9d(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8763:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8766:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    876a:	89 ce                	mov    %ecx,%esi
    876c:	48 89 c7             	mov    %rax,%rdi
    876f:	e8 94 db ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8774:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8778:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    877c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8780:	48 89 c6             	mov    %rax,%rsi
    8783:	48 89 d7             	mov    %rdx,%rdi
    8786:	48 89 d0             	mov    %rdx,%rax
    8789:	48 89 c2             	mov    %rax,%rdx
    878c:	48 89 df             	mov    %rbx,%rdi
    878f:	e8 04 f1 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8794:	48 8d 15 25 8c 03 00 	lea    0x38c25(%rip),%rdx        # 413c0 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    879b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    879f:	48 89 10             	mov    %rdx,(%rax)
    87a2:	48 8d 15 3f 8c 03 00 	lea    0x38c3f(%rip),%rdx        # 413e8 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    87a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
    87b1:	90                   	nop
    87b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87b6:	c9                   	leave
    87b7:	c3                   	ret

00000000000087b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>:
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    87b8:	55                   	push   %rbp
    87b9:	48 89 e5             	mov    %rsp,%rbp
    87bc:	53                   	push   %rbx
    87bd:	48 83 ec 38          	sub    $0x38,%rsp
    87c1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    87c5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    87c9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    87cd:	c7 45 ec 00 36 65 c4 	movl   $0xc4653600,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    87d4:	0f b6 05 7d 9b 03 00 	movzbl 0x39b7d(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    87db:	84 c0                	test   %al,%al
    87dd:	0f 94 c0             	sete   %al
    87e0:	84 c0                	test   %al,%al
    87e2:	74 4a                	je     882e <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    87e4:	48 8d 05 6d 9b 03 00 	lea    0x39b6d(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    87eb:	48 89 c7             	mov    %rax,%rdi
    87ee:	e8 cd cb ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    87f3:	85 c0                	test   %eax,%eax
    87f5:	0f 95 c0             	setne  %al
    87f8:	84 c0                	test   %al,%al
    87fa:	74 32                	je     882e <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    87fc:	48 8d 05 f5 99 03 00 	lea    0x399f5(%rip),%rax        # 421f8 <__dso_handle>
    8803:	48 89 c2             	mov    %rax,%rdx
    8806:	48 8d 05 f3 99 03 00 	lea    0x399f3(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    880d:	48 89 c6             	mov    %rax,%rsi
    8810:	48 8d 05 7d 44 00 00 	lea    0x447d(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8817:	48 89 c7             	mov    %rax,%rdi
    881a:	e8 b1 c9 ff ff       	call   51d0 <__cxa_atexit@plt>
    881f:	48 8d 05 32 9b 03 00 	lea    0x39b32(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8826:	48 89 c7             	mov    %rax,%rdi
    8829:	e8 d2 c8 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    882e:	48 8d 15 cb 99 03 00 	lea    0x399cb(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8835:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8838:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    883c:	89 ce                	mov    %ecx,%esi
    883e:	48 89 c7             	mov    %rax,%rdi
    8841:	e8 c2 da ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8846:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    884a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    884e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8852:	48 89 c6             	mov    %rax,%rsi
    8855:	48 89 d7             	mov    %rdx,%rdi
    8858:	48 89 d0             	mov    %rdx,%rax
    885b:	48 89 c2             	mov    %rax,%rdx
    885e:	48 89 df             	mov    %rbx,%rdi
    8861:	e8 32 f0 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8866:	48 8d 15 03 8b 03 00 	lea    0x38b03(%rip),%rdx        # 41370 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    886d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8871:	48 89 10             	mov    %rdx,(%rax)
    8874:	48 8d 15 1d 8b 03 00 	lea    0x38b1d(%rip),%rdx        # 41398 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    887b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    887f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8883:	90                   	nop
    8884:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8888:	c9                   	leave
    8889:	c3                   	ret

000000000000888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>:
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    888a:	55                   	push   %rbp
    888b:	48 89 e5             	mov    %rsp,%rbp
    888e:	53                   	push   %rbx
    888f:	48 83 ec 38          	sub    $0x38,%rsp
    8893:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8897:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    889b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    889f:	c7 45 ec ff 35 65 c4 	movl   $0xc46535ff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    88a6:	0f b6 05 ab 9a 03 00 	movzbl 0x39aab(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    88ad:	84 c0                	test   %al,%al
    88af:	0f 94 c0             	sete   %al
    88b2:	84 c0                	test   %al,%al
    88b4:	74 4a                	je     8900 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    88b6:	48 8d 05 9b 9a 03 00 	lea    0x39a9b(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    88bd:	48 89 c7             	mov    %rax,%rdi
    88c0:	e8 fb ca ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    88c5:	85 c0                	test   %eax,%eax
    88c7:	0f 95 c0             	setne  %al
    88ca:	84 c0                	test   %al,%al
    88cc:	74 32                	je     8900 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    88ce:	48 8d 05 23 99 03 00 	lea    0x39923(%rip),%rax        # 421f8 <__dso_handle>
    88d5:	48 89 c2             	mov    %rax,%rdx
    88d8:	48 8d 05 21 99 03 00 	lea    0x39921(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    88df:	48 89 c6             	mov    %rax,%rsi
    88e2:	48 8d 05 ab 43 00 00 	lea    0x43ab(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    88e9:	48 89 c7             	mov    %rax,%rdi
    88ec:	e8 df c8 ff ff       	call   51d0 <__cxa_atexit@plt>
    88f1:	48 8d 05 60 9a 03 00 	lea    0x39a60(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    88f8:	48 89 c7             	mov    %rax,%rdi
    88fb:	e8 00 c8 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8900:	48 8d 15 f9 98 03 00 	lea    0x398f9(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8907:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    890a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    890e:	89 ce                	mov    %ecx,%esi
    8910:	48 89 c7             	mov    %rax,%rdi
    8913:	e8 f0 d9 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8918:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    891c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    8920:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8924:	48 89 c6             	mov    %rax,%rsi
    8927:	48 89 d7             	mov    %rdx,%rdi
    892a:	48 89 d0             	mov    %rdx,%rax
    892d:	48 89 c2             	mov    %rax,%rdx
    8930:	48 89 df             	mov    %rbx,%rdi
    8933:	e8 60 ef ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8938:	48 8d 15 e1 89 03 00 	lea    0x389e1(%rip),%rdx        # 41320 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    893f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8943:	48 89 10             	mov    %rdx,(%rax)
    8946:	48 8d 15 fb 89 03 00 	lea    0x389fb(%rip),%rdx        # 41348 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    894d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8951:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8955:	90                   	nop
    8956:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    895a:	c9                   	leave
    895b:	c3                   	ret

000000000000895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>:
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    895c:	55                   	push   %rbp
    895d:	48 89 e5             	mov    %rsp,%rbp
    8960:	53                   	push   %rbx
    8961:	48 83 ec 38          	sub    $0x38,%rsp
    8965:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8969:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    896d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8971:	c7 45 ec 14 32 65 c4 	movl   $0xc4653214,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8978:	0f b6 05 d9 99 03 00 	movzbl 0x399d9(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    897f:	84 c0                	test   %al,%al
    8981:	0f 94 c0             	sete   %al
    8984:	84 c0                	test   %al,%al
    8986:	74 4a                	je     89d2 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    8988:	48 8d 05 c9 99 03 00 	lea    0x399c9(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    898f:	48 89 c7             	mov    %rax,%rdi
    8992:	e8 29 ca ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8997:	85 c0                	test   %eax,%eax
    8999:	0f 95 c0             	setne  %al
    899c:	84 c0                	test   %al,%al
    899e:	74 32                	je     89d2 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    89a0:	48 8d 05 51 98 03 00 	lea    0x39851(%rip),%rax        # 421f8 <__dso_handle>
    89a7:	48 89 c2             	mov    %rax,%rdx
    89aa:	48 8d 05 4f 98 03 00 	lea    0x3984f(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    89b1:	48 89 c6             	mov    %rax,%rsi
    89b4:	48 8d 05 d9 42 00 00 	lea    0x42d9(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    89bb:	48 89 c7             	mov    %rax,%rdi
    89be:	e8 0d c8 ff ff       	call   51d0 <__cxa_atexit@plt>
    89c3:	48 8d 05 8e 99 03 00 	lea    0x3998e(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    89ca:	48 89 c7             	mov    %rax,%rdi
    89cd:	e8 2e c7 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    89d2:	48 8d 15 27 98 03 00 	lea    0x39827(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    89d9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    89dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    89e0:	89 ce                	mov    %ecx,%esi
    89e2:	48 89 c7             	mov    %rax,%rdi
    89e5:	e8 1e d9 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    89ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    89ee:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    89f2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    89f6:	48 89 c6             	mov    %rax,%rsi
    89f9:	48 89 d7             	mov    %rdx,%rdi
    89fc:	48 89 d0             	mov    %rdx,%rax
    89ff:	48 89 c2             	mov    %rax,%rdx
    8a02:	48 89 df             	mov    %rbx,%rdi
    8a05:	e8 8e ee ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8a0a:	48 8d 15 bf 88 03 00 	lea    0x388bf(%rip),%rdx        # 412d0 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    8a11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a15:	48 89 10             	mov    %rdx,(%rax)
    8a18:	48 8d 15 d9 88 03 00 	lea    0x388d9(%rip),%rdx        # 412f8 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    8a1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a23:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8a27:	90                   	nop
    8a28:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a2c:	c9                   	leave
    8a2d:	c3                   	ret

0000000000008a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>:
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    8a2e:	55                   	push   %rbp
    8a2f:	48 89 e5             	mov    %rsp,%rbp
    8a32:	53                   	push   %rbx
    8a33:	48 83 ec 38          	sub    $0x38,%rsp
    8a37:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8a3b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8a3f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8a43:	c7 45 ec 47 2a 65 c4 	movl   $0xc4652a47,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8a4a:	0f b6 05 07 99 03 00 	movzbl 0x39907(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a51:	84 c0                	test   %al,%al
    8a53:	0f 94 c0             	sete   %al
    8a56:	84 c0                	test   %al,%al
    8a58:	74 4a                	je     8aa4 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    8a5a:	48 8d 05 f7 98 03 00 	lea    0x398f7(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a61:	48 89 c7             	mov    %rax,%rdi
    8a64:	e8 57 c9 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8a69:	85 c0                	test   %eax,%eax
    8a6b:	0f 95 c0             	setne  %al
    8a6e:	84 c0                	test   %al,%al
    8a70:	74 32                	je     8aa4 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    8a72:	48 8d 05 7f 97 03 00 	lea    0x3977f(%rip),%rax        # 421f8 <__dso_handle>
    8a79:	48 89 c2             	mov    %rax,%rdx
    8a7c:	48 8d 05 7d 97 03 00 	lea    0x3977d(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8a83:	48 89 c6             	mov    %rax,%rsi
    8a86:	48 8d 05 07 42 00 00 	lea    0x4207(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8a8d:	48 89 c7             	mov    %rax,%rdi
    8a90:	e8 3b c7 ff ff       	call   51d0 <__cxa_atexit@plt>
    8a95:	48 8d 05 bc 98 03 00 	lea    0x398bc(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a9c:	48 89 c7             	mov    %rax,%rdi
    8a9f:	e8 5c c6 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8aa4:	48 8d 15 55 97 03 00 	lea    0x39755(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8aab:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8aae:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8ab2:	89 ce                	mov    %ecx,%esi
    8ab4:	48 89 c7             	mov    %rax,%rdi
    8ab7:	e8 4c d8 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8abc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ac0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    8ac4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8ac8:	48 89 c6             	mov    %rax,%rsi
    8acb:	48 89 d7             	mov    %rdx,%rdi
    8ace:	48 89 d0             	mov    %rdx,%rax
    8ad1:	48 89 c2             	mov    %rax,%rdx
    8ad4:	48 89 df             	mov    %rbx,%rdi
    8ad7:	e8 bc ed ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8adc:	48 8d 15 9d 87 03 00 	lea    0x3879d(%rip),%rdx        # 41280 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    8ae3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8ae7:	48 89 10             	mov    %rdx,(%rax)
    8aea:	48 8d 15 b7 87 03 00 	lea    0x387b7(%rip),%rdx        # 412a8 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    8af1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8af5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8af9:	90                   	nop
    8afa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8afe:	c9                   	leave
    8aff:	c3                   	ret

0000000000008b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>:
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8b00:	55                   	push   %rbp
    8b01:	48 89 e5             	mov    %rsp,%rbp
    8b04:	53                   	push   %rbx
    8b05:	48 83 ec 38          	sub    $0x38,%rsp
    8b09:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8b0d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8b11:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8b15:	c7 45 ec 07 0b 65 c4 	movl   $0xc4650b07,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8b1c:	0f b6 05 35 98 03 00 	movzbl 0x39835(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b23:	84 c0                	test   %al,%al
    8b25:	0f 94 c0             	sete   %al
    8b28:	84 c0                	test   %al,%al
    8b2a:	74 4a                	je     8b76 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8b2c:	48 8d 05 25 98 03 00 	lea    0x39825(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b33:	48 89 c7             	mov    %rax,%rdi
    8b36:	e8 85 c8 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8b3b:	85 c0                	test   %eax,%eax
    8b3d:	0f 95 c0             	setne  %al
    8b40:	84 c0                	test   %al,%al
    8b42:	74 32                	je     8b76 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8b44:	48 8d 05 ad 96 03 00 	lea    0x396ad(%rip),%rax        # 421f8 <__dso_handle>
    8b4b:	48 89 c2             	mov    %rax,%rdx
    8b4e:	48 8d 05 ab 96 03 00 	lea    0x396ab(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8b55:	48 89 c6             	mov    %rax,%rsi
    8b58:	48 8d 05 35 41 00 00 	lea    0x4135(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8b5f:	48 89 c7             	mov    %rax,%rdi
    8b62:	e8 69 c6 ff ff       	call   51d0 <__cxa_atexit@plt>
    8b67:	48 8d 05 ea 97 03 00 	lea    0x397ea(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b6e:	48 89 c7             	mov    %rax,%rdi
    8b71:	e8 8a c5 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8b76:	48 8d 15 83 96 03 00 	lea    0x39683(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8b7d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8b80:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8b84:	89 ce                	mov    %ecx,%esi
    8b86:	48 89 c7             	mov    %rax,%rdi
    8b89:	e8 7a d7 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8b8e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8b96:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8b9a:	48 89 c6             	mov    %rax,%rsi
    8b9d:	48 89 d7             	mov    %rdx,%rdi
    8ba0:	48 89 d0             	mov    %rdx,%rax
    8ba3:	48 89 c2             	mov    %rax,%rdx
    8ba6:	48 89 df             	mov    %rbx,%rdi
    8ba9:	e8 ea ec ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8bae:	48 8d 15 7b 86 03 00 	lea    0x3867b(%rip),%rdx        # 41230 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    8bb5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8bb9:	48 89 10             	mov    %rdx,(%rax)
    8bbc:	48 8d 15 95 86 03 00 	lea    0x38695(%rip),%rdx        # 41258 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    8bc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8bc7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8bcb:	90                   	nop
    8bcc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8bd0:	c9                   	leave
    8bd1:	c3                   	ret

0000000000008bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>:
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8bd2:	55                   	push   %rbp
    8bd3:	48 89 e5             	mov    %rsp,%rbp
    8bd6:	53                   	push   %rbx
    8bd7:	48 83 ec 38          	sub    $0x38,%rsp
    8bdb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8bdf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8be3:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8be7:	c7 45 ec 20 07 65 c4 	movl   $0xc4650720,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8bee:	0f b6 05 63 97 03 00 	movzbl 0x39763(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8bf5:	84 c0                	test   %al,%al
    8bf7:	0f 94 c0             	sete   %al
    8bfa:	84 c0                	test   %al,%al
    8bfc:	74 4a                	je     8c48 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8bfe:	48 8d 05 53 97 03 00 	lea    0x39753(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c05:	48 89 c7             	mov    %rax,%rdi
    8c08:	e8 b3 c7 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8c0d:	85 c0                	test   %eax,%eax
    8c0f:	0f 95 c0             	setne  %al
    8c12:	84 c0                	test   %al,%al
    8c14:	74 32                	je     8c48 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8c16:	48 8d 05 db 95 03 00 	lea    0x395db(%rip),%rax        # 421f8 <__dso_handle>
    8c1d:	48 89 c2             	mov    %rax,%rdx
    8c20:	48 8d 05 d9 95 03 00 	lea    0x395d9(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8c27:	48 89 c6             	mov    %rax,%rsi
    8c2a:	48 8d 05 63 40 00 00 	lea    0x4063(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8c31:	48 89 c7             	mov    %rax,%rdi
    8c34:	e8 97 c5 ff ff       	call   51d0 <__cxa_atexit@plt>
    8c39:	48 8d 05 18 97 03 00 	lea    0x39718(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c40:	48 89 c7             	mov    %rax,%rdi
    8c43:	e8 b8 c4 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8c48:	48 8d 15 b1 95 03 00 	lea    0x395b1(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8c4f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8c52:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8c56:	89 ce                	mov    %ecx,%esi
    8c58:	48 89 c7             	mov    %rax,%rdi
    8c5b:	e8 a8 d6 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8c60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c64:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8c68:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8c6c:	48 89 c6             	mov    %rax,%rsi
    8c6f:	48 89 d7             	mov    %rdx,%rdi
    8c72:	48 89 d0             	mov    %rdx,%rax
    8c75:	48 89 c2             	mov    %rax,%rdx
    8c78:	48 89 df             	mov    %rbx,%rdi
    8c7b:	e8 18 ec ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8c80:	48 8d 15 59 85 03 00 	lea    0x38559(%rip),%rdx        # 411e0 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    8c87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8c8b:	48 89 10             	mov    %rdx,(%rax)
    8c8e:	48 8d 15 73 85 03 00 	lea    0x38573(%rip),%rdx        # 41208 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    8c95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8c99:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8c9d:	90                   	nop
    8c9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ca2:	c9                   	leave
    8ca3:	c3                   	ret

0000000000008ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>:
    InvalidDrmFormatModifierPlaneLayoutEXTError( char const * message )
    8ca4:	55                   	push   %rbp
    8ca5:	48 89 e5             	mov    %rsp,%rbp
    8ca8:	53                   	push   %rbx
    8ca9:	48 83 ec 38          	sub    $0x38,%rsp
    8cad:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8cb1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8cb5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8cb9:	c7 45 ec d0 cc 62 c4 	movl   $0xc462ccd0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8cc0:	0f b6 05 91 96 03 00 	movzbl 0x39691(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8cc7:	84 c0                	test   %al,%al
    8cc9:	0f 94 c0             	sete   %al
    8ccc:	84 c0                	test   %al,%al
    8cce:	74 4a                	je     8d1a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8cd0:	48 8d 05 81 96 03 00 	lea    0x39681(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8cd7:	48 89 c7             	mov    %rax,%rdi
    8cda:	e8 e1 c6 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8cdf:	85 c0                	test   %eax,%eax
    8ce1:	0f 95 c0             	setne  %al
    8ce4:	84 c0                	test   %al,%al
    8ce6:	74 32                	je     8d1a <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8ce8:	48 8d 05 09 95 03 00 	lea    0x39509(%rip),%rax        # 421f8 <__dso_handle>
    8cef:	48 89 c2             	mov    %rax,%rdx
    8cf2:	48 8d 05 07 95 03 00 	lea    0x39507(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8cf9:	48 89 c6             	mov    %rax,%rsi
    8cfc:	48 8d 05 91 3f 00 00 	lea    0x3f91(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8d03:	48 89 c7             	mov    %rax,%rdi
    8d06:	e8 c5 c4 ff ff       	call   51d0 <__cxa_atexit@plt>
    8d0b:	48 8d 05 46 96 03 00 	lea    0x39646(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d12:	48 89 c7             	mov    %rax,%rdi
    8d15:	e8 e6 c3 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8d1a:	48 8d 15 df 94 03 00 	lea    0x394df(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8d21:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8d24:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8d28:	89 ce                	mov    %ecx,%esi
    8d2a:	48 89 c7             	mov    %rax,%rdi
    8d2d:	e8 d6 d5 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8d32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8d36:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8d3a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8d3e:	48 89 c6             	mov    %rax,%rsi
    8d41:	48 89 d7             	mov    %rdx,%rdi
    8d44:	48 89 d0             	mov    %rdx,%rax
    8d47:	48 89 c2             	mov    %rax,%rdx
    8d4a:	48 89 df             	mov    %rbx,%rdi
    8d4d:	e8 46 eb ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8d52:	48 8d 15 37 84 03 00 	lea    0x38437(%rip),%rdx        # 41190 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    8d59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d5d:	48 89 10             	mov    %rdx,(%rax)
    8d60:	48 8d 15 51 84 03 00 	lea    0x38451(%rip),%rdx        # 411b8 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    8d67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d6b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    }
    8d6f:	90                   	nop
    8d70:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d74:	c9                   	leave
    8d75:	c3                   	ret

0000000000008d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>:
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8d76:	55                   	push   %rbp
    8d77:	48 89 e5             	mov    %rsp,%rbp
    8d7a:	53                   	push   %rbx
    8d7b:	48 83 ec 38          	sub    $0x38,%rsp
    8d7f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8d83:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8d87:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8d8b:	c7 45 ec 4f 8e 62 c4 	movl   $0xc4628e4f,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8d92:	0f b6 05 bf 95 03 00 	movzbl 0x395bf(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d99:	84 c0                	test   %al,%al
    8d9b:	0f 94 c0             	sete   %al
    8d9e:	84 c0                	test   %al,%al
    8da0:	74 4a                	je     8dec <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8da2:	48 8d 05 af 95 03 00 	lea    0x395af(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8da9:	48 89 c7             	mov    %rax,%rdi
    8dac:	e8 0f c6 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8db1:	85 c0                	test   %eax,%eax
    8db3:	0f 95 c0             	setne  %al
    8db6:	84 c0                	test   %al,%al
    8db8:	74 32                	je     8dec <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8dba:	48 8d 05 37 94 03 00 	lea    0x39437(%rip),%rax        # 421f8 <__dso_handle>
    8dc1:	48 89 c2             	mov    %rax,%rdx
    8dc4:	48 8d 05 35 94 03 00 	lea    0x39435(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8dcb:	48 89 c6             	mov    %rax,%rsi
    8dce:	48 8d 05 bf 3e 00 00 	lea    0x3ebf(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8dd5:	48 89 c7             	mov    %rax,%rdi
    8dd8:	e8 f3 c3 ff ff       	call   51d0 <__cxa_atexit@plt>
    8ddd:	48 8d 05 74 95 03 00 	lea    0x39574(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8de4:	48 89 c7             	mov    %rax,%rdi
    8de7:	e8 14 c3 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8dec:	48 8d 15 0d 94 03 00 	lea    0x3940d(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8df3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8df6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8dfa:	89 ce                	mov    %ecx,%esi
    8dfc:	48 89 c7             	mov    %rax,%rdi
    8dff:	e8 04 d5 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8e04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e08:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8e0c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8e10:	48 89 c6             	mov    %rax,%rsi
    8e13:	48 89 d7             	mov    %rdx,%rdi
    8e16:	48 89 d0             	mov    %rdx,%rax
    8e19:	48 89 c2             	mov    %rax,%rdx
    8e1c:	48 89 df             	mov    %rbx,%rdi
    8e1f:	e8 74 ea ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8e24:	48 8d 15 15 83 03 00 	lea    0x38315(%rip),%rdx        # 41140 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    8e2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e2f:	48 89 10             	mov    %rdx,(%rax)
    8e32:	48 8d 15 2f 83 03 00 	lea    0x3832f(%rip),%rdx        # 41168 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    8e39:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e3d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8e41:	90                   	nop
    8e42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e46:	c9                   	leave
    8e47:	c3                   	ret

0000000000008e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>:
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8e48:	55                   	push   %rbp
    8e49:	48 89 e5             	mov    %rsp,%rbp
    8e4c:	53                   	push   %rbx
    8e4d:	48 83 ec 38          	sub    $0x38,%rsp
    8e51:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8e55:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8e59:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8e5d:	c7 45 ec b0 0d 60 c4 	movl   $0xc4600db0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8e64:	0f b6 05 ed 94 03 00 	movzbl 0x394ed(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8e6b:	84 c0                	test   %al,%al
    8e6d:	0f 94 c0             	sete   %al
    8e70:	84 c0                	test   %al,%al
    8e72:	74 4a                	je     8ebe <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8e74:	48 8d 05 dd 94 03 00 	lea    0x394dd(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8e7b:	48 89 c7             	mov    %rax,%rdi
    8e7e:	e8 3d c5 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    8e83:	85 c0                	test   %eax,%eax
    8e85:	0f 95 c0             	setne  %al
    8e88:	84 c0                	test   %al,%al
    8e8a:	74 32                	je     8ebe <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8e8c:	48 8d 05 65 93 03 00 	lea    0x39365(%rip),%rax        # 421f8 <__dso_handle>
    8e93:	48 89 c2             	mov    %rax,%rdx
    8e96:	48 8d 05 63 93 03 00 	lea    0x39363(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    8e9d:	48 89 c6             	mov    %rax,%rsi
    8ea0:	48 8d 05 ed 3d 00 00 	lea    0x3ded(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    8ea7:	48 89 c7             	mov    %rax,%rdi
    8eaa:	e8 21 c3 ff ff       	call   51d0 <__cxa_atexit@plt>
    8eaf:	48 8d 05 a2 94 03 00 	lea    0x394a2(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    8eb6:	48 89 c7             	mov    %rax,%rdi
    8eb9:	e8 42 c2 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    8ebe:	48 8d 15 3b 93 03 00 	lea    0x3933b(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8ec5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8ec8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8ecc:	89 ce                	mov    %ecx,%esi
    8ece:	48 89 c7             	mov    %rax,%rdi
    8ed1:	e8 32 d4 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8ed6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8eda:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8ede:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8ee2:	48 89 c6             	mov    %rax,%rsi
    8ee5:	48 89 d7             	mov    %rdx,%rdi
    8ee8:	48 89 d0             	mov    %rdx,%rax
    8eeb:	48 89 c2             	mov    %rax,%rdx
    8eee:	48 89 df             	mov    %rbx,%rdi
    8ef1:	e8 a2 e9 ff ff       	call   7898 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8ef6:	48 8d 15 f3 81 03 00 	lea    0x381f3(%rip),%rdx        # 410f0 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    8efd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8f01:	48 89 10             	mov    %rdx,(%rax)
    8f04:	48 8d 15 0d 82 03 00 	lea    0x3820d(%rip),%rdx        # 41118 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    8f0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8f0f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8f13:	90                   	nop
    8f14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f18:	c9                   	leave
    8f19:	c3                   	ret

0000000000008f1a <_ZN2vk10SurfaceKHRaSEDn>:
      m_surfaceKHR = surfaceKHR;
      return *this;
    }
#endif

    SurfaceKHR & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8f1a:	55                   	push   %rbp
    8f1b:	48 89 e5             	mov    %rsp,%rbp
    8f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_surfaceKHR = {};
    8f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    8f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8f35:	5d                   	pop    %rbp
    8f36:	c3                   	ret
    8f37:	90                   	nop

0000000000008f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>:
    {
      return m_surfaceKHR < rhs.m_surfaceKHR;
    }
#endif

    VULKAN_HPP_TYPESAFE_EXPLICIT operator VkSurfaceKHR() const VULKAN_HPP_NOEXCEPT
    8f38:	55                   	push   %rbp
    8f39:	48 89 e5             	mov    %rsp,%rbp
    8f3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_surfaceKHR;
    8f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f44:	48 8b 00             	mov    (%rax),%rax
    }
    8f47:	5d                   	pop    %rbp
    8f48:	c3                   	ret
    8f49:	90                   	nop

0000000000008f4a <_ZNK2vk10SurfaceKHRcvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    8f4a:	55                   	push   %rbp
    8f4b:	48 89 e5             	mov    %rsp,%rbp
    8f4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_surfaceKHR != VK_NULL_HANDLE;
    8f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f56:	48 8b 00             	mov    (%rax),%rax
    8f59:	48 85 c0             	test   %rax,%rax
    8f5c:	0f 95 c0             	setne  %al
    }
    8f5f:	5d                   	pop    %rbp
    8f60:	c3                   	ret
    8f61:	90                   	nop

0000000000008f62 <_ZN2vk22DebugUtilsMessengerEXTaSEDn>:
      m_debugUtilsMessengerEXT = debugUtilsMessengerEXT;
      return *this;
    }
#endif

    DebugUtilsMessengerEXT & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8f62:	55                   	push   %rbp
    8f63:	48 89 e5             	mov    %rsp,%rbp
    8f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_debugUtilsMessengerEXT = {};
    8f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f72:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    8f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8f7d:	5d                   	pop    %rbp
    8f7e:	c3                   	ret
    8f7f:	90                   	nop

0000000000008f80 <_ZNK2vk22DebugUtilsMessengerEXTcvP26VkDebugUtilsMessengerEXT_TEv>:
    {
      return m_debugUtilsMessengerEXT < rhs.m_debugUtilsMessengerEXT;
    }
#endif

    VULKAN_HPP_TYPESAFE_EXPLICIT operator VkDebugUtilsMessengerEXT() const VULKAN_HPP_NOEXCEPT
    8f80:	55                   	push   %rbp
    8f81:	48 89 e5             	mov    %rsp,%rbp
    8f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_debugUtilsMessengerEXT;
    8f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f8c:	48 8b 00             	mov    (%rax),%rax
    }
    8f8f:	5d                   	pop    %rbp
    8f90:	c3                   	ret
    8f91:	90                   	nop

0000000000008f92 <_ZNK2vk22DebugUtilsMessengerEXTcvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    8f92:	55                   	push   %rbp
    8f93:	48 89 e5             	mov    %rsp,%rbp
    8f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_debugUtilsMessengerEXT != VK_NULL_HANDLE;
    8f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f9e:	48 8b 00             	mov    (%rax),%rax
    8fa1:	48 85 c0             	test   %rax,%rax
    8fa4:	0f 95 c0             	setne  %al
    }
    8fa7:	5d                   	pop    %rbp
    8fa8:	c3                   	ret
    8fa9:	90                   	nop

0000000000008faa <_ZN2vk12SwapchainKHRaSEDn>:
      m_swapchainKHR = swapchainKHR;
      return *this;
    }
#endif

    SwapchainKHR & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8faa:	55                   	push   %rbp
    8fab:	48 89 e5             	mov    %rsp,%rbp
    8fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_swapchainKHR = {};
    8fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    8fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8fc5:	5d                   	pop    %rbp
    8fc6:	c3                   	ret
    8fc7:	90                   	nop

0000000000008fc8 <_ZNK2vk12SwapchainKHRcvP16VkSwapchainKHR_TEv>:
    {
      return m_swapchainKHR < rhs.m_swapchainKHR;
    }
#endif

    VULKAN_HPP_TYPESAFE_EXPLICIT operator VkSwapchainKHR() const VULKAN_HPP_NOEXCEPT
    8fc8:	55                   	push   %rbp
    8fc9:	48 89 e5             	mov    %rsp,%rbp
    8fcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_swapchainKHR;
    8fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd4:	48 8b 00             	mov    (%rax),%rax
    }
    8fd7:	5d                   	pop    %rbp
    8fd8:	c3                   	ret
    8fd9:	90                   	nop

0000000000008fda <_ZNK2vk12SwapchainKHRcvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    8fda:	55                   	push   %rbp
    8fdb:	48 89 e5             	mov    %rsp,%rbp
    8fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_swapchainKHR != VK_NULL_HANDLE;
    8fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fe6:	48 8b 00             	mov    (%rax),%rax
    8fe9:	48 85 c0             	test   %rax,%rax
    8fec:	0f 95 c0             	setne  %al
    }
    8fef:	5d                   	pop    %rbp
    8ff0:	c3                   	ret
    8ff1:	90                   	nop

0000000000008ff2 <_ZN2vk13CommandBufferaSEDn>:
    {
      m_commandBuffer = commandBuffer;
      return *this;
    }

    CommandBuffer & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    8ff2:	55                   	push   %rbp
    8ff3:	48 89 e5             	mov    %rsp,%rbp
    8ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ffa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_commandBuffer = {};
    8ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9002:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    9009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    900d:	5d                   	pop    %rbp
    900e:	c3                   	ret
    900f:	90                   	nop

0000000000009010 <_ZNK2vk13CommandBuffercvbEv>:
    operator VkCommandBuffer() const VULKAN_HPP_NOEXCEPT
    {
      return m_commandBuffer;
    }

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    9010:	55                   	push   %rbp
    9011:	48 89 e5             	mov    %rsp,%rbp
    9014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_commandBuffer != VK_NULL_HANDLE;
    9018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    901c:	48 8b 00             	mov    (%rax),%rax
    901f:	48 85 c0             	test   %rax,%rax
    9022:	0f 95 c0             	setne  %al
    }
    9025:	5d                   	pop    %rbp
    9026:	c3                   	ret
    9027:	90                   	nop

0000000000009028 <_ZN2vk11CommandPoolaSEDn>:
      m_commandPool = commandPool;
      return *this;
    }
#endif

    CommandPool & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    9028:	55                   	push   %rbp
    9029:	48 89 e5             	mov    %rsp,%rbp
    902c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9030:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_commandPool = {};
    9034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9038:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    903f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    9043:	5d                   	pop    %rbp
    9044:	c3                   	ret
    9045:	90                   	nop

0000000000009046 <_ZNK2vk11CommandPoolcvP15VkCommandPool_TEv>:
    {
      return m_commandPool < rhs.m_commandPool;
    }
#endif

    VULKAN_HPP_TYPESAFE_EXPLICIT operator VkCommandPool() const VULKAN_HPP_NOEXCEPT
    9046:	55                   	push   %rbp
    9047:	48 89 e5             	mov    %rsp,%rbp
    904a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_commandPool;
    904e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9052:	48 8b 00             	mov    (%rax),%rax
    }
    9055:	5d                   	pop    %rbp
    9056:	c3                   	ret
    9057:	90                   	nop

0000000000009058 <_ZNK2vk11CommandPoolcvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    9058:	55                   	push   %rbp
    9059:	48 89 e5             	mov    %rsp,%rbp
    905c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_commandPool != VK_NULL_HANDLE;
    9060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9064:	48 8b 00             	mov    (%rax),%rax
    9067:	48 85 c0             	test   %rax,%rax
    906a:	0f 95 c0             	setne  %al
    }
    906d:	5d                   	pop    %rbp
    906e:	c3                   	ret
    906f:	90                   	nop

0000000000009070 <_ZN2vk5QueueaSEDn>:
    {
      m_queue = queue;
      return *this;
    }

    Queue & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    9070:	55                   	push   %rbp
    9071:	48 89 e5             	mov    %rsp,%rbp
    9074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9078:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_queue = {};
    907c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9080:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    9087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    908b:	5d                   	pop    %rbp
    908c:	c3                   	ret
    908d:	90                   	nop

000000000000908e <_ZN2vk6DeviceaSEDn>:
    {
      m_device = device;
      return *this;
    }

    Device & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    908e:	55                   	push   %rbp
    908f:	48 89 e5             	mov    %rsp,%rbp
    9092:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9096:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_device = {};
    909a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    90a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    90a9:	5d                   	pop    %rbp
    90aa:	c3                   	ret
    90ab:	90                   	nop

00000000000090ac <_ZNK2vk6DevicecvP10VkDevice_TEv>:
    VULKAN_HPP_NODISCARD VULKAN_HPP_NAMESPACE::TilePropertiesQCOM
                         getDynamicRenderingTilePropertiesQCOM( const VULKAN_HPP_NAMESPACE::RenderingInfo & renderingInfo,
                                                                Dispatch const & d                          VULKAN_HPP_DEFAULT_DISPATCHER_ASSIGNMENT ) const VULKAN_HPP_NOEXCEPT;
#endif /*VULKAN_HPP_DISABLE_ENHANCED_MODE*/

    operator VkDevice() const VULKAN_HPP_NOEXCEPT
    90ac:	55                   	push   %rbp
    90ad:	48 89 e5             	mov    %rsp,%rbp
    90b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_device;
    90b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90b8:	48 8b 00             	mov    (%rax),%rax
    }
    90bb:	5d                   	pop    %rbp
    90bc:	c3                   	ret
    90bd:	90                   	nop

00000000000090be <_ZNK2vk6DevicecvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    90be:	55                   	push   %rbp
    90bf:	48 89 e5             	mov    %rsp,%rbp
    90c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_device != VK_NULL_HANDLE;
    90c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ca:	48 8b 00             	mov    (%rax),%rax
    90cd:	48 85 c0             	test   %rax,%rax
    90d0:	0f 95 c0             	setne  %al
    }
    90d3:	5d                   	pop    %rbp
    90d4:	c3                   	ret
    90d5:	90                   	nop

00000000000090d6 <_ZN2vk14PhysicalDeviceaSEDn>:
    {
      m_physicalDevice = physicalDevice;
      return *this;
    }

    PhysicalDevice & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    90d6:	55                   	push   %rbp
    90d7:	48 89 e5             	mov    %rsp,%rbp
    90da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_physicalDevice = {};
    90e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90e6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    90ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    90f1:	5d                   	pop    %rbp
    90f2:	c3                   	ret
    90f3:	90                   	nop

00000000000090f4 <_ZN2vk8InstanceaSEDn>:
    {
      m_instance = instance;
      return *this;
    }

    Instance & operator=( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
    90f4:	55                   	push   %rbp
    90f5:	48 89 e5             	mov    %rsp,%rbp
    90f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      m_instance = {};
    9100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9104:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return *this;
    910b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    910f:	5d                   	pop    %rbp
    9110:	c3                   	ret
    9111:	90                   	nop

0000000000009112 <_ZNK2vk8InstancecvP12VkInstance_TEv>:
                                    Dispatch const & d                                                  VULKAN_HPP_DEFAULT_DISPATCHER_ASSIGNMENT ) const;
#    endif /*VULKAN_HPP_NO_SMART_HANDLE*/
#  endif   /*VULKAN_HPP_DISABLE_ENHANCED_MODE*/
#endif     /*VK_USE_PLATFORM_SCREEN_QNX*/

    operator VkInstance() const VULKAN_HPP_NOEXCEPT
    9112:	55                   	push   %rbp
    9113:	48 89 e5             	mov    %rsp,%rbp
    9116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_instance;
    911a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    911e:	48 8b 00             	mov    (%rax),%rax
    }
    9121:	5d                   	pop    %rbp
    9122:	c3                   	ret
    9123:	90                   	nop

0000000000009124 <_ZNK2vk8InstancecvbEv>:

    explicit operator bool() const VULKAN_HPP_NOEXCEPT
    9124:	55                   	push   %rbp
    9125:	48 89 e5             	mov    %rsp,%rbp
    9128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      return m_instance != VK_NULL_HANDLE;
    912c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9130:	48 8b 00             	mov    (%rax),%rax
    9133:	48 85 c0             	test   %rax,%rax
    9136:	0f 95 c0             	setne  %al
    }
    9139:	5d                   	pop    %rbp
    913a:	c3                   	ret
    913b:	90                   	nop

000000000000913c <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
  {
  public:
#  ifdef VULKAN_HPP_NO_EXCEPTIONS
    DynamicLoader( std::string const & vulkanLibraryName = {} ) VULKAN_HPP_NOEXCEPT
#  else
    DynamicLoader( std::string const & vulkanLibraryName = {} )
    913c:	55                   	push   %rbp
    913d:	48 89 e5             	mov    %rsp,%rbp
    9140:	41 54                	push   %r12
    9142:	53                   	push   %rbx
    9143:	48 83 ec 10          	sub    $0x10,%rsp
    9147:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    914b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
#  endif
    {
      if ( !vulkanLibraryName.empty() )
    914f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9153:	48 89 c7             	mov    %rax,%rdi
    9156:	e8 5d 14 00 00       	call   a5b8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>
    915b:	83 f0 01             	xor    $0x1,%eax
    915e:	84 c0                	test   %al,%al
    9160:	74 22                	je     9184 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x48>
      {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        m_library = dlopen( vulkanLibraryName.c_str(), RTLD_NOW | RTLD_LOCAL );
    9162:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9166:	48 89 c7             	mov    %rax,%rdi
    9169:	e8 66 11 00 00       	call   a2d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    916e:	be 02 00 00 00       	mov    $0x2,%esi
    9173:	48 89 c7             	mov    %rax,%rdi
    9176:	e8 75 c1 ff ff       	call   52f0 <dlopen@plt>
    917b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    917f:	48 89 02             	mov    %rax,(%rdx)
    9182:	eb 42                	jmp    91c6 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a>
#  endif
      }
      else
      {
#  if defined( __unix__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        m_library = dlopen( "libvulkan.so", RTLD_NOW | RTLD_LOCAL );
    9184:	be 02 00 00 00       	mov    $0x2,%esi
    9189:	48 8d 05 84 08 02 00 	lea    0x20884(%rip),%rax        # 29a14 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3dc>
    9190:	48 89 c7             	mov    %rax,%rdi
    9193:	e8 58 c1 ff ff       	call   52f0 <dlopen@plt>
    9198:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    919c:	48 89 02             	mov    %rax,(%rdx)
        if ( m_library == nullptr )
    919f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91a3:	48 8b 00             	mov    (%rax),%rax
    91a6:	48 85 c0             	test   %rax,%rax
    91a9:	75 1b                	jne    91c6 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a>
        {
          m_library = dlopen( "libvulkan.so.1", RTLD_NOW | RTLD_LOCAL );
    91ab:	be 02 00 00 00       	mov    $0x2,%esi
    91b0:	48 8d 05 6a 08 02 00 	lea    0x2086a(%rip),%rax        # 29a21 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e9>
    91b7:	48 89 c7             	mov    %rax,%rdi
    91ba:	e8 31 c1 ff ff       	call   52f0 <dlopen@plt>
    91bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91c3:	48 89 02             	mov    %rax,(%rdx)
#    error unsupported platform
#  endif
      }

#  ifndef VULKAN_HPP_NO_EXCEPTIONS
      if ( m_library == nullptr )
    91c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91ca:	48 8b 00             	mov    (%rax),%rax
    91cd:	48 85 c0             	test   %rax,%rax
    91d0:	75 51                	jne    9223 <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe7>
      {
        // NOTE there should be an InitializationFailedError, but msvc insists on the symbol does not exist within the scope of this function.
        throw std::runtime_error( "Failed to load vulkan library!" );
    91d2:	bf 10 00 00 00       	mov    $0x10,%edi
    91d7:	e8 f4 be ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    91dc:	48 89 c3             	mov    %rax,%rbx
    91df:	48 8d 05 4a 08 02 00 	lea    0x2084a(%rip),%rax        # 29a30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3f8>
    91e6:	48 89 c6             	mov    %rax,%rsi
    91e9:	48 89 df             	mov    %rbx,%rdi
    91ec:	e8 9f be ff ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
    91f1:	48 8b 05 b8 8d 03 00 	mov    0x38db8(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    91f8:	48 89 c2             	mov    %rax,%rdx
    91fb:	48 8d 05 fe 87 03 00 	lea    0x387fe(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9202:	48 89 c6             	mov    %rax,%rsi
    9205:	48 89 df             	mov    %rbx,%rdi
    9208:	e8 73 c1 ff ff       	call   5380 <__cxa_throw@plt>
    920d:	49 89 c4             	mov    %rax,%r12
    9210:	48 89 df             	mov    %rbx,%rdi
    9213:	e8 38 bf ff ff       	call   5150 <__cxa_free_exception@plt>
    9218:	4c 89 e0             	mov    %r12,%rax
    921b:	48 89 c7             	mov    %rax,%rdi
    921e:	e8 7d c1 ff ff       	call   53a0 <_Unwind_Resume@plt>
      }
#  endif
    }
    9223:	90                   	nop
    9224:	48 83 c4 10          	add    $0x10,%rsp
    9228:	5b                   	pop    %rbx
    9229:	41 5c                	pop    %r12
    922b:	5d                   	pop    %rbp
    922c:	c3                   	ret
    922d:	90                   	nop

000000000000922e <_ZN2vk13DynamicLoaderD1Ev>:
    {
      std::swap( m_library, other.m_library );
      return *this;
    }

    ~DynamicLoader() VULKAN_HPP_NOEXCEPT
    922e:	55                   	push   %rbp
    922f:	48 89 e5             	mov    %rsp,%rbp
    9232:	48 83 ec 10          	sub    $0x10,%rsp
    9236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if ( m_library )
    923a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    923e:	48 8b 00             	mov    (%rax),%rax
    9241:	48 85 c0             	test   %rax,%rax
    9244:	74 0f                	je     9255 <_ZN2vk13DynamicLoaderD1Ev+0x27>
      {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
        dlclose( m_library );
    9246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    924a:	48 8b 00             	mov    (%rax),%rax
    924d:	48 89 c7             	mov    %rax,%rdi
    9250:	e8 3b bf ff ff       	call   5190 <dlclose@plt>
        ::FreeLibrary( m_library );
#  else
#    error unsupported platform
#  endif
      }
    }
    9255:	90                   	nop
    9256:	c9                   	leave
    9257:	c3                   	ret

0000000000009258 <_ZN2vk4raii17ContextDispatcherC1EPFPFvvEP12VkInstance_TPKcE>:
    }

    class ContextDispatcher : public DispatchLoaderBase
    {
    public:
      ContextDispatcher( PFN_vkGetInstanceProcAddr getProcAddr )
    9258:	55                   	push   %rbp
    9259:	48 89 e5             	mov    %rsp,%rbp
    925c:	48 83 ec 10          	sub    $0x10,%rsp
    9260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9264:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
        //=== VK_VERSION_1_0 ===
        , vkCreateInstance( PFN_vkCreateInstance( getProcAddr( NULL, "vkCreateInstance" ) ) )
        , vkEnumerateInstanceExtensionProperties( PFN_vkEnumerateInstanceExtensionProperties( getProcAddr( NULL, "vkEnumerateInstanceExtensionProperties" ) ) )
        , vkEnumerateInstanceLayerProperties( PFN_vkEnumerateInstanceLayerProperties( getProcAddr( NULL, "vkEnumerateInstanceLayerProperties" ) ) )
        //=== VK_VERSION_1_1 ===
        , vkEnumerateInstanceVersion( PFN_vkEnumerateInstanceVersion( getProcAddr( NULL, "vkEnumerateInstanceVersion" ) ) )
    9268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    926c:	48 89 c7             	mov    %rax,%rdi
    926f:	e8 28 d3 ff ff       	call   659c <_ZN2vk18DispatchLoaderBaseC1Ev>
        : vkGetInstanceProcAddr( getProcAddr )
    9274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9278:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    927c:	48 89 50 10          	mov    %rdx,0x10(%rax)
        , vkCreateInstance( PFN_vkCreateInstance( getProcAddr( NULL, "vkCreateInstance" ) ) )
    9280:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9284:	48 8d 15 dd 07 02 00 	lea    0x207dd(%rip),%rdx        # 29a68 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
    928b:	48 89 d6             	mov    %rdx,%rsi
    928e:	bf 00 00 00 00       	mov    $0x0,%edi
    9293:	ff d0                	call   *%rax
    9295:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9299:	48 89 42 18          	mov    %rax,0x18(%rdx)
        , vkEnumerateInstanceExtensionProperties( PFN_vkEnumerateInstanceExtensionProperties( getProcAddr( NULL, "vkEnumerateInstanceExtensionProperties" ) ) )
    929d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92a1:	48 8d 15 d8 07 02 00 	lea    0x207d8(%rip),%rdx        # 29a80 <_ZNSt8__detailL19__atomic_spin_countE+0x1c>
    92a8:	48 89 d6             	mov    %rdx,%rsi
    92ab:	bf 00 00 00 00       	mov    $0x0,%edi
    92b0:	ff d0                	call   *%rax
    92b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92b6:	48 89 42 20          	mov    %rax,0x20(%rdx)
        , vkEnumerateInstanceLayerProperties( PFN_vkEnumerateInstanceLayerProperties( getProcAddr( NULL, "vkEnumerateInstanceLayerProperties" ) ) )
    92ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92be:	48 8d 15 e3 07 02 00 	lea    0x207e3(%rip),%rdx        # 29aa8 <_ZNSt8__detailL19__atomic_spin_countE+0x44>
    92c5:	48 89 d6             	mov    %rdx,%rsi
    92c8:	bf 00 00 00 00       	mov    $0x0,%edi
    92cd:	ff d0                	call   *%rax
    92cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92d3:	48 89 42 28          	mov    %rax,0x28(%rdx)
        , vkEnumerateInstanceVersion( PFN_vkEnumerateInstanceVersion( getProcAddr( NULL, "vkEnumerateInstanceVersion" ) ) )
    92d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92db:	48 8d 15 e9 07 02 00 	lea    0x207e9(%rip),%rdx        # 29acb <_ZNSt8__detailL19__atomic_spin_countE+0x67>
    92e2:	48 89 d6             	mov    %rdx,%rsi
    92e5:	bf 00 00 00 00       	mov    $0x0,%edi
    92ea:	ff d0                	call   *%rax
    92ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92f0:	48 89 42 30          	mov    %rax,0x30(%rdx)
      {
      }
    92f4:	90                   	nop
    92f5:	c9                   	leave
    92f6:	c3                   	ret
    92f7:	90                   	nop

00000000000092f8 <_ZN2vk4raii7ContextC1Ev>:

    class Context
    {
    public:
#  if VULKAN_HPP_ENABLE_DYNAMIC_LOADER_TOOL
      Context()
    92f8:	55                   	push   %rbp
    92f9:	48 89 e5             	mov    %rsp,%rbp
    92fc:	41 54                	push   %r12
    92fe:	53                   	push   %rbx
    92ff:	48 83 ec 30          	sub    $0x30,%rsp
    9303:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    9307:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    930b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    930f:	48 89 c7             	mov    %rax,%rdi
    9312:	e8 d5 d3 ff ff       	call   66ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
    9317:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    931b:	48 89 c6             	mov    %rax,%rsi
    931e:	48 89 df             	mov    %rbx,%rdi
    9321:	e8 16 fe ff ff       	call   913c <_ZN2vk13DynamicLoaderC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    9326:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    932a:	48 89 c7             	mov    %rax,%rdi
    932d:	e8 bc 0f 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9332:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9336:	48 8d 58 08          	lea    0x8(%rax),%rbx
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    933a:	bf 38 00 00 00       	mov    $0x38,%edi
    933f:	e8 dc be ff ff       	call   5220 <_Znwm@plt>
    9344:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9348:	41 bc 01 00 00 00    	mov    $0x1,%r12d
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    934e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9352:	48 8d 15 8d 07 02 00 	lea    0x2078d(%rip),%rdx        # 29ae6 <_ZNSt8__detailL19__atomic_spin_countE+0x82>
    9359:	48 89 d6             	mov    %rdx,%rsi
    935c:	48 89 c7             	mov    %rax,%rdi
    935f:	e8 74 12 00 00       	call   a5d8 <_ZNK2vk13DynamicLoader14getProcAddressIPFPFvvEP12VkInstance_TPKcEEET_S7_>
    9364:	48 89 c6             	mov    %rax,%rsi
    9367:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    936b:	e8 e8 fe ff ff       	call   9258 <_ZN2vk4raii17ContextDispatcherC1EPFPFvvEP12VkInstance_TPKcE>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9370:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    9374:	48 89 df             	mov    %rbx,%rdi
    9377:	e8 aa 12 00 00       	call   a626 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1IS4_vEEPS2_>
#  else
      Context( PFN_vkGetInstanceProcAddr getInstanceProcAddr )
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher( getInstanceProcAddr ) )
#  endif
      {
      }
    937c:	eb 4c                	jmp    93ca <_ZN2vk4raii7ContextC1Ev+0xd2>
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    937e:	48 89 c3             	mov    %rax,%rbx
    9381:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9385:	48 89 c7             	mov    %rax,%rdi
    9388:	e8 61 0f 00 00       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    938d:	48 89 d8             	mov    %rbx,%rax
    9390:	48 89 c7             	mov    %rax,%rdi
    9393:	e8 08 c0 ff ff       	call   53a0 <_Unwind_Resume@plt>
        : m_dispatcher( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher(
    9398:	48 89 c3             	mov    %rax,%rbx
    939b:	45 84 e4             	test   %r12b,%r12b
    939e:	74 13                	je     93b3 <_ZN2vk4raii7ContextC1Ev+0xbb>
            m_dynamicLoader.getProcAddress<PFN_vkGetInstanceProcAddr>( "vkGetInstanceProcAddr" ) ) )
    93a0:	be 38 00 00 00       	mov    $0x38,%esi
    93a5:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    93a9:	e8 82 be ff ff       	call   5230 <_ZdlPvm@plt>
    93ae:	eb 03                	jmp    93b3 <_ZN2vk4raii7ContextC1Ev+0xbb>
      }
    93b0:	48 89 c3             	mov    %rax,%rbx
    93b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    93b7:	48 89 c7             	mov    %rax,%rdi
    93ba:	e8 6f fe ff ff       	call   922e <_ZN2vk13DynamicLoaderD1Ev>
    93bf:	48 89 d8             	mov    %rbx,%rax
    93c2:	48 89 c7             	mov    %rax,%rdi
    93c5:	e8 d6 bf ff ff       	call   53a0 <_Unwind_Resume@plt>
    93ca:	48 83 c4 30          	add    $0x30,%rsp
    93ce:	5b                   	pop    %rbx
    93cf:	41 5c                	pop    %r12
    93d1:	5d                   	pop    %rbp
    93d2:	c3                   	ret
    93d3:	90                   	nop

00000000000093d4 <_ZN2vk4raii8InstanceD1Ev>:
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
      }

      Instance( std::nullptr_t ) {}

      ~Instance()
    93d4:	55                   	push   %rbp
    93d5:	48 89 e5             	mov    %rsp,%rbp
    93d8:	48 83 ec 10          	sub    $0x10,%rsp
    93dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    93e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93e4:	48 89 c7             	mov    %rax,%rdi
    93e7:	e8 14 00 00 00       	call   9400 <_ZN2vk4raii8Instance5clearEv>
      }
    93ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f0:	48 83 c0 10          	add    $0x10,%rax
    93f4:	48 89 c7             	mov    %rax,%rdi
    93f7:	e8 b4 12 00 00       	call   a6b0 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>
    93fc:	90                   	nop
    93fd:	c9                   	leave
    93fe:	c3                   	ret
    93ff:	90                   	nop

0000000000009400 <_ZN2vk4raii8Instance5clearEv>:
      VULKAN_HPP_NAMESPACE::Instance const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_instance;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9400:	55                   	push   %rbp
    9401:	48 89 e5             	mov    %rsp,%rbp
    9404:	41 54                	push   %r12
    9406:	53                   	push   %rbx
    9407:	48 83 ec 10          	sub    $0x10,%rsp
    940b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        if ( m_instance )
    940f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9413:	48 89 c7             	mov    %rax,%rdi
    9416:	e8 09 fd ff ff       	call   9124 <_ZNK2vk8InstancecvbEv>
    941b:	84 c0                	test   %al,%al
    941d:	74 2d                	je     944c <_ZN2vk4raii8Instance5clearEv+0x4c>
        {
          getDispatcher()->vkDestroyInstance( static_cast<VkInstance>( m_instance ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    941f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9423:	48 89 c7             	mov    %rax,%rdi
    9426:	e8 5d 00 00 00       	call   9488 <_ZNK2vk4raii8Instance13getDispatcherEv>
    942b:	4c 8b 60 10          	mov    0x10(%rax),%r12
    942f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9433:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    943b:	48 89 c7             	mov    %rax,%rdi
    943e:	e8 cf fc ff ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    9443:	48 89 de             	mov    %rbx,%rsi
    9446:	48 89 c7             	mov    %rax,%rdi
    9449:	41 ff d4             	call   *%r12
        }
        m_instance   = nullptr;
    944c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9450:	be 00 00 00 00       	mov    $0x0,%esi
    9455:	48 89 c7             	mov    %rax,%rdi
    9458:	e8 97 fc ff ff       	call   90f4 <_ZN2vk8InstanceaSEDn>
        m_allocator  = nullptr;
    945d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9461:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9468:	00 
        m_dispatcher = nullptr;
    9469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    946d:	48 83 c0 10          	add    $0x10,%rax
    9471:	be 00 00 00 00       	mov    $0x0,%esi
    9476:	48 89 c7             	mov    %rax,%rdi
    9479:	e8 cc 12 00 00       	call   a74a <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEaSEDn>
      }
    947e:	90                   	nop
    947f:	48 83 c4 10          	add    $0x10,%rsp
    9483:	5b                   	pop    %rbx
    9484:	41 5c                	pop    %r12
    9486:	5d                   	pop    %rbp
    9487:	c3                   	ret

0000000000009488 <_ZNK2vk4raii8Instance13getDispatcherEv>:

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    9488:	55                   	push   %rbp
    9489:	48 89 e5             	mov    %rsp,%rbp
    948c:	48 83 ec 10          	sub    $0x10,%rsp
    9490:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    9494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9498:	48 83 c0 10          	add    $0x10,%rax
    949c:	48 89 c7             	mov    %rax,%rdi
    949f:	e8 ce 12 00 00       	call   a772 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEptEv>
    94a4:	48 89 c7             	mov    %rax,%rdi
    94a7:	e8 a6 d0 ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    94ac:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    94b2:	74 28                	je     94dc <_ZNK2vk4raii8Instance13getDispatcherEv+0x54>
    94b4:	48 8d 05 45 06 02 00 	lea    0x20645(%rip),%rax        # 29b00 <_ZNSt8__detailL19__atomic_spin_countE+0x9c>
    94bb:	48 89 c1             	mov    %rax,%rcx
    94be:	ba 25 0a 00 00       	mov    $0xa25,%edx
    94c3:	48 8d 05 86 06 02 00 	lea    0x20686(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    94ca:	48 89 c6             	mov    %rax,%rsi
    94cd:	48 8d 05 a4 06 02 00 	lea    0x206a4(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    94d4:	48 89 c7             	mov    %rax,%rdi
    94d7:	e8 34 bc ff ff       	call   5110 <__assert_fail@plt>
        return &*m_dispatcher;
    94dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e0:	48 83 c0 10          	add    $0x10,%rax
    94e4:	48 89 c7             	mov    %rax,%rdi
    94e7:	e8 a0 12 00 00       	call   a78c <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv>
      }
    94ec:	c9                   	leave
    94ed:	c3                   	ret

00000000000094ee <_ZN2vk4raii14PhysicalDeviceD1Ev>:
      {
      }

      PhysicalDevice( std::nullptr_t ) {}

      ~PhysicalDevice()
    94ee:	55                   	push   %rbp
    94ef:	48 89 e5             	mov    %rsp,%rbp
    94f2:	48 83 ec 10          	sub    $0x10,%rsp
    94f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    94fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fe:	48 89 c7             	mov    %rax,%rdi
    9501:	e8 04 00 00 00       	call   950a <_ZN2vk4raii14PhysicalDevice5clearEv>
      }
    9506:	90                   	nop
    9507:	c9                   	leave
    9508:	c3                   	ret
    9509:	90                   	nop

000000000000950a <_ZN2vk4raii14PhysicalDevice5clearEv>:
      VULKAN_HPP_NAMESPACE::PhysicalDevice const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_physicalDevice;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    950a:	55                   	push   %rbp
    950b:	48 89 e5             	mov    %rsp,%rbp
    950e:	48 83 ec 10          	sub    $0x10,%rsp
    9512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        m_physicalDevice = nullptr;
    9516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    951a:	be 00 00 00 00       	mov    $0x0,%esi
    951f:	48 89 c7             	mov    %rax,%rdi
    9522:	e8 af fb ff ff       	call   90d6 <_ZN2vk14PhysicalDeviceaSEDn>
        m_dispatcher     = nullptr;
    9527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    952b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9532:	00 
      }
    9533:	90                   	nop
    9534:	c9                   	leave
    9535:	c3                   	ret

0000000000009536 <_ZN2vk4raii6DeviceD1Ev>:
                                                                                                   static_cast<VkDevice>( m_device ) ) );
      }

      Device( std::nullptr_t ) {}

      ~Device()
    9536:	55                   	push   %rbp
    9537:	48 89 e5             	mov    %rsp,%rbp
    953a:	48 83 ec 10          	sub    $0x10,%rsp
    953e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    9542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9546:	48 89 c7             	mov    %rax,%rdi
    9549:	e8 14 00 00 00       	call   9562 <_ZN2vk4raii6Device5clearEv>
      }
    954e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9552:	48 83 c0 10          	add    $0x10,%rax
    9556:	48 89 c7             	mov    %rax,%rdi
    9559:	e8 70 12 00 00       	call   a7ce <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EED1Ev>
    955e:	90                   	nop
    955f:	c9                   	leave
    9560:	c3                   	ret
    9561:	90                   	nop

0000000000009562 <_ZN2vk4raii6Device5clearEv>:
      VULKAN_HPP_NAMESPACE::Device const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_device;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9562:	55                   	push   %rbp
    9563:	48 89 e5             	mov    %rsp,%rbp
    9566:	41 54                	push   %r12
    9568:	53                   	push   %rbx
    9569:	48 83 ec 10          	sub    $0x10,%rsp
    956d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
        if ( m_device )
    9571:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9575:	48 89 c7             	mov    %rax,%rdi
    9578:	e8 41 fb ff ff       	call   90be <_ZNK2vk6DevicecvbEv>
    957d:	84 c0                	test   %al,%al
    957f:	74 2d                	je     95ae <_ZN2vk4raii6Device5clearEv+0x4c>
        {
          getDispatcher()->vkDestroyDevice( static_cast<VkDevice>( m_device ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    9581:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9585:	48 89 c7             	mov    %rax,%rdi
    9588:	e8 5d 00 00 00       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
    958d:	4c 8b 60 18          	mov    0x18(%rax),%r12
    9591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9595:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9599:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    959d:	48 89 c7             	mov    %rax,%rdi
    95a0:	e8 07 fb ff ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
    95a5:	48 89 de             	mov    %rbx,%rsi
    95a8:	48 89 c7             	mov    %rax,%rdi
    95ab:	41 ff d4             	call   *%r12
        }
        m_device     = nullptr;
    95ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95b2:	be 00 00 00 00       	mov    $0x0,%esi
    95b7:	48 89 c7             	mov    %rax,%rdi
    95ba:	e8 cf fa ff ff       	call   908e <_ZN2vk6DeviceaSEDn>
        m_allocator  = nullptr;
    95bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95c3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    95ca:	00 
        m_dispatcher = nullptr;
    95cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95cf:	48 83 c0 10          	add    $0x10,%rax
    95d3:	be 00 00 00 00       	mov    $0x0,%esi
    95d8:	48 89 c7             	mov    %rax,%rdi
    95db:	e8 88 12 00 00       	call   a868 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEaSEDn>
      }
    95e0:	90                   	nop
    95e1:	48 83 c4 10          	add    $0x10,%rsp
    95e5:	5b                   	pop    %rbx
    95e6:	41 5c                	pop    %r12
    95e8:	5d                   	pop    %rbp
    95e9:	c3                   	ret

00000000000095ea <_ZNK2vk4raii6Device13getDispatcherEv>:

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher const * getDispatcher() const
    95ea:	55                   	push   %rbp
    95eb:	48 89 e5             	mov    %rsp,%rbp
    95ee:	48 83 ec 10          	sub    $0x10,%rsp
    95f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    95f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95fa:	48 83 c0 10          	add    $0x10,%rax
    95fe:	48 89 c7             	mov    %rax,%rdi
    9601:	e8 8a 12 00 00       	call   a890 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEptEv>
    9606:	48 89 c7             	mov    %rax,%rdi
    9609:	e8 44 cf ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    960e:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9614:	74 28                	je     963e <_ZNK2vk4raii6Device13getDispatcherEv+0x54>
    9616:	48 8d 05 93 05 02 00 	lea    0x20593(%rip),%rax        # 29bb0 <_ZNSt8__detailL19__atomic_spin_countE+0x14c>
    961d:	48 89 c1             	mov    %rax,%rcx
    9620:	ba d7 0c 00 00       	mov    $0xcd7,%edx
    9625:	48 8d 05 24 05 02 00 	lea    0x20524(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    962c:	48 89 c6             	mov    %rax,%rsi
    962f:	48 8d 05 42 05 02 00 	lea    0x20542(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    9636:	48 89 c7             	mov    %rax,%rdi
    9639:	e8 d2 ba ff ff       	call   5110 <__assert_fail@plt>
        return &*m_dispatcher;
    963e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9642:	48 83 c0 10          	add    $0x10,%rax
    9646:	48 89 c7             	mov    %rax,%rdi
    9649:	e8 5c 12 00 00       	call   a8aa <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEdeEv>
      }
    964e:	c9                   	leave
    964f:	c3                   	ret

0000000000009650 <_ZN2vk4raii11CommandPoolD1Ev>:
      {
      }

      CommandPool( std::nullptr_t ) {}

      ~CommandPool()
    9650:	55                   	push   %rbp
    9651:	48 89 e5             	mov    %rsp,%rbp
    9654:	48 83 ec 10          	sub    $0x10,%rsp
    9658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    965c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9660:	48 89 c7             	mov    %rax,%rdi
    9663:	e8 04 00 00 00       	call   966c <_ZN2vk4raii11CommandPool5clearEv>
      }
    9668:	90                   	nop
    9669:	c9                   	leave
    966a:	c3                   	ret
    966b:	90                   	nop

000000000000966c <_ZN2vk4raii11CommandPool5clearEv>:
      VULKAN_HPP_NAMESPACE::CommandPool const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_commandPool;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    966c:	55                   	push   %rbp
    966d:	48 89 e5             	mov    %rsp,%rbp
    9670:	41 55                	push   %r13
    9672:	41 54                	push   %r12
    9674:	53                   	push   %rbx
    9675:	48 83 ec 18          	sub    $0x18,%rsp
    9679:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
        if ( m_commandPool )
    967d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9681:	48 83 c0 08          	add    $0x8,%rax
    9685:	48 89 c7             	mov    %rax,%rdi
    9688:	e8 cb f9 ff ff       	call   9058 <_ZNK2vk11CommandPoolcvbEv>
    968d:	84 c0                	test   %al,%al
    968f:	74 46                	je     96d7 <_ZN2vk4raii11CommandPool5clearEv+0x6b>
        {
          getDispatcher()->vkDestroyCommandPool(
    9691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9695:	48 89 c7             	mov    %rax,%rdi
    9698:	e8 85 00 00 00       	call   9722 <_ZNK2vk4raii11CommandPool13getDispatcherEv>
    969d:	4c 8b a0 40 02 00 00 	mov    0x240(%rax),%r12
            static_cast<VkDevice>( m_device ), static_cast<VkCommandPool>( m_commandPool ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    96a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96a8:	48 8b 58 10          	mov    0x10(%rax),%rbx
          getDispatcher()->vkDestroyCommandPool(
    96ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96b0:	48 83 c0 08          	add    $0x8,%rax
    96b4:	48 89 c7             	mov    %rax,%rdi
    96b7:	e8 8a f9 ff ff       	call   9046 <_ZNK2vk11CommandPoolcvP15VkCommandPool_TEv>
    96bc:	49 89 c5             	mov    %rax,%r13
    96bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96c3:	48 89 c7             	mov    %rax,%rdi
    96c6:	e8 e1 f9 ff ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
    96cb:	48 89 da             	mov    %rbx,%rdx
    96ce:	4c 89 ee             	mov    %r13,%rsi
    96d1:	48 89 c7             	mov    %rax,%rdi
    96d4:	41 ff d4             	call   *%r12
        }
        m_device      = nullptr;
    96d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96db:	be 00 00 00 00       	mov    $0x0,%esi
    96e0:	48 89 c7             	mov    %rax,%rdi
    96e3:	e8 a6 f9 ff ff       	call   908e <_ZN2vk6DeviceaSEDn>
        m_commandPool = nullptr;
    96e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96ec:	48 83 c0 08          	add    $0x8,%rax
    96f0:	be 00 00 00 00       	mov    $0x0,%esi
    96f5:	48 89 c7             	mov    %rax,%rdi
    96f8:	e8 2b f9 ff ff       	call   9028 <_ZN2vk11CommandPoolaSEDn>
        m_allocator   = nullptr;
    96fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9701:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9708:	00 
        m_dispatcher  = nullptr;
    9709:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    970d:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9714:	00 
      }
    9715:	90                   	nop
    9716:	48 83 c4 18          	add    $0x18,%rsp
    971a:	5b                   	pop    %rbx
    971b:	41 5c                	pop    %r12
    971d:	41 5d                	pop    %r13
    971f:	5d                   	pop    %rbp
    9720:	c3                   	ret
    9721:	90                   	nop

0000000000009722 <_ZNK2vk4raii11CommandPool13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::Device getDevice() const
      {
        return m_device;
      }

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher const * getDispatcher() const
    9722:	55                   	push   %rbp
    9723:	48 89 e5             	mov    %rsp,%rbp
    9726:	48 83 ec 10          	sub    $0x10,%rsp
    972a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    972e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9732:	48 8b 40 18          	mov    0x18(%rax),%rax
    9736:	48 89 c7             	mov    %rax,%rdi
    9739:	e8 14 ce ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    973e:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9744:	74 28                	je     976e <_ZNK2vk4raii11CommandPool13getDispatcherEv+0x4c>
    9746:	48 8d 05 b3 04 02 00 	lea    0x204b3(%rip),%rax        # 29c00 <_ZNSt8__detailL19__atomic_spin_countE+0x19c>
    974d:	48 89 c1             	mov    %rax,%rcx
    9750:	ba 77 12 00 00       	mov    $0x1277,%edx
    9755:	48 8d 05 f4 03 02 00 	lea    0x203f4(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    975c:	48 89 c6             	mov    %rax,%rsi
    975f:	48 8d 05 12 04 02 00 	lea    0x20412(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    9766:	48 89 c7             	mov    %rax,%rdi
    9769:	e8 a2 b9 ff ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
    976e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9772:	48 8b 40 18          	mov    0x18(%rax),%rax
      }
    9776:	c9                   	leave
    9777:	c3                   	ret

0000000000009778 <_ZN2vk4raii13CommandBufferD1Ev>:
      {
      }

      CommandBuffer( std::nullptr_t ) {}

      ~CommandBuffer()
    9778:	55                   	push   %rbp
    9779:	48 89 e5             	mov    %rsp,%rbp
    977c:	48 83 ec 10          	sub    $0x10,%rsp
    9780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    9784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9788:	48 89 c7             	mov    %rax,%rdi
    978b:	e8 04 00 00 00       	call   9794 <_ZN2vk4raii13CommandBuffer5clearEv>
      }
    9790:	90                   	nop
    9791:	c9                   	leave
    9792:	c3                   	ret
    9793:	90                   	nop

0000000000009794 <_ZN2vk4raii13CommandBuffer5clearEv>:
      VULKAN_HPP_NAMESPACE::CommandBuffer const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_commandBuffer;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9794:	55                   	push   %rbp
    9795:	48 89 e5             	mov    %rsp,%rbp
    9798:	41 55                	push   %r13
    979a:	41 54                	push   %r12
    979c:	53                   	push   %rbx
    979d:	48 83 ec 18          	sub    $0x18,%rsp
    97a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
        if ( m_commandBuffer )
    97a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97a9:	48 83 c0 10          	add    $0x10,%rax
    97ad:	48 89 c7             	mov    %rax,%rdi
    97b0:	e8 5b f8 ff ff       	call   9010 <_ZNK2vk13CommandBuffercvbEv>
    97b5:	84 c0                	test   %al,%al
    97b7:	74 4a                	je     9803 <_ZN2vk4raii13CommandBuffer5clearEv+0x6f>
        {
          getDispatcher()->vkFreeCommandBuffers(
    97b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97bd:	48 89 c7             	mov    %rax,%rdi
    97c0:	e8 91 00 00 00       	call   9856 <_ZNK2vk4raii13CommandBuffer13getDispatcherEv>
    97c5:	48 8b 98 58 02 00 00 	mov    0x258(%rax),%rbx
            static_cast<VkDevice>( m_device ), static_cast<VkCommandPool>( m_commandPool ), 1, reinterpret_cast<VkCommandBuffer const *>( &m_commandBuffer ) );
    97cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97d0:	4c 8d 60 10          	lea    0x10(%rax),%r12
          getDispatcher()->vkFreeCommandBuffers(
    97d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97d8:	48 83 c0 08          	add    $0x8,%rax
    97dc:	48 89 c7             	mov    %rax,%rdi
    97df:	e8 62 f8 ff ff       	call   9046 <_ZNK2vk11CommandPoolcvP15VkCommandPool_TEv>
    97e4:	49 89 c5             	mov    %rax,%r13
    97e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    97eb:	48 89 c7             	mov    %rax,%rdi
    97ee:	e8 b9 f8 ff ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
    97f3:	4c 89 e1             	mov    %r12,%rcx
    97f6:	ba 01 00 00 00       	mov    $0x1,%edx
    97fb:	4c 89 ee             	mov    %r13,%rsi
    97fe:	48 89 c7             	mov    %rax,%rdi
    9801:	ff d3                	call   *%rbx
        }
        m_device        = nullptr;
    9803:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9807:	be 00 00 00 00       	mov    $0x0,%esi
    980c:	48 89 c7             	mov    %rax,%rdi
    980f:	e8 7a f8 ff ff       	call   908e <_ZN2vk6DeviceaSEDn>
        m_commandPool   = nullptr;
    9814:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9818:	48 83 c0 08          	add    $0x8,%rax
    981c:	be 00 00 00 00       	mov    $0x0,%esi
    9821:	48 89 c7             	mov    %rax,%rdi
    9824:	e8 ff f7 ff ff       	call   9028 <_ZN2vk11CommandPoolaSEDn>
        m_commandBuffer = nullptr;
    9829:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    982d:	48 83 c0 10          	add    $0x10,%rax
    9831:	be 00 00 00 00       	mov    $0x0,%esi
    9836:	48 89 c7             	mov    %rax,%rdi
    9839:	e8 b4 f7 ff ff       	call   8ff2 <_ZN2vk13CommandBufferaSEDn>
        m_dispatcher    = nullptr;
    983e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9842:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9849:	00 
      }
    984a:	90                   	nop
    984b:	48 83 c4 18          	add    $0x18,%rsp
    984f:	5b                   	pop    %rbx
    9850:	41 5c                	pop    %r12
    9852:	41 5d                	pop    %r13
    9854:	5d                   	pop    %rbp
    9855:	c3                   	ret

0000000000009856 <_ZNK2vk4raii13CommandBuffer13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::Device getDevice() const
      {
        return m_device;
      }

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher const * getDispatcher() const
    9856:	55                   	push   %rbp
    9857:	48 89 e5             	mov    %rsp,%rbp
    985a:	48 83 ec 10          	sub    $0x10,%rsp
    985e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    9862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9866:	48 8b 40 18          	mov    0x18(%rax),%rax
    986a:	48 89 c7             	mov    %rax,%rdi
    986d:	e8 e0 cc ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    9872:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9878:	74 28                	je     98a2 <_ZNK2vk4raii13CommandBuffer13getDispatcherEv+0x4c>
    987a:	48 8d 05 cf 03 02 00 	lea    0x203cf(%rip),%rax        # 29c50 <_ZNSt8__detailL19__atomic_spin_countE+0x1ec>
    9881:	48 89 c1             	mov    %rax,%rcx
    9884:	ba dc 12 00 00       	mov    $0x12dc,%edx
    9889:	48 8d 05 c0 02 02 00 	lea    0x202c0(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    9890:	48 89 c6             	mov    %rax,%rsi
    9893:	48 8d 05 de 02 02 00 	lea    0x202de(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    989a:	48 89 c7             	mov    %rax,%rdi
    989d:	e8 6e b8 ff ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
    98a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98a6:	48 8b 40 18          	mov    0x18(%rax),%rax
      }
    98aa:	c9                   	leave
    98ab:	c3                   	ret

00000000000098ac <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    98ac:	55                   	push   %rbp
    98ad:	48 89 e5             	mov    %rsp,%rbp
    98b0:	48 83 ec 10          	sub    $0x10,%rsp
    98b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98bc:	48 89 c7             	mov    %rax,%rdi
    98bf:	e8 28 10 00 00       	call   a8ec <_ZNSaIN2vk4raii13CommandBufferEED1Ev>
    98c4:	90                   	nop
    98c5:	c9                   	leave
    98c6:	c3                   	ret
    98c7:	90                   	nop

00000000000098c8 <_ZN2vk4raii22DebugUtilsMessengerEXTD1Ev>:
      {
      }

      DebugUtilsMessengerEXT( std::nullptr_t ) {}

      ~DebugUtilsMessengerEXT()
    98c8:	55                   	push   %rbp
    98c9:	48 89 e5             	mov    %rsp,%rbp
    98cc:	48 83 ec 10          	sub    $0x10,%rsp
    98d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    98d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98d8:	48 89 c7             	mov    %rax,%rdi
    98db:	e8 04 00 00 00       	call   98e4 <_ZN2vk4raii22DebugUtilsMessengerEXT5clearEv>
      }
    98e0:	90                   	nop
    98e1:	c9                   	leave
    98e2:	c3                   	ret
    98e3:	90                   	nop

00000000000098e4 <_ZN2vk4raii22DebugUtilsMessengerEXT5clearEv>:
      VULKAN_HPP_NAMESPACE::DebugUtilsMessengerEXT const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_messenger;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    98e4:	55                   	push   %rbp
    98e5:	48 89 e5             	mov    %rsp,%rbp
    98e8:	41 55                	push   %r13
    98ea:	41 54                	push   %r12
    98ec:	53                   	push   %rbx
    98ed:	48 83 ec 18          	sub    $0x18,%rsp
    98f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
        if ( m_messenger )
    98f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98f9:	48 83 c0 08          	add    $0x8,%rax
    98fd:	48 89 c7             	mov    %rax,%rdi
    9900:	e8 8d f6 ff ff       	call   8f92 <_ZNK2vk22DebugUtilsMessengerEXTcvbEv>
    9905:	84 c0                	test   %al,%al
    9907:	74 46                	je     994f <_ZN2vk4raii22DebugUtilsMessengerEXT5clearEv+0x6b>
        {
          getDispatcher()->vkDestroyDebugUtilsMessengerEXT( static_cast<VkInstance>( m_instance ),
    9909:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    990d:	48 89 c7             	mov    %rax,%rdi
    9910:	e8 85 00 00 00       	call   999a <_ZNK2vk4raii22DebugUtilsMessengerEXT13getDispatcherEv>
    9915:	4c 8b a0 20 01 00 00 	mov    0x120(%rax),%r12
                                                            static_cast<VkDebugUtilsMessengerEXT>( m_messenger ),
                                                            reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    991c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9920:	48 8b 58 10          	mov    0x10(%rax),%rbx
          getDispatcher()->vkDestroyDebugUtilsMessengerEXT( static_cast<VkInstance>( m_instance ),
    9924:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9928:	48 83 c0 08          	add    $0x8,%rax
    992c:	48 89 c7             	mov    %rax,%rdi
    992f:	e8 4c f6 ff ff       	call   8f80 <_ZNK2vk22DebugUtilsMessengerEXTcvP26VkDebugUtilsMessengerEXT_TEv>
    9934:	49 89 c5             	mov    %rax,%r13
    9937:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    993b:	48 89 c7             	mov    %rax,%rdi
    993e:	e8 cf f7 ff ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    9943:	48 89 da             	mov    %rbx,%rdx
    9946:	4c 89 ee             	mov    %r13,%rsi
    9949:	48 89 c7             	mov    %rax,%rdi
    994c:	41 ff d4             	call   *%r12
        }
        m_instance   = nullptr;
    994f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9953:	be 00 00 00 00       	mov    $0x0,%esi
    9958:	48 89 c7             	mov    %rax,%rdi
    995b:	e8 94 f7 ff ff       	call   90f4 <_ZN2vk8InstanceaSEDn>
        m_messenger  = nullptr;
    9960:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9964:	48 83 c0 08          	add    $0x8,%rax
    9968:	be 00 00 00 00       	mov    $0x0,%esi
    996d:	48 89 c7             	mov    %rax,%rdi
    9970:	e8 ed f5 ff ff       	call   8f62 <_ZN2vk22DebugUtilsMessengerEXTaSEDn>
        m_allocator  = nullptr;
    9975:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9979:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9980:	00 
        m_dispatcher = nullptr;
    9981:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9985:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    998c:	00 
      }
    998d:	90                   	nop
    998e:	48 83 c4 18          	add    $0x18,%rsp
    9992:	5b                   	pop    %rbx
    9993:	41 5c                	pop    %r12
    9995:	41 5d                	pop    %r13
    9997:	5d                   	pop    %rbp
    9998:	c3                   	ret
    9999:	90                   	nop

000000000000999a <_ZNK2vk4raii22DebugUtilsMessengerEXT13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::Instance getInstance() const
      {
        return m_instance;
      }

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    999a:	55                   	push   %rbp
    999b:	48 89 e5             	mov    %rsp,%rbp
    999e:	48 83 ec 10          	sub    $0x10,%rsp
    99a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    99a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99aa:	48 8b 40 18          	mov    0x18(%rax),%rax
    99ae:	48 89 c7             	mov    %rax,%rdi
    99b1:	e8 9c cb ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    99b6:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    99bc:	74 28                	je     99e6 <_ZNK2vk4raii22DebugUtilsMessengerEXT13getDispatcherEv+0x4c>
    99be:	48 8d 05 e3 02 02 00 	lea    0x202e3(%rip),%rax        # 29ca8 <_ZNSt8__detailL19__atomic_spin_countE+0x244>
    99c5:	48 89 c1             	mov    %rax,%rcx
    99c8:	ba f5 17 00 00       	mov    $0x17f5,%edx
    99cd:	48 8d 05 7c 01 02 00 	lea    0x2017c(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    99d4:	48 89 c6             	mov    %rax,%rsi
    99d7:	48 8d 05 9a 01 02 00 	lea    0x2019a(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    99de:	48 89 c7             	mov    %rax,%rdi
    99e1:	e8 2a b7 ff ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
    99e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99ea:	48 8b 40 18          	mov    0x18(%rax),%rax
      }
    99ee:	c9                   	leave
    99ef:	c3                   	ret

00000000000099f0 <_ZN2vk4raii5QueueD1Ev>:
      {
      }

      Queue( std::nullptr_t ) {}

      ~Queue()
    99f0:	55                   	push   %rbp
    99f1:	48 89 e5             	mov    %rsp,%rbp
    99f4:	48 83 ec 10          	sub    $0x10,%rsp
    99f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    99fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a00:	48 89 c7             	mov    %rax,%rdi
    9a03:	e8 04 00 00 00       	call   9a0c <_ZN2vk4raii5Queue5clearEv>
      }
    9a08:	90                   	nop
    9a09:	c9                   	leave
    9a0a:	c3                   	ret
    9a0b:	90                   	nop

0000000000009a0c <_ZN2vk4raii5Queue5clearEv>:
      VULKAN_HPP_NAMESPACE::Queue const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_queue;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9a0c:	55                   	push   %rbp
    9a0d:	48 89 e5             	mov    %rsp,%rbp
    9a10:	48 83 ec 10          	sub    $0x10,%rsp
    9a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        m_queue      = nullptr;
    9a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a1c:	be 00 00 00 00       	mov    $0x0,%esi
    9a21:	48 89 c7             	mov    %rax,%rdi
    9a24:	e8 47 f6 ff ff       	call   9070 <_ZN2vk5QueueaSEDn>
        m_dispatcher = nullptr;
    9a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9a34:	00 
      }
    9a35:	90                   	nop
    9a36:	c9                   	leave
    9a37:	c3                   	ret

0000000000009a38 <_ZN2vk4raii10SurfaceKHRD1Ev>:
      {
      }

      SurfaceKHR( std::nullptr_t ) {}

      ~SurfaceKHR()
    9a38:	55                   	push   %rbp
    9a39:	48 89 e5             	mov    %rsp,%rbp
    9a3c:	48 83 ec 10          	sub    $0x10,%rsp
    9a40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    9a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a48:	48 89 c7             	mov    %rax,%rdi
    9a4b:	e8 04 00 00 00       	call   9a54 <_ZN2vk4raii10SurfaceKHR5clearEv>
      }
    9a50:	90                   	nop
    9a51:	c9                   	leave
    9a52:	c3                   	ret
    9a53:	90                   	nop

0000000000009a54 <_ZN2vk4raii10SurfaceKHR5clearEv>:
      VULKAN_HPP_NAMESPACE::SurfaceKHR const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_surface;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9a54:	55                   	push   %rbp
    9a55:	48 89 e5             	mov    %rsp,%rbp
    9a58:	41 55                	push   %r13
    9a5a:	41 54                	push   %r12
    9a5c:	53                   	push   %rbx
    9a5d:	48 83 ec 18          	sub    $0x18,%rsp
    9a61:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
        if ( m_surface )
    9a65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a69:	48 83 c0 08          	add    $0x8,%rax
    9a6d:	48 89 c7             	mov    %rax,%rdi
    9a70:	e8 d5 f4 ff ff       	call   8f4a <_ZNK2vk10SurfaceKHRcvbEv>
    9a75:	84 c0                	test   %al,%al
    9a77:	74 46                	je     9abf <_ZN2vk4raii10SurfaceKHR5clearEv+0x6b>
        {
          getDispatcher()->vkDestroySurfaceKHR(
    9a79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a7d:	48 89 c7             	mov    %rax,%rdi
    9a80:	e8 85 00 00 00       	call   9b0a <_ZNK2vk4raii10SurfaceKHR13getDispatcherEv>
    9a85:	4c 8b a0 70 02 00 00 	mov    0x270(%rax),%r12
            static_cast<VkInstance>( m_instance ), static_cast<VkSurfaceKHR>( m_surface ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    9a8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a90:	48 8b 58 10          	mov    0x10(%rax),%rbx
          getDispatcher()->vkDestroySurfaceKHR(
    9a94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a98:	48 83 c0 08          	add    $0x8,%rax
    9a9c:	48 89 c7             	mov    %rax,%rdi
    9a9f:	e8 94 f4 ff ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
    9aa4:	49 89 c5             	mov    %rax,%r13
    9aa7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9aab:	48 89 c7             	mov    %rax,%rdi
    9aae:	e8 5f f6 ff ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
    9ab3:	48 89 da             	mov    %rbx,%rdx
    9ab6:	4c 89 ee             	mov    %r13,%rsi
    9ab9:	48 89 c7             	mov    %rax,%rdi
    9abc:	41 ff d4             	call   *%r12
        }
        m_instance   = nullptr;
    9abf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ac3:	be 00 00 00 00       	mov    $0x0,%esi
    9ac8:	48 89 c7             	mov    %rax,%rdi
    9acb:	e8 24 f6 ff ff       	call   90f4 <_ZN2vk8InstanceaSEDn>
        m_surface    = nullptr;
    9ad0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ad4:	48 83 c0 08          	add    $0x8,%rax
    9ad8:	be 00 00 00 00       	mov    $0x0,%esi
    9add:	48 89 c7             	mov    %rax,%rdi
    9ae0:	e8 35 f4 ff ff       	call   8f1a <_ZN2vk10SurfaceKHRaSEDn>
        m_allocator  = nullptr;
    9ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ae9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9af0:	00 
        m_dispatcher = nullptr;
    9af1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9af5:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9afc:	00 
      }
    9afd:	90                   	nop
    9afe:	48 83 c4 18          	add    $0x18,%rsp
    9b02:	5b                   	pop    %rbx
    9b03:	41 5c                	pop    %r12
    9b05:	41 5d                	pop    %r13
    9b07:	5d                   	pop    %rbp
    9b08:	c3                   	ret
    9b09:	90                   	nop

0000000000009b0a <_ZNK2vk4raii10SurfaceKHR13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::Instance getInstance() const
      {
        return m_instance;
      }

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    9b0a:	55                   	push   %rbp
    9b0b:	48 89 e5             	mov    %rsp,%rbp
    9b0e:	48 83 ec 10          	sub    $0x10,%rsp
    9b12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    9b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1a:	48 8b 40 18          	mov    0x18(%rax),%rax
    9b1e:	48 89 c7             	mov    %rax,%rdi
    9b21:	e8 2c ca ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    9b26:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9b2c:	74 28                	je     9b56 <_ZNK2vk4raii10SurfaceKHR13getDispatcherEv+0x4c>
    9b2e:	48 8d 05 d3 01 02 00 	lea    0x201d3(%rip),%rax        # 29d08 <_ZNSt8__detailL19__atomic_spin_countE+0x2a4>
    9b35:	48 89 c1             	mov    %rax,%rcx
    9b38:	ba ca 27 00 00       	mov    $0x27ca,%edx
    9b3d:	48 8d 05 0c 00 02 00 	lea    0x2000c(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    9b44:	48 89 c6             	mov    %rax,%rsi
    9b47:	48 8d 05 2a 00 02 00 	lea    0x2002a(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    9b4e:	48 89 c7             	mov    %rax,%rdi
    9b51:	e8 ba b5 ff ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
    9b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b5a:	48 8b 40 18          	mov    0x18(%rax),%rax
      }
    9b5e:	c9                   	leave
    9b5f:	c3                   	ret

0000000000009b60 <_ZN2vk4raii12SwapchainKHRD1Ev>:
      {
      }

      SwapchainKHR( std::nullptr_t ) {}

      ~SwapchainKHR()
    9b60:	55                   	push   %rbp
    9b61:	48 89 e5             	mov    %rsp,%rbp
    9b64:	48 83 ec 10          	sub    $0x10,%rsp
    9b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        clear();
    9b6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b70:	48 89 c7             	mov    %rax,%rdi
    9b73:	e8 04 00 00 00       	call   9b7c <_ZN2vk4raii12SwapchainKHR5clearEv>
      }
    9b78:	90                   	nop
    9b79:	c9                   	leave
    9b7a:	c3                   	ret
    9b7b:	90                   	nop

0000000000009b7c <_ZN2vk4raii12SwapchainKHR5clearEv>:
      VULKAN_HPP_NAMESPACE::SwapchainKHR const & operator*() const VULKAN_HPP_NOEXCEPT
      {
        return m_swapchain;
      }

      void clear() VULKAN_HPP_NOEXCEPT
    9b7c:	55                   	push   %rbp
    9b7d:	48 89 e5             	mov    %rsp,%rbp
    9b80:	41 55                	push   %r13
    9b82:	41 54                	push   %r12
    9b84:	53                   	push   %rbx
    9b85:	48 83 ec 18          	sub    $0x18,%rsp
    9b89:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
        if ( m_swapchain )
    9b8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b91:	48 83 c0 08          	add    $0x8,%rax
    9b95:	48 89 c7             	mov    %rax,%rdi
    9b98:	e8 3d f4 ff ff       	call   8fda <_ZNK2vk12SwapchainKHRcvbEv>
    9b9d:	84 c0                	test   %al,%al
    9b9f:	74 46                	je     9be7 <_ZN2vk4raii12SwapchainKHR5clearEv+0x6b>
        {
          getDispatcher()->vkDestroySwapchainKHR(
    9ba1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ba5:	48 89 c7             	mov    %rax,%rdi
    9ba8:	e8 85 00 00 00       	call   9c32 <_ZNK2vk4raii12SwapchainKHR13getDispatcherEv>
    9bad:	4c 8b a0 70 0d 00 00 	mov    0xd70(%rax),%r12
            static_cast<VkDevice>( m_device ), static_cast<VkSwapchainKHR>( m_swapchain ), reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ) );
    9bb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bb8:	48 8b 58 10          	mov    0x10(%rax),%rbx
          getDispatcher()->vkDestroySwapchainKHR(
    9bbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bc0:	48 83 c0 08          	add    $0x8,%rax
    9bc4:	48 89 c7             	mov    %rax,%rdi
    9bc7:	e8 fc f3 ff ff       	call   8fc8 <_ZNK2vk12SwapchainKHRcvP16VkSwapchainKHR_TEv>
    9bcc:	49 89 c5             	mov    %rax,%r13
    9bcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bd3:	48 89 c7             	mov    %rax,%rdi
    9bd6:	e8 d1 f4 ff ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
    9bdb:	48 89 da             	mov    %rbx,%rdx
    9bde:	4c 89 ee             	mov    %r13,%rsi
    9be1:	48 89 c7             	mov    %rax,%rdi
    9be4:	41 ff d4             	call   *%r12
        }
        m_device     = nullptr;
    9be7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9beb:	be 00 00 00 00       	mov    $0x0,%esi
    9bf0:	48 89 c7             	mov    %rax,%rdi
    9bf3:	e8 96 f4 ff ff       	call   908e <_ZN2vk6DeviceaSEDn>
        m_swapchain  = nullptr;
    9bf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bfc:	48 83 c0 08          	add    $0x8,%rax
    9c00:	be 00 00 00 00       	mov    $0x0,%esi
    9c05:	48 89 c7             	mov    %rax,%rdi
    9c08:	e8 9d f3 ff ff       	call   8faa <_ZN2vk12SwapchainKHRaSEDn>
        m_allocator  = nullptr;
    9c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c11:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9c18:	00 
        m_dispatcher = nullptr;
    9c19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c1d:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    9c24:	00 
      }
    9c25:	90                   	nop
    9c26:	48 83 c4 18          	add    $0x18,%rsp
    9c2a:	5b                   	pop    %rbx
    9c2b:	41 5c                	pop    %r12
    9c2d:	41 5d                	pop    %r13
    9c2f:	5d                   	pop    %rbp
    9c30:	c3                   	ret
    9c31:	90                   	nop

0000000000009c32 <_ZNK2vk4raii12SwapchainKHR13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::Device getDevice() const
      {
        return m_device;
      }

      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher const * getDispatcher() const
    9c32:	55                   	push   %rbp
    9c33:	48 89 e5             	mov    %rsp,%rbp
    9c36:	48 83 ec 10          	sub    $0x10,%rsp
    9c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    9c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c42:	48 8b 40 18          	mov    0x18(%rax),%rax
    9c46:	48 89 c7             	mov    %rax,%rdi
    9c49:	e8 04 c9 ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    9c4e:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    9c54:	74 28                	je     9c7e <_ZNK2vk4raii12SwapchainKHR13getDispatcherEv+0x4c>
    9c56:	48 8d 05 fb 00 02 00 	lea    0x200fb(%rip),%rax        # 29d58 <_ZNSt8__detailL19__atomic_spin_countE+0x2f4>
    9c5d:	48 89 c1             	mov    %rax,%rcx
    9c60:	ba 3a 28 00 00       	mov    $0x283a,%edx
    9c65:	48 8d 05 e4 fe 01 00 	lea    0x1fee4(%rip),%rax        # 29b50 <_ZNSt8__detailL19__atomic_spin_countE+0xec>
    9c6c:	48 89 c6             	mov    %rax,%rsi
    9c6f:	48 8d 05 02 ff 01 00 	lea    0x1ff02(%rip),%rax        # 29b78 <_ZNSt8__detailL19__atomic_spin_countE+0x114>
    9c76:	48 89 c7             	mov    %rax,%rdi
    9c79:	e8 92 b4 ff ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
    9c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c82:	48 8b 40 18          	mov    0x18(%rax),%rax
      }
    9c86:	c9                   	leave
    9c87:	c3                   	ret

0000000000009c88 <_ZN2vk4raii14CommandBuffersD1Ev>:
    class CommandBuffers : public std::vector<VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::CommandBuffer>
    9c88:	55                   	push   %rbp
    9c89:	48 89 e5             	mov    %rsp,%rbp
    9c8c:	48 83 ec 10          	sub    $0x10,%rsp
    9c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c98:	48 89 c7             	mov    %rax,%rdi
    9c9b:	e8 a6 0c 00 00       	call   a946 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EED1Ev>
    9ca0:	90                   	nop
    9ca1:	c9                   	leave
    9ca2:	c3                   	ret
    9ca3:	90                   	nop

0000000000009ca4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    9ca4:	55                   	push   %rbp
    9ca5:	48 89 e5             	mov    %rsp,%rbp
    9ca8:	48 83 ec 20          	sub    $0x20,%rsp
    9cac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    9cb0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    9cb7:	00 
      while (!eq(__p[__i], char_type()))
    9cb8:	eb 05                	jmp    9cbf <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    9cba:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    9cbf:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    9cc3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ccb:	48 01 c2             	add    %rax,%rdx
    9cce:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    9cd2:	48 89 c6             	mov    %rax,%rsi
    9cd5:	48 89 d7             	mov    %rdx,%rdi
    9cd8:	e8 0d 00 00 00       	call   9cea <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    9cdd:	83 f0 01             	xor    $0x1,%eax
    9ce0:	84 c0                	test   %al,%al
    9ce2:	75 d6                	jne    9cba <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    9ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    9ce8:	c9                   	leave
    9ce9:	c3                   	ret

0000000000009cea <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    9cea:	55                   	push   %rbp
    9ceb:	48 89 e5             	mov    %rsp,%rbp
    9cee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    9cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cfa:	0f b6 10             	movzbl (%rax),%edx
    9cfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d01:	0f b6 00             	movzbl (%rax),%eax
    9d04:	38 c2                	cmp    %al,%dl
    9d06:	0f 94 c0             	sete   %al
    9d09:	5d                   	pop    %rbp
    9d0a:	c3                   	ret
    9d0b:	90                   	nop

0000000000009d0c <_ZN4rtvc4GLFWC1Ev>:
    "VK_LAYER_KHRONOS_validation";
inline constexpr std::string_view mangohudLayerName =
    "VK_LAYER_MANGOHUD_overlay";

struct GLFW {
  GLFW() { glfwInit(); }
    9d0c:	55                   	push   %rbp
    9d0d:	48 89 e5             	mov    %rsp,%rbp
    9d10:	48 83 ec 10          	sub    $0x10,%rsp
    9d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d18:	e8 73 b5 ff ff       	call   5290 <glfwInit@plt>
    9d1d:	90                   	nop
    9d1e:	c9                   	leave
    9d1f:	c3                   	ret

0000000000009d20 <_ZN4rtvc4GLFWD1Ev>:
  ~GLFW() { glfwTerminate(); }
    9d20:	55                   	push   %rbp
    9d21:	48 89 e5             	mov    %rsp,%rbp
    9d24:	48 83 ec 10          	sub    $0x10,%rsp
    9d28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d2c:	e8 0f b5 ff ff       	call   5240 <glfwTerminate@plt>
    9d31:	90                   	nop
    9d32:	c9                   	leave
    9d33:	c3                   	ret

0000000000009d34 <_ZN4rtvc6WindowC1Ev>:

class Window {
  typedef GLFWwindow *pGLFWwindow;

public:
  Window() {
    9d34:	55                   	push   %rbp
    9d35:	48 89 e5             	mov    %rsp,%rbp
    9d38:	48 83 ec 10          	sub    $0x10,%rsp
    9d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    9d40:	be 00 00 00 00       	mov    $0x0,%esi
    9d45:	bf 01 20 02 00       	mov    $0x22001,%edi
    9d4a:	e8 61 b4 ff ff       	call   51b0 <glfwWindowHint@plt>
    glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    9d4f:	be 00 00 00 00       	mov    $0x0,%esi
    9d54:	bf 03 00 02 00       	mov    $0x20003,%edi
    9d59:	e8 52 b4 ff ff       	call   51b0 <glfwWindowHint@plt>
    _window = glfwCreateWindow(800, 600, "VulkanApplication", nullptr, nullptr);
    9d5e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9d64:	b9 00 00 00 00       	mov    $0x0,%ecx
    9d69:	48 8d 05 38 00 02 00 	lea    0x20038(%rip),%rax        # 29da8 <_ZNSt8__detailL19__atomic_spin_countE+0x344>
    9d70:	48 89 c2             	mov    %rax,%rdx
    9d73:	be 58 02 00 00       	mov    $0x258,%esi
    9d78:	bf 20 03 00 00       	mov    $0x320,%edi
    9d7d:	e8 ce b5 ff ff       	call   5350 <glfwCreateWindow@plt>
    9d82:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d86:	48 89 02             	mov    %rax,(%rdx)
  }
    9d89:	90                   	nop
    9d8a:	c9                   	leave
    9d8b:	c3                   	ret

0000000000009d8c <_ZN4rtvc6WindowD1Ev>:
  ~Window() { glfwDestroyWindow(_window); }
    9d8c:	55                   	push   %rbp
    9d8d:	48 89 e5             	mov    %rsp,%rbp
    9d90:	48 83 ec 10          	sub    $0x10,%rsp
    9d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d9c:	48 8b 00             	mov    (%rax),%rax
    9d9f:	48 89 c7             	mov    %rax,%rdi
    9da2:	e8 b9 b2 ff ff       	call   5060 <glfwDestroyWindow@plt>
    9da7:	90                   	nop
    9da8:	c9                   	leave
    9da9:	c3                   	ret

0000000000009daa <_ZNK4rtvc6WindowdeEv>:
  Window(const Window &) = delete;
  Window(Window &&) = delete;
  Window &operator=(const Window &) = delete;
  Window &operator=(Window &&) = delete;

  pGLFWwindow operator*() const noexcept { return _window; }
    9daa:	55                   	push   %rbp
    9dab:	48 89 e5             	mov    %rsp,%rbp
    9dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db6:	48 8b 00             	mov    (%rax),%rax
    9db9:	5d                   	pop    %rbp
    9dba:	c3                   	ret
    9dbb:	90                   	nop

0000000000009dbc <_ZN2vk4raii7ContextD1Ev>:
      ~Context() = default;
    9dbc:	55                   	push   %rbp
    9dbd:	48 89 e5             	mov    %rsp,%rbp
    9dc0:	48 83 ec 10          	sub    $0x10,%rsp
    9dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dcc:	48 83 c0 08          	add    $0x8,%rax
    9dd0:	48 89 c7             	mov    %rax,%rdi
    9dd3:	e8 74 08 00 00       	call   a64c <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev>
    9dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ddc:	48 89 c7             	mov    %rax,%rdi
    9ddf:	e8 4a f4 ff ff       	call   922e <_ZN2vk13DynamicLoaderD1Ev>
    9de4:	90                   	nop
    9de5:	c9                   	leave
    9de6:	c3                   	ret
    9de7:	90                   	nop

0000000000009de8 <_ZN4rtvc13DeviceWrapperD1Ev>:

private:
  pGLFWwindow _window;
};

struct DeviceWrapper {
    9de8:	55                   	push   %rbp
    9de9:	48 89 e5             	mov    %rsp,%rbp
    9dec:	48 83 ec 10          	sub    $0x10,%rsp
    9df0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9df8:	48 83 c0 28          	add    $0x28,%rax
    9dfc:	48 89 c7             	mov    %rax,%rdi
    9dff:	e8 32 f7 ff ff       	call   9536 <_ZN2vk4raii6DeviceD1Ev>
    9e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e08:	48 83 c0 18          	add    $0x18,%rax
    9e0c:	48 89 c7             	mov    %rax,%rdi
    9e0f:	e8 da f6 ff ff       	call   94ee <_ZN2vk4raii14PhysicalDeviceD1Ev>
    9e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e18:	48 83 c0 08          	add    $0x8,%rax
    9e1c:	48 89 c7             	mov    %rax,%rdi
    9e1f:	e8 cc fb ff ff       	call   99f0 <_ZN2vk4raii5QueueD1Ev>
    9e24:	90                   	nop
    9e25:	c9                   	leave
    9e26:	c3                   	ret
    9e27:	90                   	nop

0000000000009e28 <_ZN4rtvc16SwapchainWrapperD1Ev>:
  vk::raii::Queue queue;
  vk::raii::PhysicalDevice physical = VK_NULL_HANDLE;
  vk::raii::Device logical = VK_NULL_HANDLE;
};

struct SwapchainWrapper {
    9e28:	55                   	push   %rbp
    9e29:	48 89 e5             	mov    %rsp,%rbp
    9e2c:	48 83 ec 10          	sub    $0x10,%rsp
    9e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e38:	48 89 c7             	mov    %rax,%rdi
    9e3b:	e8 20 fd ff ff       	call   9b60 <_ZN2vk4raii12SwapchainKHRD1Ev>
    9e40:	90                   	nop
    9e41:	c9                   	leave
    9e42:	c3                   	ret
    9e43:	90                   	nop

0000000000009e44 <_ZN4rtvc9VulkanApp6renderEv>:
  VulkanApp(const VulkanApp &) = delete;
  VulkanApp(VulkanApp &&) = delete;
  VulkanApp &operator=(const VulkanApp &) = delete;
  VulkanApp &operator=(VulkanApp &&) = delete;

  void render() {
    9e44:	55                   	push   %rbp
    9e45:	48 89 e5             	mov    %rsp,%rbp
    9e48:	48 83 ec 10          	sub    $0x10,%rsp
    9e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!glfwWindowShouldClose(*_window)) {
    9e50:	eb 05                	jmp    9e57 <_ZN4rtvc9VulkanApp6renderEv+0x13>
      glfwPollEvents();
    9e52:	e8 a9 b3 ff ff       	call   5200 <glfwPollEvents@plt>
    while (!glfwWindowShouldClose(*_window)) {
    9e57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5b:	48 83 c0 28          	add    $0x28,%rax
    9e5f:	48 89 c7             	mov    %rax,%rdi
    9e62:	e8 43 ff ff ff       	call   9daa <_ZNK4rtvc6WindowdeEv>
    9e67:	48 89 c7             	mov    %rax,%rdi
    9e6a:	e8 81 b5 ff ff       	call   53f0 <glfwWindowShouldClose@plt>
    9e6f:	85 c0                	test   %eax,%eax
    9e71:	0f 94 c0             	sete   %al
    9e74:	84 c0                	test   %al,%al
    9e76:	75 da                	jne    9e52 <_ZN4rtvc9VulkanApp6renderEv+0xe>
    }
  }
    9e78:	90                   	nop
    9e79:	90                   	nop
    9e7a:	c9                   	leave
    9e7b:	c3                   	ret

0000000000009e7c <_ZN4rtvc9VulkanAppC1Ev>:
  VulkanApp() = default;
    9e7c:	55                   	push   %rbp
    9e7d:	48 89 e5             	mov    %rsp,%rbp
    9e80:	53                   	push   %rbx
    9e81:	48 83 ec 18          	sub    $0x18,%rsp
    9e85:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9e89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e8d:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    9e93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e97:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9e9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ea2:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%rax)
    9ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ead:	48 83 c0 10          	add    $0x10,%rax
    9eb1:	48 89 c7             	mov    %rax,%rdi
    9eb4:	e8 3f f4 ff ff       	call   92f8 <_ZN2vk4raii7ContextC1Ev>
    9eb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ebd:	48 83 c0 20          	add    $0x20,%rax
    9ec1:	48 89 c7             	mov    %rax,%rdi
    9ec4:	e8 43 fe ff ff       	call   9d0c <_ZN4rtvc4GLFWC1Ev>
    9ec9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ecd:	48 83 c0 28          	add    $0x28,%rax
    9ed1:	48 89 c7             	mov    %rax,%rdi
    9ed4:	e8 5b fe ff ff       	call   9d34 <_ZN4rtvc6WindowC1Ev>
    9ed9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9edd:	48 8d 50 10          	lea    0x10(%rax),%rdx
    9ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ee5:	48 83 c0 30          	add    $0x30,%rax
    9ee9:	48 89 d6             	mov    %rdx,%rsi
    9eec:	48 89 c7             	mov    %rax,%rdi
    9eef:	e8 63 b2 01 00       	call   25157 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE>
    9ef4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ef8:	48 8d 50 30          	lea    0x30(%rax),%rdx
    9efc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f00:	48 83 c0 48          	add    $0x48,%rax
    9f04:	48 89 d6             	mov    %rdx,%rsi
    9f07:	48 89 c7             	mov    %rax,%rdi
    9f0a:	e8 89 b6 01 00       	call   25598 <_ZN4rtvc18makeDebugMessengerERKN2vk4raii8InstanceE>
    9f0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f13:	48 8d 50 28          	lea    0x28(%rax),%rdx
    9f17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f1b:	48 8d 48 30          	lea    0x30(%rax),%rcx
    9f1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f23:	48 83 c0 68          	add    $0x68,%rax
    9f27:	48 89 ce             	mov    %rcx,%rsi
    9f2a:	48 89 c7             	mov    %rax,%rdi
    9f2d:	e8 b1 b6 01 00       	call   255e3 <_ZN4rtvc11makeSurfaceERKN2vk4raii8InstanceERKNS_6WindowE>
    9f32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f36:	48 8d 50 68          	lea    0x68(%rax),%rdx
    9f3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f3e:	48 8d 48 30          	lea    0x30(%rax),%rcx
    9f42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f46:	48 05 88 00 00 00    	add    $0x88,%rax
    9f4c:	48 89 ce             	mov    %rcx,%rsi
    9f4f:	48 89 c7             	mov    %rax,%rdi
    9f52:	e8 92 50 00 00       	call   efe9 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE>
    9f57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f5b:	48 8d 90 88 00 00 00 	lea    0x88(%rax),%rdx
    9f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f66:	48 05 c8 00 00 00    	add    $0xc8,%rax
    9f6c:	48 89 d6             	mov    %rdx,%rsi
    9f6f:	48 89 c7             	mov    %rax,%rdi
    9f72:	e8 6b 87 01 00       	call   226e2 <_ZN4rtvc15makeCommandPoolERKNS_13DeviceWrapperE>
    9f77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f7b:	8b 00                	mov    (%rax),%eax
    9f7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f81:	48 81 c2 c8 00 00 00 	add    $0xc8,%rdx
    9f88:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9f8c:	48 8d b1 b0 00 00 00 	lea    0xb0(%rcx),%rsi
    9f93:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9f97:	48 8d b9 e8 00 00 00 	lea    0xe8(%rcx),%rdi
    9f9e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9fa4:	89 c1                	mov    %eax,%ecx
    9fa6:	e8 a6 87 01 00       	call   22751 <_ZN4rtvc18makeCommandBuffersERKN2vk4raii6DeviceERKNS1_11CommandPoolEjNS0_18CommandBufferLevelE>
    9fab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9faf:	48 8d 88 88 00 00 00 	lea    0x88(%rax),%rcx
    9fb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fba:	48 8d 50 68          	lea    0x68(%rax),%rdx
    9fbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fc2:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    9fc6:	48 8d be 00 01 00 00 	lea    0x100(%rsi),%rdi
    9fcd:	48 89 c6             	mov    %rax,%rsi
    9fd0:	e8 eb 55 01 00       	call   1f5c0 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE>
    9fd5:	e9 cc 00 00 00       	jmp    a0a6 <_ZN4rtvc9VulkanAppC1Ev+0x22a>
    9fda:	48 89 c3             	mov    %rax,%rbx
    9fdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fe1:	48 05 e8 00 00 00    	add    $0xe8,%rax
    9fe7:	48 89 c7             	mov    %rax,%rdi
    9fea:	e8 99 fc ff ff       	call   9c88 <_ZN2vk4raii14CommandBuffersD1Ev>
    9fef:	eb 03                	jmp    9ff4 <_ZN4rtvc9VulkanAppC1Ev+0x178>
    9ff1:	48 89 c3             	mov    %rax,%rbx
    9ff4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ff8:	48 05 c8 00 00 00    	add    $0xc8,%rax
    9ffe:	48 89 c7             	mov    %rax,%rdi
    a001:	e8 4a f6 ff ff       	call   9650 <_ZN2vk4raii11CommandPoolD1Ev>
    a006:	eb 03                	jmp    a00b <_ZN4rtvc9VulkanAppC1Ev+0x18f>
    a008:	48 89 c3             	mov    %rax,%rbx
    a00b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a00f:	48 05 88 00 00 00    	add    $0x88,%rax
    a015:	48 89 c7             	mov    %rax,%rdi
    a018:	e8 cb fd ff ff       	call   9de8 <_ZN4rtvc13DeviceWrapperD1Ev>
    a01d:	eb 03                	jmp    a022 <_ZN4rtvc9VulkanAppC1Ev+0x1a6>
    a01f:	48 89 c3             	mov    %rax,%rbx
    a022:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a026:	48 83 c0 68          	add    $0x68,%rax
    a02a:	48 89 c7             	mov    %rax,%rdi
    a02d:	e8 06 fa ff ff       	call   9a38 <_ZN2vk4raii10SurfaceKHRD1Ev>
    a032:	eb 03                	jmp    a037 <_ZN4rtvc9VulkanAppC1Ev+0x1bb>
    a034:	48 89 c3             	mov    %rax,%rbx
    a037:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a03b:	48 83 c0 48          	add    $0x48,%rax
    a03f:	48 89 c7             	mov    %rax,%rdi
    a042:	e8 81 f8 ff ff       	call   98c8 <_ZN2vk4raii22DebugUtilsMessengerEXTD1Ev>
    a047:	eb 03                	jmp    a04c <_ZN4rtvc9VulkanAppC1Ev+0x1d0>
    a049:	48 89 c3             	mov    %rax,%rbx
    a04c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a050:	48 83 c0 30          	add    $0x30,%rax
    a054:	48 89 c7             	mov    %rax,%rdi
    a057:	e8 78 f3 ff ff       	call   93d4 <_ZN2vk4raii8InstanceD1Ev>
    a05c:	eb 03                	jmp    a061 <_ZN4rtvc9VulkanAppC1Ev+0x1e5>
    a05e:	48 89 c3             	mov    %rax,%rbx
    a061:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a065:	48 83 c0 28          	add    $0x28,%rax
    a069:	48 89 c7             	mov    %rax,%rdi
    a06c:	e8 1b fd ff ff       	call   9d8c <_ZN4rtvc6WindowD1Ev>
    a071:	eb 03                	jmp    a076 <_ZN4rtvc9VulkanAppC1Ev+0x1fa>
    a073:	48 89 c3             	mov    %rax,%rbx
    a076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a07a:	48 83 c0 20          	add    $0x20,%rax
    a07e:	48 89 c7             	mov    %rax,%rdi
    a081:	e8 9a fc ff ff       	call   9d20 <_ZN4rtvc4GLFWD1Ev>
    a086:	eb 03                	jmp    a08b <_ZN4rtvc9VulkanAppC1Ev+0x20f>
    a088:	48 89 c3             	mov    %rax,%rbx
    a08b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a08f:	48 83 c0 10          	add    $0x10,%rax
    a093:	48 89 c7             	mov    %rax,%rdi
    a096:	e8 21 fd ff ff       	call   9dbc <_ZN2vk4raii7ContextD1Ev>
    a09b:	48 89 d8             	mov    %rbx,%rax
    a09e:	48 89 c7             	mov    %rax,%rdi
    a0a1:	e8 fa b2 ff ff       	call   53a0 <_Unwind_Resume@plt>
    a0a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a0aa:	c9                   	leave
    a0ab:	c3                   	ret

000000000000a0ac <_ZN4rtvc9VulkanAppD1Ev>:
  ~VulkanApp() = default;
    a0ac:	55                   	push   %rbp
    a0ad:	48 89 e5             	mov    %rsp,%rbp
    a0b0:	48 83 ec 10          	sub    $0x10,%rsp
    a0b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0bc:	48 05 00 01 00 00    	add    $0x100,%rax
    a0c2:	48 89 c7             	mov    %rax,%rdi
    a0c5:	e8 5e fd ff ff       	call   9e28 <_ZN4rtvc16SwapchainWrapperD1Ev>
    a0ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ce:	48 05 e8 00 00 00    	add    $0xe8,%rax
    a0d4:	48 89 c7             	mov    %rax,%rdi
    a0d7:	e8 ac fb ff ff       	call   9c88 <_ZN2vk4raii14CommandBuffersD1Ev>
    a0dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e0:	48 05 c8 00 00 00    	add    $0xc8,%rax
    a0e6:	48 89 c7             	mov    %rax,%rdi
    a0e9:	e8 62 f5 ff ff       	call   9650 <_ZN2vk4raii11CommandPoolD1Ev>
    a0ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0f2:	48 05 88 00 00 00    	add    $0x88,%rax
    a0f8:	48 89 c7             	mov    %rax,%rdi
    a0fb:	e8 e8 fc ff ff       	call   9de8 <_ZN4rtvc13DeviceWrapperD1Ev>
    a100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a104:	48 83 c0 68          	add    $0x68,%rax
    a108:	48 89 c7             	mov    %rax,%rdi
    a10b:	e8 28 f9 ff ff       	call   9a38 <_ZN2vk4raii10SurfaceKHRD1Ev>
    a110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a114:	48 83 c0 48          	add    $0x48,%rax
    a118:	48 89 c7             	mov    %rax,%rdi
    a11b:	e8 a8 f7 ff ff       	call   98c8 <_ZN2vk4raii22DebugUtilsMessengerEXTD1Ev>
    a120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a124:	48 83 c0 30          	add    $0x30,%rax
    a128:	48 89 c7             	mov    %rax,%rdi
    a12b:	e8 a4 f2 ff ff       	call   93d4 <_ZN2vk4raii8InstanceD1Ev>
    a130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a134:	48 83 c0 28          	add    $0x28,%rax
    a138:	48 89 c7             	mov    %rax,%rdi
    a13b:	e8 4c fc ff ff       	call   9d8c <_ZN4rtvc6WindowD1Ev>
    a140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a144:	48 83 c0 20          	add    $0x20,%rax
    a148:	48 89 c7             	mov    %rax,%rdi
    a14b:	e8 d0 fb ff ff       	call   9d20 <_ZN4rtvc4GLFWD1Ev>
    a150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a154:	48 83 c0 10          	add    $0x10,%rax
    a158:	48 89 c7             	mov    %rax,%rdi
    a15b:	e8 5c fc ff ff       	call   9dbc <_ZN2vk4raii7ContextD1Ev>
    a160:	90                   	nop
    a161:	c9                   	leave
    a162:	c3                   	ret

000000000000a163 <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    }

#if __cplusplus >= 202002L
  template<typename _Tp, typename... _Args>
    constexpr auto
    construct_at(_Tp* __location, _Args&&... __args)
    a163:	55                   	push   %rbp
    a164:	48 89 e5             	mov    %rsp,%rbp
    a167:	53                   	push   %rbx
    a168:	48 83 ec 18          	sub    $0x18,%rsp
    a16c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a170:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    a174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a178:	48 89 c6             	mov    %rax,%rsi
    a17b:	bf 01 00 00 00       	mov    $0x1,%edi
    a180:	e8 2f c0 ff ff       	call   61b4 <_ZnwmPv>
    a185:	48 89 c3             	mov    %rax,%rbx
    a188:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a18c:	48 89 c7             	mov    %rax,%rdi
    a18f:	e8 f6 07 00 00       	call   a98a <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>
    a194:	0f b6 00             	movzbl (%rax),%eax
    a197:	88 03                	mov    %al,(%rbx)
    a199:	48 89 d8             	mov    %rbx,%rax
    a19c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a1a0:	c9                   	leave
    a1a1:	c3                   	ret

000000000000a1a2 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>:
    char_traits<_CharT>::
    a1a2:	55                   	push   %rbp
    a1a3:	48 89 e5             	mov    %rsp,%rbp
    a1a6:	48 83 ec 30          	sub    $0x30,%rsp
    a1aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a1ae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a1b2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__n == 0)
    a1b6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    a1bb:	75 09                	jne    a1c6 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x24>
	return __s1;
    a1bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1c1:	e9 8b 00 00 00       	jmp    a251 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      if (std::__is_constant_evaluated())
    a1c6:	e8 d3 bf ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    a1cb:	84 c0                	test   %al,%al
    a1cd:	74 67                	je     a236 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x94>
	  if (__s1 == __s2) // unlikely, but saves a lot of work
    a1cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1d3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    a1d7:	75 06                	jne    a1df <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x3d>
	    return __s1;
    a1d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1dd:	eb 72                	jmp    a251 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
	  char_type* __tmp = new char_type[__n];
    a1df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a1e3:	48 89 c7             	mov    %rax,%rdi
    a1e6:	e8 45 ae ff ff       	call   5030 <_Znam@plt>
    a1eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  copy(__tmp, __s2, __n);
    a1ef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a1f3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a1f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1fb:	48 89 ce             	mov    %rcx,%rsi
    a1fe:	48 89 c7             	mov    %rax,%rdi
    a201:	e8 4e 00 00 00       	call   a254 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  copy(__s1, __tmp, __n);
    a206:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a20a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a20e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a212:	48 89 ce             	mov    %rcx,%rsi
    a215:	48 89 c7             	mov    %rax,%rdi
    a218:	e8 37 00 00 00       	call   a254 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  delete[] __tmp;
    a21d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a222:	74 0c                	je     a230 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x8e>
    a224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a228:	48 89 c7             	mov    %rax,%rdi
    a22b:	e8 90 b0 ff ff       	call   52c0 <_ZdaPv@plt>
	  return __s1;
    a230:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a234:	eb 1b                	jmp    a251 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      __builtin_memmove(__s1, __s2, __n * sizeof(char_type));
    a236:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a23a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a23e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a242:	48 89 ce             	mov    %rcx,%rsi
    a245:	48 89 c7             	mov    %rax,%rdi
    a248:	e8 13 b1 ff ff       	call   5360 <memmove@plt>
      return __s1;
    a24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    a251:	c9                   	leave
    a252:	c3                   	ret
    a253:	90                   	nop

000000000000a254 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>:
    char_traits<_CharT>::
    a254:	55                   	push   %rbp
    a255:	48 89 e5             	mov    %rsp,%rbp
    a258:	48 83 ec 30          	sub    $0x30,%rsp
    a25c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a260:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a264:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (std::__is_constant_evaluated())
    a268:	e8 31 bf ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    a26d:	84 c0                	test   %al,%al
    a26f:	74 40                	je     a2b1 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x5d>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    a271:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    a278:	00 
    a279:	eb 26                	jmp    a2a1 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x4d>
	    std::construct_at(__s1 + __i, __s2[__i]);
    a27b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a27f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a283:	48 01 c2             	add    %rax,%rdx
    a286:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a28a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28e:	48 01 c8             	add    %rcx,%rax
    a291:	48 89 d6             	mov    %rdx,%rsi
    a294:	48 89 c7             	mov    %rax,%rdi
    a297:	e8 c7 fe ff ff       	call   a163 <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    a29c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    a2a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a2a9:	72 d0                	jb     a27b <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x27>
	  return __s1;
    a2ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2af:	eb 21                	jmp    a2d2 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x7e>
      __builtin_memcpy(__s1, __s2, __n * sizeof(char_type));
    a2b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a2b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a2b9:	48 89 d1             	mov    %rdx,%rcx
    a2bc:	48 89 c6             	mov    %rax,%rsi
    a2bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2c3:	48 89 c2             	mov    %rax,%rdx
    a2c6:	48 89 cf             	mov    %rcx,%rdi
    a2c9:	e8 d2 ae ff ff       	call   51a0 <memcpy@plt>
      return __s1;
    a2ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    a2d2:	c9                   	leave
    a2d3:	c3                   	ret

000000000000a2d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
       *  This is a handle to internal data.  Do not modify or dire things may
       *  happen.
      */
      _GLIBCXX20_CONSTEXPR
      const _CharT*
      c_str() const _GLIBCXX_NOEXCEPT
    a2d4:	55                   	push   %rbp
    a2d5:	48 89 e5             	mov    %rsp,%rbp
    a2d8:	48 83 ec 10          	sub    $0x10,%rsp
    a2dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data(); }
    a2e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e4:	48 89 c7             	mov    %rax,%rdi
    a2e7:	e8 ac 06 00 00       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a2ec:	c9                   	leave
    a2ed:	c3                   	ret

000000000000a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
      ~basic_string()
    a2ee:	55                   	push   %rbp
    a2ef:	48 89 e5             	mov    %rsp,%rbp
    a2f2:	48 83 ec 10          	sub    $0x10,%rsp
    a2f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_dispose(); }
    a2fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fe:	48 89 c7             	mov    %rax,%rdi
    a301:	e8 da 06 00 00       	call   a9e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    a306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a30a:	48 89 c7             	mov    %rax,%rdi
    a30d:	e8 be c3 ff ff       	call   66d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    a312:	90                   	nop
    a313:	c9                   	leave
    a314:	c3                   	ret
    a315:	90                   	nop

000000000000a316 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
      basic_string(basic_string&& __str) noexcept
    a316:	55                   	push   %rbp
    a317:	48 89 e5             	mov    %rsp,%rbp
    a31a:	41 54                	push   %r12
    a31c:	53                   	push   %rbx
    a31d:	48 83 ec 10          	sub    $0x10,%rsp
    a321:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a325:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    a329:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a32d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a331:	48 89 c7             	mov    %rax,%rdi
    a334:	e8 e1 06 00 00       	call   aa1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a339:	48 89 c7             	mov    %rax,%rdi
    a33c:	e8 0b c5 ff ff       	call   684c <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    a341:	49 89 c4             	mov    %rax,%r12
    a344:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a348:	48 89 c7             	mov    %rax,%rdi
    a34b:	e8 5c c4 ff ff       	call   67ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    a350:	4c 89 e2             	mov    %r12,%rdx
    a353:	48 89 c6             	mov    %rax,%rsi
    a356:	48 89 df             	mov    %rbx,%rdi
    a359:	e8 ae c4 ff ff       	call   680c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
	if (__str._M_is_local())
    a35e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a362:	48 89 c7             	mov    %rax,%rdi
    a365:	e8 be 06 00 00       	call   aa28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    a36a:	84 c0                	test   %al,%al
    a36c:	74 2d                	je     a39b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x85>
			      __str.length() + 1);
    a36e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a372:	48 89 c7             	mov    %rax,%rdi
    a375:	e8 ae 00 00 00       	call   a428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    a37a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    a37e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a382:	48 8d 48 10          	lea    0x10(%rax),%rcx
    a386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a38a:	48 83 c0 10          	add    $0x10,%rax
    a38e:	48 89 ce             	mov    %rcx,%rsi
    a391:	48 89 c7             	mov    %rax,%rdi
    a394:	e8 fa be ff ff       	call   6293 <_ZNSt11char_traitsIcE4copyEPcPKcm>
    a399:	eb 35                	jmp    a3d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0xba>
	    _M_data(__str._M_data());
    a39b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a39f:	48 89 c7             	mov    %rax,%rdi
    a3a2:	e8 f1 05 00 00       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a3a7:	48 89 c2             	mov    %rax,%rdx
    a3aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3ae:	48 89 d6             	mov    %rdx,%rsi
    a3b1:	48 89 c7             	mov    %rax,%rdi
    a3b4:	e8 a3 06 00 00       	call   aa5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__str._M_allocated_capacity);
    a3b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3bd:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a3c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3c5:	48 89 d6             	mov    %rdx,%rsi
    a3c8:	48 89 c7             	mov    %rax,%rdi
    a3cb:	e8 a6 06 00 00       	call   aa76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	_M_length(__str.length());
    a3d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3d4:	48 89 c7             	mov    %rax,%rdi
    a3d7:	e8 4c 00 00 00       	call   a428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    a3dc:	48 89 c2             	mov    %rax,%rdx
    a3df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3e3:	48 89 d6             	mov    %rdx,%rsi
    a3e6:	48 89 c7             	mov    %rax,%rdi
    a3e9:	e8 a4 06 00 00       	call   aa92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	__str._M_data(__str._M_local_data());
    a3ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3f2:	48 89 c7             	mov    %rax,%rdi
    a3f5:	e8 b2 c3 ff ff       	call   67ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    a3fa:	48 89 c2             	mov    %rax,%rdx
    a3fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a401:	48 89 d6             	mov    %rdx,%rsi
    a404:	48 89 c7             	mov    %rax,%rdi
    a407:	e8 50 06 00 00       	call   aa5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	__str._M_set_length(0);
    a40c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a410:	be 00 00 00 00       	mov    $0x0,%esi
    a415:	48 89 c7             	mov    %rax,%rdi
    a418:	e8 07 01 00 00       	call   a524 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    a41d:	90                   	nop
    a41e:	48 83 c4 10          	add    $0x10,%rsp
    a422:	5b                   	pop    %rbx
    a423:	41 5c                	pop    %r12
    a425:	5d                   	pop    %rbp
    a426:	c3                   	ret
    a427:	90                   	nop

000000000000a428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
      length() const _GLIBCXX_NOEXCEPT
    a428:	55                   	push   %rbp
    a429:	48 89 e5             	mov    %rsp,%rbp
    a42c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    a430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a434:	48 8b 40 08          	mov    0x8(%rax),%rax
    a438:	5d                   	pop    %rbp
    a439:	c3                   	ret

000000000000a43a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    a43a:	55                   	push   %rbp
    a43b:	48 89 e5             	mov    %rsp,%rbp
    a43e:	48 83 ec 20          	sub    $0x20,%rsp
    a442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a446:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a44a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
    { return std::move(__rhs.insert(0, __lhs)); }
    a44e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a452:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a456:	be 00 00 00 00       	mov    $0x0,%esi
    a45b:	48 89 c7             	mov    %rax,%rdi
    a45e:	e8 51 08 00 00       	call   acb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>
    a463:	48 89 c7             	mov    %rax,%rdi
    a466:	e8 3a 08 00 00       	call   aca5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    a46b:	48 89 c2             	mov    %rax,%rdx
    a46e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a472:	48 89 d6             	mov    %rdx,%rsi
    a475:	48 89 c7             	mov    %rax,%rdi
    a478:	e8 99 fe ff ff       	call   a316 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    a47d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a481:	c9                   	leave
    a482:	c3                   	ret
    a483:	90                   	nop

000000000000a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    a484:	55                   	push   %rbp
    a485:	48 89 e5             	mov    %rsp,%rbp
    a488:	53                   	push   %rbx
    a489:	48 83 ec 38          	sub    $0x38,%rsp
    a48d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a491:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a495:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    a499:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    a49d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4a1:	48 89 c7             	mov    %rax,%rdi
    a4a4:	e8 03 c3 ff ff       	call   67ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    a4a9:	48 89 c1             	mov    %rax,%rcx
    a4ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a4b0:	48 89 c2             	mov    %rax,%rdx
    a4b3:	48 89 ce             	mov    %rcx,%rsi
    a4b6:	48 89 df             	mov    %rbx,%rdi
    a4b9:	e8 ec 04 00 00       	call   a9aa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	if (__s == 0)
    a4be:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    a4c3:	75 0f                	jne    a4d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    a4c5:	48 8d 05 04 f9 01 00 	lea    0x1f904(%rip),%rax        # 29dd0 <_ZNSt8__detailL19__atomic_spin_countE+0x36c>
    a4cc:	48 89 c7             	mov    %rax,%rdi
    a4cf:	e8 6c ac ff ff       	call   5140 <_ZSt19__throw_logic_errorPKc@plt>
	const _CharT* __end = __s + traits_type::length(__s);
    a4d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a4d8:	48 89 c7             	mov    %rax,%rdi
    a4db:	e8 24 bd ff ff       	call   6204 <_ZNSt11char_traitsIcE6lengthEPKc>
    a4e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a4e4:	48 01 d0             	add    %rdx,%rax
    a4e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    a4eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4ef:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a4f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4f7:	48 89 ce             	mov    %rcx,%rsi
    a4fa:	48 89 c7             	mov    %rax,%rdi
    a4fd:	e8 f0 05 00 00       	call   aaf2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    a502:	eb 1a                	jmp    a51e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    a504:	48 89 c3             	mov    %rax,%rbx
    a507:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a50b:	48 89 c7             	mov    %rax,%rdi
    a50e:	e8 bd c1 ff ff       	call   66d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    a513:	48 89 d8             	mov    %rbx,%rax
    a516:	48 89 c7             	mov    %rax,%rdi
    a519:	e8 82 ae ff ff       	call   53a0 <_Unwind_Resume@plt>
    a51e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a522:	c9                   	leave
    a523:	c3                   	ret

000000000000a524 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>:
      _M_set_length(size_type __n)
    a524:	55                   	push   %rbp
    a525:	48 89 e5             	mov    %rsp,%rbp
    a528:	48 83 ec 20          	sub    $0x20,%rsp
    a52c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a530:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_length(__n);
    a534:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a53c:	48 89 d6             	mov    %rdx,%rsi
    a53f:	48 89 c7             	mov    %rax,%rdi
    a542:	e8 4b 05 00 00       	call   aa92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	traits_type::assign(_M_data()[__n], _CharT());
    a547:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    a54b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a54f:	48 89 c7             	mov    %rax,%rdi
    a552:	e8 41 04 00 00       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a557:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a55b:	48 01 c2             	add    %rax,%rdx
    a55e:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    a562:	48 89 c6             	mov    %rax,%rsi
    a565:	48 89 d7             	mov    %rdx,%rdi
    a568:	e8 59 bc ff ff       	call   61c6 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    a56d:	90                   	nop
    a56e:	c9                   	leave
    a56f:	c3                   	ret

000000000000a570 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    { return std::move(__rhs.insert(0, 1, __lhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    a570:	55                   	push   %rbp
    a571:	48 89 e5             	mov    %rsp,%rbp
    a574:	48 83 ec 20          	sub    $0x20,%rsp
    a578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a57c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a580:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      const _CharT* __rhs)
    { return std::move(__lhs.append(__rhs)); }
    a584:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a588:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a58c:	48 89 d6             	mov    %rdx,%rsi
    a58f:	48 89 c7             	mov    %rax,%rdi
    a592:	e8 8b 06 00 00       	call   ac22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    a597:	48 89 c7             	mov    %rax,%rdi
    a59a:	e8 06 07 00 00       	call   aca5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    a59f:	48 89 c2             	mov    %rax,%rdx
    a5a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a6:	48 89 d6             	mov    %rdx,%rsi
    a5a9:	48 89 c7             	mov    %rax,%rdi
    a5ac:	e8 65 fd ff ff       	call   a316 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    a5b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b5:	c9                   	leave
    a5b6:	c3                   	ret
    a5b7:	90                   	nop

000000000000a5b8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    a5b8:	55                   	push   %rbp
    a5b9:	48 89 e5             	mov    %rsp,%rbp
    a5bc:	48 83 ec 10          	sub    $0x10,%rsp
    a5c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->size() == 0; }
    a5c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c8:	48 89 c7             	mov    %rax,%rdi
    a5cb:	e8 26 bd ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a5d0:	48 85 c0             	test   %rax,%rax
    a5d3:	0f 94 c0             	sete   %al
    a5d6:	c9                   	leave
    a5d7:	c3                   	ret

000000000000a5d8 <_ZNK2vk13DynamicLoader14getProcAddressIPFPFvvEP12VkInstance_TPKcEEET_S7_>:

    template <typename T>
    T getProcAddress( const char * function ) const VULKAN_HPP_NOEXCEPT
    a5d8:	55                   	push   %rbp
    a5d9:	48 89 e5             	mov    %rsp,%rbp
    a5dc:	48 83 ec 10          	sub    $0x10,%rsp
    a5e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
#  if defined( __unix__ ) || defined( __APPLE__ ) || defined( __QNXNTO__ ) || defined( __Fuchsia__ )
      return (T)dlsym( m_library, function );
    a5e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ec:	48 8b 00             	mov    (%rax),%rax
    a5ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5f3:	48 89 d6             	mov    %rdx,%rsi
    a5f6:	48 89 c7             	mov    %rax,%rdi
    a5f9:	e8 e2 ab ff ff       	call   51e0 <dlsym@plt>
#  elif defined( _WIN32 )
      return ( T )::GetProcAddress( m_library, function );
#  else
#    error unsupported platform
#  endif
    }
    a5fe:	c9                   	leave
    a5ff:	c3                   	ret

000000000000a600 <_ZNSt15__uniq_ptr_dataIN2vk4raii17ContextDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEPS2_>:
  template <typename _Tp, typename _Dp,
	    bool = is_move_constructible<_Dp>::value,
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    a600:	55                   	push   %rbp
    a601:	48 89 e5             	mov    %rsp,%rbp
    a604:	48 83 ec 10          	sub    $0x10,%rsp
    a608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a60c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a614:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a618:	48 89 d6             	mov    %rdx,%rsi
    a61b:	48 89 c7             	mov    %rax,%rdi
    a61e:	e8 35 07 00 00       	call   ad58 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1EPS2_>
    a623:	90                   	nop
    a624:	c9                   	leave
    a625:	c3                   	ret

000000000000a626 <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1IS4_vEEPS2_>:
       * The deleter will be value-initialized.
       */
      template<typename _Del = _Dp, typename = _DeleterConstraint<_Del>>
	_GLIBCXX23_CONSTEXPR
	explicit
	unique_ptr(pointer __p) noexcept
    a626:	55                   	push   %rbp
    a627:	48 89 e5             	mov    %rsp,%rbp
    a62a:	48 83 ec 10          	sub    $0x10,%rsp
    a62e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a632:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    a636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a63e:	48 89 d6             	mov    %rdx,%rsi
    a641:	48 89 c7             	mov    %rax,%rdi
    a644:	e8 b7 ff ff ff       	call   a600 <_ZNSt15__uniq_ptr_dataIN2vk4raii17ContextDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEPS2_>
        { }
    a649:	90                   	nop
    a64a:	c9                   	leave
    a64b:	c3                   	ret

000000000000a64c <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev>:

      /// Destructor, invokes the deleter if the stored pointer is not null.
#if __cplusplus > 202002L && __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~unique_ptr() noexcept
    a64c:	55                   	push   %rbp
    a64d:	48 89 e5             	mov    %rsp,%rbp
    a650:	53                   	push   %rbx
    a651:	48 83 ec 28          	sub    $0x28,%rsp
    a655:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	auto& __ptr = _M_t._M_ptr();
    a659:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a65d:	48 89 c7             	mov    %rax,%rdi
    a660:	e8 2b 07 00 00       	call   ad90 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a665:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    a669:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a66d:	48 8b 00             	mov    (%rax),%rax
    a670:	48 85 c0             	test   %rax,%rax
    a673:	74 29                	je     a69e <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    a675:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a679:	48 89 c7             	mov    %rax,%rdi
    a67c:	e8 29 07 00 00       	call   adaa <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    a681:	48 89 c3             	mov    %rax,%rbx
    a684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a688:	48 89 c7             	mov    %rax,%rdi
    a68b:	e8 34 07 00 00       	call   adc4 <_ZSt4moveIRPN2vk4raii17ContextDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    a690:	48 8b 00             	mov    (%rax),%rax
    a693:	48 89 c6             	mov    %rax,%rsi
    a696:	48 89 df             	mov    %rbx,%rdi
    a699:	e8 34 07 00 00       	call   add2 <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_>
	__ptr = pointer();
    a69e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    a6a9:	90                   	nop
    a6aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a6ae:	c9                   	leave
    a6af:	c3                   	ret

000000000000a6b0 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>:
      ~unique_ptr() noexcept
    a6b0:	55                   	push   %rbp
    a6b1:	48 89 e5             	mov    %rsp,%rbp
    a6b4:	53                   	push   %rbx
    a6b5:	48 83 ec 28          	sub    $0x28,%rsp
    a6b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    a6bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6c1:	48 89 c7             	mov    %rax,%rdi
    a6c4:	e8 33 07 00 00       	call   adfc <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a6c9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    a6cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6d1:	48 8b 00             	mov    (%rax),%rax
    a6d4:	48 85 c0             	test   %rax,%rax
    a6d7:	74 29                	je     a702 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    a6d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6dd:	48 89 c7             	mov    %rax,%rdi
    a6e0:	e8 31 07 00 00       	call   ae16 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    a6e5:	48 89 c3             	mov    %rax,%rbx
    a6e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6ec:	48 89 c7             	mov    %rax,%rdi
    a6ef:	e8 3c 07 00 00       	call   ae30 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    a6f4:	48 8b 00             	mov    (%rax),%rax
    a6f7:	48 89 c6             	mov    %rax,%rsi
    a6fa:	48 89 df             	mov    %rbx,%rdi
    a6fd:	e8 3c 07 00 00       	call   ae3e <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>
	__ptr = pointer();
    a702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a706:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    a70d:	90                   	nop
    a70e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a712:	c9                   	leave
    a713:	c3                   	ret

000000000000a714 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
       *
       * The deleter will be invoked if a pointer is already owned.
       */
      _GLIBCXX23_CONSTEXPR
      void
      reset(pointer __p = pointer()) noexcept
    a714:	55                   	push   %rbp
    a715:	48 89 e5             	mov    %rsp,%rbp
    a718:	53                   	push   %rbx
    a719:	48 83 ec 18          	sub    $0x18,%rsp
    a71d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a721:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	_M_t.reset(std::move(__p));
    a725:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a729:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a72d:	48 89 c7             	mov    %rax,%rdi
    a730:	e8 fb 06 00 00       	call   ae30 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    a735:	48 8b 00             	mov    (%rax),%rax
    a738:	48 89 c6             	mov    %rax,%rsi
    a73b:	48 89 df             	mov    %rbx,%rdi
    a73e:	e8 25 07 00 00       	call   ae68 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
    a743:	90                   	nop
    a744:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a748:	c9                   	leave
    a749:	c3                   	ret

000000000000a74a <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEaSEDn>:
      operator=(nullptr_t) noexcept
    a74a:	55                   	push   %rbp
    a74b:	48 89 e5             	mov    %rsp,%rbp
    a74e:	48 83 ec 10          	sub    $0x10,%rsp
    a752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a756:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset();
    a75a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a75e:	be 00 00 00 00       	mov    $0x0,%esi
    a763:	48 89 c7             	mov    %rax,%rdi
    a766:	e8 a9 ff ff ff       	call   a714 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
	return *this;
    a76b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a76f:	c9                   	leave
    a770:	c3                   	ret
    a771:	90                   	nop

000000000000a772 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
    a772:	55                   	push   %rbp
    a773:	48 89 e5             	mov    %rsp,%rbp
    a776:	48 83 ec 10          	sub    $0x10,%rsp
    a77a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    a77e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a782:	48 89 c7             	mov    %rax,%rdi
    a785:	e8 42 07 00 00       	call   aecc <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    a78a:	c9                   	leave
    a78b:	c3                   	ret

000000000000a78c <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    a78c:	55                   	push   %rbp
    a78d:	48 89 e5             	mov    %rsp,%rbp
    a790:	48 83 ec 10          	sub    $0x10,%rsp
    a794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    a798:	e8 01 ba ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    a79d:	84 c0                	test   %al,%al
    a79f:	74 18                	je     a7b9 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    a7a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a5:	48 89 c7             	mov    %rax,%rdi
    a7a8:	e8 1f 07 00 00       	call   aecc <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
    a7ad:	48 85 c0             	test   %rax,%rax
    a7b0:	75 07                	jne    a7b9 <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    a7b2:	b8 01 00 00 00       	mov    $0x1,%eax
    a7b7:	eb 05                	jmp    a7be <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEdeEv+0x32>
    a7b9:	b8 00 00 00 00       	mov    $0x0,%eax
    a7be:	84 c0                	test   %al,%al
	return *get();
    a7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c4:	48 89 c7             	mov    %rax,%rdi
    a7c7:	e8 00 07 00 00       	call   aecc <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    a7cc:	c9                   	leave
    a7cd:	c3                   	ret

000000000000a7ce <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EED1Ev>:
      ~unique_ptr() noexcept
    a7ce:	55                   	push   %rbp
    a7cf:	48 89 e5             	mov    %rsp,%rbp
    a7d2:	53                   	push   %rbx
    a7d3:	48 83 ec 28          	sub    $0x28,%rsp
    a7d7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    a7db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a7df:	48 89 c7             	mov    %rax,%rdi
    a7e2:	e8 ff 06 00 00       	call   aee6 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    a7e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    a7eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7ef:	48 8b 00             	mov    (%rax),%rax
    a7f2:	48 85 c0             	test   %rax,%rax
    a7f5:	74 29                	je     a820 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    a7f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a7fb:	48 89 c7             	mov    %rax,%rdi
    a7fe:	e8 fd 06 00 00       	call   af00 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE11get_deleterEv>
    a803:	48 89 c3             	mov    %rax,%rbx
    a806:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a80a:	48 89 c7             	mov    %rax,%rdi
    a80d:	e8 08 07 00 00       	call   af1a <_ZSt4moveIRPN2vk4raii16DeviceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    a812:	48 8b 00             	mov    (%rax),%rax
    a815:	48 89 c6             	mov    %rax,%rsi
    a818:	48 89 df             	mov    %rbx,%rdi
    a81b:	e8 08 07 00 00       	call   af28 <_ZNKSt14default_deleteIN2vk4raii16DeviceDispatcherEEclEPS2_>
	__ptr = pointer();
    a820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a824:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    a82b:	90                   	nop
    a82c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a830:	c9                   	leave
    a831:	c3                   	ret

000000000000a832 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
      reset(pointer __p = pointer()) noexcept
    a832:	55                   	push   %rbp
    a833:	48 89 e5             	mov    %rsp,%rbp
    a836:	53                   	push   %rbx
    a837:	48 83 ec 18          	sub    $0x18,%rsp
    a83b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a83f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_t.reset(std::move(__p));
    a843:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a847:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a84b:	48 89 c7             	mov    %rax,%rdi
    a84e:	e8 c7 06 00 00       	call   af1a <_ZSt4moveIRPN2vk4raii16DeviceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>
    a853:	48 8b 00             	mov    (%rax),%rax
    a856:	48 89 c6             	mov    %rax,%rsi
    a859:	48 89 df             	mov    %rbx,%rdi
    a85c:	e8 f1 06 00 00       	call   af52 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
    a861:	90                   	nop
    a862:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a866:	c9                   	leave
    a867:	c3                   	ret

000000000000a868 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEaSEDn>:
      operator=(nullptr_t) noexcept
    a868:	55                   	push   %rbp
    a869:	48 89 e5             	mov    %rsp,%rbp
    a86c:	48 83 ec 10          	sub    $0x10,%rsp
    a870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset();
    a878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a87c:	be 00 00 00 00       	mov    $0x0,%esi
    a881:	48 89 c7             	mov    %rax,%rdi
    a884:	e8 a9 ff ff ff       	call   a832 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
	return *this;
    a889:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a88d:	c9                   	leave
    a88e:	c3                   	ret
    a88f:	90                   	nop

000000000000a890 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
    a890:	55                   	push   %rbp
    a891:	48 89 e5             	mov    %rsp,%rbp
    a894:	48 83 ec 10          	sub    $0x10,%rsp
    a898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    a89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a0:	48 89 c7             	mov    %rax,%rdi
    a8a3:	e8 0e 07 00 00       	call   afb6 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    a8a8:	c9                   	leave
    a8a9:	c3                   	ret

000000000000a8aa <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    a8aa:	55                   	push   %rbp
    a8ab:	48 89 e5             	mov    %rsp,%rbp
    a8ae:	48 83 ec 10          	sub    $0x10,%rsp
    a8b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    a8b6:	e8 e3 b8 ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    a8bb:	84 c0                	test   %al,%al
    a8bd:	74 18                	je     a8d7 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    a8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c3:	48 89 c7             	mov    %rax,%rdi
    a8c6:	e8 eb 06 00 00       	call   afb6 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE3getEv>
    a8cb:	48 85 c0             	test   %rax,%rax
    a8ce:	75 07                	jne    a8d7 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
    a8d0:	b8 01 00 00 00       	mov    $0x1,%eax
    a8d5:	eb 05                	jmp    a8dc <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEdeEv+0x32>
    a8d7:	b8 00 00 00 00       	mov    $0x0,%eax
    a8dc:	84 c0                	test   %al,%al
	return *get();
    a8de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8e2:	48 89 c7             	mov    %rax,%rdi
    a8e5:	e8 cc 06 00 00       	call   afb6 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE3getEv>
      }
    a8ea:	c9                   	leave
    a8eb:	c3                   	ret

000000000000a8ec <_ZNSaIN2vk4raii13CommandBufferEED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    a8ec:	55                   	push   %rbp
    a8ed:	48 89 e5             	mov    %rsp,%rbp
    a8f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8f4:	90                   	nop
    a8f5:	5d                   	pop    %rbp
    a8f6:	c3                   	ret
    a8f7:	90                   	nop

000000000000a8f8 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EED1Ev>:
      : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
      { }
#endif

      _GLIBCXX20_CONSTEXPR
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a8f8:	55                   	push   %rbp
    a8f9:	48 89 e5             	mov    %rsp,%rbp
    a8fc:	48 83 ec 10          	sub    $0x10,%rsp
    a900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	_M_deallocate(_M_impl._M_start,
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a908:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a90c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a910:	48 8b 00             	mov    (%rax),%rax
    a913:	48 29 c2             	sub    %rax,%rdx
    a916:	48 89 d0             	mov    %rdx,%rax
    a919:	48 c1 f8 05          	sar    $0x5,%rax
	_M_deallocate(_M_impl._M_start,
    a91d:	48 89 c2             	mov    %rax,%rdx
    a920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a924:	48 8b 08             	mov    (%rax),%rcx
    a927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a92b:	48 89 ce             	mov    %rcx,%rsi
    a92e:	48 89 c7             	mov    %rax,%rdi
    a931:	e8 9a 06 00 00       	call   afd0 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE13_M_deallocateEPS2_m>
      }
    a936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a93a:	48 89 c7             	mov    %rax,%rdi
    a93d:	e8 6a ef ff ff       	call   98ac <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE12_Vector_implD1Ev>
    a942:	90                   	nop
    a943:	c9                   	leave
    a944:	c3                   	ret
    a945:	90                   	nop

000000000000a946 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    a946:	55                   	push   %rbp
    a947:	48 89 e5             	mov    %rsp,%rbp
    a94a:	48 83 ec 10          	sub    $0x10,%rsp
    a94e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    a952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a956:	48 89 c7             	mov    %rax,%rdi
    a959:	e8 a8 06 00 00       	call   b006 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>
    a95e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a965:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a96d:	48 8b 00             	mov    (%rax),%rax
    a970:	48 89 ce             	mov    %rcx,%rsi
    a973:	48 89 c7             	mov    %rax,%rdi
    a976:	e8 99 06 00 00       	call   b014 <_ZSt8_DestroyIPN2vk4raii13CommandBufferES2_EvT_S4_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    a97b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a97f:	48 89 c7             	mov    %rax,%rdi
    a982:	e8 71 ff ff ff       	call   a8f8 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EED1Ev>
    a987:	90                   	nop
    a988:	c9                   	leave
    a989:	c3                   	ret

000000000000a98a <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a98a:	55                   	push   %rbp
    a98b:	48 89 e5             	mov    %rsp,%rbp
    a98e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a996:	5d                   	pop    %rbp
    a997:	c3                   	ret

000000000000a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
      _M_data() const
    a998:	55                   	push   %rbp
    a999:	48 89 e5             	mov    %rsp,%rbp
    a99c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus._M_p; }
    a9a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a4:	48 8b 00             	mov    (%rax),%rax
    a9a7:	5d                   	pop    %rbp
    a9a8:	c3                   	ret
    a9a9:	90                   	nop

000000000000a9aa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
	_Alloc_hider(pointer __dat, const _Alloc& __a)
    a9aa:	55                   	push   %rbp
    a9ab:	48 89 e5             	mov    %rsp,%rbp
    a9ae:	48 83 ec 20          	sub    $0x20,%rsp
    a9b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(__a), _M_p(__dat) { }
    a9be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9c6:	48 89 d6             	mov    %rdx,%rsi
    a9c9:	48 89 c7             	mov    %rax,%rdi
    a9cc:	e8 2f a9 ff ff       	call   5300 <_ZNSaIcEC2ERKS_@plt>
    a9d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9d9:	48 89 10             	mov    %rdx,(%rax)
    a9dc:	90                   	nop
    a9dd:	c9                   	leave
    a9de:	c3                   	ret
    a9df:	90                   	nop

000000000000a9e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
      _M_dispose()
    a9e0:	55                   	push   %rbp
    a9e1:	48 89 e5             	mov    %rsp,%rbp
    a9e4:	48 83 ec 10          	sub    $0x10,%rsp
    a9e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (!_M_is_local())
    a9ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9f0:	48 89 c7             	mov    %rax,%rdi
    a9f3:	e8 30 00 00 00       	call   aa28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    a9f8:	83 f0 01             	xor    $0x1,%eax
    a9fb:	84 c0                	test   %al,%al
    a9fd:	74 17                	je     aa16 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x36>
    a9ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	  _M_destroy(_M_allocated_capacity);
    aa03:	48 8b 50 10          	mov    0x10(%rax),%rdx
    aa07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa0b:	48 89 d6             	mov    %rdx,%rsi
    aa0e:	48 89 c7             	mov    %rax,%rdi
    aa11:	e8 f0 06 00 00       	call   b106 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
      }
    aa16:	90                   	nop
    aa17:	c9                   	leave
    aa18:	c3                   	ret
    aa19:	90                   	nop

000000000000aa1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator()
    aa1a:	55                   	push   %rbp
    aa1b:	48 89 e5             	mov    %rsp,%rbp
    aa1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    aa22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa26:	5d                   	pop    %rbp
    aa27:	c3                   	ret

000000000000aa28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
      _M_is_local() const
    aa28:	55                   	push   %rbp
    aa29:	48 89 e5             	mov    %rsp,%rbp
    aa2c:	53                   	push   %rbx
    aa2d:	48 83 ec 18          	sub    $0x18,%rsp
    aa31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_data() == _M_local_data(); }
    aa35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa39:	48 89 c7             	mov    %rax,%rdi
    aa3c:	e8 57 ff ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    aa41:	48 89 c3             	mov    %rax,%rbx
    aa44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa48:	48 89 c7             	mov    %rax,%rdi
    aa4b:	e8 04 07 00 00       	call   b154 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    aa50:	48 39 c3             	cmp    %rax,%rbx
    aa53:	0f 94 c0             	sete   %al
    aa56:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa5a:	c9                   	leave
    aa5b:	c3                   	ret

000000000000aa5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
      _M_data(pointer __p)
    aa5c:	55                   	push   %rbp
    aa5d:	48 89 e5             	mov    %rsp,%rbp
    aa60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_dataplus._M_p = __p; }
    aa68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa70:	48 89 10             	mov    %rdx,(%rax)
    aa73:	90                   	nop
    aa74:	5d                   	pop    %rbp
    aa75:	c3                   	ret

000000000000aa76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>:
      _M_capacity(size_type __capacity)
    aa76:	55                   	push   %rbp
    aa77:	48 89 e5             	mov    %rsp,%rbp
    aa7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_allocated_capacity = __capacity; }
    aa82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa8a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    aa8e:	90                   	nop
    aa8f:	5d                   	pop    %rbp
    aa90:	c3                   	ret
    aa91:	90                   	nop

000000000000aa92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>:
      _M_length(size_type __length)
    aa92:	55                   	push   %rbp
    aa93:	48 89 e5             	mov    %rsp,%rbp
    aa96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_string_length = __length; }
    aa9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaa2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aaa6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aaaa:	90                   	nop
    aaab:	5d                   	pop    %rbp
    aaac:	c3                   	ret
    aaad:	90                   	nop

000000000000aaae <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    aaae:	55                   	push   %rbp
    aaaf:	48 89 e5             	mov    %rsp,%rbp
    aab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aab6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aaba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aabe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aac2:	48 89 10             	mov    %rdx,(%rax)
    aac5:	90                   	nop
    aac6:	5d                   	pop    %rbp
    aac7:	c3                   	ret

000000000000aac8 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    aac8:	55                   	push   %rbp
    aac9:	48 89 e5             	mov    %rsp,%rbp
    aacc:	48 83 ec 10          	sub    $0x10,%rsp
    aad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aad8:	48 8b 00             	mov    (%rax),%rax
    aadb:	48 85 c0             	test   %rax,%rax
    aade:	74 0f                	je     aaef <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    aae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae4:	48 8b 00             	mov    (%rax),%rax
    aae7:	48 89 c7             	mov    %rax,%rdi
    aaea:	e8 f1 fe ff ff       	call   a9e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    aaef:	90                   	nop
    aaf0:	c9                   	leave
    aaf1:	c3                   	ret

000000000000aaf2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    aaf2:	55                   	push   %rbp
    aaf3:	48 89 e5             	mov    %rsp,%rbp
    aaf6:	48 83 ec 60          	sub    $0x60,%rsp
    aafa:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    aafe:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    ab02:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    ab06:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ab0a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ab0e:	48 89 d6             	mov    %rdx,%rsi
    ab11:	48 89 c7             	mov    %rax,%rdi
    ab14:	e8 59 06 00 00       	call   b172 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    ab19:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    ab1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ab21:	48 83 f8 0f          	cmp    $0xf,%rax
    ab25:	76 3f                	jbe    ab66 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    ab27:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    ab2b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab2f:	ba 00 00 00 00       	mov    $0x0,%edx
    ab34:	48 89 ce             	mov    %rcx,%rsi
    ab37:	48 89 c7             	mov    %rax,%rdi
    ab3a:	e8 ff 04 00 00       	call   b03e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    ab3f:	48 89 c2             	mov    %rax,%rdx
    ab42:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab46:	48 89 d6             	mov    %rdx,%rsi
    ab49:	48 89 c7             	mov    %rax,%rdi
    ab4c:	e8 0b ff ff ff       	call   aa5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
    ab51:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ab55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab59:	48 89 d6             	mov    %rdx,%rsi
    ab5c:	48 89 c7             	mov    %rax,%rdi
    ab5f:	e8 12 ff ff ff       	call   aa76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    ab64:	eb 5e                	jmp    abc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xd2>
    ab66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ab6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (std::is_constant_evaluated())
    ab6e:	e8 36 b6 ff ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
    ab73:	84 c0                	test   %al,%al
    ab75:	74 40                	je     abb7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc5>
	  for (_CharT& __c : _M_local_buf)
    ab77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab7b:	48 83 c0 10          	add    $0x10,%rax
    ab7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ab83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab87:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ab8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab8f:	48 83 c0 10          	add    $0x10,%rax
    ab93:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ab97:	eb 14                	jmp    abad <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbb>
    ab99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab9d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	    __c = _CharT();
    aba1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aba5:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    aba8:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    abad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    abb1:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    abb5:	75 e2                	jne    ab99 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa7>
	return _M_local_data();
    abb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abbb:	48 89 c7             	mov    %rax,%rdi
    abbe:	e8 e9 bb ff ff       	call   67ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    abc3:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    abc4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    abc8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    abcc:	48 89 d6             	mov    %rdx,%rsi
    abcf:	48 89 c7             	mov    %rax,%rdi
    abd2:	e8 d7 fe ff ff       	call   aaae <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    abd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    abdb:	48 89 c7             	mov    %rax,%rdi
    abde:	e8 b5 fd ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    abe3:	48 89 c1             	mov    %rax,%rcx
    abe6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    abea:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    abee:	48 89 c6             	mov    %rax,%rsi
    abf1:	48 89 cf             	mov    %rcx,%rdi
    abf4:	e8 aa 05 00 00       	call   b1a3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>

	__guard._M_guarded = 0;
    abf9:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    ac00:	00 

	_M_set_length(__dnew);
    ac01:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ac05:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ac09:	48 89 d6             	mov    %rdx,%rsi
    ac0c:	48 89 c7             	mov    %rax,%rdi
    ac0f:	e8 10 f9 ff ff       	call   a524 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    ac14:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ac18:	48 89 c7             	mov    %rax,%rdi
    ac1b:	e8 a8 fe ff ff       	call   aac8 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    ac20:	c9                   	leave
    ac21:	c3                   	ret

000000000000ac22 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
      append(const _CharT* __s)
    ac22:	55                   	push   %rbp
    ac23:	48 89 e5             	mov    %rsp,%rbp
    ac26:	48 83 ec 20          	sub    $0x20,%rsp
    ac2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const size_type __n = traits_type::length(__s);
    ac32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac36:	48 89 c7             	mov    %rax,%rdi
    ac39:	e8 c6 b5 ff ff       	call   6204 <_ZNSt11char_traitsIcE6lengthEPKc>
    ac3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_check_length(size_type(0), __n, "basic_string::append");
    ac42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ac46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac4a:	48 8d 0d b1 f1 01 00 	lea    0x1f1b1(%rip),%rcx        # 29e02 <_ZNSt8__detailL19__atomic_spin_countE+0x39e>
    ac51:	be 00 00 00 00       	mov    $0x0,%esi
    ac56:	48 89 c7             	mov    %rax,%rdi
    ac59:	e8 88 05 00 00       	call   b1e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
	return _M_append(__s, __n);
    ac5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ac62:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ac66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac6a:	48 89 ce             	mov    %rcx,%rsi
    ac6d:	48 89 c7             	mov    %rax,%rdi
    ac70:	e8 cf 05 00 00       	call   b244 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
      }
    ac75:	c9                   	leave
    ac76:	c3                   	ret
    ac77:	90                   	nop

000000000000ac78 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
    ac78:	55                   	push   %rbp
    ac79:	48 89 e5             	mov    %rsp,%rbp
    ac7c:	48 83 ec 10          	sub    $0x10,%rsp
    ac80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _M_is_local() ? size_type(_S_local_capacity)
    ac84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac88:	48 89 c7             	mov    %rax,%rdi
    ac8b:	e8 98 fd ff ff       	call   aa28 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    ac90:	84 c0                	test   %al,%al
    ac92:	74 07                	je     ac9b <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x23>
    ac94:	b8 0f 00 00 00       	mov    $0xf,%eax
	                     : _M_allocated_capacity;
    ac99:	eb 08                	jmp    aca3 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x2b>
	return _M_is_local() ? size_type(_S_local_capacity)
    ac9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac9f:	48 8b 40 10          	mov    0x10(%rax),%rax
      }
    aca3:	c9                   	leave
    aca4:	c3                   	ret

000000000000aca5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    aca5:	55                   	push   %rbp
    aca6:	48 89 e5             	mov    %rsp,%rbp
    aca9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    acad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb1:	5d                   	pop    %rbp
    acb2:	c3                   	ret
    acb3:	90                   	nop

000000000000acb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>:
      insert(size_type __pos, const _CharT* __s)
    acb4:	55                   	push   %rbp
    acb5:	48 89 e5             	mov    %rsp,%rbp
    acb8:	48 83 ec 20          	sub    $0x20,%rsp
    acbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	return this->replace(__pos, size_type(0), __s,
    acc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    accc:	48 89 c7             	mov    %rax,%rdi
    accf:	e8 30 b5 ff ff       	call   6204 <_ZNSt11char_traitsIcE6lengthEPKc>
    acd4:	48 89 c1             	mov    %rax,%rcx
    acd7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    acdb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    acdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace3:	49 89 c8             	mov    %rcx,%r8
    ace6:	48 89 d1             	mov    %rdx,%rcx
    ace9:	ba 00 00 00 00       	mov    $0x0,%edx
    acee:	48 89 c7             	mov    %rax,%rdi
    acf1:	e8 18 06 00 00       	call   b30e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
      }
    acf6:	c9                   	leave
    acf7:	c3                   	ret

000000000000acf8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>:
      _M_check(size_type __pos, const char* __s) const
    acf8:	55                   	push   %rbp
    acf9:	48 89 e5             	mov    %rsp,%rbp
    acfc:	48 83 ec 20          	sub    $0x20,%rsp
    ad00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad08:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__pos > this->size())
    ad0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad10:	48 89 c7             	mov    %rax,%rdi
    ad13:	e8 de b5 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    ad18:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ad1c:	0f 92 c0             	setb   %al
    ad1f:	84 c0                	test   %al,%al
    ad21:	74 2e                	je     ad51 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc+0x59>
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
    ad23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad27:	48 89 c7             	mov    %rax,%rdi
    ad2a:	e8 c7 b5 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    ad2f:	48 89 c1             	mov    %rax,%rcx
    ad32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad3a:	48 89 c6             	mov    %rax,%rsi
    ad3d:	48 8d 05 d4 f0 01 00 	lea    0x1f0d4(%rip),%rax        # 29e18 <_ZNSt8__detailL19__atomic_spin_countE+0x3b4>
    ad44:	48 89 c7             	mov    %rax,%rdi
    ad47:	b8 00 00 00 00       	mov    $0x0,%eax
    ad4c:	e8 cf a5 ff ff       	call   5320 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	return __pos;
    ad51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
    ad55:	c9                   	leave
    ad56:	c3                   	ret
    ad57:	90                   	nop

000000000000ad58 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEC1EPS2_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    ad58:	55                   	push   %rbp
    ad59:	48 89 e5             	mov    %rsp,%rbp
    ad5c:	53                   	push   %rbx
    ad5d:	48 83 ec 18          	sub    $0x18,%rsp
    ad61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ad69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad6d:	48 89 c7             	mov    %rax,%rdi
    ad70:	e8 5d 06 00 00       	call   b3d2 <_ZNSt5tupleIJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
    ad75:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    ad79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad7d:	48 89 c7             	mov    %rax,%rdi
    ad80:	e8 0b 00 00 00       	call   ad90 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    ad85:	48 89 18             	mov    %rbx,(%rax)
    ad88:	90                   	nop
    ad89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad8d:	c9                   	leave
    ad8e:	c3                   	ret
    ad8f:	90                   	nop

000000000000ad90 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    ad90:	55                   	push   %rbp
    ad91:	48 89 e5             	mov    %rsp,%rbp
    ad94:	48 83 ec 10          	sub    $0x10,%rsp
    ad98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada0:	48 89 c7             	mov    %rax,%rdi
    ada3:	e8 45 06 00 00       	call   b3ed <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    ada8:	c9                   	leave
    ada9:	c3                   	ret

000000000000adaa <_ZNSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    adaa:	55                   	push   %rbp
    adab:	48 89 e5             	mov    %rsp,%rbp
    adae:	48 83 ec 10          	sub    $0x10,%rsp
    adb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    adb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adba:	48 89 c7             	mov    %rax,%rdi
    adbd:	e8 46 06 00 00       	call   b408 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    adc2:	c9                   	leave
    adc3:	c3                   	ret

000000000000adc4 <_ZSt4moveIRPN2vk4raii17ContextDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    adc4:	55                   	push   %rbp
    adc5:	48 89 e5             	mov    %rsp,%rbp
    adc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    adcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add0:	5d                   	pop    %rbp
    add1:	c3                   	ret

000000000000add2 <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    add2:	55                   	push   %rbp
    add3:	48 89 e5             	mov    %rsp,%rbp
    add6:	48 83 ec 10          	sub    $0x10,%rsp
    adda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    ade2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ade6:	48 85 c0             	test   %rax,%rax
    ade9:	74 0d                	je     adf8 <_ZNKSt14default_deleteIN2vk4raii17ContextDispatcherEEclEPS2_+0x26>
    adeb:	be 38 00 00 00       	mov    $0x38,%esi
    adf0:	48 89 c7             	mov    %rax,%rdi
    adf3:	e8 38 a4 ff ff       	call   5230 <_ZdlPvm@plt>
      }
    adf8:	90                   	nop
    adf9:	c9                   	leave
    adfa:	c3                   	ret
    adfb:	90                   	nop

000000000000adfc <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    adfc:	55                   	push   %rbp
    adfd:	48 89 e5             	mov    %rsp,%rbp
    ae00:	48 83 ec 10          	sub    $0x10,%rsp
    ae04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae0c:	48 89 c7             	mov    %rax,%rdi
    ae0f:	e8 0e 06 00 00       	call   b422 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    ae14:	c9                   	leave
    ae15:	c3                   	ret

000000000000ae16 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    ae16:	55                   	push   %rbp
    ae17:	48 89 e5             	mov    %rsp,%rbp
    ae1a:	48 83 ec 10          	sub    $0x10,%rsp
    ae1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    ae22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae26:	48 89 c7             	mov    %rax,%rdi
    ae29:	e8 0e 06 00 00       	call   b43c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    ae2e:	c9                   	leave
    ae2f:	c3                   	ret

000000000000ae30 <_ZSt4moveIRPN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    ae30:	55                   	push   %rbp
    ae31:	48 89 e5             	mov    %rsp,%rbp
    ae34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ae38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3c:	5d                   	pop    %rbp
    ae3d:	c3                   	ret

000000000000ae3e <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    ae3e:	55                   	push   %rbp
    ae3f:	48 89 e5             	mov    %rsp,%rbp
    ae42:	48 83 ec 10          	sub    $0x10,%rsp
    ae46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    ae4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae52:	48 85 c0             	test   %rax,%rax
    ae55:	74 0d                	je     ae64 <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_+0x26>
    ae57:	be 48 03 00 00       	mov    $0x348,%esi
    ae5c:	48 89 c7             	mov    %rax,%rdi
    ae5f:	e8 cc a3 ff ff       	call   5230 <_ZdlPvm@plt>
      }
    ae64:	90                   	nop
    ae65:	c9                   	leave
    ae66:	c3                   	ret
    ae67:	90                   	nop

000000000000ae68 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
      void reset(pointer __p) noexcept
    ae68:	55                   	push   %rbp
    ae69:	48 89 e5             	mov    %rsp,%rbp
    ae6c:	53                   	push   %rbx
    ae6d:	48 83 ec 28          	sub    $0x28,%rsp
    ae71:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ae75:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    ae79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ae7d:	48 89 c7             	mov    %rax,%rdi
    ae80:	e8 77 ff ff ff       	call   adfc <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    ae85:	48 8b 00             	mov    (%rax),%rax
    ae88:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    ae8c:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    ae90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ae94:	48 89 c7             	mov    %rax,%rdi
    ae97:	e8 60 ff ff ff       	call   adfc <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    ae9c:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    ae9f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    aea4:	74 1e                	je     aec4 <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_+0x5c>
	  _M_deleter()(__old_p);
    aea6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aeaa:	48 89 c7             	mov    %rax,%rdi
    aead:	e8 8a 05 00 00       	call   b43c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    aeb2:	48 89 c2             	mov    %rax,%rdx
    aeb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aeb9:	48 89 c6             	mov    %rax,%rsi
    aebc:	48 89 d7             	mov    %rdx,%rdi
    aebf:	e8 7a ff ff ff       	call   ae3e <_ZNKSt14default_deleteIN2vk4raii18InstanceDispatcherEEclEPS2_>
      }
    aec4:	90                   	nop
    aec5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aec9:	c9                   	leave
    aeca:	c3                   	ret
    aecb:	90                   	nop

000000000000aecc <_ZNKSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
    aecc:	55                   	push   %rbp
    aecd:	48 89 e5             	mov    %rsp,%rbp
    aed0:	48 83 ec 10          	sub    $0x10,%rsp
    aed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    aed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aedc:	48 89 c7             	mov    %rax,%rdi
    aedf:	e8 72 05 00 00       	call   b456 <_ZNKSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    aee4:	c9                   	leave
    aee5:	c3                   	ret

000000000000aee6 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    aee6:	55                   	push   %rbp
    aee7:	48 89 e5             	mov    %rsp,%rbp
    aeea:	48 83 ec 10          	sub    $0x10,%rsp
    aeee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef6:	48 89 c7             	mov    %rax,%rdi
    aef9:	e8 75 05 00 00       	call   b473 <_ZSt3getILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    aefe:	c9                   	leave
    aeff:	c3                   	ret

000000000000af00 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE11get_deleterEv>:
      get_deleter() noexcept
    af00:	55                   	push   %rbp
    af01:	48 89 e5             	mov    %rsp,%rbp
    af04:	48 83 ec 10          	sub    $0x10,%rsp
    af08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    af0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af10:	48 89 c7             	mov    %rax,%rdi
    af13:	e8 76 05 00 00       	call   b48e <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    af18:	c9                   	leave
    af19:	c3                   	ret

000000000000af1a <_ZSt4moveIRPN2vk4raii16DeviceDispatcherEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
    af1a:	55                   	push   %rbp
    af1b:	48 89 e5             	mov    %rsp,%rbp
    af1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    af22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af26:	5d                   	pop    %rbp
    af27:	c3                   	ret

000000000000af28 <_ZNKSt14default_deleteIN2vk4raii16DeviceDispatcherEEclEPS2_>:
      operator()(_Tp* __ptr) const
    af28:	55                   	push   %rbp
    af29:	48 89 e5             	mov    %rsp,%rbp
    af2c:	48 83 ec 10          	sub    $0x10,%rsp
    af30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    af38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af3c:	48 85 c0             	test   %rax,%rax
    af3f:	74 0d                	je     af4e <_ZNKSt14default_deleteIN2vk4raii16DeviceDispatcherEEclEPS2_+0x26>
    af41:	be b8 0f 00 00       	mov    $0xfb8,%esi
    af46:	48 89 c7             	mov    %rax,%rdi
    af49:	e8 e2 a2 ff ff       	call   5230 <_ZdlPvm@plt>
      }
    af4e:	90                   	nop
    af4f:	c9                   	leave
    af50:	c3                   	ret
    af51:	90                   	nop

000000000000af52 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE5resetEPS2_>:
      void reset(pointer __p) noexcept
    af52:	55                   	push   %rbp
    af53:	48 89 e5             	mov    %rsp,%rbp
    af56:	53                   	push   %rbx
    af57:	48 83 ec 28          	sub    $0x28,%rsp
    af5b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    af5f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    af63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af67:	48 89 c7             	mov    %rax,%rdi
    af6a:	e8 77 ff ff ff       	call   aee6 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    af6f:	48 8b 00             	mov    (%rax),%rax
    af72:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    af76:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    af7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af7e:	48 89 c7             	mov    %rax,%rdi
    af81:	e8 60 ff ff ff       	call   aee6 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    af86:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    af89:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    af8e:	74 1e                	je     afae <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE5resetEPS2_+0x5c>
	  _M_deleter()(__old_p);
    af90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af94:	48 89 c7             	mov    %rax,%rdi
    af97:	e8 f2 04 00 00       	call   b48e <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>
    af9c:	48 89 c2             	mov    %rax,%rdx
    af9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afa3:	48 89 c6             	mov    %rax,%rsi
    afa6:	48 89 d7             	mov    %rdx,%rdi
    afa9:	e8 7a ff ff ff       	call   af28 <_ZNKSt14default_deleteIN2vk4raii16DeviceDispatcherEEclEPS2_>
      }
    afae:	90                   	nop
    afaf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    afb3:	c9                   	leave
    afb4:	c3                   	ret
    afb5:	90                   	nop

000000000000afb6 <_ZNKSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
    afb6:	55                   	push   %rbp
    afb7:	48 89 e5             	mov    %rsp,%rbp
    afba:	48 83 ec 10          	sub    $0x10,%rsp
    afbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    afc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afc6:	48 89 c7             	mov    %rax,%rdi
    afc9:	e8 da 04 00 00       	call   b4a8 <_ZNKSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
    afce:	c9                   	leave
    afcf:	c3                   	ret

000000000000afd0 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    afd0:	55                   	push   %rbp
    afd1:	48 89 e5             	mov    %rsp,%rbp
    afd4:	48 83 ec 20          	sub    $0x20,%rsp
    afd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afe0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    afe4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    afe9:	74 17                	je     b002 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    afeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aff3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aff7:	48 89 ce             	mov    %rcx,%rsi
    affa:	48 89 c7             	mov    %rax,%rdi
    affd:	e8 c3 04 00 00       	call   b4c5 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE10deallocateERS3_PS2_m>
      }
    b002:	90                   	nop
    b003:	c9                   	leave
    b004:	c3                   	ret
    b005:	90                   	nop

000000000000b006 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b006:	55                   	push   %rbp
    b007:	48 89 e5             	mov    %rsp,%rbp
    b00a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b012:	5d                   	pop    %rbp
    b013:	c3                   	ret

000000000000b014 <_ZSt8_DestroyIPN2vk4raii13CommandBufferES2_EvT_S4_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b014:	55                   	push   %rbp
    b015:	48 89 e5             	mov    %rsp,%rbp
    b018:	48 83 ec 20          	sub    $0x20,%rsp
    b01c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b020:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b024:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    b028:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b02c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b030:	48 89 d6             	mov    %rdx,%rsi
    b033:	48 89 c7             	mov    %rax,%rdi
    b036:	e8 e8 04 00 00       	call   b523 <_ZSt8_DestroyIPN2vk4raii13CommandBufferEEvT_S4_>
    }
    b03b:	90                   	nop
    b03c:	c9                   	leave
    b03d:	c3                   	ret

000000000000b03e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>:
    basic_string<_CharT, _Traits, _Alloc>::
    b03e:	55                   	push   %rbp
    b03f:	48 89 e5             	mov    %rsp,%rbp
    b042:	53                   	push   %rbx
    b043:	48 83 ec 28          	sub    $0x28,%rsp
    b047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b04b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b04f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__capacity > max_size())
    b053:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b057:	48 8b 18             	mov    (%rax),%rbx
    b05a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b05e:	48 89 c7             	mov    %rax,%rdi
    b061:	e8 00 05 00 00       	call   b566 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    b066:	48 39 d8             	cmp    %rbx,%rax
    b069:	0f 92 c0             	setb   %al
    b06c:	84 c0                	test   %al,%al
    b06e:	74 0f                	je     b07f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0x41>
	std::__throw_length_error(__N("basic_string::_M_create"));
    b070:	48 8d 05 d8 ed 01 00 	lea    0x1edd8(%rip),%rax        # 29e4f <_ZNSt8__detailL19__atomic_spin_countE+0x3eb>
    b077:	48 89 c7             	mov    %rax,%rdi
    b07a:	e8 61 a0 ff ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
    b07f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b083:	48 8b 00             	mov    (%rax),%rax
    b086:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    b08a:	73 52                	jae    b0de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
    b08c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b090:	48 8b 10             	mov    (%rax),%rdx
    b093:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b097:	48 01 c0             	add    %rax,%rax
    b09a:	48 39 c2             	cmp    %rax,%rdx
    b09d:	73 3f                	jae    b0de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	  __capacity = 2 * __old_capacity;
    b09f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b0a3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    b0a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0ab:	48 89 10             	mov    %rdx,(%rax)
	  if (__capacity > max_size())
    b0ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0b2:	48 8b 18             	mov    (%rax),%rbx
    b0b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0b9:	48 89 c7             	mov    %rax,%rdi
    b0bc:	e8 a5 04 00 00       	call   b566 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    b0c1:	48 39 d8             	cmp    %rbx,%rax
    b0c4:	0f 92 c0             	setb   %al
    b0c7:	84 c0                	test   %al,%al
    b0c9:	74 13                	je     b0de <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	    __capacity = max_size();
    b0cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0cf:	48 89 c7             	mov    %rax,%rdi
    b0d2:	e8 8f 04 00 00       	call   b566 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    b0d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b0db:	48 89 02             	mov    %rax,(%rdx)
      return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
    b0de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0e2:	48 8b 00             	mov    (%rax),%rax
    b0e5:	48 8d 58 01          	lea    0x1(%rax),%rbx
    b0e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0ed:	48 89 c7             	mov    %rax,%rdi
    b0f0:	e8 25 f9 ff ff       	call   aa1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    b0f5:	48 89 de             	mov    %rbx,%rsi
    b0f8:	48 89 c7             	mov    %rax,%rdi
    b0fb:	e8 8f 04 00 00       	call   b58f <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    }
    b100:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b104:	c9                   	leave
    b105:	c3                   	ret

000000000000b106 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>:
      _M_destroy(size_type __size) throw()
    b106:	55                   	push   %rbp
    b107:	48 89 e5             	mov    %rsp,%rbp
    b10a:	41 54                	push   %r12
    b10c:	53                   	push   %rbx
    b10d:	48 83 ec 10          	sub    $0x10,%rsp
    b111:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b115:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    b119:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b11d:	48 8d 58 01          	lea    0x1(%rax),%rbx
    b121:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b125:	48 89 c7             	mov    %rax,%rdi
    b128:	e8 6b f8 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b12d:	49 89 c4             	mov    %rax,%r12
    b130:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b134:	48 89 c7             	mov    %rax,%rdi
    b137:	e8 de f8 ff ff       	call   aa1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    b13c:	48 89 da             	mov    %rbx,%rdx
    b13f:	4c 89 e6             	mov    %r12,%rsi
    b142:	48 89 c7             	mov    %rax,%rdi
    b145:	e8 b3 04 00 00       	call   b5fd <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
    b14a:	90                   	nop
    b14b:	48 83 c4 10          	add    $0x10,%rsp
    b14f:	5b                   	pop    %rbx
    b150:	41 5c                	pop    %r12
    b152:	5d                   	pop    %rbp
    b153:	c3                   	ret

000000000000b154 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data() const
    b154:	55                   	push   %rbp
    b155:	48 89 e5             	mov    %rsp,%rbp
    b158:	48 83 ec 10          	sub    $0x10,%rsp
    b15c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    b160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b164:	48 83 c0 10          	add    $0x10,%rax
    b168:	48 89 c7             	mov    %rax,%rdi
    b16b:	e8 eb 04 00 00       	call   b65b <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>
      }
    b170:	c9                   	leave
    b171:	c3                   	ret

000000000000b172 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    b172:	55                   	push   %rbp
    b173:	48 89 e5             	mov    %rsp,%rbp
    b176:	48 83 ec 10          	sub    $0x10,%rsp
    b17a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b17e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    b182:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b186:	48 89 c7             	mov    %rax,%rdi
    b189:	e8 e7 04 00 00       	call   b675 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    b18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b192:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b196:	48 89 d6             	mov    %rdx,%rsi
    b199:	48 89 c7             	mov    %rax,%rdi
    b19c:	e8 df 04 00 00       	call   b680 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    b1a1:	c9                   	leave
    b1a2:	c3                   	ret

000000000000b1a3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
    b1a3:	55                   	push   %rbp
    b1a4:	48 89 e5             	mov    %rsp,%rbp
    b1a7:	48 83 ec 20          	sub    $0x20,%rsp
    b1ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b1b3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { _S_copy(__p, __k1, __k2 - __k1); }
    b1b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1bb:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    b1bf:	48 89 c2             	mov    %rax,%rdx
    b1c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b1c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ca:	48 89 ce             	mov    %rcx,%rsi
    b1cd:	48 89 c7             	mov    %rax,%rdi
    b1d0:	e8 c1 04 00 00       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    b1d5:	90                   	nop
    b1d6:	c9                   	leave
    b1d7:	c3                   	ret

000000000000b1d8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator() const
    b1d8:	55                   	push   %rbp
    b1d9:	48 89 e5             	mov    %rsp,%rbp
    b1dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    b1e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1e4:	5d                   	pop    %rbp
    b1e5:	c3                   	ret

000000000000b1e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>:
      _M_check_length(size_type __n1, size_type __n2, const char* __s) const
    b1e6:	55                   	push   %rbp
    b1e7:	48 89 e5             	mov    %rsp,%rbp
    b1ea:	53                   	push   %rbx
    b1eb:	48 83 ec 28          	sub    $0x28,%rsp
    b1ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b1f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b1fb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	if (this->max_size() - (this->size() - __n1) < __n2)
    b1ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b203:	48 89 c7             	mov    %rax,%rdi
    b206:	e8 5b 03 00 00       	call   b566 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    b20b:	48 89 c3             	mov    %rax,%rbx
    b20e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b212:	48 89 c7             	mov    %rax,%rdi
    b215:	e8 dc b0 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b21a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b21e:	48 29 c2             	sub    %rax,%rdx
    b221:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
    b225:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b229:	0f 92 c0             	setb   %al
    b22c:	84 c0                	test   %al,%al
    b22e:	74 0c                	je     b23c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc+0x56>
	  __throw_length_error(__N(__s));
    b230:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b234:	48 89 c7             	mov    %rax,%rdi
    b237:	e8 a4 9e ff ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
      }
    b23c:	90                   	nop
    b23d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b241:	c9                   	leave
    b242:	c3                   	ret
    b243:	90                   	nop

000000000000b244 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    b244:	55                   	push   %rbp
    b245:	48 89 e5             	mov    %rsp,%rbp
    b248:	53                   	push   %rbx
    b249:	48 83 ec 38          	sub    $0x38,%rsp
    b24d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b251:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b255:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    _M_append(const _CharT* __s, size_type __n)
    {
      const size_type __len = __n + this->size();
    b259:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b25d:	48 89 c7             	mov    %rax,%rdi
    b260:	e8 91 b0 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b265:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b269:	48 01 d0             	add    %rdx,%rax
    b26c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      if (__len <= this->capacity())
    b270:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b274:	48 89 c7             	mov    %rax,%rdi
    b277:	e8 fc f9 ff ff       	call   ac78 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    b27c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    b280:	0f 93 c0             	setae  %al
    b283:	84 c0                	test   %al,%al
    b285:	74 3b                	je     b2c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x7e>
	{
	  if (__n)
    b287:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    b28c:	74 62                	je     b2f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
    b28e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b292:	48 89 c7             	mov    %rax,%rdi
    b295:	e8 fe f6 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b29a:	48 89 c3             	mov    %rax,%rbx
    b29d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b2a1:	48 89 c7             	mov    %rax,%rdi
    b2a4:	e8 4d b0 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b2a9:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b2ad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b2b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b2b5:	48 89 c6             	mov    %rax,%rsi
    b2b8:	48 89 cf             	mov    %rcx,%rdi
    b2bb:	e8 d6 03 00 00       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    b2c0:	eb 2e                	jmp    b2f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	}
      else
	this->_M_mutate(this->size(), size_type(0), __s, __n);
    b2c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b2c6:	48 89 c7             	mov    %rax,%rdi
    b2c9:	e8 28 b0 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b2ce:	48 89 c6             	mov    %rax,%rsi
    b2d1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    b2d5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b2d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b2dd:	49 89 c8             	mov    %rcx,%r8
    b2e0:	48 89 d1             	mov    %rdx,%rcx
    b2e3:	ba 00 00 00 00       	mov    $0x0,%edx
    b2e8:	48 89 c7             	mov    %rax,%rdi
    b2eb:	e8 f0 03 00 00       	call   b6e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__len);
    b2f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b2f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b2f8:	48 89 d6             	mov    %rdx,%rsi
    b2fb:	48 89 c7             	mov    %rax,%rdi
    b2fe:	e8 21 f2 ff ff       	call   a524 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    b303:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    }
    b307:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b30b:	c9                   	leave
    b30c:	c3                   	ret
    b30d:	90                   	nop

000000000000b30e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>:
      replace(size_type __pos, size_type __n1, const _CharT* __s,
    b30e:	55                   	push   %rbp
    b30f:	48 89 e5             	mov    %rsp,%rbp
    b312:	53                   	push   %rbx
    b313:	48 83 ec 38          	sub    $0x38,%rsp
    b317:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b31b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b31f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b323:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    b327:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
    b32b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b32f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b333:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b337:	48 89 ce             	mov    %rcx,%rsi
    b33a:	48 89 c7             	mov    %rax,%rdi
    b33d:	e8 44 00 00 00       	call   b386 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    b342:	48 89 c3             	mov    %rax,%rbx
    b345:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b349:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b34d:	48 8d 15 13 eb 01 00 	lea    0x1eb13(%rip),%rdx        # 29e67 <_ZNSt8__detailL19__atomic_spin_countE+0x403>
    b354:	48 89 ce             	mov    %rcx,%rsi
    b357:	48 89 c7             	mov    %rax,%rdi
    b35a:	e8 99 f9 ff ff       	call   acf8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    b35f:	48 89 c6             	mov    %rax,%rsi
    b362:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    b366:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b36a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b36e:	49 89 c8             	mov    %rcx,%r8
    b371:	48 89 d1             	mov    %rdx,%rcx
    b374:	48 89 da             	mov    %rbx,%rdx
    b377:	48 89 c7             	mov    %rax,%rdi
    b37a:	e8 a5 04 00 00       	call   b824 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
      }
    b37f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b383:	c9                   	leave
    b384:	c3                   	ret
    b385:	90                   	nop

000000000000b386 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>:
      _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
    b386:	55                   	push   %rbp
    b387:	48 89 e5             	mov    %rsp,%rbp
    b38a:	48 83 ec 30          	sub    $0x30,%rsp
    b38e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b392:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b396:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const bool __testoff =  __off < this->size() - __pos;
    b39a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b39e:	48 89 c7             	mov    %rax,%rdi
    b3a1:	e8 50 af ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b3a6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    b3aa:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    b3ae:	0f 92 c0             	setb   %al
    b3b1:	88 45 ff             	mov    %al,-0x1(%rbp)
	return __testoff ? __off : this->size() - __pos;
    b3b4:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    b3b8:	74 06                	je     b3c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x3a>
    b3ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b3be:	eb 10                	jmp    b3d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x4a>
    b3c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3c4:	48 89 c7             	mov    %rax,%rdi
    b3c7:	e8 2a af ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b3cc:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
      }
    b3d0:	c9                   	leave
    b3d1:	c3                   	ret

000000000000b3d2 <_ZNSt5tupleIJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:

    public:
      template<bool _Dummy = true,
	       _ImplicitDefaultCtor<_Dummy, _T1, _T2> = true>
	constexpr
	tuple()
    b3d2:	55                   	push   %rbp
    b3d3:	48 89 e5             	mov    %rsp,%rbp
    b3d6:	48 83 ec 10          	sub    $0x10,%rsp
    b3da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	noexcept(__nothrow_default_constructible())
	: _Inherited() { }
    b3de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3e2:	48 89 c7             	mov    %rax,%rdi
    b3e5:	e8 e2 07 00 00       	call   bbcc <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1Ev>
    b3ea:	90                   	nop
    b3eb:	c9                   	leave
    b3ec:	c3                   	ret

000000000000b3ed <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    __get_helper(const tuple<_Types...>&) = delete;

  /// Return a reference to the ith element of a tuple.
  template<size_t __i, typename... _Elements>
    constexpr __tuple_element_t<__i, tuple<_Elements...>>&
    get(tuple<_Elements...>& __t) noexcept
    b3ed:	55                   	push   %rbp
    b3ee:	48 89 e5             	mov    %rsp,%rbp
    b3f1:	48 83 ec 10          	sub    $0x10,%rsp
    b3f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    b3f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3fd:	48 89 c7             	mov    %rax,%rdi
    b400:	e8 ee 07 00 00       	call   bbf3 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    b405:	c9                   	leave
    b406:	c3                   	ret
    b407:	90                   	nop

000000000000b408 <_ZNSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    b408:	55                   	push   %rbp
    b409:	48 89 e5             	mov    %rsp,%rbp
    b40c:	48 83 ec 10          	sub    $0x10,%rsp
    b410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b418:	48 89 c7             	mov    %rax,%rdi
    b41b:	e8 ed 07 00 00       	call   bc0d <_ZSt3getILm1EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    b420:	c9                   	leave
    b421:	c3                   	ret

000000000000b422 <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    b422:	55                   	push   %rbp
    b423:	48 89 e5             	mov    %rsp,%rbp
    b426:	48 83 ec 10          	sub    $0x10,%rsp
    b42a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    b42e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b432:	48 89 c7             	mov    %rax,%rdi
    b435:	e8 ed 07 00 00       	call   bc27 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    b43a:	c9                   	leave
    b43b:	c3                   	ret

000000000000b43c <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
    b43c:	55                   	push   %rbp
    b43d:	48 89 e5             	mov    %rsp,%rbp
    b440:	48 83 ec 10          	sub    $0x10,%rsp
    b444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44c:	48 89 c7             	mov    %rax,%rdi
    b44f:	e8 ed 07 00 00       	call   bc41 <_ZSt3getILm1EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    b454:	c9                   	leave
    b455:	c3                   	ret

000000000000b456 <_ZNKSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    b456:	55                   	push   %rbp
    b457:	48 89 e5             	mov    %rsp,%rbp
    b45a:	48 83 ec 10          	sub    $0x10,%rsp
    b45e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b466:	48 89 c7             	mov    %rax,%rdi
    b469:	e8 ed 07 00 00       	call   bc5b <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
    b46e:	48 8b 00             	mov    (%rax),%rax
    b471:	c9                   	leave
    b472:	c3                   	ret

000000000000b473 <_ZSt3getILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    b473:	55                   	push   %rbp
    b474:	48 89 e5             	mov    %rsp,%rbp
    b477:	48 83 ec 10          	sub    $0x10,%rsp
    b47b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    b47f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b483:	48 89 c7             	mov    %rax,%rdi
    b486:	e8 ea 07 00 00       	call   bc75 <_ZSt12__get_helperILm0EPN2vk4raii16DeviceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
    b48b:	c9                   	leave
    b48c:	c3                   	ret
    b48d:	90                   	nop

000000000000b48e <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    b48e:	55                   	push   %rbp
    b48f:	48 89 e5             	mov    %rsp,%rbp
    b492:	48 83 ec 10          	sub    $0x10,%rsp
    b496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b49e:	48 89 c7             	mov    %rax,%rdi
    b4a1:	e8 e9 07 00 00       	call   bc8f <_ZSt3getILm1EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
    b4a6:	c9                   	leave
    b4a7:	c3                   	ret

000000000000b4a8 <_ZNKSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    b4a8:	55                   	push   %rbp
    b4a9:	48 89 e5             	mov    %rsp,%rbp
    b4ac:	48 83 ec 10          	sub    $0x10,%rsp
    b4b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4b8:	48 89 c7             	mov    %rax,%rdi
    b4bb:	e8 e9 07 00 00       	call   bca9 <_ZSt3getILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
    b4c0:	48 8b 00             	mov    (%rax),%rax
    b4c3:	c9                   	leave
    b4c4:	c3                   	ret

000000000000b4c5 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b4c5:	55                   	push   %rbp
    b4c6:	48 89 e5             	mov    %rsp,%rbp
    b4c9:	48 83 ec 40          	sub    $0x40,%rsp
    b4cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b4d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b4d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b4d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b4dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b4e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b4e5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b4e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b4ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      [[__gnu__::__always_inline__]]
      constexpr void
      deallocate(_Tp* __p, size_t __n)
      {
	if (std::__is_constant_evaluated())
    b4f1:	e8 a8 ac ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    b4f6:	84 c0                	test   %al,%al
    b4f8:	74 0e                	je     b508 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE10deallocateERS3_PS2_m+0x43>
	  {
	    ::operator delete(__p);
    b4fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b4fe:	48 89 c7             	mov    %rax,%rdi
    b501:	e8 ea 9c ff ff       	call   51f0 <_ZdlPv@plt>
	    return;
    b506:	eb 18                	jmp    b520 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE10deallocateERS3_PS2_m+0x5b>
	  }
	__allocator_base<_Tp>::deallocate(__p, __n);
    b508:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b50c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b514:	48 89 ce             	mov    %rcx,%rsi
    b517:	48 89 c7             	mov    %rax,%rdi
    b51a:	e8 ef 09 00 00       	call   bf0e <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEE10deallocateEPS2_m>
      { __a.deallocate(__p, __n); }
    b51f:	90                   	nop
    b520:	90                   	nop
    b521:	c9                   	leave
    b522:	c3                   	ret

000000000000b523 <_ZSt8_DestroyIPN2vk4raii13CommandBufferEEvT_S4_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b523:	55                   	push   %rbp
    b524:	48 89 e5             	mov    %rsp,%rbp
    b527:	48 83 ec 10          	sub    $0x10,%rsp
    b52b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b52f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      // A deleted destructor is trivial, this ensures we reject such types:
      static_assert(is_destructible<_Value_type>::value,
		    "value type is destructible");
#endif
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
    b533:	e8 66 ac ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    b538:	84 c0                	test   %al,%al
    b53a:	74 15                	je     b551 <_ZSt8_DestroyIPN2vk4raii13CommandBufferEEvT_S4_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
    b53c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b544:	48 89 d6             	mov    %rdx,%rsi
    b547:	48 89 c7             	mov    %rax,%rdi
    b54a:	e8 74 07 00 00       	call   bcc3 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii13CommandBufferEEEvT_S6_>
    b54f:	eb 13                	jmp    b564 <_ZSt8_DestroyIPN2vk4raii13CommandBufferEEvT_S4_+0x41>
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    b551:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b559:	48 89 d6             	mov    %rdx,%rsi
    b55c:	48 89 c7             	mov    %rax,%rdi
    b55f:	e8 5f 07 00 00       	call   bcc3 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii13CommandBufferEEEvT_S6_>
    }
    b564:	c9                   	leave
    b565:	c3                   	ret

000000000000b566 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    b566:	55                   	push   %rbp
    b567:	48 89 e5             	mov    %rsp,%rbp
    b56a:	48 83 ec 10          	sub    $0x10,%rsp
    b56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
    b572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b576:	48 89 c7             	mov    %rax,%rdi
    b579:	e8 5a fc ff ff       	call   b1d8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    b57e:	48 89 c7             	mov    %rax,%rdi
    b581:	e8 91 07 00 00       	call   bd17 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    b586:	48 83 e8 01          	sub    $0x1,%rax
    b58a:	48 d1 e8             	shr    %rax
    b58d:	c9                   	leave
    b58e:	c3                   	ret

000000000000b58f <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    b58f:	55                   	push   %rbp
    b590:	48 89 e5             	mov    %rsp,%rbp
    b593:	48 83 ec 20          	sub    $0x20,%rsp
    b597:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b59b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b59f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b5a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b5ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
    b5af:	e8 ea ab ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    b5b4:	84 c0                	test   %al,%al
    b5b6:	74 2a                	je     b5e2 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x53>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
    b5b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5bc:	ba 00 00 00 00       	mov    $0x0,%edx
    b5c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b5c5:	48 89 d0             	mov    %rdx,%rax
    b5c8:	83 e0 01             	and    $0x1,%eax
    b5cb:	84 c0                	test   %al,%al
    b5cd:	74 05                	je     b5d4 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x45>
	      std::__throw_bad_array_new_length();
    b5cf:	e8 ac 9b ff ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
    b5d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5d8:	48 89 c7             	mov    %rax,%rdi
    b5db:	e8 40 9c ff ff       	call   5220 <_Znwm@plt>
    b5e0:	eb 19                	jmp    b5fb <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x6c>
	return __allocator_base<_Tp>::allocate(__n, 0);
    b5e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ea:	ba 00 00 00 00       	mov    $0x0,%edx
    b5ef:	48 89 ce             	mov    %rcx,%rsi
    b5f2:	48 89 c7             	mov    %rax,%rdi
    b5f5:	e8 6e 09 00 00       	call   bf68 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    b5fa:	90                   	nop
      { return __a.allocate(__n); }
    b5fb:	c9                   	leave
    b5fc:	c3                   	ret

000000000000b5fd <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b5fd:	55                   	push   %rbp
    b5fe:	48 89 e5             	mov    %rsp,%rbp
    b601:	48 83 ec 40          	sub    $0x40,%rsp
    b605:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b609:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b60d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b611:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b615:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b619:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b61d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b621:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b625:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
    b629:	e8 70 ab ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    b62e:	84 c0                	test   %al,%al
    b630:	74 0e                	je     b640 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x43>
	    ::operator delete(__p);
    b632:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b636:	48 89 c7             	mov    %rax,%rdi
    b639:	e8 b2 9b ff ff       	call   51f0 <_ZdlPv@plt>
	    return;
    b63e:	eb 18                	jmp    b658 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
    b640:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b644:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b64c:	48 89 ce             	mov    %rcx,%rsi
    b64f:	48 89 c7             	mov    %rax,%rdi
    b652:	e8 59 09 00 00       	call   bfb0 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
      { __a.deallocate(__p, __n); }
    b657:	90                   	nop
    b658:	90                   	nop
    b659:	c9                   	leave
    b65a:	c3                   	ret

000000000000b65b <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>:
      pointer_to(element_type& __r) noexcept
    b65b:	55                   	push   %rbp
    b65c:	48 89 e5             	mov    %rsp,%rbp
    b65f:	48 83 ec 10          	sub    $0x10,%rsp
    b663:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    b667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b66b:	48 89 c7             	mov    %rax,%rdi
    b66e:	e8 b5 06 00 00       	call   bd28 <_ZSt9addressofIKcEPT_RS1_>
    b673:	c9                   	leave
    b674:	c3                   	ret

000000000000b675 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    b675:	55                   	push   %rbp
    b676:	48 89 e5             	mov    %rsp,%rbp
    b679:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    b67d:	90                   	nop
    b67e:	5d                   	pop    %rbp
    b67f:	c3                   	ret

000000000000b680 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    b680:	55                   	push   %rbp
    b681:	48 89 e5             	mov    %rsp,%rbp
    b684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b688:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    b68c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b690:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    b694:	5d                   	pop    %rbp
    b695:	c3                   	ret

000000000000b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>:
      _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
    b696:	55                   	push   %rbp
    b697:	48 89 e5             	mov    %rsp,%rbp
    b69a:	48 83 ec 20          	sub    $0x20,%rsp
    b69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    b6aa:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    b6af:	75 15                	jne    b6c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    b6b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b6b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6b9:	48 89 d6             	mov    %rdx,%rsi
    b6bc:	48 89 c7             	mov    %rax,%rdi
    b6bf:	e8 02 ab ff ff       	call   61c6 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    b6c4:	eb 17                	jmp    b6dd <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x47>
	  traits_type::copy(__d, __s, __n);
    b6c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b6ca:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b6ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6d2:	48 89 ce             	mov    %rcx,%rsi
    b6d5:	48 89 c7             	mov    %rax,%rdi
    b6d8:	e8 b6 ab ff ff       	call   6293 <_ZNSt11char_traitsIcE4copyEPcPKcm>
      }
    b6dd:	90                   	nop
    b6de:	c9                   	leave
    b6df:	c3                   	ret

000000000000b6e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>:
    basic_string<_CharT, _Traits, _Alloc>::
    b6e0:	55                   	push   %rbp
    b6e1:	48 89 e5             	mov    %rsp,%rbp
    b6e4:	48 83 ec 50          	sub    $0x50,%rsp
    b6e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b6ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b6f0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    b6f4:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    b6f8:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      const size_type __how_much = length() - __pos - __len1;
    b6fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b700:	48 89 c7             	mov    %rax,%rdi
    b703:	e8 20 ed ff ff       	call   a428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b708:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    b70c:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    b710:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      size_type __new_capacity = length() + __len2 - __len1;
    b714:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b718:	48 89 c7             	mov    %rax,%rdi
    b71b:	e8 08 ed ff ff       	call   a428 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    b720:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b724:	48 01 d0             	add    %rdx,%rax
    b727:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    b72b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __r = _M_create(__new_capacity, capacity());
    b72f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b733:	48 89 c7             	mov    %rax,%rdi
    b736:	e8 3d f5 ff ff       	call   ac78 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    b73b:	48 89 c2             	mov    %rax,%rdx
    b73e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    b742:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b746:	48 89 ce             	mov    %rcx,%rsi
    b749:	48 89 c7             	mov    %rax,%rdi
    b74c:	e8 ed f8 ff ff       	call   b03e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b751:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      if (__pos)
    b755:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    b75a:	74 22                	je     b77e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x9e>
	this->_S_copy(__r, _M_data(), __pos);
    b75c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b760:	48 89 c7             	mov    %rax,%rdi
    b763:	e8 30 f2 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b768:	48 89 c1             	mov    %rax,%rcx
    b76b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b76f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b773:	48 89 ce             	mov    %rcx,%rsi
    b776:	48 89 c7             	mov    %rax,%rdi
    b779:	e8 18 ff ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__s && __len2)
    b77e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    b783:	74 26                	je     b7ab <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
    b785:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    b78a:	74 1f                	je     b7ab <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
	this->_S_copy(__r + __pos, __s, __len2);
    b78c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b790:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b794:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b798:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    b79c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b7a0:	48 89 c6             	mov    %rax,%rsi
    b7a3:	48 89 cf             	mov    %rcx,%rdi
    b7a6:	e8 eb fe ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__how_much)
    b7ab:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b7b0:	74 3d                	je     b7ef <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x10f>
		      _M_data() + __pos + __len1, __how_much);
    b7b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b7b6:	48 89 c7             	mov    %rax,%rdi
    b7b9:	e8 da f1 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b7be:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b7c2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b7c6:	48 01 ca             	add    %rcx,%rdx
    b7c9:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
	this->_S_copy(__r + __pos + __len2,
    b7cd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b7d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b7d5:	48 01 c2             	add    %rax,%rdx
    b7d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7dc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b7e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7e4:	48 89 c2             	mov    %rax,%rdx
    b7e7:	48 89 cf             	mov    %rcx,%rdi
    b7ea:	e8 a7 fe ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      _M_dispose();
    b7ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b7f3:	48 89 c7             	mov    %rax,%rdi
    b7f6:	e8 e5 f1 ff ff       	call   a9e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
      _M_data(__r);
    b7fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b7ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b803:	48 89 d6             	mov    %rdx,%rsi
    b806:	48 89 c7             	mov    %rax,%rdi
    b809:	e8 4e f2 ff ff       	call   aa5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
      _M_capacity(__new_capacity);
    b80e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b812:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b816:	48 89 d6             	mov    %rdx,%rsi
    b819:	48 89 c7             	mov    %rax,%rdi
    b81c:	e8 55 f2 ff ff       	call   aa76 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    b821:	90                   	nop
    b822:	c9                   	leave
    b823:	c3                   	ret

000000000000b824 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    b824:	55                   	push   %rbp
    b825:	48 89 e5             	mov    %rsp,%rbp
    b828:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    b82c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    b830:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    b834:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    b838:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    b83c:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
	       const size_type __len2)
    {
      _M_check_length(__len1, __len2, "basic_string::_M_replace");
    b840:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    b844:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    b848:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b84c:	48 8d 0d 2a e6 01 00 	lea    0x1e62a(%rip),%rcx        # 29e7d <_ZNSt8__detailL19__atomic_spin_countE+0x419>
    b853:	48 89 c7             	mov    %rax,%rdi
    b856:	e8 8b f9 ff ff       	call   b1e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>

      const size_type __old_size = this->size();
    b85b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b85f:	48 89 c7             	mov    %rax,%rdi
    b862:	e8 8f aa ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    b867:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      const size_type __new_size = __old_size + __len2 - __len1;
    b86b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b86f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b873:	48 01 d0             	add    %rdx,%rax
    b876:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    b87a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

      if (__new_size <= this->capacity())
    b87e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b882:	48 89 c7             	mov    %rax,%rdi
    b885:	e8 ee f3 ff ff       	call   ac78 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    b88a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b88e:	0f 93 c0             	setae  %al
    b891:	84 c0                	test   %al,%al
    b893:	0f 84 fa 02 00 00    	je     bb93 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x36f>
	{
	  pointer __p = this->_M_data() + __pos;
    b899:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b89d:	48 89 c7             	mov    %rax,%rdi
    b8a0:	e8 f3 f0 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b8a5:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    b8a9:	48 01 d0             	add    %rdx,%rax
    b8ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

	  const size_type __how_much = __old_size - __pos - __len1;
    b8b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8b4:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
    b8b8:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    b8bc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
#if __cpp_lib_is_constant_evaluated
	  if (std::is_constant_evaluated())
    b8c0:	e8 e4 a8 ff ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
    b8c5:	84 c0                	test   %al,%al
    b8c7:	0f 84 09 01 00 00    	je     b9d6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x1b2>
	    {
	      auto __newp = _Alloc_traits::allocate(_M_get_allocator(),
    b8cd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b8d1:	48 89 c7             	mov    %rax,%rdi
    b8d4:	e8 41 f1 ff ff       	call   aa1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    b8d9:	48 89 c2             	mov    %rax,%rdx
    b8dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8e0:	48 89 c6             	mov    %rax,%rsi
    b8e3:	48 89 d7             	mov    %rdx,%rdi
    b8e6:	e8 a4 fc ff ff       	call   b58f <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    b8eb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
						    __new_size);
	      _S_copy(__newp, this->_M_data(), __pos);
    b8ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b8f3:	48 89 c7             	mov    %rax,%rdi
    b8f6:	e8 9d f0 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b8fb:	48 89 c1             	mov    %rax,%rcx
    b8fe:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    b902:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b906:	48 89 ce             	mov    %rcx,%rsi
    b909:	48 89 c7             	mov    %rax,%rdi
    b90c:	e8 85 fd ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos, __s, __len2);
    b911:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b915:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b919:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b91d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    b921:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b925:	48 89 c6             	mov    %rax,%rsi
    b928:	48 89 cf             	mov    %rcx,%rdi
    b92b:	e8 66 fd ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos + __len2, __p + __len1, __how_much);
    b930:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b934:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b938:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    b93c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    b940:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b944:	48 01 c2             	add    %rax,%rdx
    b947:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b94b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b94f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b953:	48 89 c2             	mov    %rax,%rdx
    b956:	48 89 cf             	mov    %rcx,%rdi
    b959:	e8 38 fd ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(this->_M_data(), __newp, __new_size);
    b95e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b962:	48 89 c7             	mov    %rax,%rdi
    b965:	e8 2e f0 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    b96a:	48 89 c1             	mov    %rax,%rcx
    b96d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b971:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b975:	48 89 c6             	mov    %rax,%rsi
    b978:	48 89 cf             	mov    %rcx,%rdi
    b97b:	e8 16 fd ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      this->_M_get_allocator().deallocate(__newp, __new_size);
    b980:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b984:	48 89 c7             	mov    %rax,%rdi
    b987:	e8 8e f0 ff ff       	call   aa1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    b98c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    b990:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b994:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    b998:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b99c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	if (std::__is_constant_evaluated())
    b9a0:	e8 f9 a7 ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    b9a5:	84 c0                	test   %al,%al
    b9a7:	74 11                	je     b9ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x196>
	    ::operator delete(__p);
    b9a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b9ad:	48 89 c7             	mov    %rax,%rdi
    b9b0:	e8 3b 98 ff ff       	call   51f0 <_ZdlPv@plt>
	    return;
    b9b5:	e9 f8 01 00 00       	jmp    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	__allocator_base<_Tp>::deallocate(__p, __n);
    b9ba:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b9be:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    b9c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b9c6:	48 89 ce             	mov    %rcx,%rsi
    b9c9:	48 89 c7             	mov    %rax,%rdi
    b9cc:	e8 df 05 00 00       	call   bfb0 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    b9d1:	e9 dc 01 00 00       	jmp    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
#endif
	  if (_M_disjunct(__s))
    b9d6:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    b9da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b9de:	48 89 d6             	mov    %rdx,%rsi
    b9e1:	48 89 c7             	mov    %rax,%rdi
    b9e4:	e8 59 03 00 00       	call   bd42 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
    b9e9:	84 c0                	test   %al,%al
    b9eb:	74 5f                	je     ba4c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x228>
	    {
	      if (__how_much && __len1 != __len2)
    b9ed:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b9f2:	74 31                	je     ba25 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
    b9f4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b9f8:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    b9fc:	74 27                	je     ba25 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    b9fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba02:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ba06:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    ba0a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba0e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ba12:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ba16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ba1a:	48 89 c2             	mov    %rax,%rdx
    ba1d:	48 89 cf             	mov    %rcx,%rdi
    ba20:	e8 9c 03 00 00       	call   bdc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2)
    ba25:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    ba2a:	0f 84 82 01 00 00    	je     bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		this->_S_copy(__p, __s, __len2);
    ba30:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ba34:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    ba38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba3c:	48 89 ce             	mov    %rcx,%rsi
    ba3f:	48 89 c7             	mov    %rax,%rdi
    ba42:	e8 4f fc ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    ba47:	e9 66 01 00 00       	jmp    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
	    {
	      // Work in-place.
	      if (__len2 && __len2 <= __len1)
    ba4c:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    ba51:	74 21                	je     ba74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
    ba53:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ba57:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    ba5b:	72 17                	jb     ba74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
		this->_S_move(__p, __s, __len2);
    ba5d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ba61:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    ba65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ba69:	48 89 ce             	mov    %rcx,%rsi
    ba6c:	48 89 c7             	mov    %rax,%rdi
    ba6f:	e8 4d 03 00 00       	call   bdc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__how_much && __len1 != __len2)
    ba74:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ba79:	74 31                	je     baac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
    ba7b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ba7f:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    ba83:	74 27                	je     baac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    ba85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba89:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ba8d:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    ba91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba95:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ba99:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ba9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    baa1:	48 89 c2             	mov    %rax,%rdx
    baa4:	48 89 cf             	mov    %rcx,%rdi
    baa7:	e8 15 03 00 00       	call   bdc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2 > __len1)
    baac:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bab0:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    bab4:	0f 83 f8 00 00 00    	jae    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		{
		  if (__s + __len2 <= __p + __len1)
    baba:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    babe:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bac2:	48 01 d0             	add    %rdx,%rax
    bac5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    bac9:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    bacd:	48 01 ca             	add    %rcx,%rdx
    bad0:	48 39 c2             	cmp    %rax,%rdx
    bad3:	72 1c                	jb     baf1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x2cd>
		    this->_S_move(__p, __s, __len2);
    bad5:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    bad9:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    badd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bae1:	48 89 ce             	mov    %rcx,%rsi
    bae4:	48 89 c7             	mov    %rax,%rdi
    bae7:	e8 d5 02 00 00       	call   bdc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
    baec:	e9 c1 00 00 00       	jmp    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		  else if (__s >= __p + __len1)
    baf1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    baf5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    baf9:	48 01 d0             	add    %rdx,%rax
    bafc:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    bb00:	72 3b                	jb     bb3d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x319>
		    {
		      // Hint to middle end that __p and __s overlap
		      // (PR 98465).
		      const size_type __poff = (__s - __p) + (__len2 - __len1);
    bb02:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    bb06:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    bb0a:	48 89 c2             	mov    %rax,%rdx
    bb0d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bb11:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    bb15:	48 01 d0             	add    %rdx,%rax
    bb18:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
		      this->_S_copy(__p, __p + __poff, __len2);
    bb1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bb24:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bb28:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    bb2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb30:	48 89 ce             	mov    %rcx,%rsi
    bb33:	48 89 c7             	mov    %rax,%rdi
    bb36:	e8 5b fb ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    bb3b:	eb 75                	jmp    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		  else
		    {
		      const size_type __nleft = (__p + __len1) - __s;
    bb3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb41:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    bb45:	48 01 d0             	add    %rdx,%rax
    bb48:	48 2b 45 90          	sub    -0x70(%rbp),%rax
    bb4c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
		      this->_S_move(__p, __s, __nleft);
    bb50:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bb54:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    bb58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb5c:	48 89 ce             	mov    %rcx,%rsi
    bb5f:	48 89 c7             	mov    %rax,%rdi
    bb62:	e8 5a 02 00 00       	call   bdc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
		      this->_S_copy(__p + __nleft, __p + __len2,
    bb67:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bb6b:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    bb6f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    bb73:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    bb77:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    bb7b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    bb7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bb83:	48 01 d1             	add    %rdx,%rcx
    bb86:	48 89 c2             	mov    %rax,%rdx
    bb89:	48 89 cf             	mov    %rcx,%rdi
    bb8c:	e8 05 fb ff ff       	call   b696 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    bb91:	eb 1f                	jmp    bbb2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		}
	    }
	}
      else
	this->_M_mutate(__pos, __len1, __s, __len2);
    bb93:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    bb97:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    bb9b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    bb9f:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    bba3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bba7:	49 89 f8             	mov    %rdi,%r8
    bbaa:	48 89 c7             	mov    %rax,%rdi
    bbad:	e8 2e fb ff ff       	call   b6e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__new_size);
    bbb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbb6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bbba:	48 89 d6             	mov    %rdx,%rsi
    bbbd:	48 89 c7             	mov    %rax,%rdi
    bbc0:	e8 5f e9 ff ff       	call   a524 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    bbc5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    }
    bbc9:	c9                   	leave
    bbca:	c3                   	ret
    bbcb:	90                   	nop

000000000000bbcc <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
    bbcc:	55                   	push   %rbp
    bbcd:	48 89 e5             	mov    %rsp,%rbp
    bbd0:	48 83 ec 10          	sub    $0x10,%rsp
    bbd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    bbd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbdc:	48 89 c7             	mov    %rax,%rdi
    bbdf:	e8 28 02 00 00       	call   be0c <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEEC1Ev>
    bbe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe8:	48 89 c7             	mov    %rax,%rdi
    bbeb:	e8 38 02 00 00       	call   be28 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EEC1Ev>
    bbf0:	90                   	nop
    bbf1:	c9                   	leave
    bbf2:	c3                   	ret

000000000000bbf3 <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bbf3:	55                   	push   %rbp
    bbf4:	48 89 e5             	mov    %rsp,%rbp
    bbf7:	48 83 ec 10          	sub    $0x10,%rsp
    bbfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bbff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc03:	48 89 c7             	mov    %rax,%rdi
    bc06:	e8 33 02 00 00       	call   be3e <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    bc0b:	c9                   	leave
    bc0c:	c3                   	ret

000000000000bc0d <_ZSt3getILm1EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    bc0d:	55                   	push   %rbp
    bc0e:	48 89 e5             	mov    %rsp,%rbp
    bc11:	48 83 ec 10          	sub    $0x10,%rsp
    bc15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    bc19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc1d:	48 89 c7             	mov    %rax,%rdi
    bc20:	e8 33 02 00 00       	call   be58 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    bc25:	c9                   	leave
    bc26:	c3                   	ret

000000000000bc27 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bc27:	55                   	push   %rbp
    bc28:	48 89 e5             	mov    %rsp,%rbp
    bc2b:	48 83 ec 10          	sub    $0x10,%rsp
    bc2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bc33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc37:	48 89 c7             	mov    %rax,%rdi
    bc3a:	e8 33 02 00 00       	call   be72 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    bc3f:	c9                   	leave
    bc40:	c3                   	ret

000000000000bc41 <_ZSt3getILm1EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    bc41:	55                   	push   %rbp
    bc42:	48 89 e5             	mov    %rsp,%rbp
    bc45:	48 83 ec 10          	sub    $0x10,%rsp
    bc49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    bc4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc51:	48 89 c7             	mov    %rax,%rdi
    bc54:	e8 33 02 00 00       	call   be8c <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    bc59:	c9                   	leave
    bc5a:	c3                   	ret

000000000000bc5b <_ZSt3getILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:

  /// Return a const reference to the ith element of a const tuple.
  template<size_t __i, typename... _Elements>
    constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
    get(const tuple<_Elements...>& __t) noexcept
    bc5b:	55                   	push   %rbp
    bc5c:	48 89 e5             	mov    %rsp,%rbp
    bc5f:	48 83 ec 10          	sub    $0x10,%rsp
    bc63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    bc67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc6b:	48 89 c7             	mov    %rax,%rdi
    bc6e:	e8 33 02 00 00       	call   bea6 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
    bc73:	c9                   	leave
    bc74:	c3                   	ret

000000000000bc75 <_ZSt12__get_helperILm0EPN2vk4raii16DeviceDispatcherEJSt14default_deleteIS2_EEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bc75:	55                   	push   %rbp
    bc76:	48 89 e5             	mov    %rsp,%rbp
    bc79:	48 83 ec 10          	sub    $0x10,%rsp
    bc7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bc81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc85:	48 89 c7             	mov    %rax,%rdi
    bc88:	e8 33 02 00 00       	call   bec0 <_ZNSt11_Tuple_implILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>
    bc8d:	c9                   	leave
    bc8e:	c3                   	ret

000000000000bc8f <_ZSt3getILm1EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
    bc8f:	55                   	push   %rbp
    bc90:	48 89 e5             	mov    %rsp,%rbp
    bc93:	48 83 ec 10          	sub    $0x10,%rsp
    bc97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    bc9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9f:	48 89 c7             	mov    %rax,%rdi
    bca2:	e8 33 02 00 00       	call   beda <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii16DeviceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    bca7:	c9                   	leave
    bca8:	c3                   	ret

000000000000bca9 <_ZSt3getILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:
    get(const tuple<_Elements...>& __t) noexcept
    bca9:	55                   	push   %rbp
    bcaa:	48 89 e5             	mov    %rsp,%rbp
    bcad:	48 83 ec 10          	sub    $0x10,%rsp
    bcb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    bcb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcb9:	48 89 c7             	mov    %rax,%rdi
    bcbc:	e8 33 02 00 00       	call   bef4 <_ZSt12__get_helperILm0EPN2vk4raii16DeviceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
    bcc1:	c9                   	leave
    bcc2:	c3                   	ret

000000000000bcc3 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii13CommandBufferEEEvT_S6_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    bcc3:	55                   	push   %rbp
    bcc4:	48 89 e5             	mov    %rsp,%rbp
    bcc7:	48 83 ec 10          	sub    $0x10,%rsp
    bccb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bccf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    bcd3:	eb 19                	jmp    bcee <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii13CommandBufferEEEvT_S6_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    bcd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd9:	48 89 c7             	mov    %rax,%rdi
    bcdc:	e8 5d 02 00 00       	call   bf3e <_ZSt11__addressofIN2vk4raii13CommandBufferEEPT_RS3_>
    bce1:	48 89 c7             	mov    %rax,%rdi
    bce4:	e8 63 02 00 00       	call   bf4c <_ZSt8_DestroyIN2vk4raii13CommandBufferEEvPT_>
	  for (; __first != __last; ++__first)
    bce9:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    bcee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcf6:	75 dd                	jne    bcd5 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii13CommandBufferEEEvT_S6_+0x12>
	}
    bcf8:	90                   	nop
    bcf9:	90                   	nop
    bcfa:	c9                   	leave
    bcfb:	c3                   	ret

000000000000bcfc <_ZSt10destroy_atIN2vk4raii13CommandBufferEEvPT_>:
    destroy_at(_Tp* __location)
    bcfc:	55                   	push   %rbp
    bcfd:	48 89 e5             	mov    %rsp,%rbp
    bd00:	48 83 ec 10          	sub    $0x10,%rsp
    bd04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__location->~_Tp();
    bd08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd0c:	48 89 c7             	mov    %rax,%rdi
    bd0f:	e8 64 da ff ff       	call   9778 <_ZN2vk4raii13CommandBufferD1Ev>
    }
    bd14:	90                   	nop
    bd15:	c9                   	leave
    bd16:	c3                   	ret

000000000000bd17 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    bd17:	55                   	push   %rbp
    bd18:	48 89 e5             	mov    %rsp,%rbp
    bd1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
    bd1f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
      }
    bd26:	5d                   	pop    %rbp
    bd27:	c3                   	ret

000000000000bd28 <_ZSt9addressofIKcEPT_RS1_>:
    addressof(_Tp& __r) noexcept
    bd28:	55                   	push   %rbp
    bd29:	48 89 e5             	mov    %rsp,%rbp
    bd2c:	48 83 ec 10          	sub    $0x10,%rsp
    bd30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    bd34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd38:	48 89 c7             	mov    %rax,%rdi
    bd3b:	e8 99 02 00 00       	call   bfd9 <_ZSt11__addressofIKcEPT_RS1_>
    bd40:	c9                   	leave
    bd41:	c3                   	ret

000000000000bd42 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
      _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
    bd42:	55                   	push   %rbp
    bd43:	48 89 e5             	mov    %rsp,%rbp
    bd46:	53                   	push   %rbx
    bd47:	48 83 ec 28          	sub    $0x28,%rsp
    bd4b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bd4f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	return (less<const _CharT*>()(__s, _M_data())
    bd53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd57:	48 89 c7             	mov    %rax,%rdi
    bd5a:	e8 39 ec ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    bd5f:	48 89 c2             	mov    %rax,%rdx
    bd62:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    bd66:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    bd6a:	48 89 ce             	mov    %rcx,%rsi
    bd6d:	48 89 c7             	mov    %rax,%rdi
    bd70:	e8 73 02 00 00       	call   bfe8 <_ZNKSt4lessIPKcEclES1_S1_>
		|| less<const _CharT*>()(_M_data() + this->size(), __s));
    bd75:	84 c0                	test   %al,%al
    bd77:	75 36                	jne    bdaf <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x6d>
    bd79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd7d:	48 89 c7             	mov    %rax,%rdi
    bd80:	e8 13 ec ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    bd85:	48 89 c3             	mov    %rax,%rbx
    bd88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd8c:	48 89 c7             	mov    %rax,%rdi
    bd8f:	e8 62 a5 ff ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    bd94:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    bd98:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bd9c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bda0:	48 89 ce             	mov    %rcx,%rsi
    bda3:	48 89 c7             	mov    %rax,%rdi
    bda6:	e8 3d 02 00 00       	call   bfe8 <_ZNKSt4lessIPKcEclES1_S1_>
    bdab:	84 c0                	test   %al,%al
    bdad:	74 07                	je     bdb6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x74>
    bdaf:	b8 01 00 00 00       	mov    $0x1,%eax
    bdb4:	eb 05                	jmp    bdbb <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x79>
    bdb6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bdbb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bdbf:	c9                   	leave
    bdc0:	c3                   	ret

000000000000bdc1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>:
      _S_move(_CharT* __d, const _CharT* __s, size_type __n)
    bdc1:	55                   	push   %rbp
    bdc2:	48 89 e5             	mov    %rsp,%rbp
    bdc5:	48 83 ec 20          	sub    $0x20,%rsp
    bdc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdcd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdd1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    bdd5:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    bdda:	75 15                	jne    bdf1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    bddc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bde0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bde4:	48 89 d6             	mov    %rdx,%rsi
    bde7:	48 89 c7             	mov    %rax,%rdi
    bdea:	e8 d7 a3 ff ff       	call   61c6 <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    bdef:	eb 17                	jmp    be08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x47>
	  traits_type::move(__d, __s, __n);
    bdf1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bdf5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bdf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdfd:	48 89 ce             	mov    %rcx,%rsi
    be00:	48 89 c7             	mov    %rax,%rdi
    be03:	e8 2e a4 ff ff       	call   6236 <_ZNSt11char_traitsIcE4moveEPcPKcm>
      }
    be08:	90                   	nop
    be09:	c9                   	leave
    be0a:	c3                   	ret
    be0b:	90                   	nop

000000000000be0c <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEEC1Ev>:
      _Tuple_impl()
    be0c:	55                   	push   %rbp
    be0d:	48 89 e5             	mov    %rsp,%rbp
    be10:	48 83 ec 10          	sub    $0x10,%rsp
    be14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    be18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be1c:	48 89 c7             	mov    %rax,%rdi
    be1f:	e8 fe 01 00 00       	call   c022 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EEC1Ev>
    be24:	90                   	nop
    be25:	c9                   	leave
    be26:	c3                   	ret
    be27:	90                   	nop

000000000000be28 <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
    be28:	55                   	push   %rbp
    be29:	48 89 e5             	mov    %rsp,%rbp
    be2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    be30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be34:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    be3b:	90                   	nop
    be3c:	5d                   	pop    %rbp
    be3d:	c3                   	ret

000000000000be3e <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    be3e:	55                   	push   %rbp
    be3f:	48 89 e5             	mov    %rsp,%rbp
    be42:	48 83 ec 10          	sub    $0x10,%rsp
    be46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be4e:	48 89 c7             	mov    %rax,%rdi
    be51:	e8 d7 01 00 00       	call   c02d <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERS4_>
    be56:	c9                   	leave
    be57:	c3                   	ret

000000000000be58 <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    be58:	55                   	push   %rbp
    be59:	48 89 e5             	mov    %rsp,%rbp
    be5c:	48 83 ec 10          	sub    $0x10,%rsp
    be60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    be64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be68:	48 89 c7             	mov    %rax,%rdi
    be6b:	e8 cb 01 00 00       	call   c03b <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEE7_M_headERS5_>
    be70:	c9                   	leave
    be71:	c3                   	ret

000000000000be72 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    be72:	55                   	push   %rbp
    be73:	48 89 e5             	mov    %rsp,%rbp
    be76:	48 83 ec 10          	sub    $0x10,%rsp
    be7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be82:	48 89 c7             	mov    %rax,%rdi
    be85:	e8 cb 01 00 00       	call   c055 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERS4_>
    be8a:	c9                   	leave
    be8b:	c3                   	ret

000000000000be8c <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    be8c:	55                   	push   %rbp
    be8d:	48 89 e5             	mov    %rsp,%rbp
    be90:	48 83 ec 10          	sub    $0x10,%rsp
    be94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    be98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9c:	48 89 c7             	mov    %rax,%rdi
    be9f:	e8 bf 01 00 00       	call   c063 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEE7_M_headERS5_>
    bea4:	c9                   	leave
    bea5:	c3                   	ret

000000000000bea6 <_ZSt12__get_helperILm0EPN2vk4raii18InstanceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bea6:	55                   	push   %rbp
    bea7:	48 89 e5             	mov    %rsp,%rbp
    beaa:	48 83 ec 10          	sub    $0x10,%rsp
    beae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    beb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb6:	48 89 c7             	mov    %rax,%rdi
    beb9:	e8 bf 01 00 00       	call   c07d <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
    bebe:	c9                   	leave
    bebf:	c3                   	ret

000000000000bec0 <_ZNSt11_Tuple_implILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    bec0:	55                   	push   %rbp
    bec1:	48 89 e5             	mov    %rsp,%rbp
    bec4:	48 83 ec 10          	sub    $0x10,%rsp
    bec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    becc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed0:	48 89 c7             	mov    %rax,%rdi
    bed3:	e8 bf 01 00 00       	call   c097 <_ZNSt10_Head_baseILm0EPN2vk4raii16DeviceDispatcherELb0EE7_M_headERS4_>
    bed8:	c9                   	leave
    bed9:	c3                   	ret

000000000000beda <_ZSt12__get_helperILm1ESt14default_deleteIN2vk4raii16DeviceDispatcherEEJEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    beda:	55                   	push   %rbp
    bedb:	48 89 e5             	mov    %rsp,%rbp
    bede:	48 83 ec 10          	sub    $0x10,%rsp
    bee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beea:	48 89 c7             	mov    %rax,%rdi
    beed:	e8 b3 01 00 00       	call   c0a5 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii16DeviceDispatcherEEEE7_M_headERS5_>
    bef2:	c9                   	leave
    bef3:	c3                   	ret

000000000000bef4 <_ZSt12__get_helperILm0EPN2vk4raii16DeviceDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    bef4:	55                   	push   %rbp
    bef5:	48 89 e5             	mov    %rsp,%rbp
    bef8:	48 83 ec 10          	sub    $0x10,%rsp
    befc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    bf00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf04:	48 89 c7             	mov    %rax,%rdi
    bf07:	e8 b3 01 00 00       	call   c0bf <_ZNSt11_Tuple_implILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
    bf0c:	c9                   	leave
    bf0d:	c3                   	ret

000000000000bf0e <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEE10deallocateEPS2_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bf0e:	55                   	push   %rbp
    bf0f:	48 89 e5             	mov    %rsp,%rbp
    bf12:	48 83 ec 20          	sub    $0x20,%rsp
    bf16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bf22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf26:	48 c1 e0 05          	shl    $0x5,%rax
    bf2a:	48 89 c2             	mov    %rax,%rdx
    bf2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf31:	48 89 d6             	mov    %rdx,%rsi
    bf34:	48 89 c7             	mov    %rax,%rdi
    bf37:	e8 f4 92 ff ff       	call   5230 <_ZdlPvm@plt>
      }
    bf3c:	c9                   	leave
    bf3d:	c3                   	ret

000000000000bf3e <_ZSt11__addressofIN2vk4raii13CommandBufferEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bf3e:	55                   	push   %rbp
    bf3f:	48 89 e5             	mov    %rsp,%rbp
    bf42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bf46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4a:	5d                   	pop    %rbp
    bf4b:	c3                   	ret

000000000000bf4c <_ZSt8_DestroyIN2vk4raii13CommandBufferEEvPT_>:
    _Destroy(_Tp* __pointer)
    bf4c:	55                   	push   %rbp
    bf4d:	48 89 e5             	mov    %rsp,%rbp
    bf50:	48 83 ec 10          	sub    $0x10,%rsp
    bf54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
    bf58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf5c:	48 89 c7             	mov    %rax,%rdi
    bf5f:	e8 98 fd ff ff       	call   bcfc <_ZSt10destroy_atIN2vk4raii13CommandBufferEEvPT_>
    }
    bf64:	90                   	nop
    bf65:	c9                   	leave
    bf66:	c3                   	ret
    bf67:	90                   	nop

000000000000bf68 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bf68:	55                   	push   %rbp
    bf69:	48 89 e5             	mov    %rsp,%rbp
    bf6c:	48 83 ec 20          	sub    $0x20,%rsp
    bf70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bf7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf80:	48 89 c7             	mov    %rax,%rdi
    bf83:	e8 52 01 00 00       	call   c0da <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    bf88:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf8c:	0f 92 c0             	setb   %al
    bf8f:	0f b6 c0             	movzbl %al,%eax
    bf92:	48 85 c0             	test   %rax,%rax
    bf95:	0f 95 c0             	setne  %al
    bf98:	84 c0                	test   %al,%al
    bf9a:	74 05                	je     bfa1 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    bf9c:	e8 df 90 ff ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bfa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfa5:	48 89 c7             	mov    %rax,%rdi
    bfa8:	e8 73 92 ff ff       	call   5220 <_Znwm@plt>
    bfad:	90                   	nop
      }
    bfae:	c9                   	leave
    bfaf:	c3                   	ret

000000000000bfb0 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    bfb0:	55                   	push   %rbp
    bfb1:	48 89 e5             	mov    %rsp,%rbp
    bfb4:	48 83 ec 20          	sub    $0x20,%rsp
    bfb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    bfc4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfcc:	48 89 d6             	mov    %rdx,%rsi
    bfcf:	48 89 c7             	mov    %rax,%rdi
    bfd2:	e8 59 92 ff ff       	call   5230 <_ZdlPvm@plt>
      }
    bfd7:	c9                   	leave
    bfd8:	c3                   	ret

000000000000bfd9 <_ZSt11__addressofIKcEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bfd9:	55                   	push   %rbp
    bfda:	48 89 e5             	mov    %rsp,%rbp
    bfdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bfe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe5:	5d                   	pop    %rbp
    bfe6:	c3                   	ret
    bfe7:	90                   	nop

000000000000bfe8 <_ZNKSt4lessIPKcEclES1_S1_>:
  // Partial specialization of std::less for pointers.
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
    bfe8:	55                   	push   %rbp
    bfe9:	48 89 e5             	mov    %rsp,%rbp
    bfec:	48 83 ec 20          	sub    $0x20,%rsp
    bff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bff4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bff8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
    bffc:	e8 9d a1 ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
    c001:	84 c0                	test   %al,%al
    c003:	74 0d                	je     c012 <_ZNKSt4lessIPKcEclES1_S1_+0x2a>
	  return __x < __y;
    c005:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c009:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    c00d:	0f 92 c0             	setb   %al
    c010:	eb 0e                	jmp    c020 <_ZNKSt4lessIPKcEclES1_S1_+0x38>
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
    c012:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c016:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c01a:	48 39 c2             	cmp    %rax,%rdx
    c01d:	0f 92 c0             	setb   %al
      }
    c020:	c9                   	leave
    c021:	c3                   	ret

000000000000c022 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
    c022:	55                   	push   %rbp
    c023:	48 89 e5             	mov    %rsp,%rbp
    c026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    c02a:	90                   	nop
    c02b:	5d                   	pop    %rbp
    c02c:	c3                   	ret

000000000000c02d <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c02d:	55                   	push   %rbp
    c02e:	48 89 e5             	mov    %rsp,%rbp
    c031:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c039:	5d                   	pop    %rbp
    c03a:	c3                   	ret

000000000000c03b <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii17ContextDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c03b:	55                   	push   %rbp
    c03c:	48 89 e5             	mov    %rsp,%rbp
    c03f:	48 83 ec 10          	sub    $0x10,%rsp
    c043:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c04b:	48 89 c7             	mov    %rax,%rdi
    c04e:	e8 9b 00 00 00       	call   c0ee <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EE7_M_headERS5_>
    c053:	c9                   	leave
    c054:	c3                   	ret

000000000000c055 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c055:	55                   	push   %rbp
    c056:	48 89 e5             	mov    %rsp,%rbp
    c059:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c05d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c061:	5d                   	pop    %rbp
    c062:	c3                   	ret

000000000000c063 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c063:	55                   	push   %rbp
    c064:	48 89 e5             	mov    %rsp,%rbp
    c067:	48 83 ec 10          	sub    $0x10,%rsp
    c06b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c06f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c073:	48 89 c7             	mov    %rax,%rdi
    c076:	e8 81 00 00 00       	call   c0fc <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EE7_M_headERS5_>
    c07b:	c9                   	leave
    c07c:	c3                   	ret

000000000000c07d <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c07d:	55                   	push   %rbp
    c07e:	48 89 e5             	mov    %rsp,%rbp
    c081:	48 83 ec 10          	sub    $0x10,%rsp
    c085:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c08d:	48 89 c7             	mov    %rax,%rdi
    c090:	e8 75 00 00 00       	call   c10a <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERKS4_>
    c095:	c9                   	leave
    c096:	c3                   	ret

000000000000c097 <_ZNSt10_Head_baseILm0EPN2vk4raii16DeviceDispatcherELb0EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c097:	55                   	push   %rbp
    c098:	48 89 e5             	mov    %rsp,%rbp
    c09b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c09f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a3:	5d                   	pop    %rbp
    c0a4:	c3                   	ret

000000000000c0a5 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii16DeviceDispatcherEEEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c0a5:	55                   	push   %rbp
    c0a6:	48 89 e5             	mov    %rsp,%rbp
    c0a9:	48 83 ec 10          	sub    $0x10,%rsp
    c0ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0b5:	48 89 c7             	mov    %rax,%rdi
    c0b8:	e8 5b 00 00 00       	call   c118 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii16DeviceDispatcherEELb1EE7_M_headERS5_>
    c0bd:	c9                   	leave
    c0be:	c3                   	ret

000000000000c0bf <_ZNSt11_Tuple_implILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    c0bf:	55                   	push   %rbp
    c0c0:	48 89 e5             	mov    %rsp,%rbp
    c0c3:	48 83 ec 10          	sub    $0x10,%rsp
    c0c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0cf:	48 89 c7             	mov    %rax,%rdi
    c0d2:	e8 4f 00 00 00       	call   c126 <_ZNSt10_Head_baseILm0EPN2vk4raii16DeviceDispatcherELb0EE7_M_headERKS4_>
    c0d7:	c9                   	leave
    c0d8:	c3                   	ret
    c0d9:	90                   	nop

000000000000c0da <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c0da:	55                   	push   %rbp
    c0db:	48 89 e5             	mov    %rsp,%rbp
    c0de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c0e2:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    c0e9:	ff ff 7f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    c0ec:	5d                   	pop    %rbp
    c0ed:	c3                   	ret

000000000000c0ee <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii17ContextDispatcherEELb1EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c0ee:	55                   	push   %rbp
    c0ef:	48 89 e5             	mov    %rsp,%rbp
    c0f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fa:	5d                   	pop    %rbp
    c0fb:	c3                   	ret

000000000000c0fc <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EE7_M_headERS5_>:
    c0fc:	55                   	push   %rbp
    c0fd:	48 89 e5             	mov    %rsp,%rbp
    c100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c108:	5d                   	pop    %rbp
    c109:	c3                   	ret

000000000000c10a <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    c10a:	55                   	push   %rbp
    c10b:	48 89 e5             	mov    %rsp,%rbp
    c10e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c116:	5d                   	pop    %rbp
    c117:	c3                   	ret

000000000000c118 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii16DeviceDispatcherEELb1EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    c118:	55                   	push   %rbp
    c119:	48 89 e5             	mov    %rsp,%rbp
    c11c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c124:	5d                   	pop    %rbp
    c125:	c3                   	ret

000000000000c126 <_ZNSt10_Head_baseILm0EPN2vk4raii16DeviceDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    c126:	55                   	push   %rbp
    c127:	48 89 e5             	mov    %rsp,%rbp
    c12a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c132:	5d                   	pop    %rbp
    c133:	c3                   	ret

000000000000c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>:
  class CompressionExhaustedEXTError : public SystemError
    c134:	55                   	push   %rbp
    c135:	48 89 e5             	mov    %rsp,%rbp
    c138:	48 83 ec 10          	sub    $0x10,%rsp
    c13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c140:	48 8d 15 a9 4f 03 00 	lea    0x34fa9(%rip),%rdx        # 410f0 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    c147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14b:	48 89 10             	mov    %rdx,(%rax)
    c14e:	48 8d 15 c3 4f 03 00 	lea    0x34fc3(%rip),%rdx        # 41118 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    c155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c159:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c15d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c161:	48 89 c7             	mov    %rax,%rdi
    c164:	e8 dd b7 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c169:	90                   	nop
    c16a:	c9                   	leave
    c16b:	c3                   	ret

000000000000c16c <_ZThn8_N2vk28CompressionExhaustedEXTErrorD1Ev>:
    c16c:	48 83 ef 08          	sub    $0x8,%rdi
    c170:	eb c2                	jmp    c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>

000000000000c172 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>:
    c172:	55                   	push   %rbp
    c173:	48 89 e5             	mov    %rsp,%rbp
    c176:	48 83 ec 10          	sub    $0x10,%rsp
    c17a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c17e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c182:	48 89 c7             	mov    %rax,%rdi
    c185:	e8 aa ff ff ff       	call   c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    c18a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c18e:	be 28 00 00 00       	mov    $0x28,%esi
    c193:	48 89 c7             	mov    %rax,%rdi
    c196:	e8 95 90 ff ff       	call   5230 <_ZdlPvm@plt>
    c19b:	c9                   	leave
    c19c:	c3                   	ret

000000000000c19d <_ZThn8_N2vk28CompressionExhaustedEXTErrorD0Ev>:
    c19d:	48 83 ef 08          	sub    $0x8,%rdi
    c1a1:	eb cf                	jmp    c172 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>
    c1a3:	90                   	nop

000000000000c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>:
  class NotPermittedKHRError : public SystemError
    c1a4:	55                   	push   %rbp
    c1a5:	48 89 e5             	mov    %rsp,%rbp
    c1a8:	48 83 ec 10          	sub    $0x10,%rsp
    c1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1b0:	48 8d 15 89 4f 03 00 	lea    0x34f89(%rip),%rdx        # 41140 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    c1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1bb:	48 89 10             	mov    %rdx,(%rax)
    c1be:	48 8d 15 a3 4f 03 00 	lea    0x34fa3(%rip),%rdx        # 41168 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    c1c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c1cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1d1:	48 89 c7             	mov    %rax,%rdi
    c1d4:	e8 6d b7 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c1d9:	90                   	nop
    c1da:	c9                   	leave
    c1db:	c3                   	ret

000000000000c1dc <_ZThn8_N2vk20NotPermittedKHRErrorD1Ev>:
    c1dc:	48 83 ef 08          	sub    $0x8,%rdi
    c1e0:	eb c2                	jmp    c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>

000000000000c1e2 <_ZN2vk20NotPermittedKHRErrorD0Ev>:
    c1e2:	55                   	push   %rbp
    c1e3:	48 89 e5             	mov    %rsp,%rbp
    c1e6:	48 83 ec 10          	sub    $0x10,%rsp
    c1ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1f2:	48 89 c7             	mov    %rax,%rdi
    c1f5:	e8 aa ff ff ff       	call   c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    c1fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1fe:	be 28 00 00 00       	mov    $0x28,%esi
    c203:	48 89 c7             	mov    %rax,%rdi
    c206:	e8 25 90 ff ff       	call   5230 <_ZdlPvm@plt>
    c20b:	c9                   	leave
    c20c:	c3                   	ret

000000000000c20d <_ZThn8_N2vk20NotPermittedKHRErrorD0Ev>:
    c20d:	48 83 ef 08          	sub    $0x8,%rdi
    c211:	eb cf                	jmp    c1e2 <_ZN2vk20NotPermittedKHRErrorD0Ev>
    c213:	90                   	nop

000000000000c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
  class InvalidDrmFormatModifierPlaneLayoutEXTError : public SystemError
    c214:	55                   	push   %rbp
    c215:	48 89 e5             	mov    %rsp,%rbp
    c218:	48 83 ec 10          	sub    $0x10,%rsp
    c21c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c220:	48 8d 15 69 4f 03 00 	lea    0x34f69(%rip),%rdx        # 41190 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    c227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22b:	48 89 10             	mov    %rdx,(%rax)
    c22e:	48 8d 15 83 4f 03 00 	lea    0x34f83(%rip),%rdx        # 411b8 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    c235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c239:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c23d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c241:	48 89 c7             	mov    %rax,%rdi
    c244:	e8 fd b6 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c249:	90                   	nop
    c24a:	c9                   	leave
    c24b:	c3                   	ret

000000000000c24c <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
    c24c:	48 83 ef 08          	sub    $0x8,%rdi
    c250:	eb c2                	jmp    c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>

000000000000c252 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    c252:	55                   	push   %rbp
    c253:	48 89 e5             	mov    %rsp,%rbp
    c256:	48 83 ec 10          	sub    $0x10,%rsp
    c25a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c25e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c262:	48 89 c7             	mov    %rax,%rdi
    c265:	e8 aa ff ff ff       	call   c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    c26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c26e:	be 28 00 00 00       	mov    $0x28,%esi
    c273:	48 89 c7             	mov    %rax,%rdi
    c276:	e8 b5 8f ff ff       	call   5230 <_ZdlPvm@plt>
    c27b:	c9                   	leave
    c27c:	c3                   	ret

000000000000c27d <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    c27d:	48 83 ef 08          	sub    $0x8,%rdi
    c281:	eb cf                	jmp    c252 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>
    c283:	90                   	nop

000000000000c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>:
  class InvalidShaderNVError : public SystemError
    c284:	55                   	push   %rbp
    c285:	48 89 e5             	mov    %rsp,%rbp
    c288:	48 83 ec 10          	sub    $0x10,%rsp
    c28c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c290:	48 8d 15 49 4f 03 00 	lea    0x34f49(%rip),%rdx        # 411e0 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    c297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c29b:	48 89 10             	mov    %rdx,(%rax)
    c29e:	48 8d 15 63 4f 03 00 	lea    0x34f63(%rip),%rdx        # 41208 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    c2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c2ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2b1:	48 89 c7             	mov    %rax,%rdi
    c2b4:	e8 8d b6 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c2b9:	90                   	nop
    c2ba:	c9                   	leave
    c2bb:	c3                   	ret

000000000000c2bc <_ZThn8_N2vk20InvalidShaderNVErrorD1Ev>:
    c2bc:	48 83 ef 08          	sub    $0x8,%rdi
    c2c0:	eb c2                	jmp    c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>

000000000000c2c2 <_ZN2vk20InvalidShaderNVErrorD0Ev>:
    c2c2:	55                   	push   %rbp
    c2c3:	48 89 e5             	mov    %rsp,%rbp
    c2c6:	48 83 ec 10          	sub    $0x10,%rsp
    c2ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d2:	48 89 c7             	mov    %rax,%rdi
    c2d5:	e8 aa ff ff ff       	call   c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    c2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2de:	be 28 00 00 00       	mov    $0x28,%esi
    c2e3:	48 89 c7             	mov    %rax,%rdi
    c2e6:	e8 45 8f ff ff       	call   5230 <_ZdlPvm@plt>
    c2eb:	c9                   	leave
    c2ec:	c3                   	ret

000000000000c2ed <_ZThn8_N2vk20InvalidShaderNVErrorD0Ev>:
    c2ed:	48 83 ef 08          	sub    $0x8,%rdi
    c2f1:	eb cf                	jmp    c2c2 <_ZN2vk20InvalidShaderNVErrorD0Ev>
    c2f3:	90                   	nop

000000000000c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>:
  class ValidationFailedEXTError : public SystemError
    c2f4:	55                   	push   %rbp
    c2f5:	48 89 e5             	mov    %rsp,%rbp
    c2f8:	48 83 ec 10          	sub    $0x10,%rsp
    c2fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c300:	48 8d 15 29 4f 03 00 	lea    0x34f29(%rip),%rdx        # 41230 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    c307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c30b:	48 89 10             	mov    %rdx,(%rax)
    c30e:	48 8d 15 43 4f 03 00 	lea    0x34f43(%rip),%rdx        # 41258 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    c315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c319:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c31d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c321:	48 89 c7             	mov    %rax,%rdi
    c324:	e8 1d b6 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c329:	90                   	nop
    c32a:	c9                   	leave
    c32b:	c3                   	ret

000000000000c32c <_ZThn8_N2vk24ValidationFailedEXTErrorD1Ev>:
    c32c:	48 83 ef 08          	sub    $0x8,%rdi
    c330:	eb c2                	jmp    c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>

000000000000c332 <_ZN2vk24ValidationFailedEXTErrorD0Ev>:
    c332:	55                   	push   %rbp
    c333:	48 89 e5             	mov    %rsp,%rbp
    c336:	48 83 ec 10          	sub    $0x10,%rsp
    c33a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c342:	48 89 c7             	mov    %rax,%rdi
    c345:	e8 aa ff ff ff       	call   c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    c34a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34e:	be 28 00 00 00       	mov    $0x28,%esi
    c353:	48 89 c7             	mov    %rax,%rdi
    c356:	e8 d5 8e ff ff       	call   5230 <_ZdlPvm@plt>
    c35b:	c9                   	leave
    c35c:	c3                   	ret

000000000000c35d <_ZThn8_N2vk24ValidationFailedEXTErrorD0Ev>:
    c35d:	48 83 ef 08          	sub    $0x8,%rdi
    c361:	eb cf                	jmp    c332 <_ZN2vk24ValidationFailedEXTErrorD0Ev>
    c363:	90                   	nop

000000000000c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>:
  class IncompatibleDisplayKHRError : public SystemError
    c364:	55                   	push   %rbp
    c365:	48 89 e5             	mov    %rsp,%rbp
    c368:	48 83 ec 10          	sub    $0x10,%rsp
    c36c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c370:	48 8d 15 09 4f 03 00 	lea    0x34f09(%rip),%rdx        # 41280 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    c377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c37b:	48 89 10             	mov    %rdx,(%rax)
    c37e:	48 8d 15 23 4f 03 00 	lea    0x34f23(%rip),%rdx        # 412a8 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    c385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c389:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c38d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c391:	48 89 c7             	mov    %rax,%rdi
    c394:	e8 ad b5 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c399:	90                   	nop
    c39a:	c9                   	leave
    c39b:	c3                   	ret

000000000000c39c <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD1Ev>:
    c39c:	48 83 ef 08          	sub    $0x8,%rdi
    c3a0:	eb c2                	jmp    c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>

000000000000c3a2 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>:
    c3a2:	55                   	push   %rbp
    c3a3:	48 89 e5             	mov    %rsp,%rbp
    c3a6:	48 83 ec 10          	sub    $0x10,%rsp
    c3aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3b2:	48 89 c7             	mov    %rax,%rdi
    c3b5:	e8 aa ff ff ff       	call   c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    c3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3be:	be 28 00 00 00       	mov    $0x28,%esi
    c3c3:	48 89 c7             	mov    %rax,%rdi
    c3c6:	e8 65 8e ff ff       	call   5230 <_ZdlPvm@plt>
    c3cb:	c9                   	leave
    c3cc:	c3                   	ret

000000000000c3cd <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD0Ev>:
    c3cd:	48 83 ef 08          	sub    $0x8,%rdi
    c3d1:	eb cf                	jmp    c3a2 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>
    c3d3:	90                   	nop

000000000000c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>:
  class OutOfDateKHRError : public SystemError
    c3d4:	55                   	push   %rbp
    c3d5:	48 89 e5             	mov    %rsp,%rbp
    c3d8:	48 83 ec 10          	sub    $0x10,%rsp
    c3dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3e0:	48 8d 15 e9 4e 03 00 	lea    0x34ee9(%rip),%rdx        # 412d0 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    c3e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3eb:	48 89 10             	mov    %rdx,(%rax)
    c3ee:	48 8d 15 03 4f 03 00 	lea    0x34f03(%rip),%rdx        # 412f8 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    c3f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c401:	48 89 c7             	mov    %rax,%rdi
    c404:	e8 3d b5 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c409:	90                   	nop
    c40a:	c9                   	leave
    c40b:	c3                   	ret

000000000000c40c <_ZThn8_N2vk17OutOfDateKHRErrorD1Ev>:
    c40c:	48 83 ef 08          	sub    $0x8,%rdi
    c410:	eb c2                	jmp    c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>

000000000000c412 <_ZN2vk17OutOfDateKHRErrorD0Ev>:
    c412:	55                   	push   %rbp
    c413:	48 89 e5             	mov    %rsp,%rbp
    c416:	48 83 ec 10          	sub    $0x10,%rsp
    c41a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c41e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c422:	48 89 c7             	mov    %rax,%rdi
    c425:	e8 aa ff ff ff       	call   c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    c42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c42e:	be 28 00 00 00       	mov    $0x28,%esi
    c433:	48 89 c7             	mov    %rax,%rdi
    c436:	e8 f5 8d ff ff       	call   5230 <_ZdlPvm@plt>
    c43b:	c9                   	leave
    c43c:	c3                   	ret

000000000000c43d <_ZThn8_N2vk17OutOfDateKHRErrorD0Ev>:
    c43d:	48 83 ef 08          	sub    $0x8,%rdi
    c441:	eb cf                	jmp    c412 <_ZN2vk17OutOfDateKHRErrorD0Ev>
    c443:	90                   	nop

000000000000c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>:
  class NativeWindowInUseKHRError : public SystemError
    c444:	55                   	push   %rbp
    c445:	48 89 e5             	mov    %rsp,%rbp
    c448:	48 83 ec 10          	sub    $0x10,%rsp
    c44c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c450:	48 8d 15 c9 4e 03 00 	lea    0x34ec9(%rip),%rdx        # 41320 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    c457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c45b:	48 89 10             	mov    %rdx,(%rax)
    c45e:	48 8d 15 e3 4e 03 00 	lea    0x34ee3(%rip),%rdx        # 41348 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    c465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c469:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c46d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c471:	48 89 c7             	mov    %rax,%rdi
    c474:	e8 cd b4 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c479:	90                   	nop
    c47a:	c9                   	leave
    c47b:	c3                   	ret

000000000000c47c <_ZThn8_N2vk25NativeWindowInUseKHRErrorD1Ev>:
    c47c:	48 83 ef 08          	sub    $0x8,%rdi
    c480:	eb c2                	jmp    c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>

000000000000c482 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>:
    c482:	55                   	push   %rbp
    c483:	48 89 e5             	mov    %rsp,%rbp
    c486:	48 83 ec 10          	sub    $0x10,%rsp
    c48a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c48e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c492:	48 89 c7             	mov    %rax,%rdi
    c495:	e8 aa ff ff ff       	call   c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    c49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c49e:	be 28 00 00 00       	mov    $0x28,%esi
    c4a3:	48 89 c7             	mov    %rax,%rdi
    c4a6:	e8 85 8d ff ff       	call   5230 <_ZdlPvm@plt>
    c4ab:	c9                   	leave
    c4ac:	c3                   	ret

000000000000c4ad <_ZThn8_N2vk25NativeWindowInUseKHRErrorD0Ev>:
    c4ad:	48 83 ef 08          	sub    $0x8,%rdi
    c4b1:	eb cf                	jmp    c482 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>
    c4b3:	90                   	nop

000000000000c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>:
  class SurfaceLostKHRError : public SystemError
    c4b4:	55                   	push   %rbp
    c4b5:	48 89 e5             	mov    %rsp,%rbp
    c4b8:	48 83 ec 10          	sub    $0x10,%rsp
    c4bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4c0:	48 8d 15 a9 4e 03 00 	lea    0x34ea9(%rip),%rdx        # 41370 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    c4c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4cb:	48 89 10             	mov    %rdx,(%rax)
    c4ce:	48 8d 15 c3 4e 03 00 	lea    0x34ec3(%rip),%rdx        # 41398 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    c4d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c4dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e1:	48 89 c7             	mov    %rax,%rdi
    c4e4:	e8 5d b4 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c4e9:	90                   	nop
    c4ea:	c9                   	leave
    c4eb:	c3                   	ret

000000000000c4ec <_ZThn8_N2vk19SurfaceLostKHRErrorD1Ev>:
    c4ec:	48 83 ef 08          	sub    $0x8,%rdi
    c4f0:	eb c2                	jmp    c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>

000000000000c4f2 <_ZN2vk19SurfaceLostKHRErrorD0Ev>:
    c4f2:	55                   	push   %rbp
    c4f3:	48 89 e5             	mov    %rsp,%rbp
    c4f6:	48 83 ec 10          	sub    $0x10,%rsp
    c4fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c502:	48 89 c7             	mov    %rax,%rdi
    c505:	e8 aa ff ff ff       	call   c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    c50a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c50e:	be 28 00 00 00       	mov    $0x28,%esi
    c513:	48 89 c7             	mov    %rax,%rdi
    c516:	e8 15 8d ff ff       	call   5230 <_ZdlPvm@plt>
    c51b:	c9                   	leave
    c51c:	c3                   	ret

000000000000c51d <_ZThn8_N2vk19SurfaceLostKHRErrorD0Ev>:
    c51d:	48 83 ef 08          	sub    $0x8,%rdi
    c521:	eb cf                	jmp    c4f2 <_ZN2vk19SurfaceLostKHRErrorD0Ev>
    c523:	90                   	nop

000000000000c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
  class InvalidOpaqueCaptureAddressError : public SystemError
    c524:	55                   	push   %rbp
    c525:	48 89 e5             	mov    %rsp,%rbp
    c528:	48 83 ec 10          	sub    $0x10,%rsp
    c52c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c530:	48 8d 15 89 4e 03 00 	lea    0x34e89(%rip),%rdx        # 413c0 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    c537:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c53b:	48 89 10             	mov    %rdx,(%rax)
    c53e:	48 8d 15 a3 4e 03 00 	lea    0x34ea3(%rip),%rdx        # 413e8 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    c545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c549:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c54d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c551:	48 89 c7             	mov    %rax,%rdi
    c554:	e8 ed b3 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c559:	90                   	nop
    c55a:	c9                   	leave
    c55b:	c3                   	ret

000000000000c55c <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
    c55c:	48 83 ef 08          	sub    $0x8,%rdi
    c560:	eb c2                	jmp    c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>

000000000000c562 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    c562:	55                   	push   %rbp
    c563:	48 89 e5             	mov    %rsp,%rbp
    c566:	48 83 ec 10          	sub    $0x10,%rsp
    c56a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c56e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c572:	48 89 c7             	mov    %rax,%rdi
    c575:	e8 aa ff ff ff       	call   c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    c57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c57e:	be 28 00 00 00       	mov    $0x28,%esi
    c583:	48 89 c7             	mov    %rax,%rdi
    c586:	e8 a5 8c ff ff       	call   5230 <_ZdlPvm@plt>
    c58b:	c9                   	leave
    c58c:	c3                   	ret

000000000000c58d <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    c58d:	48 83 ef 08          	sub    $0x8,%rdi
    c591:	eb cf                	jmp    c562 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>
    c593:	90                   	nop

000000000000c594 <_ZN2vk18FragmentationErrorD1Ev>:
  class FragmentationError : public SystemError
    c594:	55                   	push   %rbp
    c595:	48 89 e5             	mov    %rsp,%rbp
    c598:	48 83 ec 10          	sub    $0x10,%rsp
    c59c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5a0:	48 8d 15 69 4e 03 00 	lea    0x34e69(%rip),%rdx        # 41410 <_ZTVN2vk18FragmentationErrorE+0x10>
    c5a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ab:	48 89 10             	mov    %rdx,(%rax)
    c5ae:	48 8d 15 83 4e 03 00 	lea    0x34e83(%rip),%rdx        # 41438 <_ZTVN2vk18FragmentationErrorE+0x38>
    c5b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c5bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c1:	48 89 c7             	mov    %rax,%rdi
    c5c4:	e8 7d b3 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c5c9:	90                   	nop
    c5ca:	c9                   	leave
    c5cb:	c3                   	ret

000000000000c5cc <_ZThn8_N2vk18FragmentationErrorD1Ev>:
    c5cc:	48 83 ef 08          	sub    $0x8,%rdi
    c5d0:	eb c2                	jmp    c594 <_ZN2vk18FragmentationErrorD1Ev>

000000000000c5d2 <_ZN2vk18FragmentationErrorD0Ev>:
    c5d2:	55                   	push   %rbp
    c5d3:	48 89 e5             	mov    %rsp,%rbp
    c5d6:	48 83 ec 10          	sub    $0x10,%rsp
    c5da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e2:	48 89 c7             	mov    %rax,%rdi
    c5e5:	e8 aa ff ff ff       	call   c594 <_ZN2vk18FragmentationErrorD1Ev>
    c5ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ee:	be 28 00 00 00       	mov    $0x28,%esi
    c5f3:	48 89 c7             	mov    %rax,%rdi
    c5f6:	e8 35 8c ff ff       	call   5230 <_ZdlPvm@plt>
    c5fb:	c9                   	leave
    c5fc:	c3                   	ret

000000000000c5fd <_ZThn8_N2vk18FragmentationErrorD0Ev>:
    c5fd:	48 83 ef 08          	sub    $0x8,%rdi
    c601:	eb cf                	jmp    c5d2 <_ZN2vk18FragmentationErrorD0Ev>
    c603:	90                   	nop

000000000000c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>:
  class InvalidExternalHandleError : public SystemError
    c604:	55                   	push   %rbp
    c605:	48 89 e5             	mov    %rsp,%rbp
    c608:	48 83 ec 10          	sub    $0x10,%rsp
    c60c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c610:	48 8d 15 49 4e 03 00 	lea    0x34e49(%rip),%rdx        # 41460 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    c617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c61b:	48 89 10             	mov    %rdx,(%rax)
    c61e:	48 8d 15 63 4e 03 00 	lea    0x34e63(%rip),%rdx        # 41488 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    c625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c629:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c62d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c631:	48 89 c7             	mov    %rax,%rdi
    c634:	e8 0d b3 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c639:	90                   	nop
    c63a:	c9                   	leave
    c63b:	c3                   	ret

000000000000c63c <_ZThn8_N2vk26InvalidExternalHandleErrorD1Ev>:
    c63c:	48 83 ef 08          	sub    $0x8,%rdi
    c640:	eb c2                	jmp    c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>

000000000000c642 <_ZN2vk26InvalidExternalHandleErrorD0Ev>:
    c642:	55                   	push   %rbp
    c643:	48 89 e5             	mov    %rsp,%rbp
    c646:	48 83 ec 10          	sub    $0x10,%rsp
    c64a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c64e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c652:	48 89 c7             	mov    %rax,%rdi
    c655:	e8 aa ff ff ff       	call   c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    c65a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c65e:	be 28 00 00 00       	mov    $0x28,%esi
    c663:	48 89 c7             	mov    %rax,%rdi
    c666:	e8 c5 8b ff ff       	call   5230 <_ZdlPvm@plt>
    c66b:	c9                   	leave
    c66c:	c3                   	ret

000000000000c66d <_ZThn8_N2vk26InvalidExternalHandleErrorD0Ev>:
    c66d:	48 83 ef 08          	sub    $0x8,%rdi
    c671:	eb cf                	jmp    c642 <_ZN2vk26InvalidExternalHandleErrorD0Ev>
    c673:	90                   	nop

000000000000c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>:
  class OutOfPoolMemoryError : public SystemError
    c674:	55                   	push   %rbp
    c675:	48 89 e5             	mov    %rsp,%rbp
    c678:	48 83 ec 10          	sub    $0x10,%rsp
    c67c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c680:	48 8d 15 29 4e 03 00 	lea    0x34e29(%rip),%rdx        # 414b0 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    c687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c68b:	48 89 10             	mov    %rdx,(%rax)
    c68e:	48 8d 15 43 4e 03 00 	lea    0x34e43(%rip),%rdx        # 414d8 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    c695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c699:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c69d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6a1:	48 89 c7             	mov    %rax,%rdi
    c6a4:	e8 9d b2 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c6a9:	90                   	nop
    c6aa:	c9                   	leave
    c6ab:	c3                   	ret

000000000000c6ac <_ZThn8_N2vk20OutOfPoolMemoryErrorD1Ev>:
    c6ac:	48 83 ef 08          	sub    $0x8,%rdi
    c6b0:	eb c2                	jmp    c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>

000000000000c6b2 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>:
    c6b2:	55                   	push   %rbp
    c6b3:	48 89 e5             	mov    %rsp,%rbp
    c6b6:	48 83 ec 10          	sub    $0x10,%rsp
    c6ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c2:	48 89 c7             	mov    %rax,%rdi
    c6c5:	e8 aa ff ff ff       	call   c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    c6ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ce:	be 28 00 00 00       	mov    $0x28,%esi
    c6d3:	48 89 c7             	mov    %rax,%rdi
    c6d6:	e8 55 8b ff ff       	call   5230 <_ZdlPvm@plt>
    c6db:	c9                   	leave
    c6dc:	c3                   	ret

000000000000c6dd <_ZThn8_N2vk20OutOfPoolMemoryErrorD0Ev>:
    c6dd:	48 83 ef 08          	sub    $0x8,%rdi
    c6e1:	eb cf                	jmp    c6b2 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>
    c6e3:	90                   	nop

000000000000c6e4 <_ZN2vk12UnknownErrorD1Ev>:
  class UnknownError : public SystemError
    c6e4:	55                   	push   %rbp
    c6e5:	48 89 e5             	mov    %rsp,%rbp
    c6e8:	48 83 ec 10          	sub    $0x10,%rsp
    c6ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6f0:	48 8d 15 09 4e 03 00 	lea    0x34e09(%rip),%rdx        # 41500 <_ZTVN2vk12UnknownErrorE+0x10>
    c6f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6fb:	48 89 10             	mov    %rdx,(%rax)
    c6fe:	48 8d 15 23 4e 03 00 	lea    0x34e23(%rip),%rdx        # 41528 <_ZTVN2vk12UnknownErrorE+0x38>
    c705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c709:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c70d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c711:	48 89 c7             	mov    %rax,%rdi
    c714:	e8 2d b2 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c719:	90                   	nop
    c71a:	c9                   	leave
    c71b:	c3                   	ret

000000000000c71c <_ZThn8_N2vk12UnknownErrorD1Ev>:
    c71c:	48 83 ef 08          	sub    $0x8,%rdi
    c720:	eb c2                	jmp    c6e4 <_ZN2vk12UnknownErrorD1Ev>

000000000000c722 <_ZN2vk12UnknownErrorD0Ev>:
    c722:	55                   	push   %rbp
    c723:	48 89 e5             	mov    %rsp,%rbp
    c726:	48 83 ec 10          	sub    $0x10,%rsp
    c72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c732:	48 89 c7             	mov    %rax,%rdi
    c735:	e8 aa ff ff ff       	call   c6e4 <_ZN2vk12UnknownErrorD1Ev>
    c73a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c73e:	be 28 00 00 00       	mov    $0x28,%esi
    c743:	48 89 c7             	mov    %rax,%rdi
    c746:	e8 e5 8a ff ff       	call   5230 <_ZdlPvm@plt>
    c74b:	c9                   	leave
    c74c:	c3                   	ret

000000000000c74d <_ZThn8_N2vk12UnknownErrorD0Ev>:
    c74d:	48 83 ef 08          	sub    $0x8,%rdi
    c751:	eb cf                	jmp    c722 <_ZN2vk12UnknownErrorD0Ev>
    c753:	90                   	nop

000000000000c754 <_ZN2vk19FragmentedPoolErrorD1Ev>:
  class FragmentedPoolError : public SystemError
    c754:	55                   	push   %rbp
    c755:	48 89 e5             	mov    %rsp,%rbp
    c758:	48 83 ec 10          	sub    $0x10,%rsp
    c75c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c760:	48 8d 15 e9 4d 03 00 	lea    0x34de9(%rip),%rdx        # 41550 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    c767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c76b:	48 89 10             	mov    %rdx,(%rax)
    c76e:	48 8d 15 03 4e 03 00 	lea    0x34e03(%rip),%rdx        # 41578 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    c775:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c779:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c77d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c781:	48 89 c7             	mov    %rax,%rdi
    c784:	e8 bd b1 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c789:	90                   	nop
    c78a:	c9                   	leave
    c78b:	c3                   	ret

000000000000c78c <_ZThn8_N2vk19FragmentedPoolErrorD1Ev>:
    c78c:	48 83 ef 08          	sub    $0x8,%rdi
    c790:	eb c2                	jmp    c754 <_ZN2vk19FragmentedPoolErrorD1Ev>

000000000000c792 <_ZN2vk19FragmentedPoolErrorD0Ev>:
    c792:	55                   	push   %rbp
    c793:	48 89 e5             	mov    %rsp,%rbp
    c796:	48 83 ec 10          	sub    $0x10,%rsp
    c79a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c79e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7a2:	48 89 c7             	mov    %rax,%rdi
    c7a5:	e8 aa ff ff ff       	call   c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
    c7aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ae:	be 28 00 00 00       	mov    $0x28,%esi
    c7b3:	48 89 c7             	mov    %rax,%rdi
    c7b6:	e8 75 8a ff ff       	call   5230 <_ZdlPvm@plt>
    c7bb:	c9                   	leave
    c7bc:	c3                   	ret

000000000000c7bd <_ZThn8_N2vk19FragmentedPoolErrorD0Ev>:
    c7bd:	48 83 ef 08          	sub    $0x8,%rdi
    c7c1:	eb cf                	jmp    c792 <_ZN2vk19FragmentedPoolErrorD0Ev>
    c7c3:	90                   	nop

000000000000c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>:
  class FormatNotSupportedError : public SystemError
    c7c4:	55                   	push   %rbp
    c7c5:	48 89 e5             	mov    %rsp,%rbp
    c7c8:	48 83 ec 10          	sub    $0x10,%rsp
    c7cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7d0:	48 8d 15 c9 4d 03 00 	lea    0x34dc9(%rip),%rdx        # 415a0 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    c7d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7db:	48 89 10             	mov    %rdx,(%rax)
    c7de:	48 8d 15 e3 4d 03 00 	lea    0x34de3(%rip),%rdx        # 415c8 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    c7e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c7ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7f1:	48 89 c7             	mov    %rax,%rdi
    c7f4:	e8 4d b1 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c7f9:	90                   	nop
    c7fa:	c9                   	leave
    c7fb:	c3                   	ret

000000000000c7fc <_ZThn8_N2vk23FormatNotSupportedErrorD1Ev>:
    c7fc:	48 83 ef 08          	sub    $0x8,%rdi
    c800:	eb c2                	jmp    c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>

000000000000c802 <_ZN2vk23FormatNotSupportedErrorD0Ev>:
    c802:	55                   	push   %rbp
    c803:	48 89 e5             	mov    %rsp,%rbp
    c806:	48 83 ec 10          	sub    $0x10,%rsp
    c80a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c80e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c812:	48 89 c7             	mov    %rax,%rdi
    c815:	e8 aa ff ff ff       	call   c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    c81a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c81e:	be 28 00 00 00       	mov    $0x28,%esi
    c823:	48 89 c7             	mov    %rax,%rdi
    c826:	e8 05 8a ff ff       	call   5230 <_ZdlPvm@plt>
    c82b:	c9                   	leave
    c82c:	c3                   	ret

000000000000c82d <_ZThn8_N2vk23FormatNotSupportedErrorD0Ev>:
    c82d:	48 83 ef 08          	sub    $0x8,%rdi
    c831:	eb cf                	jmp    c802 <_ZN2vk23FormatNotSupportedErrorD0Ev>
    c833:	90                   	nop

000000000000c834 <_ZN2vk19TooManyObjectsErrorD1Ev>:
  class TooManyObjectsError : public SystemError
    c834:	55                   	push   %rbp
    c835:	48 89 e5             	mov    %rsp,%rbp
    c838:	48 83 ec 10          	sub    $0x10,%rsp
    c83c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c840:	48 8d 15 a9 4d 03 00 	lea    0x34da9(%rip),%rdx        # 415f0 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    c847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c84b:	48 89 10             	mov    %rdx,(%rax)
    c84e:	48 8d 15 c3 4d 03 00 	lea    0x34dc3(%rip),%rdx        # 41618 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    c855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c859:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c85d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c861:	48 89 c7             	mov    %rax,%rdi
    c864:	e8 dd b0 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c869:	90                   	nop
    c86a:	c9                   	leave
    c86b:	c3                   	ret

000000000000c86c <_ZThn8_N2vk19TooManyObjectsErrorD1Ev>:
    c86c:	48 83 ef 08          	sub    $0x8,%rdi
    c870:	eb c2                	jmp    c834 <_ZN2vk19TooManyObjectsErrorD1Ev>

000000000000c872 <_ZN2vk19TooManyObjectsErrorD0Ev>:
    c872:	55                   	push   %rbp
    c873:	48 89 e5             	mov    %rsp,%rbp
    c876:	48 83 ec 10          	sub    $0x10,%rsp
    c87a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c87e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c882:	48 89 c7             	mov    %rax,%rdi
    c885:	e8 aa ff ff ff       	call   c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
    c88a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c88e:	be 28 00 00 00       	mov    $0x28,%esi
    c893:	48 89 c7             	mov    %rax,%rdi
    c896:	e8 95 89 ff ff       	call   5230 <_ZdlPvm@plt>
    c89b:	c9                   	leave
    c89c:	c3                   	ret

000000000000c89d <_ZThn8_N2vk19TooManyObjectsErrorD0Ev>:
    c89d:	48 83 ef 08          	sub    $0x8,%rdi
    c8a1:	eb cf                	jmp    c872 <_ZN2vk19TooManyObjectsErrorD0Ev>
    c8a3:	90                   	nop

000000000000c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>:
  class IncompatibleDriverError : public SystemError
    c8a4:	55                   	push   %rbp
    c8a5:	48 89 e5             	mov    %rsp,%rbp
    c8a8:	48 83 ec 10          	sub    $0x10,%rsp
    c8ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8b0:	48 8d 15 89 4d 03 00 	lea    0x34d89(%rip),%rdx        # 41640 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    c8b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8bb:	48 89 10             	mov    %rdx,(%rax)
    c8be:	48 8d 15 a3 4d 03 00 	lea    0x34da3(%rip),%rdx        # 41668 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    c8c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c8cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8d1:	48 89 c7             	mov    %rax,%rdi
    c8d4:	e8 6d b0 ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c8d9:	90                   	nop
    c8da:	c9                   	leave
    c8db:	c3                   	ret

000000000000c8dc <_ZThn8_N2vk23IncompatibleDriverErrorD1Ev>:
    c8dc:	48 83 ef 08          	sub    $0x8,%rdi
    c8e0:	eb c2                	jmp    c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>

000000000000c8e2 <_ZN2vk23IncompatibleDriverErrorD0Ev>:
    c8e2:	55                   	push   %rbp
    c8e3:	48 89 e5             	mov    %rsp,%rbp
    c8e6:	48 83 ec 10          	sub    $0x10,%rsp
    c8ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f2:	48 89 c7             	mov    %rax,%rdi
    c8f5:	e8 aa ff ff ff       	call   c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    c8fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8fe:	be 28 00 00 00       	mov    $0x28,%esi
    c903:	48 89 c7             	mov    %rax,%rdi
    c906:	e8 25 89 ff ff       	call   5230 <_ZdlPvm@plt>
    c90b:	c9                   	leave
    c90c:	c3                   	ret

000000000000c90d <_ZThn8_N2vk23IncompatibleDriverErrorD0Ev>:
    c90d:	48 83 ef 08          	sub    $0x8,%rdi
    c911:	eb cf                	jmp    c8e2 <_ZN2vk23IncompatibleDriverErrorD0Ev>
    c913:	90                   	nop

000000000000c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>:
  class FeatureNotPresentError : public SystemError
    c914:	55                   	push   %rbp
    c915:	48 89 e5             	mov    %rsp,%rbp
    c918:	48 83 ec 10          	sub    $0x10,%rsp
    c91c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c920:	48 8d 15 69 4d 03 00 	lea    0x34d69(%rip),%rdx        # 41690 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    c927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c92b:	48 89 10             	mov    %rdx,(%rax)
    c92e:	48 8d 15 83 4d 03 00 	lea    0x34d83(%rip),%rdx        # 416b8 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    c935:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c939:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c93d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c941:	48 89 c7             	mov    %rax,%rdi
    c944:	e8 fd af ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c949:	90                   	nop
    c94a:	c9                   	leave
    c94b:	c3                   	ret

000000000000c94c <_ZThn8_N2vk22FeatureNotPresentErrorD1Ev>:
    c94c:	48 83 ef 08          	sub    $0x8,%rdi
    c950:	eb c2                	jmp    c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>

000000000000c952 <_ZN2vk22FeatureNotPresentErrorD0Ev>:
    c952:	55                   	push   %rbp
    c953:	48 89 e5             	mov    %rsp,%rbp
    c956:	48 83 ec 10          	sub    $0x10,%rsp
    c95a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c95e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c962:	48 89 c7             	mov    %rax,%rdi
    c965:	e8 aa ff ff ff       	call   c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    c96a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c96e:	be 28 00 00 00       	mov    $0x28,%esi
    c973:	48 89 c7             	mov    %rax,%rdi
    c976:	e8 b5 88 ff ff       	call   5230 <_ZdlPvm@plt>
    c97b:	c9                   	leave
    c97c:	c3                   	ret

000000000000c97d <_ZThn8_N2vk22FeatureNotPresentErrorD0Ev>:
    c97d:	48 83 ef 08          	sub    $0x8,%rdi
    c981:	eb cf                	jmp    c952 <_ZN2vk22FeatureNotPresentErrorD0Ev>
    c983:	90                   	nop

000000000000c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>:
  class ExtensionNotPresentError : public SystemError
    c984:	55                   	push   %rbp
    c985:	48 89 e5             	mov    %rsp,%rbp
    c988:	48 83 ec 10          	sub    $0x10,%rsp
    c98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c990:	48 8d 15 49 4d 03 00 	lea    0x34d49(%rip),%rdx        # 416e0 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    c997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99b:	48 89 10             	mov    %rdx,(%rax)
    c99e:	48 8d 15 63 4d 03 00 	lea    0x34d63(%rip),%rdx        # 41708 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    c9a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c9ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9b1:	48 89 c7             	mov    %rax,%rdi
    c9b4:	e8 8d af ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    c9b9:	90                   	nop
    c9ba:	c9                   	leave
    c9bb:	c3                   	ret

000000000000c9bc <_ZThn8_N2vk24ExtensionNotPresentErrorD1Ev>:
    c9bc:	48 83 ef 08          	sub    $0x8,%rdi
    c9c0:	eb c2                	jmp    c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>

000000000000c9c2 <_ZN2vk24ExtensionNotPresentErrorD0Ev>:
    c9c2:	55                   	push   %rbp
    c9c3:	48 89 e5             	mov    %rsp,%rbp
    c9c6:	48 83 ec 10          	sub    $0x10,%rsp
    c9ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9d2:	48 89 c7             	mov    %rax,%rdi
    c9d5:	e8 aa ff ff ff       	call   c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    c9da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9de:	be 28 00 00 00       	mov    $0x28,%esi
    c9e3:	48 89 c7             	mov    %rax,%rdi
    c9e6:	e8 45 88 ff ff       	call   5230 <_ZdlPvm@plt>
    c9eb:	c9                   	leave
    c9ec:	c3                   	ret

000000000000c9ed <_ZThn8_N2vk24ExtensionNotPresentErrorD0Ev>:
    c9ed:	48 83 ef 08          	sub    $0x8,%rdi
    c9f1:	eb cf                	jmp    c9c2 <_ZN2vk24ExtensionNotPresentErrorD0Ev>
    c9f3:	90                   	nop

000000000000c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>:
  class LayerNotPresentError : public SystemError
    c9f4:	55                   	push   %rbp
    c9f5:	48 89 e5             	mov    %rsp,%rbp
    c9f8:	48 83 ec 10          	sub    $0x10,%rsp
    c9fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca00:	48 8d 15 29 4d 03 00 	lea    0x34d29(%rip),%rdx        # 41730 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    ca07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca0b:	48 89 10             	mov    %rdx,(%rax)
    ca0e:	48 8d 15 43 4d 03 00 	lea    0x34d43(%rip),%rdx        # 41758 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    ca15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca19:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ca1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca21:	48 89 c7             	mov    %rax,%rdi
    ca24:	e8 1d af ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    ca29:	90                   	nop
    ca2a:	c9                   	leave
    ca2b:	c3                   	ret

000000000000ca2c <_ZThn8_N2vk20LayerNotPresentErrorD1Ev>:
    ca2c:	48 83 ef 08          	sub    $0x8,%rdi
    ca30:	eb c2                	jmp    c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>

000000000000ca32 <_ZN2vk20LayerNotPresentErrorD0Ev>:
    ca32:	55                   	push   %rbp
    ca33:	48 89 e5             	mov    %rsp,%rbp
    ca36:	48 83 ec 10          	sub    $0x10,%rsp
    ca3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca42:	48 89 c7             	mov    %rax,%rdi
    ca45:	e8 aa ff ff ff       	call   c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
    ca4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca4e:	be 28 00 00 00       	mov    $0x28,%esi
    ca53:	48 89 c7             	mov    %rax,%rdi
    ca56:	e8 d5 87 ff ff       	call   5230 <_ZdlPvm@plt>
    ca5b:	c9                   	leave
    ca5c:	c3                   	ret

000000000000ca5d <_ZThn8_N2vk20LayerNotPresentErrorD0Ev>:
    ca5d:	48 83 ef 08          	sub    $0x8,%rdi
    ca61:	eb cf                	jmp    ca32 <_ZN2vk20LayerNotPresentErrorD0Ev>
    ca63:	90                   	nop

000000000000ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>:
  class MemoryMapFailedError : public SystemError
    ca64:	55                   	push   %rbp
    ca65:	48 89 e5             	mov    %rsp,%rbp
    ca68:	48 83 ec 10          	sub    $0x10,%rsp
    ca6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca70:	48 8d 15 09 4d 03 00 	lea    0x34d09(%rip),%rdx        # 41780 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    ca77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca7b:	48 89 10             	mov    %rdx,(%rax)
    ca7e:	48 8d 15 23 4d 03 00 	lea    0x34d23(%rip),%rdx        # 417a8 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    ca85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca89:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ca8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca91:	48 89 c7             	mov    %rax,%rdi
    ca94:	e8 ad ae ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    ca99:	90                   	nop
    ca9a:	c9                   	leave
    ca9b:	c3                   	ret

000000000000ca9c <_ZThn8_N2vk20MemoryMapFailedErrorD1Ev>:
    ca9c:	48 83 ef 08          	sub    $0x8,%rdi
    caa0:	eb c2                	jmp    ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>

000000000000caa2 <_ZN2vk20MemoryMapFailedErrorD0Ev>:
    caa2:	55                   	push   %rbp
    caa3:	48 89 e5             	mov    %rsp,%rbp
    caa6:	48 83 ec 10          	sub    $0x10,%rsp
    caaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    caae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cab2:	48 89 c7             	mov    %rax,%rdi
    cab5:	e8 aa ff ff ff       	call   ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    caba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cabe:	be 28 00 00 00       	mov    $0x28,%esi
    cac3:	48 89 c7             	mov    %rax,%rdi
    cac6:	e8 65 87 ff ff       	call   5230 <_ZdlPvm@plt>
    cacb:	c9                   	leave
    cacc:	c3                   	ret

000000000000cacd <_ZThn8_N2vk20MemoryMapFailedErrorD0Ev>:
    cacd:	48 83 ef 08          	sub    $0x8,%rdi
    cad1:	eb cf                	jmp    caa2 <_ZN2vk20MemoryMapFailedErrorD0Ev>
    cad3:	90                   	nop

000000000000cad4 <_ZN2vk15DeviceLostErrorD1Ev>:
  class DeviceLostError : public SystemError
    cad4:	55                   	push   %rbp
    cad5:	48 89 e5             	mov    %rsp,%rbp
    cad8:	48 83 ec 10          	sub    $0x10,%rsp
    cadc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cae0:	48 8d 15 e9 4c 03 00 	lea    0x34ce9(%rip),%rdx        # 417d0 <_ZTVN2vk15DeviceLostErrorE+0x10>
    cae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caeb:	48 89 10             	mov    %rdx,(%rax)
    caee:	48 8d 15 03 4d 03 00 	lea    0x34d03(%rip),%rdx        # 417f8 <_ZTVN2vk15DeviceLostErrorE+0x38>
    caf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caf9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cafd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb01:	48 89 c7             	mov    %rax,%rdi
    cb04:	e8 3d ae ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    cb09:	90                   	nop
    cb0a:	c9                   	leave
    cb0b:	c3                   	ret

000000000000cb0c <_ZThn8_N2vk15DeviceLostErrorD1Ev>:
    cb0c:	48 83 ef 08          	sub    $0x8,%rdi
    cb10:	eb c2                	jmp    cad4 <_ZN2vk15DeviceLostErrorD1Ev>

000000000000cb12 <_ZN2vk15DeviceLostErrorD0Ev>:
    cb12:	55                   	push   %rbp
    cb13:	48 89 e5             	mov    %rsp,%rbp
    cb16:	48 83 ec 10          	sub    $0x10,%rsp
    cb1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb22:	48 89 c7             	mov    %rax,%rdi
    cb25:	e8 aa ff ff ff       	call   cad4 <_ZN2vk15DeviceLostErrorD1Ev>
    cb2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb2e:	be 28 00 00 00       	mov    $0x28,%esi
    cb33:	48 89 c7             	mov    %rax,%rdi
    cb36:	e8 f5 86 ff ff       	call   5230 <_ZdlPvm@plt>
    cb3b:	c9                   	leave
    cb3c:	c3                   	ret

000000000000cb3d <_ZThn8_N2vk15DeviceLostErrorD0Ev>:
    cb3d:	48 83 ef 08          	sub    $0x8,%rdi
    cb41:	eb cf                	jmp    cb12 <_ZN2vk15DeviceLostErrorD0Ev>
    cb43:	90                   	nop

000000000000cb44 <_ZN2vk25InitializationFailedErrorD1Ev>:
  class InitializationFailedError : public SystemError
    cb44:	55                   	push   %rbp
    cb45:	48 89 e5             	mov    %rsp,%rbp
    cb48:	48 83 ec 10          	sub    $0x10,%rsp
    cb4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb50:	48 8d 15 c9 4c 03 00 	lea    0x34cc9(%rip),%rdx        # 41820 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    cb57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb5b:	48 89 10             	mov    %rdx,(%rax)
    cb5e:	48 8d 15 e3 4c 03 00 	lea    0x34ce3(%rip),%rdx        # 41848 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    cb65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb69:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cb6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb71:	48 89 c7             	mov    %rax,%rdi
    cb74:	e8 cd ad ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    cb79:	90                   	nop
    cb7a:	c9                   	leave
    cb7b:	c3                   	ret

000000000000cb7c <_ZThn8_N2vk25InitializationFailedErrorD1Ev>:
    cb7c:	48 83 ef 08          	sub    $0x8,%rdi
    cb80:	eb c2                	jmp    cb44 <_ZN2vk25InitializationFailedErrorD1Ev>

000000000000cb82 <_ZN2vk25InitializationFailedErrorD0Ev>:
    cb82:	55                   	push   %rbp
    cb83:	48 89 e5             	mov    %rsp,%rbp
    cb86:	48 83 ec 10          	sub    $0x10,%rsp
    cb8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb92:	48 89 c7             	mov    %rax,%rdi
    cb95:	e8 aa ff ff ff       	call   cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
    cb9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb9e:	be 28 00 00 00       	mov    $0x28,%esi
    cba3:	48 89 c7             	mov    %rax,%rdi
    cba6:	e8 85 86 ff ff       	call   5230 <_ZdlPvm@plt>
    cbab:	c9                   	leave
    cbac:	c3                   	ret

000000000000cbad <_ZThn8_N2vk25InitializationFailedErrorD0Ev>:
    cbad:	48 83 ef 08          	sub    $0x8,%rdi
    cbb1:	eb cf                	jmp    cb82 <_ZN2vk25InitializationFailedErrorD0Ev>
    cbb3:	90                   	nop

000000000000cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>:
  class OutOfDeviceMemoryError : public SystemError
    cbb4:	55                   	push   %rbp
    cbb5:	48 89 e5             	mov    %rsp,%rbp
    cbb8:	48 83 ec 10          	sub    $0x10,%rsp
    cbbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbc0:	48 8d 15 a9 4c 03 00 	lea    0x34ca9(%rip),%rdx        # 41870 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    cbc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbcb:	48 89 10             	mov    %rdx,(%rax)
    cbce:	48 8d 15 c3 4c 03 00 	lea    0x34cc3(%rip),%rdx        # 41898 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    cbd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cbdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe1:	48 89 c7             	mov    %rax,%rdi
    cbe4:	e8 5d ad ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    cbe9:	90                   	nop
    cbea:	c9                   	leave
    cbeb:	c3                   	ret

000000000000cbec <_ZThn8_N2vk22OutOfDeviceMemoryErrorD1Ev>:
    cbec:	48 83 ef 08          	sub    $0x8,%rdi
    cbf0:	eb c2                	jmp    cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>

000000000000cbf2 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>:
    cbf2:	55                   	push   %rbp
    cbf3:	48 89 e5             	mov    %rsp,%rbp
    cbf6:	48 83 ec 10          	sub    $0x10,%rsp
    cbfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc02:	48 89 c7             	mov    %rax,%rdi
    cc05:	e8 aa ff ff ff       	call   cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    cc0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc0e:	be 28 00 00 00       	mov    $0x28,%esi
    cc13:	48 89 c7             	mov    %rax,%rdi
    cc16:	e8 15 86 ff ff       	call   5230 <_ZdlPvm@plt>
    cc1b:	c9                   	leave
    cc1c:	c3                   	ret

000000000000cc1d <_ZThn8_N2vk22OutOfDeviceMemoryErrorD0Ev>:
    cc1d:	48 83 ef 08          	sub    $0x8,%rdi
    cc21:	eb cf                	jmp    cbf2 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>
    cc23:	90                   	nop

000000000000cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>:
  class OutOfHostMemoryError : public SystemError
    cc24:	55                   	push   %rbp
    cc25:	48 89 e5             	mov    %rsp,%rbp
    cc28:	48 83 ec 10          	sub    $0x10,%rsp
    cc2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc30:	48 8d 15 89 4c 03 00 	lea    0x34c89(%rip),%rdx        # 418c0 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    cc37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc3b:	48 89 10             	mov    %rdx,(%rax)
    cc3e:	48 8d 15 a3 4c 03 00 	lea    0x34ca3(%rip),%rdx        # 418e8 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    cc45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc49:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cc4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc51:	48 89 c7             	mov    %rax,%rdi
    cc54:	e8 ed ac ff ff       	call   7946 <_ZN2vk11SystemErrorD1Ev>
    cc59:	90                   	nop
    cc5a:	c9                   	leave
    cc5b:	c3                   	ret

000000000000cc5c <_ZThn8_N2vk20OutOfHostMemoryErrorD1Ev>:
    cc5c:	48 83 ef 08          	sub    $0x8,%rdi
    cc60:	eb c2                	jmp    cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>

000000000000cc62 <_ZN2vk20OutOfHostMemoryErrorD0Ev>:
    cc62:	55                   	push   %rbp
    cc63:	48 89 e5             	mov    %rsp,%rbp
    cc66:	48 83 ec 10          	sub    $0x10,%rsp
    cc6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc72:	48 89 c7             	mov    %rax,%rdi
    cc75:	e8 aa ff ff ff       	call   cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    cc7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc7e:	be 28 00 00 00       	mov    $0x28,%esi
    cc83:	48 89 c7             	mov    %rax,%rdi
    cc86:	e8 a5 85 ff ff       	call   5230 <_ZdlPvm@plt>
    cc8b:	c9                   	leave
    cc8c:	c3                   	ret

000000000000cc8d <_ZThn8_N2vk20OutOfHostMemoryErrorD0Ev>:
    cc8d:	48 83 ef 08          	sub    $0x8,%rdi
    cc91:	eb cf                	jmp    cc62 <_ZN2vk20OutOfHostMemoryErrorD0Ev>
    cc93:	90                   	nop

000000000000cc94 <_ZN2vk17ErrorCategoryImplD1Ev>:
  class ErrorCategoryImpl : public std::error_category
    cc94:	55                   	push   %rbp
    cc95:	48 89 e5             	mov    %rsp,%rbp
    cc98:	48 83 ec 10          	sub    $0x10,%rsp
    cc9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cca0:	48 8d 15 a9 4d 03 00 	lea    0x34da9(%rip),%rdx        # 41a50 <_ZTVN2vk17ErrorCategoryImplE+0x10>
    cca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccab:	48 89 10             	mov    %rdx,(%rax)
    ccae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccb2:	48 89 c7             	mov    %rax,%rdi
    ccb5:	e8 d6 86 ff ff       	call   5390 <_ZNSt3_V214error_categoryD2Ev@plt>
    ccba:	90                   	nop
    ccbb:	c9                   	leave
    ccbc:	c3                   	ret
    ccbd:	90                   	nop

000000000000ccbe <_ZN2vk17ErrorCategoryImplD0Ev>:
    ccbe:	55                   	push   %rbp
    ccbf:	48 89 e5             	mov    %rsp,%rbp
    ccc2:	48 83 ec 10          	sub    $0x10,%rsp
    ccc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccce:	48 89 c7             	mov    %rax,%rdi
    ccd1:	e8 be ff ff ff       	call   cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    ccd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccda:	be 08 00 00 00       	mov    $0x8,%esi
    ccdf:	48 89 c7             	mov    %rax,%rdi
    cce2:	e8 49 85 ff ff       	call   5230 <_ZdlPvm@plt>
    cce7:	c9                   	leave
    cce8:	c3                   	ret

000000000000cce9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
    cce9:	55                   	push   %rbp
    ccea:	48 89 e5             	mov    %rsp,%rbp
    cced:	41 54                	push   %r12
    ccef:	53                   	push   %rbx
    ccf0:	48 83 ec 30          	sub    $0x30,%rsp
    ccf4:	89 7d cc             	mov    %edi,-0x34(%rbp)
    ccf7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    ccfb:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    ccff:	0f 89 28 07 00 00    	jns    d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cd05:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    cd09:	0f 8d 3d 01 00 00    	jge    ce4c <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    cd0f:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    cd16:	0f 84 19 05 00 00    	je     d235 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    cd1c:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    cd23:	0f 8f 04 07 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cd29:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    cd30:	0f 84 37 05 00 00    	je     d26d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    cd36:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    cd3d:	0f 8f ea 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cd43:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    cd4a:	0f 84 55 05 00 00    	je     d2a5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    cd50:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    cd57:	0f 8f d0 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cd5d:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    cd64:	0f 84 73 05 00 00    	je     d2dd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    cd6a:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    cd71:	0f 8f b6 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cd77:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    cd7e:	0f 84 91 05 00 00    	je     d315 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    cd84:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    cd8b:	0f 8f 9c 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cd91:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    cd98:	0f 84 af 05 00 00    	je     d34d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    cd9e:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    cda5:	0f 8f 82 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cdab:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    cdb2:	0f 84 9d 03 00 00    	je     d155 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    cdb8:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    cdbf:	0f 8f 68 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cdc5:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    cdcc:	0f 84 bb 03 00 00    	je     d18d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    cdd2:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    cdd9:	0f 8f 4e 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cddf:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    cde6:	0f 84 99 05 00 00    	je     d385 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    cdec:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    cdf3:	0f 8f 34 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    cdf9:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    ce00:	0f 84 bf 03 00 00    	je     d1c5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    ce06:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    ce0d:	0f 8f 1a 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    ce13:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    ce1a:	0f 84 9d 05 00 00    	je     d3bd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    ce20:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    ce27:	0f 8f 00 06 00 00    	jg     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    ce2d:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    ce34:	0f 84 bb 05 00 00    	je     d3f5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    ce3a:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    ce41:	0f 84 b6 03 00 00    	je     d1fd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    ce47:	e9 e1 05 00 00       	jmp    d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    ce4c:	8b 45 cc             	mov    -0x34(%rbp),%eax
    ce4f:	83 c0 0d             	add    $0xd,%eax
    ce52:	83 f8 0c             	cmp    $0xc,%eax
    ce55:	0f 87 d2 05 00 00    	ja     d42d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    ce5b:	89 c0                	mov    %eax,%eax
    ce5d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ce64:	00 
    ce65:	48 8d 05 cc de 01 00 	lea    0x1decc(%rip),%rax        # 2ad38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    ce6c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    ce6f:	48 98                	cltq
    ce71:	48 8d 15 c0 de 01 00 	lea    0x1dec0(%rip),%rdx        # 2ad38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    ce78:	48 01 d0             	add    %rdx,%rax
    ce7b:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    ce7d:	bf 28 00 00 00       	mov    $0x28,%edi
    ce82:	e8 49 82 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ce87:	48 89 c3             	mov    %rax,%rbx
    ce8a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce8e:	48 89 c6             	mov    %rax,%rsi
    ce91:	48 89 df             	mov    %rbx,%rdi
    ce94:	e8 2d ab ff ff       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    ce99:	48 8d 05 84 fd ff ff 	lea    -0x27c(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    cea0:	48 89 c2             	mov    %rax,%rdx
    cea3:	48 8d 05 3e 4e 03 00 	lea    0x34e3e(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ceaa:	48 89 c6             	mov    %rax,%rsi
    cead:	48 89 df             	mov    %rbx,%rdi
    ceb0:	e8 cb 84 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    ceb5:	bf 28 00 00 00       	mov    $0x28,%edi
    ceba:	e8 11 82 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    cebf:	48 89 c3             	mov    %rax,%rbx
    cec2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cec6:	48 89 c6             	mov    %rax,%rsi
    cec9:	48 89 df             	mov    %rbx,%rdi
    cecc:	e8 c7 ab ff ff       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    ced1:	48 8d 05 dc fc ff ff 	lea    -0x324(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    ced8:	48 89 c2             	mov    %rax,%rdx
    cedb:	48 8d 05 ee 4d 03 00 	lea    0x34dee(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    cee2:	48 89 c6             	mov    %rax,%rsi
    cee5:	48 89 df             	mov    %rbx,%rdi
    cee8:	e8 93 84 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    ceed:	bf 28 00 00 00       	mov    $0x28,%edi
    cef2:	e8 d9 81 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    cef7:	48 89 c3             	mov    %rax,%rbx
    cefa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cefe:	48 89 c6             	mov    %rax,%rsi
    cf01:	48 89 df             	mov    %rbx,%rdi
    cf04:	e8 61 ac ff ff       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
    cf09:	48 8d 05 34 fc ff ff 	lea    -0x3cc(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
    cf10:	48 89 c2             	mov    %rax,%rdx
    cf13:	48 8d 05 9e 4d 03 00 	lea    0x34d9e(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    cf1a:	48 89 c6             	mov    %rax,%rsi
    cf1d:	48 89 df             	mov    %rbx,%rdi
    cf20:	e8 5b 84 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    cf25:	bf 28 00 00 00       	mov    $0x28,%edi
    cf2a:	e8 a1 81 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    cf2f:	48 89 c3             	mov    %rax,%rbx
    cf32:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cf36:	48 89 c6             	mov    %rax,%rsi
    cf39:	48 89 df             	mov    %rbx,%rdi
    cf3c:	e8 fb ac ff ff       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
    cf41:	48 8d 05 8c fb ff ff 	lea    -0x474(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
    cf48:	48 89 c2             	mov    %rax,%rdx
    cf4b:	48 8d 05 4e 4d 03 00 	lea    0x34d4e(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    cf52:	48 89 c6             	mov    %rax,%rsi
    cf55:	48 89 df             	mov    %rbx,%rdi
    cf58:	e8 23 84 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    cf5d:	bf 28 00 00 00       	mov    $0x28,%edi
    cf62:	e8 69 81 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    cf67:	48 89 c3             	mov    %rax,%rbx
    cf6a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cf6e:	48 89 c6             	mov    %rax,%rsi
    cf71:	48 89 df             	mov    %rbx,%rdi
    cf74:	e8 95 ad ff ff       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    cf79:	48 8d 05 e4 fa ff ff 	lea    -0x51c(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    cf80:	48 89 c2             	mov    %rax,%rdx
    cf83:	48 8d 05 fe 4c 03 00 	lea    0x34cfe(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    cf8a:	48 89 c6             	mov    %rax,%rsi
    cf8d:	48 89 df             	mov    %rbx,%rdi
    cf90:	e8 eb 83 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    cf95:	bf 28 00 00 00       	mov    $0x28,%edi
    cf9a:	e8 31 81 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    cf9f:	48 89 c3             	mov    %rax,%rbx
    cfa2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cfa6:	48 89 c6             	mov    %rax,%rsi
    cfa9:	48 89 df             	mov    %rbx,%rdi
    cfac:	e8 2f ae ff ff       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
    cfb1:	48 8d 05 3c fa ff ff 	lea    -0x5c4(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
    cfb8:	48 89 c2             	mov    %rax,%rdx
    cfbb:	48 8d 05 ae 4c 03 00 	lea    0x34cae(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    cfc2:	48 89 c6             	mov    %rax,%rsi
    cfc5:	48 89 df             	mov    %rbx,%rdi
    cfc8:	e8 b3 83 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    cfcd:	bf 28 00 00 00       	mov    $0x28,%edi
    cfd2:	e8 f9 80 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    cfd7:	48 89 c3             	mov    %rax,%rbx
    cfda:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cfde:	48 89 c6             	mov    %rax,%rsi
    cfe1:	48 89 df             	mov    %rbx,%rdi
    cfe4:	e8 c9 ae ff ff       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    cfe9:	48 8d 05 94 f9 ff ff 	lea    -0x66c(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    cff0:	48 89 c2             	mov    %rax,%rdx
    cff3:	48 8d 05 5e 4c 03 00 	lea    0x34c5e(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    cffa:	48 89 c6             	mov    %rax,%rsi
    cffd:	48 89 df             	mov    %rbx,%rdi
    d000:	e8 7b 83 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    d005:	bf 28 00 00 00       	mov    $0x28,%edi
    d00a:	e8 c1 80 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d00f:	48 89 c3             	mov    %rax,%rbx
    d012:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d016:	48 89 c6             	mov    %rax,%rsi
    d019:	48 89 df             	mov    %rbx,%rdi
    d01c:	e8 63 af ff ff       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    d021:	48 8d 05 ec f8 ff ff 	lea    -0x714(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    d028:	48 89 c2             	mov    %rax,%rdx
    d02b:	48 8d 05 0e 4c 03 00 	lea    0x34c0e(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d032:	48 89 c6             	mov    %rax,%rsi
    d035:	48 89 df             	mov    %rbx,%rdi
    d038:	e8 43 83 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    d03d:	bf 28 00 00 00       	mov    $0x28,%edi
    d042:	e8 89 80 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d047:	48 89 c3             	mov    %rax,%rbx
    d04a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d04e:	48 89 c6             	mov    %rax,%rsi
    d051:	48 89 df             	mov    %rbx,%rdi
    d054:	e8 fd af ff ff       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    d059:	48 8d 05 44 f8 ff ff 	lea    -0x7bc(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    d060:	48 89 c2             	mov    %rax,%rdx
    d063:	48 8d 05 be 4b 03 00 	lea    0x34bbe(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d06a:	48 89 c6             	mov    %rax,%rsi
    d06d:	48 89 df             	mov    %rbx,%rdi
    d070:	e8 0b 83 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    d075:	bf 28 00 00 00       	mov    $0x28,%edi
    d07a:	e8 51 80 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d07f:	48 89 c3             	mov    %rax,%rbx
    d082:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d086:	48 89 c6             	mov    %rax,%rsi
    d089:	48 89 df             	mov    %rbx,%rdi
    d08c:	e8 97 b0 ff ff       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    d091:	48 8d 05 9c f7 ff ff 	lea    -0x864(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
    d098:	48 89 c2             	mov    %rax,%rdx
    d09b:	48 8d 05 6e 4b 03 00 	lea    0x34b6e(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d0a2:	48 89 c6             	mov    %rax,%rsi
    d0a5:	48 89 df             	mov    %rbx,%rdi
    d0a8:	e8 d3 82 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    d0ad:	bf 28 00 00 00       	mov    $0x28,%edi
    d0b2:	e8 19 80 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d0b7:	48 89 c3             	mov    %rax,%rbx
    d0ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d0be:	48 89 c6             	mov    %rax,%rsi
    d0c1:	48 89 df             	mov    %rbx,%rdi
    d0c4:	e8 31 b1 ff ff       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    d0c9:	48 8d 05 f4 f6 ff ff 	lea    -0x90c(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    d0d0:	48 89 c2             	mov    %rax,%rdx
    d0d3:	48 8d 05 1e 4b 03 00 	lea    0x34b1e(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d0da:	48 89 c6             	mov    %rax,%rsi
    d0dd:	48 89 df             	mov    %rbx,%rdi
    d0e0:	e8 9b 82 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    d0e5:	bf 28 00 00 00       	mov    $0x28,%edi
    d0ea:	e8 e1 7f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d0ef:	48 89 c3             	mov    %rax,%rbx
    d0f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d0f6:	48 89 c6             	mov    %rax,%rsi
    d0f9:	48 89 df             	mov    %rbx,%rdi
    d0fc:	e8 cb b1 ff ff       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
    d101:	48 8d 05 4c f6 ff ff 	lea    -0x9b4(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
    d108:	48 89 c2             	mov    %rax,%rdx
    d10b:	48 8d 05 ce 4a 03 00 	lea    0x34ace(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d112:	48 89 c6             	mov    %rax,%rsi
    d115:	48 89 df             	mov    %rbx,%rdi
    d118:	e8 63 82 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    d11d:	bf 28 00 00 00       	mov    $0x28,%edi
    d122:	e8 a9 7f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d127:	48 89 c3             	mov    %rax,%rbx
    d12a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d12e:	48 89 c6             	mov    %rax,%rsi
    d131:	48 89 df             	mov    %rbx,%rdi
    d134:	e8 65 b2 ff ff       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
    d139:	48 8d 05 a4 f5 ff ff 	lea    -0xa5c(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
    d140:	48 89 c2             	mov    %rax,%rdx
    d143:	48 8d 05 7e 4a 03 00 	lea    0x34a7e(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d14a:	48 89 c6             	mov    %rax,%rsi
    d14d:	48 89 df             	mov    %rbx,%rdi
    d150:	e8 2b 82 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    d155:	bf 28 00 00 00       	mov    $0x28,%edi
    d15a:	e8 71 7f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d15f:	48 89 c3             	mov    %rax,%rbx
    d162:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d166:	48 89 c6             	mov    %rax,%rsi
    d169:	48 89 df             	mov    %rbx,%rdi
    d16c:	e8 ff b2 ff ff       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    d171:	48 8d 05 fc f4 ff ff 	lea    -0xb04(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    d178:	48 89 c2             	mov    %rax,%rdx
    d17b:	48 8d 05 2e 4a 03 00 	lea    0x34a2e(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d182:	48 89 c6             	mov    %rax,%rsi
    d185:	48 89 df             	mov    %rbx,%rdi
    d188:	e8 f3 81 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    d18d:	bf 28 00 00 00       	mov    $0x28,%edi
    d192:	e8 39 7f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d197:	48 89 c3             	mov    %rax,%rbx
    d19a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d19e:	48 89 c6             	mov    %rax,%rsi
    d1a1:	48 89 df             	mov    %rbx,%rdi
    d1a4:	e8 99 b3 ff ff       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    d1a9:	48 8d 05 54 f4 ff ff 	lea    -0xbac(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    d1b0:	48 89 c2             	mov    %rax,%rdx
    d1b3:	48 8d 05 de 49 03 00 	lea    0x349de(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d1ba:	48 89 c6             	mov    %rax,%rsi
    d1bd:	48 89 df             	mov    %rbx,%rdi
    d1c0:	e8 bb 81 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    d1c5:	bf 28 00 00 00       	mov    $0x28,%edi
    d1ca:	e8 01 7f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d1cf:	48 89 c3             	mov    %rax,%rbx
    d1d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d1d6:	48 89 c6             	mov    %rax,%rsi
    d1d9:	48 89 df             	mov    %rbx,%rdi
    d1dc:	e8 33 b4 ff ff       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
    d1e1:	48 8d 05 ac f3 ff ff 	lea    -0xc54(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
    d1e8:	48 89 c2             	mov    %rax,%rdx
    d1eb:	48 8d 05 8e 49 03 00 	lea    0x3498e(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d1f2:	48 89 c6             	mov    %rax,%rsi
    d1f5:	48 89 df             	mov    %rbx,%rdi
    d1f8:	e8 83 81 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    d1fd:	bf 28 00 00 00       	mov    $0x28,%edi
    d202:	e8 c9 7e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d207:	48 89 c3             	mov    %rax,%rbx
    d20a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d20e:	48 89 c6             	mov    %rax,%rsi
    d211:	48 89 df             	mov    %rbx,%rdi
    d214:	e8 cd b4 ff ff       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    d219:	48 8d 05 04 f3 ff ff 	lea    -0xcfc(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    d220:	48 89 c2             	mov    %rax,%rdx
    d223:	48 8d 05 3e 49 03 00 	lea    0x3493e(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d22a:	48 89 c6             	mov    %rax,%rsi
    d22d:	48 89 df             	mov    %rbx,%rdi
    d230:	e8 4b 81 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    d235:	bf 28 00 00 00       	mov    $0x28,%edi
    d23a:	e8 91 7e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d23f:	48 89 c3             	mov    %rax,%rbx
    d242:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d246:	48 89 c6             	mov    %rax,%rsi
    d249:	48 89 df             	mov    %rbx,%rdi
    d24c:	e8 67 b5 ff ff       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    d251:	48 8d 05 5c f2 ff ff 	lea    -0xda4(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    d258:	48 89 c2             	mov    %rax,%rdx
    d25b:	48 8d 05 ee 48 03 00 	lea    0x348ee(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d262:	48 89 c6             	mov    %rax,%rsi
    d265:	48 89 df             	mov    %rbx,%rdi
    d268:	e8 13 81 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    d26d:	bf 28 00 00 00       	mov    $0x28,%edi
    d272:	e8 59 7e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d277:	48 89 c3             	mov    %rax,%rbx
    d27a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d27e:	48 89 c6             	mov    %rax,%rsi
    d281:	48 89 df             	mov    %rbx,%rdi
    d284:	e8 01 b6 ff ff       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    d289:	48 8d 05 b4 f1 ff ff 	lea    -0xe4c(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    d290:	48 89 c2             	mov    %rax,%rdx
    d293:	48 8d 05 9e 48 03 00 	lea    0x3489e(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d29a:	48 89 c6             	mov    %rax,%rsi
    d29d:	48 89 df             	mov    %rbx,%rdi
    d2a0:	e8 db 80 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    d2a5:	bf 28 00 00 00       	mov    $0x28,%edi
    d2aa:	e8 21 7e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d2af:	48 89 c3             	mov    %rax,%rbx
    d2b2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d2b6:	48 89 c6             	mov    %rax,%rsi
    d2b9:	48 89 df             	mov    %rbx,%rdi
    d2bc:	e8 9b b6 ff ff       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    d2c1:	48 8d 05 0c f1 ff ff 	lea    -0xef4(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    d2c8:	48 89 c2             	mov    %rax,%rdx
    d2cb:	48 8d 05 4e 48 03 00 	lea    0x3484e(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d2d2:	48 89 c6             	mov    %rax,%rsi
    d2d5:	48 89 df             	mov    %rbx,%rdi
    d2d8:	e8 a3 80 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    d2dd:	bf 28 00 00 00       	mov    $0x28,%edi
    d2e2:	e8 e9 7d ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d2e7:	48 89 c3             	mov    %rax,%rbx
    d2ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d2ee:	48 89 c6             	mov    %rax,%rsi
    d2f1:	48 89 df             	mov    %rbx,%rdi
    d2f4:	e8 35 b7 ff ff       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    d2f9:	48 8d 05 64 f0 ff ff 	lea    -0xf9c(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    d300:	48 89 c2             	mov    %rax,%rdx
    d303:	48 8d 05 fe 47 03 00 	lea    0x347fe(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d30a:	48 89 c6             	mov    %rax,%rsi
    d30d:	48 89 df             	mov    %rbx,%rdi
    d310:	e8 6b 80 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    d315:	bf 28 00 00 00       	mov    $0x28,%edi
    d31a:	e8 b1 7d ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d31f:	48 89 c3             	mov    %rax,%rbx
    d322:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d326:	48 89 c6             	mov    %rax,%rsi
    d329:	48 89 df             	mov    %rbx,%rdi
    d32c:	e8 cf b7 ff ff       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    d331:	48 8d 05 bc ef ff ff 	lea    -0x1044(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    d338:	48 89 c2             	mov    %rax,%rdx
    d33b:	48 8d 05 ae 47 03 00 	lea    0x347ae(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d342:	48 89 c6             	mov    %rax,%rsi
    d345:	48 89 df             	mov    %rbx,%rdi
    d348:	e8 33 80 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    d34d:	bf 28 00 00 00       	mov    $0x28,%edi
    d352:	e8 79 7d ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d357:	48 89 c3             	mov    %rax,%rbx
    d35a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d35e:	48 89 c6             	mov    %rax,%rsi
    d361:	48 89 df             	mov    %rbx,%rdi
    d364:	e8 69 b8 ff ff       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    d369:	48 8d 05 14 ef ff ff 	lea    -0x10ec(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    d370:	48 89 c2             	mov    %rax,%rdx
    d373:	48 8d 05 5e 47 03 00 	lea    0x3475e(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d37a:	48 89 c6             	mov    %rax,%rsi
    d37d:	48 89 df             	mov    %rbx,%rdi
    d380:	e8 fb 7f ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    d385:	bf 28 00 00 00       	mov    $0x28,%edi
    d38a:	e8 41 7d ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d38f:	48 89 c3             	mov    %rax,%rbx
    d392:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d396:	48 89 c6             	mov    %rax,%rsi
    d399:	48 89 df             	mov    %rbx,%rdi
    d39c:	e8 03 b9 ff ff       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    d3a1:	48 8d 05 6c ee ff ff 	lea    -0x1194(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    d3a8:	48 89 c2             	mov    %rax,%rdx
    d3ab:	48 8d 05 0e 47 03 00 	lea    0x3470e(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d3b2:	48 89 c6             	mov    %rax,%rsi
    d3b5:	48 89 df             	mov    %rbx,%rdi
    d3b8:	e8 c3 7f ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    d3bd:	bf 28 00 00 00       	mov    $0x28,%edi
    d3c2:	e8 09 7d ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d3c7:	48 89 c3             	mov    %rax,%rbx
    d3ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d3ce:	48 89 c6             	mov    %rax,%rsi
    d3d1:	48 89 df             	mov    %rbx,%rdi
    d3d4:	e8 9d b9 ff ff       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    d3d9:	48 8d 05 c4 ed ff ff 	lea    -0x123c(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    d3e0:	48 89 c2             	mov    %rax,%rdx
    d3e3:	48 8d 05 be 46 03 00 	lea    0x346be(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d3ea:	48 89 c6             	mov    %rax,%rsi
    d3ed:	48 89 df             	mov    %rbx,%rdi
    d3f0:	e8 8b 7f ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    d3f5:	bf 28 00 00 00       	mov    $0x28,%edi
    d3fa:	e8 d1 7c ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d3ff:	48 89 c3             	mov    %rax,%rbx
    d402:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d406:	48 89 c6             	mov    %rax,%rsi
    d409:	48 89 df             	mov    %rbx,%rdi
    d40c:	e8 37 ba ff ff       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    d411:	48 8d 05 1c ed ff ff 	lea    -0x12e4(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    d418:	48 89 c2             	mov    %rax,%rdx
    d41b:	48 8d 05 6e 46 03 00 	lea    0x3466e(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d422:	48 89 c6             	mov    %rax,%rsi
    d425:	48 89 df             	mov    %rbx,%rdi
    d428:	e8 53 7f ff ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    d42d:	bf 28 00 00 00       	mov    $0x28,%edi
    d432:	e8 99 7c ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d437:	48 89 c3             	mov    %rax,%rbx
    d43a:	8b 45 cc             	mov    -0x34(%rbp),%eax
    d43d:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    d440:	0f b6 05 11 4f 03 00 	movzbl 0x34f11(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    d447:	84 c0                	test   %al,%al
    d449:	0f 94 c0             	sete   %al
    d44c:	84 c0                	test   %al,%al
    d44e:	74 4a                	je     d49a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    d450:	48 8d 05 01 4f 03 00 	lea    0x34f01(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    d457:	48 89 c7             	mov    %rax,%rdi
    d45a:	e8 61 7f ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    d45f:	85 c0                	test   %eax,%eax
    d461:	0f 95 c0             	setne  %al
    d464:	84 c0                	test   %al,%al
    d466:	74 32                	je     d49a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    d468:	48 8d 05 89 4d 03 00 	lea    0x34d89(%rip),%rax        # 421f8 <__dso_handle>
    d46f:	48 89 c2             	mov    %rax,%rdx
    d472:	48 8d 05 87 4d 03 00 	lea    0x34d87(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    d479:	48 89 c6             	mov    %rax,%rsi
    d47c:	48 8d 05 11 f8 ff ff 	lea    -0x7ef(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    d483:	48 89 c7             	mov    %rax,%rdi
    d486:	e8 45 7d ff ff       	call   51d0 <__cxa_atexit@plt>
    d48b:	48 8d 05 c6 4e 03 00 	lea    0x34ec6(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    d492:	48 89 c7             	mov    %rax,%rdi
    d495:	e8 66 7c ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    d49a:	48 8d 15 5f 4d 03 00 	lea    0x34d5f(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    d4a1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    d4a4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d4a8:	89 ce                	mov    %ecx,%esi
    d4aa:	48 89 c7             	mov    %rax,%rdi
    d4ad:	e8 56 8e ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    d4b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4b6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    d4ba:	48 89 c6             	mov    %rax,%rsi
    d4bd:	48 89 d7             	mov    %rdx,%rdi
    d4c0:	89 f1                	mov    %esi,%ecx
    d4c2:	48 89 d0             	mov    %rdx,%rax
    d4c5:	89 ce                	mov    %ecx,%esi
    d4c7:	48 89 c2             	mov    %rax,%rdx
    d4ca:	48 89 df             	mov    %rbx,%rdi
    d4cd:	e8 3e a3 ff ff       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
    d4d2:	48 8d 05 6d a4 ff ff 	lea    -0x5b93(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
    d4d9:	48 89 c2             	mov    %rax,%rdx
    d4dc:	48 8d 05 1d 48 03 00 	lea    0x3481d(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    d4e3:	48 89 c6             	mov    %rax,%rsi
    d4e6:	48 89 df             	mov    %rbx,%rdi
    d4e9:	e8 92 7e ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    d4ee:	49 89 c4             	mov    %rax,%r12
    d4f1:	48 89 df             	mov    %rbx,%rdi
    d4f4:	e8 57 7c ff ff       	call   5150 <__cxa_free_exception@plt>
    d4f9:	4c 89 e0             	mov    %r12,%rax
    d4fc:	48 89 c7             	mov    %rax,%rdi
    d4ff:	e8 9c 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    d504:	49 89 c4             	mov    %rax,%r12
    d507:	48 89 df             	mov    %rbx,%rdi
    d50a:	e8 41 7c ff ff       	call   5150 <__cxa_free_exception@plt>
    d50f:	4c 89 e0             	mov    %r12,%rax
    d512:	48 89 c7             	mov    %rax,%rdi
    d515:	e8 86 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    d51a:	49 89 c4             	mov    %rax,%r12
    d51d:	48 89 df             	mov    %rbx,%rdi
    d520:	e8 2b 7c ff ff       	call   5150 <__cxa_free_exception@plt>
    d525:	4c 89 e0             	mov    %r12,%rax
    d528:	48 89 c7             	mov    %rax,%rdi
    d52b:	e8 70 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    d530:	49 89 c4             	mov    %rax,%r12
    d533:	48 89 df             	mov    %rbx,%rdi
    d536:	e8 15 7c ff ff       	call   5150 <__cxa_free_exception@plt>
    d53b:	4c 89 e0             	mov    %r12,%rax
    d53e:	48 89 c7             	mov    %rax,%rdi
    d541:	e8 5a 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    d546:	49 89 c4             	mov    %rax,%r12
    d549:	48 89 df             	mov    %rbx,%rdi
    d54c:	e8 ff 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d551:	4c 89 e0             	mov    %r12,%rax
    d554:	48 89 c7             	mov    %rax,%rdi
    d557:	e8 44 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    d55c:	49 89 c4             	mov    %rax,%r12
    d55f:	48 89 df             	mov    %rbx,%rdi
    d562:	e8 e9 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d567:	4c 89 e0             	mov    %r12,%rax
    d56a:	48 89 c7             	mov    %rax,%rdi
    d56d:	e8 2e 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    d572:	49 89 c4             	mov    %rax,%r12
    d575:	48 89 df             	mov    %rbx,%rdi
    d578:	e8 d3 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d57d:	4c 89 e0             	mov    %r12,%rax
    d580:	48 89 c7             	mov    %rax,%rdi
    d583:	e8 18 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    d588:	49 89 c4             	mov    %rax,%r12
    d58b:	48 89 df             	mov    %rbx,%rdi
    d58e:	e8 bd 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d593:	4c 89 e0             	mov    %r12,%rax
    d596:	48 89 c7             	mov    %rax,%rdi
    d599:	e8 02 7e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    d59e:	49 89 c4             	mov    %rax,%r12
    d5a1:	48 89 df             	mov    %rbx,%rdi
    d5a4:	e8 a7 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d5a9:	4c 89 e0             	mov    %r12,%rax
    d5ac:	48 89 c7             	mov    %rax,%rdi
    d5af:	e8 ec 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    d5b4:	49 89 c4             	mov    %rax,%r12
    d5b7:	48 89 df             	mov    %rbx,%rdi
    d5ba:	e8 91 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d5bf:	4c 89 e0             	mov    %r12,%rax
    d5c2:	48 89 c7             	mov    %rax,%rdi
    d5c5:	e8 d6 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    d5ca:	49 89 c4             	mov    %rax,%r12
    d5cd:	48 89 df             	mov    %rbx,%rdi
    d5d0:	e8 7b 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d5d5:	4c 89 e0             	mov    %r12,%rax
    d5d8:	48 89 c7             	mov    %rax,%rdi
    d5db:	e8 c0 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    d5e0:	49 89 c4             	mov    %rax,%r12
    d5e3:	48 89 df             	mov    %rbx,%rdi
    d5e6:	e8 65 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d5eb:	4c 89 e0             	mov    %r12,%rax
    d5ee:	48 89 c7             	mov    %rax,%rdi
    d5f1:	e8 aa 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    d5f6:	49 89 c4             	mov    %rax,%r12
    d5f9:	48 89 df             	mov    %rbx,%rdi
    d5fc:	e8 4f 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d601:	4c 89 e0             	mov    %r12,%rax
    d604:	48 89 c7             	mov    %rax,%rdi
    d607:	e8 94 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    d60c:	49 89 c4             	mov    %rax,%r12
    d60f:	48 89 df             	mov    %rbx,%rdi
    d612:	e8 39 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d617:	4c 89 e0             	mov    %r12,%rax
    d61a:	48 89 c7             	mov    %rax,%rdi
    d61d:	e8 7e 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    d622:	49 89 c4             	mov    %rax,%r12
    d625:	48 89 df             	mov    %rbx,%rdi
    d628:	e8 23 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d62d:	4c 89 e0             	mov    %r12,%rax
    d630:	48 89 c7             	mov    %rax,%rdi
    d633:	e8 68 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    d638:	49 89 c4             	mov    %rax,%r12
    d63b:	48 89 df             	mov    %rbx,%rdi
    d63e:	e8 0d 7b ff ff       	call   5150 <__cxa_free_exception@plt>
    d643:	4c 89 e0             	mov    %r12,%rax
    d646:	48 89 c7             	mov    %rax,%rdi
    d649:	e8 52 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    d64e:	49 89 c4             	mov    %rax,%r12
    d651:	48 89 df             	mov    %rbx,%rdi
    d654:	e8 f7 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d659:	4c 89 e0             	mov    %r12,%rax
    d65c:	48 89 c7             	mov    %rax,%rdi
    d65f:	e8 3c 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    d664:	49 89 c4             	mov    %rax,%r12
    d667:	48 89 df             	mov    %rbx,%rdi
    d66a:	e8 e1 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d66f:	4c 89 e0             	mov    %r12,%rax
    d672:	48 89 c7             	mov    %rax,%rdi
    d675:	e8 26 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    d67a:	49 89 c4             	mov    %rax,%r12
    d67d:	48 89 df             	mov    %rbx,%rdi
    d680:	e8 cb 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d685:	4c 89 e0             	mov    %r12,%rax
    d688:	48 89 c7             	mov    %rax,%rdi
    d68b:	e8 10 7d ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    d690:	49 89 c4             	mov    %rax,%r12
    d693:	48 89 df             	mov    %rbx,%rdi
    d696:	e8 b5 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d69b:	4c 89 e0             	mov    %r12,%rax
    d69e:	48 89 c7             	mov    %rax,%rdi
    d6a1:	e8 fa 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    d6a6:	49 89 c4             	mov    %rax,%r12
    d6a9:	48 89 df             	mov    %rbx,%rdi
    d6ac:	e8 9f 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d6b1:	4c 89 e0             	mov    %r12,%rax
    d6b4:	48 89 c7             	mov    %rax,%rdi
    d6b7:	e8 e4 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    d6bc:	49 89 c4             	mov    %rax,%r12
    d6bf:	48 89 df             	mov    %rbx,%rdi
    d6c2:	e8 89 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d6c7:	4c 89 e0             	mov    %r12,%rax
    d6ca:	48 89 c7             	mov    %rax,%rdi
    d6cd:	e8 ce 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    d6d2:	49 89 c4             	mov    %rax,%r12
    d6d5:	48 89 df             	mov    %rbx,%rdi
    d6d8:	e8 73 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d6dd:	4c 89 e0             	mov    %r12,%rax
    d6e0:	48 89 c7             	mov    %rax,%rdi
    d6e3:	e8 b8 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    d6e8:	49 89 c4             	mov    %rax,%r12
    d6eb:	48 89 df             	mov    %rbx,%rdi
    d6ee:	e8 5d 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d6f3:	4c 89 e0             	mov    %r12,%rax
    d6f6:	48 89 c7             	mov    %rax,%rdi
    d6f9:	e8 a2 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    d6fe:	49 89 c4             	mov    %rax,%r12
    d701:	48 89 df             	mov    %rbx,%rdi
    d704:	e8 47 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d709:	4c 89 e0             	mov    %r12,%rax
    d70c:	48 89 c7             	mov    %rax,%rdi
    d70f:	e8 8c 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    d714:	49 89 c4             	mov    %rax,%r12
    d717:	48 89 df             	mov    %rbx,%rdi
    d71a:	e8 31 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d71f:	4c 89 e0             	mov    %r12,%rax
    d722:	48 89 c7             	mov    %rax,%rdi
    d725:	e8 76 7c ff ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    d72a:	49 89 c4             	mov    %rax,%r12
    d72d:	48 89 df             	mov    %rbx,%rdi
    d730:	e8 1b 7a ff ff       	call   5150 <__cxa_free_exception@plt>
    d735:	4c 89 e0             	mov    %r12,%rax
    d738:	48 89 c7             	mov    %rax,%rdi
    d73b:	e8 60 7c ff ff       	call   53a0 <_Unwind_Resume@plt>

000000000000d740 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE>:
namespace rtvc {

vk::Format findSupportedFormat(const vk::raii::PhysicalDevice physicalDevice,
                               const std::vector<vk::Format> &candidates,
                               vk::ImageTiling tiling,
                               vk::FormatFeatureFlags features) {
    d740:	55                   	push   %rbp
    d741:	48 89 e5             	mov    %rsp,%rbp
    d744:	41 54                	push   %r12
    d746:	53                   	push   %rbx
    d747:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    d74e:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    d755:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    d75c:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
    d762:	89 8d 68 ff ff ff    	mov    %ecx,-0x98(%rbp)
  for (auto format : candidates) {
    d768:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d76f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d773:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d777:	48 89 c7             	mov    %rax,%rdi
    d77a:	e8 17 03 00 00       	call   da96 <_ZNKSt6vectorIN2vk6FormatESaIS1_EE5beginEv>
    d77f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d783:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d787:	48 89 c7             	mov    %rax,%rdi
    d78a:	e8 2d 03 00 00       	call   dabc <_ZNKSt6vectorIN2vk6FormatESaIS1_EE3endEv>
    d78f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d793:	e9 4f 01 00 00       	jmp    d8e7 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x1a7>
    d798:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d79c:	48 89 c7             	mov    %rax,%rdi
    d79f:	e8 80 02 00 00       	call   da24 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEdeEv>
    d7a4:	8b 00                	mov    (%rax),%eax
    d7a6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d7a9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d7b0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d7b4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d7b7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    }

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE VULKAN_HPP_NAMESPACE::FormatProperties
                                           PhysicalDevice::getFormatProperties( VULKAN_HPP_NAMESPACE::Format format ) const VULKAN_HPP_NOEXCEPT
    {
      VULKAN_HPP_NAMESPACE::FormatProperties formatProperties;
    d7ba:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
    d7c1:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    d7c8:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
      getDispatcher()->vkGetPhysicalDeviceFormatProperties(
    d7cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d7d3:	48 89 c7             	mov    %rax,%rdi
    d7d6:	e8 a9 01 00 00       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    d7db:	4c 8b 60 28          	mov    0x28(%rax),%r12
    d7df:	8b 5d d4             	mov    -0x2c(%rbp),%ebx
    d7e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d7e6:	48 89 c7             	mov    %rax,%rdi
    d7e9:	e8 84 01 00 00       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    d7ee:	48 89 c1             	mov    %rax,%rcx
    d7f1:	48 8d 45 84          	lea    -0x7c(%rbp),%rax
    d7f5:	48 89 c2             	mov    %rax,%rdx
    d7f8:	89 de                	mov    %ebx,%esi
    d7fa:	48 89 cf             	mov    %rcx,%rdi
    d7fd:	41 ff d4             	call   *%r12
        static_cast<VkPhysicalDevice>( m_physicalDevice ), static_cast<VkFormat>( format ), reinterpret_cast<VkFormatProperties *>( &formatProperties ) );

      return formatProperties;
    d800:	48 8b 45 84          	mov    -0x7c(%rbp),%rax
    d804:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d808:	8b 45 8c             	mov    -0x74(%rbp),%eax
    d80b:	89 45 d0             	mov    %eax,-0x30(%rbp)
    d80e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d812:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    d816:	8b 45 d0             	mov    -0x30(%rbp),%eax
    d819:	89 45 98             	mov    %eax,-0x68(%rbp)
    auto formatProperties = physicalDevice.getFormatProperties(format);
    d81c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d820:	48 89 45 9c          	mov    %rax,-0x64(%rbp)
    d824:	8b 45 98             	mov    -0x68(%rbp),%eax
    d827:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    if (tiling == vk::ImageTiling::eLinear &&
    d82a:	83 bd 6c ff ff ff 01 	cmpl   $0x1,-0x94(%rbp)
    d831:	75 3e                	jne    d871 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x131>
        formatProperties.linearTilingFeatures &
            vk::FormatFeatureFlagBits::eDepthStencilAttachment) {
    d833:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    d837:	be 00 02 00 00       	mov    $0x200,%esi
    d83c:	48 89 c7             	mov    %rax,%rdi
    d83f:	e8 f2 01 00 00       	call   da36 <_ZN2vk5FlagsINS_21FormatFeatureFlagBitsEEC1ES1_>
    d844:	48 8d 55 bc          	lea    -0x44(%rbp),%rdx
    d848:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
    d84c:	48 89 d6             	mov    %rdx,%rsi
    d84f:	48 89 c7             	mov    %rax,%rdi
    d852:	e8 f7 01 00 00       	call   da4e <_ZNK2vk5FlagsINS_21FormatFeatureFlagBitsEEanERKS2_>
    d857:	89 45 b8             	mov    %eax,-0x48(%rbp)
    d85a:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    d85e:	48 89 c7             	mov    %rax,%rdi
    d861:	e8 1a 02 00 00       	call   da80 <_ZNK2vk5FlagsINS_21FormatFeatureFlagBitsEEcvbEv>
    if (tiling == vk::ImageTiling::eLinear &&
    d866:	84 c0                	test   %al,%al
    d868:	74 07                	je     d871 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x131>
    d86a:	b8 01 00 00 00       	mov    $0x1,%eax
    d86f:	eb 05                	jmp    d876 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x136>
    d871:	b8 00 00 00 00       	mov    $0x0,%eax
    d876:	84 c0                	test   %al,%al
    d878:	74 08                	je     d882 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x142>
      return format;
    d87a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d87d:	e9 d4 00 00 00       	jmp    d956 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x216>
    } else if (tiling == vk::ImageTiling::eOptimal &&
    d882:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
    d889:	75 42                	jne    d8cd <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x18d>
               formatProperties.optimalTilingFeatures &
                   vk::FormatFeatureFlagBits::eDepthStencilAttachment) {
    d88b:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    d88f:	be 00 02 00 00       	mov    $0x200,%esi
    d894:	48 89 c7             	mov    %rax,%rdi
    d897:	e8 9a 01 00 00       	call   da36 <_ZN2vk5FlagsINS_21FormatFeatureFlagBitsEEC1ES1_>
    d89c:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    d8a0:	48 8d 55 9c          	lea    -0x64(%rbp),%rdx
    d8a4:	48 83 c2 04          	add    $0x4,%rdx
    d8a8:	48 89 c6             	mov    %rax,%rsi
    d8ab:	48 89 d7             	mov    %rdx,%rdi
    d8ae:	e8 9b 01 00 00       	call   da4e <_ZNK2vk5FlagsINS_21FormatFeatureFlagBitsEEanERKS2_>
    d8b3:	89 45 c0             	mov    %eax,-0x40(%rbp)
    d8b6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d8ba:	48 89 c7             	mov    %rax,%rdi
    d8bd:	e8 be 01 00 00       	call   da80 <_ZNK2vk5FlagsINS_21FormatFeatureFlagBitsEEcvbEv>
    } else if (tiling == vk::ImageTiling::eOptimal &&
    d8c2:	84 c0                	test   %al,%al
    d8c4:	74 07                	je     d8cd <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x18d>
    d8c6:	b8 01 00 00 00       	mov    $0x1,%eax
    d8cb:	eb 05                	jmp    d8d2 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x192>
    d8cd:	b8 00 00 00 00       	mov    $0x0,%eax
    d8d2:	84 c0                	test   %al,%al
    d8d4:	74 05                	je     d8db <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x19b>
      return format;
    d8d6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    d8d9:	eb 7b                	jmp    d956 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x216>
  for (auto format : candidates) {
    d8db:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d8df:	48 89 c7             	mov    %rax,%rdi
    d8e2:	e8 ff 01 00 00       	call   dae6 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEppEv>
    d8e7:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    d8eb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d8ef:	48 89 d6             	mov    %rdx,%rsi
    d8f2:	48 89 c7             	mov    %rax,%rdi
    d8f5:	e8 e0 00 00 00       	call   d9da <_ZN9__gnu_cxxeqIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    d8fa:	83 f0 01             	xor    $0x1,%eax
    d8fd:	84 c0                	test   %al,%al
    d8ff:	0f 85 93 fe ff ff    	jne    d798 <_ZN4rtvc19findSupportedFormatEN2vk4raii14PhysicalDeviceERKSt6vectorINS0_6FormatESaIS4_EENS0_11ImageTilingENS0_5FlagsINS0_21FormatFeatureFlagBitsEEE+0x58>
    }
  }
  throw std::runtime_error("Failed to find supported format");
    d905:	bf 10 00 00 00       	mov    $0x10,%edi
    d90a:	e8 c1 77 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    d90f:	48 89 c3             	mov    %rax,%rbx
    d912:	48 8d 05 1f d5 01 00 	lea    0x1d51f(%rip),%rax        # 2ae38 <_ZNSt8__detailL19__atomic_spin_countE+0xbc>
    d919:	48 89 c6             	mov    %rax,%rsi
    d91c:	48 89 df             	mov    %rbx,%rdi
    d91f:	e8 6c 77 ff ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
    d924:	48 8b 05 85 46 03 00 	mov    0x34685(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d92b:	48 89 c2             	mov    %rax,%rdx
    d92e:	48 8d 05 cb 40 03 00 	lea    0x340cb(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d935:	48 89 c6             	mov    %rax,%rsi
    d938:	48 89 df             	mov    %rbx,%rdi
    d93b:	e8 40 7a ff ff       	call   5380 <__cxa_throw@plt>
    d940:	49 89 c4             	mov    %rax,%r12
    d943:	48 89 df             	mov    %rbx,%rdi
    d946:	e8 05 78 ff ff       	call   5150 <__cxa_free_exception@plt>
    d94b:	4c 89 e0             	mov    %r12,%rax
    d94e:	48 89 c7             	mov    %rax,%rdi
    d951:	e8 4a 7a ff ff       	call   53a0 <_Unwind_Resume@plt>
}
    d956:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    d95d:	5b                   	pop    %rbx
    d95e:	41 5c                	pop    %r12
    d960:	5d                   	pop    %rbp
    d961:	c3                   	ret

000000000000d962 <_ZN4rtvc15makeDepthBufferEv>:

DepthBufferWrapper makeDepthBuffer() {}
    d962:	55                   	push   %rbp
    d963:	48 89 e5             	mov    %rsp,%rbp
    d966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d96a:	90                   	nop
    d96b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d96f:	5d                   	pop    %rbp
    d970:	c3                   	ret
    d971:	90                   	nop

000000000000d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>:
    operator VkPhysicalDevice() const VULKAN_HPP_NOEXCEPT
    d972:	55                   	push   %rbp
    d973:	48 89 e5             	mov    %rsp,%rbp
    d976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return m_physicalDevice;
    d97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d97e:	48 8b 00             	mov    (%rax),%rax
    }
    d981:	5d                   	pop    %rbp
    d982:	c3                   	ret
    d983:	90                   	nop

000000000000d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * getDispatcher() const
    d984:	55                   	push   %rbp
    d985:	48 89 e5             	mov    %rsp,%rbp
    d988:	48 83 ec 10          	sub    $0x10,%rsp
    d98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
    d990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d994:	48 8b 40 08          	mov    0x8(%rax),%rax
    d998:	48 89 c7             	mov    %rax,%rdi
    d99b:	e8 b2 8b ff ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
    d9a0:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
    d9a6:	74 28                	je     d9d0 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv+0x4c>
    d9a8:	48 8d 05 d1 d3 01 00 	lea    0x1d3d1(%rip),%rax        # 2ad80 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
    d9af:	48 89 c1             	mov    %rax,%rcx
    d9b2:	ba 0a 0b 00 00       	mov    $0xb0a,%edx
    d9b7:	48 8d 05 1a d4 01 00 	lea    0x1d41a(%rip),%rax        # 2add8 <_ZNSt8__detailL19__atomic_spin_countE+0x5c>
    d9be:	48 89 c6             	mov    %rax,%rsi
    d9c1:	48 8d 05 38 d4 01 00 	lea    0x1d438(%rip),%rax        # 2ae00 <_ZNSt8__detailL19__atomic_spin_countE+0x84>
    d9c8:	48 89 c7             	mov    %rax,%rdi
    d9cb:	e8 40 77 ff ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
    d9d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9d4:	48 8b 40 08          	mov    0x8(%rax),%rax
      }
    d9d8:	c9                   	leave
    d9d9:	c3                   	ret

000000000000d9da <_ZN9__gnu_cxxeqIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }

  template<typename _Iterator, typename _Container>
    [[nodiscard]]
    constexpr bool
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    d9da:	55                   	push   %rbp
    d9db:	48 89 e5             	mov    %rsp,%rbp
    d9de:	53                   	push   %rbx
    d9df:	48 83 ec 18          	sub    $0x18,%rsp
    d9e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d9e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    noexcept(noexcept(__lhs.base() == __rhs.base()))
    requires requires {
      { __lhs.base() == __rhs.base() } -> std::convertible_to<bool>;
    }
    { return __lhs.base() == __rhs.base(); }
    d9eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9ef:	48 89 c7             	mov    %rax,%rdi
    d9f2:	e8 1f 00 00 00       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEE4baseEv>
    d9f7:	48 8b 18             	mov    (%rax),%rbx
    d9fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d9fe:	48 89 c7             	mov    %rax,%rdi
    da01:	e8 10 00 00 00       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEE4baseEv>
    da06:	48 8b 00             	mov    (%rax),%rax
    da09:	48 39 c3             	cmp    %rax,%rbx
    da0c:	0f 94 c0             	sete   %al
    da0f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    da13:	c9                   	leave
    da14:	c3                   	ret
    da15:	90                   	nop

000000000000da16 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    da16:	55                   	push   %rbp
    da17:	48 89 e5             	mov    %rsp,%rbp
    da1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    da1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da22:	5d                   	pop    %rbp
    da23:	c3                   	ret

000000000000da24 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    da24:	55                   	push   %rbp
    da25:	48 89 e5             	mov    %rsp,%rbp
    da28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    da2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da30:	48 8b 00             	mov    (%rax),%rax
    da33:	5d                   	pop    %rbp
    da34:	c3                   	ret
    da35:	90                   	nop

000000000000da36 <_ZN2vk5FlagsINS_21FormatFeatureFlagBitsEEC1ES1_>:
    VULKAN_HPP_CONSTEXPR Flags( BitType bit ) VULKAN_HPP_NOEXCEPT : m_mask( static_cast<MaskType>( bit ) ) {}
    da36:	55                   	push   %rbp
    da37:	48 89 e5             	mov    %rsp,%rbp
    da3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da3e:	89 75 f4             	mov    %esi,-0xc(%rbp)
    da41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da45:	8b 55 f4             	mov    -0xc(%rbp),%edx
    da48:	89 10                	mov    %edx,(%rax)
    da4a:	90                   	nop
    da4b:	5d                   	pop    %rbp
    da4c:	c3                   	ret
    da4d:	90                   	nop

000000000000da4e <_ZNK2vk5FlagsINS_21FormatFeatureFlagBitsEEanERKS2_>:
    VULKAN_HPP_CONSTEXPR Flags<BitType> operator&( Flags<BitType> const & rhs ) const VULKAN_HPP_NOEXCEPT
    da4e:	55                   	push   %rbp
    da4f:	48 89 e5             	mov    %rsp,%rbp
    da52:	48 83 ec 20          	sub    $0x20,%rsp
    da56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return Flags<BitType>( m_mask & rhs.m_mask );
    da5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da62:	8b 10                	mov    (%rax),%edx
    da64:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    da68:	8b 00                	mov    (%rax),%eax
    da6a:	21 c2                	and    %eax,%edx
    da6c:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
    da70:	89 d6                	mov    %edx,%esi
    da72:	48 89 c7             	mov    %rax,%rdi
    da75:	e8 8c 00 00 00       	call   db06 <_ZN2vk5FlagsINS_21FormatFeatureFlagBitsEEC1Ej>
    da7a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
    da7d:	c9                   	leave
    da7e:	c3                   	ret
    da7f:	90                   	nop

000000000000da80 <_ZNK2vk5FlagsINS_21FormatFeatureFlagBitsEEcvbEv>:
    explicit VULKAN_HPP_CONSTEXPR operator bool() const VULKAN_HPP_NOEXCEPT
    da80:	55                   	push   %rbp
    da81:	48 89 e5             	mov    %rsp,%rbp
    da84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !!m_mask;
    da88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8c:	8b 00                	mov    (%rax),%eax
    da8e:	85 c0                	test   %eax,%eax
    da90:	0f 95 c0             	setne  %al
    }
    da93:	5d                   	pop    %rbp
    da94:	c3                   	ret
    da95:	90                   	nop

000000000000da96 <_ZNKSt6vectorIN2vk6FormatESaIS1_EE5beginEv>:
       *  first element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      const_iterator
      begin() const _GLIBCXX_NOEXCEPT
    da96:	55                   	push   %rbp
    da97:	48 89 e5             	mov    %rsp,%rbp
    da9a:	48 83 ec 20          	sub    $0x20,%rsp
    da9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    daa2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    daa6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    daaa:	48 89 d6             	mov    %rdx,%rsi
    daad:	48 89 c7             	mov    %rax,%rdi
    dab0:	e8 69 00 00 00       	call   db1e <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEC1ERKS4_>
    dab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dab9:	c9                   	leave
    daba:	c3                   	ret
    dabb:	90                   	nop

000000000000dabc <_ZNKSt6vectorIN2vk6FormatESaIS1_EE3endEv>:
       *  the last element in the %vector.  Iteration is done in
       *  ordinary element order.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      const_iterator
      end() const _GLIBCXX_NOEXCEPT
    dabc:	55                   	push   %rbp
    dabd:	48 89 e5             	mov    %rsp,%rbp
    dac0:	48 83 ec 20          	sub    $0x20,%rsp
    dac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    dac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dacc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    dad0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dad4:	48 89 d6             	mov    %rdx,%rsi
    dad7:	48 89 c7             	mov    %rax,%rdi
    dada:	e8 3f 00 00 00       	call   db1e <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEC1ERKS4_>
    dadf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dae3:	c9                   	leave
    dae4:	c3                   	ret
    dae5:	90                   	nop

000000000000dae6 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    dae6:	55                   	push   %rbp
    dae7:	48 89 e5             	mov    %rsp,%rbp
    daea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    daee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daf2:	48 8b 00             	mov    (%rax),%rax
    daf5:	48 8d 50 04          	lea    0x4(%rax),%rdx
    daf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dafd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    db00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    db04:	5d                   	pop    %rbp
    db05:	c3                   	ret

000000000000db06 <_ZN2vk5FlagsINS_21FormatFeatureFlagBitsEEC1Ej>:
    VULKAN_HPP_CONSTEXPR explicit Flags( MaskType flags ) VULKAN_HPP_NOEXCEPT : m_mask( flags ) {}
    db06:	55                   	push   %rbp
    db07:	48 89 e5             	mov    %rsp,%rbp
    db0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db0e:	89 75 f4             	mov    %esi,-0xc(%rbp)
    db11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db15:	8b 55 f4             	mov    -0xc(%rbp),%edx
    db18:	89 10                	mov    %edx,(%rax)
    db1a:	90                   	nop
    db1b:	5d                   	pop    %rbp
    db1c:	c3                   	ret
    db1d:	90                   	nop

000000000000db1e <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk6FormatESt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    db1e:	55                   	push   %rbp
    db1f:	48 89 e5             	mov    %rsp,%rbp
    db22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    db2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    db2e:	48 8b 10             	mov    (%rax),%rdx
    db31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db35:	48 89 10             	mov    %rdx,(%rax)
    db38:	90                   	nop
    db39:	5d                   	pop    %rbp
    db3a:	c3                   	ret

000000000000db3b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
    db3b:	55                   	push   %rbp
    db3c:	48 89 e5             	mov    %rsp,%rbp
    db3f:	41 54                	push   %r12
    db41:	53                   	push   %rbx
    db42:	48 83 ec 30          	sub    $0x30,%rsp
    db46:	89 7d cc             	mov    %edi,-0x34(%rbp)
    db49:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    db4d:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    db51:	0f 89 28 07 00 00    	jns    e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    db57:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    db5b:	0f 8d 3d 01 00 00    	jge    dc9e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    db61:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    db68:	0f 84 19 05 00 00    	je     e087 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    db6e:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    db75:	0f 8f 04 07 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    db7b:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    db82:	0f 84 37 05 00 00    	je     e0bf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    db88:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    db8f:	0f 8f ea 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    db95:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    db9c:	0f 84 55 05 00 00    	je     e0f7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    dba2:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    dba9:	0f 8f d0 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dbaf:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    dbb6:	0f 84 73 05 00 00    	je     e12f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    dbbc:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    dbc3:	0f 8f b6 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dbc9:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    dbd0:	0f 84 91 05 00 00    	je     e167 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    dbd6:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    dbdd:	0f 8f 9c 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dbe3:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    dbea:	0f 84 af 05 00 00    	je     e19f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    dbf0:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    dbf7:	0f 8f 82 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dbfd:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    dc04:	0f 84 9d 03 00 00    	je     dfa7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    dc0a:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    dc11:	0f 8f 68 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dc17:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    dc1e:	0f 84 bb 03 00 00    	je     dfdf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    dc24:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    dc2b:	0f 8f 4e 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dc31:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    dc38:	0f 84 99 05 00 00    	je     e1d7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    dc3e:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    dc45:	0f 8f 34 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dc4b:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    dc52:	0f 84 bf 03 00 00    	je     e017 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    dc58:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    dc5f:	0f 8f 1a 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dc65:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    dc6c:	0f 84 9d 05 00 00    	je     e20f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    dc72:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    dc79:	0f 8f 00 06 00 00    	jg     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dc7f:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    dc86:	0f 84 bb 05 00 00    	je     e247 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    dc8c:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    dc93:	0f 84 b6 03 00 00    	je     e04f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    dc99:	e9 e1 05 00 00       	jmp    e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dc9e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    dca1:	83 c0 0d             	add    $0xd,%eax
    dca4:	83 f8 0c             	cmp    $0xc,%eax
    dca7:	0f 87 d2 05 00 00    	ja     e27f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    dcad:	89 c0                	mov    %eax,%eax
    dcaf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    dcb6:	00 
    dcb7:	48 8d 05 ca db 01 00 	lea    0x1dbca(%rip),%rax        # 2b888 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x338>
    dcbe:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    dcc1:	48 98                	cltq
    dcc3:	48 8d 15 be db 01 00 	lea    0x1dbbe(%rip),%rdx        # 2b888 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x338>
    dcca:	48 01 d0             	add    %rdx,%rax
    dccd:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    dccf:	bf 28 00 00 00       	mov    $0x28,%edi
    dcd4:	e8 f7 73 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    dcd9:	48 89 c3             	mov    %rax,%rbx
    dcdc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dce0:	48 89 c6             	mov    %rax,%rsi
    dce3:	48 89 df             	mov    %rbx,%rdi
    dce6:	e8 db 9c ff ff       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    dceb:	48 8d 05 32 ef ff ff 	lea    -0x10ce(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    dcf2:	48 89 c2             	mov    %rax,%rdx
    dcf5:	48 8d 05 ec 3f 03 00 	lea    0x33fec(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    dcfc:	48 89 c6             	mov    %rax,%rsi
    dcff:	48 89 df             	mov    %rbx,%rdi
    dd02:	e8 79 76 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    dd07:	bf 28 00 00 00       	mov    $0x28,%edi
    dd0c:	e8 bf 73 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    dd11:	48 89 c3             	mov    %rax,%rbx
    dd14:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dd18:	48 89 c6             	mov    %rax,%rsi
    dd1b:	48 89 df             	mov    %rbx,%rdi
    dd1e:	e8 75 9d ff ff       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    dd23:	48 8d 05 8a ee ff ff 	lea    -0x1176(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    dd2a:	48 89 c2             	mov    %rax,%rdx
    dd2d:	48 8d 05 9c 3f 03 00 	lea    0x33f9c(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    dd34:	48 89 c6             	mov    %rax,%rsi
    dd37:	48 89 df             	mov    %rbx,%rdi
    dd3a:	e8 41 76 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    dd3f:	bf 28 00 00 00       	mov    $0x28,%edi
    dd44:	e8 87 73 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    dd49:	48 89 c3             	mov    %rax,%rbx
    dd4c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dd50:	48 89 c6             	mov    %rax,%rsi
    dd53:	48 89 df             	mov    %rbx,%rdi
    dd56:	e8 0f 9e ff ff       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
    dd5b:	48 8d 05 e2 ed ff ff 	lea    -0x121e(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
    dd62:	48 89 c2             	mov    %rax,%rdx
    dd65:	48 8d 05 4c 3f 03 00 	lea    0x33f4c(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    dd6c:	48 89 c6             	mov    %rax,%rsi
    dd6f:	48 89 df             	mov    %rbx,%rdi
    dd72:	e8 09 76 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    dd77:	bf 28 00 00 00       	mov    $0x28,%edi
    dd7c:	e8 4f 73 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    dd81:	48 89 c3             	mov    %rax,%rbx
    dd84:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dd88:	48 89 c6             	mov    %rax,%rsi
    dd8b:	48 89 df             	mov    %rbx,%rdi
    dd8e:	e8 a9 9e ff ff       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
    dd93:	48 8d 05 3a ed ff ff 	lea    -0x12c6(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
    dd9a:	48 89 c2             	mov    %rax,%rdx
    dd9d:	48 8d 05 fc 3e 03 00 	lea    0x33efc(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    dda4:	48 89 c6             	mov    %rax,%rsi
    dda7:	48 89 df             	mov    %rbx,%rdi
    ddaa:	e8 d1 75 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    ddaf:	bf 28 00 00 00       	mov    $0x28,%edi
    ddb4:	e8 17 73 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ddb9:	48 89 c3             	mov    %rax,%rbx
    ddbc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ddc0:	48 89 c6             	mov    %rax,%rsi
    ddc3:	48 89 df             	mov    %rbx,%rdi
    ddc6:	e8 43 9f ff ff       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    ddcb:	48 8d 05 92 ec ff ff 	lea    -0x136e(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    ddd2:	48 89 c2             	mov    %rax,%rdx
    ddd5:	48 8d 05 ac 3e 03 00 	lea    0x33eac(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    dddc:	48 89 c6             	mov    %rax,%rsi
    dddf:	48 89 df             	mov    %rbx,%rdi
    dde2:	e8 99 75 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    dde7:	bf 28 00 00 00       	mov    $0x28,%edi
    ddec:	e8 df 72 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ddf1:	48 89 c3             	mov    %rax,%rbx
    ddf4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ddf8:	48 89 c6             	mov    %rax,%rsi
    ddfb:	48 89 df             	mov    %rbx,%rdi
    ddfe:	e8 dd 9f ff ff       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
    de03:	48 8d 05 ea eb ff ff 	lea    -0x1416(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
    de0a:	48 89 c2             	mov    %rax,%rdx
    de0d:	48 8d 05 5c 3e 03 00 	lea    0x33e5c(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    de14:	48 89 c6             	mov    %rax,%rsi
    de17:	48 89 df             	mov    %rbx,%rdi
    de1a:	e8 61 75 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    de1f:	bf 28 00 00 00       	mov    $0x28,%edi
    de24:	e8 a7 72 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    de29:	48 89 c3             	mov    %rax,%rbx
    de2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    de30:	48 89 c6             	mov    %rax,%rsi
    de33:	48 89 df             	mov    %rbx,%rdi
    de36:	e8 77 a0 ff ff       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    de3b:	48 8d 05 42 eb ff ff 	lea    -0x14be(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    de42:	48 89 c2             	mov    %rax,%rdx
    de45:	48 8d 05 0c 3e 03 00 	lea    0x33e0c(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    de4c:	48 89 c6             	mov    %rax,%rsi
    de4f:	48 89 df             	mov    %rbx,%rdi
    de52:	e8 29 75 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    de57:	bf 28 00 00 00       	mov    $0x28,%edi
    de5c:	e8 6f 72 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    de61:	48 89 c3             	mov    %rax,%rbx
    de64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    de68:	48 89 c6             	mov    %rax,%rsi
    de6b:	48 89 df             	mov    %rbx,%rdi
    de6e:	e8 11 a1 ff ff       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    de73:	48 8d 05 9a ea ff ff 	lea    -0x1566(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    de7a:	48 89 c2             	mov    %rax,%rdx
    de7d:	48 8d 05 bc 3d 03 00 	lea    0x33dbc(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    de84:	48 89 c6             	mov    %rax,%rsi
    de87:	48 89 df             	mov    %rbx,%rdi
    de8a:	e8 f1 74 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    de8f:	bf 28 00 00 00       	mov    $0x28,%edi
    de94:	e8 37 72 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    de99:	48 89 c3             	mov    %rax,%rbx
    de9c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dea0:	48 89 c6             	mov    %rax,%rsi
    dea3:	48 89 df             	mov    %rbx,%rdi
    dea6:	e8 ab a1 ff ff       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    deab:	48 8d 05 f2 e9 ff ff 	lea    -0x160e(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    deb2:	48 89 c2             	mov    %rax,%rdx
    deb5:	48 8d 05 6c 3d 03 00 	lea    0x33d6c(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    debc:	48 89 c6             	mov    %rax,%rsi
    debf:	48 89 df             	mov    %rbx,%rdi
    dec2:	e8 b9 74 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    dec7:	bf 28 00 00 00       	mov    $0x28,%edi
    decc:	e8 ff 71 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ded1:	48 89 c3             	mov    %rax,%rbx
    ded4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ded8:	48 89 c6             	mov    %rax,%rsi
    dedb:	48 89 df             	mov    %rbx,%rdi
    dede:	e8 45 a2 ff ff       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    dee3:	48 8d 05 4a e9 ff ff 	lea    -0x16b6(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
    deea:	48 89 c2             	mov    %rax,%rdx
    deed:	48 8d 05 1c 3d 03 00 	lea    0x33d1c(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    def4:	48 89 c6             	mov    %rax,%rsi
    def7:	48 89 df             	mov    %rbx,%rdi
    defa:	e8 81 74 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    deff:	bf 28 00 00 00       	mov    $0x28,%edi
    df04:	e8 c7 71 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    df09:	48 89 c3             	mov    %rax,%rbx
    df0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    df10:	48 89 c6             	mov    %rax,%rsi
    df13:	48 89 df             	mov    %rbx,%rdi
    df16:	e8 df a2 ff ff       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    df1b:	48 8d 05 a2 e8 ff ff 	lea    -0x175e(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    df22:	48 89 c2             	mov    %rax,%rdx
    df25:	48 8d 05 cc 3c 03 00 	lea    0x33ccc(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    df2c:	48 89 c6             	mov    %rax,%rsi
    df2f:	48 89 df             	mov    %rbx,%rdi
    df32:	e8 49 74 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    df37:	bf 28 00 00 00       	mov    $0x28,%edi
    df3c:	e8 8f 71 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    df41:	48 89 c3             	mov    %rax,%rbx
    df44:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    df48:	48 89 c6             	mov    %rax,%rsi
    df4b:	48 89 df             	mov    %rbx,%rdi
    df4e:	e8 79 a3 ff ff       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
    df53:	48 8d 05 fa e7 ff ff 	lea    -0x1806(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
    df5a:	48 89 c2             	mov    %rax,%rdx
    df5d:	48 8d 05 7c 3c 03 00 	lea    0x33c7c(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    df64:	48 89 c6             	mov    %rax,%rsi
    df67:	48 89 df             	mov    %rbx,%rdi
    df6a:	e8 11 74 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    df6f:	bf 28 00 00 00       	mov    $0x28,%edi
    df74:	e8 57 71 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    df79:	48 89 c3             	mov    %rax,%rbx
    df7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    df80:	48 89 c6             	mov    %rax,%rsi
    df83:	48 89 df             	mov    %rbx,%rdi
    df86:	e8 13 a4 ff ff       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
    df8b:	48 8d 05 52 e7 ff ff 	lea    -0x18ae(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
    df92:	48 89 c2             	mov    %rax,%rdx
    df95:	48 8d 05 2c 3c 03 00 	lea    0x33c2c(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    df9c:	48 89 c6             	mov    %rax,%rsi
    df9f:	48 89 df             	mov    %rbx,%rdi
    dfa2:	e8 d9 73 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    dfa7:	bf 28 00 00 00       	mov    $0x28,%edi
    dfac:	e8 1f 71 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    dfb1:	48 89 c3             	mov    %rax,%rbx
    dfb4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dfb8:	48 89 c6             	mov    %rax,%rsi
    dfbb:	48 89 df             	mov    %rbx,%rdi
    dfbe:	e8 ad a4 ff ff       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    dfc3:	48 8d 05 aa e6 ff ff 	lea    -0x1956(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    dfca:	48 89 c2             	mov    %rax,%rdx
    dfcd:	48 8d 05 dc 3b 03 00 	lea    0x33bdc(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    dfd4:	48 89 c6             	mov    %rax,%rsi
    dfd7:	48 89 df             	mov    %rbx,%rdi
    dfda:	e8 a1 73 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    dfdf:	bf 28 00 00 00       	mov    $0x28,%edi
    dfe4:	e8 e7 70 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    dfe9:	48 89 c3             	mov    %rax,%rbx
    dfec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dff0:	48 89 c6             	mov    %rax,%rsi
    dff3:	48 89 df             	mov    %rbx,%rdi
    dff6:	e8 47 a5 ff ff       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    dffb:	48 8d 05 02 e6 ff ff 	lea    -0x19fe(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    e002:	48 89 c2             	mov    %rax,%rdx
    e005:	48 8d 05 8c 3b 03 00 	lea    0x33b8c(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e00c:	48 89 c6             	mov    %rax,%rsi
    e00f:	48 89 df             	mov    %rbx,%rdi
    e012:	e8 69 73 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    e017:	bf 28 00 00 00       	mov    $0x28,%edi
    e01c:	e8 af 70 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e021:	48 89 c3             	mov    %rax,%rbx
    e024:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e028:	48 89 c6             	mov    %rax,%rsi
    e02b:	48 89 df             	mov    %rbx,%rdi
    e02e:	e8 e1 a5 ff ff       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
    e033:	48 8d 05 5a e5 ff ff 	lea    -0x1aa6(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
    e03a:	48 89 c2             	mov    %rax,%rdx
    e03d:	48 8d 05 3c 3b 03 00 	lea    0x33b3c(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e044:	48 89 c6             	mov    %rax,%rsi
    e047:	48 89 df             	mov    %rbx,%rdi
    e04a:	e8 31 73 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    e04f:	bf 28 00 00 00       	mov    $0x28,%edi
    e054:	e8 77 70 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e059:	48 89 c3             	mov    %rax,%rbx
    e05c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e060:	48 89 c6             	mov    %rax,%rsi
    e063:	48 89 df             	mov    %rbx,%rdi
    e066:	e8 7b a6 ff ff       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    e06b:	48 8d 05 b2 e4 ff ff 	lea    -0x1b4e(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    e072:	48 89 c2             	mov    %rax,%rdx
    e075:	48 8d 05 ec 3a 03 00 	lea    0x33aec(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e07c:	48 89 c6             	mov    %rax,%rsi
    e07f:	48 89 df             	mov    %rbx,%rdi
    e082:	e8 f9 72 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    e087:	bf 28 00 00 00       	mov    $0x28,%edi
    e08c:	e8 3f 70 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e091:	48 89 c3             	mov    %rax,%rbx
    e094:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e098:	48 89 c6             	mov    %rax,%rsi
    e09b:	48 89 df             	mov    %rbx,%rdi
    e09e:	e8 15 a7 ff ff       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    e0a3:	48 8d 05 0a e4 ff ff 	lea    -0x1bf6(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    e0aa:	48 89 c2             	mov    %rax,%rdx
    e0ad:	48 8d 05 9c 3a 03 00 	lea    0x33a9c(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e0b4:	48 89 c6             	mov    %rax,%rsi
    e0b7:	48 89 df             	mov    %rbx,%rdi
    e0ba:	e8 c1 72 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    e0bf:	bf 28 00 00 00       	mov    $0x28,%edi
    e0c4:	e8 07 70 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e0c9:	48 89 c3             	mov    %rax,%rbx
    e0cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0d0:	48 89 c6             	mov    %rax,%rsi
    e0d3:	48 89 df             	mov    %rbx,%rdi
    e0d6:	e8 af a7 ff ff       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    e0db:	48 8d 05 62 e3 ff ff 	lea    -0x1c9e(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    e0e2:	48 89 c2             	mov    %rax,%rdx
    e0e5:	48 8d 05 4c 3a 03 00 	lea    0x33a4c(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e0ec:	48 89 c6             	mov    %rax,%rsi
    e0ef:	48 89 df             	mov    %rbx,%rdi
    e0f2:	e8 89 72 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    e0f7:	bf 28 00 00 00       	mov    $0x28,%edi
    e0fc:	e8 cf 6f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e101:	48 89 c3             	mov    %rax,%rbx
    e104:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e108:	48 89 c6             	mov    %rax,%rsi
    e10b:	48 89 df             	mov    %rbx,%rdi
    e10e:	e8 49 a8 ff ff       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    e113:	48 8d 05 ba e2 ff ff 	lea    -0x1d46(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    e11a:	48 89 c2             	mov    %rax,%rdx
    e11d:	48 8d 05 fc 39 03 00 	lea    0x339fc(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e124:	48 89 c6             	mov    %rax,%rsi
    e127:	48 89 df             	mov    %rbx,%rdi
    e12a:	e8 51 72 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    e12f:	bf 28 00 00 00       	mov    $0x28,%edi
    e134:	e8 97 6f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e139:	48 89 c3             	mov    %rax,%rbx
    e13c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e140:	48 89 c6             	mov    %rax,%rsi
    e143:	48 89 df             	mov    %rbx,%rdi
    e146:	e8 e3 a8 ff ff       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    e14b:	48 8d 05 12 e2 ff ff 	lea    -0x1dee(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    e152:	48 89 c2             	mov    %rax,%rdx
    e155:	48 8d 05 ac 39 03 00 	lea    0x339ac(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e15c:	48 89 c6             	mov    %rax,%rsi
    e15f:	48 89 df             	mov    %rbx,%rdi
    e162:	e8 19 72 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    e167:	bf 28 00 00 00       	mov    $0x28,%edi
    e16c:	e8 5f 6f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e171:	48 89 c3             	mov    %rax,%rbx
    e174:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e178:	48 89 c6             	mov    %rax,%rsi
    e17b:	48 89 df             	mov    %rbx,%rdi
    e17e:	e8 7d a9 ff ff       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    e183:	48 8d 05 6a e1 ff ff 	lea    -0x1e96(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    e18a:	48 89 c2             	mov    %rax,%rdx
    e18d:	48 8d 05 5c 39 03 00 	lea    0x3395c(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e194:	48 89 c6             	mov    %rax,%rsi
    e197:	48 89 df             	mov    %rbx,%rdi
    e19a:	e8 e1 71 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    e19f:	bf 28 00 00 00       	mov    $0x28,%edi
    e1a4:	e8 27 6f ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e1a9:	48 89 c3             	mov    %rax,%rbx
    e1ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e1b0:	48 89 c6             	mov    %rax,%rsi
    e1b3:	48 89 df             	mov    %rbx,%rdi
    e1b6:	e8 17 aa ff ff       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    e1bb:	48 8d 05 c2 e0 ff ff 	lea    -0x1f3e(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    e1c2:	48 89 c2             	mov    %rax,%rdx
    e1c5:	48 8d 05 0c 39 03 00 	lea    0x3390c(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e1cc:	48 89 c6             	mov    %rax,%rsi
    e1cf:	48 89 df             	mov    %rbx,%rdi
    e1d2:	e8 a9 71 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    e1d7:	bf 28 00 00 00       	mov    $0x28,%edi
    e1dc:	e8 ef 6e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e1e1:	48 89 c3             	mov    %rax,%rbx
    e1e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e1e8:	48 89 c6             	mov    %rax,%rsi
    e1eb:	48 89 df             	mov    %rbx,%rdi
    e1ee:	e8 b1 aa ff ff       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    e1f3:	48 8d 05 1a e0 ff ff 	lea    -0x1fe6(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    e1fa:	48 89 c2             	mov    %rax,%rdx
    e1fd:	48 8d 05 bc 38 03 00 	lea    0x338bc(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e204:	48 89 c6             	mov    %rax,%rsi
    e207:	48 89 df             	mov    %rbx,%rdi
    e20a:	e8 71 71 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    e20f:	bf 28 00 00 00       	mov    $0x28,%edi
    e214:	e8 b7 6e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e219:	48 89 c3             	mov    %rax,%rbx
    e21c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e220:	48 89 c6             	mov    %rax,%rsi
    e223:	48 89 df             	mov    %rbx,%rdi
    e226:	e8 4b ab ff ff       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    e22b:	48 8d 05 72 df ff ff 	lea    -0x208e(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    e232:	48 89 c2             	mov    %rax,%rdx
    e235:	48 8d 05 6c 38 03 00 	lea    0x3386c(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e23c:	48 89 c6             	mov    %rax,%rsi
    e23f:	48 89 df             	mov    %rbx,%rdi
    e242:	e8 39 71 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    e247:	bf 28 00 00 00       	mov    $0x28,%edi
    e24c:	e8 7f 6e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e251:	48 89 c3             	mov    %rax,%rbx
    e254:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e258:	48 89 c6             	mov    %rax,%rsi
    e25b:	48 89 df             	mov    %rbx,%rdi
    e25e:	e8 e5 ab ff ff       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    e263:	48 8d 05 ca de ff ff 	lea    -0x2136(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    e26a:	48 89 c2             	mov    %rax,%rdx
    e26d:	48 8d 05 1c 38 03 00 	lea    0x3381c(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e274:	48 89 c6             	mov    %rax,%rsi
    e277:	48 89 df             	mov    %rbx,%rdi
    e27a:	e8 01 71 ff ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    e27f:	bf 28 00 00 00       	mov    $0x28,%edi
    e284:	e8 47 6e ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e289:	48 89 c3             	mov    %rax,%rbx
    e28c:	8b 45 cc             	mov    -0x34(%rbp),%eax
    e28f:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    e292:	0f b6 05 bf 40 03 00 	movzbl 0x340bf(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    e299:	84 c0                	test   %al,%al
    e29b:	0f 94 c0             	sete   %al
    e29e:	84 c0                	test   %al,%al
    e2a0:	74 4a                	je     e2ec <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    e2a2:	48 8d 05 af 40 03 00 	lea    0x340af(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    e2a9:	48 89 c7             	mov    %rax,%rdi
    e2ac:	e8 0f 71 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    e2b1:	85 c0                	test   %eax,%eax
    e2b3:	0f 95 c0             	setne  %al
    e2b6:	84 c0                	test   %al,%al
    e2b8:	74 32                	je     e2ec <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    e2ba:	48 8d 05 37 3f 03 00 	lea    0x33f37(%rip),%rax        # 421f8 <__dso_handle>
    e2c1:	48 89 c2             	mov    %rax,%rdx
    e2c4:	48 8d 05 35 3f 03 00 	lea    0x33f35(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    e2cb:	48 89 c6             	mov    %rax,%rsi
    e2ce:	48 8d 05 bf e9 ff ff 	lea    -0x1641(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    e2d5:	48 89 c7             	mov    %rax,%rdi
    e2d8:	e8 f3 6e ff ff       	call   51d0 <__cxa_atexit@plt>
    e2dd:	48 8d 05 74 40 03 00 	lea    0x34074(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    e2e4:	48 89 c7             	mov    %rax,%rdi
    e2e7:	e8 14 6e ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    e2ec:	48 8d 15 0d 3f 03 00 	lea    0x33f0d(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    e2f3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    e2f6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e2fa:	89 ce                	mov    %ecx,%esi
    e2fc:	48 89 c7             	mov    %rax,%rdi
    e2ff:	e8 04 80 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    e304:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e308:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    e30c:	48 89 c6             	mov    %rax,%rsi
    e30f:	48 89 d7             	mov    %rdx,%rdi
    e312:	89 f1                	mov    %esi,%ecx
    e314:	48 89 d0             	mov    %rdx,%rax
    e317:	89 ce                	mov    %ecx,%esi
    e319:	48 89 c2             	mov    %rax,%rdx
    e31c:	48 89 df             	mov    %rbx,%rdi
    e31f:	e8 ec 94 ff ff       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
    e324:	48 8d 05 1b 96 ff ff 	lea    -0x69e5(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
    e32b:	48 89 c2             	mov    %rax,%rdx
    e32e:	48 8d 05 cb 39 03 00 	lea    0x339cb(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    e335:	48 89 c6             	mov    %rax,%rsi
    e338:	48 89 df             	mov    %rbx,%rdi
    e33b:	e8 40 70 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    e340:	49 89 c4             	mov    %rax,%r12
    e343:	48 89 df             	mov    %rbx,%rdi
    e346:	e8 05 6e ff ff       	call   5150 <__cxa_free_exception@plt>
    e34b:	4c 89 e0             	mov    %r12,%rax
    e34e:	48 89 c7             	mov    %rax,%rdi
    e351:	e8 4a 70 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    e356:	49 89 c4             	mov    %rax,%r12
    e359:	48 89 df             	mov    %rbx,%rdi
    e35c:	e8 ef 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e361:	4c 89 e0             	mov    %r12,%rax
    e364:	48 89 c7             	mov    %rax,%rdi
    e367:	e8 34 70 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    e36c:	49 89 c4             	mov    %rax,%r12
    e36f:	48 89 df             	mov    %rbx,%rdi
    e372:	e8 d9 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e377:	4c 89 e0             	mov    %r12,%rax
    e37a:	48 89 c7             	mov    %rax,%rdi
    e37d:	e8 1e 70 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    e382:	49 89 c4             	mov    %rax,%r12
    e385:	48 89 df             	mov    %rbx,%rdi
    e388:	e8 c3 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e38d:	4c 89 e0             	mov    %r12,%rax
    e390:	48 89 c7             	mov    %rax,%rdi
    e393:	e8 08 70 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    e398:	49 89 c4             	mov    %rax,%r12
    e39b:	48 89 df             	mov    %rbx,%rdi
    e39e:	e8 ad 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e3a3:	4c 89 e0             	mov    %r12,%rax
    e3a6:	48 89 c7             	mov    %rax,%rdi
    e3a9:	e8 f2 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    e3ae:	49 89 c4             	mov    %rax,%r12
    e3b1:	48 89 df             	mov    %rbx,%rdi
    e3b4:	e8 97 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e3b9:	4c 89 e0             	mov    %r12,%rax
    e3bc:	48 89 c7             	mov    %rax,%rdi
    e3bf:	e8 dc 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    e3c4:	49 89 c4             	mov    %rax,%r12
    e3c7:	48 89 df             	mov    %rbx,%rdi
    e3ca:	e8 81 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e3cf:	4c 89 e0             	mov    %r12,%rax
    e3d2:	48 89 c7             	mov    %rax,%rdi
    e3d5:	e8 c6 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    e3da:	49 89 c4             	mov    %rax,%r12
    e3dd:	48 89 df             	mov    %rbx,%rdi
    e3e0:	e8 6b 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e3e5:	4c 89 e0             	mov    %r12,%rax
    e3e8:	48 89 c7             	mov    %rax,%rdi
    e3eb:	e8 b0 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    e3f0:	49 89 c4             	mov    %rax,%r12
    e3f3:	48 89 df             	mov    %rbx,%rdi
    e3f6:	e8 55 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e3fb:	4c 89 e0             	mov    %r12,%rax
    e3fe:	48 89 c7             	mov    %rax,%rdi
    e401:	e8 9a 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    e406:	49 89 c4             	mov    %rax,%r12
    e409:	48 89 df             	mov    %rbx,%rdi
    e40c:	e8 3f 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e411:	4c 89 e0             	mov    %r12,%rax
    e414:	48 89 c7             	mov    %rax,%rdi
    e417:	e8 84 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    e41c:	49 89 c4             	mov    %rax,%r12
    e41f:	48 89 df             	mov    %rbx,%rdi
    e422:	e8 29 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e427:	4c 89 e0             	mov    %r12,%rax
    e42a:	48 89 c7             	mov    %rax,%rdi
    e42d:	e8 6e 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    e432:	49 89 c4             	mov    %rax,%r12
    e435:	48 89 df             	mov    %rbx,%rdi
    e438:	e8 13 6d ff ff       	call   5150 <__cxa_free_exception@plt>
    e43d:	4c 89 e0             	mov    %r12,%rax
    e440:	48 89 c7             	mov    %rax,%rdi
    e443:	e8 58 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    e448:	49 89 c4             	mov    %rax,%r12
    e44b:	48 89 df             	mov    %rbx,%rdi
    e44e:	e8 fd 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e453:	4c 89 e0             	mov    %r12,%rax
    e456:	48 89 c7             	mov    %rax,%rdi
    e459:	e8 42 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    e45e:	49 89 c4             	mov    %rax,%r12
    e461:	48 89 df             	mov    %rbx,%rdi
    e464:	e8 e7 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e469:	4c 89 e0             	mov    %r12,%rax
    e46c:	48 89 c7             	mov    %rax,%rdi
    e46f:	e8 2c 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    e474:	49 89 c4             	mov    %rax,%r12
    e477:	48 89 df             	mov    %rbx,%rdi
    e47a:	e8 d1 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e47f:	4c 89 e0             	mov    %r12,%rax
    e482:	48 89 c7             	mov    %rax,%rdi
    e485:	e8 16 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    e48a:	49 89 c4             	mov    %rax,%r12
    e48d:	48 89 df             	mov    %rbx,%rdi
    e490:	e8 bb 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e495:	4c 89 e0             	mov    %r12,%rax
    e498:	48 89 c7             	mov    %rax,%rdi
    e49b:	e8 00 6f ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    e4a0:	49 89 c4             	mov    %rax,%r12
    e4a3:	48 89 df             	mov    %rbx,%rdi
    e4a6:	e8 a5 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e4ab:	4c 89 e0             	mov    %r12,%rax
    e4ae:	48 89 c7             	mov    %rax,%rdi
    e4b1:	e8 ea 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    e4b6:	49 89 c4             	mov    %rax,%r12
    e4b9:	48 89 df             	mov    %rbx,%rdi
    e4bc:	e8 8f 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e4c1:	4c 89 e0             	mov    %r12,%rax
    e4c4:	48 89 c7             	mov    %rax,%rdi
    e4c7:	e8 d4 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    e4cc:	49 89 c4             	mov    %rax,%r12
    e4cf:	48 89 df             	mov    %rbx,%rdi
    e4d2:	e8 79 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e4d7:	4c 89 e0             	mov    %r12,%rax
    e4da:	48 89 c7             	mov    %rax,%rdi
    e4dd:	e8 be 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    e4e2:	49 89 c4             	mov    %rax,%r12
    e4e5:	48 89 df             	mov    %rbx,%rdi
    e4e8:	e8 63 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e4ed:	4c 89 e0             	mov    %r12,%rax
    e4f0:	48 89 c7             	mov    %rax,%rdi
    e4f3:	e8 a8 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    e4f8:	49 89 c4             	mov    %rax,%r12
    e4fb:	48 89 df             	mov    %rbx,%rdi
    e4fe:	e8 4d 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e503:	4c 89 e0             	mov    %r12,%rax
    e506:	48 89 c7             	mov    %rax,%rdi
    e509:	e8 92 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    e50e:	49 89 c4             	mov    %rax,%r12
    e511:	48 89 df             	mov    %rbx,%rdi
    e514:	e8 37 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e519:	4c 89 e0             	mov    %r12,%rax
    e51c:	48 89 c7             	mov    %rax,%rdi
    e51f:	e8 7c 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    e524:	49 89 c4             	mov    %rax,%r12
    e527:	48 89 df             	mov    %rbx,%rdi
    e52a:	e8 21 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e52f:	4c 89 e0             	mov    %r12,%rax
    e532:	48 89 c7             	mov    %rax,%rdi
    e535:	e8 66 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    e53a:	49 89 c4             	mov    %rax,%r12
    e53d:	48 89 df             	mov    %rbx,%rdi
    e540:	e8 0b 6c ff ff       	call   5150 <__cxa_free_exception@plt>
    e545:	4c 89 e0             	mov    %r12,%rax
    e548:	48 89 c7             	mov    %rax,%rdi
    e54b:	e8 50 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    e550:	49 89 c4             	mov    %rax,%r12
    e553:	48 89 df             	mov    %rbx,%rdi
    e556:	e8 f5 6b ff ff       	call   5150 <__cxa_free_exception@plt>
    e55b:	4c 89 e0             	mov    %r12,%rax
    e55e:	48 89 c7             	mov    %rax,%rdi
    e561:	e8 3a 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    e566:	49 89 c4             	mov    %rax,%r12
    e569:	48 89 df             	mov    %rbx,%rdi
    e56c:	e8 df 6b ff ff       	call   5150 <__cxa_free_exception@plt>
    e571:	4c 89 e0             	mov    %r12,%rax
    e574:	48 89 c7             	mov    %rax,%rdi
    e577:	e8 24 6e ff ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    e57c:	49 89 c4             	mov    %rax,%r12
    e57f:	48 89 df             	mov    %rbx,%rdi
    e582:	e8 c9 6b ff ff       	call   5150 <__cxa_free_exception@plt>
    e587:	4c 89 e0             	mov    %r12,%rax
    e58a:	48 89 c7             	mov    %rax,%rdi
    e58d:	e8 0e 6e ff ff       	call   53a0 <_Unwind_Resume@plt>

000000000000e592 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
    e592:	55                   	push   %rbp
    e593:	48 89 e5             	mov    %rsp,%rbp
    e596:	41 54                	push   %r12
    e598:	53                   	push   %rbx
    e599:	48 83 ec 30          	sub    $0x30,%rsp
    e59d:	89 7d cc             	mov    %edi,-0x34(%rbp)
    e5a0:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    e5a4:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    e5a8:	0f 89 28 07 00 00    	jns    ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e5ae:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    e5b2:	0f 8d 3d 01 00 00    	jge    e6f5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    e5b8:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    e5bf:	0f 84 19 05 00 00    	je     eade <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    e5c5:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    e5cc:	0f 8f 04 07 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e5d2:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    e5d9:	0f 84 37 05 00 00    	je     eb16 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    e5df:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    e5e6:	0f 8f ea 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e5ec:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    e5f3:	0f 84 55 05 00 00    	je     eb4e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    e5f9:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    e600:	0f 8f d0 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e606:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    e60d:	0f 84 73 05 00 00    	je     eb86 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    e613:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    e61a:	0f 8f b6 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e620:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    e627:	0f 84 91 05 00 00    	je     ebbe <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    e62d:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    e634:	0f 8f 9c 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e63a:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    e641:	0f 84 af 05 00 00    	je     ebf6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    e647:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    e64e:	0f 8f 82 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e654:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    e65b:	0f 84 9d 03 00 00    	je     e9fe <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    e661:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    e668:	0f 8f 68 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e66e:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    e675:	0f 84 bb 03 00 00    	je     ea36 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    e67b:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    e682:	0f 8f 4e 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e688:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    e68f:	0f 84 99 05 00 00    	je     ec2e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    e695:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    e69c:	0f 8f 34 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e6a2:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    e6a9:	0f 84 bf 03 00 00    	je     ea6e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    e6af:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    e6b6:	0f 8f 1a 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e6bc:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    e6c3:	0f 84 9d 05 00 00    	je     ec66 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    e6c9:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    e6d0:	0f 8f 00 06 00 00    	jg     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e6d6:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    e6dd:	0f 84 bb 05 00 00    	je     ec9e <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    e6e3:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    e6ea:	0f 84 b6 03 00 00    	je     eaa6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    e6f0:	e9 e1 05 00 00       	jmp    ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e6f5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    e6f8:	83 c0 0d             	add    $0xd,%eax
    e6fb:	83 f8 0c             	cmp    $0xc,%eax
    e6fe:	0f 87 d2 05 00 00    	ja     ecd6 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    e704:	89 c0                	mov    %eax,%eax
    e706:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    e70d:	00 
    e70e:	48 8d 05 5b dc 01 00 	lea    0x1dc5b(%rip),%rax        # 2c370 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    e715:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    e718:	48 98                	cltq
    e71a:	48 8d 15 4f dc 01 00 	lea    0x1dc4f(%rip),%rdx        # 2c370 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    e721:	48 01 d0             	add    %rdx,%rax
    e724:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    e726:	bf 28 00 00 00       	mov    $0x28,%edi
    e72b:	e8 a0 69 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e730:	48 89 c3             	mov    %rax,%rbx
    e733:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e737:	48 89 c6             	mov    %rax,%rsi
    e73a:	48 89 df             	mov    %rbx,%rdi
    e73d:	e8 84 92 ff ff       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    e742:	48 8d 05 db e4 ff ff 	lea    -0x1b25(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    e749:	48 89 c2             	mov    %rax,%rdx
    e74c:	48 8d 05 95 35 03 00 	lea    0x33595(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e753:	48 89 c6             	mov    %rax,%rsi
    e756:	48 89 df             	mov    %rbx,%rdi
    e759:	e8 22 6c ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    e75e:	bf 28 00 00 00       	mov    $0x28,%edi
    e763:	e8 68 69 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e768:	48 89 c3             	mov    %rax,%rbx
    e76b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e76f:	48 89 c6             	mov    %rax,%rsi
    e772:	48 89 df             	mov    %rbx,%rdi
    e775:	e8 1e 93 ff ff       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    e77a:	48 8d 05 33 e4 ff ff 	lea    -0x1bcd(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    e781:	48 89 c2             	mov    %rax,%rdx
    e784:	48 8d 05 45 35 03 00 	lea    0x33545(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e78b:	48 89 c6             	mov    %rax,%rsi
    e78e:	48 89 df             	mov    %rbx,%rdi
    e791:	e8 ea 6b ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    e796:	bf 28 00 00 00       	mov    $0x28,%edi
    e79b:	e8 30 69 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e7a0:	48 89 c3             	mov    %rax,%rbx
    e7a3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e7a7:	48 89 c6             	mov    %rax,%rsi
    e7aa:	48 89 df             	mov    %rbx,%rdi
    e7ad:	e8 b8 93 ff ff       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
    e7b2:	48 8d 05 8b e3 ff ff 	lea    -0x1c75(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
    e7b9:	48 89 c2             	mov    %rax,%rdx
    e7bc:	48 8d 05 f5 34 03 00 	lea    0x334f5(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e7c3:	48 89 c6             	mov    %rax,%rsi
    e7c6:	48 89 df             	mov    %rbx,%rdi
    e7c9:	e8 b2 6b ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    e7ce:	bf 28 00 00 00       	mov    $0x28,%edi
    e7d3:	e8 f8 68 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e7d8:	48 89 c3             	mov    %rax,%rbx
    e7db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e7df:	48 89 c6             	mov    %rax,%rsi
    e7e2:	48 89 df             	mov    %rbx,%rdi
    e7e5:	e8 52 94 ff ff       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
    e7ea:	48 8d 05 e3 e2 ff ff 	lea    -0x1d1d(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
    e7f1:	48 89 c2             	mov    %rax,%rdx
    e7f4:	48 8d 05 a5 34 03 00 	lea    0x334a5(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e7fb:	48 89 c6             	mov    %rax,%rsi
    e7fe:	48 89 df             	mov    %rbx,%rdi
    e801:	e8 7a 6b ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    e806:	bf 28 00 00 00       	mov    $0x28,%edi
    e80b:	e8 c0 68 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e810:	48 89 c3             	mov    %rax,%rbx
    e813:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e817:	48 89 c6             	mov    %rax,%rsi
    e81a:	48 89 df             	mov    %rbx,%rdi
    e81d:	e8 ec 94 ff ff       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    e822:	48 8d 05 3b e2 ff ff 	lea    -0x1dc5(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    e829:	48 89 c2             	mov    %rax,%rdx
    e82c:	48 8d 05 55 34 03 00 	lea    0x33455(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e833:	48 89 c6             	mov    %rax,%rsi
    e836:	48 89 df             	mov    %rbx,%rdi
    e839:	e8 42 6b ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    e83e:	bf 28 00 00 00       	mov    $0x28,%edi
    e843:	e8 88 68 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e848:	48 89 c3             	mov    %rax,%rbx
    e84b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e84f:	48 89 c6             	mov    %rax,%rsi
    e852:	48 89 df             	mov    %rbx,%rdi
    e855:	e8 86 95 ff ff       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
    e85a:	48 8d 05 93 e1 ff ff 	lea    -0x1e6d(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
    e861:	48 89 c2             	mov    %rax,%rdx
    e864:	48 8d 05 05 34 03 00 	lea    0x33405(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e86b:	48 89 c6             	mov    %rax,%rsi
    e86e:	48 89 df             	mov    %rbx,%rdi
    e871:	e8 0a 6b ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    e876:	bf 28 00 00 00       	mov    $0x28,%edi
    e87b:	e8 50 68 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e880:	48 89 c3             	mov    %rax,%rbx
    e883:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e887:	48 89 c6             	mov    %rax,%rsi
    e88a:	48 89 df             	mov    %rbx,%rdi
    e88d:	e8 20 96 ff ff       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    e892:	48 8d 05 eb e0 ff ff 	lea    -0x1f15(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    e899:	48 89 c2             	mov    %rax,%rdx
    e89c:	48 8d 05 b5 33 03 00 	lea    0x333b5(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e8a3:	48 89 c6             	mov    %rax,%rsi
    e8a6:	48 89 df             	mov    %rbx,%rdi
    e8a9:	e8 d2 6a ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    e8ae:	bf 28 00 00 00       	mov    $0x28,%edi
    e8b3:	e8 18 68 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e8b8:	48 89 c3             	mov    %rax,%rbx
    e8bb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e8bf:	48 89 c6             	mov    %rax,%rsi
    e8c2:	48 89 df             	mov    %rbx,%rdi
    e8c5:	e8 ba 96 ff ff       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    e8ca:	48 8d 05 43 e0 ff ff 	lea    -0x1fbd(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    e8d1:	48 89 c2             	mov    %rax,%rdx
    e8d4:	48 8d 05 65 33 03 00 	lea    0x33365(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e8db:	48 89 c6             	mov    %rax,%rsi
    e8de:	48 89 df             	mov    %rbx,%rdi
    e8e1:	e8 9a 6a ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    e8e6:	bf 28 00 00 00       	mov    $0x28,%edi
    e8eb:	e8 e0 67 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e8f0:	48 89 c3             	mov    %rax,%rbx
    e8f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e8f7:	48 89 c6             	mov    %rax,%rsi
    e8fa:	48 89 df             	mov    %rbx,%rdi
    e8fd:	e8 54 97 ff ff       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    e902:	48 8d 05 9b df ff ff 	lea    -0x2065(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    e909:	48 89 c2             	mov    %rax,%rdx
    e90c:	48 8d 05 15 33 03 00 	lea    0x33315(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e913:	48 89 c6             	mov    %rax,%rsi
    e916:	48 89 df             	mov    %rbx,%rdi
    e919:	e8 62 6a ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    e91e:	bf 28 00 00 00       	mov    $0x28,%edi
    e923:	e8 a8 67 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e928:	48 89 c3             	mov    %rax,%rbx
    e92b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e92f:	48 89 c6             	mov    %rax,%rsi
    e932:	48 89 df             	mov    %rbx,%rdi
    e935:	e8 ee 97 ff ff       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    e93a:	48 8d 05 f3 de ff ff 	lea    -0x210d(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
    e941:	48 89 c2             	mov    %rax,%rdx
    e944:	48 8d 05 c5 32 03 00 	lea    0x332c5(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e94b:	48 89 c6             	mov    %rax,%rsi
    e94e:	48 89 df             	mov    %rbx,%rdi
    e951:	e8 2a 6a ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    e956:	bf 28 00 00 00       	mov    $0x28,%edi
    e95b:	e8 70 67 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e960:	48 89 c3             	mov    %rax,%rbx
    e963:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e967:	48 89 c6             	mov    %rax,%rsi
    e96a:	48 89 df             	mov    %rbx,%rdi
    e96d:	e8 88 98 ff ff       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    e972:	48 8d 05 4b de ff ff 	lea    -0x21b5(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    e979:	48 89 c2             	mov    %rax,%rdx
    e97c:	48 8d 05 75 32 03 00 	lea    0x33275(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e983:	48 89 c6             	mov    %rax,%rsi
    e986:	48 89 df             	mov    %rbx,%rdi
    e989:	e8 f2 69 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    e98e:	bf 28 00 00 00       	mov    $0x28,%edi
    e993:	e8 38 67 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e998:	48 89 c3             	mov    %rax,%rbx
    e99b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e99f:	48 89 c6             	mov    %rax,%rsi
    e9a2:	48 89 df             	mov    %rbx,%rdi
    e9a5:	e8 22 99 ff ff       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
    e9aa:	48 8d 05 a3 dd ff ff 	lea    -0x225d(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
    e9b1:	48 89 c2             	mov    %rax,%rdx
    e9b4:	48 8d 05 25 32 03 00 	lea    0x33225(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e9bb:	48 89 c6             	mov    %rax,%rsi
    e9be:	48 89 df             	mov    %rbx,%rdi
    e9c1:	e8 ba 69 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    e9c6:	bf 28 00 00 00       	mov    $0x28,%edi
    e9cb:	e8 00 67 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    e9d0:	48 89 c3             	mov    %rax,%rbx
    e9d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e9d7:	48 89 c6             	mov    %rax,%rsi
    e9da:	48 89 df             	mov    %rbx,%rdi
    e9dd:	e8 bc 99 ff ff       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
    e9e2:	48 8d 05 fb dc ff ff 	lea    -0x2305(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
    e9e9:	48 89 c2             	mov    %rax,%rdx
    e9ec:	48 8d 05 d5 31 03 00 	lea    0x331d5(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    e9f3:	48 89 c6             	mov    %rax,%rsi
    e9f6:	48 89 df             	mov    %rbx,%rdi
    e9f9:	e8 82 69 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    e9fe:	bf 28 00 00 00       	mov    $0x28,%edi
    ea03:	e8 c8 66 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ea08:	48 89 c3             	mov    %rax,%rbx
    ea0b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ea0f:	48 89 c6             	mov    %rax,%rsi
    ea12:	48 89 df             	mov    %rbx,%rdi
    ea15:	e8 56 9a ff ff       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    ea1a:	48 8d 05 53 dc ff ff 	lea    -0x23ad(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    ea21:	48 89 c2             	mov    %rax,%rdx
    ea24:	48 8d 05 85 31 03 00 	lea    0x33185(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ea2b:	48 89 c6             	mov    %rax,%rsi
    ea2e:	48 89 df             	mov    %rbx,%rdi
    ea31:	e8 4a 69 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    ea36:	bf 28 00 00 00       	mov    $0x28,%edi
    ea3b:	e8 90 66 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ea40:	48 89 c3             	mov    %rax,%rbx
    ea43:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ea47:	48 89 c6             	mov    %rax,%rsi
    ea4a:	48 89 df             	mov    %rbx,%rdi
    ea4d:	e8 f0 9a ff ff       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    ea52:	48 8d 05 ab db ff ff 	lea    -0x2455(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    ea59:	48 89 c2             	mov    %rax,%rdx
    ea5c:	48 8d 05 35 31 03 00 	lea    0x33135(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ea63:	48 89 c6             	mov    %rax,%rsi
    ea66:	48 89 df             	mov    %rbx,%rdi
    ea69:	e8 12 69 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    ea6e:	bf 28 00 00 00       	mov    $0x28,%edi
    ea73:	e8 58 66 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ea78:	48 89 c3             	mov    %rax,%rbx
    ea7b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ea7f:	48 89 c6             	mov    %rax,%rsi
    ea82:	48 89 df             	mov    %rbx,%rdi
    ea85:	e8 8a 9b ff ff       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
    ea8a:	48 8d 05 03 db ff ff 	lea    -0x24fd(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
    ea91:	48 89 c2             	mov    %rax,%rdx
    ea94:	48 8d 05 e5 30 03 00 	lea    0x330e5(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ea9b:	48 89 c6             	mov    %rax,%rsi
    ea9e:	48 89 df             	mov    %rbx,%rdi
    eaa1:	e8 da 68 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    eaa6:	bf 28 00 00 00       	mov    $0x28,%edi
    eaab:	e8 20 66 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    eab0:	48 89 c3             	mov    %rax,%rbx
    eab3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eab7:	48 89 c6             	mov    %rax,%rsi
    eaba:	48 89 df             	mov    %rbx,%rdi
    eabd:	e8 24 9c ff ff       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    eac2:	48 8d 05 5b da ff ff 	lea    -0x25a5(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    eac9:	48 89 c2             	mov    %rax,%rdx
    eacc:	48 8d 05 95 30 03 00 	lea    0x33095(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ead3:	48 89 c6             	mov    %rax,%rsi
    ead6:	48 89 df             	mov    %rbx,%rdi
    ead9:	e8 a2 68 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    eade:	bf 28 00 00 00       	mov    $0x28,%edi
    eae3:	e8 e8 65 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    eae8:	48 89 c3             	mov    %rax,%rbx
    eaeb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eaef:	48 89 c6             	mov    %rax,%rsi
    eaf2:	48 89 df             	mov    %rbx,%rdi
    eaf5:	e8 be 9c ff ff       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    eafa:	48 8d 05 b3 d9 ff ff 	lea    -0x264d(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    eb01:	48 89 c2             	mov    %rax,%rdx
    eb04:	48 8d 05 45 30 03 00 	lea    0x33045(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    eb0b:	48 89 c6             	mov    %rax,%rsi
    eb0e:	48 89 df             	mov    %rbx,%rdi
    eb11:	e8 6a 68 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    eb16:	bf 28 00 00 00       	mov    $0x28,%edi
    eb1b:	e8 b0 65 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    eb20:	48 89 c3             	mov    %rax,%rbx
    eb23:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eb27:	48 89 c6             	mov    %rax,%rsi
    eb2a:	48 89 df             	mov    %rbx,%rdi
    eb2d:	e8 58 9d ff ff       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    eb32:	48 8d 05 0b d9 ff ff 	lea    -0x26f5(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    eb39:	48 89 c2             	mov    %rax,%rdx
    eb3c:	48 8d 05 f5 2f 03 00 	lea    0x32ff5(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    eb43:	48 89 c6             	mov    %rax,%rsi
    eb46:	48 89 df             	mov    %rbx,%rdi
    eb49:	e8 32 68 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    eb4e:	bf 28 00 00 00       	mov    $0x28,%edi
    eb53:	e8 78 65 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    eb58:	48 89 c3             	mov    %rax,%rbx
    eb5b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eb5f:	48 89 c6             	mov    %rax,%rsi
    eb62:	48 89 df             	mov    %rbx,%rdi
    eb65:	e8 f2 9d ff ff       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    eb6a:	48 8d 05 63 d8 ff ff 	lea    -0x279d(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    eb71:	48 89 c2             	mov    %rax,%rdx
    eb74:	48 8d 05 a5 2f 03 00 	lea    0x32fa5(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    eb7b:	48 89 c6             	mov    %rax,%rsi
    eb7e:	48 89 df             	mov    %rbx,%rdi
    eb81:	e8 fa 67 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    eb86:	bf 28 00 00 00       	mov    $0x28,%edi
    eb8b:	e8 40 65 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    eb90:	48 89 c3             	mov    %rax,%rbx
    eb93:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    eb97:	48 89 c6             	mov    %rax,%rsi
    eb9a:	48 89 df             	mov    %rbx,%rdi
    eb9d:	e8 8c 9e ff ff       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    eba2:	48 8d 05 bb d7 ff ff 	lea    -0x2845(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    eba9:	48 89 c2             	mov    %rax,%rdx
    ebac:	48 8d 05 55 2f 03 00 	lea    0x32f55(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ebb3:	48 89 c6             	mov    %rax,%rsi
    ebb6:	48 89 df             	mov    %rbx,%rdi
    ebb9:	e8 c2 67 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    ebbe:	bf 28 00 00 00       	mov    $0x28,%edi
    ebc3:	e8 08 65 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ebc8:	48 89 c3             	mov    %rax,%rbx
    ebcb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ebcf:	48 89 c6             	mov    %rax,%rsi
    ebd2:	48 89 df             	mov    %rbx,%rdi
    ebd5:	e8 26 9f ff ff       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    ebda:	48 8d 05 13 d7 ff ff 	lea    -0x28ed(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    ebe1:	48 89 c2             	mov    %rax,%rdx
    ebe4:	48 8d 05 05 2f 03 00 	lea    0x32f05(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ebeb:	48 89 c6             	mov    %rax,%rsi
    ebee:	48 89 df             	mov    %rbx,%rdi
    ebf1:	e8 8a 67 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    ebf6:	bf 28 00 00 00       	mov    $0x28,%edi
    ebfb:	e8 d0 64 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ec00:	48 89 c3             	mov    %rax,%rbx
    ec03:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ec07:	48 89 c6             	mov    %rax,%rsi
    ec0a:	48 89 df             	mov    %rbx,%rdi
    ec0d:	e8 c0 9f ff ff       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    ec12:	48 8d 05 6b d6 ff ff 	lea    -0x2995(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    ec19:	48 89 c2             	mov    %rax,%rdx
    ec1c:	48 8d 05 b5 2e 03 00 	lea    0x32eb5(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ec23:	48 89 c6             	mov    %rax,%rsi
    ec26:	48 89 df             	mov    %rbx,%rdi
    ec29:	e8 52 67 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    ec2e:	bf 28 00 00 00       	mov    $0x28,%edi
    ec33:	e8 98 64 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ec38:	48 89 c3             	mov    %rax,%rbx
    ec3b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ec3f:	48 89 c6             	mov    %rax,%rsi
    ec42:	48 89 df             	mov    %rbx,%rdi
    ec45:	e8 5a a0 ff ff       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    ec4a:	48 8d 05 c3 d5 ff ff 	lea    -0x2a3d(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    ec51:	48 89 c2             	mov    %rax,%rdx
    ec54:	48 8d 05 65 2e 03 00 	lea    0x32e65(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ec5b:	48 89 c6             	mov    %rax,%rsi
    ec5e:	48 89 df             	mov    %rbx,%rdi
    ec61:	e8 1a 67 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    ec66:	bf 28 00 00 00       	mov    $0x28,%edi
    ec6b:	e8 60 64 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ec70:	48 89 c3             	mov    %rax,%rbx
    ec73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ec77:	48 89 c6             	mov    %rax,%rsi
    ec7a:	48 89 df             	mov    %rbx,%rdi
    ec7d:	e8 f4 a0 ff ff       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    ec82:	48 8d 05 1b d5 ff ff 	lea    -0x2ae5(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    ec89:	48 89 c2             	mov    %rax,%rdx
    ec8c:	48 8d 05 15 2e 03 00 	lea    0x32e15(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    ec93:	48 89 c6             	mov    %rax,%rsi
    ec96:	48 89 df             	mov    %rbx,%rdi
    ec99:	e8 e2 66 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    ec9e:	bf 28 00 00 00       	mov    $0x28,%edi
    eca3:	e8 28 64 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    eca8:	48 89 c3             	mov    %rax,%rbx
    ecab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ecaf:	48 89 c6             	mov    %rax,%rsi
    ecb2:	48 89 df             	mov    %rbx,%rdi
    ecb5:	e8 8e a1 ff ff       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    ecba:	48 8d 05 73 d4 ff ff 	lea    -0x2b8d(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    ecc1:	48 89 c2             	mov    %rax,%rdx
    ecc4:	48 8d 05 c5 2d 03 00 	lea    0x32dc5(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    eccb:	48 89 c6             	mov    %rax,%rsi
    ecce:	48 89 df             	mov    %rbx,%rdi
    ecd1:	e8 aa 66 ff ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    ecd6:	bf 28 00 00 00       	mov    $0x28,%edi
    ecdb:	e8 f0 63 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ece0:	48 89 c3             	mov    %rax,%rbx
    ece3:	8b 45 cc             	mov    -0x34(%rbp),%eax
    ece6:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    ece9:	0f b6 05 68 36 03 00 	movzbl 0x33668(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    ecf0:	84 c0                	test   %al,%al
    ecf2:	0f 94 c0             	sete   %al
    ecf5:	84 c0                	test   %al,%al
    ecf7:	74 4a                	je     ed43 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    ecf9:	48 8d 05 58 36 03 00 	lea    0x33658(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    ed00:	48 89 c7             	mov    %rax,%rdi
    ed03:	e8 b8 66 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    ed08:	85 c0                	test   %eax,%eax
    ed0a:	0f 95 c0             	setne  %al
    ed0d:	84 c0                	test   %al,%al
    ed0f:	74 32                	je     ed43 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    ed11:	48 8d 05 e0 34 03 00 	lea    0x334e0(%rip),%rax        # 421f8 <__dso_handle>
    ed18:	48 89 c2             	mov    %rax,%rdx
    ed1b:	48 8d 05 de 34 03 00 	lea    0x334de(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    ed22:	48 89 c6             	mov    %rax,%rsi
    ed25:	48 8d 05 68 df ff ff 	lea    -0x2098(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
    ed2c:	48 89 c7             	mov    %rax,%rdi
    ed2f:	e8 9c 64 ff ff       	call   51d0 <__cxa_atexit@plt>
    ed34:	48 8d 05 1d 36 03 00 	lea    0x3361d(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
    ed3b:	48 89 c7             	mov    %rax,%rdi
    ed3e:	e8 bd 63 ff ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
    ed43:	48 8d 15 b6 34 03 00 	lea    0x334b6(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    ed4a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    ed4d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ed51:	89 ce                	mov    %ecx,%esi
    ed53:	48 89 c7             	mov    %rax,%rdi
    ed56:	e8 ad 75 ff ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    ed5b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed5f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    ed63:	48 89 c6             	mov    %rax,%rsi
    ed66:	48 89 d7             	mov    %rdx,%rdi
    ed69:	89 f1                	mov    %esi,%ecx
    ed6b:	48 89 d0             	mov    %rdx,%rax
    ed6e:	89 ce                	mov    %ecx,%esi
    ed70:	48 89 c2             	mov    %rax,%rdx
    ed73:	48 89 df             	mov    %rbx,%rdi
    ed76:	e8 95 8a ff ff       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
    ed7b:	48 8d 05 c4 8b ff ff 	lea    -0x743c(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
    ed82:	48 89 c2             	mov    %rax,%rdx
    ed85:	48 8d 05 74 2f 03 00 	lea    0x32f74(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    ed8c:	48 89 c6             	mov    %rax,%rsi
    ed8f:	48 89 df             	mov    %rbx,%rdi
    ed92:	e8 e9 65 ff ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    ed97:	49 89 c4             	mov    %rax,%r12
    ed9a:	48 89 df             	mov    %rbx,%rdi
    ed9d:	e8 ae 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    eda2:	4c 89 e0             	mov    %r12,%rax
    eda5:	48 89 c7             	mov    %rax,%rdi
    eda8:	e8 f3 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    edad:	49 89 c4             	mov    %rax,%r12
    edb0:	48 89 df             	mov    %rbx,%rdi
    edb3:	e8 98 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    edb8:	4c 89 e0             	mov    %r12,%rax
    edbb:	48 89 c7             	mov    %rax,%rdi
    edbe:	e8 dd 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    edc3:	49 89 c4             	mov    %rax,%r12
    edc6:	48 89 df             	mov    %rbx,%rdi
    edc9:	e8 82 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    edce:	4c 89 e0             	mov    %r12,%rax
    edd1:	48 89 c7             	mov    %rax,%rdi
    edd4:	e8 c7 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    edd9:	49 89 c4             	mov    %rax,%r12
    eddc:	48 89 df             	mov    %rbx,%rdi
    eddf:	e8 6c 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    ede4:	4c 89 e0             	mov    %r12,%rax
    ede7:	48 89 c7             	mov    %rax,%rdi
    edea:	e8 b1 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    edef:	49 89 c4             	mov    %rax,%r12
    edf2:	48 89 df             	mov    %rbx,%rdi
    edf5:	e8 56 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    edfa:	4c 89 e0             	mov    %r12,%rax
    edfd:	48 89 c7             	mov    %rax,%rdi
    ee00:	e8 9b 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    ee05:	49 89 c4             	mov    %rax,%r12
    ee08:	48 89 df             	mov    %rbx,%rdi
    ee0b:	e8 40 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee10:	4c 89 e0             	mov    %r12,%rax
    ee13:	48 89 c7             	mov    %rax,%rdi
    ee16:	e8 85 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    ee1b:	49 89 c4             	mov    %rax,%r12
    ee1e:	48 89 df             	mov    %rbx,%rdi
    ee21:	e8 2a 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee26:	4c 89 e0             	mov    %r12,%rax
    ee29:	48 89 c7             	mov    %rax,%rdi
    ee2c:	e8 6f 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    ee31:	49 89 c4             	mov    %rax,%r12
    ee34:	48 89 df             	mov    %rbx,%rdi
    ee37:	e8 14 63 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee3c:	4c 89 e0             	mov    %r12,%rax
    ee3f:	48 89 c7             	mov    %rax,%rdi
    ee42:	e8 59 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    ee47:	49 89 c4             	mov    %rax,%r12
    ee4a:	48 89 df             	mov    %rbx,%rdi
    ee4d:	e8 fe 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee52:	4c 89 e0             	mov    %r12,%rax
    ee55:	48 89 c7             	mov    %rax,%rdi
    ee58:	e8 43 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    ee5d:	49 89 c4             	mov    %rax,%r12
    ee60:	48 89 df             	mov    %rbx,%rdi
    ee63:	e8 e8 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee68:	4c 89 e0             	mov    %r12,%rax
    ee6b:	48 89 c7             	mov    %rax,%rdi
    ee6e:	e8 2d 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    ee73:	49 89 c4             	mov    %rax,%r12
    ee76:	48 89 df             	mov    %rbx,%rdi
    ee79:	e8 d2 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee7e:	4c 89 e0             	mov    %r12,%rax
    ee81:	48 89 c7             	mov    %rax,%rdi
    ee84:	e8 17 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    ee89:	49 89 c4             	mov    %rax,%r12
    ee8c:	48 89 df             	mov    %rbx,%rdi
    ee8f:	e8 bc 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ee94:	4c 89 e0             	mov    %r12,%rax
    ee97:	48 89 c7             	mov    %rax,%rdi
    ee9a:	e8 01 65 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    ee9f:	49 89 c4             	mov    %rax,%r12
    eea2:	48 89 df             	mov    %rbx,%rdi
    eea5:	e8 a6 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    eeaa:	4c 89 e0             	mov    %r12,%rax
    eead:	48 89 c7             	mov    %rax,%rdi
    eeb0:	e8 eb 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    eeb5:	49 89 c4             	mov    %rax,%r12
    eeb8:	48 89 df             	mov    %rbx,%rdi
    eebb:	e8 90 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    eec0:	4c 89 e0             	mov    %r12,%rax
    eec3:	48 89 c7             	mov    %rax,%rdi
    eec6:	e8 d5 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    eecb:	49 89 c4             	mov    %rax,%r12
    eece:	48 89 df             	mov    %rbx,%rdi
    eed1:	e8 7a 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    eed6:	4c 89 e0             	mov    %r12,%rax
    eed9:	48 89 c7             	mov    %rax,%rdi
    eedc:	e8 bf 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    eee1:	49 89 c4             	mov    %rax,%r12
    eee4:	48 89 df             	mov    %rbx,%rdi
    eee7:	e8 64 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    eeec:	4c 89 e0             	mov    %r12,%rax
    eeef:	48 89 c7             	mov    %rax,%rdi
    eef2:	e8 a9 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    eef7:	49 89 c4             	mov    %rax,%r12
    eefa:	48 89 df             	mov    %rbx,%rdi
    eefd:	e8 4e 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef02:	4c 89 e0             	mov    %r12,%rax
    ef05:	48 89 c7             	mov    %rax,%rdi
    ef08:	e8 93 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    ef0d:	49 89 c4             	mov    %rax,%r12
    ef10:	48 89 df             	mov    %rbx,%rdi
    ef13:	e8 38 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef18:	4c 89 e0             	mov    %r12,%rax
    ef1b:	48 89 c7             	mov    %rax,%rdi
    ef1e:	e8 7d 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    ef23:	49 89 c4             	mov    %rax,%r12
    ef26:	48 89 df             	mov    %rbx,%rdi
    ef29:	e8 22 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef2e:	4c 89 e0             	mov    %r12,%rax
    ef31:	48 89 c7             	mov    %rax,%rdi
    ef34:	e8 67 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    ef39:	49 89 c4             	mov    %rax,%r12
    ef3c:	48 89 df             	mov    %rbx,%rdi
    ef3f:	e8 0c 62 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef44:	4c 89 e0             	mov    %r12,%rax
    ef47:	48 89 c7             	mov    %rax,%rdi
    ef4a:	e8 51 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    ef4f:	49 89 c4             	mov    %rax,%r12
    ef52:	48 89 df             	mov    %rbx,%rdi
    ef55:	e8 f6 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef5a:	4c 89 e0             	mov    %r12,%rax
    ef5d:	48 89 c7             	mov    %rax,%rdi
    ef60:	e8 3b 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    ef65:	49 89 c4             	mov    %rax,%r12
    ef68:	48 89 df             	mov    %rbx,%rdi
    ef6b:	e8 e0 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef70:	4c 89 e0             	mov    %r12,%rax
    ef73:	48 89 c7             	mov    %rax,%rdi
    ef76:	e8 25 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    ef7b:	49 89 c4             	mov    %rax,%r12
    ef7e:	48 89 df             	mov    %rbx,%rdi
    ef81:	e8 ca 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef86:	4c 89 e0             	mov    %r12,%rax
    ef89:	48 89 c7             	mov    %rax,%rdi
    ef8c:	e8 0f 64 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    ef91:	49 89 c4             	mov    %rax,%r12
    ef94:	48 89 df             	mov    %rbx,%rdi
    ef97:	e8 b4 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    ef9c:	4c 89 e0             	mov    %r12,%rax
    ef9f:	48 89 c7             	mov    %rax,%rdi
    efa2:	e8 f9 63 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    efa7:	49 89 c4             	mov    %rax,%r12
    efaa:	48 89 df             	mov    %rbx,%rdi
    efad:	e8 9e 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    efb2:	4c 89 e0             	mov    %r12,%rax
    efb5:	48 89 c7             	mov    %rax,%rdi
    efb8:	e8 e3 63 ff ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    efbd:	49 89 c4             	mov    %rax,%r12
    efc0:	48 89 df             	mov    %rbx,%rdi
    efc3:	e8 88 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    efc8:	4c 89 e0             	mov    %r12,%rax
    efcb:	48 89 c7             	mov    %rax,%rdi
    efce:	e8 cd 63 ff ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    efd3:	49 89 c4             	mov    %rax,%r12
    efd6:	48 89 df             	mov    %rbx,%rdi
    efd9:	e8 72 61 ff ff       	call   5150 <__cxa_free_exception@plt>
    efde:	4c 89 e0             	mov    %r12,%rax
    efe1:	48 89 c7             	mov    %rax,%rdi
    efe4:	e8 b7 63 ff ff       	call   53a0 <_Unwind_Resume@plt>

000000000000efe9 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE>:
#include <optional>

namespace rtvc {

DeviceWrapper makeLogicalDevice(const vk::raii::Instance &instance,
                                const vk::raii::SurfaceKHR &surface) {
    efe9:	55                   	push   %rbp
    efea:	48 89 e5             	mov    %rsp,%rbp
    efed:	41 57                	push   %r15
    efef:	41 56                	push   %r14
    eff1:	41 55                	push   %r13
    eff3:	41 54                	push   %r12
    eff5:	53                   	push   %rbx
    eff6:	48 81 ec b8 07 00 00 	sub    $0x7b8,%rsp
    effd:	48 89 bd 38 f8 ff ff 	mov    %rdi,-0x7c8(%rbp)
    f004:	48 89 b5 30 f8 ff ff 	mov    %rsi,-0x7d0(%rbp)
    f00b:	48 89 95 28 f8 ff ff 	mov    %rdx,-0x7d8(%rbp)
  static const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME,
  };
    f012:	0f b6 05 5f 33 03 00 	movzbl 0x3335f(%rip),%eax        # 42378 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
    f019:	84 c0                	test   %al,%al
    f01b:	0f 94 c0             	sete   %al
    f01e:	84 c0                	test   %al,%al
    f020:	0f 84 b9 00 00 00    	je     f0df <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xf6>
    f026:	48 8d 05 4b 33 03 00 	lea    0x3334b(%rip),%rax        # 42378 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
    f02d:	48 89 c7             	mov    %rax,%rdi
    f030:	e8 8b 63 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    f035:	85 c0                	test   %eax,%eax
    f037:	0f 95 c0             	setne  %al
    f03a:	84 c0                	test   %al,%al
    f03c:	0f 84 9d 00 00 00    	je     f0df <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xf6>
    f042:	c6 85 27 f8 ff ff 00 	movb   $0x0,-0x7d9(%rbp)
    f049:	48 8d 05 e1 07 02 00 	lea    0x207e1(%rip),%rax        # 2f831 <_ZNSt8__detailL19__atomic_spin_countE+0x347d>
    f050:	48 89 85 a0 fd ff ff 	mov    %rax,-0x260(%rbp)
    f057:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    f05e:	49 89 c6             	mov    %rax,%r14
    f061:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    f067:	48 8d 85 af fd ff ff 	lea    -0x251(%rbp),%rax
    f06e:	48 89 c7             	mov    %rax,%rdi
    f071:	e8 a2 8b 00 00       	call   17c18 <_ZNSaIPKcEC1Ev>
    f076:	48 8d 85 af fd ff ff 	lea    -0x251(%rbp),%rax
    f07d:	4c 89 f6             	mov    %r14,%rsi
    f080:	4c 89 ff             	mov    %r15,%rdi
    f083:	4c 89 f1             	mov    %r14,%rcx
    f086:	4c 89 fb             	mov    %r15,%rbx
    f089:	48 89 da             	mov    %rbx,%rdx
    f08c:	48 89 c1             	mov    %rax,%rcx
    f08f:	48 8d 05 ca 32 03 00 	lea    0x332ca(%rip),%rax        # 42360 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
    f096:	48 89 c7             	mov    %rax,%rdi
    f099:	e8 f2 8a 00 00       	call   17b90 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f09e:	48 8d 05 53 31 03 00 	lea    0x33153(%rip),%rax        # 421f8 <__dso_handle>
    f0a5:	48 89 c2             	mov    %rax,%rdx
    f0a8:	48 8d 05 b1 32 03 00 	lea    0x332b1(%rip),%rax        # 42360 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
    f0af:	48 89 c6             	mov    %rax,%rsi
    f0b2:	48 8d 05 cd 9f 00 00 	lea    0x9fcd(%rip),%rax        # 19086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f0b9:	48 89 c7             	mov    %rax,%rdi
    f0bc:	e8 0f 61 ff ff       	call   51d0 <__cxa_atexit@plt>
    f0c1:	48 8d 05 b0 32 03 00 	lea    0x332b0(%rip),%rax        # 42378 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
    f0c8:	48 89 c7             	mov    %rax,%rdi
    f0cb:	e8 30 60 ff ff       	call   5100 <__cxa_guard_release@plt>
    f0d0:	48 8d 85 af fd ff ff 	lea    -0x251(%rbp),%rax
    f0d7:	48 89 c7             	mov    %rax,%rdi
    f0da:	e8 61 8b 00 00       	call   17c40 <_ZNSaIPKcED1Ev>
  static const std::vector<const char *> instanceLayers = {
      validationLayerName.data(),
      mangohudLayerName.data(),
  };
    f0df:	0f b6 05 b2 32 03 00 	movzbl 0x332b2(%rip),%eax        # 42398 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
    f0e6:	84 c0                	test   %al,%al
    f0e8:	0f 94 c0             	sete   %al
    f0eb:	84 c0                	test   %al,%al
    f0ed:	0f 84 c6 00 00 00    	je     f1b9 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1d0>
    f0f3:	48 8d 05 9e 32 03 00 	lea    0x3329e(%rip),%rax        # 42398 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
    f0fa:	48 89 c7             	mov    %rax,%rdi
    f0fd:	e8 be 62 ff ff       	call   53c0 <__cxa_guard_acquire@plt>
    f102:	85 c0                	test   %eax,%eax
    f104:	0f 95 c0             	setne  %al
    f107:	84 c0                	test   %al,%al
    f109:	0f 84 aa 00 00 00    	je     f1b9 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1d0>
    f10f:	41 be 00 00 00 00    	mov    $0x0,%r14d
    f115:	48 8d 05 26 07 02 00 	lea    0x20726(%rip),%rax        # 2f842 <_ZNSt8__detailL19__atomic_spin_countE+0x348e>
    f11c:	48 89 85 b0 fd ff ff 	mov    %rax,-0x250(%rbp)
    f123:	48 8d 05 34 07 02 00 	lea    0x20734(%rip),%rax        # 2f85e <_ZNSt8__detailL19__atomic_spin_countE+0x34aa>
    f12a:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)
    f131:	48 8d 85 b0 fd ff ff 	lea    -0x250(%rbp),%rax
    f138:	49 89 c4             	mov    %rax,%r12
    f13b:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    f141:	48 8d 85 c7 fd ff ff 	lea    -0x239(%rbp),%rax
    f148:	48 89 c7             	mov    %rax,%rdi
    f14b:	e8 c8 8a 00 00       	call   17c18 <_ZNSaIPKcEC1Ev>
    f150:	48 8d 85 c7 fd ff ff 	lea    -0x239(%rbp),%rax
    f157:	4c 89 e6             	mov    %r12,%rsi
    f15a:	4c 89 ef             	mov    %r13,%rdi
    f15d:	4c 89 e1             	mov    %r12,%rcx
    f160:	4c 89 eb             	mov    %r13,%rbx
    f163:	48 89 da             	mov    %rbx,%rdx
    f166:	48 89 c1             	mov    %rax,%rcx
    f169:	48 8d 05 10 32 03 00 	lea    0x33210(%rip),%rax        # 42380 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
    f170:	48 89 c7             	mov    %rax,%rdi
    f173:	e8 18 8a 00 00       	call   17b90 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f178:	48 8d 05 79 30 03 00 	lea    0x33079(%rip),%rax        # 421f8 <__dso_handle>
    f17f:	48 89 c2             	mov    %rax,%rdx
    f182:	48 8d 05 f7 31 03 00 	lea    0x331f7(%rip),%rax        # 42380 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
    f189:	48 89 c6             	mov    %rax,%rsi
    f18c:	48 8d 05 f3 9e 00 00 	lea    0x9ef3(%rip),%rax        # 19086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f193:	48 89 c7             	mov    %rax,%rdi
    f196:	e8 35 60 ff ff       	call   51d0 <__cxa_atexit@plt>
    f19b:	48 8d 05 f6 31 03 00 	lea    0x331f6(%rip),%rax        # 42398 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
    f1a2:	48 89 c7             	mov    %rax,%rdi
    f1a5:	e8 56 5f ff ff       	call   5100 <__cxa_guard_release@plt>
    f1aa:	48 8d 85 c7 fd ff ff 	lea    -0x239(%rbp),%rax
    f1b1:	48 89 c7             	mov    %rax,%rdi
    f1b4:	e8 87 8a 00 00       	call   17c40 <_ZNSaIPKcED1Ev>

  vk::raii::PhysicalDevices physicalDevices{instance};
    f1b9:	48 8b 95 30 f8 ff ff 	mov    -0x7d0(%rbp),%rdx
    f1c0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    f1c7:	48 89 d6             	mov    %rdx,%rsi
    f1ca:	48 89 c7             	mov    %rax,%rdi
    f1cd:	e8 7a 83 00 00       	call   1754c <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE>
  for (const auto &physicalDevice : physicalDevices) {
    f1d2:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    f1d9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f1dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1e1:	48 89 c7             	mov    %rax,%rdi
    f1e4:	e8 e1 9e 00 00       	call   190ca <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE5beginEv>
    f1e9:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)
    f1f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1f4:	48 89 c7             	mov    %rax,%rdi
    f1f7:	e8 f4 9e 00 00       	call   190f0 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE3endEv>
    f1fc:	48 89 85 70 fd ff ff 	mov    %rax,-0x290(%rbp)
    f203:	e9 b3 10 00 00       	jmp    102bb <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x12d2>
    f208:	48 8d 85 78 fd ff ff 	lea    -0x288(%rbp),%rax
    f20f:	48 89 c7             	mov    %rax,%rdi
    f212:	e8 ff 8f 00 00       	call   18216 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEdeEv>
    f217:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    f21b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f21f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
      return imageFormatProperties;
    }

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE VULKAN_HPP_NAMESPACE::PhysicalDeviceProperties PhysicalDevice::getProperties() const VULKAN_HPP_NOEXCEPT
    {
      VULKAN_HPP_NAMESPACE::PhysicalDeviceProperties properties;
    f226:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    f22d:	b8 00 00 00 00       	mov    $0x0,%eax
    f232:	b9 67 00 00 00       	mov    $0x67,%ecx
    f237:	48 89 d7             	mov    %rdx,%rdi
    f23a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
      getDispatcher()->vkGetPhysicalDeviceProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    f23d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f244:	48 89 c7             	mov    %rax,%rdi
    f247:	e8 38 e7 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    f24c:	48 8b 58 38          	mov    0x38(%rax),%rbx
    f250:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f257:	48 89 c7             	mov    %rax,%rdi
    f25a:	e8 13 e7 ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    f25f:	48 89 c2             	mov    %rax,%rdx
    f262:	48 8d 85 20 f9 ff ff 	lea    -0x6e0(%rbp),%rax
    f269:	48 89 c6             	mov    %rax,%rsi
    f26c:	48 89 d7             	mov    %rdx,%rdi
    f26f:	ff d3                	call   *%rbx
                                                      reinterpret_cast<VkPhysicalDeviceProperties *>( &properties ) );

      return properties;
    f271:	90                   	nop
    if (auto properties = physicalDevice.getProperties();
        properties.deviceType != vk::PhysicalDeviceType::eDiscreteGpu) {
    f272:	8b 85 30 f9 ff ff    	mov    -0x6d0(%rbp),%eax
    if (auto properties = physicalDevice.getProperties();
    f278:	83 f8 02             	cmp    $0x2,%eax
    f27b:	0f 85 14 10 00 00    	jne    10295 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x12ac>
      continue;
    }

    bool extensionsSupported = true;
    f281:	c6 45 cf 01          	movb   $0x1,-0x31(%rbp)
    auto supportedExtensions =
        physicalDevice.enumerateDeviceExtensionProperties();
    f285:	48 8d 85 c8 fd ff ff 	lea    -0x238(%rbp),%rax
    f28c:	be 00 00 00 00       	mov    $0x0,%esi
    f291:	48 89 c7             	mov    %rax,%rdi
    f294:	e8 a1 9e 00 00       	call   1913a <_ZN2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EDn>
    f299:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f29d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    f2a4:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    f2ab:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
    f2b2:	48 8d 9d 50 fd ff ff 	lea    -0x2b0(%rbp),%rbx
    }

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE std::vector<VULKAN_HPP_NAMESPACE::ExtensionProperties>
                                           PhysicalDevice::enumerateDeviceExtensionProperties( Optional<const std::string> layerName ) const
    {
      std::vector<VULKAN_HPP_NAMESPACE::ExtensionProperties> properties;
    f2b9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2bd:	0f 11 03             	movups %xmm0,(%rbx)
    f2c0:	66 0f d6 43 10       	movq   %xmm0,0x10(%rbx)
      uint32_t                                               propertyCount;
      VkResult                                               result;
      do
      {
        result = getDispatcher()->vkEnumerateDeviceExtensionProperties(
    f2c5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f2cc:	48 89 c7             	mov    %rax,%rdi
    f2cf:	e8 b0 e6 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    f2d4:	4c 8b 60 60          	mov    0x60(%rax),%r12
          static_cast<VkPhysicalDevice>( m_physicalDevice ), layerName ? layerName->c_str() : nullptr, &propertyCount, nullptr );
    f2d8:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f2df:	48 89 c7             	mov    %rax,%rdi
    f2e2:	e8 ef 99 00 00       	call   18cd6 <_ZNK2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEcvbEv>
        result = getDispatcher()->vkEnumerateDeviceExtensionProperties(
    f2e7:	84 c0                	test   %al,%al
    f2e9:	74 1c                	je     f307 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x31e>
          static_cast<VkPhysicalDevice>( m_physicalDevice ), layerName ? layerName->c_str() : nullptr, &propertyCount, nullptr );
    f2eb:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f2f2:	48 89 c7             	mov    %rax,%rdi
    f2f5:	e8 ca 99 00 00       	call   18cc4 <_ZNK2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEptEv>
    f2fa:	48 89 c7             	mov    %rax,%rdi
    f2fd:	e8 d2 af ff ff       	call   a2d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    f302:	49 89 c5             	mov    %rax,%r13
    f305:	eb 06                	jmp    f30d <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x324>
        result = getDispatcher()->vkEnumerateDeviceExtensionProperties(
    f307:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    f30d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f314:	48 89 c7             	mov    %rax,%rdi
    f317:	e8 56 e6 ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    f31c:	48 89 c7             	mov    %rax,%rdi
    f31f:	48 8d 85 ac fc ff ff 	lea    -0x354(%rbp),%rax
    f326:	b9 00 00 00 00       	mov    $0x0,%ecx
    f32b:	48 89 c2             	mov    %rax,%rdx
    f32e:	4c 89 ee             	mov    %r13,%rsi
    f331:	41 ff d4             	call   *%r12
    f334:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
        if ( ( result == VK_SUCCESS ) && propertyCount )
    f33a:	83 bd 5c ff ff ff 00 	cmpl   $0x0,-0xa4(%rbp)
    f341:	0f 85 9f 00 00 00    	jne    f3e6 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x3fd>
    f347:	8b 85 ac fc ff ff    	mov    -0x354(%rbp),%eax
    f34d:	85 c0                	test   %eax,%eax
    f34f:	0f 84 91 00 00 00    	je     f3e6 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x3fd>
        {
          properties.resize( propertyCount );
    f355:	8b 85 ac fc ff ff    	mov    -0x354(%rbp),%eax
    f35b:	89 c0                	mov    %eax,%eax
    f35d:	48 89 c6             	mov    %rax,%rsi
    f360:	48 89 df             	mov    %rbx,%rdi
    f363:	e8 86 99 00 00       	call   18cee <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE6resizeEm>
          result = getDispatcher()->vkEnumerateDeviceExtensionProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    f368:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f36f:	48 89 c7             	mov    %rax,%rdi
    f372:	e8 0d e6 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    f377:	4c 8b 60 60          	mov    0x60(%rax),%r12
                                                                          layerName ? layerName->c_str() : nullptr,
                                                                          &propertyCount,
                                                                          reinterpret_cast<VkExtensionProperties *>( properties.data() ) );
    f37b:	48 89 df             	mov    %rbx,%rdi
    f37e:	e8 fd 99 00 00       	call   18d80 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4dataEv>
    f383:	49 89 c6             	mov    %rax,%r14
                                                                          layerName ? layerName->c_str() : nullptr,
    f386:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f38d:	48 89 c7             	mov    %rax,%rdi
    f390:	e8 41 99 00 00       	call   18cd6 <_ZNK2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEcvbEv>
          result = getDispatcher()->vkEnumerateDeviceExtensionProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    f395:	84 c0                	test   %al,%al
    f397:	74 1c                	je     f3b5 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x3cc>
                                                                          layerName ? layerName->c_str() : nullptr,
    f399:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f3a0:	48 89 c7             	mov    %rax,%rdi
    f3a3:	e8 1c 99 00 00       	call   18cc4 <_ZNK2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEptEv>
    f3a8:	48 89 c7             	mov    %rax,%rdi
    f3ab:	e8 24 af ff ff       	call   a2d4 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
    f3b0:	49 89 c5             	mov    %rax,%r13
    f3b3:	eb 06                	jmp    f3bb <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x3d2>
          result = getDispatcher()->vkEnumerateDeviceExtensionProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    f3b5:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    f3bb:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    f3c2:	48 89 c7             	mov    %rax,%rdi
    f3c5:	e8 a8 e5 ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    f3ca:	48 89 c7             	mov    %rax,%rdi
    f3cd:	48 8d 85 ac fc ff ff 	lea    -0x354(%rbp),%rax
    f3d4:	4c 89 f1             	mov    %r14,%rcx
    f3d7:	48 89 c2             	mov    %rax,%rdx
    f3da:	4c 89 ee             	mov    %r13,%rsi
    f3dd:	41 ff d4             	call   *%r12
    f3e0:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
        }
      } while ( result == VK_INCOMPLETE );
    f3e6:	83 bd 5c ff ff ff 05 	cmpl   $0x5,-0xa4(%rbp)
    f3ed:	0f 84 d2 fe ff ff    	je     f2c5 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x2dc>
    f3f3:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    f3f9:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
    f3ff:	48 8d 05 72 04 02 00 	lea    0x20472(%rip),%rax        # 2f878 <_ZNSt8__detailL19__atomic_spin_countE+0x34c4>
    f406:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    if ( result != Result::eSuccess )
    f40d:	83 bd 58 ff ff ff 00 	cmpl   $0x0,-0xa8(%rbp)
    f414:	74 17                	je     f42d <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x444>
      throwResultException( result, message );
    f416:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    f41d:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
    f423:	48 89 d6             	mov    %rdx,%rsi
    f426:	89 c7                	mov    %eax,%edi
    f428:	e8 65 f1 ff ff       	call   e592 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
    f42d:	90                   	nop
      resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::PhysicalDevice::enumerateDeviceExtensionProperties" );
      VULKAN_HPP_ASSERT( propertyCount <= properties.size() );
    f42e:	8b 85 ac fc ff ff    	mov    -0x354(%rbp),%eax
    f434:	41 89 c4             	mov    %eax,%r12d
    f437:	48 89 df             	mov    %rbx,%rdi
    f43a:	e8 65 99 00 00       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
    f43f:	4c 39 e0             	cmp    %r12,%rax
    f442:	73 28                	jae    f46c <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x483>
    f444:	48 8d 05 65 04 02 00 	lea    0x20465(%rip),%rax        # 2f8b0 <_ZNSt8__detailL19__atomic_spin_countE+0x34fc>
    f44b:	48 89 c1             	mov    %rax,%rcx
    f44e:	ba a0 2a 00 00       	mov    $0x2aa0,%edx
    f453:	48 8d 05 9e 01 02 00 	lea    0x2019e(%rip),%rax        # 2f5f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3244>
    f45a:	48 89 c6             	mov    %rax,%rsi
    f45d:	48 8d 05 ec 04 02 00 	lea    0x204ec(%rip),%rax        # 2f950 <_ZNSt8__detailL19__atomic_spin_countE+0x359c>
    f464:	48 89 c7             	mov    %rax,%rdi
    f467:	e8 a4 5c ff ff       	call   5110 <__assert_fail@plt>
      if ( propertyCount < properties.size() )
    f46c:	8b 85 ac fc ff ff    	mov    -0x354(%rbp),%eax
    f472:	41 89 c4             	mov    %eax,%r12d
    f475:	48 89 df             	mov    %rbx,%rdi
    f478:	e8 27 99 00 00       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
    f47d:	49 39 c4             	cmp    %rax,%r12
    f480:	0f 92 c0             	setb   %al
    f483:	84 c0                	test   %al,%al
    f485:	74 28                	je     f4af <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x4c6>
      {
        properties.resize( propertyCount );
    f487:	8b 85 ac fc ff ff    	mov    -0x354(%rbp),%eax
    f48d:	89 c0                	mov    %eax,%eax
    f48f:	48 89 c6             	mov    %rax,%rsi
    f492:	48 89 df             	mov    %rbx,%rdi
    f495:	e8 54 98 00 00       	call   18cee <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE6resizeEm>
      }
      return properties;
    f49a:	eb 13                	jmp    f4af <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x4c6>
    }
    f49c:	49 89 c4             	mov    %rax,%r12
    f49f:	48 89 df             	mov    %rbx,%rdi
    f4a2:	e8 d9 97 00 00       	call   18c80 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EED1Ev>
    f4a7:	4c 89 e3             	mov    %r12,%rbx
    f4aa:	e9 85 10 00 00       	jmp    10534 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x154b>
      return properties;
    f4af:	90                   	nop
    std::map<std::string, uint32_t> extensionsMap{};
    f4b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4b4:	0f 29 85 70 f8 ff ff 	movaps %xmm0,-0x790(%rbp)
    f4bb:	0f 29 85 80 f8 ff ff 	movaps %xmm0,-0x780(%rbp)
    f4c2:	0f 29 85 90 f8 ff ff 	movaps %xmm0,-0x770(%rbp)
    f4c9:	48 8d 85 70 f8 ff ff 	lea    -0x790(%rbp),%rax
    f4d0:	48 89 c7             	mov    %rax,%rdi
    f4d3:	e8 88 8d 00 00       	call   18260 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
    for (const auto &extension : supportedExtensions) {
    f4d8:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    f4df:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f4e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4e7:	48 89 c7             	mov    %rax,%rdi
    f4ea:	e8 e3 9c 00 00       	call   191d2 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE5beginEv>
    f4ef:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
    f4f6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f4fa:	48 89 c7             	mov    %rax,%rdi
    f4fd:	e8 f6 9c 00 00       	call   191f8 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE3endEv>
    f502:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
    f509:	eb 6d                	jmp    f578 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x58f>
    f50b:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    f512:	48 89 c7             	mov    %rax,%rdi
    f515:	e8 c6 8d 00 00       	call   182e0 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEdeEv>
    f51a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
      extensionsMap[extension.extensionName]++;
    f521:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    f528:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
    f52f:	48 89 d6             	mov    %rdx,%rsi
    f532:	48 89 c7             	mov    %rax,%rdi
    f535:	e8 0c 9d 00 00       	call   19246 <_ZNK2vk14ArrayWrapper1DIcLm256EEcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIcLi0EEEv>
    f53a:	48 8d 95 d0 fd ff ff 	lea    -0x230(%rbp),%rdx
    f541:	48 8d 85 70 f8 ff ff 	lea    -0x790(%rbp),%rax
    f548:	48 89 d6             	mov    %rdx,%rsi
    f54b:	48 89 c7             	mov    %rax,%rdi
    f54e:	e8 65 9d 00 00       	call   192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f553:	8b 10                	mov    (%rax),%edx
    f555:	83 c2 01             	add    $0x1,%edx
    f558:	89 10                	mov    %edx,(%rax)
    f55a:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
    f561:	48 89 c7             	mov    %rax,%rdi
    f564:	e8 85 ad ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    for (const auto &extension : supportedExtensions) {
    f569:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    f570:	48 89 c7             	mov    %rax,%rdi
    f573:	e8 aa 9c 00 00       	call   19222 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEppEv>
    f578:	48 8d 95 98 fc ff ff 	lea    -0x368(%rbp),%rdx
    f57f:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    f586:	48 89 d6             	mov    %rdx,%rsi
    f589:	48 89 c7             	mov    %rax,%rdi
    f58c:	e8 06 8d 00 00       	call   18297 <_ZN9__gnu_cxxeqIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f591:	83 f0 01             	xor    $0x1,%eax
    f594:	84 c0                	test   %al,%al
    f596:	0f 85 6f ff ff ff    	jne    f50b <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x522>
    }
    for (const auto &extension : requiredExtensions) {
    f59c:	48 8d 05 bd 2d 03 00 	lea    0x32dbd(%rip),%rax        # 42360 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
    f5a3:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    f5a7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f5ab:	48 89 c7             	mov    %rax,%rdi
    f5ae:	e8 3f 8d 00 00       	call   182f2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f5b3:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
    f5ba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f5be:	48 89 c7             	mov    %rax,%rdi
    f5c1:	e8 70 8d 00 00       	call   18336 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f5c6:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
    f5cd:	e9 0e 01 00 00       	jmp    f6e0 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x6f7>
    f5d2:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
    f5d9:	48 89 c7             	mov    %rax,%rdi
    f5dc:	e8 c7 8d 00 00       	call   183a8 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f5e1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
      extensionsMap[extension]++;
    f5e8:	48 8d 85 1f fe ff ff 	lea    -0x1e1(%rbp),%rax
    f5ef:	48 89 c7             	mov    %rax,%rdi
    f5f2:	e8 b9 5d ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    f5f7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f5fe:	48 8b 08             	mov    (%rax),%rcx
    f601:	48 8d 95 1f fe ff ff 	lea    -0x1e1(%rbp),%rdx
    f608:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    f60f:	48 89 ce             	mov    %rcx,%rsi
    f612:	48 89 c7             	mov    %rax,%rdi
    f615:	e8 6a ae ff ff       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f61a:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    f621:	48 8d 85 70 f8 ff ff 	lea    -0x790(%rbp),%rax
    f628:	48 89 d6             	mov    %rdx,%rsi
    f62b:	48 89 c7             	mov    %rax,%rdi
    f62e:	e8 85 9c 00 00       	call   192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f633:	8b 10                	mov    (%rax),%edx
    f635:	83 c2 01             	add    $0x1,%edx
    f638:	89 10                	mov    %edx,(%rax)
    f63a:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    f641:	48 89 c7             	mov    %rax,%rdi
    f644:	e8 a5 ac ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    f649:	48 8d 85 1f fe ff ff 	lea    -0x1e1(%rbp),%rax
    f650:	48 89 c7             	mov    %rax,%rdi
    f653:	e8 18 5c ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
      if (extensionsMap[extension] < 2) {
    f658:	48 8d 85 4f fe ff ff 	lea    -0x1b1(%rbp),%rax
    f65f:	48 89 c7             	mov    %rax,%rdi
    f662:	e8 49 5d ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    f667:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f66e:	48 8b 08             	mov    (%rax),%rcx
    f671:	48 8d 95 4f fe ff ff 	lea    -0x1b1(%rbp),%rdx
    f678:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    f67f:	48 89 ce             	mov    %rcx,%rsi
    f682:	48 89 c7             	mov    %rax,%rdi
    f685:	e8 fa ad ff ff       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f68a:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    f691:	48 8d 85 70 f8 ff ff 	lea    -0x790(%rbp),%rax
    f698:	48 89 d6             	mov    %rdx,%rsi
    f69b:	48 89 c7             	mov    %rax,%rdi
    f69e:	e8 15 9c 00 00       	call   192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f6a3:	8b 00                	mov    (%rax),%eax
    f6a5:	83 f8 01             	cmp    $0x1,%eax
    f6a8:	0f 96 c3             	setbe  %bl
    f6ab:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    f6b2:	48 89 c7             	mov    %rax,%rdi
    f6b5:	e8 34 ac ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    f6ba:	48 8d 85 4f fe ff ff 	lea    -0x1b1(%rbp),%rax
    f6c1:	48 89 c7             	mov    %rax,%rdi
    f6c4:	e8 a7 5b ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    f6c9:	84 db                	test   %bl,%bl
    f6cb:	74 04                	je     f6d1 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x6e8>
        extensionsSupported = false;
    f6cd:	c6 45 cf 00          	movb   $0x0,-0x31(%rbp)
    for (const auto &extension : requiredExtensions) {
    f6d1:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
    f6d8:	48 89 c7             	mov    %rax,%rdi
    f6db:	e8 dc 9c 00 00       	call   193bc <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    f6e0:	48 8d 95 88 fc ff ff 	lea    -0x378(%rbp),%rdx
    f6e7:	48 8d 85 90 fc ff ff 	lea    -0x370(%rbp),%rax
    f6ee:	48 89 d6             	mov    %rdx,%rsi
    f6f1:	48 89 c7             	mov    %rax,%rdi
    f6f4:	e8 66 8c 00 00       	call   1835f <_ZN9__gnu_cxxeqIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    f6f9:	83 f0 01             	xor    $0x1,%eax
    f6fc:	84 c0                	test   %al,%al
    f6fe:	0f 85 ce fe ff ff    	jne    f5d2 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x5e9>
      }
    }
    if (!extensionsSupported) {
    f704:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
    f708:	83 f0 01             	xor    $0x1,%eax
    f70b:	84 c0                	test   %al,%al
    f70d:	74 0a                	je     f719 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x730>
      continue;
    f70f:	bb 00 00 00 00       	mov    $0x0,%ebx
    f714:	e9 48 0b 00 00       	jmp    10261 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1278>
    }

    bool layerSupported = true;
    f719:	c6 45 ce 01          	movb   $0x1,-0x32(%rbp)
    f71d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f721:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    f728:	48 8d 9d 30 fd ff ff 	lea    -0x2d0(%rbp),%rbx
      return properties;
    }

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE std::vector<VULKAN_HPP_NAMESPACE::LayerProperties> PhysicalDevice::enumerateDeviceLayerProperties() const
    {
      std::vector<VULKAN_HPP_NAMESPACE::LayerProperties> properties;
    f72f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f733:	0f 11 03             	movups %xmm0,(%rbx)
    f736:	66 0f d6 43 10       	movq   %xmm0,0x10(%rbx)
      uint32_t                                           propertyCount;
      VkResult                                           result;
      do
      {
        result = getDispatcher()->vkEnumerateDeviceLayerProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ), &propertyCount, nullptr );
    f73b:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f742:	48 89 c7             	mov    %rax,%rdi
    f745:	e8 3a e2 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    f74a:	4c 8b 60 68          	mov    0x68(%rax),%r12
    f74e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f755:	48 89 c7             	mov    %rax,%rdi
    f758:	e8 15 e2 ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    f75d:	48 89 c1             	mov    %rax,%rcx
    f760:	48 8d 85 b8 fc ff ff 	lea    -0x348(%rbp),%rax
    f767:	ba 00 00 00 00       	mov    $0x0,%edx
    f76c:	48 89 c6             	mov    %rax,%rsi
    f76f:	48 89 cf             	mov    %rcx,%rdi
    f772:	41 ff d4             	call   *%r12
    f775:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
        if ( ( result == VK_SUCCESS ) && propertyCount )
    f77b:	83 bd 44 ff ff ff 00 	cmpl   $0x0,-0xbc(%rbp)
    f782:	75 66                	jne    f7ea <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x801>
    f784:	8b 85 b8 fc ff ff    	mov    -0x348(%rbp),%eax
    f78a:	85 c0                	test   %eax,%eax
    f78c:	74 5c                	je     f7ea <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x801>
        {
          properties.resize( propertyCount );
    f78e:	8b 85 b8 fc ff ff    	mov    -0x348(%rbp),%eax
    f794:	89 c0                	mov    %eax,%eax
    f796:	48 89 c6             	mov    %rax,%rsi
    f799:	48 89 df             	mov    %rbx,%rdi
    f79c:	e8 d9 96 00 00       	call   18e7a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm>
          result = getDispatcher()->vkEnumerateDeviceLayerProperties(
    f7a1:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f7a8:	48 89 c7             	mov    %rax,%rdi
    f7ab:	e8 d4 e1 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    f7b0:	4c 8b 60 68          	mov    0x68(%rax),%r12
            static_cast<VkPhysicalDevice>( m_physicalDevice ), &propertyCount, reinterpret_cast<VkLayerProperties *>( properties.data() ) );
    f7b4:	48 89 df             	mov    %rbx,%rdi
    f7b7:	e8 50 97 00 00       	call   18f0c <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE4dataEv>
    f7bc:	49 89 c5             	mov    %rax,%r13
          result = getDispatcher()->vkEnumerateDeviceLayerProperties(
    f7bf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    f7c6:	48 89 c7             	mov    %rax,%rdi
    f7c9:	e8 a4 e1 ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    f7ce:	48 89 c1             	mov    %rax,%rcx
    f7d1:	48 8d 85 b8 fc ff ff 	lea    -0x348(%rbp),%rax
    f7d8:	4c 89 ea             	mov    %r13,%rdx
    f7db:	48 89 c6             	mov    %rax,%rsi
    f7de:	48 89 cf             	mov    %rcx,%rdi
    f7e1:	41 ff d4             	call   *%r12
    f7e4:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
        }
      } while ( result == VK_INCOMPLETE );
    f7ea:	83 bd 44 ff ff ff 05 	cmpl   $0x5,-0xbc(%rbp)
    f7f1:	0f 84 44 ff ff ff    	je     f73b <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x752>
    f7f7:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    f7fd:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
    f803:	48 8d 05 6e 01 02 00 	lea    0x2016e(%rip),%rax        # 2f978 <_ZNSt8__detailL19__atomic_spin_countE+0x35c4>
    f80a:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    if ( result != Result::eSuccess )
    f811:	83 bd 40 ff ff ff 00 	cmpl   $0x0,-0xc0(%rbp)
    f818:	74 17                	je     f831 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x848>
      throwResultException( result, message );
    f81a:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    f821:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    f827:	48 89 d6             	mov    %rdx,%rsi
    f82a:	89 c7                	mov    %eax,%edi
    f82c:	e8 61 ed ff ff       	call   e592 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
    f831:	90                   	nop
      resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::PhysicalDevice::enumerateDeviceLayerProperties" );
      VULKAN_HPP_ASSERT( propertyCount <= properties.size() );
    f832:	8b 85 b8 fc ff ff    	mov    -0x348(%rbp),%eax
    f838:	41 89 c4             	mov    %eax,%r12d
    f83b:	48 89 df             	mov    %rbx,%rdi
    f83e:	e8 ed 96 00 00       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
    f843:	4c 39 e0             	cmp    %r12,%rax
    f846:	73 28                	jae    f870 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x887>
    f848:	48 8d 05 61 01 02 00 	lea    0x20161(%rip),%rax        # 2f9b0 <_ZNSt8__detailL19__atomic_spin_countE+0x35fc>
    f84f:	48 89 c1             	mov    %rax,%rcx
    f852:	ba cf 2a 00 00       	mov    $0x2acf,%edx
    f857:	48 8d 05 9a fd 01 00 	lea    0x1fd9a(%rip),%rax        # 2f5f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3244>
    f85e:	48 89 c6             	mov    %rax,%rsi
    f861:	48 8d 05 e8 00 02 00 	lea    0x200e8(%rip),%rax        # 2f950 <_ZNSt8__detailL19__atomic_spin_countE+0x359c>
    f868:	48 89 c7             	mov    %rax,%rdi
    f86b:	e8 a0 58 ff ff       	call   5110 <__assert_fail@plt>
      if ( propertyCount < properties.size() )
    f870:	8b 85 b8 fc ff ff    	mov    -0x348(%rbp),%eax
    f876:	41 89 c4             	mov    %eax,%r12d
    f879:	48 89 df             	mov    %rbx,%rdi
    f87c:	e8 af 96 00 00       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
    f881:	49 39 c4             	cmp    %rax,%r12
    f884:	0f 92 c0             	setb   %al
    f887:	84 c0                	test   %al,%al
    f889:	74 28                	je     f8b3 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x8ca>
      {
        properties.resize( propertyCount );
    f88b:	8b 85 b8 fc ff ff    	mov    -0x348(%rbp),%eax
    f891:	89 c0                	mov    %eax,%eax
    f893:	48 89 c6             	mov    %rax,%rsi
    f896:	48 89 df             	mov    %rbx,%rdi
    f899:	e8 dc 95 00 00       	call   18e7a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm>
      }
      return properties;
    f89e:	eb 13                	jmp    f8b3 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x8ca>
    }
    f8a0:	49 89 c4             	mov    %rax,%r12
    f8a3:	48 89 df             	mov    %rbx,%rdi
    f8a6:	e8 8b 95 00 00       	call   18e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>
    f8ab:	4c 89 e3             	mov    %r12,%rbx
    f8ae:	e9 4e 0c 00 00       	jmp    10501 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1518>
      return properties;
    f8b3:	90                   	nop
    auto supportedLayers = physicalDevice.enumerateDeviceLayerProperties();
    std::map<std::string, uint32_t> layerMap{};
    f8b4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f8b8:	0f 29 85 a0 f8 ff ff 	movaps %xmm0,-0x760(%rbp)
    f8bf:	0f 29 85 b0 f8 ff ff 	movaps %xmm0,-0x750(%rbp)
    f8c6:	0f 29 85 c0 f8 ff ff 	movaps %xmm0,-0x740(%rbp)
    f8cd:	48 8d 85 a0 f8 ff ff 	lea    -0x760(%rbp),%rax
    f8d4:	48 89 c7             	mov    %rax,%rdi
    f8d7:	e8 84 89 00 00       	call   18260 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
    for (const auto &layer : supportedLayers) {
    f8dc:	48 8d 85 30 fd ff ff 	lea    -0x2d0(%rbp),%rax
    f8e3:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    f8e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f8eb:	48 89 c7             	mov    %rax,%rdi
    f8ee:	e8 e9 9a 00 00       	call   193dc <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE5beginEv>
    f8f3:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
    f8fa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f8fe:	48 89 c7             	mov    %rax,%rdi
    f901:	e8 fc 9a 00 00       	call   19402 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE3endEv>
    f906:	48 89 85 78 fc ff ff 	mov    %rax,-0x388(%rbp)
    f90d:	eb 67                	jmp    f976 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x98d>
    f90f:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
    f916:	48 89 c7             	mov    %rax,%rdi
    f919:	e8 e4 8a 00 00       	call   18402 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEdeEv>
    f91e:	48 89 45 80          	mov    %rax,-0x80(%rbp)
      layerMap[layer.layerName]++;
    f922:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    f926:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    f92d:	48 89 d6             	mov    %rdx,%rsi
    f930:	48 89 c7             	mov    %rax,%rdi
    f933:	e8 0e 99 00 00       	call   19246 <_ZNK2vk14ArrayWrapper1DIcLm256EEcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIcLi0EEEv>
    f938:	48 8d 95 50 fe ff ff 	lea    -0x1b0(%rbp),%rdx
    f93f:	48 8d 85 a0 f8 ff ff 	lea    -0x760(%rbp),%rax
    f946:	48 89 d6             	mov    %rdx,%rsi
    f949:	48 89 c7             	mov    %rax,%rdi
    f94c:	e8 67 99 00 00       	call   192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    f951:	8b 10                	mov    (%rax),%edx
    f953:	83 c2 01             	add    $0x1,%edx
    f956:	89 10                	mov    %edx,(%rax)
    f958:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    f95f:	48 89 c7             	mov    %rax,%rdi
    f962:	e8 87 a9 ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    for (const auto &layer : supportedLayers) {
    f967:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
    f96e:	48 89 c7             	mov    %rax,%rdi
    f971:	e8 b6 9a 00 00       	call   1942c <_ZN9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEppEv>
    f976:	48 8d 95 78 fc ff ff 	lea    -0x388(%rbp),%rdx
    f97d:	48 8d 85 80 fc ff ff 	lea    -0x380(%rbp),%rax
    f984:	48 89 d6             	mov    %rdx,%rsi
    f987:	48 89 c7             	mov    %rax,%rdi
    f98a:	e8 2a 8a 00 00       	call   183b9 <_ZN9__gnu_cxxeqIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f98f:	83 f0 01             	xor    $0x1,%eax
    f992:	84 c0                	test   %al,%al
    f994:	0f 85 75 ff ff ff    	jne    f90f <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x926>
    }
    for (const auto &layer : instanceLayers) {
    f99a:	48 8d 05 df 29 03 00 	lea    0x329df(%rip),%rax        # 42380 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
    f9a1:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    f9a5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f9a9:	48 89 c7             	mov    %rax,%rdi
    f9ac:	e8 41 89 00 00       	call   182f2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f9b1:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
    f9b8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f9bc:	48 89 c7             	mov    %rax,%rdi
    f9bf:	e8 72 89 00 00       	call   18336 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f9c4:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
    f9cb:	e9 05 01 00 00       	jmp    fad5 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xaec>
    f9d0:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    f9d7:	48 89 c7             	mov    %rax,%rdi
    f9da:	e8 c9 89 00 00       	call   183a8 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f9df:	48 89 45 88          	mov    %rax,-0x78(%rbp)
      layerMap[layer]++;
    f9e3:	48 8d 85 9f fe ff ff 	lea    -0x161(%rbp),%rax
    f9ea:	48 89 c7             	mov    %rax,%rdi
    f9ed:	e8 be 59 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    f9f2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f9f6:	48 8b 08             	mov    (%rax),%rcx
    f9f9:	48 8d 95 9f fe ff ff 	lea    -0x161(%rbp),%rdx
    fa00:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    fa07:	48 89 ce             	mov    %rcx,%rsi
    fa0a:	48 89 c7             	mov    %rax,%rdi
    fa0d:	e8 72 aa ff ff       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fa12:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
    fa19:	48 8d 85 a0 f8 ff ff 	lea    -0x760(%rbp),%rax
    fa20:	48 89 d6             	mov    %rdx,%rsi
    fa23:	48 89 c7             	mov    %rax,%rdi
    fa26:	e8 8d 98 00 00       	call   192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    fa2b:	8b 10                	mov    (%rax),%edx
    fa2d:	83 c2 01             	add    $0x1,%edx
    fa30:	89 10                	mov    %edx,(%rax)
    fa32:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    fa39:	48 89 c7             	mov    %rax,%rdi
    fa3c:	e8 ad a8 ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    fa41:	48 8d 85 9f fe ff ff 	lea    -0x161(%rbp),%rax
    fa48:	48 89 c7             	mov    %rax,%rdi
    fa4b:	e8 20 58 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
      if (layerMap[layer] < 2) {
    fa50:	48 8d 85 c3 fe ff ff 	lea    -0x13d(%rbp),%rax
    fa57:	48 89 c7             	mov    %rax,%rdi
    fa5a:	e8 51 59 ff ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
    fa5f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    fa63:	48 8b 08             	mov    (%rax),%rcx
    fa66:	48 8d 95 c3 fe ff ff 	lea    -0x13d(%rbp),%rdx
    fa6d:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    fa74:	48 89 ce             	mov    %rcx,%rsi
    fa77:	48 89 c7             	mov    %rax,%rdi
    fa7a:	e8 05 aa ff ff       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fa7f:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    fa86:	48 8d 85 a0 f8 ff ff 	lea    -0x760(%rbp),%rax
    fa8d:	48 89 d6             	mov    %rdx,%rsi
    fa90:	48 89 c7             	mov    %rax,%rdi
    fa93:	e8 20 98 00 00       	call   192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    fa98:	8b 00                	mov    (%rax),%eax
    fa9a:	83 f8 01             	cmp    $0x1,%eax
    fa9d:	0f 96 c3             	setbe  %bl
    faa0:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    faa7:	48 89 c7             	mov    %rax,%rdi
    faaa:	e8 3f a8 ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    faaf:	48 8d 85 c3 fe ff ff 	lea    -0x13d(%rbp),%rax
    fab6:	48 89 c7             	mov    %rax,%rdi
    fab9:	e8 b2 57 ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
    fabe:	84 db                	test   %bl,%bl
    fac0:	74 04                	je     fac6 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xadd>
        layerSupported = false;
    fac2:	c6 45 ce 00          	movb   $0x0,-0x32(%rbp)
    for (const auto &layer : instanceLayers) {
    fac6:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    facd:	48 89 c7             	mov    %rax,%rdi
    fad0:	e8 e7 98 00 00       	call   193bc <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    fad5:	48 8d 95 68 fc ff ff 	lea    -0x398(%rbp),%rdx
    fadc:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    fae3:	48 89 d6             	mov    %rdx,%rsi
    fae6:	48 89 c7             	mov    %rax,%rdi
    fae9:	e8 71 88 00 00       	call   1835f <_ZN9__gnu_cxxeqIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    faee:	83 f0 01             	xor    $0x1,%eax
    faf1:	84 c0                	test   %al,%al
    faf3:	0f 85 d7 fe ff ff    	jne    f9d0 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x9e7>
      }
    }
    if (!layerSupported) {
    faf9:	0f b6 45 ce          	movzbl -0x32(%rbp),%eax
    fafd:	83 f0 01             	xor    $0x1,%eax
    fb00:	84 c0                	test   %al,%al
    fb02:	74 0a                	je     fb0e <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xb25>
      continue;
    fb04:	bb 00 00 00 00       	mov    $0x0,%ebx
    fb09:	e9 15 07 00 00       	jmp    10223 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x123a>
    fb0e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fb12:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
      VULKAN_HPP_NAMESPACE::PhysicalDeviceFeatures features;
    fb19:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    fb20:	b8 00 00 00 00       	mov    $0x0,%eax
    fb25:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    fb2a:	48 89 d7             	mov    %rdx,%rdi
    fb2d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    fb30:	48 89 fa             	mov    %rdi,%rdx
    fb33:	89 02                	mov    %eax,(%rdx)
    fb35:	48 83 c2 04          	add    $0x4,%rdx
      getDispatcher()->vkGetPhysicalDeviceFeatures( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    fb39:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fb40:	48 89 c7             	mov    %rax,%rdi
    fb43:	e8 3c de ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    fb48:	48 8b 58 20          	mov    0x20(%rax),%rbx
    fb4c:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fb53:	48 89 c7             	mov    %rax,%rdi
    fb56:	e8 17 de ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    fb5b:	48 89 c2             	mov    %rax,%rdx
    fb5e:	48 8d 85 20 f9 ff ff 	lea    -0x6e0(%rbp),%rax
    fb65:	48 89 c6             	mov    %rax,%rsi
    fb68:	48 89 d7             	mov    %rdx,%rdi
    fb6b:	ff d3                	call   *%rbx
      return features;
    fb6d:	90                   	nop
    }

    if (auto features = physicalDevice.getFeatures();
        !features.samplerAnisotropy) {
    fb6e:	8b 85 6c f9 ff ff    	mov    -0x694(%rbp),%eax
    if (auto features = physicalDevice.getFeatures();
    fb74:	85 c0                	test   %eax,%eax
    fb76:	75 0a                	jne    fb82 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xb99>
    fb78:	bb 00 00 00 00       	mov    $0x0,%ebx
    fb7d:	e9 a1 06 00 00       	jmp    10223 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x123a>
    fb82:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fb86:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    fb8d:	48 8d 9d 10 fd ff ff 	lea    -0x2f0(%rbp),%rbx
      std::vector<VULKAN_HPP_NAMESPACE::QueueFamilyProperties> queueFamilyProperties;
    fb94:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb98:	0f 11 03             	movups %xmm0,(%rbx)
    fb9b:	66 0f d6 43 10       	movq   %xmm0,0x10(%rbx)
      getDispatcher()->vkGetPhysicalDeviceQueueFamilyProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ), &queueFamilyPropertyCount, nullptr );
    fba0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    fba7:	48 89 c7             	mov    %rax,%rdi
    fbaa:	e8 d5 dd ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    fbaf:	4c 8b 60 40          	mov    0x40(%rax),%r12
    fbb3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    fbba:	48 89 c7             	mov    %rax,%rdi
    fbbd:	e8 b0 dd ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    fbc2:	48 89 c1             	mov    %rax,%rcx
    fbc5:	48 8d 85 bc fc ff ff 	lea    -0x344(%rbp),%rax
    fbcc:	ba 00 00 00 00       	mov    $0x0,%edx
    fbd1:	48 89 c6             	mov    %rax,%rsi
    fbd4:	48 89 cf             	mov    %rcx,%rdi
    fbd7:	41 ff d4             	call   *%r12
      queueFamilyProperties.resize( queueFamilyPropertyCount );
    fbda:	8b 85 bc fc ff ff    	mov    -0x344(%rbp),%eax
    fbe0:	89 c0                	mov    %eax,%eax
    fbe2:	48 89 c6             	mov    %rax,%rsi
    fbe5:	48 89 df             	mov    %rbx,%rdi
    fbe8:	e8 4d 8f 00 00       	call   18b3a <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE6resizeEm>
      getDispatcher()->vkGetPhysicalDeviceQueueFamilyProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    fbed:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    fbf4:	48 89 c7             	mov    %rax,%rdi
    fbf7:	e8 88 dd ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    fbfc:	4c 8b 60 40          	mov    0x40(%rax),%r12
                                                                 reinterpret_cast<VkQueueFamilyProperties *>( queueFamilyProperties.data() ) );
    fc00:	48 89 df             	mov    %rbx,%rdi
    fc03:	e8 c2 8f 00 00       	call   18bca <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4dataEv>
    fc08:	49 89 c5             	mov    %rax,%r13
      getDispatcher()->vkGetPhysicalDeviceQueueFamilyProperties( static_cast<VkPhysicalDevice>( m_physicalDevice ),
    fc0b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    fc12:	48 89 c7             	mov    %rax,%rdi
    fc15:	e8 58 dd ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    fc1a:	48 89 c1             	mov    %rax,%rcx
    fc1d:	48 8d 85 bc fc ff ff 	lea    -0x344(%rbp),%rax
    fc24:	4c 89 ea             	mov    %r13,%rdx
    fc27:	48 89 c6             	mov    %rax,%rsi
    fc2a:	48 89 cf             	mov    %rcx,%rdi
    fc2d:	41 ff d4             	call   *%r12
      VULKAN_HPP_ASSERT( queueFamilyPropertyCount <= queueFamilyProperties.size() );
    fc30:	8b 85 bc fc ff ff    	mov    -0x344(%rbp),%eax
    fc36:	41 89 c4             	mov    %eax,%r12d
    fc39:	48 89 df             	mov    %rbx,%rdi
    fc3c:	e8 ad 8f 00 00       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
    fc41:	4c 39 e0             	cmp    %r12,%rax
    fc44:	73 28                	jae    fc6e <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xc85>
    fc46:	48 8d 05 cb fd 01 00 	lea    0x1fdcb(%rip),%rax        # 2fa18 <_ZNSt8__detailL19__atomic_spin_countE+0x3664>
    fc4d:	48 89 c1             	mov    %rax,%rcx
    fc50:	ba 4d 2a 00 00       	mov    $0x2a4d,%edx
    fc55:	48 8d 05 9c f9 01 00 	lea    0x1f99c(%rip),%rax        # 2f5f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3244>
    fc5c:	48 89 c6             	mov    %rax,%rsi
    fc5f:	48 8d 05 1a fe 01 00 	lea    0x1fe1a(%rip),%rax        # 2fa80 <_ZNSt8__detailL19__atomic_spin_countE+0x36cc>
    fc66:	48 89 c7             	mov    %rax,%rdi
    fc69:	e8 a2 54 ff ff       	call   5110 <__assert_fail@plt>
      if ( queueFamilyPropertyCount < queueFamilyProperties.size() )
    fc6e:	8b 85 bc fc ff ff    	mov    -0x344(%rbp),%eax
    fc74:	41 89 c4             	mov    %eax,%r12d
    fc77:	48 89 df             	mov    %rbx,%rdi
    fc7a:	e8 6f 8f 00 00       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
    fc7f:	49 39 c4             	cmp    %rax,%r12
    fc82:	0f 92 c0             	setb   %al
    fc85:	84 c0                	test   %al,%al
    fc87:	74 28                	je     fcb1 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xcc8>
        queueFamilyProperties.resize( queueFamilyPropertyCount );
    fc89:	8b 85 bc fc ff ff    	mov    -0x344(%rbp),%eax
    fc8f:	89 c0                	mov    %eax,%eax
    fc91:	48 89 c6             	mov    %rax,%rsi
    fc94:	48 89 df             	mov    %rbx,%rdi
    fc97:	e8 9e 8e 00 00       	call   18b3a <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE6resizeEm>
      return queueFamilyProperties;
    fc9c:	eb 13                	jmp    fcb1 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xcc8>
    }
    fc9e:	49 89 c4             	mov    %rax,%r12
    fca1:	48 89 df             	mov    %rbx,%rdi
    fca4:	e8 4d 8e 00 00       	call   18af6 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EED1Ev>
    fca9:	4c 89 e3             	mov    %r12,%rbx
    fcac:	e9 2d 08 00 00       	jmp    104de <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14f5>
      return queueFamilyProperties;
    fcb1:	90                   	nop
      continue;
    }

    auto queueFamilies = physicalDevice.getQueueFamilyProperties();
    std::optional<uint32_t> selectedQueueFamilyIndex;
    fcb2:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    fcb9:	00 00 00 00 
    for (size_t i = 0; i < queueFamilies.size(); ++i) {
    fcbd:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    fcc4:	00 
    fcc5:	e9 17 02 00 00       	jmp    fee1 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xef8>
      if ((queueFamilies[i].queueFlags & vk::QueueFlagBits::eGraphics) &&
    fcca:	48 8d 85 c8 fe ff ff 	lea    -0x138(%rbp),%rax
    fcd1:	be 01 00 00 00       	mov    $0x1,%esi
    fcd6:	48 89 c7             	mov    %rax,%rdi
    fcd9:	e8 22 88 00 00       	call   18500 <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1ES1_>
    fcde:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    fce2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fce9:	48 89 d6             	mov    %rdx,%rsi
    fcec:	48 89 c7             	mov    %rax,%rdi
    fcef:	e8 5c 97 00 00       	call   19450 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EEixEm>
    fcf4:	48 89 c2             	mov    %rax,%rdx
    fcf7:	48 8d 85 c8 fe ff ff 	lea    -0x138(%rbp),%rax
    fcfe:	48 89 c6             	mov    %rax,%rsi
    fd01:	48 89 d7             	mov    %rdx,%rdi
    fd04:	e8 0f 88 00 00       	call   18518 <_ZNK2vk5FlagsINS_13QueueFlagBitsEEanERKS2_>
    fd09:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
          (queueFamilies[i].queueFlags & vk::QueueFlagBits::eCompute) &&
    fd0f:	48 8d 85 c4 fe ff ff 	lea    -0x13c(%rbp),%rax
    fd16:	48 89 c7             	mov    %rax,%rdi
    fd19:	e8 2c 88 00 00       	call   1854a <_ZNK2vk5FlagsINS_13QueueFlagBitsEEcvbEv>
    fd1e:	84 c0                	test   %al,%al
    fd20:	0f 84 7c 01 00 00    	je     fea2 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xeb9>
    fd26:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    fd2d:	be 02 00 00 00       	mov    $0x2,%esi
    fd32:	48 89 c7             	mov    %rax,%rdi
    fd35:	e8 c6 87 00 00       	call   18500 <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1ES1_>
    fd3a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    fd3e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd45:	48 89 d6             	mov    %rdx,%rsi
    fd48:	48 89 c7             	mov    %rax,%rdi
    fd4b:	e8 00 97 00 00       	call   19450 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EEixEm>
    fd50:	48 89 c2             	mov    %rax,%rdx
    fd53:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    fd5a:	48 89 c6             	mov    %rax,%rsi
    fd5d:	48 89 d7             	mov    %rdx,%rdi
    fd60:	e8 b3 87 00 00       	call   18518 <_ZNK2vk5FlagsINS_13QueueFlagBitsEEanERKS2_>
    fd65:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
    fd6b:	48 8d 85 cc fe ff ff 	lea    -0x134(%rbp),%rax
    fd72:	48 89 c7             	mov    %rax,%rdi
    fd75:	e8 d0 87 00 00       	call   1854a <_ZNK2vk5FlagsINS_13QueueFlagBitsEEcvbEv>
      if ((queueFamilies[i].queueFlags & vk::QueueFlagBits::eGraphics) &&
    fd7a:	84 c0                	test   %al,%al
    fd7c:	0f 84 20 01 00 00    	je     fea2 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xeb9>
          (physicalDevice.getSurfaceSupportKHR(static_cast<uint32_t>(i),
                                               *surface))) {
    fd82:	48 8b 85 28 f8 ff ff 	mov    -0x7d8(%rbp),%rax
    fd89:	48 89 c7             	mov    %rax,%rdi
    fd8c:	e8 55 7c 00 00       	call   179e6 <_ZNK2vk4raii10SurfaceKHRdeEv>
          (physicalDevice.getSurfaceSupportKHR(static_cast<uint32_t>(i),
    fd91:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    fd95:	89 d1                	mov    %edx,%ecx
    fd97:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    fd9b:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
    fda2:	89 8d 1c ff ff ff    	mov    %ecx,-0xe4(%rbp)
    fda8:	48 8b 00             	mov    (%rax),%rax
    fdab:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
    //=== VK_KHR_surface ===

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE VULKAN_HPP_NAMESPACE::Bool32 PhysicalDevice::getSurfaceSupportKHR( uint32_t                         queueFamilyIndex,
                                                                                                              VULKAN_HPP_NAMESPACE::SurfaceKHR surface ) const
    {
      VULKAN_HPP_ASSERT( getDispatcher()->vkGetPhysicalDeviceSurfaceSupportKHR &&
    fdb2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fdb9:	48 89 c7             	mov    %rax,%rdi
    fdbc:	e8 c3 db ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    fdc1:	48 8b 80 78 02 00 00 	mov    0x278(%rax),%rax
    fdc8:	48 85 c0             	test   %rax,%rax
    fdcb:	75 28                	jne    fdf5 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xe0c>
    fdcd:	48 8d 05 ec fc 01 00 	lea    0x1fcec(%rip),%rax        # 2fac0 <_ZNSt8__detailL19__atomic_spin_countE+0x370c>
    fdd4:	48 89 c1             	mov    %rax,%rcx
    fdd7:	ba 0b 32 00 00       	mov    $0x320b,%edx
    fddc:	48 8d 05 15 f8 01 00 	lea    0x1f815(%rip),%rax        # 2f5f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3244>
    fde3:	48 89 c6             	mov    %rax,%rsi
    fde6:	48 8d 05 33 fd 01 00 	lea    0x1fd33(%rip),%rax        # 2fb20 <_ZNSt8__detailL19__atomic_spin_countE+0x376c>
    fded:	48 89 c7             	mov    %rax,%rdi
    fdf0:	e8 1b 53 ff ff       	call   5110 <__assert_fail@plt>
                         "Function <vkGetPhysicalDeviceSurfaceSupportKHR> needs extension <VK_KHR_surface> enabled!" );

      VULKAN_HPP_NAMESPACE::Bool32 supported;
      VkResult                     result = getDispatcher()->vkGetPhysicalDeviceSurfaceSupportKHR(
    fdf5:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fdfc:	48 89 c7             	mov    %rax,%rdi
    fdff:	e8 80 db ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
    fe04:	48 8b 98 78 02 00 00 	mov    0x278(%rax),%rbx
    fe0b:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
    fe12:	48 89 c7             	mov    %rax,%rdi
    fe15:	e8 1e 91 ff ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
    fe1a:	49 89 c4             	mov    %rax,%r12
    fe1d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fe24:	48 89 c7             	mov    %rax,%rdi
    fe27:	e8 46 db ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
    fe2c:	48 89 c7             	mov    %rax,%rdi
    fe2f:	48 8d 95 5c fc ff ff 	lea    -0x3a4(%rbp),%rdx
    fe36:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    fe3c:	48 89 d1             	mov    %rdx,%rcx
    fe3f:	4c 89 e2             	mov    %r12,%rdx
    fe42:	89 c6                	mov    %eax,%esi
    fe44:	ff d3                	call   *%rbx
    fe46:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    fe4c:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    fe52:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    fe58:	48 8d 05 59 fd 01 00 	lea    0x1fd59(%rip),%rax        # 2fbb8 <_ZNSt8__detailL19__atomic_spin_countE+0x3804>
    fe5f:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    if ( result != Result::eSuccess )
    fe66:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%rbp)
    fe6d:	74 17                	je     fe86 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xe9d>
      throwResultException( result, message );
    fe6f:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    fe76:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    fe7c:	48 89 d6             	mov    %rdx,%rsi
    fe7f:	89 c7                	mov    %eax,%edi
    fe81:	e8 0c e7 ff ff       	call   e592 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
    fe86:	90                   	nop
        static_cast<VkPhysicalDevice>( m_physicalDevice ), queueFamilyIndex, static_cast<VkSurfaceKHR>( surface ), reinterpret_cast<VkBool32 *>( &supported ) );
      resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::PhysicalDevice::getSurfaceSupportKHR" );

      return supported;
    fe87:	8b 85 5c fc ff ff    	mov    -0x3a4(%rbp),%eax
          (queueFamilies[i].queueFlags & vk::QueueFlagBits::eCompute) &&
    fe8d:	85 c0                	test   %eax,%eax
    fe8f:	74 11                	je     fea2 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xeb9>
    fe91:	eb 08                	jmp    fe9b <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xeb2>
    fe93:	48 89 c3             	mov    %rax,%rbx
    fe96:	e9 2f 06 00 00       	jmp    104ca <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14e1>
    fe9b:	b8 01 00 00 00       	mov    $0x1,%eax
    fea0:	eb 05                	jmp    fea7 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xebe>
    fea2:	b8 00 00 00 00       	mov    $0x0,%eax
      if ((queueFamilies[i].queueFlags & vk::QueueFlagBits::eGraphics) &&
    fea7:	84 c0                	test   %al,%al
    fea9:	74 31                	je     fedc <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xef3>
        selectedQueueFamilyIndex = static_cast<uint32_t>(i);
    feab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    feaf:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
    feb5:	48 8d 95 dc fe ff ff 	lea    -0x124(%rbp),%rdx
    febc:	48 8d 85 d4 fe ff ff 	lea    -0x12c(%rbp),%rax
    fec3:	48 89 d6             	mov    %rdx,%rsi
    fec6:	48 89 c7             	mov    %rax,%rdi
    fec9:	e8 ac 95 00 00       	call   1947a <_ZNSt8optionalIjEC1IjLb1EEEOT_>
    fece:	48 8b 85 d4 fe ff ff 	mov    -0x12c(%rbp),%rax
    fed5:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
    for (size_t i = 0; i < queueFamilies.size(); ++i) {
    fedc:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
    fee1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fee8:	48 89 c7             	mov    %rax,%rdi
    feeb:	e8 fe 8c 00 00       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
    fef0:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)
    fef4:	0f 92 c0             	setb   %al
    fef7:	84 c0                	test   %al,%al
    fef9:	0f 85 cb fd ff ff    	jne    fcca <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xce1>
      }
    }
    if (!selectedQueueFamilyIndex.has_value()) {
    feff:	48 8d 85 08 fd ff ff 	lea    -0x2f8(%rbp),%rax
    ff06:	48 89 c7             	mov    %rax,%rdi
    ff09:	e8 06 85 00 00       	call   18414 <_ZNKSt8optionalIjE9has_valueEv>
    ff0e:	83 f0 01             	xor    $0x1,%eax
    ff11:	84 c0                	test   %al,%al
    ff13:	74 3b                	je     ff50 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0xf67>
      throw std::runtime_error("Failed to select queue families");
    ff15:	bf 10 00 00 00       	mov    $0x10,%edi
    ff1a:	e8 b1 51 ff ff       	call   50d0 <__cxa_allocate_exception@plt>
    ff1f:	48 89 c3             	mov    %rax,%rbx
    ff22:	48 8d 05 bf fc 01 00 	lea    0x1fcbf(%rip),%rax        # 2fbe8 <_ZNSt8__detailL19__atomic_spin_countE+0x3834>
    ff29:	48 89 c6             	mov    %rax,%rsi
    ff2c:	48 89 df             	mov    %rbx,%rdi
    ff2f:	e8 5c 51 ff ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
    ff34:	48 8b 05 75 20 03 00 	mov    0x32075(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ff3b:	48 89 c2             	mov    %rax,%rdx
    ff3e:	48 8d 05 bb 1a 03 00 	lea    0x31abb(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ff45:	48 89 c6             	mov    %rax,%rsi
    ff48:	48 89 df             	mov    %rbx,%rdi
    ff4b:	e8 30 54 ff ff       	call   5380 <__cxa_throw@plt>
    }

    const float queuePriorities = 1.0f;
    ff50:	f3 0f 10 05 e4 fd 01 	movss  0x1fde4(%rip),%xmm0        # 2fd3c <_ZNSt8__detailL19__atomic_spin_countE+0x3988>
    ff57:	00 
    ff58:	f3 0f 11 85 04 fd ff 	movss  %xmm0,-0x2fc(%rbp)
    ff5f:	ff 
    vk::DeviceQueueCreateInfo queueInfo{
    ff60:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ff64:	0f 29 85 40 f8 ff ff 	movaps %xmm0,-0x7c0(%rbp)
    ff6b:	0f 29 85 50 f8 ff ff 	movaps %xmm0,-0x7b0(%rbp)
    ff72:	66 0f d6 85 60 f8 ff 	movq   %xmm0,-0x7a0(%rbp)
    ff79:	ff 
    ff7a:	c7 85 40 f8 ff ff 02 	movl   $0x2,-0x7c0(%rbp)
    ff81:	00 00 00 
    ff84:	c7 85 58 f8 ff ff 01 	movl   $0x1,-0x7a8(%rbp)
    ff8b:	00 00 00 
        .queueFamilyIndex{selectedQueueFamilyIndex.value()},
        .queueCount{1},
        .pQueuePriorities{&queuePriorities},
    }; // namespace rtvc
    ff8e:	48 8d 85 40 f8 ff ff 	lea    -0x7c0(%rbp),%rax
    ff95:	48 83 c0 10          	add    $0x10,%rax
    ff99:	48 89 c7             	mov    %rax,%rdi
    ff9c:	e8 d1 84 00 00       	call   18472 <_ZN2vk5FlagsINS_25DeviceQueueCreateFlagBitsEEC1Ev>
        .queueFamilyIndex{selectedQueueFamilyIndex.value()},
    ffa1:	48 8d 85 08 fd ff ff 	lea    -0x2f8(%rbp),%rax
    ffa8:	48 89 c7             	mov    %rax,%rdi
    ffab:	e8 90 84 00 00       	call   18440 <_ZNRSt8optionalIjE5valueEv>
    ffb0:	8b 00                	mov    (%rax),%eax
    }; // namespace rtvc
    ffb2:	89 85 54 f8 ff ff    	mov    %eax,-0x7ac(%rbp)
    ffb8:	48 8d 85 04 fd ff ff 	lea    -0x2fc(%rbp),%rax
    ffbf:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)

    vk::PhysicalDeviceFeatures features{};
    ffc6:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    ffcd:	b8 00 00 00 00       	mov    $0x0,%eax
    ffd2:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    ffd7:	48 89 d7             	mov    %rdx,%rdi
    ffda:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    ffdd:	48 89 fa             	mov    %rdi,%rdx
    ffe0:	89 02                	mov    %eax,(%rdx)
    ffe2:	48 83 c2 04          	add    $0x4,%rdx
    // features.samplerAnisotropy = VK_TRUE;
    // features.sample

    vk::DeviceCreateInfo deviceInfo{
    ffe6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ffea:	0f 29 85 d0 f8 ff ff 	movaps %xmm0,-0x730(%rbp)
    fff1:	0f 29 85 e0 f8 ff ff 	movaps %xmm0,-0x720(%rbp)
    fff8:	0f 29 85 f0 f8 ff ff 	movaps %xmm0,-0x710(%rbp)
    ffff:	0f 29 85 00 f9 ff ff 	movaps %xmm0,-0x700(%rbp)
   10006:	66 0f d6 85 10 f9 ff 	movq   %xmm0,-0x6f0(%rbp)
   1000d:	ff 
   1000e:	c7 85 d0 f8 ff ff 03 	movl   $0x3,-0x730(%rbp)
   10015:	00 00 00 
   10018:	c7 85 e4 f8 ff ff 01 	movl   $0x1,-0x71c(%rbp)
   1001f:	00 00 00 
        .ppEnabledLayerNames{instanceLayers.data()},
        .enabledExtensionCount{
            static_cast<uint32_t>(requiredExtensions.size())},
        .ppEnabledExtensionNames{requiredExtensions.data()},
        .pEnabledFeatures{&features},
    };
   10022:	48 8d 85 d0 f8 ff ff 	lea    -0x730(%rbp),%rax
   10029:	48 83 c0 10          	add    $0x10,%rax
   1002d:	48 89 c7             	mov    %rax,%rdi
   10030:	e8 9b 84 00 00       	call   184d0 <_ZN2vk5FlagsINS_20DeviceCreateFlagBitsEEC1Ev>
   10035:	48 8d 85 40 f8 ff ff 	lea    -0x7c0(%rbp),%rax
   1003c:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
        .enabledLayerCount{static_cast<uint32_t>(instanceLayers.size())},
   10043:	48 8d 05 36 23 03 00 	lea    0x32336(%rip),%rax        # 42380 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
   1004a:	48 89 c7             	mov    %rax,%rdi
   1004d:	e8 36 84 00 00       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    };
   10052:	89 85 f0 f8 ff ff    	mov    %eax,-0x710(%rbp)
        .ppEnabledLayerNames{instanceLayers.data()},
   10058:	48 8d 05 21 23 03 00 	lea    0x32321(%rip),%rax        # 42380 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
   1005f:	48 89 c7             	mov    %rax,%rdi
   10062:	e8 45 84 00 00       	call   184ac <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    };
   10067:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
            static_cast<uint32_t>(requiredExtensions.size())},
   1006e:	48 8d 05 eb 22 03 00 	lea    0x322eb(%rip),%rax        # 42360 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
   10075:	48 89 c7             	mov    %rax,%rdi
   10078:	e8 0b 84 00 00       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    };
   1007d:	89 85 00 f9 ff ff    	mov    %eax,-0x700(%rbp)
        .ppEnabledExtensionNames{requiredExtensions.data()},
   10083:	48 8d 05 d6 22 03 00 	lea    0x322d6(%rip),%rax        # 42360 <_ZZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
   1008a:	48 89 c7             	mov    %rax,%rdi
   1008d:	e8 1a 84 00 00       	call   184ac <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    };
   10092:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
   10099:	48 8d 85 20 f9 ff ff 	lea    -0x6e0(%rbp),%rax
   100a0:	48 89 85 10 f9 ff ff 	mov    %rax,-0x6f0(%rbp)

    auto device = physicalDevice.createDevice(deviceInfo);
   100a7:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   100ae:	be 00 00 00 00       	mov    $0x0,%esi
   100b3:	48 89 c7             	mov    %rax,%rdi
   100b6:	e8 49 94 00 00       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   100bb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100bf:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   100c6:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   100cd:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
   100d4:	48 8d 85 e0 fc ff ff 	lea    -0x320(%rbp),%rax
      return VULKAN_HPP_RAII_NAMESPACE::Device( *this, createInfo, allocator );
   100db:	48 8b 8d c0 fc ff ff 	mov    -0x340(%rbp),%rcx
   100e2:	48 8d 95 d0 f8 ff ff 	lea    -0x730(%rbp),%rdx
   100e9:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
   100f0:	48 89 c7             	mov    %rax,%rdi
   100f3:	e8 6a 76 00 00       	call   17762 <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>
   100f8:	90                   	nop
    auto queue = device.getQueue(selectedQueueFamilyIndex.value(), 0);
   100f9:	48 8d 85 08 fd ff ff 	lea    -0x2f8(%rbp),%rax
   10100:	48 89 c7             	mov    %rax,%rdi
   10103:	e8 38 83 00 00       	call   18440 <_ZNRSt8optionalIjE5valueEv>
   10108:	8b 00                	mov    (%rax),%eax
   1010a:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
   10110:	c7 85 f8 fe ff ff 00 	movl   $0x0,-0x108(%rbp)
   10117:	00 00 00 
   1011a:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
      return VULKAN_HPP_RAII_NAMESPACE::Queue( *this, queueFamilyIndex, queueIndex );
   10121:	8b 8d f8 fe ff ff    	mov    -0x108(%rbp),%ecx
   10127:	8b 95 fc fe ff ff    	mov    -0x104(%rbp),%edx
   1012d:	48 8d b5 e0 fc ff ff 	lea    -0x320(%rbp),%rsi
   10134:	48 89 c7             	mov    %rax,%rdi
   10137:	e8 9e 77 00 00       	call   178da <_ZN2vk4raii5QueueC1ERKNS0_6DeviceEjj>
   1013c:	90                   	nop

    return {
        selectedQueueFamilyIndex.value(),
   1013d:	48 8d 85 08 fd ff ff 	lea    -0x2f8(%rbp),%rax
   10144:	48 89 c7             	mov    %rax,%rdi
   10147:	e8 f4 82 00 00       	call   18440 <_ZNRSt8optionalIjE5valueEv>
   1014c:	8b 10                	mov    (%rax),%edx
        physicalDevice,
        physicalDevice.createDevice(deviceInfo),
    };
  }
  throw std::runtime_error("Failed to create a logical device");
}
   1014e:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   10155:	89 10                	mov    %edx,(%rax)
   10157:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   1015e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10162:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10169:	48 89 c6             	mov    %rax,%rsi
   1016c:	48 89 d7             	mov    %rdx,%rdi
   1016f:	e8 ee 77 00 00       	call   17962 <_ZN2vk4raii5QueueC1ERKS1_>
   10174:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1017a:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   10181:	48 8d 50 18          	lea    0x18(%rax),%rdx
   10185:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10189:	48 89 c6             	mov    %rax,%rsi
   1018c:	48 89 d7             	mov    %rdx,%rdi
   1018f:	e8 1e 72 00 00       	call   173b2 <_ZN2vk4raii14PhysicalDeviceC1ERKS1_>
   10194:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1019a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
   101a1:	be 00 00 00 00       	mov    $0x0,%esi
   101a6:	48 89 c7             	mov    %rax,%rdi
   101a9:	e8 56 93 00 00       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   101ae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   101b2:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   101b9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   101c0:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)
   101c7:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   101ce:	48 8d 78 28          	lea    0x28(%rax),%rdi
      return VULKAN_HPP_RAII_NAMESPACE::Device( *this, createInfo, allocator );
   101d2:	48 8b 8d c8 fc ff ff 	mov    -0x338(%rbp),%rcx
   101d9:	48 8d 95 d0 f8 ff ff 	lea    -0x730(%rbp),%rdx
   101e0:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   101e7:	48 89 c6             	mov    %rax,%rsi
   101ea:	e8 73 75 00 00       	call   17762 <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>
   101ef:	90                   	nop
    };
   101f0:	90                   	nop
  }
   101f1:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   101f8:	48 89 c7             	mov    %rax,%rdi
   101fb:	e8 f0 97 ff ff       	call   99f0 <_ZN2vk4raii5QueueD1Ev>
   10200:	48 8d 85 e0 fc ff ff 	lea    -0x320(%rbp),%rax
   10207:	48 89 c7             	mov    %rax,%rdi
   1020a:	e8 27 93 ff ff       	call   9536 <_ZN2vk4raii6DeviceD1Ev>
   1020f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10216:	48 89 c7             	mov    %rax,%rdi
   10219:	e8 d8 88 00 00       	call   18af6 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EED1Ev>
   1021e:	bb 01 00 00 00       	mov    $0x1,%ebx
   10223:	48 8d 85 a0 f8 ff ff 	lea    -0x760(%rbp),%rax
   1022a:	48 89 c7             	mov    %rax,%rdi
   1022d:	e8 4a 80 00 00       	call   1827c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
   10232:	85 db                	test   %ebx,%ebx
   10234:	75 07                	jne    1023d <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1254>
   10236:	bb 00 00 00 00       	mov    $0x0,%ebx
   1023b:	eb 05                	jmp    10242 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1259>
   1023d:	bb 01 00 00 00       	mov    $0x1,%ebx
   10242:	48 8d 85 30 fd ff ff 	lea    -0x2d0(%rbp),%rax
   10249:	48 89 c7             	mov    %rax,%rdi
   1024c:	e8 e5 8b 00 00       	call   18e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>
   10251:	85 db                	test   %ebx,%ebx
   10253:	75 07                	jne    1025c <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1273>
   10255:	bb 00 00 00 00       	mov    $0x0,%ebx
   1025a:	eb 05                	jmp    10261 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1278>
   1025c:	bb 01 00 00 00       	mov    $0x1,%ebx
   10261:	48 8d 85 70 f8 ff ff 	lea    -0x790(%rbp),%rax
   10268:	48 89 c7             	mov    %rax,%rdi
   1026b:	e8 0c 80 00 00       	call   1827c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
   10270:	85 db                	test   %ebx,%ebx
   10272:	75 07                	jne    1027b <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1292>
   10274:	bb 00 00 00 00       	mov    $0x0,%ebx
   10279:	eb 05                	jmp    10280 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1297>
   1027b:	bb 01 00 00 00       	mov    $0x1,%ebx
   10280:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
   10287:	48 89 c7             	mov    %rax,%rdi
   1028a:	e8 f1 89 00 00       	call   18c80 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EED1Ev>
   1028f:	85 db                	test   %ebx,%ebx
   10291:	75 14                	jne    102a7 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x12be>
   10293:	eb 01                	jmp    10296 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x12ad>
      continue;
   10295:	90                   	nop
  for (const auto &physicalDevice : physicalDevices) {
   10296:	48 8d 85 78 fd ff ff 	lea    -0x288(%rbp),%rax
   1029d:	48 89 c7             	mov    %rax,%rdi
   102a0:	e8 75 8e 00 00       	call   1911a <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEppEv>
   102a5:	eb 14                	jmp    102bb <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x12d2>
}
   102a7:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
   102ae:	48 89 c7             	mov    %rax,%rdi
   102b1:	e8 42 77 00 00       	call   179f8 <_ZN2vk4raii15PhysicalDevicesD1Ev>
    };
   102b6:	e9 93 02 00 00       	jmp    1054e <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1565>
  for (const auto &physicalDevice : physicalDevices) {
   102bb:	48 8d 95 70 fd ff ff 	lea    -0x290(%rbp),%rdx
   102c2:	48 8d 85 78 fd ff ff 	lea    -0x288(%rbp),%rax
   102c9:	48 89 d6             	mov    %rdx,%rsi
   102cc:	48 89 c7             	mov    %rax,%rdi
   102cf:	e8 f8 7e 00 00       	call   181cc <_ZN9__gnu_cxxeqIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   102d4:	83 f0 01             	xor    $0x1,%eax
   102d7:	84 c0                	test   %al,%al
   102d9:	0f 85 29 ef ff ff    	jne    f208 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x21f>
  throw std::runtime_error("Failed to create a logical device");
   102df:	bf 10 00 00 00       	mov    $0x10,%edi
   102e4:	e8 e7 4d ff ff       	call   50d0 <__cxa_allocate_exception@plt>
   102e9:	48 89 c3             	mov    %rax,%rbx
   102ec:	48 8d 05 15 f9 01 00 	lea    0x1f915(%rip),%rax        # 2fc08 <_ZNSt8__detailL19__atomic_spin_countE+0x3854>
   102f3:	48 89 c6             	mov    %rax,%rsi
   102f6:	48 89 df             	mov    %rbx,%rdi
   102f9:	e8 92 4d ff ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
   102fe:	48 8b 05 ab 1c 03 00 	mov    0x31cab(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10305:	48 89 c2             	mov    %rax,%rdx
   10308:	48 8d 05 f1 16 03 00 	lea    0x316f1(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1030f:	48 89 c6             	mov    %rax,%rsi
   10312:	48 89 df             	mov    %rbx,%rdi
   10315:	e8 66 50 ff ff       	call   5380 <__cxa_throw@plt>
  };
   1031a:	48 89 c3             	mov    %rax,%rbx
   1031d:	48 8d 85 af fd ff ff 	lea    -0x251(%rbp),%rax
   10324:	48 89 c7             	mov    %rax,%rdi
   10327:	e8 14 79 00 00       	call   17c40 <_ZNSaIPKcED1Ev>
   1032c:	80 bd 27 f8 ff ff 00 	cmpb   $0x0,-0x7d9(%rbp)
   10333:	75 0f                	jne    10344 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x135b>
   10335:	48 8d 05 3c 20 03 00 	lea    0x3203c(%rip),%rax        # 42378 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE18requiredExtensions>
   1033c:	48 89 c7             	mov    %rax,%rdi
   1033f:	e8 ac 4d ff ff       	call   50f0 <__cxa_guard_abort@plt>
   10344:	48 89 d8             	mov    %rbx,%rax
   10347:	48 89 c7             	mov    %rax,%rdi
   1034a:	e8 51 50 ff ff       	call   53a0 <_Unwind_Resume@plt>
  };
   1034f:	48 89 c3             	mov    %rax,%rbx
   10352:	48 8d 85 c7 fd ff ff 	lea    -0x239(%rbp),%rax
   10359:	48 89 c7             	mov    %rax,%rdi
   1035c:	e8 df 78 00 00       	call   17c40 <_ZNSaIPKcED1Ev>
   10361:	45 84 f6             	test   %r14b,%r14b
   10364:	75 0f                	jne    10375 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x138c>
   10366:	48 8d 05 2b 20 03 00 	lea    0x3202b(%rip),%rax        # 42398 <_ZGVZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHREE14instanceLayers>
   1036d:	48 89 c7             	mov    %rax,%rdi
   10370:	e8 7b 4d ff ff       	call   50f0 <__cxa_guard_abort@plt>
   10375:	48 89 d8             	mov    %rbx,%rax
   10378:	48 89 c7             	mov    %rax,%rdi
   1037b:	e8 20 50 ff ff       	call   53a0 <_Unwind_Resume@plt>
      extensionsMap[extension.extensionName]++;
   10380:	48 89 c3             	mov    %rax,%rbx
   10383:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
   1038a:	48 89 c7             	mov    %rax,%rdi
   1038d:	e8 5c 9f ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   10392:	e9 6a 01 00 00       	jmp    10501 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1518>
      extensionsMap[extension]++;
   10397:	48 89 c3             	mov    %rax,%rbx
   1039a:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   103a1:	48 89 c7             	mov    %rax,%rdi
   103a4:	e8 45 9f ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   103a9:	eb 03                	jmp    103ae <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x13c5>
   103ab:	48 89 c3             	mov    %rax,%rbx
   103ae:	48 8d 85 1f fe ff ff 	lea    -0x1e1(%rbp),%rax
   103b5:	48 89 c7             	mov    %rax,%rdi
   103b8:	e8 b3 4e ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
   103bd:	e9 3f 01 00 00       	jmp    10501 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1518>
      if (extensionsMap[extension] < 2) {
   103c2:	48 89 c3             	mov    %rax,%rbx
   103c5:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
   103cc:	48 89 c7             	mov    %rax,%rdi
   103cf:	e8 1a 9f ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   103d4:	eb 03                	jmp    103d9 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x13f0>
   103d6:	48 89 c3             	mov    %rax,%rbx
   103d9:	48 8d 85 4f fe ff ff 	lea    -0x1b1(%rbp),%rax
   103e0:	48 89 c7             	mov    %rax,%rdi
   103e3:	e8 88 4e ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
   103e8:	e9 14 01 00 00       	jmp    10501 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1518>
      layerMap[layer.layerName]++;
   103ed:	48 89 c3             	mov    %rax,%rbx
   103f0:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
   103f7:	48 89 c7             	mov    %rax,%rdi
   103fa:	e8 ef 9e ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   103ff:	e9 da 00 00 00       	jmp    104de <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14f5>
      layerMap[layer]++;
   10404:	48 89 c3             	mov    %rax,%rbx
   10407:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
   1040e:	48 89 c7             	mov    %rax,%rdi
   10411:	e8 d8 9e ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   10416:	eb 03                	jmp    1041b <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1432>
   10418:	48 89 c3             	mov    %rax,%rbx
   1041b:	48 8d 85 9f fe ff ff 	lea    -0x161(%rbp),%rax
   10422:	48 89 c7             	mov    %rax,%rdi
   10425:	e8 46 4e ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
   1042a:	e9 af 00 00 00       	jmp    104de <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14f5>
      if (layerMap[layer] < 2) {
   1042f:	48 89 c3             	mov    %rax,%rbx
   10432:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
   10439:	48 89 c7             	mov    %rax,%rdi
   1043c:	e8 ad 9e ff ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   10441:	eb 03                	jmp    10446 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x145d>
   10443:	48 89 c3             	mov    %rax,%rbx
   10446:	48 8d 85 c3 fe ff ff 	lea    -0x13d(%rbp),%rax
   1044d:	48 89 c7             	mov    %rax,%rdi
   10450:	e8 1b 4e ff ff       	call   5270 <_ZNSaIcED1Ev@plt>
   10455:	e9 84 00 00 00       	jmp    104de <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14f5>
      throw std::runtime_error("Failed to select queue families");
   1045a:	49 89 c4             	mov    %rax,%r12
   1045d:	48 89 df             	mov    %rbx,%rdi
   10460:	e8 eb 4c ff ff       	call   5150 <__cxa_free_exception@plt>
   10465:	4c 89 e3             	mov    %r12,%rbx
   10468:	eb 60                	jmp    104ca <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14e1>
}
   1046a:	48 89 c3             	mov    %rax,%rbx
   1046d:	45 84 ed             	test   %r13b,%r13b
   10470:	74 13                	je     10485 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x149c>
   10472:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   10479:	48 83 c0 18          	add    $0x18,%rax
   1047d:	48 89 c7             	mov    %rax,%rdi
   10480:	e8 69 90 ff ff       	call   94ee <_ZN2vk4raii14PhysicalDeviceD1Ev>
   10485:	45 84 e4             	test   %r12b,%r12b
   10488:	74 18                	je     104a2 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14b9>
   1048a:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   10491:	48 83 c0 08          	add    $0x8,%rax
   10495:	48 89 c7             	mov    %rax,%rdi
   10498:	e8 53 95 ff ff       	call   99f0 <_ZN2vk4raii5QueueD1Ev>
   1049d:	eb 03                	jmp    104a2 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14b9>
  }
   1049f:	48 89 c3             	mov    %rax,%rbx
   104a2:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   104a9:	48 89 c7             	mov    %rax,%rdi
   104ac:	e8 3f 95 ff ff       	call   99f0 <_ZN2vk4raii5QueueD1Ev>
   104b1:	eb 03                	jmp    104b6 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14cd>
   104b3:	48 89 c3             	mov    %rax,%rbx
   104b6:	48 8d 85 e0 fc ff ff 	lea    -0x320(%rbp),%rax
   104bd:	48 89 c7             	mov    %rax,%rdi
   104c0:	e8 71 90 ff ff       	call   9536 <_ZN2vk4raii6DeviceD1Ev>
   104c5:	eb 03                	jmp    104ca <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14e1>
   104c7:	48 89 c3             	mov    %rax,%rbx
   104ca:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   104d1:	48 89 c7             	mov    %rax,%rdi
   104d4:	e8 1d 86 00 00       	call   18af6 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EED1Ev>
   104d9:	eb 03                	jmp    104de <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x14f5>
   104db:	48 89 c3             	mov    %rax,%rbx
   104de:	48 8d 85 a0 f8 ff ff 	lea    -0x760(%rbp),%rax
   104e5:	48 89 c7             	mov    %rax,%rdi
   104e8:	e8 8f 7d 00 00       	call   1827c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
   104ed:	48 8d 85 30 fd ff ff 	lea    -0x2d0(%rbp),%rax
   104f4:	48 89 c7             	mov    %rax,%rdi
   104f7:	e8 3a 89 00 00       	call   18e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>
   104fc:	eb 03                	jmp    10501 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x1518>
   104fe:	48 89 c3             	mov    %rax,%rbx
   10501:	48 8d 85 70 f8 ff ff 	lea    -0x790(%rbp),%rax
   10508:	48 89 c7             	mov    %rax,%rdi
   1050b:	e8 6c 7d 00 00       	call   1827c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
   10510:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
   10517:	48 89 c7             	mov    %rax,%rdi
   1051a:	e8 61 87 00 00       	call   18c80 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EED1Ev>
   1051f:	eb 13                	jmp    10534 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x154b>
  throw std::runtime_error("Failed to create a logical device");
   10521:	49 89 c4             	mov    %rax,%r12
   10524:	48 89 df             	mov    %rbx,%rdi
   10527:	e8 24 4c ff ff       	call   5150 <__cxa_free_exception@plt>
   1052c:	4c 89 e3             	mov    %r12,%rbx
   1052f:	eb 03                	jmp    10534 <_ZN4rtvc17makeLogicalDeviceERKN2vk4raii8InstanceERKNS1_10SurfaceKHRE+0x154b>
}
   10531:	48 89 c3             	mov    %rax,%rbx
   10534:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
   1053b:	48 89 c7             	mov    %rax,%rdi
   1053e:	e8 b5 74 00 00       	call   179f8 <_ZN2vk4raii15PhysicalDevicesD1Ev>
   10543:	48 89 d8             	mov    %rbx,%rax
   10546:	48 89 c7             	mov    %rax,%rdi
   10549:	e8 52 4e ff ff       	call   53a0 <_Unwind_Resume@plt>
   1054e:	48 8b 85 38 f8 ff ff 	mov    -0x7c8(%rbp),%rax
   10555:	48 81 c4 b8 07 00 00 	add    $0x7b8,%rsp
   1055c:	5b                   	pop    %rbx
   1055d:	41 5c                	pop    %r12
   1055f:	41 5d                	pop    %r13
   10561:	41 5e                	pop    %r14
   10563:	41 5f                	pop    %r15
   10565:	5d                   	pop    %rbp
   10566:	c3                   	ret
   10567:	90                   	nop

0000000000010568 <_ZNSt9__cmp_cat8__unspecC1EPS0_>:

    enum class _Ncmp : type { _Unordered = 2 };

    struct __unspec
    {
      constexpr __unspec(__unspec*) noexcept { }
   10568:	55                   	push   %rbp
   10569:	48 89 e5             	mov    %rsp,%rbp
   1056c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10570:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10574:	90                   	nop
   10575:	5d                   	pop    %rbp
   10576:	c3                   	ret

0000000000010577 <_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE>:
    friend constexpr bool
    operator==(strong_ordering, strong_ordering) noexcept = default;

    [[nodiscard]]
    friend constexpr bool
    operator< (strong_ordering __v, __cmp_cat::__unspec) noexcept
   10577:	55                   	push   %rbp
   10578:	48 89 e5             	mov    %rsp,%rbp
   1057b:	40 88 7d ff          	mov    %dil,-0x1(%rbp)
    { return __v._M_value < 0; }
   1057f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
   10583:	c0 e8 07             	shr    $0x7,%al
   10586:	5d                   	pop    %rbp
   10587:	c3                   	ret

0000000000010588 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   10588:	55                   	push   %rbp
   10589:	48 89 e5             	mov    %rsp,%rbp
   1058c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10590:	48 8d 15 19 14 03 00 	lea    0x31419(%rip),%rdx        # 419b0 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   10597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1059b:	48 89 10             	mov    %rdx,(%rax)
   1059e:	90                   	nop
   1059f:	5d                   	pop    %rbp
   105a0:	c3                   	ret

00000000000105a1 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   105a1:	55                   	push   %rbp
   105a2:	48 89 e5             	mov    %rsp,%rbp
   105a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   105ad:	90                   	nop
   105ae:	5d                   	pop    %rbp
   105af:	c3                   	ret

00000000000105b0 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
   105b0:	55                   	push   %rbp
   105b1:	48 89 e5             	mov    %rsp,%rbp
   105b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105bc:	5d                   	pop    %rbp
   105bd:	c3                   	ret

00000000000105be <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
   105be:	55                   	push   %rbp
   105bf:	48 89 e5             	mov    %rsp,%rbp
   105c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
   105ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105ce:	0f b6 00             	movzbl (%rax),%eax
   105d1:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
   105d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   105d7:	0f b6 00             	movzbl (%rax),%eax
   105da:	38 c2                	cmp    %al,%dl
   105dc:	0f 92 c0             	setb   %al
      }
   105df:	5d                   	pop    %rbp
   105e0:	c3                   	ret

00000000000105e1 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
   105e1:	55                   	push   %rbp
   105e2:	48 89 e5             	mov    %rsp,%rbp
   105e5:	48 83 ec 30          	sub    $0x30,%rsp
   105e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   105ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   105f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
   105f5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   105fa:	75 0a                	jne    10606 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
   105fc:	b8 00 00 00 00       	mov    $0x0,%eax
   10601:	e9 99 00 00 00       	jmp    1069f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
   10606:	e8 93 5b ff ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1060b:	84 c0                	test   %al,%al
   1060d:	74 78                	je     10687 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
   1060f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   10616:	00 
   10617:	eb 5d                	jmp    10676 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
   10619:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1061d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10621:	48 01 c2             	add    %rax,%rdx
   10624:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1062c:	48 01 c8             	add    %rcx,%rax
   1062f:	48 89 d6             	mov    %rdx,%rsi
   10632:	48 89 c7             	mov    %rax,%rdi
   10635:	e8 84 ff ff ff       	call   105be <_ZNSt11char_traitsIcE2ltERKcS2_>
   1063a:	84 c0                	test   %al,%al
   1063c:	74 07                	je     10645 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
   1063e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10643:	eb 5a                	jmp    1069f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
   10645:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1064d:	48 01 c2             	add    %rax,%rdx
   10650:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10658:	48 01 c8             	add    %rcx,%rax
   1065b:	48 89 d6             	mov    %rdx,%rsi
   1065e:	48 89 c7             	mov    %rax,%rdi
   10661:	e8 58 ff ff ff       	call   105be <_ZNSt11char_traitsIcE2ltERKcS2_>
   10666:	84 c0                	test   %al,%al
   10668:	74 07                	je     10671 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
   1066a:	b8 01 00 00 00       	mov    $0x1,%eax
   1066f:	eb 2e                	jmp    1069f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
   10671:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   10676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1067a:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1067e:	72 99                	jb     10619 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
   10680:	b8 00 00 00 00       	mov    $0x0,%eax
   10685:	eb 18                	jmp    1069f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
   10687:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1068b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1068f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10693:	48 89 ce             	mov    %rcx,%rsi
   10696:	48 89 c7             	mov    %rax,%rdi
   10699:	e8 22 4a ff ff       	call   50c0 <memcmp@plt>
   1069e:	90                   	nop
      }
   1069f:	c9                   	leave
   106a0:	c3                   	ret
   106a1:	90                   	nop

00000000000106a2 <_ZN2vk14PhysicalDeviceC1EP18VkPhysicalDevice_T>:
    PhysicalDevice( VkPhysicalDevice physicalDevice ) VULKAN_HPP_NOEXCEPT : m_physicalDevice( physicalDevice ) {}
   106a2:	55                   	push   %rbp
   106a3:	48 89 e5             	mov    %rsp,%rbp
   106a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   106b6:	48 89 10             	mov    %rdx,(%rax)
   106b9:	90                   	nop
   106ba:	5d                   	pop    %rbp
   106bb:	c3                   	ret

00000000000106bc <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_>:
      DeviceDispatcher( PFN_vkGetDeviceProcAddr getProcAddr, VkDevice device ) : vkGetDeviceProcAddr( getProcAddr )
   106bc:	55                   	push   %rbp
   106bd:	48 89 e5             	mov    %rsp,%rbp
   106c0:	48 83 ec 20          	sub    $0x20,%rsp
   106c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   106d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d4:	48 89 c7             	mov    %rax,%rdi
   106d7:	e8 c0 5e ff ff       	call   659c <_ZN2vk18DispatchLoaderBaseC1Ev>
   106dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   106e4:	48 89 50 10          	mov    %rdx,0x10(%rax)
   106e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106ec:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   106f3:	00 
   106f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106f8:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   106ff:	00 
   10700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10704:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1070b:	00 
   1070c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10710:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   10717:	00 
   10718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1071c:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   10723:	00 
   10724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10728:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
   1072f:	00 
   10730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10734:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   1073b:	00 
   1073c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10740:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
   10747:	00 
   10748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1074c:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
   10753:	00 
   10754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10758:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
   1075f:	00 
   10760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10764:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
   1076b:	00 
   1076c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10770:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
   10777:	00 
   10778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1077c:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
   10783:	00 
   10784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10788:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
   1078f:	00 00 00 00 
   10793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10797:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
   1079e:	00 00 00 00 
   107a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107a6:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
   107ad:	00 00 00 00 
   107b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107b5:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
   107bc:	00 00 00 00 
   107c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107c4:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
   107cb:	00 00 00 00 
   107cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107d3:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
   107da:	00 00 00 00 
   107de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107e2:	48 c7 80 b0 00 00 00 	movq   $0x0,0xb0(%rax)
   107e9:	00 00 00 00 
   107ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107f1:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
   107f8:	00 00 00 00 
   107fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10800:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)
   10807:	00 00 00 00 
   1080b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1080f:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
   10816:	00 00 00 00 
   1081a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1081e:	48 c7 80 d0 00 00 00 	movq   $0x0,0xd0(%rax)
   10825:	00 00 00 00 
   10829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1082d:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
   10834:	00 00 00 00 
   10838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1083c:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
   10843:	00 00 00 00 
   10847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1084b:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
   10852:	00 00 00 00 
   10856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1085a:	48 c7 80 f0 00 00 00 	movq   $0x0,0xf0(%rax)
   10861:	00 00 00 00 
   10865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10869:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
   10870:	00 00 00 00 
   10874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10878:	48 c7 80 00 01 00 00 	movq   $0x0,0x100(%rax)
   1087f:	00 00 00 00 
   10883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10887:	48 c7 80 08 01 00 00 	movq   $0x0,0x108(%rax)
   1088e:	00 00 00 00 
   10892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10896:	48 c7 80 10 01 00 00 	movq   $0x0,0x110(%rax)
   1089d:	00 00 00 00 
   108a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108a5:	48 c7 80 18 01 00 00 	movq   $0x0,0x118(%rax)
   108ac:	00 00 00 00 
   108b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108b4:	48 c7 80 20 01 00 00 	movq   $0x0,0x120(%rax)
   108bb:	00 00 00 00 
   108bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108c3:	48 c7 80 28 01 00 00 	movq   $0x0,0x128(%rax)
   108ca:	00 00 00 00 
   108ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108d2:	48 c7 80 30 01 00 00 	movq   $0x0,0x130(%rax)
   108d9:	00 00 00 00 
   108dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108e1:	48 c7 80 38 01 00 00 	movq   $0x0,0x138(%rax)
   108e8:	00 00 00 00 
   108ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108f0:	48 c7 80 40 01 00 00 	movq   $0x0,0x140(%rax)
   108f7:	00 00 00 00 
   108fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108ff:	48 c7 80 48 01 00 00 	movq   $0x0,0x148(%rax)
   10906:	00 00 00 00 
   1090a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1090e:	48 c7 80 50 01 00 00 	movq   $0x0,0x150(%rax)
   10915:	00 00 00 00 
   10919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1091d:	48 c7 80 58 01 00 00 	movq   $0x0,0x158(%rax)
   10924:	00 00 00 00 
   10928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1092c:	48 c7 80 60 01 00 00 	movq   $0x0,0x160(%rax)
   10933:	00 00 00 00 
   10937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1093b:	48 c7 80 68 01 00 00 	movq   $0x0,0x168(%rax)
   10942:	00 00 00 00 
   10946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1094a:	48 c7 80 70 01 00 00 	movq   $0x0,0x170(%rax)
   10951:	00 00 00 00 
   10955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10959:	48 c7 80 78 01 00 00 	movq   $0x0,0x178(%rax)
   10960:	00 00 00 00 
   10964:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10968:	48 c7 80 80 01 00 00 	movq   $0x0,0x180(%rax)
   1096f:	00 00 00 00 
   10973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10977:	48 c7 80 88 01 00 00 	movq   $0x0,0x188(%rax)
   1097e:	00 00 00 00 
   10982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10986:	48 c7 80 90 01 00 00 	movq   $0x0,0x190(%rax)
   1098d:	00 00 00 00 
   10991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10995:	48 c7 80 98 01 00 00 	movq   $0x0,0x198(%rax)
   1099c:	00 00 00 00 
   109a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109a4:	48 c7 80 a0 01 00 00 	movq   $0x0,0x1a0(%rax)
   109ab:	00 00 00 00 
   109af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109b3:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
   109ba:	00 00 00 00 
   109be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109c2:	48 c7 80 b0 01 00 00 	movq   $0x0,0x1b0(%rax)
   109c9:	00 00 00 00 
   109cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109d1:	48 c7 80 b8 01 00 00 	movq   $0x0,0x1b8(%rax)
   109d8:	00 00 00 00 
   109dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109e0:	48 c7 80 c0 01 00 00 	movq   $0x0,0x1c0(%rax)
   109e7:	00 00 00 00 
   109eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109ef:	48 c7 80 c8 01 00 00 	movq   $0x0,0x1c8(%rax)
   109f6:	00 00 00 00 
   109fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109fe:	48 c7 80 d0 01 00 00 	movq   $0x0,0x1d0(%rax)
   10a05:	00 00 00 00 
   10a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a0d:	48 c7 80 d8 01 00 00 	movq   $0x0,0x1d8(%rax)
   10a14:	00 00 00 00 
   10a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a1c:	48 c7 80 e0 01 00 00 	movq   $0x0,0x1e0(%rax)
   10a23:	00 00 00 00 
   10a27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a2b:	48 c7 80 e8 01 00 00 	movq   $0x0,0x1e8(%rax)
   10a32:	00 00 00 00 
   10a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a3a:	48 c7 80 f0 01 00 00 	movq   $0x0,0x1f0(%rax)
   10a41:	00 00 00 00 
   10a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a49:	48 c7 80 f8 01 00 00 	movq   $0x0,0x1f8(%rax)
   10a50:	00 00 00 00 
   10a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a58:	48 c7 80 00 02 00 00 	movq   $0x0,0x200(%rax)
   10a5f:	00 00 00 00 
   10a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a67:	48 c7 80 08 02 00 00 	movq   $0x0,0x208(%rax)
   10a6e:	00 00 00 00 
   10a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a76:	48 c7 80 10 02 00 00 	movq   $0x0,0x210(%rax)
   10a7d:	00 00 00 00 
   10a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a85:	48 c7 80 18 02 00 00 	movq   $0x0,0x218(%rax)
   10a8c:	00 00 00 00 
   10a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a94:	48 c7 80 20 02 00 00 	movq   $0x0,0x220(%rax)
   10a9b:	00 00 00 00 
   10a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aa3:	48 c7 80 28 02 00 00 	movq   $0x0,0x228(%rax)
   10aaa:	00 00 00 00 
   10aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ab2:	48 c7 80 30 02 00 00 	movq   $0x0,0x230(%rax)
   10ab9:	00 00 00 00 
   10abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac1:	48 c7 80 38 02 00 00 	movq   $0x0,0x238(%rax)
   10ac8:	00 00 00 00 
   10acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ad0:	48 c7 80 40 02 00 00 	movq   $0x0,0x240(%rax)
   10ad7:	00 00 00 00 
   10adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10adf:	48 c7 80 48 02 00 00 	movq   $0x0,0x248(%rax)
   10ae6:	00 00 00 00 
   10aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aee:	48 c7 80 50 02 00 00 	movq   $0x0,0x250(%rax)
   10af5:	00 00 00 00 
   10af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10afd:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
   10b04:	00 00 00 00 
   10b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b0c:	48 c7 80 60 02 00 00 	movq   $0x0,0x260(%rax)
   10b13:	00 00 00 00 
   10b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b1b:	48 c7 80 68 02 00 00 	movq   $0x0,0x268(%rax)
   10b22:	00 00 00 00 
   10b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b2a:	48 c7 80 70 02 00 00 	movq   $0x0,0x270(%rax)
   10b31:	00 00 00 00 
   10b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b39:	48 c7 80 78 02 00 00 	movq   $0x0,0x278(%rax)
   10b40:	00 00 00 00 
   10b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b48:	48 c7 80 80 02 00 00 	movq   $0x0,0x280(%rax)
   10b4f:	00 00 00 00 
   10b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b57:	48 c7 80 88 02 00 00 	movq   $0x0,0x288(%rax)
   10b5e:	00 00 00 00 
   10b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b66:	48 c7 80 90 02 00 00 	movq   $0x0,0x290(%rax)
   10b6d:	00 00 00 00 
   10b71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b75:	48 c7 80 98 02 00 00 	movq   $0x0,0x298(%rax)
   10b7c:	00 00 00 00 
   10b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b84:	48 c7 80 a0 02 00 00 	movq   $0x0,0x2a0(%rax)
   10b8b:	00 00 00 00 
   10b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b93:	48 c7 80 a8 02 00 00 	movq   $0x0,0x2a8(%rax)
   10b9a:	00 00 00 00 
   10b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ba2:	48 c7 80 b0 02 00 00 	movq   $0x0,0x2b0(%rax)
   10ba9:	00 00 00 00 
   10bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bb1:	48 c7 80 b8 02 00 00 	movq   $0x0,0x2b8(%rax)
   10bb8:	00 00 00 00 
   10bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bc0:	48 c7 80 c0 02 00 00 	movq   $0x0,0x2c0(%rax)
   10bc7:	00 00 00 00 
   10bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bcf:	48 c7 80 c8 02 00 00 	movq   $0x0,0x2c8(%rax)
   10bd6:	00 00 00 00 
   10bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bde:	48 c7 80 d0 02 00 00 	movq   $0x0,0x2d0(%rax)
   10be5:	00 00 00 00 
   10be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bed:	48 c7 80 d8 02 00 00 	movq   $0x0,0x2d8(%rax)
   10bf4:	00 00 00 00 
   10bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bfc:	48 c7 80 e0 02 00 00 	movq   $0x0,0x2e0(%rax)
   10c03:	00 00 00 00 
   10c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c0b:	48 c7 80 e8 02 00 00 	movq   $0x0,0x2e8(%rax)
   10c12:	00 00 00 00 
   10c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c1a:	48 c7 80 f0 02 00 00 	movq   $0x0,0x2f0(%rax)
   10c21:	00 00 00 00 
   10c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c29:	48 c7 80 f8 02 00 00 	movq   $0x0,0x2f8(%rax)
   10c30:	00 00 00 00 
   10c34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c38:	48 c7 80 00 03 00 00 	movq   $0x0,0x300(%rax)
   10c3f:	00 00 00 00 
   10c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c47:	48 c7 80 08 03 00 00 	movq   $0x0,0x308(%rax)
   10c4e:	00 00 00 00 
   10c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c56:	48 c7 80 10 03 00 00 	movq   $0x0,0x310(%rax)
   10c5d:	00 00 00 00 
   10c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c65:	48 c7 80 18 03 00 00 	movq   $0x0,0x318(%rax)
   10c6c:	00 00 00 00 
   10c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c74:	48 c7 80 20 03 00 00 	movq   $0x0,0x320(%rax)
   10c7b:	00 00 00 00 
   10c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c83:	48 c7 80 28 03 00 00 	movq   $0x0,0x328(%rax)
   10c8a:	00 00 00 00 
   10c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c92:	48 c7 80 30 03 00 00 	movq   $0x0,0x330(%rax)
   10c99:	00 00 00 00 
   10c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ca1:	48 c7 80 38 03 00 00 	movq   $0x0,0x338(%rax)
   10ca8:	00 00 00 00 
   10cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cb0:	48 c7 80 40 03 00 00 	movq   $0x0,0x340(%rax)
   10cb7:	00 00 00 00 
   10cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cbf:	48 c7 80 48 03 00 00 	movq   $0x0,0x348(%rax)
   10cc6:	00 00 00 00 
   10cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cce:	48 c7 80 50 03 00 00 	movq   $0x0,0x350(%rax)
   10cd5:	00 00 00 00 
   10cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cdd:	48 c7 80 58 03 00 00 	movq   $0x0,0x358(%rax)
   10ce4:	00 00 00 00 
   10ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cec:	48 c7 80 60 03 00 00 	movq   $0x0,0x360(%rax)
   10cf3:	00 00 00 00 
   10cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cfb:	48 c7 80 68 03 00 00 	movq   $0x0,0x368(%rax)
   10d02:	00 00 00 00 
   10d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d0a:	48 c7 80 70 03 00 00 	movq   $0x0,0x370(%rax)
   10d11:	00 00 00 00 
   10d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d19:	48 c7 80 78 03 00 00 	movq   $0x0,0x378(%rax)
   10d20:	00 00 00 00 
   10d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d28:	48 c7 80 80 03 00 00 	movq   $0x0,0x380(%rax)
   10d2f:	00 00 00 00 
   10d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d37:	48 c7 80 88 03 00 00 	movq   $0x0,0x388(%rax)
   10d3e:	00 00 00 00 
   10d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d46:	48 c7 80 90 03 00 00 	movq   $0x0,0x390(%rax)
   10d4d:	00 00 00 00 
   10d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d55:	48 c7 80 98 03 00 00 	movq   $0x0,0x398(%rax)
   10d5c:	00 00 00 00 
   10d60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d64:	48 c7 80 a0 03 00 00 	movq   $0x0,0x3a0(%rax)
   10d6b:	00 00 00 00 
   10d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d73:	48 c7 80 a8 03 00 00 	movq   $0x0,0x3a8(%rax)
   10d7a:	00 00 00 00 
   10d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d82:	48 c7 80 b0 03 00 00 	movq   $0x0,0x3b0(%rax)
   10d89:	00 00 00 00 
   10d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d91:	48 c7 80 b8 03 00 00 	movq   $0x0,0x3b8(%rax)
   10d98:	00 00 00 00 
   10d9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10da0:	48 c7 80 c0 03 00 00 	movq   $0x0,0x3c0(%rax)
   10da7:	00 00 00 00 
   10dab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10daf:	48 c7 80 c8 03 00 00 	movq   $0x0,0x3c8(%rax)
   10db6:	00 00 00 00 
   10dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dbe:	48 c7 80 d0 03 00 00 	movq   $0x0,0x3d0(%rax)
   10dc5:	00 00 00 00 
   10dc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dcd:	48 c7 80 d8 03 00 00 	movq   $0x0,0x3d8(%rax)
   10dd4:	00 00 00 00 
   10dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ddc:	48 c7 80 e0 03 00 00 	movq   $0x0,0x3e0(%rax)
   10de3:	00 00 00 00 
   10de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10deb:	48 c7 80 e8 03 00 00 	movq   $0x0,0x3e8(%rax)
   10df2:	00 00 00 00 
   10df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dfa:	48 c7 80 f0 03 00 00 	movq   $0x0,0x3f0(%rax)
   10e01:	00 00 00 00 
   10e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e09:	48 c7 80 f8 03 00 00 	movq   $0x0,0x3f8(%rax)
   10e10:	00 00 00 00 
   10e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e18:	48 c7 80 00 04 00 00 	movq   $0x0,0x400(%rax)
   10e1f:	00 00 00 00 
   10e23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e27:	48 c7 80 08 04 00 00 	movq   $0x0,0x408(%rax)
   10e2e:	00 00 00 00 
   10e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e36:	48 c7 80 10 04 00 00 	movq   $0x0,0x410(%rax)
   10e3d:	00 00 00 00 
   10e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e45:	48 c7 80 18 04 00 00 	movq   $0x0,0x418(%rax)
   10e4c:	00 00 00 00 
   10e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e54:	48 c7 80 20 04 00 00 	movq   $0x0,0x420(%rax)
   10e5b:	00 00 00 00 
   10e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e63:	48 c7 80 28 04 00 00 	movq   $0x0,0x428(%rax)
   10e6a:	00 00 00 00 
   10e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e72:	48 c7 80 30 04 00 00 	movq   $0x0,0x430(%rax)
   10e79:	00 00 00 00 
   10e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e81:	48 c7 80 38 04 00 00 	movq   $0x0,0x438(%rax)
   10e88:	00 00 00 00 
   10e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e90:	48 c7 80 40 04 00 00 	movq   $0x0,0x440(%rax)
   10e97:	00 00 00 00 
   10e9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e9f:	48 c7 80 48 04 00 00 	movq   $0x0,0x448(%rax)
   10ea6:	00 00 00 00 
   10eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eae:	48 c7 80 50 04 00 00 	movq   $0x0,0x450(%rax)
   10eb5:	00 00 00 00 
   10eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ebd:	48 c7 80 58 04 00 00 	movq   $0x0,0x458(%rax)
   10ec4:	00 00 00 00 
   10ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ecc:	48 c7 80 60 04 00 00 	movq   $0x0,0x460(%rax)
   10ed3:	00 00 00 00 
   10ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10edb:	48 c7 80 68 04 00 00 	movq   $0x0,0x468(%rax)
   10ee2:	00 00 00 00 
   10ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eea:	48 c7 80 70 04 00 00 	movq   $0x0,0x470(%rax)
   10ef1:	00 00 00 00 
   10ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ef9:	48 c7 80 78 04 00 00 	movq   $0x0,0x478(%rax)
   10f00:	00 00 00 00 
   10f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f08:	48 c7 80 80 04 00 00 	movq   $0x0,0x480(%rax)
   10f0f:	00 00 00 00 
   10f13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f17:	48 c7 80 88 04 00 00 	movq   $0x0,0x488(%rax)
   10f1e:	00 00 00 00 
   10f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f26:	48 c7 80 90 04 00 00 	movq   $0x0,0x490(%rax)
   10f2d:	00 00 00 00 
   10f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f35:	48 c7 80 98 04 00 00 	movq   $0x0,0x498(%rax)
   10f3c:	00 00 00 00 
   10f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f44:	48 c7 80 a0 04 00 00 	movq   $0x0,0x4a0(%rax)
   10f4b:	00 00 00 00 
   10f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f53:	48 c7 80 a8 04 00 00 	movq   $0x0,0x4a8(%rax)
   10f5a:	00 00 00 00 
   10f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f62:	48 c7 80 b0 04 00 00 	movq   $0x0,0x4b0(%rax)
   10f69:	00 00 00 00 
   10f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f71:	48 c7 80 b8 04 00 00 	movq   $0x0,0x4b8(%rax)
   10f78:	00 00 00 00 
   10f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f80:	48 c7 80 c0 04 00 00 	movq   $0x0,0x4c0(%rax)
   10f87:	00 00 00 00 
   10f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f8f:	48 c7 80 c8 04 00 00 	movq   $0x0,0x4c8(%rax)
   10f96:	00 00 00 00 
   10f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f9e:	48 c7 80 d0 04 00 00 	movq   $0x0,0x4d0(%rax)
   10fa5:	00 00 00 00 
   10fa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fad:	48 c7 80 d8 04 00 00 	movq   $0x0,0x4d8(%rax)
   10fb4:	00 00 00 00 
   10fb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fbc:	48 c7 80 e0 04 00 00 	movq   $0x0,0x4e0(%rax)
   10fc3:	00 00 00 00 
   10fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fcb:	48 c7 80 e8 04 00 00 	movq   $0x0,0x4e8(%rax)
   10fd2:	00 00 00 00 
   10fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fda:	48 c7 80 f0 04 00 00 	movq   $0x0,0x4f0(%rax)
   10fe1:	00 00 00 00 
   10fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fe9:	48 c7 80 f8 04 00 00 	movq   $0x0,0x4f8(%rax)
   10ff0:	00 00 00 00 
   10ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ff8:	48 c7 80 00 05 00 00 	movq   $0x0,0x500(%rax)
   10fff:	00 00 00 00 
   11003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11007:	48 c7 80 08 05 00 00 	movq   $0x0,0x508(%rax)
   1100e:	00 00 00 00 
   11012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11016:	48 c7 80 10 05 00 00 	movq   $0x0,0x510(%rax)
   1101d:	00 00 00 00 
   11021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11025:	48 c7 80 18 05 00 00 	movq   $0x0,0x518(%rax)
   1102c:	00 00 00 00 
   11030:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11034:	48 c7 80 20 05 00 00 	movq   $0x0,0x520(%rax)
   1103b:	00 00 00 00 
   1103f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11043:	48 c7 80 28 05 00 00 	movq   $0x0,0x528(%rax)
   1104a:	00 00 00 00 
   1104e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11052:	48 c7 80 30 05 00 00 	movq   $0x0,0x530(%rax)
   11059:	00 00 00 00 
   1105d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11061:	48 c7 80 38 05 00 00 	movq   $0x0,0x538(%rax)
   11068:	00 00 00 00 
   1106c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11070:	48 c7 80 40 05 00 00 	movq   $0x0,0x540(%rax)
   11077:	00 00 00 00 
   1107b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1107f:	48 c7 80 48 05 00 00 	movq   $0x0,0x548(%rax)
   11086:	00 00 00 00 
   1108a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1108e:	48 c7 80 50 05 00 00 	movq   $0x0,0x550(%rax)
   11095:	00 00 00 00 
   11099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1109d:	48 c7 80 58 05 00 00 	movq   $0x0,0x558(%rax)
   110a4:	00 00 00 00 
   110a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ac:	48 c7 80 60 05 00 00 	movq   $0x0,0x560(%rax)
   110b3:	00 00 00 00 
   110b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110bb:	48 c7 80 68 05 00 00 	movq   $0x0,0x568(%rax)
   110c2:	00 00 00 00 
   110c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ca:	48 c7 80 70 05 00 00 	movq   $0x0,0x570(%rax)
   110d1:	00 00 00 00 
   110d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110d9:	48 c7 80 78 05 00 00 	movq   $0x0,0x578(%rax)
   110e0:	00 00 00 00 
   110e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110e8:	48 c7 80 80 05 00 00 	movq   $0x0,0x580(%rax)
   110ef:	00 00 00 00 
   110f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110f7:	48 c7 80 88 05 00 00 	movq   $0x0,0x588(%rax)
   110fe:	00 00 00 00 
   11102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11106:	48 c7 80 90 05 00 00 	movq   $0x0,0x590(%rax)
   1110d:	00 00 00 00 
   11111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11115:	48 c7 80 98 05 00 00 	movq   $0x0,0x598(%rax)
   1111c:	00 00 00 00 
   11120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11124:	48 c7 80 a0 05 00 00 	movq   $0x0,0x5a0(%rax)
   1112b:	00 00 00 00 
   1112f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11133:	48 c7 80 a8 05 00 00 	movq   $0x0,0x5a8(%rax)
   1113a:	00 00 00 00 
   1113e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11142:	48 c7 80 b0 05 00 00 	movq   $0x0,0x5b0(%rax)
   11149:	00 00 00 00 
   1114d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11151:	48 c7 80 b8 05 00 00 	movq   $0x0,0x5b8(%rax)
   11158:	00 00 00 00 
   1115c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11160:	48 c7 80 c0 05 00 00 	movq   $0x0,0x5c0(%rax)
   11167:	00 00 00 00 
   1116b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1116f:	48 c7 80 c8 05 00 00 	movq   $0x0,0x5c8(%rax)
   11176:	00 00 00 00 
   1117a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1117e:	48 c7 80 d0 05 00 00 	movq   $0x0,0x5d0(%rax)
   11185:	00 00 00 00 
   11189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1118d:	48 c7 80 d8 05 00 00 	movq   $0x0,0x5d8(%rax)
   11194:	00 00 00 00 
   11198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1119c:	48 c7 80 e0 05 00 00 	movq   $0x0,0x5e0(%rax)
   111a3:	00 00 00 00 
   111a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111ab:	48 c7 80 e8 05 00 00 	movq   $0x0,0x5e8(%rax)
   111b2:	00 00 00 00 
   111b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111ba:	48 c7 80 f0 05 00 00 	movq   $0x0,0x5f0(%rax)
   111c1:	00 00 00 00 
   111c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111c9:	48 c7 80 f8 05 00 00 	movq   $0x0,0x5f8(%rax)
   111d0:	00 00 00 00 
   111d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111d8:	48 c7 80 00 06 00 00 	movq   $0x0,0x600(%rax)
   111df:	00 00 00 00 
   111e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111e7:	48 c7 80 08 06 00 00 	movq   $0x0,0x608(%rax)
   111ee:	00 00 00 00 
   111f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111f6:	48 c7 80 10 06 00 00 	movq   $0x0,0x610(%rax)
   111fd:	00 00 00 00 
   11201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11205:	48 c7 80 18 06 00 00 	movq   $0x0,0x618(%rax)
   1120c:	00 00 00 00 
   11210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11214:	48 c7 80 20 06 00 00 	movq   $0x0,0x620(%rax)
   1121b:	00 00 00 00 
   1121f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11223:	48 c7 80 28 06 00 00 	movq   $0x0,0x628(%rax)
   1122a:	00 00 00 00 
   1122e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11232:	48 c7 80 30 06 00 00 	movq   $0x0,0x630(%rax)
   11239:	00 00 00 00 
   1123d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11241:	48 c7 80 38 06 00 00 	movq   $0x0,0x638(%rax)
   11248:	00 00 00 00 
   1124c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11250:	48 c7 80 40 06 00 00 	movq   $0x0,0x640(%rax)
   11257:	00 00 00 00 
   1125b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1125f:	48 c7 80 48 06 00 00 	movq   $0x0,0x648(%rax)
   11266:	00 00 00 00 
   1126a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1126e:	48 c7 80 50 06 00 00 	movq   $0x0,0x650(%rax)
   11275:	00 00 00 00 
   11279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1127d:	48 c7 80 58 06 00 00 	movq   $0x0,0x658(%rax)
   11284:	00 00 00 00 
   11288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1128c:	48 c7 80 60 06 00 00 	movq   $0x0,0x660(%rax)
   11293:	00 00 00 00 
   11297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1129b:	48 c7 80 68 06 00 00 	movq   $0x0,0x668(%rax)
   112a2:	00 00 00 00 
   112a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112aa:	48 c7 80 70 06 00 00 	movq   $0x0,0x670(%rax)
   112b1:	00 00 00 00 
   112b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112b9:	48 c7 80 78 06 00 00 	movq   $0x0,0x678(%rax)
   112c0:	00 00 00 00 
   112c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112c8:	48 c7 80 80 06 00 00 	movq   $0x0,0x680(%rax)
   112cf:	00 00 00 00 
   112d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112d7:	48 c7 80 88 06 00 00 	movq   $0x0,0x688(%rax)
   112de:	00 00 00 00 
   112e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112e6:	48 c7 80 90 06 00 00 	movq   $0x0,0x690(%rax)
   112ed:	00 00 00 00 
   112f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112f5:	48 c7 80 98 06 00 00 	movq   $0x0,0x698(%rax)
   112fc:	00 00 00 00 
   11300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11304:	48 c7 80 a0 06 00 00 	movq   $0x0,0x6a0(%rax)
   1130b:	00 00 00 00 
   1130f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11313:	48 c7 80 a8 06 00 00 	movq   $0x0,0x6a8(%rax)
   1131a:	00 00 00 00 
   1131e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11322:	48 c7 80 b0 06 00 00 	movq   $0x0,0x6b0(%rax)
   11329:	00 00 00 00 
   1132d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11331:	48 c7 80 b8 06 00 00 	movq   $0x0,0x6b8(%rax)
   11338:	00 00 00 00 
   1133c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11340:	48 c7 80 c0 06 00 00 	movq   $0x0,0x6c0(%rax)
   11347:	00 00 00 00 
   1134b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1134f:	48 c7 80 c8 06 00 00 	movq   $0x0,0x6c8(%rax)
   11356:	00 00 00 00 
   1135a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1135e:	48 c7 80 d0 06 00 00 	movq   $0x0,0x6d0(%rax)
   11365:	00 00 00 00 
   11369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1136d:	48 c7 80 d8 06 00 00 	movq   $0x0,0x6d8(%rax)
   11374:	00 00 00 00 
   11378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1137c:	48 c7 80 e0 06 00 00 	movq   $0x0,0x6e0(%rax)
   11383:	00 00 00 00 
   11387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1138b:	48 c7 80 e8 06 00 00 	movq   $0x0,0x6e8(%rax)
   11392:	00 00 00 00 
   11396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1139a:	48 c7 80 f0 06 00 00 	movq   $0x0,0x6f0(%rax)
   113a1:	00 00 00 00 
   113a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113a9:	48 c7 80 f8 06 00 00 	movq   $0x0,0x6f8(%rax)
   113b0:	00 00 00 00 
   113b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113b8:	48 c7 80 00 07 00 00 	movq   $0x0,0x700(%rax)
   113bf:	00 00 00 00 
   113c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113c7:	48 c7 80 08 07 00 00 	movq   $0x0,0x708(%rax)
   113ce:	00 00 00 00 
   113d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113d6:	48 c7 80 10 07 00 00 	movq   $0x0,0x710(%rax)
   113dd:	00 00 00 00 
   113e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113e5:	48 c7 80 18 07 00 00 	movq   $0x0,0x718(%rax)
   113ec:	00 00 00 00 
   113f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113f4:	48 c7 80 20 07 00 00 	movq   $0x0,0x720(%rax)
   113fb:	00 00 00 00 
   113ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11403:	48 c7 80 28 07 00 00 	movq   $0x0,0x728(%rax)
   1140a:	00 00 00 00 
   1140e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11412:	48 c7 80 30 07 00 00 	movq   $0x0,0x730(%rax)
   11419:	00 00 00 00 
   1141d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11421:	48 c7 80 38 07 00 00 	movq   $0x0,0x738(%rax)
   11428:	00 00 00 00 
   1142c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11430:	48 c7 80 40 07 00 00 	movq   $0x0,0x740(%rax)
   11437:	00 00 00 00 
   1143b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1143f:	48 c7 80 48 07 00 00 	movq   $0x0,0x748(%rax)
   11446:	00 00 00 00 
   1144a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1144e:	48 c7 80 50 07 00 00 	movq   $0x0,0x750(%rax)
   11455:	00 00 00 00 
   11459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1145d:	48 c7 80 58 07 00 00 	movq   $0x0,0x758(%rax)
   11464:	00 00 00 00 
   11468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1146c:	48 c7 80 60 07 00 00 	movq   $0x0,0x760(%rax)
   11473:	00 00 00 00 
   11477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1147b:	48 c7 80 68 07 00 00 	movq   $0x0,0x768(%rax)
   11482:	00 00 00 00 
   11486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1148a:	48 c7 80 70 07 00 00 	movq   $0x0,0x770(%rax)
   11491:	00 00 00 00 
   11495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11499:	48 c7 80 78 07 00 00 	movq   $0x0,0x778(%rax)
   114a0:	00 00 00 00 
   114a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114a8:	48 c7 80 80 07 00 00 	movq   $0x0,0x780(%rax)
   114af:	00 00 00 00 
   114b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114b7:	48 c7 80 88 07 00 00 	movq   $0x0,0x788(%rax)
   114be:	00 00 00 00 
   114c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114c6:	48 c7 80 90 07 00 00 	movq   $0x0,0x790(%rax)
   114cd:	00 00 00 00 
   114d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114d5:	48 c7 80 98 07 00 00 	movq   $0x0,0x798(%rax)
   114dc:	00 00 00 00 
   114e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e4:	48 c7 80 a0 07 00 00 	movq   $0x0,0x7a0(%rax)
   114eb:	00 00 00 00 
   114ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114f3:	48 c7 80 a8 07 00 00 	movq   $0x0,0x7a8(%rax)
   114fa:	00 00 00 00 
   114fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11502:	48 c7 80 b0 07 00 00 	movq   $0x0,0x7b0(%rax)
   11509:	00 00 00 00 
   1150d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11511:	48 c7 80 b8 07 00 00 	movq   $0x0,0x7b8(%rax)
   11518:	00 00 00 00 
   1151c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11520:	48 c7 80 c0 07 00 00 	movq   $0x0,0x7c0(%rax)
   11527:	00 00 00 00 
   1152b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1152f:	48 c7 80 c8 07 00 00 	movq   $0x0,0x7c8(%rax)
   11536:	00 00 00 00 
   1153a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1153e:	48 c7 80 d0 07 00 00 	movq   $0x0,0x7d0(%rax)
   11545:	00 00 00 00 
   11549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1154d:	48 c7 80 d8 07 00 00 	movq   $0x0,0x7d8(%rax)
   11554:	00 00 00 00 
   11558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1155c:	48 c7 80 e0 07 00 00 	movq   $0x0,0x7e0(%rax)
   11563:	00 00 00 00 
   11567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1156b:	48 c7 80 e8 07 00 00 	movq   $0x0,0x7e8(%rax)
   11572:	00 00 00 00 
   11576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1157a:	48 c7 80 f0 07 00 00 	movq   $0x0,0x7f0(%rax)
   11581:	00 00 00 00 
   11585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11589:	48 c7 80 f8 07 00 00 	movq   $0x0,0x7f8(%rax)
   11590:	00 00 00 00 
   11594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11598:	48 c7 80 00 08 00 00 	movq   $0x0,0x800(%rax)
   1159f:	00 00 00 00 
   115a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115a7:	48 c7 80 08 08 00 00 	movq   $0x0,0x808(%rax)
   115ae:	00 00 00 00 
   115b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115b6:	48 c7 80 10 08 00 00 	movq   $0x0,0x810(%rax)
   115bd:	00 00 00 00 
   115c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115c5:	48 c7 80 18 08 00 00 	movq   $0x0,0x818(%rax)
   115cc:	00 00 00 00 
   115d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115d4:	48 c7 80 20 08 00 00 	movq   $0x0,0x820(%rax)
   115db:	00 00 00 00 
   115df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115e3:	48 c7 80 28 08 00 00 	movq   $0x0,0x828(%rax)
   115ea:	00 00 00 00 
   115ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115f2:	48 c7 80 30 08 00 00 	movq   $0x0,0x830(%rax)
   115f9:	00 00 00 00 
   115fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11601:	48 c7 80 38 08 00 00 	movq   $0x0,0x838(%rax)
   11608:	00 00 00 00 
   1160c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11610:	48 c7 80 40 08 00 00 	movq   $0x0,0x840(%rax)
   11617:	00 00 00 00 
   1161b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1161f:	48 c7 80 48 08 00 00 	movq   $0x0,0x848(%rax)
   11626:	00 00 00 00 
   1162a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1162e:	48 c7 80 50 08 00 00 	movq   $0x0,0x850(%rax)
   11635:	00 00 00 00 
   11639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1163d:	48 c7 80 58 08 00 00 	movq   $0x0,0x858(%rax)
   11644:	00 00 00 00 
   11648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1164c:	48 c7 80 60 08 00 00 	movq   $0x0,0x860(%rax)
   11653:	00 00 00 00 
   11657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1165b:	48 c7 80 68 08 00 00 	movq   $0x0,0x868(%rax)
   11662:	00 00 00 00 
   11666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1166a:	48 c7 80 70 08 00 00 	movq   $0x0,0x870(%rax)
   11671:	00 00 00 00 
   11675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11679:	48 c7 80 78 08 00 00 	movq   $0x0,0x878(%rax)
   11680:	00 00 00 00 
   11684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11688:	48 c7 80 80 08 00 00 	movq   $0x0,0x880(%rax)
   1168f:	00 00 00 00 
   11693:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11697:	48 c7 80 88 08 00 00 	movq   $0x0,0x888(%rax)
   1169e:	00 00 00 00 
   116a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116a6:	48 c7 80 90 08 00 00 	movq   $0x0,0x890(%rax)
   116ad:	00 00 00 00 
   116b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116b5:	48 c7 80 98 08 00 00 	movq   $0x0,0x898(%rax)
   116bc:	00 00 00 00 
   116c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116c4:	48 c7 80 a0 08 00 00 	movq   $0x0,0x8a0(%rax)
   116cb:	00 00 00 00 
   116cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116d3:	48 c7 80 a8 08 00 00 	movq   $0x0,0x8a8(%rax)
   116da:	00 00 00 00 
   116de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116e2:	48 c7 80 b0 08 00 00 	movq   $0x0,0x8b0(%rax)
   116e9:	00 00 00 00 
   116ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116f1:	48 c7 80 b8 08 00 00 	movq   $0x0,0x8b8(%rax)
   116f8:	00 00 00 00 
   116fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11700:	48 c7 80 c0 08 00 00 	movq   $0x0,0x8c0(%rax)
   11707:	00 00 00 00 
   1170b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1170f:	48 c7 80 c8 08 00 00 	movq   $0x0,0x8c8(%rax)
   11716:	00 00 00 00 
   1171a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1171e:	48 c7 80 d0 08 00 00 	movq   $0x0,0x8d0(%rax)
   11725:	00 00 00 00 
   11729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1172d:	48 c7 80 d8 08 00 00 	movq   $0x0,0x8d8(%rax)
   11734:	00 00 00 00 
   11738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1173c:	48 c7 80 e0 08 00 00 	movq   $0x0,0x8e0(%rax)
   11743:	00 00 00 00 
   11747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1174b:	48 c7 80 e8 08 00 00 	movq   $0x0,0x8e8(%rax)
   11752:	00 00 00 00 
   11756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1175a:	48 c7 80 f0 08 00 00 	movq   $0x0,0x8f0(%rax)
   11761:	00 00 00 00 
   11765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11769:	48 c7 80 f8 08 00 00 	movq   $0x0,0x8f8(%rax)
   11770:	00 00 00 00 
   11774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11778:	48 c7 80 00 09 00 00 	movq   $0x0,0x900(%rax)
   1177f:	00 00 00 00 
   11783:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11787:	48 c7 80 08 09 00 00 	movq   $0x0,0x908(%rax)
   1178e:	00 00 00 00 
   11792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11796:	48 c7 80 10 09 00 00 	movq   $0x0,0x910(%rax)
   1179d:	00 00 00 00 
   117a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117a5:	48 c7 80 18 09 00 00 	movq   $0x0,0x918(%rax)
   117ac:	00 00 00 00 
   117b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117b4:	48 c7 80 20 09 00 00 	movq   $0x0,0x920(%rax)
   117bb:	00 00 00 00 
   117bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117c3:	48 c7 80 28 09 00 00 	movq   $0x0,0x928(%rax)
   117ca:	00 00 00 00 
   117ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117d2:	48 c7 80 30 09 00 00 	movq   $0x0,0x930(%rax)
   117d9:	00 00 00 00 
   117dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117e1:	48 c7 80 38 09 00 00 	movq   $0x0,0x938(%rax)
   117e8:	00 00 00 00 
   117ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117f0:	48 c7 80 40 09 00 00 	movq   $0x0,0x940(%rax)
   117f7:	00 00 00 00 
   117fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117ff:	48 c7 80 48 09 00 00 	movq   $0x0,0x948(%rax)
   11806:	00 00 00 00 
   1180a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1180e:	48 c7 80 50 09 00 00 	movq   $0x0,0x950(%rax)
   11815:	00 00 00 00 
   11819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1181d:	48 c7 80 58 09 00 00 	movq   $0x0,0x958(%rax)
   11824:	00 00 00 00 
   11828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1182c:	48 c7 80 60 09 00 00 	movq   $0x0,0x960(%rax)
   11833:	00 00 00 00 
   11837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1183b:	48 c7 80 68 09 00 00 	movq   $0x0,0x968(%rax)
   11842:	00 00 00 00 
   11846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1184a:	48 c7 80 70 09 00 00 	movq   $0x0,0x970(%rax)
   11851:	00 00 00 00 
   11855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11859:	48 c7 80 78 09 00 00 	movq   $0x0,0x978(%rax)
   11860:	00 00 00 00 
   11864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11868:	48 c7 80 80 09 00 00 	movq   $0x0,0x980(%rax)
   1186f:	00 00 00 00 
   11873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11877:	48 c7 80 88 09 00 00 	movq   $0x0,0x988(%rax)
   1187e:	00 00 00 00 
   11882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11886:	48 c7 80 90 09 00 00 	movq   $0x0,0x990(%rax)
   1188d:	00 00 00 00 
   11891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11895:	48 c7 80 98 09 00 00 	movq   $0x0,0x998(%rax)
   1189c:	00 00 00 00 
   118a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118a4:	48 c7 80 a0 09 00 00 	movq   $0x0,0x9a0(%rax)
   118ab:	00 00 00 00 
   118af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118b3:	48 c7 80 a8 09 00 00 	movq   $0x0,0x9a8(%rax)
   118ba:	00 00 00 00 
   118be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118c2:	48 c7 80 b0 09 00 00 	movq   $0x0,0x9b0(%rax)
   118c9:	00 00 00 00 
   118cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118d1:	48 c7 80 b8 09 00 00 	movq   $0x0,0x9b8(%rax)
   118d8:	00 00 00 00 
   118dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118e0:	48 c7 80 c0 09 00 00 	movq   $0x0,0x9c0(%rax)
   118e7:	00 00 00 00 
   118eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118ef:	48 c7 80 c8 09 00 00 	movq   $0x0,0x9c8(%rax)
   118f6:	00 00 00 00 
   118fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118fe:	48 c7 80 d0 09 00 00 	movq   $0x0,0x9d0(%rax)
   11905:	00 00 00 00 
   11909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1190d:	48 c7 80 d8 09 00 00 	movq   $0x0,0x9d8(%rax)
   11914:	00 00 00 00 
   11918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1191c:	48 c7 80 e0 09 00 00 	movq   $0x0,0x9e0(%rax)
   11923:	00 00 00 00 
   11927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1192b:	48 c7 80 e8 09 00 00 	movq   $0x0,0x9e8(%rax)
   11932:	00 00 00 00 
   11936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1193a:	48 c7 80 f0 09 00 00 	movq   $0x0,0x9f0(%rax)
   11941:	00 00 00 00 
   11945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11949:	48 c7 80 f8 09 00 00 	movq   $0x0,0x9f8(%rax)
   11950:	00 00 00 00 
   11954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11958:	48 c7 80 00 0a 00 00 	movq   $0x0,0xa00(%rax)
   1195f:	00 00 00 00 
   11963:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11967:	48 c7 80 08 0a 00 00 	movq   $0x0,0xa08(%rax)
   1196e:	00 00 00 00 
   11972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11976:	48 c7 80 10 0a 00 00 	movq   $0x0,0xa10(%rax)
   1197d:	00 00 00 00 
   11981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11985:	48 c7 80 18 0a 00 00 	movq   $0x0,0xa18(%rax)
   1198c:	00 00 00 00 
   11990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11994:	48 c7 80 20 0a 00 00 	movq   $0x0,0xa20(%rax)
   1199b:	00 00 00 00 
   1199f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119a3:	48 c7 80 28 0a 00 00 	movq   $0x0,0xa28(%rax)
   119aa:	00 00 00 00 
   119ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119b2:	48 c7 80 30 0a 00 00 	movq   $0x0,0xa30(%rax)
   119b9:	00 00 00 00 
   119bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119c1:	48 c7 80 38 0a 00 00 	movq   $0x0,0xa38(%rax)
   119c8:	00 00 00 00 
   119cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119d0:	48 c7 80 40 0a 00 00 	movq   $0x0,0xa40(%rax)
   119d7:	00 00 00 00 
   119db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119df:	48 c7 80 48 0a 00 00 	movq   $0x0,0xa48(%rax)
   119e6:	00 00 00 00 
   119ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119ee:	48 c7 80 50 0a 00 00 	movq   $0x0,0xa50(%rax)
   119f5:	00 00 00 00 
   119f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119fd:	48 c7 80 58 0a 00 00 	movq   $0x0,0xa58(%rax)
   11a04:	00 00 00 00 
   11a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a0c:	48 c7 80 60 0a 00 00 	movq   $0x0,0xa60(%rax)
   11a13:	00 00 00 00 
   11a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a1b:	48 c7 80 68 0a 00 00 	movq   $0x0,0xa68(%rax)
   11a22:	00 00 00 00 
   11a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a2a:	48 c7 80 70 0a 00 00 	movq   $0x0,0xa70(%rax)
   11a31:	00 00 00 00 
   11a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a39:	48 c7 80 78 0a 00 00 	movq   $0x0,0xa78(%rax)
   11a40:	00 00 00 00 
   11a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a48:	48 c7 80 80 0a 00 00 	movq   $0x0,0xa80(%rax)
   11a4f:	00 00 00 00 
   11a53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a57:	48 c7 80 88 0a 00 00 	movq   $0x0,0xa88(%rax)
   11a5e:	00 00 00 00 
   11a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a66:	48 c7 80 90 0a 00 00 	movq   $0x0,0xa90(%rax)
   11a6d:	00 00 00 00 
   11a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a75:	48 c7 80 98 0a 00 00 	movq   $0x0,0xa98(%rax)
   11a7c:	00 00 00 00 
   11a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a84:	48 c7 80 a0 0a 00 00 	movq   $0x0,0xaa0(%rax)
   11a8b:	00 00 00 00 
   11a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a93:	48 c7 80 a8 0a 00 00 	movq   $0x0,0xaa8(%rax)
   11a9a:	00 00 00 00 
   11a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aa2:	48 c7 80 b0 0a 00 00 	movq   $0x0,0xab0(%rax)
   11aa9:	00 00 00 00 
   11aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ab1:	48 c7 80 b8 0a 00 00 	movq   $0x0,0xab8(%rax)
   11ab8:	00 00 00 00 
   11abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac0:	48 c7 80 c0 0a 00 00 	movq   $0x0,0xac0(%rax)
   11ac7:	00 00 00 00 
   11acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11acf:	48 c7 80 c8 0a 00 00 	movq   $0x0,0xac8(%rax)
   11ad6:	00 00 00 00 
   11ada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ade:	48 c7 80 d0 0a 00 00 	movq   $0x0,0xad0(%rax)
   11ae5:	00 00 00 00 
   11ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aed:	48 c7 80 d8 0a 00 00 	movq   $0x0,0xad8(%rax)
   11af4:	00 00 00 00 
   11af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11afc:	48 c7 80 e0 0a 00 00 	movq   $0x0,0xae0(%rax)
   11b03:	00 00 00 00 
   11b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b0b:	48 c7 80 e8 0a 00 00 	movq   $0x0,0xae8(%rax)
   11b12:	00 00 00 00 
   11b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b1a:	48 c7 80 f0 0a 00 00 	movq   $0x0,0xaf0(%rax)
   11b21:	00 00 00 00 
   11b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b29:	48 c7 80 f8 0a 00 00 	movq   $0x0,0xaf8(%rax)
   11b30:	00 00 00 00 
   11b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b38:	48 c7 80 00 0b 00 00 	movq   $0x0,0xb00(%rax)
   11b3f:	00 00 00 00 
   11b43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b47:	48 c7 80 08 0b 00 00 	movq   $0x0,0xb08(%rax)
   11b4e:	00 00 00 00 
   11b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b56:	48 c7 80 10 0b 00 00 	movq   $0x0,0xb10(%rax)
   11b5d:	00 00 00 00 
   11b61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b65:	48 c7 80 18 0b 00 00 	movq   $0x0,0xb18(%rax)
   11b6c:	00 00 00 00 
   11b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b74:	48 c7 80 20 0b 00 00 	movq   $0x0,0xb20(%rax)
   11b7b:	00 00 00 00 
   11b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b83:	48 c7 80 28 0b 00 00 	movq   $0x0,0xb28(%rax)
   11b8a:	00 00 00 00 
   11b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b92:	48 c7 80 30 0b 00 00 	movq   $0x0,0xb30(%rax)
   11b99:	00 00 00 00 
   11b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ba1:	48 c7 80 38 0b 00 00 	movq   $0x0,0xb38(%rax)
   11ba8:	00 00 00 00 
   11bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bb0:	48 c7 80 40 0b 00 00 	movq   $0x0,0xb40(%rax)
   11bb7:	00 00 00 00 
   11bbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bbf:	48 c7 80 48 0b 00 00 	movq   $0x0,0xb48(%rax)
   11bc6:	00 00 00 00 
   11bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bce:	48 c7 80 50 0b 00 00 	movq   $0x0,0xb50(%rax)
   11bd5:	00 00 00 00 
   11bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bdd:	48 c7 80 58 0b 00 00 	movq   $0x0,0xb58(%rax)
   11be4:	00 00 00 00 
   11be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bec:	48 c7 80 60 0b 00 00 	movq   $0x0,0xb60(%rax)
   11bf3:	00 00 00 00 
   11bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bfb:	48 c7 80 68 0b 00 00 	movq   $0x0,0xb68(%rax)
   11c02:	00 00 00 00 
   11c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c0a:	48 c7 80 70 0b 00 00 	movq   $0x0,0xb70(%rax)
   11c11:	00 00 00 00 
   11c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c19:	48 c7 80 78 0b 00 00 	movq   $0x0,0xb78(%rax)
   11c20:	00 00 00 00 
   11c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c28:	48 c7 80 80 0b 00 00 	movq   $0x0,0xb80(%rax)
   11c2f:	00 00 00 00 
   11c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c37:	48 c7 80 88 0b 00 00 	movq   $0x0,0xb88(%rax)
   11c3e:	00 00 00 00 
   11c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c46:	48 c7 80 90 0b 00 00 	movq   $0x0,0xb90(%rax)
   11c4d:	00 00 00 00 
   11c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c55:	48 c7 80 98 0b 00 00 	movq   $0x0,0xb98(%rax)
   11c5c:	00 00 00 00 
   11c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c64:	48 c7 80 a0 0b 00 00 	movq   $0x0,0xba0(%rax)
   11c6b:	00 00 00 00 
   11c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c73:	48 c7 80 a8 0b 00 00 	movq   $0x0,0xba8(%rax)
   11c7a:	00 00 00 00 
   11c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c82:	48 c7 80 b0 0b 00 00 	movq   $0x0,0xbb0(%rax)
   11c89:	00 00 00 00 
   11c8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c91:	48 c7 80 b8 0b 00 00 	movq   $0x0,0xbb8(%rax)
   11c98:	00 00 00 00 
   11c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ca0:	48 c7 80 c0 0b 00 00 	movq   $0x0,0xbc0(%rax)
   11ca7:	00 00 00 00 
   11cab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11caf:	48 c7 80 c8 0b 00 00 	movq   $0x0,0xbc8(%rax)
   11cb6:	00 00 00 00 
   11cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cbe:	48 c7 80 d0 0b 00 00 	movq   $0x0,0xbd0(%rax)
   11cc5:	00 00 00 00 
   11cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ccd:	48 c7 80 d8 0b 00 00 	movq   $0x0,0xbd8(%rax)
   11cd4:	00 00 00 00 
   11cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cdc:	48 c7 80 e0 0b 00 00 	movq   $0x0,0xbe0(%rax)
   11ce3:	00 00 00 00 
   11ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ceb:	48 c7 80 e8 0b 00 00 	movq   $0x0,0xbe8(%rax)
   11cf2:	00 00 00 00 
   11cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cfa:	48 c7 80 f0 0b 00 00 	movq   $0x0,0xbf0(%rax)
   11d01:	00 00 00 00 
   11d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d09:	48 c7 80 f8 0b 00 00 	movq   $0x0,0xbf8(%rax)
   11d10:	00 00 00 00 
   11d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d18:	48 c7 80 00 0c 00 00 	movq   $0x0,0xc00(%rax)
   11d1f:	00 00 00 00 
   11d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d27:	48 c7 80 08 0c 00 00 	movq   $0x0,0xc08(%rax)
   11d2e:	00 00 00 00 
   11d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d36:	48 c7 80 10 0c 00 00 	movq   $0x0,0xc10(%rax)
   11d3d:	00 00 00 00 
   11d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d45:	48 c7 80 18 0c 00 00 	movq   $0x0,0xc18(%rax)
   11d4c:	00 00 00 00 
   11d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d54:	48 c7 80 20 0c 00 00 	movq   $0x0,0xc20(%rax)
   11d5b:	00 00 00 00 
   11d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d63:	48 c7 80 28 0c 00 00 	movq   $0x0,0xc28(%rax)
   11d6a:	00 00 00 00 
   11d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d72:	48 c7 80 30 0c 00 00 	movq   $0x0,0xc30(%rax)
   11d79:	00 00 00 00 
   11d7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d81:	48 c7 80 38 0c 00 00 	movq   $0x0,0xc38(%rax)
   11d88:	00 00 00 00 
   11d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d90:	48 c7 80 40 0c 00 00 	movq   $0x0,0xc40(%rax)
   11d97:	00 00 00 00 
   11d9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d9f:	48 c7 80 48 0c 00 00 	movq   $0x0,0xc48(%rax)
   11da6:	00 00 00 00 
   11daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dae:	48 c7 80 50 0c 00 00 	movq   $0x0,0xc50(%rax)
   11db5:	00 00 00 00 
   11db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dbd:	48 c7 80 58 0c 00 00 	movq   $0x0,0xc58(%rax)
   11dc4:	00 00 00 00 
   11dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dcc:	48 c7 80 60 0c 00 00 	movq   $0x0,0xc60(%rax)
   11dd3:	00 00 00 00 
   11dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ddb:	48 c7 80 68 0c 00 00 	movq   $0x0,0xc68(%rax)
   11de2:	00 00 00 00 
   11de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dea:	48 c7 80 70 0c 00 00 	movq   $0x0,0xc70(%rax)
   11df1:	00 00 00 00 
   11df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11df9:	48 c7 80 78 0c 00 00 	movq   $0x0,0xc78(%rax)
   11e00:	00 00 00 00 
   11e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e08:	48 c7 80 80 0c 00 00 	movq   $0x0,0xc80(%rax)
   11e0f:	00 00 00 00 
   11e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e17:	48 c7 80 88 0c 00 00 	movq   $0x0,0xc88(%rax)
   11e1e:	00 00 00 00 
   11e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e26:	48 c7 80 90 0c 00 00 	movq   $0x0,0xc90(%rax)
   11e2d:	00 00 00 00 
   11e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e35:	48 c7 80 98 0c 00 00 	movq   $0x0,0xc98(%rax)
   11e3c:	00 00 00 00 
   11e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e44:	48 c7 80 a0 0c 00 00 	movq   $0x0,0xca0(%rax)
   11e4b:	00 00 00 00 
   11e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e53:	48 c7 80 a8 0c 00 00 	movq   $0x0,0xca8(%rax)
   11e5a:	00 00 00 00 
   11e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e62:	48 c7 80 b0 0c 00 00 	movq   $0x0,0xcb0(%rax)
   11e69:	00 00 00 00 
   11e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e71:	48 c7 80 b8 0c 00 00 	movq   $0x0,0xcb8(%rax)
   11e78:	00 00 00 00 
   11e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e80:	48 c7 80 c0 0c 00 00 	movq   $0x0,0xcc0(%rax)
   11e87:	00 00 00 00 
   11e8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e8f:	48 c7 80 c8 0c 00 00 	movq   $0x0,0xcc8(%rax)
   11e96:	00 00 00 00 
   11e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e9e:	48 c7 80 d0 0c 00 00 	movq   $0x0,0xcd0(%rax)
   11ea5:	00 00 00 00 
   11ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ead:	48 c7 80 d8 0c 00 00 	movq   $0x0,0xcd8(%rax)
   11eb4:	00 00 00 00 
   11eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ebc:	48 c7 80 e0 0c 00 00 	movq   $0x0,0xce0(%rax)
   11ec3:	00 00 00 00 
   11ec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ecb:	48 c7 80 e8 0c 00 00 	movq   $0x0,0xce8(%rax)
   11ed2:	00 00 00 00 
   11ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11eda:	48 c7 80 f0 0c 00 00 	movq   $0x0,0xcf0(%rax)
   11ee1:	00 00 00 00 
   11ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ee9:	48 c7 80 f8 0c 00 00 	movq   $0x0,0xcf8(%rax)
   11ef0:	00 00 00 00 
   11ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ef8:	48 c7 80 00 0d 00 00 	movq   $0x0,0xd00(%rax)
   11eff:	00 00 00 00 
   11f03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f07:	48 c7 80 08 0d 00 00 	movq   $0x0,0xd08(%rax)
   11f0e:	00 00 00 00 
   11f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f16:	48 c7 80 10 0d 00 00 	movq   $0x0,0xd10(%rax)
   11f1d:	00 00 00 00 
   11f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f25:	48 c7 80 18 0d 00 00 	movq   $0x0,0xd18(%rax)
   11f2c:	00 00 00 00 
   11f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f34:	48 c7 80 20 0d 00 00 	movq   $0x0,0xd20(%rax)
   11f3b:	00 00 00 00 
   11f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f43:	48 c7 80 28 0d 00 00 	movq   $0x0,0xd28(%rax)
   11f4a:	00 00 00 00 
   11f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f52:	48 c7 80 30 0d 00 00 	movq   $0x0,0xd30(%rax)
   11f59:	00 00 00 00 
   11f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f61:	48 c7 80 38 0d 00 00 	movq   $0x0,0xd38(%rax)
   11f68:	00 00 00 00 
   11f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f70:	48 c7 80 40 0d 00 00 	movq   $0x0,0xd40(%rax)
   11f77:	00 00 00 00 
   11f7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f7f:	48 c7 80 48 0d 00 00 	movq   $0x0,0xd48(%rax)
   11f86:	00 00 00 00 
   11f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f8e:	48 c7 80 50 0d 00 00 	movq   $0x0,0xd50(%rax)
   11f95:	00 00 00 00 
   11f99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f9d:	48 c7 80 58 0d 00 00 	movq   $0x0,0xd58(%rax)
   11fa4:	00 00 00 00 
   11fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fac:	48 c7 80 60 0d 00 00 	movq   $0x0,0xd60(%rax)
   11fb3:	00 00 00 00 
   11fb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fbb:	48 c7 80 68 0d 00 00 	movq   $0x0,0xd68(%rax)
   11fc2:	00 00 00 00 
   11fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fca:	48 c7 80 70 0d 00 00 	movq   $0x0,0xd70(%rax)
   11fd1:	00 00 00 00 
   11fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fd9:	48 c7 80 78 0d 00 00 	movq   $0x0,0xd78(%rax)
   11fe0:	00 00 00 00 
   11fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fe8:	48 c7 80 80 0d 00 00 	movq   $0x0,0xd80(%rax)
   11fef:	00 00 00 00 
   11ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ff7:	48 c7 80 88 0d 00 00 	movq   $0x0,0xd88(%rax)
   11ffe:	00 00 00 00 
   12002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12006:	48 c7 80 90 0d 00 00 	movq   $0x0,0xd90(%rax)
   1200d:	00 00 00 00 
   12011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12015:	48 c7 80 98 0d 00 00 	movq   $0x0,0xd98(%rax)
   1201c:	00 00 00 00 
   12020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12024:	48 c7 80 a0 0d 00 00 	movq   $0x0,0xda0(%rax)
   1202b:	00 00 00 00 
   1202f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12033:	48 c7 80 a8 0d 00 00 	movq   $0x0,0xda8(%rax)
   1203a:	00 00 00 00 
   1203e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12042:	48 c7 80 b0 0d 00 00 	movq   $0x0,0xdb0(%rax)
   12049:	00 00 00 00 
   1204d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12051:	48 c7 80 b8 0d 00 00 	movq   $0x0,0xdb8(%rax)
   12058:	00 00 00 00 
   1205c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12060:	48 c7 80 c0 0d 00 00 	movq   $0x0,0xdc0(%rax)
   12067:	00 00 00 00 
   1206b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1206f:	48 c7 80 c8 0d 00 00 	movq   $0x0,0xdc8(%rax)
   12076:	00 00 00 00 
   1207a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1207e:	48 c7 80 d0 0d 00 00 	movq   $0x0,0xdd0(%rax)
   12085:	00 00 00 00 
   12089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1208d:	48 c7 80 d8 0d 00 00 	movq   $0x0,0xdd8(%rax)
   12094:	00 00 00 00 
   12098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1209c:	48 c7 80 e0 0d 00 00 	movq   $0x0,0xde0(%rax)
   120a3:	00 00 00 00 
   120a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120ab:	48 c7 80 e8 0d 00 00 	movq   $0x0,0xde8(%rax)
   120b2:	00 00 00 00 
   120b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120ba:	48 c7 80 f0 0d 00 00 	movq   $0x0,0xdf0(%rax)
   120c1:	00 00 00 00 
   120c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120c9:	48 c7 80 f8 0d 00 00 	movq   $0x0,0xdf8(%rax)
   120d0:	00 00 00 00 
   120d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120d8:	48 c7 80 00 0e 00 00 	movq   $0x0,0xe00(%rax)
   120df:	00 00 00 00 
   120e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120e7:	48 c7 80 08 0e 00 00 	movq   $0x0,0xe08(%rax)
   120ee:	00 00 00 00 
   120f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120f6:	48 c7 80 10 0e 00 00 	movq   $0x0,0xe10(%rax)
   120fd:	00 00 00 00 
   12101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12105:	48 c7 80 18 0e 00 00 	movq   $0x0,0xe18(%rax)
   1210c:	00 00 00 00 
   12110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12114:	48 c7 80 20 0e 00 00 	movq   $0x0,0xe20(%rax)
   1211b:	00 00 00 00 
   1211f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12123:	48 c7 80 28 0e 00 00 	movq   $0x0,0xe28(%rax)
   1212a:	00 00 00 00 
   1212e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12132:	48 c7 80 30 0e 00 00 	movq   $0x0,0xe30(%rax)
   12139:	00 00 00 00 
   1213d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12141:	48 c7 80 38 0e 00 00 	movq   $0x0,0xe38(%rax)
   12148:	00 00 00 00 
   1214c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12150:	48 c7 80 40 0e 00 00 	movq   $0x0,0xe40(%rax)
   12157:	00 00 00 00 
   1215b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1215f:	48 c7 80 48 0e 00 00 	movq   $0x0,0xe48(%rax)
   12166:	00 00 00 00 
   1216a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216e:	48 c7 80 50 0e 00 00 	movq   $0x0,0xe50(%rax)
   12175:	00 00 00 00 
   12179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1217d:	48 c7 80 58 0e 00 00 	movq   $0x0,0xe58(%rax)
   12184:	00 00 00 00 
   12188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1218c:	48 c7 80 60 0e 00 00 	movq   $0x0,0xe60(%rax)
   12193:	00 00 00 00 
   12197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1219b:	48 c7 80 68 0e 00 00 	movq   $0x0,0xe68(%rax)
   121a2:	00 00 00 00 
   121a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121aa:	48 c7 80 70 0e 00 00 	movq   $0x0,0xe70(%rax)
   121b1:	00 00 00 00 
   121b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b9:	48 c7 80 78 0e 00 00 	movq   $0x0,0xe78(%rax)
   121c0:	00 00 00 00 
   121c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121c8:	48 c7 80 80 0e 00 00 	movq   $0x0,0xe80(%rax)
   121cf:	00 00 00 00 
   121d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121d7:	48 c7 80 88 0e 00 00 	movq   $0x0,0xe88(%rax)
   121de:	00 00 00 00 
   121e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121e6:	48 c7 80 90 0e 00 00 	movq   $0x0,0xe90(%rax)
   121ed:	00 00 00 00 
   121f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121f5:	48 c7 80 98 0e 00 00 	movq   $0x0,0xe98(%rax)
   121fc:	00 00 00 00 
   12200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12204:	48 c7 80 a0 0e 00 00 	movq   $0x0,0xea0(%rax)
   1220b:	00 00 00 00 
   1220f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12213:	48 c7 80 a8 0e 00 00 	movq   $0x0,0xea8(%rax)
   1221a:	00 00 00 00 
   1221e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12222:	48 c7 80 b0 0e 00 00 	movq   $0x0,0xeb0(%rax)
   12229:	00 00 00 00 
   1222d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12231:	48 c7 80 b8 0e 00 00 	movq   $0x0,0xeb8(%rax)
   12238:	00 00 00 00 
   1223c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12240:	48 c7 80 c0 0e 00 00 	movq   $0x0,0xec0(%rax)
   12247:	00 00 00 00 
   1224b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1224f:	48 c7 80 c8 0e 00 00 	movq   $0x0,0xec8(%rax)
   12256:	00 00 00 00 
   1225a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1225e:	48 c7 80 d0 0e 00 00 	movq   $0x0,0xed0(%rax)
   12265:	00 00 00 00 
   12269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1226d:	48 c7 80 d8 0e 00 00 	movq   $0x0,0xed8(%rax)
   12274:	00 00 00 00 
   12278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1227c:	48 c7 80 e0 0e 00 00 	movq   $0x0,0xee0(%rax)
   12283:	00 00 00 00 
   12287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1228b:	48 c7 80 e8 0e 00 00 	movq   $0x0,0xee8(%rax)
   12292:	00 00 00 00 
   12296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1229a:	48 c7 80 f0 0e 00 00 	movq   $0x0,0xef0(%rax)
   122a1:	00 00 00 00 
   122a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122a9:	48 c7 80 f8 0e 00 00 	movq   $0x0,0xef8(%rax)
   122b0:	00 00 00 00 
   122b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122b8:	48 c7 80 00 0f 00 00 	movq   $0x0,0xf00(%rax)
   122bf:	00 00 00 00 
   122c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122c7:	48 c7 80 08 0f 00 00 	movq   $0x0,0xf08(%rax)
   122ce:	00 00 00 00 
   122d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122d6:	48 c7 80 10 0f 00 00 	movq   $0x0,0xf10(%rax)
   122dd:	00 00 00 00 
   122e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122e5:	48 c7 80 18 0f 00 00 	movq   $0x0,0xf18(%rax)
   122ec:	00 00 00 00 
   122f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122f4:	48 c7 80 20 0f 00 00 	movq   $0x0,0xf20(%rax)
   122fb:	00 00 00 00 
   122ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12303:	48 c7 80 28 0f 00 00 	movq   $0x0,0xf28(%rax)
   1230a:	00 00 00 00 
   1230e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12312:	48 c7 80 30 0f 00 00 	movq   $0x0,0xf30(%rax)
   12319:	00 00 00 00 
   1231d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12321:	48 c7 80 38 0f 00 00 	movq   $0x0,0xf38(%rax)
   12328:	00 00 00 00 
   1232c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12330:	48 c7 80 40 0f 00 00 	movq   $0x0,0xf40(%rax)
   12337:	00 00 00 00 
   1233b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1233f:	48 c7 80 48 0f 00 00 	movq   $0x0,0xf48(%rax)
   12346:	00 00 00 00 
   1234a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1234e:	48 c7 80 50 0f 00 00 	movq   $0x0,0xf50(%rax)
   12355:	00 00 00 00 
   12359:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1235d:	48 c7 80 58 0f 00 00 	movq   $0x0,0xf58(%rax)
   12364:	00 00 00 00 
   12368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1236c:	48 c7 80 60 0f 00 00 	movq   $0x0,0xf60(%rax)
   12373:	00 00 00 00 
   12377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1237b:	48 c7 80 68 0f 00 00 	movq   $0x0,0xf68(%rax)
   12382:	00 00 00 00 
   12386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1238a:	48 c7 80 70 0f 00 00 	movq   $0x0,0xf70(%rax)
   12391:	00 00 00 00 
   12395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12399:	48 c7 80 78 0f 00 00 	movq   $0x0,0xf78(%rax)
   123a0:	00 00 00 00 
   123a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123a8:	48 c7 80 80 0f 00 00 	movq   $0x0,0xf80(%rax)
   123af:	00 00 00 00 
   123b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123b7:	48 c7 80 88 0f 00 00 	movq   $0x0,0xf88(%rax)
   123be:	00 00 00 00 
   123c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123c6:	48 c7 80 90 0f 00 00 	movq   $0x0,0xf90(%rax)
   123cd:	00 00 00 00 
   123d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123d5:	48 c7 80 98 0f 00 00 	movq   $0x0,0xf98(%rax)
   123dc:	00 00 00 00 
   123e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e4:	48 c7 80 a0 0f 00 00 	movq   $0x0,0xfa0(%rax)
   123eb:	00 00 00 00 
   123ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123f3:	48 c7 80 a8 0f 00 00 	movq   $0x0,0xfa8(%rax)
   123fa:	00 00 00 00 
   123fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12402:	48 c7 80 b0 0f 00 00 	movq   $0x0,0xfb0(%rax)
   12409:	00 00 00 00 
        vkGetDeviceProcAddr                = PFN_vkGetDeviceProcAddr( vkGetDeviceProcAddr( device, "vkGetDeviceProcAddr" ) );
   1240d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12411:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12415:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12419:	48 8d 0d 98 9f 01 00 	lea    0x19f98(%rip),%rcx        # 2c3b8 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
   12420:	48 89 ce             	mov    %rcx,%rsi
   12423:	48 89 c7             	mov    %rax,%rdi
   12426:	ff d2                	call   *%rdx
   12428:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1242c:	48 89 42 10          	mov    %rax,0x10(%rdx)
        vkDestroyDevice                    = PFN_vkDestroyDevice( vkGetDeviceProcAddr( device, "vkDestroyDevice" ) );
   12430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12434:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1243c:	48 8d 0d 89 9f 01 00 	lea    0x19f89(%rip),%rcx        # 2c3cc <_ZNSt8__detailL19__atomic_spin_countE+0x18>
   12443:	48 89 ce             	mov    %rcx,%rsi
   12446:	48 89 c7             	mov    %rax,%rdi
   12449:	ff d2                	call   *%rdx
   1244b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1244f:	48 89 42 18          	mov    %rax,0x18(%rdx)
        vkGetDeviceQueue                   = PFN_vkGetDeviceQueue( vkGetDeviceProcAddr( device, "vkGetDeviceQueue" ) );
   12453:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12457:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1245b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1245f:	48 8d 0d 76 9f 01 00 	lea    0x19f76(%rip),%rcx        # 2c3dc <_ZNSt8__detailL19__atomic_spin_countE+0x28>
   12466:	48 89 ce             	mov    %rcx,%rsi
   12469:	48 89 c7             	mov    %rax,%rdi
   1246c:	ff d2                	call   *%rdx
   1246e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12472:	48 89 42 20          	mov    %rax,0x20(%rdx)
        vkQueueSubmit                      = PFN_vkQueueSubmit( vkGetDeviceProcAddr( device, "vkQueueSubmit" ) );
   12476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1247a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1247e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12482:	48 8d 0d 64 9f 01 00 	lea    0x19f64(%rip),%rcx        # 2c3ed <_ZNSt8__detailL19__atomic_spin_countE+0x39>
   12489:	48 89 ce             	mov    %rcx,%rsi
   1248c:	48 89 c7             	mov    %rax,%rdi
   1248f:	ff d2                	call   *%rdx
   12491:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12495:	48 89 42 28          	mov    %rax,0x28(%rdx)
        vkQueueWaitIdle                    = PFN_vkQueueWaitIdle( vkGetDeviceProcAddr( device, "vkQueueWaitIdle" ) );
   12499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1249d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   124a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124a5:	48 8d 0d 4f 9f 01 00 	lea    0x19f4f(%rip),%rcx        # 2c3fb <_ZNSt8__detailL19__atomic_spin_countE+0x47>
   124ac:	48 89 ce             	mov    %rcx,%rsi
   124af:	48 89 c7             	mov    %rax,%rdi
   124b2:	ff d2                	call   *%rdx
   124b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   124b8:	48 89 42 30          	mov    %rax,0x30(%rdx)
        vkDeviceWaitIdle                   = PFN_vkDeviceWaitIdle( vkGetDeviceProcAddr( device, "vkDeviceWaitIdle" ) );
   124bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124c0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   124c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124c8:	48 8d 0d 3c 9f 01 00 	lea    0x19f3c(%rip),%rcx        # 2c40b <_ZNSt8__detailL19__atomic_spin_countE+0x57>
   124cf:	48 89 ce             	mov    %rcx,%rsi
   124d2:	48 89 c7             	mov    %rax,%rdi
   124d5:	ff d2                	call   *%rdx
   124d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   124db:	48 89 42 38          	mov    %rax,0x38(%rdx)
        vkAllocateMemory                   = PFN_vkAllocateMemory( vkGetDeviceProcAddr( device, "vkAllocateMemory" ) );
   124df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   124e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124eb:	48 8d 0d 2a 9f 01 00 	lea    0x19f2a(%rip),%rcx        # 2c41c <_ZNSt8__detailL19__atomic_spin_countE+0x68>
   124f2:	48 89 ce             	mov    %rcx,%rsi
   124f5:	48 89 c7             	mov    %rax,%rdi
   124f8:	ff d2                	call   *%rdx
   124fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   124fe:	48 89 42 40          	mov    %rax,0x40(%rdx)
        vkFreeMemory                       = PFN_vkFreeMemory( vkGetDeviceProcAddr( device, "vkFreeMemory" ) );
   12502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12506:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1250a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1250e:	48 8d 0d 18 9f 01 00 	lea    0x19f18(%rip),%rcx        # 2c42d <_ZNSt8__detailL19__atomic_spin_countE+0x79>
   12515:	48 89 ce             	mov    %rcx,%rsi
   12518:	48 89 c7             	mov    %rax,%rdi
   1251b:	ff d2                	call   *%rdx
   1251d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12521:	48 89 42 48          	mov    %rax,0x48(%rdx)
        vkMapMemory                        = PFN_vkMapMemory( vkGetDeviceProcAddr( device, "vkMapMemory" ) );
   12525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12529:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1252d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12531:	48 8d 0d 02 9f 01 00 	lea    0x19f02(%rip),%rcx        # 2c43a <_ZNSt8__detailL19__atomic_spin_countE+0x86>
   12538:	48 89 ce             	mov    %rcx,%rsi
   1253b:	48 89 c7             	mov    %rax,%rdi
   1253e:	ff d2                	call   *%rdx
   12540:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12544:	48 89 42 50          	mov    %rax,0x50(%rdx)
        vkUnmapMemory                      = PFN_vkUnmapMemory( vkGetDeviceProcAddr( device, "vkUnmapMemory" ) );
   12548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1254c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12550:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12554:	48 8d 0d eb 9e 01 00 	lea    0x19eeb(%rip),%rcx        # 2c446 <_ZNSt8__detailL19__atomic_spin_countE+0x92>
   1255b:	48 89 ce             	mov    %rcx,%rsi
   1255e:	48 89 c7             	mov    %rax,%rdi
   12561:	ff d2                	call   *%rdx
   12563:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12567:	48 89 42 58          	mov    %rax,0x58(%rdx)
        vkFlushMappedMemoryRanges          = PFN_vkFlushMappedMemoryRanges( vkGetDeviceProcAddr( device, "vkFlushMappedMemoryRanges" ) );
   1256b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1256f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12573:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12577:	48 8d 0d d6 9e 01 00 	lea    0x19ed6(%rip),%rcx        # 2c454 <_ZNSt8__detailL19__atomic_spin_countE+0xa0>
   1257e:	48 89 ce             	mov    %rcx,%rsi
   12581:	48 89 c7             	mov    %rax,%rdi
   12584:	ff d2                	call   *%rdx
   12586:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1258a:	48 89 42 60          	mov    %rax,0x60(%rdx)
        vkInvalidateMappedMemoryRanges     = PFN_vkInvalidateMappedMemoryRanges( vkGetDeviceProcAddr( device, "vkInvalidateMappedMemoryRanges" ) );
   1258e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12592:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12596:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1259a:	48 8d 0d cf 9e 01 00 	lea    0x19ecf(%rip),%rcx        # 2c470 <_ZNSt8__detailL19__atomic_spin_countE+0xbc>
   125a1:	48 89 ce             	mov    %rcx,%rsi
   125a4:	48 89 c7             	mov    %rax,%rdi
   125a7:	ff d2                	call   *%rdx
   125a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   125ad:	48 89 42 68          	mov    %rax,0x68(%rdx)
        vkGetDeviceMemoryCommitment        = PFN_vkGetDeviceMemoryCommitment( vkGetDeviceProcAddr( device, "vkGetDeviceMemoryCommitment" ) );
   125b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125b5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   125b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125bd:	48 8d 0d cb 9e 01 00 	lea    0x19ecb(%rip),%rcx        # 2c48f <_ZNSt8__detailL19__atomic_spin_countE+0xdb>
   125c4:	48 89 ce             	mov    %rcx,%rsi
   125c7:	48 89 c7             	mov    %rax,%rdi
   125ca:	ff d2                	call   *%rdx
   125cc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   125d0:	48 89 42 70          	mov    %rax,0x70(%rdx)
        vkBindBufferMemory                 = PFN_vkBindBufferMemory( vkGetDeviceProcAddr( device, "vkBindBufferMemory" ) );
   125d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125d8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   125dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125e0:	48 8d 0d c4 9e 01 00 	lea    0x19ec4(%rip),%rcx        # 2c4ab <_ZNSt8__detailL19__atomic_spin_countE+0xf7>
   125e7:	48 89 ce             	mov    %rcx,%rsi
   125ea:	48 89 c7             	mov    %rax,%rdi
   125ed:	ff d2                	call   *%rdx
   125ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   125f3:	48 89 42 78          	mov    %rax,0x78(%rdx)
        vkBindImageMemory                  = PFN_vkBindImageMemory( vkGetDeviceProcAddr( device, "vkBindImageMemory" ) );
   125f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125fb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   125ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12603:	48 8d 0d b4 9e 01 00 	lea    0x19eb4(%rip),%rcx        # 2c4be <_ZNSt8__detailL19__atomic_spin_countE+0x10a>
   1260a:	48 89 ce             	mov    %rcx,%rsi
   1260d:	48 89 c7             	mov    %rax,%rdi
   12610:	ff d2                	call   *%rdx
   12612:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12616:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
        vkGetBufferMemoryRequirements      = PFN_vkGetBufferMemoryRequirements( vkGetDeviceProcAddr( device, "vkGetBufferMemoryRequirements" ) );
   1261d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12621:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12625:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12629:	48 8d 0d a0 9e 01 00 	lea    0x19ea0(%rip),%rcx        # 2c4d0 <_ZNSt8__detailL19__atomic_spin_countE+0x11c>
   12630:	48 89 ce             	mov    %rcx,%rsi
   12633:	48 89 c7             	mov    %rax,%rdi
   12636:	ff d2                	call   *%rdx
   12638:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1263c:	48 89 82 88 00 00 00 	mov    %rax,0x88(%rdx)
        vkGetImageMemoryRequirements       = PFN_vkGetImageMemoryRequirements( vkGetDeviceProcAddr( device, "vkGetImageMemoryRequirements" ) );
   12643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12647:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1264b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1264f:	48 8d 0d 98 9e 01 00 	lea    0x19e98(%rip),%rcx        # 2c4ee <_ZNSt8__detailL19__atomic_spin_countE+0x13a>
   12656:	48 89 ce             	mov    %rcx,%rsi
   12659:	48 89 c7             	mov    %rax,%rdi
   1265c:	ff d2                	call   *%rdx
   1265e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12662:	48 89 82 90 00 00 00 	mov    %rax,0x90(%rdx)
        vkGetImageSparseMemoryRequirements = PFN_vkGetImageSparseMemoryRequirements( vkGetDeviceProcAddr( device, "vkGetImageSparseMemoryRequirements" ) );
   12669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1266d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12671:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12675:	48 8d 0d 94 9e 01 00 	lea    0x19e94(%rip),%rcx        # 2c510 <_ZNSt8__detailL19__atomic_spin_countE+0x15c>
   1267c:	48 89 ce             	mov    %rcx,%rsi
   1267f:	48 89 c7             	mov    %rax,%rdi
   12682:	ff d2                	call   *%rdx
   12684:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12688:	48 89 82 98 00 00 00 	mov    %rax,0x98(%rdx)
        vkQueueBindSparse                  = PFN_vkQueueBindSparse( vkGetDeviceProcAddr( device, "vkQueueBindSparse" ) );
   1268f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12693:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12697:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1269b:	48 8d 0d 91 9e 01 00 	lea    0x19e91(%rip),%rcx        # 2c533 <_ZNSt8__detailL19__atomic_spin_countE+0x17f>
   126a2:	48 89 ce             	mov    %rcx,%rsi
   126a5:	48 89 c7             	mov    %rax,%rdi
   126a8:	ff d2                	call   *%rdx
   126aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   126ae:	48 89 82 a0 00 00 00 	mov    %rax,0xa0(%rdx)
        vkCreateFence                      = PFN_vkCreateFence( vkGetDeviceProcAddr( device, "vkCreateFence" ) );
   126b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126b9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   126bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126c1:	48 8d 0d 7d 9e 01 00 	lea    0x19e7d(%rip),%rcx        # 2c545 <_ZNSt8__detailL19__atomic_spin_countE+0x191>
   126c8:	48 89 ce             	mov    %rcx,%rsi
   126cb:	48 89 c7             	mov    %rax,%rdi
   126ce:	ff d2                	call   *%rdx
   126d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   126d4:	48 89 82 a8 00 00 00 	mov    %rax,0xa8(%rdx)
        vkDestroyFence                     = PFN_vkDestroyFence( vkGetDeviceProcAddr( device, "vkDestroyFence" ) );
   126db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126df:	48 8b 50 10          	mov    0x10(%rax),%rdx
   126e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126e7:	48 8d 0d 65 9e 01 00 	lea    0x19e65(%rip),%rcx        # 2c553 <_ZNSt8__detailL19__atomic_spin_countE+0x19f>
   126ee:	48 89 ce             	mov    %rcx,%rsi
   126f1:	48 89 c7             	mov    %rax,%rdi
   126f4:	ff d2                	call   *%rdx
   126f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   126fa:	48 89 82 b0 00 00 00 	mov    %rax,0xb0(%rdx)
        vkResetFences                      = PFN_vkResetFences( vkGetDeviceProcAddr( device, "vkResetFences" ) );
   12701:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12705:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12709:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1270d:	48 8d 0d 4e 9e 01 00 	lea    0x19e4e(%rip),%rcx        # 2c562 <_ZNSt8__detailL19__atomic_spin_countE+0x1ae>
   12714:	48 89 ce             	mov    %rcx,%rsi
   12717:	48 89 c7             	mov    %rax,%rdi
   1271a:	ff d2                	call   *%rdx
   1271c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12720:	48 89 82 b8 00 00 00 	mov    %rax,0xb8(%rdx)
        vkGetFenceStatus                   = PFN_vkGetFenceStatus( vkGetDeviceProcAddr( device, "vkGetFenceStatus" ) );
   12727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1272b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1272f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12733:	48 8d 0d 36 9e 01 00 	lea    0x19e36(%rip),%rcx        # 2c570 <_ZNSt8__detailL19__atomic_spin_countE+0x1bc>
   1273a:	48 89 ce             	mov    %rcx,%rsi
   1273d:	48 89 c7             	mov    %rax,%rdi
   12740:	ff d2                	call   *%rdx
   12742:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12746:	48 89 82 c0 00 00 00 	mov    %rax,0xc0(%rdx)
        vkWaitForFences                    = PFN_vkWaitForFences( vkGetDeviceProcAddr( device, "vkWaitForFences" ) );
   1274d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12751:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12755:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12759:	48 8d 0d 21 9e 01 00 	lea    0x19e21(%rip),%rcx        # 2c581 <_ZNSt8__detailL19__atomic_spin_countE+0x1cd>
   12760:	48 89 ce             	mov    %rcx,%rsi
   12763:	48 89 c7             	mov    %rax,%rdi
   12766:	ff d2                	call   *%rdx
   12768:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1276c:	48 89 82 c8 00 00 00 	mov    %rax,0xc8(%rdx)
        vkCreateSemaphore                  = PFN_vkCreateSemaphore( vkGetDeviceProcAddr( device, "vkCreateSemaphore" ) );
   12773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12777:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1277b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1277f:	48 8d 0d 0b 9e 01 00 	lea    0x19e0b(%rip),%rcx        # 2c591 <_ZNSt8__detailL19__atomic_spin_countE+0x1dd>
   12786:	48 89 ce             	mov    %rcx,%rsi
   12789:	48 89 c7             	mov    %rax,%rdi
   1278c:	ff d2                	call   *%rdx
   1278e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12792:	48 89 82 d0 00 00 00 	mov    %rax,0xd0(%rdx)
        vkDestroySemaphore                 = PFN_vkDestroySemaphore( vkGetDeviceProcAddr( device, "vkDestroySemaphore" ) );
   12799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1279d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   127a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127a5:	48 8d 0d f7 9d 01 00 	lea    0x19df7(%rip),%rcx        # 2c5a3 <_ZNSt8__detailL19__atomic_spin_countE+0x1ef>
   127ac:	48 89 ce             	mov    %rcx,%rsi
   127af:	48 89 c7             	mov    %rax,%rdi
   127b2:	ff d2                	call   *%rdx
   127b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   127b8:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)
        vkCreateEvent                      = PFN_vkCreateEvent( vkGetDeviceProcAddr( device, "vkCreateEvent" ) );
   127bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127c3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   127c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127cb:	48 8d 0d e4 9d 01 00 	lea    0x19de4(%rip),%rcx        # 2c5b6 <_ZNSt8__detailL19__atomic_spin_countE+0x202>
   127d2:	48 89 ce             	mov    %rcx,%rsi
   127d5:	48 89 c7             	mov    %rax,%rdi
   127d8:	ff d2                	call   *%rdx
   127da:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   127de:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)
        vkDestroyEvent                     = PFN_vkDestroyEvent( vkGetDeviceProcAddr( device, "vkDestroyEvent" ) );
   127e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127e9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   127ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127f1:	48 8d 0d cc 9d 01 00 	lea    0x19dcc(%rip),%rcx        # 2c5c4 <_ZNSt8__detailL19__atomic_spin_countE+0x210>
   127f8:	48 89 ce             	mov    %rcx,%rsi
   127fb:	48 89 c7             	mov    %rax,%rdi
   127fe:	ff d2                	call   *%rdx
   12800:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12804:	48 89 82 e8 00 00 00 	mov    %rax,0xe8(%rdx)
        vkGetEventStatus                   = PFN_vkGetEventStatus( vkGetDeviceProcAddr( device, "vkGetEventStatus" ) );
   1280b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1280f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12817:	48 8d 0d b5 9d 01 00 	lea    0x19db5(%rip),%rcx        # 2c5d3 <_ZNSt8__detailL19__atomic_spin_countE+0x21f>
   1281e:	48 89 ce             	mov    %rcx,%rsi
   12821:	48 89 c7             	mov    %rax,%rdi
   12824:	ff d2                	call   *%rdx
   12826:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1282a:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)
        vkSetEvent                         = PFN_vkSetEvent( vkGetDeviceProcAddr( device, "vkSetEvent" ) );
   12831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12835:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12839:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1283d:	48 8d 0d a0 9d 01 00 	lea    0x19da0(%rip),%rcx        # 2c5e4 <_ZNSt8__detailL19__atomic_spin_countE+0x230>
   12844:	48 89 ce             	mov    %rcx,%rsi
   12847:	48 89 c7             	mov    %rax,%rdi
   1284a:	ff d2                	call   *%rdx
   1284c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12850:	48 89 82 f8 00 00 00 	mov    %rax,0xf8(%rdx)
        vkResetEvent                       = PFN_vkResetEvent( vkGetDeviceProcAddr( device, "vkResetEvent" ) );
   12857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1285b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1285f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12863:	48 8d 0d 85 9d 01 00 	lea    0x19d85(%rip),%rcx        # 2c5ef <_ZNSt8__detailL19__atomic_spin_countE+0x23b>
   1286a:	48 89 ce             	mov    %rcx,%rsi
   1286d:	48 89 c7             	mov    %rax,%rdi
   12870:	ff d2                	call   *%rdx
   12872:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12876:	48 89 82 00 01 00 00 	mov    %rax,0x100(%rdx)
        vkCreateQueryPool                  = PFN_vkCreateQueryPool( vkGetDeviceProcAddr( device, "vkCreateQueryPool" ) );
   1287d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12881:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12885:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12889:	48 8d 0d 6c 9d 01 00 	lea    0x19d6c(%rip),%rcx        # 2c5fc <_ZNSt8__detailL19__atomic_spin_countE+0x248>
   12890:	48 89 ce             	mov    %rcx,%rsi
   12893:	48 89 c7             	mov    %rax,%rdi
   12896:	ff d2                	call   *%rdx
   12898:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1289c:	48 89 82 08 01 00 00 	mov    %rax,0x108(%rdx)
        vkDestroyQueryPool                 = PFN_vkDestroyQueryPool( vkGetDeviceProcAddr( device, "vkDestroyQueryPool" ) );
   128a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128a7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   128ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128af:	48 8d 0d 58 9d 01 00 	lea    0x19d58(%rip),%rcx        # 2c60e <_ZNSt8__detailL19__atomic_spin_countE+0x25a>
   128b6:	48 89 ce             	mov    %rcx,%rsi
   128b9:	48 89 c7             	mov    %rax,%rdi
   128bc:	ff d2                	call   *%rdx
   128be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   128c2:	48 89 82 10 01 00 00 	mov    %rax,0x110(%rdx)
        vkGetQueryPoolResults              = PFN_vkGetQueryPoolResults( vkGetDeviceProcAddr( device, "vkGetQueryPoolResults" ) );
   128c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128cd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   128d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128d5:	48 8d 0d 45 9d 01 00 	lea    0x19d45(%rip),%rcx        # 2c621 <_ZNSt8__detailL19__atomic_spin_countE+0x26d>
   128dc:	48 89 ce             	mov    %rcx,%rsi
   128df:	48 89 c7             	mov    %rax,%rdi
   128e2:	ff d2                	call   *%rdx
   128e4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   128e8:	48 89 82 18 01 00 00 	mov    %rax,0x118(%rdx)
        vkCreateBuffer                     = PFN_vkCreateBuffer( vkGetDeviceProcAddr( device, "vkCreateBuffer" ) );
   128ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   128f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128fb:	48 8d 0d 35 9d 01 00 	lea    0x19d35(%rip),%rcx        # 2c637 <_ZNSt8__detailL19__atomic_spin_countE+0x283>
   12902:	48 89 ce             	mov    %rcx,%rsi
   12905:	48 89 c7             	mov    %rax,%rdi
   12908:	ff d2                	call   *%rdx
   1290a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1290e:	48 89 82 20 01 00 00 	mov    %rax,0x120(%rdx)
        vkDestroyBuffer                    = PFN_vkDestroyBuffer( vkGetDeviceProcAddr( device, "vkDestroyBuffer" ) );
   12915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12919:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1291d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12921:	48 8d 0d 1e 9d 01 00 	lea    0x19d1e(%rip),%rcx        # 2c646 <_ZNSt8__detailL19__atomic_spin_countE+0x292>
   12928:	48 89 ce             	mov    %rcx,%rsi
   1292b:	48 89 c7             	mov    %rax,%rdi
   1292e:	ff d2                	call   *%rdx
   12930:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12934:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
        vkCreateBufferView                 = PFN_vkCreateBufferView( vkGetDeviceProcAddr( device, "vkCreateBufferView" ) );
   1293b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1293f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12947:	48 8d 0d 08 9d 01 00 	lea    0x19d08(%rip),%rcx        # 2c656 <_ZNSt8__detailL19__atomic_spin_countE+0x2a2>
   1294e:	48 89 ce             	mov    %rcx,%rsi
   12951:	48 89 c7             	mov    %rax,%rdi
   12954:	ff d2                	call   *%rdx
   12956:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1295a:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
        vkDestroyBufferView                = PFN_vkDestroyBufferView( vkGetDeviceProcAddr( device, "vkDestroyBufferView" ) );
   12961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12965:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12969:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1296d:	48 8d 0d f5 9c 01 00 	lea    0x19cf5(%rip),%rcx        # 2c669 <_ZNSt8__detailL19__atomic_spin_countE+0x2b5>
   12974:	48 89 ce             	mov    %rcx,%rsi
   12977:	48 89 c7             	mov    %rax,%rdi
   1297a:	ff d2                	call   *%rdx
   1297c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12980:	48 89 82 38 01 00 00 	mov    %rax,0x138(%rdx)
        vkCreateImage                      = PFN_vkCreateImage( vkGetDeviceProcAddr( device, "vkCreateImage" ) );
   12987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1298b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1298f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12993:	48 8d 0d e3 9c 01 00 	lea    0x19ce3(%rip),%rcx        # 2c67d <_ZNSt8__detailL19__atomic_spin_countE+0x2c9>
   1299a:	48 89 ce             	mov    %rcx,%rsi
   1299d:	48 89 c7             	mov    %rax,%rdi
   129a0:	ff d2                	call   *%rdx
   129a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   129a6:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
        vkDestroyImage                     = PFN_vkDestroyImage( vkGetDeviceProcAddr( device, "vkDestroyImage" ) );
   129ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   129b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129b9:	48 8d 0d cb 9c 01 00 	lea    0x19ccb(%rip),%rcx        # 2c68b <_ZNSt8__detailL19__atomic_spin_countE+0x2d7>
   129c0:	48 89 ce             	mov    %rcx,%rsi
   129c3:	48 89 c7             	mov    %rax,%rdi
   129c6:	ff d2                	call   *%rdx
   129c8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   129cc:	48 89 82 48 01 00 00 	mov    %rax,0x148(%rdx)
        vkGetImageSubresourceLayout        = PFN_vkGetImageSubresourceLayout( vkGetDeviceProcAddr( device, "vkGetImageSubresourceLayout" ) );
   129d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129d7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   129db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129df:	48 8d 0d b4 9c 01 00 	lea    0x19cb4(%rip),%rcx        # 2c69a <_ZNSt8__detailL19__atomic_spin_countE+0x2e6>
   129e6:	48 89 ce             	mov    %rcx,%rsi
   129e9:	48 89 c7             	mov    %rax,%rdi
   129ec:	ff d2                	call   *%rdx
   129ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   129f2:	48 89 82 50 01 00 00 	mov    %rax,0x150(%rdx)
        vkCreateImageView                  = PFN_vkCreateImageView( vkGetDeviceProcAddr( device, "vkCreateImageView" ) );
   129f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129fd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12a01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a05:	48 8d 0d aa 9c 01 00 	lea    0x19caa(%rip),%rcx        # 2c6b6 <_ZNSt8__detailL19__atomic_spin_countE+0x302>
   12a0c:	48 89 ce             	mov    %rcx,%rsi
   12a0f:	48 89 c7             	mov    %rax,%rdi
   12a12:	ff d2                	call   *%rdx
   12a14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12a18:	48 89 82 58 01 00 00 	mov    %rax,0x158(%rdx)
        vkDestroyImageView                 = PFN_vkDestroyImageView( vkGetDeviceProcAddr( device, "vkDestroyImageView" ) );
   12a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a23:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12a27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a2b:	48 8d 0d 96 9c 01 00 	lea    0x19c96(%rip),%rcx        # 2c6c8 <_ZNSt8__detailL19__atomic_spin_countE+0x314>
   12a32:	48 89 ce             	mov    %rcx,%rsi
   12a35:	48 89 c7             	mov    %rax,%rdi
   12a38:	ff d2                	call   *%rdx
   12a3a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12a3e:	48 89 82 60 01 00 00 	mov    %rax,0x160(%rdx)
        vkCreateShaderModule               = PFN_vkCreateShaderModule( vkGetDeviceProcAddr( device, "vkCreateShaderModule" ) );
   12a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a49:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12a4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a51:	48 8d 0d 83 9c 01 00 	lea    0x19c83(%rip),%rcx        # 2c6db <_ZNSt8__detailL19__atomic_spin_countE+0x327>
   12a58:	48 89 ce             	mov    %rcx,%rsi
   12a5b:	48 89 c7             	mov    %rax,%rdi
   12a5e:	ff d2                	call   *%rdx
   12a60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12a64:	48 89 82 68 01 00 00 	mov    %rax,0x168(%rdx)
        vkDestroyShaderModule              = PFN_vkDestroyShaderModule( vkGetDeviceProcAddr( device, "vkDestroyShaderModule" ) );
   12a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a6f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12a73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a77:	48 8d 0d 72 9c 01 00 	lea    0x19c72(%rip),%rcx        # 2c6f0 <_ZNSt8__detailL19__atomic_spin_countE+0x33c>
   12a7e:	48 89 ce             	mov    %rcx,%rsi
   12a81:	48 89 c7             	mov    %rax,%rdi
   12a84:	ff d2                	call   *%rdx
   12a86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12a8a:	48 89 82 70 01 00 00 	mov    %rax,0x170(%rdx)
        vkCreatePipelineCache              = PFN_vkCreatePipelineCache( vkGetDeviceProcAddr( device, "vkCreatePipelineCache" ) );
   12a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a95:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12a99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a9d:	48 8d 0d 62 9c 01 00 	lea    0x19c62(%rip),%rcx        # 2c706 <_ZNSt8__detailL19__atomic_spin_countE+0x352>
   12aa4:	48 89 ce             	mov    %rcx,%rsi
   12aa7:	48 89 c7             	mov    %rax,%rdi
   12aaa:	ff d2                	call   *%rdx
   12aac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12ab0:	48 89 82 78 01 00 00 	mov    %rax,0x178(%rdx)
        vkDestroyPipelineCache             = PFN_vkDestroyPipelineCache( vkGetDeviceProcAddr( device, "vkDestroyPipelineCache" ) );
   12ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12abb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12abf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ac3:	48 8d 0d 52 9c 01 00 	lea    0x19c52(%rip),%rcx        # 2c71c <_ZNSt8__detailL19__atomic_spin_countE+0x368>
   12aca:	48 89 ce             	mov    %rcx,%rsi
   12acd:	48 89 c7             	mov    %rax,%rdi
   12ad0:	ff d2                	call   *%rdx
   12ad2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12ad6:	48 89 82 80 01 00 00 	mov    %rax,0x180(%rdx)
        vkGetPipelineCacheData             = PFN_vkGetPipelineCacheData( vkGetDeviceProcAddr( device, "vkGetPipelineCacheData" ) );
   12add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ae1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12ae5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ae9:	48 8d 0d 43 9c 01 00 	lea    0x19c43(%rip),%rcx        # 2c733 <_ZNSt8__detailL19__atomic_spin_countE+0x37f>
   12af0:	48 89 ce             	mov    %rcx,%rsi
   12af3:	48 89 c7             	mov    %rax,%rdi
   12af6:	ff d2                	call   *%rdx
   12af8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12afc:	48 89 82 88 01 00 00 	mov    %rax,0x188(%rdx)
        vkMergePipelineCaches              = PFN_vkMergePipelineCaches( vkGetDeviceProcAddr( device, "vkMergePipelineCaches" ) );
   12b03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b07:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12b0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b0f:	48 8d 0d 34 9c 01 00 	lea    0x19c34(%rip),%rcx        # 2c74a <_ZNSt8__detailL19__atomic_spin_countE+0x396>
   12b16:	48 89 ce             	mov    %rcx,%rsi
   12b19:	48 89 c7             	mov    %rax,%rdi
   12b1c:	ff d2                	call   *%rdx
   12b1e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12b22:	48 89 82 90 01 00 00 	mov    %rax,0x190(%rdx)
        vkCreateGraphicsPipelines          = PFN_vkCreateGraphicsPipelines( vkGetDeviceProcAddr( device, "vkCreateGraphicsPipelines" ) );
   12b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b2d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12b31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b35:	48 8d 0d 24 9c 01 00 	lea    0x19c24(%rip),%rcx        # 2c760 <_ZNSt8__detailL19__atomic_spin_countE+0x3ac>
   12b3c:	48 89 ce             	mov    %rcx,%rsi
   12b3f:	48 89 c7             	mov    %rax,%rdi
   12b42:	ff d2                	call   *%rdx
   12b44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12b48:	48 89 82 98 01 00 00 	mov    %rax,0x198(%rdx)
        vkCreateComputePipelines           = PFN_vkCreateComputePipelines( vkGetDeviceProcAddr( device, "vkCreateComputePipelines" ) );
   12b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b53:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12b57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b5b:	48 8d 0d 18 9c 01 00 	lea    0x19c18(%rip),%rcx        # 2c77a <_ZNSt8__detailL19__atomic_spin_countE+0x3c6>
   12b62:	48 89 ce             	mov    %rcx,%rsi
   12b65:	48 89 c7             	mov    %rax,%rdi
   12b68:	ff d2                	call   *%rdx
   12b6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12b6e:	48 89 82 a0 01 00 00 	mov    %rax,0x1a0(%rdx)
        vkDestroyPipeline                  = PFN_vkDestroyPipeline( vkGetDeviceProcAddr( device, "vkDestroyPipeline" ) );
   12b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b79:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12b7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b81:	48 8d 0d 0b 9c 01 00 	lea    0x19c0b(%rip),%rcx        # 2c793 <_ZNSt8__detailL19__atomic_spin_countE+0x3df>
   12b88:	48 89 ce             	mov    %rcx,%rsi
   12b8b:	48 89 c7             	mov    %rax,%rdi
   12b8e:	ff d2                	call   *%rdx
   12b90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12b94:	48 89 82 a8 01 00 00 	mov    %rax,0x1a8(%rdx)
        vkCreatePipelineLayout             = PFN_vkCreatePipelineLayout( vkGetDeviceProcAddr( device, "vkCreatePipelineLayout" ) );
   12b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b9f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ba7:	48 8d 0d f7 9b 01 00 	lea    0x19bf7(%rip),%rcx        # 2c7a5 <_ZNSt8__detailL19__atomic_spin_countE+0x3f1>
   12bae:	48 89 ce             	mov    %rcx,%rsi
   12bb1:	48 89 c7             	mov    %rax,%rdi
   12bb4:	ff d2                	call   *%rdx
   12bb6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12bba:	48 89 82 b0 01 00 00 	mov    %rax,0x1b0(%rdx)
        vkDestroyPipelineLayout            = PFN_vkDestroyPipelineLayout( vkGetDeviceProcAddr( device, "vkDestroyPipelineLayout" ) );
   12bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bc5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12bc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bcd:	48 8d 0d e8 9b 01 00 	lea    0x19be8(%rip),%rcx        # 2c7bc <_ZNSt8__detailL19__atomic_spin_countE+0x408>
   12bd4:	48 89 ce             	mov    %rcx,%rsi
   12bd7:	48 89 c7             	mov    %rax,%rdi
   12bda:	ff d2                	call   *%rdx
   12bdc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12be0:	48 89 82 b8 01 00 00 	mov    %rax,0x1b8(%rdx)
        vkCreateSampler                    = PFN_vkCreateSampler( vkGetDeviceProcAddr( device, "vkCreateSampler" ) );
   12be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12beb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12bef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bf3:	48 8d 0d da 9b 01 00 	lea    0x19bda(%rip),%rcx        # 2c7d4 <_ZNSt8__detailL19__atomic_spin_countE+0x420>
   12bfa:	48 89 ce             	mov    %rcx,%rsi
   12bfd:	48 89 c7             	mov    %rax,%rdi
   12c00:	ff d2                	call   *%rdx
   12c02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c06:	48 89 82 c0 01 00 00 	mov    %rax,0x1c0(%rdx)
        vkDestroySampler                   = PFN_vkDestroySampler( vkGetDeviceProcAddr( device, "vkDestroySampler" ) );
   12c0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c11:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12c15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c19:	48 8d 0d c4 9b 01 00 	lea    0x19bc4(%rip),%rcx        # 2c7e4 <_ZNSt8__detailL19__atomic_spin_countE+0x430>
   12c20:	48 89 ce             	mov    %rcx,%rsi
   12c23:	48 89 c7             	mov    %rax,%rdi
   12c26:	ff d2                	call   *%rdx
   12c28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c2c:	48 89 82 c8 01 00 00 	mov    %rax,0x1c8(%rdx)
        vkCreateDescriptorSetLayout        = PFN_vkCreateDescriptorSetLayout( vkGetDeviceProcAddr( device, "vkCreateDescriptorSetLayout" ) );
   12c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c37:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12c3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c3f:	48 8d 0d af 9b 01 00 	lea    0x19baf(%rip),%rcx        # 2c7f5 <_ZNSt8__detailL19__atomic_spin_countE+0x441>
   12c46:	48 89 ce             	mov    %rcx,%rsi
   12c49:	48 89 c7             	mov    %rax,%rdi
   12c4c:	ff d2                	call   *%rdx
   12c4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c52:	48 89 82 d0 01 00 00 	mov    %rax,0x1d0(%rdx)
        vkDestroyDescriptorSetLayout       = PFN_vkDestroyDescriptorSetLayout( vkGetDeviceProcAddr( device, "vkDestroyDescriptorSetLayout" ) );
   12c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c5d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12c61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c65:	48 8d 0d a5 9b 01 00 	lea    0x19ba5(%rip),%rcx        # 2c811 <_ZNSt8__detailL19__atomic_spin_countE+0x45d>
   12c6c:	48 89 ce             	mov    %rcx,%rsi
   12c6f:	48 89 c7             	mov    %rax,%rdi
   12c72:	ff d2                	call   *%rdx
   12c74:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c78:	48 89 82 d8 01 00 00 	mov    %rax,0x1d8(%rdx)
        vkCreateDescriptorPool             = PFN_vkCreateDescriptorPool( vkGetDeviceProcAddr( device, "vkCreateDescriptorPool" ) );
   12c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c83:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c8b:	48 8d 0d 9c 9b 01 00 	lea    0x19b9c(%rip),%rcx        # 2c82e <_ZNSt8__detailL19__atomic_spin_countE+0x47a>
   12c92:	48 89 ce             	mov    %rcx,%rsi
   12c95:	48 89 c7             	mov    %rax,%rdi
   12c98:	ff d2                	call   *%rdx
   12c9a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c9e:	48 89 82 e0 01 00 00 	mov    %rax,0x1e0(%rdx)
        vkDestroyDescriptorPool            = PFN_vkDestroyDescriptorPool( vkGetDeviceProcAddr( device, "vkDestroyDescriptorPool" ) );
   12ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ca9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12cad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cb1:	48 8d 0d 8d 9b 01 00 	lea    0x19b8d(%rip),%rcx        # 2c845 <_ZNSt8__detailL19__atomic_spin_countE+0x491>
   12cb8:	48 89 ce             	mov    %rcx,%rsi
   12cbb:	48 89 c7             	mov    %rax,%rdi
   12cbe:	ff d2                	call   *%rdx
   12cc0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12cc4:	48 89 82 e8 01 00 00 	mov    %rax,0x1e8(%rdx)
        vkResetDescriptorPool              = PFN_vkResetDescriptorPool( vkGetDeviceProcAddr( device, "vkResetDescriptorPool" ) );
   12ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ccf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12cd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cd7:	48 8d 0d 7f 9b 01 00 	lea    0x19b7f(%rip),%rcx        # 2c85d <_ZNSt8__detailL19__atomic_spin_countE+0x4a9>
   12cde:	48 89 ce             	mov    %rcx,%rsi
   12ce1:	48 89 c7             	mov    %rax,%rdi
   12ce4:	ff d2                	call   *%rdx
   12ce6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12cea:	48 89 82 f0 01 00 00 	mov    %rax,0x1f0(%rdx)
        vkAllocateDescriptorSets           = PFN_vkAllocateDescriptorSets( vkGetDeviceProcAddr( device, "vkAllocateDescriptorSets" ) );
   12cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cf5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12cf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cfd:	48 8d 0d 6f 9b 01 00 	lea    0x19b6f(%rip),%rcx        # 2c873 <_ZNSt8__detailL19__atomic_spin_countE+0x4bf>
   12d04:	48 89 ce             	mov    %rcx,%rsi
   12d07:	48 89 c7             	mov    %rax,%rdi
   12d0a:	ff d2                	call   *%rdx
   12d0c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d10:	48 89 82 f8 01 00 00 	mov    %rax,0x1f8(%rdx)
        vkFreeDescriptorSets               = PFN_vkFreeDescriptorSets( vkGetDeviceProcAddr( device, "vkFreeDescriptorSets" ) );
   12d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d1b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12d1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d23:	48 8d 0d 62 9b 01 00 	lea    0x19b62(%rip),%rcx        # 2c88c <_ZNSt8__detailL19__atomic_spin_countE+0x4d8>
   12d2a:	48 89 ce             	mov    %rcx,%rsi
   12d2d:	48 89 c7             	mov    %rax,%rdi
   12d30:	ff d2                	call   *%rdx
   12d32:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d36:	48 89 82 00 02 00 00 	mov    %rax,0x200(%rdx)
        vkUpdateDescriptorSets             = PFN_vkUpdateDescriptorSets( vkGetDeviceProcAddr( device, "vkUpdateDescriptorSets" ) );
   12d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d41:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12d45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d49:	48 8d 0d 51 9b 01 00 	lea    0x19b51(%rip),%rcx        # 2c8a1 <_ZNSt8__detailL19__atomic_spin_countE+0x4ed>
   12d50:	48 89 ce             	mov    %rcx,%rsi
   12d53:	48 89 c7             	mov    %rax,%rdi
   12d56:	ff d2                	call   *%rdx
   12d58:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d5c:	48 89 82 08 02 00 00 	mov    %rax,0x208(%rdx)
        vkCreateFramebuffer                = PFN_vkCreateFramebuffer( vkGetDeviceProcAddr( device, "vkCreateFramebuffer" ) );
   12d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d67:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12d6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d6f:	48 8d 0d 42 9b 01 00 	lea    0x19b42(%rip),%rcx        # 2c8b8 <_ZNSt8__detailL19__atomic_spin_countE+0x504>
   12d76:	48 89 ce             	mov    %rcx,%rsi
   12d79:	48 89 c7             	mov    %rax,%rdi
   12d7c:	ff d2                	call   *%rdx
   12d7e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d82:	48 89 82 10 02 00 00 	mov    %rax,0x210(%rdx)
        vkDestroyFramebuffer               = PFN_vkDestroyFramebuffer( vkGetDeviceProcAddr( device, "vkDestroyFramebuffer" ) );
   12d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d8d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12d91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d95:	48 8d 0d 30 9b 01 00 	lea    0x19b30(%rip),%rcx        # 2c8cc <_ZNSt8__detailL19__atomic_spin_countE+0x518>
   12d9c:	48 89 ce             	mov    %rcx,%rsi
   12d9f:	48 89 c7             	mov    %rax,%rdi
   12da2:	ff d2                	call   *%rdx
   12da4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12da8:	48 89 82 18 02 00 00 	mov    %rax,0x218(%rdx)
        vkCreateRenderPass                 = PFN_vkCreateRenderPass( vkGetDeviceProcAddr( device, "vkCreateRenderPass" ) );
   12daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12db3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12dbb:	48 8d 0d 1f 9b 01 00 	lea    0x19b1f(%rip),%rcx        # 2c8e1 <_ZNSt8__detailL19__atomic_spin_countE+0x52d>
   12dc2:	48 89 ce             	mov    %rcx,%rsi
   12dc5:	48 89 c7             	mov    %rax,%rdi
   12dc8:	ff d2                	call   *%rdx
   12dca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12dce:	48 89 82 20 02 00 00 	mov    %rax,0x220(%rdx)
        vkDestroyRenderPass                = PFN_vkDestroyRenderPass( vkGetDeviceProcAddr( device, "vkDestroyRenderPass" ) );
   12dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dd9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12ddd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12de1:	48 8d 0d 0c 9b 01 00 	lea    0x19b0c(%rip),%rcx        # 2c8f4 <_ZNSt8__detailL19__atomic_spin_countE+0x540>
   12de8:	48 89 ce             	mov    %rcx,%rsi
   12deb:	48 89 c7             	mov    %rax,%rdi
   12dee:	ff d2                	call   *%rdx
   12df0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12df4:	48 89 82 28 02 00 00 	mov    %rax,0x228(%rdx)
        vkGetRenderAreaGranularity         = PFN_vkGetRenderAreaGranularity( vkGetDeviceProcAddr( device, "vkGetRenderAreaGranularity" ) );
   12dfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dff:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e07:	48 8d 0d fa 9a 01 00 	lea    0x19afa(%rip),%rcx        # 2c908 <_ZNSt8__detailL19__atomic_spin_countE+0x554>
   12e0e:	48 89 ce             	mov    %rcx,%rsi
   12e11:	48 89 c7             	mov    %rax,%rdi
   12e14:	ff d2                	call   *%rdx
   12e16:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e1a:	48 89 82 30 02 00 00 	mov    %rax,0x230(%rdx)
        vkCreateCommandPool                = PFN_vkCreateCommandPool( vkGetDeviceProcAddr( device, "vkCreateCommandPool" ) );
   12e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e25:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e2d:	48 8d 0d ef 9a 01 00 	lea    0x19aef(%rip),%rcx        # 2c923 <_ZNSt8__detailL19__atomic_spin_countE+0x56f>
   12e34:	48 89 ce             	mov    %rcx,%rsi
   12e37:	48 89 c7             	mov    %rax,%rdi
   12e3a:	ff d2                	call   *%rdx
   12e3c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e40:	48 89 82 38 02 00 00 	mov    %rax,0x238(%rdx)
        vkDestroyCommandPool               = PFN_vkDestroyCommandPool( vkGetDeviceProcAddr( device, "vkDestroyCommandPool" ) );
   12e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e4b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e53:	48 8d 0d dd 9a 01 00 	lea    0x19add(%rip),%rcx        # 2c937 <_ZNSt8__detailL19__atomic_spin_countE+0x583>
   12e5a:	48 89 ce             	mov    %rcx,%rsi
   12e5d:	48 89 c7             	mov    %rax,%rdi
   12e60:	ff d2                	call   *%rdx
   12e62:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e66:	48 89 82 40 02 00 00 	mov    %rax,0x240(%rdx)
        vkResetCommandPool                 = PFN_vkResetCommandPool( vkGetDeviceProcAddr( device, "vkResetCommandPool" ) );
   12e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e71:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e79:	48 8d 0d cc 9a 01 00 	lea    0x19acc(%rip),%rcx        # 2c94c <_ZNSt8__detailL19__atomic_spin_countE+0x598>
   12e80:	48 89 ce             	mov    %rcx,%rsi
   12e83:	48 89 c7             	mov    %rax,%rdi
   12e86:	ff d2                	call   *%rdx
   12e88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12e8c:	48 89 82 48 02 00 00 	mov    %rax,0x248(%rdx)
        vkAllocateCommandBuffers           = PFN_vkAllocateCommandBuffers( vkGetDeviceProcAddr( device, "vkAllocateCommandBuffers" ) );
   12e93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e97:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12e9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e9f:	48 8d 0d b9 9a 01 00 	lea    0x19ab9(%rip),%rcx        # 2c95f <_ZNSt8__detailL19__atomic_spin_countE+0x5ab>
   12ea6:	48 89 ce             	mov    %rcx,%rsi
   12ea9:	48 89 c7             	mov    %rax,%rdi
   12eac:	ff d2                	call   *%rdx
   12eae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12eb2:	48 89 82 50 02 00 00 	mov    %rax,0x250(%rdx)
        vkFreeCommandBuffers               = PFN_vkFreeCommandBuffers( vkGetDeviceProcAddr( device, "vkFreeCommandBuffers" ) );
   12eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ebd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12ec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ec5:	48 8d 0d ac 9a 01 00 	lea    0x19aac(%rip),%rcx        # 2c978 <_ZNSt8__detailL19__atomic_spin_countE+0x5c4>
   12ecc:	48 89 ce             	mov    %rcx,%rsi
   12ecf:	48 89 c7             	mov    %rax,%rdi
   12ed2:	ff d2                	call   *%rdx
   12ed4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12ed8:	48 89 82 58 02 00 00 	mov    %rax,0x258(%rdx)
        vkBeginCommandBuffer               = PFN_vkBeginCommandBuffer( vkGetDeviceProcAddr( device, "vkBeginCommandBuffer" ) );
   12edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ee3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12ee7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12eeb:	48 8d 0d 9b 9a 01 00 	lea    0x19a9b(%rip),%rcx        # 2c98d <_ZNSt8__detailL19__atomic_spin_countE+0x5d9>
   12ef2:	48 89 ce             	mov    %rcx,%rsi
   12ef5:	48 89 c7             	mov    %rax,%rdi
   12ef8:	ff d2                	call   *%rdx
   12efa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12efe:	48 89 82 60 02 00 00 	mov    %rax,0x260(%rdx)
        vkEndCommandBuffer                 = PFN_vkEndCommandBuffer( vkGetDeviceProcAddr( device, "vkEndCommandBuffer" ) );
   12f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f09:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f11:	48 8d 0d 8a 9a 01 00 	lea    0x19a8a(%rip),%rcx        # 2c9a2 <_ZNSt8__detailL19__atomic_spin_countE+0x5ee>
   12f18:	48 89 ce             	mov    %rcx,%rsi
   12f1b:	48 89 c7             	mov    %rax,%rdi
   12f1e:	ff d2                	call   *%rdx
   12f20:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f24:	48 89 82 68 02 00 00 	mov    %rax,0x268(%rdx)
        vkResetCommandBuffer               = PFN_vkResetCommandBuffer( vkGetDeviceProcAddr( device, "vkResetCommandBuffer" ) );
   12f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f2f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f37:	48 8d 0d 77 9a 01 00 	lea    0x19a77(%rip),%rcx        # 2c9b5 <_ZNSt8__detailL19__atomic_spin_countE+0x601>
   12f3e:	48 89 ce             	mov    %rcx,%rsi
   12f41:	48 89 c7             	mov    %rax,%rdi
   12f44:	ff d2                	call   *%rdx
   12f46:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f4a:	48 89 82 70 02 00 00 	mov    %rax,0x270(%rdx)
        vkCmdBindPipeline                  = PFN_vkCmdBindPipeline( vkGetDeviceProcAddr( device, "vkCmdBindPipeline" ) );
   12f51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f55:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f5d:	48 8d 0d 66 9a 01 00 	lea    0x19a66(%rip),%rcx        # 2c9ca <_ZNSt8__detailL19__atomic_spin_countE+0x616>
   12f64:	48 89 ce             	mov    %rcx,%rsi
   12f67:	48 89 c7             	mov    %rax,%rdi
   12f6a:	ff d2                	call   *%rdx
   12f6c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f70:	48 89 82 78 02 00 00 	mov    %rax,0x278(%rdx)
        vkCmdSetViewport                   = PFN_vkCmdSetViewport( vkGetDeviceProcAddr( device, "vkCmdSetViewport" ) );
   12f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f7b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12f7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f83:	48 8d 0d 52 9a 01 00 	lea    0x19a52(%rip),%rcx        # 2c9dc <_ZNSt8__detailL19__atomic_spin_countE+0x628>
   12f8a:	48 89 ce             	mov    %rcx,%rsi
   12f8d:	48 89 c7             	mov    %rax,%rdi
   12f90:	ff d2                	call   *%rdx
   12f92:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12f96:	48 89 82 80 02 00 00 	mov    %rax,0x280(%rdx)
        vkCmdSetScissor                    = PFN_vkCmdSetScissor( vkGetDeviceProcAddr( device, "vkCmdSetScissor" ) );
   12f9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fa1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12fa5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fa9:	48 8d 0d 3d 9a 01 00 	lea    0x19a3d(%rip),%rcx        # 2c9ed <_ZNSt8__detailL19__atomic_spin_countE+0x639>
   12fb0:	48 89 ce             	mov    %rcx,%rsi
   12fb3:	48 89 c7             	mov    %rax,%rdi
   12fb6:	ff d2                	call   *%rdx
   12fb8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12fbc:	48 89 82 88 02 00 00 	mov    %rax,0x288(%rdx)
        vkCmdSetLineWidth                  = PFN_vkCmdSetLineWidth( vkGetDeviceProcAddr( device, "vkCmdSetLineWidth" ) );
   12fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fc7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12fcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12fcf:	48 8d 0d 27 9a 01 00 	lea    0x19a27(%rip),%rcx        # 2c9fd <_ZNSt8__detailL19__atomic_spin_countE+0x649>
   12fd6:	48 89 ce             	mov    %rcx,%rsi
   12fd9:	48 89 c7             	mov    %rax,%rdi
   12fdc:	ff d2                	call   *%rdx
   12fde:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12fe2:	48 89 82 90 02 00 00 	mov    %rax,0x290(%rdx)
        vkCmdSetDepthBias                  = PFN_vkCmdSetDepthBias( vkGetDeviceProcAddr( device, "vkCmdSetDepthBias" ) );
   12fe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fed:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12ff1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ff5:	48 8d 0d 13 9a 01 00 	lea    0x19a13(%rip),%rcx        # 2ca0f <_ZNSt8__detailL19__atomic_spin_countE+0x65b>
   12ffc:	48 89 ce             	mov    %rcx,%rsi
   12fff:	48 89 c7             	mov    %rax,%rdi
   13002:	ff d2                	call   *%rdx
   13004:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13008:	48 89 82 98 02 00 00 	mov    %rax,0x298(%rdx)
        vkCmdSetBlendConstants             = PFN_vkCmdSetBlendConstants( vkGetDeviceProcAddr( device, "vkCmdSetBlendConstants" ) );
   1300f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13013:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1301b:	48 8d 0d ff 99 01 00 	lea    0x199ff(%rip),%rcx        # 2ca21 <_ZNSt8__detailL19__atomic_spin_countE+0x66d>
   13022:	48 89 ce             	mov    %rcx,%rsi
   13025:	48 89 c7             	mov    %rax,%rdi
   13028:	ff d2                	call   *%rdx
   1302a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1302e:	48 89 82 a0 02 00 00 	mov    %rax,0x2a0(%rdx)
        vkCmdSetDepthBounds                = PFN_vkCmdSetDepthBounds( vkGetDeviceProcAddr( device, "vkCmdSetDepthBounds" ) );
   13035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13039:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1303d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13041:	48 8d 0d f0 99 01 00 	lea    0x199f0(%rip),%rcx        # 2ca38 <_ZNSt8__detailL19__atomic_spin_countE+0x684>
   13048:	48 89 ce             	mov    %rcx,%rsi
   1304b:	48 89 c7             	mov    %rax,%rdi
   1304e:	ff d2                	call   *%rdx
   13050:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13054:	48 89 82 a8 02 00 00 	mov    %rax,0x2a8(%rdx)
        vkCmdSetStencilCompareMask         = PFN_vkCmdSetStencilCompareMask( vkGetDeviceProcAddr( device, "vkCmdSetStencilCompareMask" ) );
   1305b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1305f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13067:	48 8d 0d de 99 01 00 	lea    0x199de(%rip),%rcx        # 2ca4c <_ZNSt8__detailL19__atomic_spin_countE+0x698>
   1306e:	48 89 ce             	mov    %rcx,%rsi
   13071:	48 89 c7             	mov    %rax,%rdi
   13074:	ff d2                	call   *%rdx
   13076:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1307a:	48 89 82 b0 02 00 00 	mov    %rax,0x2b0(%rdx)
        vkCmdSetStencilWriteMask           = PFN_vkCmdSetStencilWriteMask( vkGetDeviceProcAddr( device, "vkCmdSetStencilWriteMask" ) );
   13081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13085:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13089:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1308d:	48 8d 0d d3 99 01 00 	lea    0x199d3(%rip),%rcx        # 2ca67 <_ZNSt8__detailL19__atomic_spin_countE+0x6b3>
   13094:	48 89 ce             	mov    %rcx,%rsi
   13097:	48 89 c7             	mov    %rax,%rdi
   1309a:	ff d2                	call   *%rdx
   1309c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   130a0:	48 89 82 b8 02 00 00 	mov    %rax,0x2b8(%rdx)
        vkCmdSetStencilReference           = PFN_vkCmdSetStencilReference( vkGetDeviceProcAddr( device, "vkCmdSetStencilReference" ) );
   130a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130ab:	48 8b 50 10          	mov    0x10(%rax),%rdx
   130af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130b3:	48 8d 0d c6 99 01 00 	lea    0x199c6(%rip),%rcx        # 2ca80 <_ZNSt8__detailL19__atomic_spin_countE+0x6cc>
   130ba:	48 89 ce             	mov    %rcx,%rsi
   130bd:	48 89 c7             	mov    %rax,%rdi
   130c0:	ff d2                	call   *%rdx
   130c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   130c6:	48 89 82 c0 02 00 00 	mov    %rax,0x2c0(%rdx)
        vkCmdBindDescriptorSets            = PFN_vkCmdBindDescriptorSets( vkGetDeviceProcAddr( device, "vkCmdBindDescriptorSets" ) );
   130cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130d1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   130d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130d9:	48 8d 0d b9 99 01 00 	lea    0x199b9(%rip),%rcx        # 2ca99 <_ZNSt8__detailL19__atomic_spin_countE+0x6e5>
   130e0:	48 89 ce             	mov    %rcx,%rsi
   130e3:	48 89 c7             	mov    %rax,%rdi
   130e6:	ff d2                	call   *%rdx
   130e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   130ec:	48 89 82 c8 02 00 00 	mov    %rax,0x2c8(%rdx)
        vkCmdBindIndexBuffer               = PFN_vkCmdBindIndexBuffer( vkGetDeviceProcAddr( device, "vkCmdBindIndexBuffer" ) );
   130f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130f7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   130fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130ff:	48 8d 0d ab 99 01 00 	lea    0x199ab(%rip),%rcx        # 2cab1 <_ZNSt8__detailL19__atomic_spin_countE+0x6fd>
   13106:	48 89 ce             	mov    %rcx,%rsi
   13109:	48 89 c7             	mov    %rax,%rdi
   1310c:	ff d2                	call   *%rdx
   1310e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13112:	48 89 82 d0 02 00 00 	mov    %rax,0x2d0(%rdx)
        vkCmdBindVertexBuffers             = PFN_vkCmdBindVertexBuffers( vkGetDeviceProcAddr( device, "vkCmdBindVertexBuffers" ) );
   13119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1311d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13121:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13125:	48 8d 0d 9a 99 01 00 	lea    0x1999a(%rip),%rcx        # 2cac6 <_ZNSt8__detailL19__atomic_spin_countE+0x712>
   1312c:	48 89 ce             	mov    %rcx,%rsi
   1312f:	48 89 c7             	mov    %rax,%rdi
   13132:	ff d2                	call   *%rdx
   13134:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13138:	48 89 82 d8 02 00 00 	mov    %rax,0x2d8(%rdx)
        vkCmdDraw                          = PFN_vkCmdDraw( vkGetDeviceProcAddr( device, "vkCmdDraw" ) );
   1313f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13143:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1314b:	48 8d 0d 8b 99 01 00 	lea    0x1998b(%rip),%rcx        # 2cadd <_ZNSt8__detailL19__atomic_spin_countE+0x729>
   13152:	48 89 ce             	mov    %rcx,%rsi
   13155:	48 89 c7             	mov    %rax,%rdi
   13158:	ff d2                	call   *%rdx
   1315a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1315e:	48 89 82 e0 02 00 00 	mov    %rax,0x2e0(%rdx)
        vkCmdDrawIndexed                   = PFN_vkCmdDrawIndexed( vkGetDeviceProcAddr( device, "vkCmdDrawIndexed" ) );
   13165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13169:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1316d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13171:	48 8d 0d 6f 99 01 00 	lea    0x1996f(%rip),%rcx        # 2cae7 <_ZNSt8__detailL19__atomic_spin_countE+0x733>
   13178:	48 89 ce             	mov    %rcx,%rsi
   1317b:	48 89 c7             	mov    %rax,%rdi
   1317e:	ff d2                	call   *%rdx
   13180:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13184:	48 89 82 e8 02 00 00 	mov    %rax,0x2e8(%rdx)
        vkCmdDrawIndirect                  = PFN_vkCmdDrawIndirect( vkGetDeviceProcAddr( device, "vkCmdDrawIndirect" ) );
   1318b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1318f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13193:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13197:	48 8d 0d 5a 99 01 00 	lea    0x1995a(%rip),%rcx        # 2caf8 <_ZNSt8__detailL19__atomic_spin_countE+0x744>
   1319e:	48 89 ce             	mov    %rcx,%rsi
   131a1:	48 89 c7             	mov    %rax,%rdi
   131a4:	ff d2                	call   *%rdx
   131a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   131aa:	48 89 82 f0 02 00 00 	mov    %rax,0x2f0(%rdx)
        vkCmdDrawIndexedIndirect           = PFN_vkCmdDrawIndexedIndirect( vkGetDeviceProcAddr( device, "vkCmdDrawIndexedIndirect" ) );
   131b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131b5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   131b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131bd:	48 8d 0d 46 99 01 00 	lea    0x19946(%rip),%rcx        # 2cb0a <_ZNSt8__detailL19__atomic_spin_countE+0x756>
   131c4:	48 89 ce             	mov    %rcx,%rsi
   131c7:	48 89 c7             	mov    %rax,%rdi
   131ca:	ff d2                	call   *%rdx
   131cc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   131d0:	48 89 82 f8 02 00 00 	mov    %rax,0x2f8(%rdx)
        vkCmdDispatch                      = PFN_vkCmdDispatch( vkGetDeviceProcAddr( device, "vkCmdDispatch" ) );
   131d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131db:	48 8b 50 10          	mov    0x10(%rax),%rdx
   131df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131e3:	48 8d 0d 39 99 01 00 	lea    0x19939(%rip),%rcx        # 2cb23 <_ZNSt8__detailL19__atomic_spin_countE+0x76f>
   131ea:	48 89 ce             	mov    %rcx,%rsi
   131ed:	48 89 c7             	mov    %rax,%rdi
   131f0:	ff d2                	call   *%rdx
   131f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   131f6:	48 89 82 00 03 00 00 	mov    %rax,0x300(%rdx)
        vkCmdDispatchIndirect              = PFN_vkCmdDispatchIndirect( vkGetDeviceProcAddr( device, "vkCmdDispatchIndirect" ) );
   131fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13201:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13209:	48 8d 0d 21 99 01 00 	lea    0x19921(%rip),%rcx        # 2cb31 <_ZNSt8__detailL19__atomic_spin_countE+0x77d>
   13210:	48 89 ce             	mov    %rcx,%rsi
   13213:	48 89 c7             	mov    %rax,%rdi
   13216:	ff d2                	call   *%rdx
   13218:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1321c:	48 89 82 08 03 00 00 	mov    %rax,0x308(%rdx)
        vkCmdCopyBuffer                    = PFN_vkCmdCopyBuffer( vkGetDeviceProcAddr( device, "vkCmdCopyBuffer" ) );
   13223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13227:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1322b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1322f:	48 8d 0d 11 99 01 00 	lea    0x19911(%rip),%rcx        # 2cb47 <_ZNSt8__detailL19__atomic_spin_countE+0x793>
   13236:	48 89 ce             	mov    %rcx,%rsi
   13239:	48 89 c7             	mov    %rax,%rdi
   1323c:	ff d2                	call   *%rdx
   1323e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13242:	48 89 82 10 03 00 00 	mov    %rax,0x310(%rdx)
        vkCmdCopyImage                     = PFN_vkCmdCopyImage( vkGetDeviceProcAddr( device, "vkCmdCopyImage" ) );
   13249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1324d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13251:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13255:	48 8d 0d fb 98 01 00 	lea    0x198fb(%rip),%rcx        # 2cb57 <_ZNSt8__detailL19__atomic_spin_countE+0x7a3>
   1325c:	48 89 ce             	mov    %rcx,%rsi
   1325f:	48 89 c7             	mov    %rax,%rdi
   13262:	ff d2                	call   *%rdx
   13264:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13268:	48 89 82 18 03 00 00 	mov    %rax,0x318(%rdx)
        vkCmdBlitImage                     = PFN_vkCmdBlitImage( vkGetDeviceProcAddr( device, "vkCmdBlitImage" ) );
   1326f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13273:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13277:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1327b:	48 8d 0d e4 98 01 00 	lea    0x198e4(%rip),%rcx        # 2cb66 <_ZNSt8__detailL19__atomic_spin_countE+0x7b2>
   13282:	48 89 ce             	mov    %rcx,%rsi
   13285:	48 89 c7             	mov    %rax,%rdi
   13288:	ff d2                	call   *%rdx
   1328a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1328e:	48 89 82 20 03 00 00 	mov    %rax,0x320(%rdx)
        vkCmdCopyBufferToImage             = PFN_vkCmdCopyBufferToImage( vkGetDeviceProcAddr( device, "vkCmdCopyBufferToImage" ) );
   13295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13299:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1329d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132a1:	48 8d 0d cd 98 01 00 	lea    0x198cd(%rip),%rcx        # 2cb75 <_ZNSt8__detailL19__atomic_spin_countE+0x7c1>
   132a8:	48 89 ce             	mov    %rcx,%rsi
   132ab:	48 89 c7             	mov    %rax,%rdi
   132ae:	ff d2                	call   *%rdx
   132b0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   132b4:	48 89 82 28 03 00 00 	mov    %rax,0x328(%rdx)
        vkCmdCopyImageToBuffer             = PFN_vkCmdCopyImageToBuffer( vkGetDeviceProcAddr( device, "vkCmdCopyImageToBuffer" ) );
   132bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132bf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   132c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132c7:	48 8d 0d be 98 01 00 	lea    0x198be(%rip),%rcx        # 2cb8c <_ZNSt8__detailL19__atomic_spin_countE+0x7d8>
   132ce:	48 89 ce             	mov    %rcx,%rsi
   132d1:	48 89 c7             	mov    %rax,%rdi
   132d4:	ff d2                	call   *%rdx
   132d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   132da:	48 89 82 30 03 00 00 	mov    %rax,0x330(%rdx)
        vkCmdUpdateBuffer                  = PFN_vkCmdUpdateBuffer( vkGetDeviceProcAddr( device, "vkCmdUpdateBuffer" ) );
   132e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132e5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   132e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   132ed:	48 8d 0d af 98 01 00 	lea    0x198af(%rip),%rcx        # 2cba3 <_ZNSt8__detailL19__atomic_spin_countE+0x7ef>
   132f4:	48 89 ce             	mov    %rcx,%rsi
   132f7:	48 89 c7             	mov    %rax,%rdi
   132fa:	ff d2                	call   *%rdx
   132fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13300:	48 89 82 38 03 00 00 	mov    %rax,0x338(%rdx)
        vkCmdFillBuffer                    = PFN_vkCmdFillBuffer( vkGetDeviceProcAddr( device, "vkCmdFillBuffer" ) );
   13307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1330b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1330f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13313:	48 8d 0d 9b 98 01 00 	lea    0x1989b(%rip),%rcx        # 2cbb5 <_ZNSt8__detailL19__atomic_spin_countE+0x801>
   1331a:	48 89 ce             	mov    %rcx,%rsi
   1331d:	48 89 c7             	mov    %rax,%rdi
   13320:	ff d2                	call   *%rdx
   13322:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13326:	48 89 82 40 03 00 00 	mov    %rax,0x340(%rdx)
        vkCmdClearColorImage               = PFN_vkCmdClearColorImage( vkGetDeviceProcAddr( device, "vkCmdClearColorImage" ) );
   1332d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13331:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13339:	48 8d 0d 85 98 01 00 	lea    0x19885(%rip),%rcx        # 2cbc5 <_ZNSt8__detailL19__atomic_spin_countE+0x811>
   13340:	48 89 ce             	mov    %rcx,%rsi
   13343:	48 89 c7             	mov    %rax,%rdi
   13346:	ff d2                	call   *%rdx
   13348:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1334c:	48 89 82 48 03 00 00 	mov    %rax,0x348(%rdx)
        vkCmdClearDepthStencilImage        = PFN_vkCmdClearDepthStencilImage( vkGetDeviceProcAddr( device, "vkCmdClearDepthStencilImage" ) );
   13353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13357:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1335b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1335f:	48 8d 0d 74 98 01 00 	lea    0x19874(%rip),%rcx        # 2cbda <_ZNSt8__detailL19__atomic_spin_countE+0x826>
   13366:	48 89 ce             	mov    %rcx,%rsi
   13369:	48 89 c7             	mov    %rax,%rdi
   1336c:	ff d2                	call   *%rdx
   1336e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13372:	48 89 82 50 03 00 00 	mov    %rax,0x350(%rdx)
        vkCmdClearAttachments              = PFN_vkCmdClearAttachments( vkGetDeviceProcAddr( device, "vkCmdClearAttachments" ) );
   13379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1337d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13385:	48 8d 0d 6a 98 01 00 	lea    0x1986a(%rip),%rcx        # 2cbf6 <_ZNSt8__detailL19__atomic_spin_countE+0x842>
   1338c:	48 89 ce             	mov    %rcx,%rsi
   1338f:	48 89 c7             	mov    %rax,%rdi
   13392:	ff d2                	call   *%rdx
   13394:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13398:	48 89 82 58 03 00 00 	mov    %rax,0x358(%rdx)
        vkCmdResolveImage                  = PFN_vkCmdResolveImage( vkGetDeviceProcAddr( device, "vkCmdResolveImage" ) );
   1339f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133a3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   133a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133ab:	48 8d 0d 5a 98 01 00 	lea    0x1985a(%rip),%rcx        # 2cc0c <_ZNSt8__detailL19__atomic_spin_countE+0x858>
   133b2:	48 89 ce             	mov    %rcx,%rsi
   133b5:	48 89 c7             	mov    %rax,%rdi
   133b8:	ff d2                	call   *%rdx
   133ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   133be:	48 89 82 60 03 00 00 	mov    %rax,0x360(%rdx)
        vkCmdSetEvent                      = PFN_vkCmdSetEvent( vkGetDeviceProcAddr( device, "vkCmdSetEvent" ) );
   133c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133c9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   133cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133d1:	48 8d 0d 46 98 01 00 	lea    0x19846(%rip),%rcx        # 2cc1e <_ZNSt8__detailL19__atomic_spin_countE+0x86a>
   133d8:	48 89 ce             	mov    %rcx,%rsi
   133db:	48 89 c7             	mov    %rax,%rdi
   133de:	ff d2                	call   *%rdx
   133e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   133e4:	48 89 82 68 03 00 00 	mov    %rax,0x368(%rdx)
        vkCmdResetEvent                    = PFN_vkCmdResetEvent( vkGetDeviceProcAddr( device, "vkCmdResetEvent" ) );
   133eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133ef:	48 8b 50 10          	mov    0x10(%rax),%rdx
   133f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133f7:	48 8d 0d 2e 98 01 00 	lea    0x1982e(%rip),%rcx        # 2cc2c <_ZNSt8__detailL19__atomic_spin_countE+0x878>
   133fe:	48 89 ce             	mov    %rcx,%rsi
   13401:	48 89 c7             	mov    %rax,%rdi
   13404:	ff d2                	call   *%rdx
   13406:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1340a:	48 89 82 70 03 00 00 	mov    %rax,0x370(%rdx)
        vkCmdWaitEvents                    = PFN_vkCmdWaitEvents( vkGetDeviceProcAddr( device, "vkCmdWaitEvents" ) );
   13411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13415:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1341d:	48 8d 0d 18 98 01 00 	lea    0x19818(%rip),%rcx        # 2cc3c <_ZNSt8__detailL19__atomic_spin_countE+0x888>
   13424:	48 89 ce             	mov    %rcx,%rsi
   13427:	48 89 c7             	mov    %rax,%rdi
   1342a:	ff d2                	call   *%rdx
   1342c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13430:	48 89 82 78 03 00 00 	mov    %rax,0x378(%rdx)
        vkCmdPipelineBarrier               = PFN_vkCmdPipelineBarrier( vkGetDeviceProcAddr( device, "vkCmdPipelineBarrier" ) );
   13437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1343b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1343f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13443:	48 8d 0d 02 98 01 00 	lea    0x19802(%rip),%rcx        # 2cc4c <_ZNSt8__detailL19__atomic_spin_countE+0x898>
   1344a:	48 89 ce             	mov    %rcx,%rsi
   1344d:	48 89 c7             	mov    %rax,%rdi
   13450:	ff d2                	call   *%rdx
   13452:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13456:	48 89 82 80 03 00 00 	mov    %rax,0x380(%rdx)
        vkCmdBeginQuery                    = PFN_vkCmdBeginQuery( vkGetDeviceProcAddr( device, "vkCmdBeginQuery" ) );
   1345d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13461:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13469:	48 8d 0d f1 97 01 00 	lea    0x197f1(%rip),%rcx        # 2cc61 <_ZNSt8__detailL19__atomic_spin_countE+0x8ad>
   13470:	48 89 ce             	mov    %rcx,%rsi
   13473:	48 89 c7             	mov    %rax,%rdi
   13476:	ff d2                	call   *%rdx
   13478:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1347c:	48 89 82 88 03 00 00 	mov    %rax,0x388(%rdx)
        vkCmdEndQuery                      = PFN_vkCmdEndQuery( vkGetDeviceProcAddr( device, "vkCmdEndQuery" ) );
   13483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13487:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1348b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1348f:	48 8d 0d db 97 01 00 	lea    0x197db(%rip),%rcx        # 2cc71 <_ZNSt8__detailL19__atomic_spin_countE+0x8bd>
   13496:	48 89 ce             	mov    %rcx,%rsi
   13499:	48 89 c7             	mov    %rax,%rdi
   1349c:	ff d2                	call   *%rdx
   1349e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   134a2:	48 89 82 90 03 00 00 	mov    %rax,0x390(%rdx)
        vkCmdResetQueryPool                = PFN_vkCmdResetQueryPool( vkGetDeviceProcAddr( device, "vkCmdResetQueryPool" ) );
   134a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134ad:	48 8b 50 10          	mov    0x10(%rax),%rdx
   134b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134b5:	48 8d 0d c3 97 01 00 	lea    0x197c3(%rip),%rcx        # 2cc7f <_ZNSt8__detailL19__atomic_spin_countE+0x8cb>
   134bc:	48 89 ce             	mov    %rcx,%rsi
   134bf:	48 89 c7             	mov    %rax,%rdi
   134c2:	ff d2                	call   *%rdx
   134c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   134c8:	48 89 82 98 03 00 00 	mov    %rax,0x398(%rdx)
        vkCmdWriteTimestamp                = PFN_vkCmdWriteTimestamp( vkGetDeviceProcAddr( device, "vkCmdWriteTimestamp" ) );
   134cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   134d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134db:	48 8d 0d b1 97 01 00 	lea    0x197b1(%rip),%rcx        # 2cc93 <_ZNSt8__detailL19__atomic_spin_countE+0x8df>
   134e2:	48 89 ce             	mov    %rcx,%rsi
   134e5:	48 89 c7             	mov    %rax,%rdi
   134e8:	ff d2                	call   *%rdx
   134ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   134ee:	48 89 82 a0 03 00 00 	mov    %rax,0x3a0(%rdx)
        vkCmdCopyQueryPoolResults          = PFN_vkCmdCopyQueryPoolResults( vkGetDeviceProcAddr( device, "vkCmdCopyQueryPoolResults" ) );
   134f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134f9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   134fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13501:	48 8d 0d 9f 97 01 00 	lea    0x1979f(%rip),%rcx        # 2cca7 <_ZNSt8__detailL19__atomic_spin_countE+0x8f3>
   13508:	48 89 ce             	mov    %rcx,%rsi
   1350b:	48 89 c7             	mov    %rax,%rdi
   1350e:	ff d2                	call   *%rdx
   13510:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13514:	48 89 82 a8 03 00 00 	mov    %rax,0x3a8(%rdx)
        vkCmdPushConstants                 = PFN_vkCmdPushConstants( vkGetDeviceProcAddr( device, "vkCmdPushConstants" ) );
   1351b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1351f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13523:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13527:	48 8d 0d 93 97 01 00 	lea    0x19793(%rip),%rcx        # 2ccc1 <_ZNSt8__detailL19__atomic_spin_countE+0x90d>
   1352e:	48 89 ce             	mov    %rcx,%rsi
   13531:	48 89 c7             	mov    %rax,%rdi
   13534:	ff d2                	call   *%rdx
   13536:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1353a:	48 89 82 b0 03 00 00 	mov    %rax,0x3b0(%rdx)
        vkCmdBeginRenderPass               = PFN_vkCmdBeginRenderPass( vkGetDeviceProcAddr( device, "vkCmdBeginRenderPass" ) );
   13541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13545:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1354d:	48 8d 0d 80 97 01 00 	lea    0x19780(%rip),%rcx        # 2ccd4 <_ZNSt8__detailL19__atomic_spin_countE+0x920>
   13554:	48 89 ce             	mov    %rcx,%rsi
   13557:	48 89 c7             	mov    %rax,%rdi
   1355a:	ff d2                	call   *%rdx
   1355c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13560:	48 89 82 b8 03 00 00 	mov    %rax,0x3b8(%rdx)
        vkCmdNextSubpass                   = PFN_vkCmdNextSubpass( vkGetDeviceProcAddr( device, "vkCmdNextSubpass" ) );
   13567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1356b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1356f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13573:	48 8d 0d 6f 97 01 00 	lea    0x1976f(%rip),%rcx        # 2cce9 <_ZNSt8__detailL19__atomic_spin_countE+0x935>
   1357a:	48 89 ce             	mov    %rcx,%rsi
   1357d:	48 89 c7             	mov    %rax,%rdi
   13580:	ff d2                	call   *%rdx
   13582:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13586:	48 89 82 c0 03 00 00 	mov    %rax,0x3c0(%rdx)
        vkCmdEndRenderPass                 = PFN_vkCmdEndRenderPass( vkGetDeviceProcAddr( device, "vkCmdEndRenderPass" ) );
   1358d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13591:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13599:	48 8d 0d 5a 97 01 00 	lea    0x1975a(%rip),%rcx        # 2ccfa <_ZNSt8__detailL19__atomic_spin_countE+0x946>
   135a0:	48 89 ce             	mov    %rcx,%rsi
   135a3:	48 89 c7             	mov    %rax,%rdi
   135a6:	ff d2                	call   *%rdx
   135a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   135ac:	48 89 82 c8 03 00 00 	mov    %rax,0x3c8(%rdx)
        vkCmdExecuteCommands               = PFN_vkCmdExecuteCommands( vkGetDeviceProcAddr( device, "vkCmdExecuteCommands" ) );
   135b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   135bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135bf:	48 8d 0d 47 97 01 00 	lea    0x19747(%rip),%rcx        # 2cd0d <_ZNSt8__detailL19__atomic_spin_countE+0x959>
   135c6:	48 89 ce             	mov    %rcx,%rsi
   135c9:	48 89 c7             	mov    %rax,%rdi
   135cc:	ff d2                	call   *%rdx
   135ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   135d2:	48 89 82 d0 03 00 00 	mov    %rax,0x3d0(%rdx)
        vkBindBufferMemory2                 = PFN_vkBindBufferMemory2( vkGetDeviceProcAddr( device, "vkBindBufferMemory2" ) );
   135d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135dd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   135e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135e5:	48 8d 0d 36 97 01 00 	lea    0x19736(%rip),%rcx        # 2cd22 <_ZNSt8__detailL19__atomic_spin_countE+0x96e>
   135ec:	48 89 ce             	mov    %rcx,%rsi
   135ef:	48 89 c7             	mov    %rax,%rdi
   135f2:	ff d2                	call   *%rdx
   135f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   135f8:	48 89 82 d8 03 00 00 	mov    %rax,0x3d8(%rdx)
        vkBindImageMemory2                  = PFN_vkBindImageMemory2( vkGetDeviceProcAddr( device, "vkBindImageMemory2" ) );
   135ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13603:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13607:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1360b:	48 8d 0d 24 97 01 00 	lea    0x19724(%rip),%rcx        # 2cd36 <_ZNSt8__detailL19__atomic_spin_countE+0x982>
   13612:	48 89 ce             	mov    %rcx,%rsi
   13615:	48 89 c7             	mov    %rax,%rdi
   13618:	ff d2                	call   *%rdx
   1361a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1361e:	48 89 82 e0 03 00 00 	mov    %rax,0x3e0(%rdx)
        vkGetDeviceGroupPeerMemoryFeatures  = PFN_vkGetDeviceGroupPeerMemoryFeatures( vkGetDeviceProcAddr( device, "vkGetDeviceGroupPeerMemoryFeatures" ) );
   13625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13629:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1362d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13631:	48 8d 0d 18 97 01 00 	lea    0x19718(%rip),%rcx        # 2cd50 <_ZNSt8__detailL19__atomic_spin_countE+0x99c>
   13638:	48 89 ce             	mov    %rcx,%rsi
   1363b:	48 89 c7             	mov    %rax,%rdi
   1363e:	ff d2                	call   *%rdx
   13640:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13644:	48 89 82 e8 03 00 00 	mov    %rax,0x3e8(%rdx)
        vkCmdSetDeviceMask                  = PFN_vkCmdSetDeviceMask( vkGetDeviceProcAddr( device, "vkCmdSetDeviceMask" ) );
   1364b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1364f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13653:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13657:	48 8d 0d 15 97 01 00 	lea    0x19715(%rip),%rcx        # 2cd73 <_ZNSt8__detailL19__atomic_spin_countE+0x9bf>
   1365e:	48 89 ce             	mov    %rcx,%rsi
   13661:	48 89 c7             	mov    %rax,%rdi
   13664:	ff d2                	call   *%rdx
   13666:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1366a:	48 89 82 f0 03 00 00 	mov    %rax,0x3f0(%rdx)
        vkCmdDispatchBase                   = PFN_vkCmdDispatchBase( vkGetDeviceProcAddr( device, "vkCmdDispatchBase" ) );
   13671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13675:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13679:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1367d:	48 8d 0d 02 97 01 00 	lea    0x19702(%rip),%rcx        # 2cd86 <_ZNSt8__detailL19__atomic_spin_countE+0x9d2>
   13684:	48 89 ce             	mov    %rcx,%rsi
   13687:	48 89 c7             	mov    %rax,%rdi
   1368a:	ff d2                	call   *%rdx
   1368c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13690:	48 89 82 f8 03 00 00 	mov    %rax,0x3f8(%rdx)
        vkGetImageMemoryRequirements2       = PFN_vkGetImageMemoryRequirements2( vkGetDeviceProcAddr( device, "vkGetImageMemoryRequirements2" ) );
   13697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1369b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1369f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136a3:	48 8d 0d ee 96 01 00 	lea    0x196ee(%rip),%rcx        # 2cd98 <_ZNSt8__detailL19__atomic_spin_countE+0x9e4>
   136aa:	48 89 ce             	mov    %rcx,%rsi
   136ad:	48 89 c7             	mov    %rax,%rdi
   136b0:	ff d2                	call   *%rdx
   136b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   136b6:	48 89 82 00 04 00 00 	mov    %rax,0x400(%rdx)
        vkGetBufferMemoryRequirements2      = PFN_vkGetBufferMemoryRequirements2( vkGetDeviceProcAddr( device, "vkGetBufferMemoryRequirements2" ) );
   136bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   136c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136c9:	48 8d 0d e8 96 01 00 	lea    0x196e8(%rip),%rcx        # 2cdb8 <_ZNSt8__detailL19__atomic_spin_countE+0xa04>
   136d0:	48 89 ce             	mov    %rcx,%rsi
   136d3:	48 89 c7             	mov    %rax,%rdi
   136d6:	ff d2                	call   *%rdx
   136d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   136dc:	48 89 82 08 04 00 00 	mov    %rax,0x408(%rdx)
        vkGetImageSparseMemoryRequirements2 = PFN_vkGetImageSparseMemoryRequirements2( vkGetDeviceProcAddr( device, "vkGetImageSparseMemoryRequirements2" ) );
   136e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136e7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   136eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136ef:	48 8d 0d e2 96 01 00 	lea    0x196e2(%rip),%rcx        # 2cdd8 <_ZNSt8__detailL19__atomic_spin_countE+0xa24>
   136f6:	48 89 ce             	mov    %rcx,%rsi
   136f9:	48 89 c7             	mov    %rax,%rdi
   136fc:	ff d2                	call   *%rdx
   136fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13702:	48 89 82 10 04 00 00 	mov    %rax,0x410(%rdx)
        vkTrimCommandPool                   = PFN_vkTrimCommandPool( vkGetDeviceProcAddr( device, "vkTrimCommandPool" ) );
   13709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1370d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13711:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13715:	48 8d 0d e0 96 01 00 	lea    0x196e0(%rip),%rcx        # 2cdfc <_ZNSt8__detailL19__atomic_spin_countE+0xa48>
   1371c:	48 89 ce             	mov    %rcx,%rsi
   1371f:	48 89 c7             	mov    %rax,%rdi
   13722:	ff d2                	call   *%rdx
   13724:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13728:	48 89 82 18 04 00 00 	mov    %rax,0x418(%rdx)
        vkGetDeviceQueue2                   = PFN_vkGetDeviceQueue2( vkGetDeviceProcAddr( device, "vkGetDeviceQueue2" ) );
   1372f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13733:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13737:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1373b:	48 8d 0d cc 96 01 00 	lea    0x196cc(%rip),%rcx        # 2ce0e <_ZNSt8__detailL19__atomic_spin_countE+0xa5a>
   13742:	48 89 ce             	mov    %rcx,%rsi
   13745:	48 89 c7             	mov    %rax,%rdi
   13748:	ff d2                	call   *%rdx
   1374a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1374e:	48 89 82 20 04 00 00 	mov    %rax,0x420(%rdx)
        vkCreateSamplerYcbcrConversion      = PFN_vkCreateSamplerYcbcrConversion( vkGetDeviceProcAddr( device, "vkCreateSamplerYcbcrConversion" ) );
   13755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13759:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1375d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13761:	48 8d 0d b8 96 01 00 	lea    0x196b8(%rip),%rcx        # 2ce20 <_ZNSt8__detailL19__atomic_spin_countE+0xa6c>
   13768:	48 89 ce             	mov    %rcx,%rsi
   1376b:	48 89 c7             	mov    %rax,%rdi
   1376e:	ff d2                	call   *%rdx
   13770:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13774:	48 89 82 28 04 00 00 	mov    %rax,0x428(%rdx)
        vkDestroySamplerYcbcrConversion     = PFN_vkDestroySamplerYcbcrConversion( vkGetDeviceProcAddr( device, "vkDestroySamplerYcbcrConversion" ) );
   1377b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1377f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13783:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13787:	48 8d 0d b2 96 01 00 	lea    0x196b2(%rip),%rcx        # 2ce40 <_ZNSt8__detailL19__atomic_spin_countE+0xa8c>
   1378e:	48 89 ce             	mov    %rcx,%rsi
   13791:	48 89 c7             	mov    %rax,%rdi
   13794:	ff d2                	call   *%rdx
   13796:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1379a:	48 89 82 30 04 00 00 	mov    %rax,0x430(%rdx)
        vkCreateDescriptorUpdateTemplate    = PFN_vkCreateDescriptorUpdateTemplate( vkGetDeviceProcAddr( device, "vkCreateDescriptorUpdateTemplate" ) );
   137a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   137a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137ad:	48 8d 0d ac 96 01 00 	lea    0x196ac(%rip),%rcx        # 2ce60 <_ZNSt8__detailL19__atomic_spin_countE+0xaac>
   137b4:	48 89 ce             	mov    %rcx,%rsi
   137b7:	48 89 c7             	mov    %rax,%rdi
   137ba:	ff d2                	call   *%rdx
   137bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   137c0:	48 89 82 38 04 00 00 	mov    %rax,0x438(%rdx)
        vkDestroyDescriptorUpdateTemplate   = PFN_vkDestroyDescriptorUpdateTemplate( vkGetDeviceProcAddr( device, "vkDestroyDescriptorUpdateTemplate" ) );
   137c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137cb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   137cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137d3:	48 8d 0d ae 96 01 00 	lea    0x196ae(%rip),%rcx        # 2ce88 <_ZNSt8__detailL19__atomic_spin_countE+0xad4>
   137da:	48 89 ce             	mov    %rcx,%rsi
   137dd:	48 89 c7             	mov    %rax,%rdi
   137e0:	ff d2                	call   *%rdx
   137e2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   137e6:	48 89 82 40 04 00 00 	mov    %rax,0x440(%rdx)
        vkUpdateDescriptorSetWithTemplate   = PFN_vkUpdateDescriptorSetWithTemplate( vkGetDeviceProcAddr( device, "vkUpdateDescriptorSetWithTemplate" ) );
   137ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137f1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   137f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137f9:	48 8d 0d b0 96 01 00 	lea    0x196b0(%rip),%rcx        # 2ceb0 <_ZNSt8__detailL19__atomic_spin_countE+0xafc>
   13800:	48 89 ce             	mov    %rcx,%rsi
   13803:	48 89 c7             	mov    %rax,%rdi
   13806:	ff d2                	call   *%rdx
   13808:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1380c:	48 89 82 48 04 00 00 	mov    %rax,0x448(%rdx)
        vkGetDescriptorSetLayoutSupport     = PFN_vkGetDescriptorSetLayoutSupport( vkGetDeviceProcAddr( device, "vkGetDescriptorSetLayoutSupport" ) );
   13813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13817:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1381b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1381f:	48 8d 0d b2 96 01 00 	lea    0x196b2(%rip),%rcx        # 2ced8 <_ZNSt8__detailL19__atomic_spin_countE+0xb24>
   13826:	48 89 ce             	mov    %rcx,%rsi
   13829:	48 89 c7             	mov    %rax,%rdi
   1382c:	ff d2                	call   *%rdx
   1382e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13832:	48 89 82 50 04 00 00 	mov    %rax,0x450(%rdx)
        vkCmdDrawIndirectCount          = PFN_vkCmdDrawIndirectCount( vkGetDeviceProcAddr( device, "vkCmdDrawIndirectCount" ) );
   13839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1383d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13841:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13845:	48 8d 0d ac 96 01 00 	lea    0x196ac(%rip),%rcx        # 2cef8 <_ZNSt8__detailL19__atomic_spin_countE+0xb44>
   1384c:	48 89 ce             	mov    %rcx,%rsi
   1384f:	48 89 c7             	mov    %rax,%rdi
   13852:	ff d2                	call   *%rdx
   13854:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13858:	48 89 82 58 04 00 00 	mov    %rax,0x458(%rdx)
        vkCmdDrawIndexedIndirectCount   = PFN_vkCmdDrawIndexedIndirectCount( vkGetDeviceProcAddr( device, "vkCmdDrawIndexedIndirectCount" ) );
   1385f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13863:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1386b:	48 8d 0d 9d 96 01 00 	lea    0x1969d(%rip),%rcx        # 2cf0f <_ZNSt8__detailL19__atomic_spin_countE+0xb5b>
   13872:	48 89 ce             	mov    %rcx,%rsi
   13875:	48 89 c7             	mov    %rax,%rdi
   13878:	ff d2                	call   *%rdx
   1387a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1387e:	48 89 82 60 04 00 00 	mov    %rax,0x460(%rdx)
        vkCreateRenderPass2             = PFN_vkCreateRenderPass2( vkGetDeviceProcAddr( device, "vkCreateRenderPass2" ) );
   13885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13889:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1388d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13891:	48 8d 0d 95 96 01 00 	lea    0x19695(%rip),%rcx        # 2cf2d <_ZNSt8__detailL19__atomic_spin_countE+0xb79>
   13898:	48 89 ce             	mov    %rcx,%rsi
   1389b:	48 89 c7             	mov    %rax,%rdi
   1389e:	ff d2                	call   *%rdx
   138a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   138a4:	48 89 82 68 04 00 00 	mov    %rax,0x468(%rdx)
        vkCmdBeginRenderPass2           = PFN_vkCmdBeginRenderPass2( vkGetDeviceProcAddr( device, "vkCmdBeginRenderPass2" ) );
   138ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138af:	48 8b 50 10          	mov    0x10(%rax),%rdx
   138b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138b7:	48 8d 0d 83 96 01 00 	lea    0x19683(%rip),%rcx        # 2cf41 <_ZNSt8__detailL19__atomic_spin_countE+0xb8d>
   138be:	48 89 ce             	mov    %rcx,%rsi
   138c1:	48 89 c7             	mov    %rax,%rdi
   138c4:	ff d2                	call   *%rdx
   138c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   138ca:	48 89 82 70 04 00 00 	mov    %rax,0x470(%rdx)
        vkCmdNextSubpass2               = PFN_vkCmdNextSubpass2( vkGetDeviceProcAddr( device, "vkCmdNextSubpass2" ) );
   138d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138d5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   138d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138dd:	48 8d 0d 73 96 01 00 	lea    0x19673(%rip),%rcx        # 2cf57 <_ZNSt8__detailL19__atomic_spin_countE+0xba3>
   138e4:	48 89 ce             	mov    %rcx,%rsi
   138e7:	48 89 c7             	mov    %rax,%rdi
   138ea:	ff d2                	call   *%rdx
   138ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   138f0:	48 89 82 78 04 00 00 	mov    %rax,0x478(%rdx)
        vkCmdEndRenderPass2             = PFN_vkCmdEndRenderPass2( vkGetDeviceProcAddr( device, "vkCmdEndRenderPass2" ) );
   138f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138fb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   138ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13903:	48 8d 0d 5f 96 01 00 	lea    0x1965f(%rip),%rcx        # 2cf69 <_ZNSt8__detailL19__atomic_spin_countE+0xbb5>
   1390a:	48 89 ce             	mov    %rcx,%rsi
   1390d:	48 89 c7             	mov    %rax,%rdi
   13910:	ff d2                	call   *%rdx
   13912:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13916:	48 89 82 80 04 00 00 	mov    %rax,0x480(%rdx)
        vkResetQueryPool                = PFN_vkResetQueryPool( vkGetDeviceProcAddr( device, "vkResetQueryPool" ) );
   1391d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13921:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13929:	48 8d 0d 4d 96 01 00 	lea    0x1964d(%rip),%rcx        # 2cf7d <_ZNSt8__detailL19__atomic_spin_countE+0xbc9>
   13930:	48 89 ce             	mov    %rcx,%rsi
   13933:	48 89 c7             	mov    %rax,%rdi
   13936:	ff d2                	call   *%rdx
   13938:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1393c:	48 89 82 88 04 00 00 	mov    %rax,0x488(%rdx)
        vkGetSemaphoreCounterValue      = PFN_vkGetSemaphoreCounterValue( vkGetDeviceProcAddr( device, "vkGetSemaphoreCounterValue" ) );
   13943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13947:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1394b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1394f:	48 8d 0d 38 96 01 00 	lea    0x19638(%rip),%rcx        # 2cf8e <_ZNSt8__detailL19__atomic_spin_countE+0xbda>
   13956:	48 89 ce             	mov    %rcx,%rsi
   13959:	48 89 c7             	mov    %rax,%rdi
   1395c:	ff d2                	call   *%rdx
   1395e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13962:	48 89 82 90 04 00 00 	mov    %rax,0x490(%rdx)
        vkWaitSemaphores                = PFN_vkWaitSemaphores( vkGetDeviceProcAddr( device, "vkWaitSemaphores" ) );
   13969:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1396d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13971:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13975:	48 8d 0d 2d 96 01 00 	lea    0x1962d(%rip),%rcx        # 2cfa9 <_ZNSt8__detailL19__atomic_spin_countE+0xbf5>
   1397c:	48 89 ce             	mov    %rcx,%rsi
   1397f:	48 89 c7             	mov    %rax,%rdi
   13982:	ff d2                	call   *%rdx
   13984:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13988:	48 89 82 98 04 00 00 	mov    %rax,0x498(%rdx)
        vkSignalSemaphore               = PFN_vkSignalSemaphore( vkGetDeviceProcAddr( device, "vkSignalSemaphore" ) );
   1398f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13993:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1399b:	48 8d 0d 18 96 01 00 	lea    0x19618(%rip),%rcx        # 2cfba <_ZNSt8__detailL19__atomic_spin_countE+0xc06>
   139a2:	48 89 ce             	mov    %rcx,%rsi
   139a5:	48 89 c7             	mov    %rax,%rdi
   139a8:	ff d2                	call   *%rdx
   139aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139ae:	48 89 82 a0 04 00 00 	mov    %rax,0x4a0(%rdx)
        vkGetBufferDeviceAddress        = PFN_vkGetBufferDeviceAddress( vkGetDeviceProcAddr( device, "vkGetBufferDeviceAddress" ) );
   139b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139b9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   139bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139c1:	48 8d 0d 04 96 01 00 	lea    0x19604(%rip),%rcx        # 2cfcc <_ZNSt8__detailL19__atomic_spin_countE+0xc18>
   139c8:	48 89 ce             	mov    %rcx,%rsi
   139cb:	48 89 c7             	mov    %rax,%rdi
   139ce:	ff d2                	call   *%rdx
   139d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139d4:	48 89 82 a8 04 00 00 	mov    %rax,0x4a8(%rdx)
        vkGetBufferOpaqueCaptureAddress = PFN_vkGetBufferOpaqueCaptureAddress( vkGetDeviceProcAddr( device, "vkGetBufferOpaqueCaptureAddress" ) );
   139db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139df:	48 8b 50 10          	mov    0x10(%rax),%rdx
   139e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139e7:	48 8d 0d fa 95 01 00 	lea    0x195fa(%rip),%rcx        # 2cfe8 <_ZNSt8__detailL19__atomic_spin_countE+0xc34>
   139ee:	48 89 ce             	mov    %rcx,%rsi
   139f1:	48 89 c7             	mov    %rax,%rdi
   139f4:	ff d2                	call   *%rdx
   139f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139fa:	48 89 82 b0 04 00 00 	mov    %rax,0x4b0(%rdx)
          PFN_vkGetDeviceMemoryOpaqueCaptureAddress( vkGetDeviceProcAddr( device, "vkGetDeviceMemoryOpaqueCaptureAddress" ) );
   13a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a05:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a0d:	48 8d 0d f4 95 01 00 	lea    0x195f4(%rip),%rcx        # 2d008 <_ZNSt8__detailL19__atomic_spin_countE+0xc54>
   13a14:	48 89 ce             	mov    %rcx,%rsi
   13a17:	48 89 c7             	mov    %rax,%rdi
   13a1a:	ff d2                	call   *%rdx
        vkGetDeviceMemoryOpaqueCaptureAddress =
   13a1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a20:	48 89 82 b8 04 00 00 	mov    %rax,0x4b8(%rdx)
        vkCreatePrivateDataSlot             = PFN_vkCreatePrivateDataSlot( vkGetDeviceProcAddr( device, "vkCreatePrivateDataSlot" ) );
   13a27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a2b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13a2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a33:	48 8d 0d f4 95 01 00 	lea    0x195f4(%rip),%rcx        # 2d02e <_ZNSt8__detailL19__atomic_spin_countE+0xc7a>
   13a3a:	48 89 ce             	mov    %rcx,%rsi
   13a3d:	48 89 c7             	mov    %rax,%rdi
   13a40:	ff d2                	call   *%rdx
   13a42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a46:	48 89 82 c0 04 00 00 	mov    %rax,0x4c0(%rdx)
        vkDestroyPrivateDataSlot            = PFN_vkDestroyPrivateDataSlot( vkGetDeviceProcAddr( device, "vkDestroyPrivateDataSlot" ) );
   13a4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a51:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13a55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a59:	48 8d 0d e6 95 01 00 	lea    0x195e6(%rip),%rcx        # 2d046 <_ZNSt8__detailL19__atomic_spin_countE+0xc92>
   13a60:	48 89 ce             	mov    %rcx,%rsi
   13a63:	48 89 c7             	mov    %rax,%rdi
   13a66:	ff d2                	call   *%rdx
   13a68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a6c:	48 89 82 c8 04 00 00 	mov    %rax,0x4c8(%rdx)
        vkSetPrivateData                    = PFN_vkSetPrivateData( vkGetDeviceProcAddr( device, "vkSetPrivateData" ) );
   13a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a77:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13a7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a7f:	48 8d 0d d9 95 01 00 	lea    0x195d9(%rip),%rcx        # 2d05f <_ZNSt8__detailL19__atomic_spin_countE+0xcab>
   13a86:	48 89 ce             	mov    %rcx,%rsi
   13a89:	48 89 c7             	mov    %rax,%rdi
   13a8c:	ff d2                	call   *%rdx
   13a8e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13a92:	48 89 82 d0 04 00 00 	mov    %rax,0x4d0(%rdx)
        vkGetPrivateData                    = PFN_vkGetPrivateData( vkGetDeviceProcAddr( device, "vkGetPrivateData" ) );
   13a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a9d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13aa5:	48 8d 0d c4 95 01 00 	lea    0x195c4(%rip),%rcx        # 2d070 <_ZNSt8__detailL19__atomic_spin_countE+0xcbc>
   13aac:	48 89 ce             	mov    %rcx,%rsi
   13aaf:	48 89 c7             	mov    %rax,%rdi
   13ab2:	ff d2                	call   *%rdx
   13ab4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13ab8:	48 89 82 d8 04 00 00 	mov    %rax,0x4d8(%rdx)
        vkCmdSetEvent2                      = PFN_vkCmdSetEvent2( vkGetDeviceProcAddr( device, "vkCmdSetEvent2" ) );
   13abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ac3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13acb:	48 8d 0d af 95 01 00 	lea    0x195af(%rip),%rcx        # 2d081 <_ZNSt8__detailL19__atomic_spin_countE+0xccd>
   13ad2:	48 89 ce             	mov    %rcx,%rsi
   13ad5:	48 89 c7             	mov    %rax,%rdi
   13ad8:	ff d2                	call   *%rdx
   13ada:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13ade:	48 89 82 e0 04 00 00 	mov    %rax,0x4e0(%rdx)
        vkCmdResetEvent2                    = PFN_vkCmdResetEvent2( vkGetDeviceProcAddr( device, "vkCmdResetEvent2" ) );
   13ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ae9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13aed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13af1:	48 8d 0d 98 95 01 00 	lea    0x19598(%rip),%rcx        # 2d090 <_ZNSt8__detailL19__atomic_spin_countE+0xcdc>
   13af8:	48 89 ce             	mov    %rcx,%rsi
   13afb:	48 89 c7             	mov    %rax,%rdi
   13afe:	ff d2                	call   *%rdx
   13b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b04:	48 89 82 e8 04 00 00 	mov    %rax,0x4e8(%rdx)
        vkCmdWaitEvents2                    = PFN_vkCmdWaitEvents2( vkGetDeviceProcAddr( device, "vkCmdWaitEvents2" ) );
   13b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b0f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13b13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b17:	48 8d 0d 83 95 01 00 	lea    0x19583(%rip),%rcx        # 2d0a1 <_ZNSt8__detailL19__atomic_spin_countE+0xced>
   13b1e:	48 89 ce             	mov    %rcx,%rsi
   13b21:	48 89 c7             	mov    %rax,%rdi
   13b24:	ff d2                	call   *%rdx
   13b26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b2a:	48 89 82 f0 04 00 00 	mov    %rax,0x4f0(%rdx)
        vkCmdPipelineBarrier2               = PFN_vkCmdPipelineBarrier2( vkGetDeviceProcAddr( device, "vkCmdPipelineBarrier2" ) );
   13b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b35:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13b39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b3d:	48 8d 0d 6e 95 01 00 	lea    0x1956e(%rip),%rcx        # 2d0b2 <_ZNSt8__detailL19__atomic_spin_countE+0xcfe>
   13b44:	48 89 ce             	mov    %rcx,%rsi
   13b47:	48 89 c7             	mov    %rax,%rdi
   13b4a:	ff d2                	call   *%rdx
   13b4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b50:	48 89 82 f8 04 00 00 	mov    %rax,0x4f8(%rdx)
        vkCmdWriteTimestamp2                = PFN_vkCmdWriteTimestamp2( vkGetDeviceProcAddr( device, "vkCmdWriteTimestamp2" ) );
   13b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b5b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13b5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b63:	48 8d 0d 5e 95 01 00 	lea    0x1955e(%rip),%rcx        # 2d0c8 <_ZNSt8__detailL19__atomic_spin_countE+0xd14>
   13b6a:	48 89 ce             	mov    %rcx,%rsi
   13b6d:	48 89 c7             	mov    %rax,%rdi
   13b70:	ff d2                	call   *%rdx
   13b72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b76:	48 89 82 00 05 00 00 	mov    %rax,0x500(%rdx)
        vkQueueSubmit2                      = PFN_vkQueueSubmit2( vkGetDeviceProcAddr( device, "vkQueueSubmit2" ) );
   13b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b81:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13b85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b89:	48 8d 0d 4d 95 01 00 	lea    0x1954d(%rip),%rcx        # 2d0dd <_ZNSt8__detailL19__atomic_spin_countE+0xd29>
   13b90:	48 89 ce             	mov    %rcx,%rsi
   13b93:	48 89 c7             	mov    %rax,%rdi
   13b96:	ff d2                	call   *%rdx
   13b98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b9c:	48 89 82 08 05 00 00 	mov    %rax,0x508(%rdx)
        vkCmdCopyBuffer2                    = PFN_vkCmdCopyBuffer2( vkGetDeviceProcAddr( device, "vkCmdCopyBuffer2" ) );
   13ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ba7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13bab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13baf:	48 8d 0d 36 95 01 00 	lea    0x19536(%rip),%rcx        # 2d0ec <_ZNSt8__detailL19__atomic_spin_countE+0xd38>
   13bb6:	48 89 ce             	mov    %rcx,%rsi
   13bb9:	48 89 c7             	mov    %rax,%rdi
   13bbc:	ff d2                	call   *%rdx
   13bbe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13bc2:	48 89 82 10 05 00 00 	mov    %rax,0x510(%rdx)
        vkCmdCopyImage2                     = PFN_vkCmdCopyImage2( vkGetDeviceProcAddr( device, "vkCmdCopyImage2" ) );
   13bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bcd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bd5:	48 8d 0d 21 95 01 00 	lea    0x19521(%rip),%rcx        # 2d0fd <_ZNSt8__detailL19__atomic_spin_countE+0xd49>
   13bdc:	48 89 ce             	mov    %rcx,%rsi
   13bdf:	48 89 c7             	mov    %rax,%rdi
   13be2:	ff d2                	call   *%rdx
   13be4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13be8:	48 89 82 18 05 00 00 	mov    %rax,0x518(%rdx)
        vkCmdCopyBufferToImage2             = PFN_vkCmdCopyBufferToImage2( vkGetDeviceProcAddr( device, "vkCmdCopyBufferToImage2" ) );
   13bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bf3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13bf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bfb:	48 8d 0d 0b 95 01 00 	lea    0x1950b(%rip),%rcx        # 2d10d <_ZNSt8__detailL19__atomic_spin_countE+0xd59>
   13c02:	48 89 ce             	mov    %rcx,%rsi
   13c05:	48 89 c7             	mov    %rax,%rdi
   13c08:	ff d2                	call   *%rdx
   13c0a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13c0e:	48 89 82 20 05 00 00 	mov    %rax,0x520(%rdx)
        vkCmdCopyImageToBuffer2             = PFN_vkCmdCopyImageToBuffer2( vkGetDeviceProcAddr( device, "vkCmdCopyImageToBuffer2" ) );
   13c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c19:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c21:	48 8d 0d fd 94 01 00 	lea    0x194fd(%rip),%rcx        # 2d125 <_ZNSt8__detailL19__atomic_spin_countE+0xd71>
   13c28:	48 89 ce             	mov    %rcx,%rsi
   13c2b:	48 89 c7             	mov    %rax,%rdi
   13c2e:	ff d2                	call   *%rdx
   13c30:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13c34:	48 89 82 28 05 00 00 	mov    %rax,0x528(%rdx)
        vkCmdBlitImage2                     = PFN_vkCmdBlitImage2( vkGetDeviceProcAddr( device, "vkCmdBlitImage2" ) );
   13c3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c3f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c47:	48 8d 0d ef 94 01 00 	lea    0x194ef(%rip),%rcx        # 2d13d <_ZNSt8__detailL19__atomic_spin_countE+0xd89>
   13c4e:	48 89 ce             	mov    %rcx,%rsi
   13c51:	48 89 c7             	mov    %rax,%rdi
   13c54:	ff d2                	call   *%rdx
   13c56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13c5a:	48 89 82 30 05 00 00 	mov    %rax,0x530(%rdx)
        vkCmdResolveImage2                  = PFN_vkCmdResolveImage2( vkGetDeviceProcAddr( device, "vkCmdResolveImage2" ) );
   13c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c65:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c6d:	48 8d 0d d9 94 01 00 	lea    0x194d9(%rip),%rcx        # 2d14d <_ZNSt8__detailL19__atomic_spin_countE+0xd99>
   13c74:	48 89 ce             	mov    %rcx,%rsi
   13c77:	48 89 c7             	mov    %rax,%rdi
   13c7a:	ff d2                	call   *%rdx
   13c7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13c80:	48 89 82 38 05 00 00 	mov    %rax,0x538(%rdx)
        vkCmdBeginRendering                 = PFN_vkCmdBeginRendering( vkGetDeviceProcAddr( device, "vkCmdBeginRendering" ) );
   13c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c8b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13c8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c93:	48 8d 0d c6 94 01 00 	lea    0x194c6(%rip),%rcx        # 2d160 <_ZNSt8__detailL19__atomic_spin_countE+0xdac>
   13c9a:	48 89 ce             	mov    %rcx,%rsi
   13c9d:	48 89 c7             	mov    %rax,%rdi
   13ca0:	ff d2                	call   *%rdx
   13ca2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13ca6:	48 89 82 40 05 00 00 	mov    %rax,0x540(%rdx)
        vkCmdEndRendering                   = PFN_vkCmdEndRendering( vkGetDeviceProcAddr( device, "vkCmdEndRendering" ) );
   13cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cb1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13cb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13cb9:	48 8d 0d b4 94 01 00 	lea    0x194b4(%rip),%rcx        # 2d174 <_ZNSt8__detailL19__atomic_spin_countE+0xdc0>
   13cc0:	48 89 ce             	mov    %rcx,%rsi
   13cc3:	48 89 c7             	mov    %rax,%rdi
   13cc6:	ff d2                	call   *%rdx
   13cc8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13ccc:	48 89 82 48 05 00 00 	mov    %rax,0x548(%rdx)
        vkCmdSetCullMode                    = PFN_vkCmdSetCullMode( vkGetDeviceProcAddr( device, "vkCmdSetCullMode" ) );
   13cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cd7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13cdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13cdf:	48 8d 0d a0 94 01 00 	lea    0x194a0(%rip),%rcx        # 2d186 <_ZNSt8__detailL19__atomic_spin_countE+0xdd2>
   13ce6:	48 89 ce             	mov    %rcx,%rsi
   13ce9:	48 89 c7             	mov    %rax,%rdi
   13cec:	ff d2                	call   *%rdx
   13cee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13cf2:	48 89 82 50 05 00 00 	mov    %rax,0x550(%rdx)
        vkCmdSetFrontFace                   = PFN_vkCmdSetFrontFace( vkGetDeviceProcAddr( device, "vkCmdSetFrontFace" ) );
   13cf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cfd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d05:	48 8d 0d 8b 94 01 00 	lea    0x1948b(%rip),%rcx        # 2d197 <_ZNSt8__detailL19__atomic_spin_countE+0xde3>
   13d0c:	48 89 ce             	mov    %rcx,%rsi
   13d0f:	48 89 c7             	mov    %rax,%rdi
   13d12:	ff d2                	call   *%rdx
   13d14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d18:	48 89 82 58 05 00 00 	mov    %rax,0x558(%rdx)
        vkCmdSetPrimitiveTopology           = PFN_vkCmdSetPrimitiveTopology( vkGetDeviceProcAddr( device, "vkCmdSetPrimitiveTopology" ) );
   13d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d23:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d2b:	48 8d 0d 77 94 01 00 	lea    0x19477(%rip),%rcx        # 2d1a9 <_ZNSt8__detailL19__atomic_spin_countE+0xdf5>
   13d32:	48 89 ce             	mov    %rcx,%rsi
   13d35:	48 89 c7             	mov    %rax,%rdi
   13d38:	ff d2                	call   *%rdx
   13d3a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d3e:	48 89 82 60 05 00 00 	mov    %rax,0x560(%rdx)
        vkCmdSetViewportWithCount           = PFN_vkCmdSetViewportWithCount( vkGetDeviceProcAddr( device, "vkCmdSetViewportWithCount" ) );
   13d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d49:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d51:	48 8d 0d 6b 94 01 00 	lea    0x1946b(%rip),%rcx        # 2d1c3 <_ZNSt8__detailL19__atomic_spin_countE+0xe0f>
   13d58:	48 89 ce             	mov    %rcx,%rsi
   13d5b:	48 89 c7             	mov    %rax,%rdi
   13d5e:	ff d2                	call   *%rdx
   13d60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d64:	48 89 82 68 05 00 00 	mov    %rax,0x568(%rdx)
        vkCmdSetScissorWithCount            = PFN_vkCmdSetScissorWithCount( vkGetDeviceProcAddr( device, "vkCmdSetScissorWithCount" ) );
   13d6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d6f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d77:	48 8d 0d 5f 94 01 00 	lea    0x1945f(%rip),%rcx        # 2d1dd <_ZNSt8__detailL19__atomic_spin_countE+0xe29>
   13d7e:	48 89 ce             	mov    %rcx,%rsi
   13d81:	48 89 c7             	mov    %rax,%rdi
   13d84:	ff d2                	call   *%rdx
   13d86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d8a:	48 89 82 70 05 00 00 	mov    %rax,0x570(%rdx)
        vkCmdBindVertexBuffers2             = PFN_vkCmdBindVertexBuffers2( vkGetDeviceProcAddr( device, "vkCmdBindVertexBuffers2" ) );
   13d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d95:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d9d:	48 8d 0d 52 94 01 00 	lea    0x19452(%rip),%rcx        # 2d1f6 <_ZNSt8__detailL19__atomic_spin_countE+0xe42>
   13da4:	48 89 ce             	mov    %rcx,%rsi
   13da7:	48 89 c7             	mov    %rax,%rdi
   13daa:	ff d2                	call   *%rdx
   13dac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13db0:	48 89 82 78 05 00 00 	mov    %rax,0x578(%rdx)
        vkCmdSetDepthTestEnable             = PFN_vkCmdSetDepthTestEnable( vkGetDeviceProcAddr( device, "vkCmdSetDepthTestEnable" ) );
   13db7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dbb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13dbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13dc3:	48 8d 0d 44 94 01 00 	lea    0x19444(%rip),%rcx        # 2d20e <_ZNSt8__detailL19__atomic_spin_countE+0xe5a>
   13dca:	48 89 ce             	mov    %rcx,%rsi
   13dcd:	48 89 c7             	mov    %rax,%rdi
   13dd0:	ff d2                	call   *%rdx
   13dd2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13dd6:	48 89 82 80 05 00 00 	mov    %rax,0x580(%rdx)
        vkCmdSetDepthWriteEnable            = PFN_vkCmdSetDepthWriteEnable( vkGetDeviceProcAddr( device, "vkCmdSetDepthWriteEnable" ) );
   13ddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13de1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13de5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13de9:	48 8d 0d 36 94 01 00 	lea    0x19436(%rip),%rcx        # 2d226 <_ZNSt8__detailL19__atomic_spin_countE+0xe72>
   13df0:	48 89 ce             	mov    %rcx,%rsi
   13df3:	48 89 c7             	mov    %rax,%rdi
   13df6:	ff d2                	call   *%rdx
   13df8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13dfc:	48 89 82 88 05 00 00 	mov    %rax,0x588(%rdx)
        vkCmdSetDepthCompareOp              = PFN_vkCmdSetDepthCompareOp( vkGetDeviceProcAddr( device, "vkCmdSetDepthCompareOp" ) );
   13e03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e07:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13e0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e0f:	48 8d 0d 29 94 01 00 	lea    0x19429(%rip),%rcx        # 2d23f <_ZNSt8__detailL19__atomic_spin_countE+0xe8b>
   13e16:	48 89 ce             	mov    %rcx,%rsi
   13e19:	48 89 c7             	mov    %rax,%rdi
   13e1c:	ff d2                	call   *%rdx
   13e1e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13e22:	48 89 82 90 05 00 00 	mov    %rax,0x590(%rdx)
        vkCmdSetDepthBoundsTestEnable       = PFN_vkCmdSetDepthBoundsTestEnable( vkGetDeviceProcAddr( device, "vkCmdSetDepthBoundsTestEnable" ) );
   13e29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e2d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13e31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e35:	48 8d 0d 1a 94 01 00 	lea    0x1941a(%rip),%rcx        # 2d256 <_ZNSt8__detailL19__atomic_spin_countE+0xea2>
   13e3c:	48 89 ce             	mov    %rcx,%rsi
   13e3f:	48 89 c7             	mov    %rax,%rdi
   13e42:	ff d2                	call   *%rdx
   13e44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13e48:	48 89 82 98 05 00 00 	mov    %rax,0x598(%rdx)
        vkCmdSetStencilTestEnable           = PFN_vkCmdSetStencilTestEnable( vkGetDeviceProcAddr( device, "vkCmdSetStencilTestEnable" ) );
   13e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e53:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13e57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e5b:	48 8d 0d 12 94 01 00 	lea    0x19412(%rip),%rcx        # 2d274 <_ZNSt8__detailL19__atomic_spin_countE+0xec0>
   13e62:	48 89 ce             	mov    %rcx,%rsi
   13e65:	48 89 c7             	mov    %rax,%rdi
   13e68:	ff d2                	call   *%rdx
   13e6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13e6e:	48 89 82 a0 05 00 00 	mov    %rax,0x5a0(%rdx)
        vkCmdSetStencilOp                   = PFN_vkCmdSetStencilOp( vkGetDeviceProcAddr( device, "vkCmdSetStencilOp" ) );
   13e75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e79:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13e7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e81:	48 8d 0d 06 94 01 00 	lea    0x19406(%rip),%rcx        # 2d28e <_ZNSt8__detailL19__atomic_spin_countE+0xeda>
   13e88:	48 89 ce             	mov    %rcx,%rsi
   13e8b:	48 89 c7             	mov    %rax,%rdi
   13e8e:	ff d2                	call   *%rdx
   13e90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13e94:	48 89 82 a8 05 00 00 	mov    %rax,0x5a8(%rdx)
        vkCmdSetRasterizerDiscardEnable     = PFN_vkCmdSetRasterizerDiscardEnable( vkGetDeviceProcAddr( device, "vkCmdSetRasterizerDiscardEnable" ) );
   13e9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e9f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13ea3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ea7:	48 8d 0d f2 93 01 00 	lea    0x193f2(%rip),%rcx        # 2d2a0 <_ZNSt8__detailL19__atomic_spin_countE+0xeec>
   13eae:	48 89 ce             	mov    %rcx,%rsi
   13eb1:	48 89 c7             	mov    %rax,%rdi
   13eb4:	ff d2                	call   *%rdx
   13eb6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13eba:	48 89 82 b0 05 00 00 	mov    %rax,0x5b0(%rdx)
        vkCmdSetDepthBiasEnable             = PFN_vkCmdSetDepthBiasEnable( vkGetDeviceProcAddr( device, "vkCmdSetDepthBiasEnable" ) );
   13ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ec5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13ec9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ecd:	48 8d 0d ec 93 01 00 	lea    0x193ec(%rip),%rcx        # 2d2c0 <_ZNSt8__detailL19__atomic_spin_countE+0xf0c>
   13ed4:	48 89 ce             	mov    %rcx,%rsi
   13ed7:	48 89 c7             	mov    %rax,%rdi
   13eda:	ff d2                	call   *%rdx
   13edc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13ee0:	48 89 82 b8 05 00 00 	mov    %rax,0x5b8(%rdx)
        vkCmdSetPrimitiveRestartEnable      = PFN_vkCmdSetPrimitiveRestartEnable( vkGetDeviceProcAddr( device, "vkCmdSetPrimitiveRestartEnable" ) );
   13ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eeb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13eef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ef3:	48 8d 0d de 93 01 00 	lea    0x193de(%rip),%rcx        # 2d2d8 <_ZNSt8__detailL19__atomic_spin_countE+0xf24>
   13efa:	48 89 ce             	mov    %rcx,%rsi
   13efd:	48 89 c7             	mov    %rax,%rdi
   13f00:	ff d2                	call   *%rdx
   13f02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13f06:	48 89 82 c0 05 00 00 	mov    %rax,0x5c0(%rdx)
        vkGetDeviceBufferMemoryRequirements = PFN_vkGetDeviceBufferMemoryRequirements( vkGetDeviceProcAddr( device, "vkGetDeviceBufferMemoryRequirements" ) );
   13f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f11:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13f15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f19:	48 8d 0d d8 93 01 00 	lea    0x193d8(%rip),%rcx        # 2d2f8 <_ZNSt8__detailL19__atomic_spin_countE+0xf44>
   13f20:	48 89 ce             	mov    %rcx,%rsi
   13f23:	48 89 c7             	mov    %rax,%rdi
   13f26:	ff d2                	call   *%rdx
   13f28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13f2c:	48 89 82 c8 05 00 00 	mov    %rax,0x5c8(%rdx)
        vkGetDeviceImageMemoryRequirements  = PFN_vkGetDeviceImageMemoryRequirements( vkGetDeviceProcAddr( device, "vkGetDeviceImageMemoryRequirements" ) );
   13f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f37:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f3f:	48 8d 0d da 93 01 00 	lea    0x193da(%rip),%rcx        # 2d320 <_ZNSt8__detailL19__atomic_spin_countE+0xf6c>
   13f46:	48 89 ce             	mov    %rcx,%rsi
   13f49:	48 89 c7             	mov    %rax,%rdi
   13f4c:	ff d2                	call   *%rdx
   13f4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13f52:	48 89 82 d0 05 00 00 	mov    %rax,0x5d0(%rdx)
          PFN_vkGetDeviceImageSparseMemoryRequirements( vkGetDeviceProcAddr( device, "vkGetDeviceImageSparseMemoryRequirements" ) );
   13f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f5d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13f61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f65:	48 8d 0d dc 93 01 00 	lea    0x193dc(%rip),%rcx        # 2d348 <_ZNSt8__detailL19__atomic_spin_countE+0xf94>
   13f6c:	48 89 ce             	mov    %rcx,%rsi
   13f6f:	48 89 c7             	mov    %rax,%rdi
   13f72:	ff d2                	call   *%rdx
        vkGetDeviceImageSparseMemoryRequirements =
   13f74:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13f78:	48 89 82 d8 05 00 00 	mov    %rax,0x5d8(%rdx)
        vkCmdWriteBufferMarkerAMD = PFN_vkCmdWriteBufferMarkerAMD( vkGetDeviceProcAddr( device, "vkCmdWriteBufferMarkerAMD" ) );
   13f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f83:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13f87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f8b:	48 8d 0d df 93 01 00 	lea    0x193df(%rip),%rcx        # 2d371 <_ZNSt8__detailL19__atomic_spin_countE+0xfbd>
   13f92:	48 89 ce             	mov    %rcx,%rsi
   13f95:	48 89 c7             	mov    %rax,%rdi
   13f98:	ff d2                	call   *%rdx
   13f9a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13f9e:	48 89 82 e0 05 00 00 	mov    %rax,0x5e0(%rdx)
        vkSetLocalDimmingAMD = PFN_vkSetLocalDimmingAMD( vkGetDeviceProcAddr( device, "vkSetLocalDimmingAMD" ) );
   13fa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fa9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13fad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fb1:	48 8d 0d d3 93 01 00 	lea    0x193d3(%rip),%rcx        # 2d38b <_ZNSt8__detailL19__atomic_spin_countE+0xfd7>
   13fb8:	48 89 ce             	mov    %rcx,%rsi
   13fbb:	48 89 c7             	mov    %rax,%rdi
   13fbe:	ff d2                	call   *%rdx
   13fc0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13fc4:	48 89 82 e8 05 00 00 	mov    %rax,0x5e8(%rdx)
        vkCmdDrawIndirectCountAMD = PFN_vkCmdDrawIndirectCountAMD( vkGetDeviceProcAddr( device, "vkCmdDrawIndirectCountAMD" ) );
   13fcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fcf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13fd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fd7:	48 8d 0d c2 93 01 00 	lea    0x193c2(%rip),%rcx        # 2d3a0 <_ZNSt8__detailL19__atomic_spin_countE+0xfec>
   13fde:	48 89 ce             	mov    %rcx,%rsi
   13fe1:	48 89 c7             	mov    %rax,%rdi
   13fe4:	ff d2                	call   *%rdx
   13fe6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13fea:	48 89 82 f0 05 00 00 	mov    %rax,0x5f0(%rdx)
        if ( !vkCmdDrawIndirectCount )
   13ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ff5:	48 8b 80 58 04 00 00 	mov    0x458(%rax),%rax
   13ffc:	48 85 c0             	test   %rax,%rax
   13fff:	75 16                	jne    14017 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x395b>
          vkCmdDrawIndirectCount = vkCmdDrawIndirectCountAMD;
   14001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14005:	48 8b 90 f0 05 00 00 	mov    0x5f0(%rax),%rdx
   1400c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14010:	48 89 90 58 04 00 00 	mov    %rdx,0x458(%rax)
        vkCmdDrawIndexedIndirectCountAMD = PFN_vkCmdDrawIndexedIndirectCountAMD( vkGetDeviceProcAddr( device, "vkCmdDrawIndexedIndirectCountAMD" ) );
   14017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1401b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1401f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14023:	48 8d 0d 96 93 01 00 	lea    0x19396(%rip),%rcx        # 2d3c0 <_ZNSt8__detailL19__atomic_spin_countE+0x100c>
   1402a:	48 89 ce             	mov    %rcx,%rsi
   1402d:	48 89 c7             	mov    %rax,%rdi
   14030:	ff d2                	call   *%rdx
   14032:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14036:	48 89 82 f8 05 00 00 	mov    %rax,0x5f8(%rdx)
        if ( !vkCmdDrawIndexedIndirectCount )
   1403d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14041:	48 8b 80 60 04 00 00 	mov    0x460(%rax),%rax
   14048:	48 85 c0             	test   %rax,%rax
   1404b:	75 16                	jne    14063 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x39a7>
          vkCmdDrawIndexedIndirectCount = vkCmdDrawIndexedIndirectCountAMD;
   1404d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14051:	48 8b 90 f8 05 00 00 	mov    0x5f8(%rax),%rdx
   14058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1405c:	48 89 90 60 04 00 00 	mov    %rdx,0x460(%rax)
        vkGetShaderInfoAMD = PFN_vkGetShaderInfoAMD( vkGetDeviceProcAddr( device, "vkGetShaderInfoAMD" ) );
   14063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14067:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1406b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1406f:	48 8d 0d 6b 93 01 00 	lea    0x1936b(%rip),%rcx        # 2d3e1 <_ZNSt8__detailL19__atomic_spin_countE+0x102d>
   14076:	48 89 ce             	mov    %rcx,%rsi
   14079:	48 89 c7             	mov    %rax,%rdi
   1407c:	ff d2                	call   *%rdx
   1407e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14082:	48 89 82 00 06 00 00 	mov    %rax,0x600(%rdx)
        vkGetBufferDeviceAddressEXT = PFN_vkGetBufferDeviceAddressEXT( vkGetDeviceProcAddr( device, "vkGetBufferDeviceAddressEXT" ) );
   14089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1408d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14091:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14095:	48 8d 0d 58 93 01 00 	lea    0x19358(%rip),%rcx        # 2d3f4 <_ZNSt8__detailL19__atomic_spin_countE+0x1040>
   1409c:	48 89 ce             	mov    %rcx,%rsi
   1409f:	48 89 c7             	mov    %rax,%rdi
   140a2:	ff d2                	call   *%rdx
   140a4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   140a8:	48 89 82 18 06 00 00 	mov    %rax,0x618(%rdx)
        if ( !vkGetBufferDeviceAddress )
   140af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140b3:	48 8b 80 a8 04 00 00 	mov    0x4a8(%rax),%rax
   140ba:	48 85 c0             	test   %rax,%rax
   140bd:	75 16                	jne    140d5 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3a19>
          vkGetBufferDeviceAddress = vkGetBufferDeviceAddressEXT;
   140bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140c3:	48 8b 90 18 06 00 00 	mov    0x618(%rax),%rdx
   140ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140ce:	48 89 90 a8 04 00 00 	mov    %rdx,0x4a8(%rax)
        vkGetCalibratedTimestampsEXT = PFN_vkGetCalibratedTimestampsEXT( vkGetDeviceProcAddr( device, "vkGetCalibratedTimestampsEXT" ) );
   140d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   140dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140e1:	48 8d 0d 28 93 01 00 	lea    0x19328(%rip),%rcx        # 2d410 <_ZNSt8__detailL19__atomic_spin_countE+0x105c>
   140e8:	48 89 ce             	mov    %rcx,%rsi
   140eb:	48 89 c7             	mov    %rax,%rdi
   140ee:	ff d2                	call   *%rdx
   140f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   140f4:	48 89 82 20 06 00 00 	mov    %rax,0x620(%rdx)
        vkCmdSetColorWriteEnableEXT = PFN_vkCmdSetColorWriteEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetColorWriteEnableEXT" ) );
   140fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140ff:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14107:	48 8d 0d 1f 93 01 00 	lea    0x1931f(%rip),%rcx        # 2d42d <_ZNSt8__detailL19__atomic_spin_countE+0x1079>
   1410e:	48 89 ce             	mov    %rcx,%rsi
   14111:	48 89 c7             	mov    %rax,%rdi
   14114:	ff d2                	call   *%rdx
   14116:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1411a:	48 89 82 28 06 00 00 	mov    %rax,0x628(%rdx)
        vkCmdBeginConditionalRenderingEXT = PFN_vkCmdBeginConditionalRenderingEXT( vkGetDeviceProcAddr( device, "vkCmdBeginConditionalRenderingEXT" ) );
   14121:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14125:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1412d:	48 8d 0d 1c 93 01 00 	lea    0x1931c(%rip),%rcx        # 2d450 <_ZNSt8__detailL19__atomic_spin_countE+0x109c>
   14134:	48 89 ce             	mov    %rcx,%rsi
   14137:	48 89 c7             	mov    %rax,%rdi
   1413a:	ff d2                	call   *%rdx
   1413c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14140:	48 89 82 30 06 00 00 	mov    %rax,0x630(%rdx)
        vkCmdEndConditionalRenderingEXT   = PFN_vkCmdEndConditionalRenderingEXT( vkGetDeviceProcAddr( device, "vkCmdEndConditionalRenderingEXT" ) );
   14147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1414b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1414f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14153:	48 8d 0d 1e 93 01 00 	lea    0x1931e(%rip),%rcx        # 2d478 <_ZNSt8__detailL19__atomic_spin_countE+0x10c4>
   1415a:	48 89 ce             	mov    %rcx,%rsi
   1415d:	48 89 c7             	mov    %rax,%rdi
   14160:	ff d2                	call   *%rdx
   14162:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14166:	48 89 82 38 06 00 00 	mov    %rax,0x638(%rdx)
        vkDebugMarkerSetObjectTagEXT  = PFN_vkDebugMarkerSetObjectTagEXT( vkGetDeviceProcAddr( device, "vkDebugMarkerSetObjectTagEXT" ) );
   1416d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14171:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14179:	48 8d 0d 18 93 01 00 	lea    0x19318(%rip),%rcx        # 2d498 <_ZNSt8__detailL19__atomic_spin_countE+0x10e4>
   14180:	48 89 ce             	mov    %rcx,%rsi
   14183:	48 89 c7             	mov    %rax,%rdi
   14186:	ff d2                	call   *%rdx
   14188:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1418c:	48 89 82 40 06 00 00 	mov    %rax,0x640(%rdx)
        vkDebugMarkerSetObjectNameEXT = PFN_vkDebugMarkerSetObjectNameEXT( vkGetDeviceProcAddr( device, "vkDebugMarkerSetObjectNameEXT" ) );
   14193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14197:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1419b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1419f:	48 8d 0d 0f 93 01 00 	lea    0x1930f(%rip),%rcx        # 2d4b5 <_ZNSt8__detailL19__atomic_spin_countE+0x1101>
   141a6:	48 89 ce             	mov    %rcx,%rsi
   141a9:	48 89 c7             	mov    %rax,%rdi
   141ac:	ff d2                	call   *%rdx
   141ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   141b2:	48 89 82 48 06 00 00 	mov    %rax,0x648(%rdx)
        vkCmdDebugMarkerBeginEXT      = PFN_vkCmdDebugMarkerBeginEXT( vkGetDeviceProcAddr( device, "vkCmdDebugMarkerBeginEXT" ) );
   141b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141bd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   141c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141c5:	48 8d 0d 07 93 01 00 	lea    0x19307(%rip),%rcx        # 2d4d3 <_ZNSt8__detailL19__atomic_spin_countE+0x111f>
   141cc:	48 89 ce             	mov    %rcx,%rsi
   141cf:	48 89 c7             	mov    %rax,%rdi
   141d2:	ff d2                	call   *%rdx
   141d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   141d8:	48 89 82 50 06 00 00 	mov    %rax,0x650(%rdx)
        vkCmdDebugMarkerEndEXT        = PFN_vkCmdDebugMarkerEndEXT( vkGetDeviceProcAddr( device, "vkCmdDebugMarkerEndEXT" ) );
   141df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   141e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141eb:	48 8d 0d fa 92 01 00 	lea    0x192fa(%rip),%rcx        # 2d4ec <_ZNSt8__detailL19__atomic_spin_countE+0x1138>
   141f2:	48 89 ce             	mov    %rcx,%rsi
   141f5:	48 89 c7             	mov    %rax,%rdi
   141f8:	ff d2                	call   *%rdx
   141fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   141fe:	48 89 82 58 06 00 00 	mov    %rax,0x658(%rdx)
        vkCmdDebugMarkerInsertEXT     = PFN_vkCmdDebugMarkerInsertEXT( vkGetDeviceProcAddr( device, "vkCmdDebugMarkerInsertEXT" ) );
   14205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14209:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1420d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14211:	48 8d 0d eb 92 01 00 	lea    0x192eb(%rip),%rcx        # 2d503 <_ZNSt8__detailL19__atomic_spin_countE+0x114f>
   14218:	48 89 ce             	mov    %rcx,%rsi
   1421b:	48 89 c7             	mov    %rax,%rdi
   1421e:	ff d2                	call   *%rdx
   14220:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14224:	48 89 82 60 06 00 00 	mov    %rax,0x660(%rdx)
        vkSetDebugUtilsObjectNameEXT    = PFN_vkSetDebugUtilsObjectNameEXT( vkGetDeviceProcAddr( device, "vkSetDebugUtilsObjectNameEXT" ) );
   1422b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1422f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14233:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14237:	48 8d 0d df 92 01 00 	lea    0x192df(%rip),%rcx        # 2d51d <_ZNSt8__detailL19__atomic_spin_countE+0x1169>
   1423e:	48 89 ce             	mov    %rcx,%rsi
   14241:	48 89 c7             	mov    %rax,%rdi
   14244:	ff d2                	call   *%rdx
   14246:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1424a:	48 89 82 68 06 00 00 	mov    %rax,0x668(%rdx)
        vkSetDebugUtilsObjectTagEXT     = PFN_vkSetDebugUtilsObjectTagEXT( vkGetDeviceProcAddr( device, "vkSetDebugUtilsObjectTagEXT" ) );
   14251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14255:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1425d:	48 8d 0d d6 92 01 00 	lea    0x192d6(%rip),%rcx        # 2d53a <_ZNSt8__detailL19__atomic_spin_countE+0x1186>
   14264:	48 89 ce             	mov    %rcx,%rsi
   14267:	48 89 c7             	mov    %rax,%rdi
   1426a:	ff d2                	call   *%rdx
   1426c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14270:	48 89 82 70 06 00 00 	mov    %rax,0x670(%rdx)
        vkQueueBeginDebugUtilsLabelEXT  = PFN_vkQueueBeginDebugUtilsLabelEXT( vkGetDeviceProcAddr( device, "vkQueueBeginDebugUtilsLabelEXT" ) );
   14277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1427b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1427f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14283:	48 8d 0d ce 92 01 00 	lea    0x192ce(%rip),%rcx        # 2d558 <_ZNSt8__detailL19__atomic_spin_countE+0x11a4>
   1428a:	48 89 ce             	mov    %rcx,%rsi
   1428d:	48 89 c7             	mov    %rax,%rdi
   14290:	ff d2                	call   *%rdx
   14292:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14296:	48 89 82 78 06 00 00 	mov    %rax,0x678(%rdx)
        vkQueueEndDebugUtilsLabelEXT    = PFN_vkQueueEndDebugUtilsLabelEXT( vkGetDeviceProcAddr( device, "vkQueueEndDebugUtilsLabelEXT" ) );
   1429d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   142a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142a9:	48 8d 0d c7 92 01 00 	lea    0x192c7(%rip),%rcx        # 2d577 <_ZNSt8__detailL19__atomic_spin_countE+0x11c3>
   142b0:	48 89 ce             	mov    %rcx,%rsi
   142b3:	48 89 c7             	mov    %rax,%rdi
   142b6:	ff d2                	call   *%rdx
   142b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   142bc:	48 89 82 80 06 00 00 	mov    %rax,0x680(%rdx)
        vkQueueInsertDebugUtilsLabelEXT = PFN_vkQueueInsertDebugUtilsLabelEXT( vkGetDeviceProcAddr( device, "vkQueueInsertDebugUtilsLabelEXT" ) );
   142c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142c7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   142cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142cf:	48 8d 0d c2 92 01 00 	lea    0x192c2(%rip),%rcx        # 2d598 <_ZNSt8__detailL19__atomic_spin_countE+0x11e4>
   142d6:	48 89 ce             	mov    %rcx,%rsi
   142d9:	48 89 c7             	mov    %rax,%rdi
   142dc:	ff d2                	call   *%rdx
   142de:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   142e2:	48 89 82 88 06 00 00 	mov    %rax,0x688(%rdx)
        vkCmdBeginDebugUtilsLabelEXT    = PFN_vkCmdBeginDebugUtilsLabelEXT( vkGetDeviceProcAddr( device, "vkCmdBeginDebugUtilsLabelEXT" ) );
   142e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142ed:	48 8b 50 10          	mov    0x10(%rax),%rdx
   142f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142f5:	48 8d 0d bc 92 01 00 	lea    0x192bc(%rip),%rcx        # 2d5b8 <_ZNSt8__detailL19__atomic_spin_countE+0x1204>
   142fc:	48 89 ce             	mov    %rcx,%rsi
   142ff:	48 89 c7             	mov    %rax,%rdi
   14302:	ff d2                	call   *%rdx
   14304:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14308:	48 89 82 90 06 00 00 	mov    %rax,0x690(%rdx)
        vkCmdEndDebugUtilsLabelEXT      = PFN_vkCmdEndDebugUtilsLabelEXT( vkGetDeviceProcAddr( device, "vkCmdEndDebugUtilsLabelEXT" ) );
   1430f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14313:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14317:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1431b:	48 8d 0d b3 92 01 00 	lea    0x192b3(%rip),%rcx        # 2d5d5 <_ZNSt8__detailL19__atomic_spin_countE+0x1221>
   14322:	48 89 ce             	mov    %rcx,%rsi
   14325:	48 89 c7             	mov    %rax,%rdi
   14328:	ff d2                	call   *%rdx
   1432a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1432e:	48 89 82 98 06 00 00 	mov    %rax,0x698(%rdx)
        vkCmdInsertDebugUtilsLabelEXT   = PFN_vkCmdInsertDebugUtilsLabelEXT( vkGetDeviceProcAddr( device, "vkCmdInsertDebugUtilsLabelEXT" ) );
   14335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14339:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1433d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14341:	48 8d 0d a8 92 01 00 	lea    0x192a8(%rip),%rcx        # 2d5f0 <_ZNSt8__detailL19__atomic_spin_countE+0x123c>
   14348:	48 89 ce             	mov    %rcx,%rsi
   1434b:	48 89 c7             	mov    %rax,%rdi
   1434e:	ff d2                	call   *%rdx
   14350:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14354:	48 89 82 a0 06 00 00 	mov    %rax,0x6a0(%rdx)
        vkGetDeviceFaultInfoEXT = PFN_vkGetDeviceFaultInfoEXT( vkGetDeviceProcAddr( device, "vkGetDeviceFaultInfoEXT" ) );
   1435b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1435f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14363:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14367:	48 8d 0d a0 92 01 00 	lea    0x192a0(%rip),%rcx        # 2d60e <_ZNSt8__detailL19__atomic_spin_countE+0x125a>
   1436e:	48 89 ce             	mov    %rcx,%rsi
   14371:	48 89 c7             	mov    %rax,%rdi
   14374:	ff d2                	call   *%rdx
   14376:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1437a:	48 89 82 a8 06 00 00 	mov    %rax,0x6a8(%rdx)
        vkCmdSetDiscardRectangleEXT = PFN_vkCmdSetDiscardRectangleEXT( vkGetDeviceProcAddr( device, "vkCmdSetDiscardRectangleEXT" ) );
   14381:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14385:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1438d:	48 8d 0d 92 92 01 00 	lea    0x19292(%rip),%rcx        # 2d626 <_ZNSt8__detailL19__atomic_spin_countE+0x1272>
   14394:	48 89 ce             	mov    %rcx,%rsi
   14397:	48 89 c7             	mov    %rax,%rdi
   1439a:	ff d2                	call   *%rdx
   1439c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   143a0:	48 89 82 b0 06 00 00 	mov    %rax,0x6b0(%rdx)
        vkDisplayPowerControlEXT  = PFN_vkDisplayPowerControlEXT( vkGetDeviceProcAddr( device, "vkDisplayPowerControlEXT" ) );
   143a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143ab:	48 8b 50 10          	mov    0x10(%rax),%rdx
   143af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143b3:	48 8d 0d 88 92 01 00 	lea    0x19288(%rip),%rcx        # 2d642 <_ZNSt8__detailL19__atomic_spin_countE+0x128e>
   143ba:	48 89 ce             	mov    %rcx,%rsi
   143bd:	48 89 c7             	mov    %rax,%rdi
   143c0:	ff d2                	call   *%rdx
   143c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   143c6:	48 89 82 b8 06 00 00 	mov    %rax,0x6b8(%rdx)
        vkRegisterDeviceEventEXT  = PFN_vkRegisterDeviceEventEXT( vkGetDeviceProcAddr( device, "vkRegisterDeviceEventEXT" ) );
   143cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143d1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   143d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143d9:	48 8d 0d 7b 92 01 00 	lea    0x1927b(%rip),%rcx        # 2d65b <_ZNSt8__detailL19__atomic_spin_countE+0x12a7>
   143e0:	48 89 ce             	mov    %rcx,%rsi
   143e3:	48 89 c7             	mov    %rax,%rdi
   143e6:	ff d2                	call   *%rdx
   143e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   143ec:	48 89 82 c0 06 00 00 	mov    %rax,0x6c0(%rdx)
        vkRegisterDisplayEventEXT = PFN_vkRegisterDisplayEventEXT( vkGetDeviceProcAddr( device, "vkRegisterDisplayEventEXT" ) );
   143f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143f7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   143fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143ff:	48 8d 0d 6e 92 01 00 	lea    0x1926e(%rip),%rcx        # 2d674 <_ZNSt8__detailL19__atomic_spin_countE+0x12c0>
   14406:	48 89 ce             	mov    %rcx,%rsi
   14409:	48 89 c7             	mov    %rax,%rdi
   1440c:	ff d2                	call   *%rdx
   1440e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14412:	48 89 82 c8 06 00 00 	mov    %rax,0x6c8(%rdx)
        vkGetSwapchainCounterEXT  = PFN_vkGetSwapchainCounterEXT( vkGetDeviceProcAddr( device, "vkGetSwapchainCounterEXT" ) );
   14419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1441d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14425:	48 8d 0d 62 92 01 00 	lea    0x19262(%rip),%rcx        # 2d68e <_ZNSt8__detailL19__atomic_spin_countE+0x12da>
   1442c:	48 89 ce             	mov    %rcx,%rsi
   1442f:	48 89 c7             	mov    %rax,%rdi
   14432:	ff d2                	call   *%rdx
   14434:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14438:	48 89 82 d0 06 00 00 	mov    %rax,0x6d0(%rdx)
        vkCmdSetCullModeEXT = PFN_vkCmdSetCullModeEXT( vkGetDeviceProcAddr( device, "vkCmdSetCullModeEXT" ) );
   1443f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14443:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14447:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1444b:	48 8d 0d 55 92 01 00 	lea    0x19255(%rip),%rcx        # 2d6a7 <_ZNSt8__detailL19__atomic_spin_countE+0x12f3>
   14452:	48 89 ce             	mov    %rcx,%rsi
   14455:	48 89 c7             	mov    %rax,%rdi
   14458:	ff d2                	call   *%rdx
   1445a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1445e:	48 89 82 d8 06 00 00 	mov    %rax,0x6d8(%rdx)
        if ( !vkCmdSetCullMode )
   14465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14469:	48 8b 80 50 05 00 00 	mov    0x550(%rax),%rax
   14470:	48 85 c0             	test   %rax,%rax
   14473:	75 16                	jne    1448b <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3dcf>
          vkCmdSetCullMode = vkCmdSetCullModeEXT;
   14475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14479:	48 8b 90 d8 06 00 00 	mov    0x6d8(%rax),%rdx
   14480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14484:	48 89 90 50 05 00 00 	mov    %rdx,0x550(%rax)
        vkCmdSetFrontFaceEXT = PFN_vkCmdSetFrontFaceEXT( vkGetDeviceProcAddr( device, "vkCmdSetFrontFaceEXT" ) );
   1448b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1448f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14497:	48 8d 0d 1d 92 01 00 	lea    0x1921d(%rip),%rcx        # 2d6bb <_ZNSt8__detailL19__atomic_spin_countE+0x1307>
   1449e:	48 89 ce             	mov    %rcx,%rsi
   144a1:	48 89 c7             	mov    %rax,%rdi
   144a4:	ff d2                	call   *%rdx
   144a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   144aa:	48 89 82 e0 06 00 00 	mov    %rax,0x6e0(%rdx)
        if ( !vkCmdSetFrontFace )
   144b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144b5:	48 8b 80 58 05 00 00 	mov    0x558(%rax),%rax
   144bc:	48 85 c0             	test   %rax,%rax
   144bf:	75 16                	jne    144d7 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3e1b>
          vkCmdSetFrontFace = vkCmdSetFrontFaceEXT;
   144c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144c5:	48 8b 90 e0 06 00 00 	mov    0x6e0(%rax),%rdx
   144cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144d0:	48 89 90 58 05 00 00 	mov    %rdx,0x558(%rax)
        vkCmdSetPrimitiveTopologyEXT = PFN_vkCmdSetPrimitiveTopologyEXT( vkGetDeviceProcAddr( device, "vkCmdSetPrimitiveTopologyEXT" ) );
   144d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144db:	48 8b 50 10          	mov    0x10(%rax),%rdx
   144df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144e3:	48 8d 0d e6 91 01 00 	lea    0x191e6(%rip),%rcx        # 2d6d0 <_ZNSt8__detailL19__atomic_spin_countE+0x131c>
   144ea:	48 89 ce             	mov    %rcx,%rsi
   144ed:	48 89 c7             	mov    %rax,%rdi
   144f0:	ff d2                	call   *%rdx
   144f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   144f6:	48 89 82 e8 06 00 00 	mov    %rax,0x6e8(%rdx)
        if ( !vkCmdSetPrimitiveTopology )
   144fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14501:	48 8b 80 60 05 00 00 	mov    0x560(%rax),%rax
   14508:	48 85 c0             	test   %rax,%rax
   1450b:	75 16                	jne    14523 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3e67>
          vkCmdSetPrimitiveTopology = vkCmdSetPrimitiveTopologyEXT;
   1450d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14511:	48 8b 90 e8 06 00 00 	mov    0x6e8(%rax),%rdx
   14518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1451c:	48 89 90 60 05 00 00 	mov    %rdx,0x560(%rax)
        vkCmdSetViewportWithCountEXT = PFN_vkCmdSetViewportWithCountEXT( vkGetDeviceProcAddr( device, "vkCmdSetViewportWithCountEXT" ) );
   14523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14527:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1452b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1452f:	48 8d 0d b7 91 01 00 	lea    0x191b7(%rip),%rcx        # 2d6ed <_ZNSt8__detailL19__atomic_spin_countE+0x1339>
   14536:	48 89 ce             	mov    %rcx,%rsi
   14539:	48 89 c7             	mov    %rax,%rdi
   1453c:	ff d2                	call   *%rdx
   1453e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14542:	48 89 82 f0 06 00 00 	mov    %rax,0x6f0(%rdx)
        if ( !vkCmdSetViewportWithCount )
   14549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1454d:	48 8b 80 68 05 00 00 	mov    0x568(%rax),%rax
   14554:	48 85 c0             	test   %rax,%rax
   14557:	75 16                	jne    1456f <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3eb3>
          vkCmdSetViewportWithCount = vkCmdSetViewportWithCountEXT;
   14559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1455d:	48 8b 90 f0 06 00 00 	mov    0x6f0(%rax),%rdx
   14564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14568:	48 89 90 68 05 00 00 	mov    %rdx,0x568(%rax)
        vkCmdSetScissorWithCountEXT = PFN_vkCmdSetScissorWithCountEXT( vkGetDeviceProcAddr( device, "vkCmdSetScissorWithCountEXT" ) );
   1456f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14573:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14577:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1457b:	48 8d 0d 88 91 01 00 	lea    0x19188(%rip),%rcx        # 2d70a <_ZNSt8__detailL19__atomic_spin_countE+0x1356>
   14582:	48 89 ce             	mov    %rcx,%rsi
   14585:	48 89 c7             	mov    %rax,%rdi
   14588:	ff d2                	call   *%rdx
   1458a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1458e:	48 89 82 f8 06 00 00 	mov    %rax,0x6f8(%rdx)
        if ( !vkCmdSetScissorWithCount )
   14595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14599:	48 8b 80 70 05 00 00 	mov    0x570(%rax),%rax
   145a0:	48 85 c0             	test   %rax,%rax
   145a3:	75 16                	jne    145bb <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3eff>
          vkCmdSetScissorWithCount = vkCmdSetScissorWithCountEXT;
   145a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145a9:	48 8b 90 f8 06 00 00 	mov    0x6f8(%rax),%rdx
   145b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b4:	48 89 90 70 05 00 00 	mov    %rdx,0x570(%rax)
        vkCmdBindVertexBuffers2EXT = PFN_vkCmdBindVertexBuffers2EXT( vkGetDeviceProcAddr( device, "vkCmdBindVertexBuffers2EXT" ) );
   145bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145bf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   145c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   145c7:	48 8d 0d 58 91 01 00 	lea    0x19158(%rip),%rcx        # 2d726 <_ZNSt8__detailL19__atomic_spin_countE+0x1372>
   145ce:	48 89 ce             	mov    %rcx,%rsi
   145d1:	48 89 c7             	mov    %rax,%rdi
   145d4:	ff d2                	call   *%rdx
   145d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   145da:	48 89 82 00 07 00 00 	mov    %rax,0x700(%rdx)
        if ( !vkCmdBindVertexBuffers2 )
   145e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145e5:	48 8b 80 78 05 00 00 	mov    0x578(%rax),%rax
   145ec:	48 85 c0             	test   %rax,%rax
   145ef:	75 16                	jne    14607 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3f4b>
          vkCmdBindVertexBuffers2 = vkCmdBindVertexBuffers2EXT;
   145f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145f5:	48 8b 90 00 07 00 00 	mov    0x700(%rax),%rdx
   145fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14600:	48 89 90 78 05 00 00 	mov    %rdx,0x578(%rax)
        vkCmdSetDepthTestEnableEXT = PFN_vkCmdSetDepthTestEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthTestEnableEXT" ) );
   14607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1460b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1460f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14613:	48 8d 0d 27 91 01 00 	lea    0x19127(%rip),%rcx        # 2d741 <_ZNSt8__detailL19__atomic_spin_countE+0x138d>
   1461a:	48 89 ce             	mov    %rcx,%rsi
   1461d:	48 89 c7             	mov    %rax,%rdi
   14620:	ff d2                	call   *%rdx
   14622:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14626:	48 89 82 08 07 00 00 	mov    %rax,0x708(%rdx)
        if ( !vkCmdSetDepthTestEnable )
   1462d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14631:	48 8b 80 80 05 00 00 	mov    0x580(%rax),%rax
   14638:	48 85 c0             	test   %rax,%rax
   1463b:	75 16                	jne    14653 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3f97>
          vkCmdSetDepthTestEnable = vkCmdSetDepthTestEnableEXT;
   1463d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14641:	48 8b 90 08 07 00 00 	mov    0x708(%rax),%rdx
   14648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1464c:	48 89 90 80 05 00 00 	mov    %rdx,0x580(%rax)
        vkCmdSetDepthWriteEnableEXT = PFN_vkCmdSetDepthWriteEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthWriteEnableEXT" ) );
   14653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14657:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1465b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1465f:	48 8d 0d f6 90 01 00 	lea    0x190f6(%rip),%rcx        # 2d75c <_ZNSt8__detailL19__atomic_spin_countE+0x13a8>
   14666:	48 89 ce             	mov    %rcx,%rsi
   14669:	48 89 c7             	mov    %rax,%rdi
   1466c:	ff d2                	call   *%rdx
   1466e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14672:	48 89 82 10 07 00 00 	mov    %rax,0x710(%rdx)
        if ( !vkCmdSetDepthWriteEnable )
   14679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1467d:	48 8b 80 88 05 00 00 	mov    0x588(%rax),%rax
   14684:	48 85 c0             	test   %rax,%rax
   14687:	75 16                	jne    1469f <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x3fe3>
          vkCmdSetDepthWriteEnable = vkCmdSetDepthWriteEnableEXT;
   14689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1468d:	48 8b 90 10 07 00 00 	mov    0x710(%rax),%rdx
   14694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14698:	48 89 90 88 05 00 00 	mov    %rdx,0x588(%rax)
        vkCmdSetDepthCompareOpEXT = PFN_vkCmdSetDepthCompareOpEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthCompareOpEXT" ) );
   1469f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146a3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   146a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146ab:	48 8d 0d c6 90 01 00 	lea    0x190c6(%rip),%rcx        # 2d778 <_ZNSt8__detailL19__atomic_spin_countE+0x13c4>
   146b2:	48 89 ce             	mov    %rcx,%rsi
   146b5:	48 89 c7             	mov    %rax,%rdi
   146b8:	ff d2                	call   *%rdx
   146ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   146be:	48 89 82 18 07 00 00 	mov    %rax,0x718(%rdx)
        if ( !vkCmdSetDepthCompareOp )
   146c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146c9:	48 8b 80 90 05 00 00 	mov    0x590(%rax),%rax
   146d0:	48 85 c0             	test   %rax,%rax
   146d3:	75 16                	jne    146eb <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x402f>
          vkCmdSetDepthCompareOp = vkCmdSetDepthCompareOpEXT;
   146d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146d9:	48 8b 90 18 07 00 00 	mov    0x718(%rax),%rdx
   146e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146e4:	48 89 90 90 05 00 00 	mov    %rdx,0x590(%rax)
        vkCmdSetDepthBoundsTestEnableEXT = PFN_vkCmdSetDepthBoundsTestEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthBoundsTestEnableEXT" ) );
   146eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146ef:	48 8b 50 10          	mov    0x10(%rax),%rdx
   146f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146f7:	48 8d 0d 9a 90 01 00 	lea    0x1909a(%rip),%rcx        # 2d798 <_ZNSt8__detailL19__atomic_spin_countE+0x13e4>
   146fe:	48 89 ce             	mov    %rcx,%rsi
   14701:	48 89 c7             	mov    %rax,%rdi
   14704:	ff d2                	call   *%rdx
   14706:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1470a:	48 89 82 20 07 00 00 	mov    %rax,0x720(%rdx)
        if ( !vkCmdSetDepthBoundsTestEnable )
   14711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14715:	48 8b 80 98 05 00 00 	mov    0x598(%rax),%rax
   1471c:	48 85 c0             	test   %rax,%rax
   1471f:	75 16                	jne    14737 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x407b>
          vkCmdSetDepthBoundsTestEnable = vkCmdSetDepthBoundsTestEnableEXT;
   14721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14725:	48 8b 90 20 07 00 00 	mov    0x720(%rax),%rdx
   1472c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14730:	48 89 90 98 05 00 00 	mov    %rdx,0x598(%rax)
        vkCmdSetStencilTestEnableEXT = PFN_vkCmdSetStencilTestEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetStencilTestEnableEXT" ) );
   14737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1473b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1473f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14743:	48 8d 0d 6f 90 01 00 	lea    0x1906f(%rip),%rcx        # 2d7b9 <_ZNSt8__detailL19__atomic_spin_countE+0x1405>
   1474a:	48 89 ce             	mov    %rcx,%rsi
   1474d:	48 89 c7             	mov    %rax,%rdi
   14750:	ff d2                	call   *%rdx
   14752:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14756:	48 89 82 28 07 00 00 	mov    %rax,0x728(%rdx)
        if ( !vkCmdSetStencilTestEnable )
   1475d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14761:	48 8b 80 a0 05 00 00 	mov    0x5a0(%rax),%rax
   14768:	48 85 c0             	test   %rax,%rax
   1476b:	75 16                	jne    14783 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x40c7>
          vkCmdSetStencilTestEnable = vkCmdSetStencilTestEnableEXT;
   1476d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14771:	48 8b 90 28 07 00 00 	mov    0x728(%rax),%rdx
   14778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1477c:	48 89 90 a0 05 00 00 	mov    %rdx,0x5a0(%rax)
        vkCmdSetStencilOpEXT = PFN_vkCmdSetStencilOpEXT( vkGetDeviceProcAddr( device, "vkCmdSetStencilOpEXT" ) );
   14783:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14787:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1478b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1478f:	48 8d 0d 40 90 01 00 	lea    0x19040(%rip),%rcx        # 2d7d6 <_ZNSt8__detailL19__atomic_spin_countE+0x1422>
   14796:	48 89 ce             	mov    %rcx,%rsi
   14799:	48 89 c7             	mov    %rax,%rdi
   1479c:	ff d2                	call   *%rdx
   1479e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   147a2:	48 89 82 30 07 00 00 	mov    %rax,0x730(%rdx)
        if ( !vkCmdSetStencilOp )
   147a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147ad:	48 8b 80 a8 05 00 00 	mov    0x5a8(%rax),%rax
   147b4:	48 85 c0             	test   %rax,%rax
   147b7:	75 16                	jne    147cf <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4113>
          vkCmdSetStencilOp = vkCmdSetStencilOpEXT;
   147b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147bd:	48 8b 90 30 07 00 00 	mov    0x730(%rax),%rdx
   147c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147c8:	48 89 90 a8 05 00 00 	mov    %rdx,0x5a8(%rax)
        vkCmdSetPatchControlPointsEXT      = PFN_vkCmdSetPatchControlPointsEXT( vkGetDeviceProcAddr( device, "vkCmdSetPatchControlPointsEXT" ) );
   147cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147d3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   147d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147db:	48 8d 0d 09 90 01 00 	lea    0x19009(%rip),%rcx        # 2d7eb <_ZNSt8__detailL19__atomic_spin_countE+0x1437>
   147e2:	48 89 ce             	mov    %rcx,%rsi
   147e5:	48 89 c7             	mov    %rax,%rdi
   147e8:	ff d2                	call   *%rdx
   147ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   147ee:	48 89 82 38 07 00 00 	mov    %rax,0x738(%rdx)
        vkCmdSetRasterizerDiscardEnableEXT = PFN_vkCmdSetRasterizerDiscardEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetRasterizerDiscardEnableEXT" ) );
   147f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147f9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   147fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14801:	48 8d 0d 08 90 01 00 	lea    0x19008(%rip),%rcx        # 2d810 <_ZNSt8__detailL19__atomic_spin_countE+0x145c>
   14808:	48 89 ce             	mov    %rcx,%rsi
   1480b:	48 89 c7             	mov    %rax,%rdi
   1480e:	ff d2                	call   *%rdx
   14810:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14814:	48 89 82 40 07 00 00 	mov    %rax,0x740(%rdx)
        if ( !vkCmdSetRasterizerDiscardEnable )
   1481b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1481f:	48 8b 80 b0 05 00 00 	mov    0x5b0(%rax),%rax
   14826:	48 85 c0             	test   %rax,%rax
   14829:	75 16                	jne    14841 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4185>
          vkCmdSetRasterizerDiscardEnable = vkCmdSetRasterizerDiscardEnableEXT;
   1482b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1482f:	48 8b 90 40 07 00 00 	mov    0x740(%rax),%rdx
   14836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1483a:	48 89 90 b0 05 00 00 	mov    %rdx,0x5b0(%rax)
        vkCmdSetDepthBiasEnableEXT = PFN_vkCmdSetDepthBiasEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthBiasEnableEXT" ) );
   14841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14845:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14849:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1484d:	48 8d 0d df 8f 01 00 	lea    0x18fdf(%rip),%rcx        # 2d833 <_ZNSt8__detailL19__atomic_spin_countE+0x147f>
   14854:	48 89 ce             	mov    %rcx,%rsi
   14857:	48 89 c7             	mov    %rax,%rdi
   1485a:	ff d2                	call   *%rdx
   1485c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14860:	48 89 82 48 07 00 00 	mov    %rax,0x748(%rdx)
        if ( !vkCmdSetDepthBiasEnable )
   14867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1486b:	48 8b 80 b8 05 00 00 	mov    0x5b8(%rax),%rax
   14872:	48 85 c0             	test   %rax,%rax
   14875:	75 16                	jne    1488d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x41d1>
          vkCmdSetDepthBiasEnable = vkCmdSetDepthBiasEnableEXT;
   14877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1487b:	48 8b 90 48 07 00 00 	mov    0x748(%rax),%rdx
   14882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14886:	48 89 90 b8 05 00 00 	mov    %rdx,0x5b8(%rax)
        vkCmdSetLogicOpEXT                = PFN_vkCmdSetLogicOpEXT( vkGetDeviceProcAddr( device, "vkCmdSetLogicOpEXT" ) );
   1488d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14891:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14899:	48 8d 0d ae 8f 01 00 	lea    0x18fae(%rip),%rcx        # 2d84e <_ZNSt8__detailL19__atomic_spin_countE+0x149a>
   148a0:	48 89 ce             	mov    %rcx,%rsi
   148a3:	48 89 c7             	mov    %rax,%rdi
   148a6:	ff d2                	call   *%rdx
   148a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   148ac:	48 89 82 50 07 00 00 	mov    %rax,0x750(%rdx)
        vkCmdSetPrimitiveRestartEnableEXT = PFN_vkCmdSetPrimitiveRestartEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetPrimitiveRestartEnableEXT" ) );
   148b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148b7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   148bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148bf:	48 8d 0d a2 8f 01 00 	lea    0x18fa2(%rip),%rcx        # 2d868 <_ZNSt8__detailL19__atomic_spin_countE+0x14b4>
   148c6:	48 89 ce             	mov    %rcx,%rsi
   148c9:	48 89 c7             	mov    %rax,%rdi
   148cc:	ff d2                	call   *%rdx
   148ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   148d2:	48 89 82 58 07 00 00 	mov    %rax,0x758(%rdx)
        if ( !vkCmdSetPrimitiveRestartEnable )
   148d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148dd:	48 8b 80 c0 05 00 00 	mov    0x5c0(%rax),%rax
   148e4:	48 85 c0             	test   %rax,%rax
   148e7:	75 16                	jne    148ff <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4243>
          vkCmdSetPrimitiveRestartEnable = vkCmdSetPrimitiveRestartEnableEXT;
   148e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148ed:	48 8b 90 58 07 00 00 	mov    0x758(%rax),%rdx
   148f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148f8:	48 89 90 c0 05 00 00 	mov    %rdx,0x5c0(%rax)
        vkCmdSetTessellationDomainOriginEXT = PFN_vkCmdSetTessellationDomainOriginEXT( vkGetDeviceProcAddr( device, "vkCmdSetTessellationDomainOriginEXT" ) );
   148ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14903:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14907:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1490b:	48 8d 0d 7e 8f 01 00 	lea    0x18f7e(%rip),%rcx        # 2d890 <_ZNSt8__detailL19__atomic_spin_countE+0x14dc>
   14912:	48 89 ce             	mov    %rcx,%rsi
   14915:	48 89 c7             	mov    %rax,%rdi
   14918:	ff d2                	call   *%rdx
   1491a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1491e:	48 89 82 60 07 00 00 	mov    %rax,0x760(%rdx)
        vkCmdSetDepthClampEnableEXT         = PFN_vkCmdSetDepthClampEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthClampEnableEXT" ) );
   14925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14929:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1492d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14931:	48 8d 0d 7c 8f 01 00 	lea    0x18f7c(%rip),%rcx        # 2d8b4 <_ZNSt8__detailL19__atomic_spin_countE+0x1500>
   14938:	48 89 ce             	mov    %rcx,%rsi
   1493b:	48 89 c7             	mov    %rax,%rdi
   1493e:	ff d2                	call   *%rdx
   14940:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14944:	48 89 82 68 07 00 00 	mov    %rax,0x768(%rdx)
        vkCmdSetPolygonModeEXT              = PFN_vkCmdSetPolygonModeEXT( vkGetDeviceProcAddr( device, "vkCmdSetPolygonModeEXT" ) );
   1494b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1494f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14953:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14957:	48 8d 0d 72 8f 01 00 	lea    0x18f72(%rip),%rcx        # 2d8d0 <_ZNSt8__detailL19__atomic_spin_countE+0x151c>
   1495e:	48 89 ce             	mov    %rcx,%rsi
   14961:	48 89 c7             	mov    %rax,%rdi
   14964:	ff d2                	call   *%rdx
   14966:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1496a:	48 89 82 70 07 00 00 	mov    %rax,0x770(%rdx)
        vkCmdSetRasterizationSamplesEXT     = PFN_vkCmdSetRasterizationSamplesEXT( vkGetDeviceProcAddr( device, "vkCmdSetRasterizationSamplesEXT" ) );
   14971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14975:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14979:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1497d:	48 8d 0d 64 8f 01 00 	lea    0x18f64(%rip),%rcx        # 2d8e8 <_ZNSt8__detailL19__atomic_spin_countE+0x1534>
   14984:	48 89 ce             	mov    %rcx,%rsi
   14987:	48 89 c7             	mov    %rax,%rdi
   1498a:	ff d2                	call   *%rdx
   1498c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14990:	48 89 82 78 07 00 00 	mov    %rax,0x778(%rdx)
        vkCmdSetSampleMaskEXT               = PFN_vkCmdSetSampleMaskEXT( vkGetDeviceProcAddr( device, "vkCmdSetSampleMaskEXT" ) );
   14997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1499b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1499f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149a3:	48 8d 0d 5e 8f 01 00 	lea    0x18f5e(%rip),%rcx        # 2d908 <_ZNSt8__detailL19__atomic_spin_countE+0x1554>
   149aa:	48 89 ce             	mov    %rcx,%rsi
   149ad:	48 89 c7             	mov    %rax,%rdi
   149b0:	ff d2                	call   *%rdx
   149b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   149b6:	48 89 82 80 07 00 00 	mov    %rax,0x780(%rdx)
        vkCmdSetAlphaToCoverageEnableEXT    = PFN_vkCmdSetAlphaToCoverageEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetAlphaToCoverageEnableEXT" ) );
   149bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149c1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   149c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149c9:	48 8d 0d 50 8f 01 00 	lea    0x18f50(%rip),%rcx        # 2d920 <_ZNSt8__detailL19__atomic_spin_countE+0x156c>
   149d0:	48 89 ce             	mov    %rcx,%rsi
   149d3:	48 89 c7             	mov    %rax,%rdi
   149d6:	ff d2                	call   *%rdx
   149d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   149dc:	48 89 82 88 07 00 00 	mov    %rax,0x788(%rdx)
        vkCmdSetAlphaToOneEnableEXT         = PFN_vkCmdSetAlphaToOneEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetAlphaToOneEnableEXT" ) );
   149e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149e7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   149eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149ef:	48 8d 0d 4b 8f 01 00 	lea    0x18f4b(%rip),%rcx        # 2d941 <_ZNSt8__detailL19__atomic_spin_countE+0x158d>
   149f6:	48 89 ce             	mov    %rcx,%rsi
   149f9:	48 89 c7             	mov    %rax,%rdi
   149fc:	ff d2                	call   *%rdx
   149fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a02:	48 89 82 90 07 00 00 	mov    %rax,0x790(%rdx)
        vkCmdSetLogicOpEnableEXT            = PFN_vkCmdSetLogicOpEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetLogicOpEnableEXT" ) );
   14a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a0d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14a11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a15:	48 8d 0d 41 8f 01 00 	lea    0x18f41(%rip),%rcx        # 2d95d <_ZNSt8__detailL19__atomic_spin_countE+0x15a9>
   14a1c:	48 89 ce             	mov    %rcx,%rsi
   14a1f:	48 89 c7             	mov    %rax,%rdi
   14a22:	ff d2                	call   *%rdx
   14a24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a28:	48 89 82 98 07 00 00 	mov    %rax,0x798(%rdx)
        vkCmdSetColorBlendEnableEXT         = PFN_vkCmdSetColorBlendEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetColorBlendEnableEXT" ) );
   14a2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a33:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14a37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a3b:	48 8d 0d 34 8f 01 00 	lea    0x18f34(%rip),%rcx        # 2d976 <_ZNSt8__detailL19__atomic_spin_countE+0x15c2>
   14a42:	48 89 ce             	mov    %rcx,%rsi
   14a45:	48 89 c7             	mov    %rax,%rdi
   14a48:	ff d2                	call   *%rdx
   14a4a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a4e:	48 89 82 a0 07 00 00 	mov    %rax,0x7a0(%rdx)
        vkCmdSetColorBlendEquationEXT       = PFN_vkCmdSetColorBlendEquationEXT( vkGetDeviceProcAddr( device, "vkCmdSetColorBlendEquationEXT" ) );
   14a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a59:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14a5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a61:	48 8d 0d 2a 8f 01 00 	lea    0x18f2a(%rip),%rcx        # 2d992 <_ZNSt8__detailL19__atomic_spin_countE+0x15de>
   14a68:	48 89 ce             	mov    %rcx,%rsi
   14a6b:	48 89 c7             	mov    %rax,%rdi
   14a6e:	ff d2                	call   *%rdx
   14a70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a74:	48 89 82 a8 07 00 00 	mov    %rax,0x7a8(%rdx)
        vkCmdSetColorWriteMaskEXT           = PFN_vkCmdSetColorWriteMaskEXT( vkGetDeviceProcAddr( device, "vkCmdSetColorWriteMaskEXT" ) );
   14a7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a7f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14a83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a87:	48 8d 0d 22 8f 01 00 	lea    0x18f22(%rip),%rcx        # 2d9b0 <_ZNSt8__detailL19__atomic_spin_countE+0x15fc>
   14a8e:	48 89 ce             	mov    %rcx,%rsi
   14a91:	48 89 c7             	mov    %rax,%rdi
   14a94:	ff d2                	call   *%rdx
   14a96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a9a:	48 89 82 b0 07 00 00 	mov    %rax,0x7b0(%rdx)
        vkCmdSetRasterizationStreamEXT      = PFN_vkCmdSetRasterizationStreamEXT( vkGetDeviceProcAddr( device, "vkCmdSetRasterizationStreamEXT" ) );
   14aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14aa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14aad:	48 8d 0d 1c 8f 01 00 	lea    0x18f1c(%rip),%rcx        # 2d9d0 <_ZNSt8__detailL19__atomic_spin_countE+0x161c>
   14ab4:	48 89 ce             	mov    %rcx,%rsi
   14ab7:	48 89 c7             	mov    %rax,%rdi
   14aba:	ff d2                	call   *%rdx
   14abc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ac0:	48 89 82 b8 07 00 00 	mov    %rax,0x7b8(%rdx)
          PFN_vkCmdSetConservativeRasterizationModeEXT( vkGetDeviceProcAddr( device, "vkCmdSetConservativeRasterizationModeEXT" ) );
   14ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14acb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ad3:	48 8d 0d 16 8f 01 00 	lea    0x18f16(%rip),%rcx        # 2d9f0 <_ZNSt8__detailL19__atomic_spin_countE+0x163c>
   14ada:	48 89 ce             	mov    %rcx,%rsi
   14add:	48 89 c7             	mov    %rax,%rdi
   14ae0:	ff d2                	call   *%rdx
        vkCmdSetConservativeRasterizationModeEXT =
   14ae2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ae6:	48 89 82 c0 07 00 00 	mov    %rax,0x7c0(%rdx)
          PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT( vkGetDeviceProcAddr( device, "vkCmdSetExtraPrimitiveOverestimationSizeEXT" ) );
   14aed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14af1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14af5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14af9:	48 8d 0d 20 8f 01 00 	lea    0x18f20(%rip),%rcx        # 2da20 <_ZNSt8__detailL19__atomic_spin_countE+0x166c>
   14b00:	48 89 ce             	mov    %rcx,%rsi
   14b03:	48 89 c7             	mov    %rax,%rdi
   14b06:	ff d2                	call   *%rdx
        vkCmdSetExtraPrimitiveOverestimationSizeEXT =
   14b08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b0c:	48 89 82 c8 07 00 00 	mov    %rax,0x7c8(%rdx)
        vkCmdSetDepthClipEnableEXT       = PFN_vkCmdSetDepthClipEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthClipEnableEXT" ) );
   14b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b17:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14b1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b1f:	48 8d 0d 26 8f 01 00 	lea    0x18f26(%rip),%rcx        # 2da4c <_ZNSt8__detailL19__atomic_spin_countE+0x1698>
   14b26:	48 89 ce             	mov    %rcx,%rsi
   14b29:	48 89 c7             	mov    %rax,%rdi
   14b2c:	ff d2                	call   *%rdx
   14b2e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b32:	48 89 82 d0 07 00 00 	mov    %rax,0x7d0(%rdx)
        vkCmdSetSampleLocationsEnableEXT = PFN_vkCmdSetSampleLocationsEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetSampleLocationsEnableEXT" ) );
   14b39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b3d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14b41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b45:	48 8d 0d 1c 8f 01 00 	lea    0x18f1c(%rip),%rcx        # 2da68 <_ZNSt8__detailL19__atomic_spin_countE+0x16b4>
   14b4c:	48 89 ce             	mov    %rcx,%rsi
   14b4f:	48 89 c7             	mov    %rax,%rdi
   14b52:	ff d2                	call   *%rdx
   14b54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b58:	48 89 82 d8 07 00 00 	mov    %rax,0x7d8(%rdx)
        vkCmdSetColorBlendAdvancedEXT    = PFN_vkCmdSetColorBlendAdvancedEXT( vkGetDeviceProcAddr( device, "vkCmdSetColorBlendAdvancedEXT" ) );
   14b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b63:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14b67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b6b:	48 8d 0d 17 8f 01 00 	lea    0x18f17(%rip),%rcx        # 2da89 <_ZNSt8__detailL19__atomic_spin_countE+0x16d5>
   14b72:	48 89 ce             	mov    %rcx,%rsi
   14b75:	48 89 c7             	mov    %rax,%rdi
   14b78:	ff d2                	call   *%rdx
   14b7a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b7e:	48 89 82 e0 07 00 00 	mov    %rax,0x7e0(%rdx)
        vkCmdSetProvokingVertexModeEXT   = PFN_vkCmdSetProvokingVertexModeEXT( vkGetDeviceProcAddr( device, "vkCmdSetProvokingVertexModeEXT" ) );
   14b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b89:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14b8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b91:	48 8d 0d 10 8f 01 00 	lea    0x18f10(%rip),%rcx        # 2daa8 <_ZNSt8__detailL19__atomic_spin_countE+0x16f4>
   14b98:	48 89 ce             	mov    %rcx,%rsi
   14b9b:	48 89 c7             	mov    %rax,%rdi
   14b9e:	ff d2                	call   *%rdx
   14ba0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ba4:	48 89 82 e8 07 00 00 	mov    %rax,0x7e8(%rdx)
        vkCmdSetLineRasterizationModeEXT = PFN_vkCmdSetLineRasterizationModeEXT( vkGetDeviceProcAddr( device, "vkCmdSetLineRasterizationModeEXT" ) );
   14bab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14baf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bb7:	48 8d 0d 0a 8f 01 00 	lea    0x18f0a(%rip),%rcx        # 2dac8 <_ZNSt8__detailL19__atomic_spin_countE+0x1714>
   14bbe:	48 89 ce             	mov    %rcx,%rsi
   14bc1:	48 89 c7             	mov    %rax,%rdi
   14bc4:	ff d2                	call   *%rdx
   14bc6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14bca:	48 89 82 f0 07 00 00 	mov    %rax,0x7f0(%rdx)
        vkCmdSetLineStippleEnableEXT     = PFN_vkCmdSetLineStippleEnableEXT( vkGetDeviceProcAddr( device, "vkCmdSetLineStippleEnableEXT" ) );
   14bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bd5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14bd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bdd:	48 8d 0d 05 8f 01 00 	lea    0x18f05(%rip),%rcx        # 2dae9 <_ZNSt8__detailL19__atomic_spin_countE+0x1735>
   14be4:	48 89 ce             	mov    %rcx,%rsi
   14be7:	48 89 c7             	mov    %rax,%rdi
   14bea:	ff d2                	call   *%rdx
   14bec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14bf0:	48 89 82 f8 07 00 00 	mov    %rax,0x7f8(%rdx)
          PFN_vkCmdSetDepthClipNegativeOneToOneEXT( vkGetDeviceProcAddr( device, "vkCmdSetDepthClipNegativeOneToOneEXT" ) );
   14bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bfb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14bff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c03:	48 8d 0d fe 8e 01 00 	lea    0x18efe(%rip),%rcx        # 2db08 <_ZNSt8__detailL19__atomic_spin_countE+0x1754>
   14c0a:	48 89 ce             	mov    %rcx,%rsi
   14c0d:	48 89 c7             	mov    %rax,%rdi
   14c10:	ff d2                	call   *%rdx
        vkCmdSetDepthClipNegativeOneToOneEXT =
   14c12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c16:	48 89 82 00 08 00 00 	mov    %rax,0x800(%rdx)
        vkCmdSetViewportWScalingEnableNV  = PFN_vkCmdSetViewportWScalingEnableNV( vkGetDeviceProcAddr( device, "vkCmdSetViewportWScalingEnableNV" ) );
   14c1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c21:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14c25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c29:	48 8d 0d 00 8f 01 00 	lea    0x18f00(%rip),%rcx        # 2db30 <_ZNSt8__detailL19__atomic_spin_countE+0x177c>
   14c30:	48 89 ce             	mov    %rcx,%rsi
   14c33:	48 89 c7             	mov    %rax,%rdi
   14c36:	ff d2                	call   *%rdx
   14c38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c3c:	48 89 82 08 08 00 00 	mov    %rax,0x808(%rdx)
        vkCmdSetViewportSwizzleNV         = PFN_vkCmdSetViewportSwizzleNV( vkGetDeviceProcAddr( device, "vkCmdSetViewportSwizzleNV" ) );
   14c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c47:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14c4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c4f:	48 8d 0d fb 8e 01 00 	lea    0x18efb(%rip),%rcx        # 2db51 <_ZNSt8__detailL19__atomic_spin_countE+0x179d>
   14c56:	48 89 ce             	mov    %rcx,%rsi
   14c59:	48 89 c7             	mov    %rax,%rdi
   14c5c:	ff d2                	call   *%rdx
   14c5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c62:	48 89 82 10 08 00 00 	mov    %rax,0x810(%rdx)
        vkCmdSetCoverageToColorEnableNV   = PFN_vkCmdSetCoverageToColorEnableNV( vkGetDeviceProcAddr( device, "vkCmdSetCoverageToColorEnableNV" ) );
   14c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c6d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14c71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c75:	48 8d 0d f4 8e 01 00 	lea    0x18ef4(%rip),%rcx        # 2db70 <_ZNSt8__detailL19__atomic_spin_countE+0x17bc>
   14c7c:	48 89 ce             	mov    %rcx,%rsi
   14c7f:	48 89 c7             	mov    %rax,%rdi
   14c82:	ff d2                	call   *%rdx
   14c84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c88:	48 89 82 18 08 00 00 	mov    %rax,0x818(%rdx)
        vkCmdSetCoverageToColorLocationNV = PFN_vkCmdSetCoverageToColorLocationNV( vkGetDeviceProcAddr( device, "vkCmdSetCoverageToColorLocationNV" ) );
   14c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c93:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14c97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c9b:	48 8d 0d ee 8e 01 00 	lea    0x18eee(%rip),%rcx        # 2db90 <_ZNSt8__detailL19__atomic_spin_countE+0x17dc>
   14ca2:	48 89 ce             	mov    %rcx,%rsi
   14ca5:	48 89 c7             	mov    %rax,%rdi
   14ca8:	ff d2                	call   *%rdx
   14caa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14cae:	48 89 82 20 08 00 00 	mov    %rax,0x820(%rdx)
        vkCmdSetCoverageModulationModeNV  = PFN_vkCmdSetCoverageModulationModeNV( vkGetDeviceProcAddr( device, "vkCmdSetCoverageModulationModeNV" ) );
   14cb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cb9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14cbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14cc1:	48 8d 0d f0 8e 01 00 	lea    0x18ef0(%rip),%rcx        # 2dbb8 <_ZNSt8__detailL19__atomic_spin_countE+0x1804>
   14cc8:	48 89 ce             	mov    %rcx,%rsi
   14ccb:	48 89 c7             	mov    %rax,%rdi
   14cce:	ff d2                	call   *%rdx
   14cd0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14cd4:	48 89 82 28 08 00 00 	mov    %rax,0x828(%rdx)
          PFN_vkCmdSetCoverageModulationTableEnableNV( vkGetDeviceProcAddr( device, "vkCmdSetCoverageModulationTableEnableNV" ) );
   14cdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cdf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14ce3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ce7:	48 8d 0d f2 8e 01 00 	lea    0x18ef2(%rip),%rcx        # 2dbe0 <_ZNSt8__detailL19__atomic_spin_countE+0x182c>
   14cee:	48 89 ce             	mov    %rcx,%rsi
   14cf1:	48 89 c7             	mov    %rax,%rdi
   14cf4:	ff d2                	call   *%rdx
        vkCmdSetCoverageModulationTableEnableNV =
   14cf6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14cfa:	48 89 82 30 08 00 00 	mov    %rax,0x830(%rdx)
        vkCmdSetCoverageModulationTableNV = PFN_vkCmdSetCoverageModulationTableNV( vkGetDeviceProcAddr( device, "vkCmdSetCoverageModulationTableNV" ) );
   14d01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d05:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14d09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d0d:	48 8d 0d f4 8e 01 00 	lea    0x18ef4(%rip),%rcx        # 2dc08 <_ZNSt8__detailL19__atomic_spin_countE+0x1854>
   14d14:	48 89 ce             	mov    %rcx,%rsi
   14d17:	48 89 c7             	mov    %rax,%rdi
   14d1a:	ff d2                	call   *%rdx
   14d1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d20:	48 89 82 38 08 00 00 	mov    %rax,0x838(%rdx)
        vkCmdSetShadingRateImageEnableNV  = PFN_vkCmdSetShadingRateImageEnableNV( vkGetDeviceProcAddr( device, "vkCmdSetShadingRateImageEnableNV" ) );
   14d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d2b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14d2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d33:	48 8d 0d f6 8e 01 00 	lea    0x18ef6(%rip),%rcx        # 2dc30 <_ZNSt8__detailL19__atomic_spin_countE+0x187c>
   14d3a:	48 89 ce             	mov    %rcx,%rsi
   14d3d:	48 89 c7             	mov    %rax,%rdi
   14d40:	ff d2                	call   *%rdx
   14d42:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d46:	48 89 82 40 08 00 00 	mov    %rax,0x840(%rdx)
          PFN_vkCmdSetRepresentativeFragmentTestEnableNV( vkGetDeviceProcAddr( device, "vkCmdSetRepresentativeFragmentTestEnableNV" ) );
   14d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d51:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14d55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d59:	48 8d 0d f8 8e 01 00 	lea    0x18ef8(%rip),%rcx        # 2dc58 <_ZNSt8__detailL19__atomic_spin_countE+0x18a4>
   14d60:	48 89 ce             	mov    %rcx,%rsi
   14d63:	48 89 c7             	mov    %rax,%rdi
   14d66:	ff d2                	call   *%rdx
        vkCmdSetRepresentativeFragmentTestEnableNV =
   14d68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d6c:	48 89 82 48 08 00 00 	mov    %rax,0x848(%rdx)
        vkCmdSetCoverageReductionModeNV = PFN_vkCmdSetCoverageReductionModeNV( vkGetDeviceProcAddr( device, "vkCmdSetCoverageReductionModeNV" ) );
   14d73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d77:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14d7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d7f:	48 8d 0d 02 8f 01 00 	lea    0x18f02(%rip),%rcx        # 2dc88 <_ZNSt8__detailL19__atomic_spin_countE+0x18d4>
   14d86:	48 89 ce             	mov    %rcx,%rsi
   14d89:	48 89 c7             	mov    %rax,%rdi
   14d8c:	ff d2                	call   *%rdx
   14d8e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d92:	48 89 82 50 08 00 00 	mov    %rax,0x850(%rdx)
        vkGetMemoryHostPointerPropertiesEXT = PFN_vkGetMemoryHostPointerPropertiesEXT( vkGetDeviceProcAddr( device, "vkGetMemoryHostPointerPropertiesEXT" ) );
   14d99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d9d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14da1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14da5:	48 8d 0d fc 8e 01 00 	lea    0x18efc(%rip),%rcx        # 2dca8 <_ZNSt8__detailL19__atomic_spin_countE+0x18f4>
   14dac:	48 89 ce             	mov    %rcx,%rsi
   14daf:	48 89 c7             	mov    %rax,%rdi
   14db2:	ff d2                	call   *%rdx
   14db4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14db8:	48 89 82 58 08 00 00 	mov    %rax,0x858(%rdx)
        vkSetHdrMetadataEXT = PFN_vkSetHdrMetadataEXT( vkGetDeviceProcAddr( device, "vkSetHdrMetadataEXT" ) );
   14dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dc3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14dc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14dcb:	48 8d 0d fa 8e 01 00 	lea    0x18efa(%rip),%rcx        # 2dccc <_ZNSt8__detailL19__atomic_spin_countE+0x1918>
   14dd2:	48 89 ce             	mov    %rcx,%rsi
   14dd5:	48 89 c7             	mov    %rax,%rdi
   14dd8:	ff d2                	call   *%rdx
   14dda:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14dde:	48 89 82 78 08 00 00 	mov    %rax,0x878(%rdx)
        vkResetQueryPoolEXT = PFN_vkResetQueryPoolEXT( vkGetDeviceProcAddr( device, "vkResetQueryPoolEXT" ) );
   14de5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14de9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14ded:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14df1:	48 8d 0d e8 8e 01 00 	lea    0x18ee8(%rip),%rcx        # 2dce0 <_ZNSt8__detailL19__atomic_spin_countE+0x192c>
   14df8:	48 89 ce             	mov    %rcx,%rsi
   14dfb:	48 89 c7             	mov    %rax,%rdi
   14dfe:	ff d2                	call   *%rdx
   14e00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14e04:	48 89 82 80 08 00 00 	mov    %rax,0x880(%rdx)
        if ( !vkResetQueryPool )
   14e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e0f:	48 8b 80 88 04 00 00 	mov    0x488(%rax),%rax
   14e16:	48 85 c0             	test   %rax,%rax
   14e19:	75 16                	jne    14e31 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4775>
          vkResetQueryPool = vkResetQueryPoolEXT;
   14e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e1f:	48 8b 90 80 08 00 00 	mov    0x880(%rax),%rdx
   14e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e2a:	48 89 90 88 04 00 00 	mov    %rdx,0x488(%rax)
        vkGetImageSubresourceLayout2EXT = PFN_vkGetImageSubresourceLayout2EXT( vkGetDeviceProcAddr( device, "vkGetImageSubresourceLayout2EXT" ) );
   14e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e35:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14e39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e3d:	48 8d 0d b4 8e 01 00 	lea    0x18eb4(%rip),%rcx        # 2dcf8 <_ZNSt8__detailL19__atomic_spin_countE+0x1944>
   14e44:	48 89 ce             	mov    %rcx,%rsi
   14e47:	48 89 c7             	mov    %rax,%rdi
   14e4a:	ff d2                	call   *%rdx
   14e4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14e50:	48 89 82 88 08 00 00 	mov    %rax,0x888(%rdx)
          PFN_vkGetImageDrmFormatModifierPropertiesEXT( vkGetDeviceProcAddr( device, "vkGetImageDrmFormatModifierPropertiesEXT" ) );
   14e57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e5b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14e5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e63:	48 8d 0d ae 8e 01 00 	lea    0x18eae(%rip),%rcx        # 2dd18 <_ZNSt8__detailL19__atomic_spin_countE+0x1964>
   14e6a:	48 89 ce             	mov    %rcx,%rsi
   14e6d:	48 89 c7             	mov    %rax,%rdi
   14e70:	ff d2                	call   *%rdx
        vkGetImageDrmFormatModifierPropertiesEXT =
   14e72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14e76:	48 89 82 90 08 00 00 	mov    %rax,0x890(%rdx)
        vkCmdSetLineStippleEXT = PFN_vkCmdSetLineStippleEXT( vkGetDeviceProcAddr( device, "vkCmdSetLineStippleEXT" ) );
   14e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e81:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14e85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e89:	48 8d 0d b1 8e 01 00 	lea    0x18eb1(%rip),%rcx        # 2dd41 <_ZNSt8__detailL19__atomic_spin_countE+0x198d>
   14e90:	48 89 ce             	mov    %rcx,%rsi
   14e93:	48 89 c7             	mov    %rax,%rdi
   14e96:	ff d2                	call   *%rdx
   14e98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14e9c:	48 89 82 98 08 00 00 	mov    %rax,0x898(%rdx)
        vkCmdDrawMeshTasksEXT              = PFN_vkCmdDrawMeshTasksEXT( vkGetDeviceProcAddr( device, "vkCmdDrawMeshTasksEXT" ) );
   14ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ea7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14eab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14eaf:	48 8d 0d a2 8e 01 00 	lea    0x18ea2(%rip),%rcx        # 2dd58 <_ZNSt8__detailL19__atomic_spin_countE+0x19a4>
   14eb6:	48 89 ce             	mov    %rcx,%rsi
   14eb9:	48 89 c7             	mov    %rax,%rdi
   14ebc:	ff d2                	call   *%rdx
   14ebe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ec2:	48 89 82 a0 08 00 00 	mov    %rax,0x8a0(%rdx)
        vkCmdDrawMeshTasksIndirectEXT      = PFN_vkCmdDrawMeshTasksIndirectEXT( vkGetDeviceProcAddr( device, "vkCmdDrawMeshTasksIndirectEXT" ) );
   14ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ecd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14ed1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ed5:	48 8d 0d 92 8e 01 00 	lea    0x18e92(%rip),%rcx        # 2dd6e <_ZNSt8__detailL19__atomic_spin_countE+0x19ba>
   14edc:	48 89 ce             	mov    %rcx,%rsi
   14edf:	48 89 c7             	mov    %rax,%rdi
   14ee2:	ff d2                	call   *%rdx
   14ee4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ee8:	48 89 82 a8 08 00 00 	mov    %rax,0x8a8(%rdx)
        vkCmdDrawMeshTasksIndirectCountEXT = PFN_vkCmdDrawMeshTasksIndirectCountEXT( vkGetDeviceProcAddr( device, "vkCmdDrawMeshTasksIndirectCountEXT" ) );
   14eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ef3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14ef7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14efb:	48 8d 0d 8e 8e 01 00 	lea    0x18e8e(%rip),%rcx        # 2dd90 <_ZNSt8__detailL19__atomic_spin_countE+0x19dc>
   14f02:	48 89 ce             	mov    %rcx,%rsi
   14f05:	48 89 c7             	mov    %rax,%rdi
   14f08:	ff d2                	call   *%rdx
   14f0a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14f0e:	48 89 82 b0 08 00 00 	mov    %rax,0x8b0(%rdx)
        vkCmdDrawMultiEXT        = PFN_vkCmdDrawMultiEXT( vkGetDeviceProcAddr( device, "vkCmdDrawMultiEXT" ) );
   14f15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f19:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14f1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f21:	48 8d 0d 8b 8e 01 00 	lea    0x18e8b(%rip),%rcx        # 2ddb3 <_ZNSt8__detailL19__atomic_spin_countE+0x19ff>
   14f28:	48 89 ce             	mov    %rcx,%rsi
   14f2b:	48 89 c7             	mov    %rax,%rdi
   14f2e:	ff d2                	call   *%rdx
   14f30:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14f34:	48 89 82 c0 08 00 00 	mov    %rax,0x8c0(%rdx)
        vkCmdDrawMultiIndexedEXT = PFN_vkCmdDrawMultiIndexedEXT( vkGetDeviceProcAddr( device, "vkCmdDrawMultiIndexedEXT" ) );
   14f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f3f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14f43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f47:	48 8d 0d 77 8e 01 00 	lea    0x18e77(%rip),%rcx        # 2ddc5 <_ZNSt8__detailL19__atomic_spin_countE+0x1a11>
   14f4e:	48 89 ce             	mov    %rcx,%rsi
   14f51:	48 89 c7             	mov    %rax,%rdi
   14f54:	ff d2                	call   *%rdx
   14f56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14f5a:	48 89 82 c8 08 00 00 	mov    %rax,0x8c8(%rdx)
        vkCreateMicromapEXT                 = PFN_vkCreateMicromapEXT( vkGetDeviceProcAddr( device, "vkCreateMicromapEXT" ) );
   14f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f65:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14f69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f6d:	48 8d 0d 6a 8e 01 00 	lea    0x18e6a(%rip),%rcx        # 2ddde <_ZNSt8__detailL19__atomic_spin_countE+0x1a2a>
   14f74:	48 89 ce             	mov    %rcx,%rsi
   14f77:	48 89 c7             	mov    %rax,%rdi
   14f7a:	ff d2                	call   *%rdx
   14f7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14f80:	48 89 82 d0 08 00 00 	mov    %rax,0x8d0(%rdx)
        vkDestroyMicromapEXT                = PFN_vkDestroyMicromapEXT( vkGetDeviceProcAddr( device, "vkDestroyMicromapEXT" ) );
   14f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f8b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14f8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f93:	48 8d 0d 58 8e 01 00 	lea    0x18e58(%rip),%rcx        # 2ddf2 <_ZNSt8__detailL19__atomic_spin_countE+0x1a3e>
   14f9a:	48 89 ce             	mov    %rcx,%rsi
   14f9d:	48 89 c7             	mov    %rax,%rdi
   14fa0:	ff d2                	call   *%rdx
   14fa2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14fa6:	48 89 82 d8 08 00 00 	mov    %rax,0x8d8(%rdx)
        vkCmdBuildMicromapsEXT              = PFN_vkCmdBuildMicromapsEXT( vkGetDeviceProcAddr( device, "vkCmdBuildMicromapsEXT" ) );
   14fad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fb1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14fb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fb9:	48 8d 0d 47 8e 01 00 	lea    0x18e47(%rip),%rcx        # 2de07 <_ZNSt8__detailL19__atomic_spin_countE+0x1a53>
   14fc0:	48 89 ce             	mov    %rcx,%rsi
   14fc3:	48 89 c7             	mov    %rax,%rdi
   14fc6:	ff d2                	call   *%rdx
   14fc8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14fcc:	48 89 82 e0 08 00 00 	mov    %rax,0x8e0(%rdx)
        vkBuildMicromapsEXT                 = PFN_vkBuildMicromapsEXT( vkGetDeviceProcAddr( device, "vkBuildMicromapsEXT" ) );
   14fd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14fdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fdf:	48 8d 0d 38 8e 01 00 	lea    0x18e38(%rip),%rcx        # 2de1e <_ZNSt8__detailL19__atomic_spin_countE+0x1a6a>
   14fe6:	48 89 ce             	mov    %rcx,%rsi
   14fe9:	48 89 c7             	mov    %rax,%rdi
   14fec:	ff d2                	call   *%rdx
   14fee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ff2:	48 89 82 e8 08 00 00 	mov    %rax,0x8e8(%rdx)
        vkCopyMicromapEXT                   = PFN_vkCopyMicromapEXT( vkGetDeviceProcAddr( device, "vkCopyMicromapEXT" ) );
   14ff9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ffd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15001:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15005:	48 8d 0d 26 8e 01 00 	lea    0x18e26(%rip),%rcx        # 2de32 <_ZNSt8__detailL19__atomic_spin_countE+0x1a7e>
   1500c:	48 89 ce             	mov    %rcx,%rsi
   1500f:	48 89 c7             	mov    %rax,%rdi
   15012:	ff d2                	call   *%rdx
   15014:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15018:	48 89 82 f0 08 00 00 	mov    %rax,0x8f0(%rdx)
        vkCopyMicromapToMemoryEXT           = PFN_vkCopyMicromapToMemoryEXT( vkGetDeviceProcAddr( device, "vkCopyMicromapToMemoryEXT" ) );
   1501f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15023:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15027:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1502b:	48 8d 0d 12 8e 01 00 	lea    0x18e12(%rip),%rcx        # 2de44 <_ZNSt8__detailL19__atomic_spin_countE+0x1a90>
   15032:	48 89 ce             	mov    %rcx,%rsi
   15035:	48 89 c7             	mov    %rax,%rdi
   15038:	ff d2                	call   *%rdx
   1503a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1503e:	48 89 82 f8 08 00 00 	mov    %rax,0x8f8(%rdx)
        vkCopyMemoryToMicromapEXT           = PFN_vkCopyMemoryToMicromapEXT( vkGetDeviceProcAddr( device, "vkCopyMemoryToMicromapEXT" ) );
   15045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15049:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1504d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15051:	48 8d 0d 06 8e 01 00 	lea    0x18e06(%rip),%rcx        # 2de5e <_ZNSt8__detailL19__atomic_spin_countE+0x1aaa>
   15058:	48 89 ce             	mov    %rcx,%rsi
   1505b:	48 89 c7             	mov    %rax,%rdi
   1505e:	ff d2                	call   *%rdx
   15060:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15064:	48 89 82 00 09 00 00 	mov    %rax,0x900(%rdx)
        vkWriteMicromapsPropertiesEXT       = PFN_vkWriteMicromapsPropertiesEXT( vkGetDeviceProcAddr( device, "vkWriteMicromapsPropertiesEXT" ) );
   1506b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1506f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15073:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15077:	48 8d 0d fa 8d 01 00 	lea    0x18dfa(%rip),%rcx        # 2de78 <_ZNSt8__detailL19__atomic_spin_countE+0x1ac4>
   1507e:	48 89 ce             	mov    %rcx,%rsi
   15081:	48 89 c7             	mov    %rax,%rdi
   15084:	ff d2                	call   *%rdx
   15086:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1508a:	48 89 82 08 09 00 00 	mov    %rax,0x908(%rdx)
        vkCmdCopyMicromapEXT                = PFN_vkCmdCopyMicromapEXT( vkGetDeviceProcAddr( device, "vkCmdCopyMicromapEXT" ) );
   15091:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15095:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15099:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1509d:	48 8d 0d f2 8d 01 00 	lea    0x18df2(%rip),%rcx        # 2de96 <_ZNSt8__detailL19__atomic_spin_countE+0x1ae2>
   150a4:	48 89 ce             	mov    %rcx,%rsi
   150a7:	48 89 c7             	mov    %rax,%rdi
   150aa:	ff d2                	call   *%rdx
   150ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   150b0:	48 89 82 10 09 00 00 	mov    %rax,0x910(%rdx)
        vkCmdCopyMicromapToMemoryEXT        = PFN_vkCmdCopyMicromapToMemoryEXT( vkGetDeviceProcAddr( device, "vkCmdCopyMicromapToMemoryEXT" ) );
   150b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   150bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   150c3:	48 8d 0d e1 8d 01 00 	lea    0x18de1(%rip),%rcx        # 2deab <_ZNSt8__detailL19__atomic_spin_countE+0x1af7>
   150ca:	48 89 ce             	mov    %rcx,%rsi
   150cd:	48 89 c7             	mov    %rax,%rdi
   150d0:	ff d2                	call   *%rdx
   150d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   150d6:	48 89 82 18 09 00 00 	mov    %rax,0x918(%rdx)
        vkCmdCopyMemoryToMicromapEXT        = PFN_vkCmdCopyMemoryToMicromapEXT( vkGetDeviceProcAddr( device, "vkCmdCopyMemoryToMicromapEXT" ) );
   150dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150e1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   150e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   150e9:	48 8d 0d d8 8d 01 00 	lea    0x18dd8(%rip),%rcx        # 2dec8 <_ZNSt8__detailL19__atomic_spin_countE+0x1b14>
   150f0:	48 89 ce             	mov    %rcx,%rsi
   150f3:	48 89 c7             	mov    %rax,%rdi
   150f6:	ff d2                	call   *%rdx
   150f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   150fc:	48 89 82 20 09 00 00 	mov    %rax,0x920(%rdx)
        vkCmdWriteMicromapsPropertiesEXT    = PFN_vkCmdWriteMicromapsPropertiesEXT( vkGetDeviceProcAddr( device, "vkCmdWriteMicromapsPropertiesEXT" ) );
   15103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15107:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1510b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1510f:	48 8d 0d d2 8d 01 00 	lea    0x18dd2(%rip),%rcx        # 2dee8 <_ZNSt8__detailL19__atomic_spin_countE+0x1b34>
   15116:	48 89 ce             	mov    %rcx,%rsi
   15119:	48 89 c7             	mov    %rax,%rdi
   1511c:	ff d2                	call   *%rdx
   1511e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15122:	48 89 82 28 09 00 00 	mov    %rax,0x928(%rdx)
        vkGetDeviceMicromapCompatibilityEXT = PFN_vkGetDeviceMicromapCompatibilityEXT( vkGetDeviceProcAddr( device, "vkGetDeviceMicromapCompatibilityEXT" ) );
   15129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1512d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15131:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15135:	48 8d 0d d4 8d 01 00 	lea    0x18dd4(%rip),%rcx        # 2df10 <_ZNSt8__detailL19__atomic_spin_countE+0x1b5c>
   1513c:	48 89 ce             	mov    %rcx,%rsi
   1513f:	48 89 c7             	mov    %rax,%rdi
   15142:	ff d2                	call   *%rdx
   15144:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15148:	48 89 82 30 09 00 00 	mov    %rax,0x930(%rdx)
        vkGetMicromapBuildSizesEXT          = PFN_vkGetMicromapBuildSizesEXT( vkGetDeviceProcAddr( device, "vkGetMicromapBuildSizesEXT" ) );
   1514f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15153:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15157:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1515b:	48 8d 0d d2 8d 01 00 	lea    0x18dd2(%rip),%rcx        # 2df34 <_ZNSt8__detailL19__atomic_spin_countE+0x1b80>
   15162:	48 89 ce             	mov    %rcx,%rsi
   15165:	48 89 c7             	mov    %rax,%rdi
   15168:	ff d2                	call   *%rdx
   1516a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1516e:	48 89 82 38 09 00 00 	mov    %rax,0x938(%rdx)
        vkSetDeviceMemoryPriorityEXT = PFN_vkSetDeviceMemoryPriorityEXT( vkGetDeviceProcAddr( device, "vkSetDeviceMemoryPriorityEXT" ) );
   15175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15179:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1517d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15181:	48 8d 0d c7 8d 01 00 	lea    0x18dc7(%rip),%rcx        # 2df4f <_ZNSt8__detailL19__atomic_spin_countE+0x1b9b>
   15188:	48 89 ce             	mov    %rcx,%rsi
   1518b:	48 89 c7             	mov    %rax,%rdi
   1518e:	ff d2                	call   *%rdx
   15190:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15194:	48 89 82 40 09 00 00 	mov    %rax,0x940(%rdx)
        vkGetPipelinePropertiesEXT = PFN_vkGetPipelinePropertiesEXT( vkGetDeviceProcAddr( device, "vkGetPipelinePropertiesEXT" ) );
   1519b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1519f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   151a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151a7:	48 8d 0d be 8d 01 00 	lea    0x18dbe(%rip),%rcx        # 2df6c <_ZNSt8__detailL19__atomic_spin_countE+0x1bb8>
   151ae:	48 89 ce             	mov    %rcx,%rsi
   151b1:	48 89 c7             	mov    %rax,%rdi
   151b4:	ff d2                	call   *%rdx
   151b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   151ba:	48 89 82 48 09 00 00 	mov    %rax,0x948(%rdx)
        vkCreatePrivateDataSlotEXT = PFN_vkCreatePrivateDataSlotEXT( vkGetDeviceProcAddr( device, "vkCreatePrivateDataSlotEXT" ) );
   151c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151c5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   151c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151cd:	48 8d 0d b3 8d 01 00 	lea    0x18db3(%rip),%rcx        # 2df87 <_ZNSt8__detailL19__atomic_spin_countE+0x1bd3>
   151d4:	48 89 ce             	mov    %rcx,%rsi
   151d7:	48 89 c7             	mov    %rax,%rdi
   151da:	ff d2                	call   *%rdx
   151dc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   151e0:	48 89 82 50 09 00 00 	mov    %rax,0x950(%rdx)
        if ( !vkCreatePrivateDataSlot )
   151e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151eb:	48 8b 80 c0 04 00 00 	mov    0x4c0(%rax),%rax
   151f2:	48 85 c0             	test   %rax,%rax
   151f5:	75 16                	jne    1520d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4b51>
          vkCreatePrivateDataSlot = vkCreatePrivateDataSlotEXT;
   151f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151fb:	48 8b 90 50 09 00 00 	mov    0x950(%rax),%rdx
   15202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15206:	48 89 90 c0 04 00 00 	mov    %rdx,0x4c0(%rax)
        vkDestroyPrivateDataSlotEXT = PFN_vkDestroyPrivateDataSlotEXT( vkGetDeviceProcAddr( device, "vkDestroyPrivateDataSlotEXT" ) );
   1520d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15211:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15219:	48 8d 0d 82 8d 01 00 	lea    0x18d82(%rip),%rcx        # 2dfa2 <_ZNSt8__detailL19__atomic_spin_countE+0x1bee>
   15220:	48 89 ce             	mov    %rcx,%rsi
   15223:	48 89 c7             	mov    %rax,%rdi
   15226:	ff d2                	call   *%rdx
   15228:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1522c:	48 89 82 58 09 00 00 	mov    %rax,0x958(%rdx)
        if ( !vkDestroyPrivateDataSlot )
   15233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15237:	48 8b 80 c8 04 00 00 	mov    0x4c8(%rax),%rax
   1523e:	48 85 c0             	test   %rax,%rax
   15241:	75 16                	jne    15259 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4b9d>
          vkDestroyPrivateDataSlot = vkDestroyPrivateDataSlotEXT;
   15243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15247:	48 8b 90 58 09 00 00 	mov    0x958(%rax),%rdx
   1524e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15252:	48 89 90 c8 04 00 00 	mov    %rdx,0x4c8(%rax)
        vkSetPrivateDataEXT = PFN_vkSetPrivateDataEXT( vkGetDeviceProcAddr( device, "vkSetPrivateDataEXT" ) );
   15259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1525d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15261:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15265:	48 8d 0d 52 8d 01 00 	lea    0x18d52(%rip),%rcx        # 2dfbe <_ZNSt8__detailL19__atomic_spin_countE+0x1c0a>
   1526c:	48 89 ce             	mov    %rcx,%rsi
   1526f:	48 89 c7             	mov    %rax,%rdi
   15272:	ff d2                	call   *%rdx
   15274:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15278:	48 89 82 60 09 00 00 	mov    %rax,0x960(%rdx)
        if ( !vkSetPrivateData )
   1527f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15283:	48 8b 80 d0 04 00 00 	mov    0x4d0(%rax),%rax
   1528a:	48 85 c0             	test   %rax,%rax
   1528d:	75 16                	jne    152a5 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4be9>
          vkSetPrivateData = vkSetPrivateDataEXT;
   1528f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15293:	48 8b 90 60 09 00 00 	mov    0x960(%rax),%rdx
   1529a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1529e:	48 89 90 d0 04 00 00 	mov    %rdx,0x4d0(%rax)
        vkGetPrivateDataEXT = PFN_vkGetPrivateDataEXT( vkGetDeviceProcAddr( device, "vkGetPrivateDataEXT" ) );
   152a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152a9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   152ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152b1:	48 8d 0d 1a 8d 01 00 	lea    0x18d1a(%rip),%rcx        # 2dfd2 <_ZNSt8__detailL19__atomic_spin_countE+0x1c1e>
   152b8:	48 89 ce             	mov    %rcx,%rsi
   152bb:	48 89 c7             	mov    %rax,%rdi
   152be:	ff d2                	call   *%rdx
   152c0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   152c4:	48 89 82 68 09 00 00 	mov    %rax,0x968(%rdx)
        if ( !vkGetPrivateData )
   152cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152cf:	48 8b 80 d8 04 00 00 	mov    0x4d8(%rax),%rax
   152d6:	48 85 c0             	test   %rax,%rax
   152d9:	75 16                	jne    152f1 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x4c35>
          vkGetPrivateData = vkGetPrivateDataEXT;
   152db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152df:	48 8b 90 68 09 00 00 	mov    0x968(%rax),%rdx
   152e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152ea:	48 89 90 d8 04 00 00 	mov    %rdx,0x4d8(%rax)
        vkCmdSetSampleLocationsEXT = PFN_vkCmdSetSampleLocationsEXT( vkGetDeviceProcAddr( device, "vkCmdSetSampleLocationsEXT" ) );
   152f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152f5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   152f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152fd:	48 8d 0d e2 8c 01 00 	lea    0x18ce2(%rip),%rcx        # 2dfe6 <_ZNSt8__detailL19__atomic_spin_countE+0x1c32>
   15304:	48 89 ce             	mov    %rcx,%rsi
   15307:	48 89 c7             	mov    %rax,%rdi
   1530a:	ff d2                	call   *%rdx
   1530c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15310:	48 89 82 70 09 00 00 	mov    %rax,0x970(%rdx)
        vkGetShaderModuleIdentifierEXT = PFN_vkGetShaderModuleIdentifierEXT( vkGetDeviceProcAddr( device, "vkGetShaderModuleIdentifierEXT" ) );
   15317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1531b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1531f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15323:	48 8d 0d de 8c 01 00 	lea    0x18cde(%rip),%rcx        # 2e008 <_ZNSt8__detailL19__atomic_spin_countE+0x1c54>
   1532a:	48 89 ce             	mov    %rcx,%rsi
   1532d:	48 89 c7             	mov    %rax,%rdi
   15330:	ff d2                	call   *%rdx
   15332:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15336:	48 89 82 78 09 00 00 	mov    %rax,0x978(%rdx)
          PFN_vkGetShaderModuleCreateInfoIdentifierEXT( vkGetDeviceProcAddr( device, "vkGetShaderModuleCreateInfoIdentifierEXT" ) );
   1533d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15341:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15349:	48 8d 0d d8 8c 01 00 	lea    0x18cd8(%rip),%rcx        # 2e028 <_ZNSt8__detailL19__atomic_spin_countE+0x1c74>
   15350:	48 89 ce             	mov    %rcx,%rsi
   15353:	48 89 c7             	mov    %rax,%rdi
   15356:	ff d2                	call   *%rdx
        vkGetShaderModuleCreateInfoIdentifierEXT =
   15358:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1535c:	48 89 82 80 09 00 00 	mov    %rax,0x980(%rdx)
          PFN_vkCmdBindTransformFeedbackBuffersEXT( vkGetDeviceProcAddr( device, "vkCmdBindTransformFeedbackBuffersEXT" ) );
   15363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15367:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1536b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1536f:	48 8d 0d e2 8c 01 00 	lea    0x18ce2(%rip),%rcx        # 2e058 <_ZNSt8__detailL19__atomic_spin_countE+0x1ca4>
   15376:	48 89 ce             	mov    %rcx,%rsi
   15379:	48 89 c7             	mov    %rax,%rdi
   1537c:	ff d2                	call   *%rdx
        vkCmdBindTransformFeedbackBuffersEXT =
   1537e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15382:	48 89 82 88 09 00 00 	mov    %rax,0x988(%rdx)
        vkCmdBeginTransformFeedbackEXT = PFN_vkCmdBeginTransformFeedbackEXT( vkGetDeviceProcAddr( device, "vkCmdBeginTransformFeedbackEXT" ) );
   15389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1538d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15391:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15395:	48 8d 0d e4 8c 01 00 	lea    0x18ce4(%rip),%rcx        # 2e080 <_ZNSt8__detailL19__atomic_spin_countE+0x1ccc>
   1539c:	48 89 ce             	mov    %rcx,%rsi
   1539f:	48 89 c7             	mov    %rax,%rdi
   153a2:	ff d2                	call   *%rdx
   153a4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   153a8:	48 89 82 90 09 00 00 	mov    %rax,0x990(%rdx)
        vkCmdEndTransformFeedbackEXT   = PFN_vkCmdEndTransformFeedbackEXT( vkGetDeviceProcAddr( device, "vkCmdEndTransformFeedbackEXT" ) );
   153af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153b3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   153b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153bb:	48 8d 0d dd 8c 01 00 	lea    0x18cdd(%rip),%rcx        # 2e09f <_ZNSt8__detailL19__atomic_spin_countE+0x1ceb>
   153c2:	48 89 ce             	mov    %rcx,%rsi
   153c5:	48 89 c7             	mov    %rax,%rdi
   153c8:	ff d2                	call   *%rdx
   153ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   153ce:	48 89 82 98 09 00 00 	mov    %rax,0x998(%rdx)
        vkCmdBeginQueryIndexedEXT      = PFN_vkCmdBeginQueryIndexedEXT( vkGetDeviceProcAddr( device, "vkCmdBeginQueryIndexedEXT" ) );
   153d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   153dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153e1:	48 8d 0d d4 8c 01 00 	lea    0x18cd4(%rip),%rcx        # 2e0bc <_ZNSt8__detailL19__atomic_spin_countE+0x1d08>
   153e8:	48 89 ce             	mov    %rcx,%rsi
   153eb:	48 89 c7             	mov    %rax,%rdi
   153ee:	ff d2                	call   *%rdx
   153f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   153f4:	48 89 82 a0 09 00 00 	mov    %rax,0x9a0(%rdx)
        vkCmdEndQueryIndexedEXT        = PFN_vkCmdEndQueryIndexedEXT( vkGetDeviceProcAddr( device, "vkCmdEndQueryIndexedEXT" ) );
   153fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ff:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15403:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15407:	48 8d 0d c8 8c 01 00 	lea    0x18cc8(%rip),%rcx        # 2e0d6 <_ZNSt8__detailL19__atomic_spin_countE+0x1d22>
   1540e:	48 89 ce             	mov    %rcx,%rsi
   15411:	48 89 c7             	mov    %rax,%rdi
   15414:	ff d2                	call   *%rdx
   15416:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1541a:	48 89 82 a8 09 00 00 	mov    %rax,0x9a8(%rdx)
        vkCmdDrawIndirectByteCountEXT  = PFN_vkCmdDrawIndirectByteCountEXT( vkGetDeviceProcAddr( device, "vkCmdDrawIndirectByteCountEXT" ) );
   15421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15425:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1542d:	48 8d 0d ba 8c 01 00 	lea    0x18cba(%rip),%rcx        # 2e0ee <_ZNSt8__detailL19__atomic_spin_countE+0x1d3a>
   15434:	48 89 ce             	mov    %rcx,%rsi
   15437:	48 89 c7             	mov    %rax,%rdi
   1543a:	ff d2                	call   *%rdx
   1543c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15440:	48 89 82 b0 09 00 00 	mov    %rax,0x9b0(%rdx)
        vkCreateValidationCacheEXT  = PFN_vkCreateValidationCacheEXT( vkGetDeviceProcAddr( device, "vkCreateValidationCacheEXT" ) );
   15447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1544b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1544f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15453:	48 8d 0d b2 8c 01 00 	lea    0x18cb2(%rip),%rcx        # 2e10c <_ZNSt8__detailL19__atomic_spin_countE+0x1d58>
   1545a:	48 89 ce             	mov    %rcx,%rsi
   1545d:	48 89 c7             	mov    %rax,%rdi
   15460:	ff d2                	call   *%rdx
   15462:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15466:	48 89 82 b8 09 00 00 	mov    %rax,0x9b8(%rdx)
        vkDestroyValidationCacheEXT = PFN_vkDestroyValidationCacheEXT( vkGetDeviceProcAddr( device, "vkDestroyValidationCacheEXT" ) );
   1546d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15471:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15479:	48 8d 0d a7 8c 01 00 	lea    0x18ca7(%rip),%rcx        # 2e127 <_ZNSt8__detailL19__atomic_spin_countE+0x1d73>
   15480:	48 89 ce             	mov    %rcx,%rsi
   15483:	48 89 c7             	mov    %rax,%rdi
   15486:	ff d2                	call   *%rdx
   15488:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1548c:	48 89 82 c0 09 00 00 	mov    %rax,0x9c0(%rdx)
        vkMergeValidationCachesEXT  = PFN_vkMergeValidationCachesEXT( vkGetDeviceProcAddr( device, "vkMergeValidationCachesEXT" ) );
   15493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15497:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1549b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1549f:	48 8d 0d 9d 8c 01 00 	lea    0x18c9d(%rip),%rcx        # 2e143 <_ZNSt8__detailL19__atomic_spin_countE+0x1d8f>
   154a6:	48 89 ce             	mov    %rcx,%rsi
   154a9:	48 89 c7             	mov    %rax,%rdi
   154ac:	ff d2                	call   *%rdx
   154ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   154b2:	48 89 82 c8 09 00 00 	mov    %rax,0x9c8(%rdx)
        vkGetValidationCacheDataEXT = PFN_vkGetValidationCacheDataEXT( vkGetDeviceProcAddr( device, "vkGetValidationCacheDataEXT" ) );
   154b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154bd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   154c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154c5:	48 8d 0d 92 8c 01 00 	lea    0x18c92(%rip),%rcx        # 2e15e <_ZNSt8__detailL19__atomic_spin_countE+0x1daa>
   154cc:	48 89 ce             	mov    %rcx,%rsi
   154cf:	48 89 c7             	mov    %rax,%rdi
   154d2:	ff d2                	call   *%rdx
   154d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   154d8:	48 89 82 d0 09 00 00 	mov    %rax,0x9d0(%rdx)
        vkCmdSetVertexInputEXT = PFN_vkCmdSetVertexInputEXT( vkGetDeviceProcAddr( device, "vkCmdSetVertexInputEXT" ) );
   154df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   154e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154eb:	48 8d 0d 88 8c 01 00 	lea    0x18c88(%rip),%rcx        # 2e17a <_ZNSt8__detailL19__atomic_spin_countE+0x1dc6>
   154f2:	48 89 ce             	mov    %rcx,%rsi
   154f5:	48 89 c7             	mov    %rax,%rdi
   154f8:	ff d2                	call   *%rdx
   154fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   154fe:	48 89 82 d8 09 00 00 	mov    %rax,0x9d8(%rdx)
        vkGetRefreshCycleDurationGOOGLE   = PFN_vkGetRefreshCycleDurationGOOGLE( vkGetDeviceProcAddr( device, "vkGetRefreshCycleDurationGOOGLE" ) );
   15505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15509:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1550d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15511:	48 8d 0d 80 8c 01 00 	lea    0x18c80(%rip),%rcx        # 2e198 <_ZNSt8__detailL19__atomic_spin_countE+0x1de4>
   15518:	48 89 ce             	mov    %rcx,%rsi
   1551b:	48 89 c7             	mov    %rax,%rdi
   1551e:	ff d2                	call   *%rdx
   15520:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15524:	48 89 82 28 0a 00 00 	mov    %rax,0xa28(%rdx)
        vkGetPastPresentationTimingGOOGLE = PFN_vkGetPastPresentationTimingGOOGLE( vkGetDeviceProcAddr( device, "vkGetPastPresentationTimingGOOGLE" ) );
   1552b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1552f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15537:	48 8d 0d 7a 8c 01 00 	lea    0x18c7a(%rip),%rcx        # 2e1b8 <_ZNSt8__detailL19__atomic_spin_countE+0x1e04>
   1553e:	48 89 ce             	mov    %rcx,%rsi
   15541:	48 89 c7             	mov    %rax,%rdi
   15544:	ff d2                	call   *%rdx
   15546:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1554a:	48 89 82 30 0a 00 00 	mov    %rax,0xa30(%rdx)
        vkCmdBindInvocationMaskHUAWEI = PFN_vkCmdBindInvocationMaskHUAWEI( vkGetDeviceProcAddr( device, "vkCmdBindInvocationMaskHUAWEI" ) );
   15551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15555:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15559:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1555d:	48 8d 0d 76 8c 01 00 	lea    0x18c76(%rip),%rcx        # 2e1da <_ZNSt8__detailL19__atomic_spin_countE+0x1e26>
   15564:	48 89 ce             	mov    %rcx,%rsi
   15567:	48 89 c7             	mov    %rax,%rdi
   1556a:	ff d2                	call   *%rdx
   1556c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15570:	48 89 82 38 0a 00 00 	mov    %rax,0xa38(%rdx)
          PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI( vkGetDeviceProcAddr( device, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI" ) );
   15577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1557b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1557f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15583:	48 8d 0d 6e 8c 01 00 	lea    0x18c6e(%rip),%rcx        # 2e1f8 <_ZNSt8__detailL19__atomic_spin_countE+0x1e44>
   1558a:	48 89 ce             	mov    %rcx,%rsi
   1558d:	48 89 c7             	mov    %rax,%rdi
   15590:	ff d2                	call   *%rdx
        vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI =
   15592:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15596:	48 89 82 40 0a 00 00 	mov    %rax,0xa40(%rdx)
        vkCmdSubpassShadingHUAWEI = PFN_vkCmdSubpassShadingHUAWEI( vkGetDeviceProcAddr( device, "vkCmdSubpassShadingHUAWEI" ) );
   1559d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   155a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155a9:	48 8d 0d 78 8c 01 00 	lea    0x18c78(%rip),%rcx        # 2e228 <_ZNSt8__detailL19__atomic_spin_countE+0x1e74>
   155b0:	48 89 ce             	mov    %rcx,%rsi
   155b3:	48 89 c7             	mov    %rax,%rdi
   155b6:	ff d2                	call   *%rdx
   155b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   155bc:	48 89 82 48 0a 00 00 	mov    %rax,0xa48(%rdx)
        vkInitializePerformanceApiINTEL   = PFN_vkInitializePerformanceApiINTEL( vkGetDeviceProcAddr( device, "vkInitializePerformanceApiINTEL" ) );
   155c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155c7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   155cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155cf:	48 8d 0d 72 8c 01 00 	lea    0x18c72(%rip),%rcx        # 2e248 <_ZNSt8__detailL19__atomic_spin_countE+0x1e94>
   155d6:	48 89 ce             	mov    %rcx,%rsi
   155d9:	48 89 c7             	mov    %rax,%rdi
   155dc:	ff d2                	call   *%rdx
   155de:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   155e2:	48 89 82 50 0a 00 00 	mov    %rax,0xa50(%rdx)
        vkUninitializePerformanceApiINTEL = PFN_vkUninitializePerformanceApiINTEL( vkGetDeviceProcAddr( device, "vkUninitializePerformanceApiINTEL" ) );
   155e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155ed:	48 8b 50 10          	mov    0x10(%rax),%rdx
   155f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155f5:	48 8d 0d 6c 8c 01 00 	lea    0x18c6c(%rip),%rcx        # 2e268 <_ZNSt8__detailL19__atomic_spin_countE+0x1eb4>
   155fc:	48 89 ce             	mov    %rcx,%rsi
   155ff:	48 89 c7             	mov    %rax,%rdi
   15602:	ff d2                	call   *%rdx
   15604:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15608:	48 89 82 58 0a 00 00 	mov    %rax,0xa58(%rdx)
        vkCmdSetPerformanceMarkerINTEL    = PFN_vkCmdSetPerformanceMarkerINTEL( vkGetDeviceProcAddr( device, "vkCmdSetPerformanceMarkerINTEL" ) );
   1560f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15613:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15617:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1561b:	48 8d 0d 6e 8c 01 00 	lea    0x18c6e(%rip),%rcx        # 2e290 <_ZNSt8__detailL19__atomic_spin_countE+0x1edc>
   15622:	48 89 ce             	mov    %rcx,%rsi
   15625:	48 89 c7             	mov    %rax,%rdi
   15628:	ff d2                	call   *%rdx
   1562a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1562e:	48 89 82 60 0a 00 00 	mov    %rax,0xa60(%rdx)
          PFN_vkCmdSetPerformanceStreamMarkerINTEL( vkGetDeviceProcAddr( device, "vkCmdSetPerformanceStreamMarkerINTEL" ) );
   15635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15639:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1563d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15641:	48 8d 0d 68 8c 01 00 	lea    0x18c68(%rip),%rcx        # 2e2b0 <_ZNSt8__detailL19__atomic_spin_countE+0x1efc>
   15648:	48 89 ce             	mov    %rcx,%rsi
   1564b:	48 89 c7             	mov    %rax,%rdi
   1564e:	ff d2                	call   *%rdx
        vkCmdSetPerformanceStreamMarkerINTEL =
   15650:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15654:	48 89 82 68 0a 00 00 	mov    %rax,0xa68(%rdx)
        vkCmdSetPerformanceOverrideINTEL = PFN_vkCmdSetPerformanceOverrideINTEL( vkGetDeviceProcAddr( device, "vkCmdSetPerformanceOverrideINTEL" ) );
   1565b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1565f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15667:	48 8d 0d 6a 8c 01 00 	lea    0x18c6a(%rip),%rcx        # 2e2d8 <_ZNSt8__detailL19__atomic_spin_countE+0x1f24>
   1566e:	48 89 ce             	mov    %rcx,%rsi
   15671:	48 89 c7             	mov    %rax,%rdi
   15674:	ff d2                	call   *%rdx
   15676:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1567a:	48 89 82 70 0a 00 00 	mov    %rax,0xa70(%rdx)
          PFN_vkAcquirePerformanceConfigurationINTEL( vkGetDeviceProcAddr( device, "vkAcquirePerformanceConfigurationINTEL" ) );
   15681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15685:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15689:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1568d:	48 8d 0d 6c 8c 01 00 	lea    0x18c6c(%rip),%rcx        # 2e300 <_ZNSt8__detailL19__atomic_spin_countE+0x1f4c>
   15694:	48 89 ce             	mov    %rcx,%rsi
   15697:	48 89 c7             	mov    %rax,%rdi
   1569a:	ff d2                	call   *%rdx
        vkAcquirePerformanceConfigurationINTEL =
   1569c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   156a0:	48 89 82 78 0a 00 00 	mov    %rax,0xa78(%rdx)
          PFN_vkReleasePerformanceConfigurationINTEL( vkGetDeviceProcAddr( device, "vkReleasePerformanceConfigurationINTEL" ) );
   156a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156ab:	48 8b 50 10          	mov    0x10(%rax),%rdx
   156af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156b3:	48 8d 0d 6e 8c 01 00 	lea    0x18c6e(%rip),%rcx        # 2e328 <_ZNSt8__detailL19__atomic_spin_countE+0x1f74>
   156ba:	48 89 ce             	mov    %rcx,%rsi
   156bd:	48 89 c7             	mov    %rax,%rdi
   156c0:	ff d2                	call   *%rdx
        vkReleasePerformanceConfigurationINTEL =
   156c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   156c6:	48 89 82 80 0a 00 00 	mov    %rax,0xa80(%rdx)
          PFN_vkQueueSetPerformanceConfigurationINTEL( vkGetDeviceProcAddr( device, "vkQueueSetPerformanceConfigurationINTEL" ) );
   156cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156d1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   156d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156d9:	48 8d 0d 70 8c 01 00 	lea    0x18c70(%rip),%rcx        # 2e350 <_ZNSt8__detailL19__atomic_spin_countE+0x1f9c>
   156e0:	48 89 ce             	mov    %rcx,%rsi
   156e3:	48 89 c7             	mov    %rax,%rdi
   156e6:	ff d2                	call   *%rdx
        vkQueueSetPerformanceConfigurationINTEL =
   156e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   156ec:	48 89 82 88 0a 00 00 	mov    %rax,0xa88(%rdx)
        vkGetPerformanceParameterINTEL = PFN_vkGetPerformanceParameterINTEL( vkGetDeviceProcAddr( device, "vkGetPerformanceParameterINTEL" ) );
   156f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156f7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   156fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156ff:	48 8d 0d 72 8c 01 00 	lea    0x18c72(%rip),%rcx        # 2e378 <_ZNSt8__detailL19__atomic_spin_countE+0x1fc4>
   15706:	48 89 ce             	mov    %rcx,%rsi
   15709:	48 89 c7             	mov    %rax,%rdi
   1570c:	ff d2                	call   *%rdx
   1570e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15712:	48 89 82 90 0a 00 00 	mov    %rax,0xa90(%rdx)
        vkCreateAccelerationStructureKHR    = PFN_vkCreateAccelerationStructureKHR( vkGetDeviceProcAddr( device, "vkCreateAccelerationStructureKHR" ) );
   15719:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1571d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15721:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15725:	48 8d 0d 6c 8c 01 00 	lea    0x18c6c(%rip),%rcx        # 2e398 <_ZNSt8__detailL19__atomic_spin_countE+0x1fe4>
   1572c:	48 89 ce             	mov    %rcx,%rsi
   1572f:	48 89 c7             	mov    %rax,%rdi
   15732:	ff d2                	call   *%rdx
   15734:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15738:	48 89 82 98 0a 00 00 	mov    %rax,0xa98(%rdx)
        vkDestroyAccelerationStructureKHR   = PFN_vkDestroyAccelerationStructureKHR( vkGetDeviceProcAddr( device, "vkDestroyAccelerationStructureKHR" ) );
   1573f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15743:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15747:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1574b:	48 8d 0d 6e 8c 01 00 	lea    0x18c6e(%rip),%rcx        # 2e3c0 <_ZNSt8__detailL19__atomic_spin_countE+0x200c>
   15752:	48 89 ce             	mov    %rcx,%rsi
   15755:	48 89 c7             	mov    %rax,%rdi
   15758:	ff d2                	call   *%rdx
   1575a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1575e:	48 89 82 a0 0a 00 00 	mov    %rax,0xaa0(%rdx)
        vkCmdBuildAccelerationStructuresKHR = PFN_vkCmdBuildAccelerationStructuresKHR( vkGetDeviceProcAddr( device, "vkCmdBuildAccelerationStructuresKHR" ) );
   15765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15769:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1576d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15771:	48 8d 0d 70 8c 01 00 	lea    0x18c70(%rip),%rcx        # 2e3e8 <_ZNSt8__detailL19__atomic_spin_countE+0x2034>
   15778:	48 89 ce             	mov    %rcx,%rsi
   1577b:	48 89 c7             	mov    %rax,%rdi
   1577e:	ff d2                	call   *%rdx
   15780:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15784:	48 89 82 a8 0a 00 00 	mov    %rax,0xaa8(%rdx)
          PFN_vkCmdBuildAccelerationStructuresIndirectKHR( vkGetDeviceProcAddr( device, "vkCmdBuildAccelerationStructuresIndirectKHR" ) );
   1578b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1578f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15793:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15797:	48 8d 0d 72 8c 01 00 	lea    0x18c72(%rip),%rcx        # 2e410 <_ZNSt8__detailL19__atomic_spin_countE+0x205c>
   1579e:	48 89 ce             	mov    %rcx,%rsi
   157a1:	48 89 c7             	mov    %rax,%rdi
   157a4:	ff d2                	call   *%rdx
        vkCmdBuildAccelerationStructuresIndirectKHR =
   157a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   157aa:	48 89 82 b0 0a 00 00 	mov    %rax,0xab0(%rdx)
        vkBuildAccelerationStructuresKHR = PFN_vkBuildAccelerationStructuresKHR( vkGetDeviceProcAddr( device, "vkBuildAccelerationStructuresKHR" ) );
   157b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157b5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   157b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157bd:	48 8d 0d 7c 8c 01 00 	lea    0x18c7c(%rip),%rcx        # 2e440 <_ZNSt8__detailL19__atomic_spin_countE+0x208c>
   157c4:	48 89 ce             	mov    %rcx,%rsi
   157c7:	48 89 c7             	mov    %rax,%rdi
   157ca:	ff d2                	call   *%rdx
   157cc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   157d0:	48 89 82 b8 0a 00 00 	mov    %rax,0xab8(%rdx)
        vkCopyAccelerationStructureKHR   = PFN_vkCopyAccelerationStructureKHR( vkGetDeviceProcAddr( device, "vkCopyAccelerationStructureKHR" ) );
   157d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157db:	48 8b 50 10          	mov    0x10(%rax),%rdx
   157df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157e3:	48 8d 0d 7e 8c 01 00 	lea    0x18c7e(%rip),%rcx        # 2e468 <_ZNSt8__detailL19__atomic_spin_countE+0x20b4>
   157ea:	48 89 ce             	mov    %rcx,%rsi
   157ed:	48 89 c7             	mov    %rax,%rdi
   157f0:	ff d2                	call   *%rdx
   157f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   157f6:	48 89 82 c0 0a 00 00 	mov    %rax,0xac0(%rdx)
          PFN_vkCopyAccelerationStructureToMemoryKHR( vkGetDeviceProcAddr( device, "vkCopyAccelerationStructureToMemoryKHR" ) );
   157fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15801:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15809:	48 8d 0d 78 8c 01 00 	lea    0x18c78(%rip),%rcx        # 2e488 <_ZNSt8__detailL19__atomic_spin_countE+0x20d4>
   15810:	48 89 ce             	mov    %rcx,%rsi
   15813:	48 89 c7             	mov    %rax,%rdi
   15816:	ff d2                	call   *%rdx
        vkCopyAccelerationStructureToMemoryKHR =
   15818:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1581c:	48 89 82 c8 0a 00 00 	mov    %rax,0xac8(%rdx)
          PFN_vkCopyMemoryToAccelerationStructureKHR( vkGetDeviceProcAddr( device, "vkCopyMemoryToAccelerationStructureKHR" ) );
   15823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15827:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1582b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1582f:	48 8d 0d 7a 8c 01 00 	lea    0x18c7a(%rip),%rcx        # 2e4b0 <_ZNSt8__detailL19__atomic_spin_countE+0x20fc>
   15836:	48 89 ce             	mov    %rcx,%rsi
   15839:	48 89 c7             	mov    %rax,%rdi
   1583c:	ff d2                	call   *%rdx
        vkCopyMemoryToAccelerationStructureKHR =
   1583e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15842:	48 89 82 d0 0a 00 00 	mov    %rax,0xad0(%rdx)
          PFN_vkWriteAccelerationStructuresPropertiesKHR( vkGetDeviceProcAddr( device, "vkWriteAccelerationStructuresPropertiesKHR" ) );
   15849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1584d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15851:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15855:	48 8d 0d 7c 8c 01 00 	lea    0x18c7c(%rip),%rcx        # 2e4d8 <_ZNSt8__detailL19__atomic_spin_countE+0x2124>
   1585c:	48 89 ce             	mov    %rcx,%rsi
   1585f:	48 89 c7             	mov    %rax,%rdi
   15862:	ff d2                	call   *%rdx
        vkWriteAccelerationStructuresPropertiesKHR =
   15864:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15868:	48 89 82 d8 0a 00 00 	mov    %rax,0xad8(%rdx)
        vkCmdCopyAccelerationStructureKHR = PFN_vkCmdCopyAccelerationStructureKHR( vkGetDeviceProcAddr( device, "vkCmdCopyAccelerationStructureKHR" ) );
   1586f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15873:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15877:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1587b:	48 8d 0d 86 8c 01 00 	lea    0x18c86(%rip),%rcx        # 2e508 <_ZNSt8__detailL19__atomic_spin_countE+0x2154>
   15882:	48 89 ce             	mov    %rcx,%rsi
   15885:	48 89 c7             	mov    %rax,%rdi
   15888:	ff d2                	call   *%rdx
   1588a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1588e:	48 89 82 e0 0a 00 00 	mov    %rax,0xae0(%rdx)
          PFN_vkCmdCopyAccelerationStructureToMemoryKHR( vkGetDeviceProcAddr( device, "vkCmdCopyAccelerationStructureToMemoryKHR" ) );
   15895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15899:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1589d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158a1:	48 8d 0d 88 8c 01 00 	lea    0x18c88(%rip),%rcx        # 2e530 <_ZNSt8__detailL19__atomic_spin_countE+0x217c>
   158a8:	48 89 ce             	mov    %rcx,%rsi
   158ab:	48 89 c7             	mov    %rax,%rdi
   158ae:	ff d2                	call   *%rdx
        vkCmdCopyAccelerationStructureToMemoryKHR =
   158b0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   158b4:	48 89 82 e8 0a 00 00 	mov    %rax,0xae8(%rdx)
          PFN_vkCmdCopyMemoryToAccelerationStructureKHR( vkGetDeviceProcAddr( device, "vkCmdCopyMemoryToAccelerationStructureKHR" ) );
   158bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158bf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   158c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158c7:	48 8d 0d 92 8c 01 00 	lea    0x18c92(%rip),%rcx        # 2e560 <_ZNSt8__detailL19__atomic_spin_countE+0x21ac>
   158ce:	48 89 ce             	mov    %rcx,%rsi
   158d1:	48 89 c7             	mov    %rax,%rdi
   158d4:	ff d2                	call   *%rdx
        vkCmdCopyMemoryToAccelerationStructureKHR =
   158d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   158da:	48 89 82 f0 0a 00 00 	mov    %rax,0xaf0(%rdx)
          PFN_vkGetAccelerationStructureDeviceAddressKHR( vkGetDeviceProcAddr( device, "vkGetAccelerationStructureDeviceAddressKHR" ) );
   158e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158e5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   158e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158ed:	48 8d 0d 9c 8c 01 00 	lea    0x18c9c(%rip),%rcx        # 2e590 <_ZNSt8__detailL19__atomic_spin_countE+0x21dc>
   158f4:	48 89 ce             	mov    %rcx,%rsi
   158f7:	48 89 c7             	mov    %rax,%rdi
   158fa:	ff d2                	call   *%rdx
        vkGetAccelerationStructureDeviceAddressKHR =
   158fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15900:	48 89 82 f8 0a 00 00 	mov    %rax,0xaf8(%rdx)
          PFN_vkCmdWriteAccelerationStructuresPropertiesKHR( vkGetDeviceProcAddr( device, "vkCmdWriteAccelerationStructuresPropertiesKHR" ) );
   15907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1590b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1590f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15913:	48 8d 0d a6 8c 01 00 	lea    0x18ca6(%rip),%rcx        # 2e5c0 <_ZNSt8__detailL19__atomic_spin_countE+0x220c>
   1591a:	48 89 ce             	mov    %rcx,%rsi
   1591d:	48 89 c7             	mov    %rax,%rdi
   15920:	ff d2                	call   *%rdx
        vkCmdWriteAccelerationStructuresPropertiesKHR =
   15922:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15926:	48 89 82 00 0b 00 00 	mov    %rax,0xb00(%rdx)
          PFN_vkGetDeviceAccelerationStructureCompatibilityKHR( vkGetDeviceProcAddr( device, "vkGetDeviceAccelerationStructureCompatibilityKHR" ) );
   1592d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15931:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15939:	48 8d 0d b0 8c 01 00 	lea    0x18cb0(%rip),%rcx        # 2e5f0 <_ZNSt8__detailL19__atomic_spin_countE+0x223c>
   15940:	48 89 ce             	mov    %rcx,%rsi
   15943:	48 89 c7             	mov    %rax,%rdi
   15946:	ff d2                	call   *%rdx
        vkGetDeviceAccelerationStructureCompatibilityKHR =
   15948:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1594c:	48 89 82 08 0b 00 00 	mov    %rax,0xb08(%rdx)
          PFN_vkGetAccelerationStructureBuildSizesKHR( vkGetDeviceProcAddr( device, "vkGetAccelerationStructureBuildSizesKHR" ) );
   15953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15957:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1595b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1595f:	48 8d 0d c2 8c 01 00 	lea    0x18cc2(%rip),%rcx        # 2e628 <_ZNSt8__detailL19__atomic_spin_countE+0x2274>
   15966:	48 89 ce             	mov    %rcx,%rsi
   15969:	48 89 c7             	mov    %rax,%rdi
   1596c:	ff d2                	call   *%rdx
        vkGetAccelerationStructureBuildSizesKHR =
   1596e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15972:	48 89 82 10 0b 00 00 	mov    %rax,0xb10(%rdx)
        vkBindBufferMemory2KHR = PFN_vkBindBufferMemory2KHR( vkGetDeviceProcAddr( device, "vkBindBufferMemory2KHR" ) );
   15979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1597d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15985:	48 8d 0d c4 8c 01 00 	lea    0x18cc4(%rip),%rcx        # 2e650 <_ZNSt8__detailL19__atomic_spin_countE+0x229c>
   1598c:	48 89 ce             	mov    %rcx,%rsi
   1598f:	48 89 c7             	mov    %rax,%rdi
   15992:	ff d2                	call   *%rdx
   15994:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15998:	48 89 82 18 0b 00 00 	mov    %rax,0xb18(%rdx)
        if ( !vkBindBufferMemory2 )
   1599f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159a3:	48 8b 80 d8 03 00 00 	mov    0x3d8(%rax),%rax
   159aa:	48 85 c0             	test   %rax,%rax
   159ad:	75 16                	jne    159c5 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5309>
          vkBindBufferMemory2 = vkBindBufferMemory2KHR;
   159af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b3:	48 8b 90 18 0b 00 00 	mov    0xb18(%rax),%rdx
   159ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159be:	48 89 90 d8 03 00 00 	mov    %rdx,0x3d8(%rax)
        vkBindImageMemory2KHR = PFN_vkBindImageMemory2KHR( vkGetDeviceProcAddr( device, "vkBindImageMemory2KHR" ) );
   159c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159c9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   159cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159d1:	48 8d 0d 8f 8c 01 00 	lea    0x18c8f(%rip),%rcx        # 2e667 <_ZNSt8__detailL19__atomic_spin_countE+0x22b3>
   159d8:	48 89 ce             	mov    %rcx,%rsi
   159db:	48 89 c7             	mov    %rax,%rdi
   159de:	ff d2                	call   *%rdx
   159e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   159e4:	48 89 82 20 0b 00 00 	mov    %rax,0xb20(%rdx)
        if ( !vkBindImageMemory2 )
   159eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159ef:	48 8b 80 e0 03 00 00 	mov    0x3e0(%rax),%rax
   159f6:	48 85 c0             	test   %rax,%rax
   159f9:	75 16                	jne    15a11 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5355>
          vkBindImageMemory2 = vkBindImageMemory2KHR;
   159fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159ff:	48 8b 90 20 0b 00 00 	mov    0xb20(%rax),%rdx
   15a06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a0a:	48 89 90 e0 03 00 00 	mov    %rdx,0x3e0(%rax)
        vkGetBufferDeviceAddressKHR = PFN_vkGetBufferDeviceAddressKHR( vkGetDeviceProcAddr( device, "vkGetBufferDeviceAddressKHR" ) );
   15a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a15:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15a19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a1d:	48 8d 0d 59 8c 01 00 	lea    0x18c59(%rip),%rcx        # 2e67d <_ZNSt8__detailL19__atomic_spin_countE+0x22c9>
   15a24:	48 89 ce             	mov    %rcx,%rsi
   15a27:	48 89 c7             	mov    %rax,%rdi
   15a2a:	ff d2                	call   *%rdx
   15a2c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15a30:	48 89 82 28 0b 00 00 	mov    %rax,0xb28(%rdx)
        if ( !vkGetBufferDeviceAddress )
   15a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a3b:	48 8b 80 a8 04 00 00 	mov    0x4a8(%rax),%rax
   15a42:	48 85 c0             	test   %rax,%rax
   15a45:	75 16                	jne    15a5d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x53a1>
          vkGetBufferDeviceAddress = vkGetBufferDeviceAddressKHR;
   15a47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a4b:	48 8b 90 28 0b 00 00 	mov    0xb28(%rax),%rdx
   15a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a56:	48 89 90 a8 04 00 00 	mov    %rdx,0x4a8(%rax)
        vkGetBufferOpaqueCaptureAddressKHR = PFN_vkGetBufferOpaqueCaptureAddressKHR( vkGetDeviceProcAddr( device, "vkGetBufferOpaqueCaptureAddressKHR" ) );
   15a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a61:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15a65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a69:	48 8d 0d 30 8c 01 00 	lea    0x18c30(%rip),%rcx        # 2e6a0 <_ZNSt8__detailL19__atomic_spin_countE+0x22ec>
   15a70:	48 89 ce             	mov    %rcx,%rsi
   15a73:	48 89 c7             	mov    %rax,%rdi
   15a76:	ff d2                	call   *%rdx
   15a78:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15a7c:	48 89 82 30 0b 00 00 	mov    %rax,0xb30(%rdx)
        if ( !vkGetBufferOpaqueCaptureAddress )
   15a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a87:	48 8b 80 b0 04 00 00 	mov    0x4b0(%rax),%rax
   15a8e:	48 85 c0             	test   %rax,%rax
   15a91:	75 16                	jne    15aa9 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x53ed>
          vkGetBufferOpaqueCaptureAddress = vkGetBufferOpaqueCaptureAddressKHR;
   15a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a97:	48 8b 90 30 0b 00 00 	mov    0xb30(%rax),%rdx
   15a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aa2:	48 89 90 b0 04 00 00 	mov    %rdx,0x4b0(%rax)
          PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR( vkGetDeviceProcAddr( device, "vkGetDeviceMemoryOpaqueCaptureAddressKHR" ) );
   15aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aad:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15ab1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ab5:	48 8d 0d 0c 8c 01 00 	lea    0x18c0c(%rip),%rcx        # 2e6c8 <_ZNSt8__detailL19__atomic_spin_countE+0x2314>
   15abc:	48 89 ce             	mov    %rcx,%rsi
   15abf:	48 89 c7             	mov    %rax,%rdi
   15ac2:	ff d2                	call   *%rdx
        vkGetDeviceMemoryOpaqueCaptureAddressKHR =
   15ac4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ac8:	48 89 82 38 0b 00 00 	mov    %rax,0xb38(%rdx)
        if ( !vkGetDeviceMemoryOpaqueCaptureAddress )
   15acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ad3:	48 8b 80 b8 04 00 00 	mov    0x4b8(%rax),%rax
   15ada:	48 85 c0             	test   %rax,%rax
   15add:	75 16                	jne    15af5 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5439>
          vkGetDeviceMemoryOpaqueCaptureAddress = vkGetDeviceMemoryOpaqueCaptureAddressKHR;
   15adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ae3:	48 8b 90 38 0b 00 00 	mov    0xb38(%rax),%rdx
   15aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aee:	48 89 90 b8 04 00 00 	mov    %rdx,0x4b8(%rax)
        vkCmdCopyBuffer2KHR = PFN_vkCmdCopyBuffer2KHR( vkGetDeviceProcAddr( device, "vkCmdCopyBuffer2KHR" ) );
   15af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15af9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b01:	48 8d 0d e9 8b 01 00 	lea    0x18be9(%rip),%rcx        # 2e6f1 <_ZNSt8__detailL19__atomic_spin_countE+0x233d>
   15b08:	48 89 ce             	mov    %rcx,%rsi
   15b0b:	48 89 c7             	mov    %rax,%rdi
   15b0e:	ff d2                	call   *%rdx
   15b10:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15b14:	48 89 82 40 0b 00 00 	mov    %rax,0xb40(%rdx)
        if ( !vkCmdCopyBuffer2 )
   15b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b1f:	48 8b 80 10 05 00 00 	mov    0x510(%rax),%rax
   15b26:	48 85 c0             	test   %rax,%rax
   15b29:	75 16                	jne    15b41 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5485>
          vkCmdCopyBuffer2 = vkCmdCopyBuffer2KHR;
   15b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b2f:	48 8b 90 40 0b 00 00 	mov    0xb40(%rax),%rdx
   15b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b3a:	48 89 90 10 05 00 00 	mov    %rdx,0x510(%rax)
        vkCmdCopyImage2KHR = PFN_vkCmdCopyImage2KHR( vkGetDeviceProcAddr( device, "vkCmdCopyImage2KHR" ) );
   15b41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b45:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15b49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b4d:	48 8d 0d b1 8b 01 00 	lea    0x18bb1(%rip),%rcx        # 2e705 <_ZNSt8__detailL19__atomic_spin_countE+0x2351>
   15b54:	48 89 ce             	mov    %rcx,%rsi
   15b57:	48 89 c7             	mov    %rax,%rdi
   15b5a:	ff d2                	call   *%rdx
   15b5c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15b60:	48 89 82 48 0b 00 00 	mov    %rax,0xb48(%rdx)
        if ( !vkCmdCopyImage2 )
   15b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b6b:	48 8b 80 18 05 00 00 	mov    0x518(%rax),%rax
   15b72:	48 85 c0             	test   %rax,%rax
   15b75:	75 16                	jne    15b8d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x54d1>
          vkCmdCopyImage2 = vkCmdCopyImage2KHR;
   15b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b7b:	48 8b 90 48 0b 00 00 	mov    0xb48(%rax),%rdx
   15b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b86:	48 89 90 18 05 00 00 	mov    %rdx,0x518(%rax)
        vkCmdCopyBufferToImage2KHR = PFN_vkCmdCopyBufferToImage2KHR( vkGetDeviceProcAddr( device, "vkCmdCopyBufferToImage2KHR" ) );
   15b8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b91:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15b95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b99:	48 8d 0d 78 8b 01 00 	lea    0x18b78(%rip),%rcx        # 2e718 <_ZNSt8__detailL19__atomic_spin_countE+0x2364>
   15ba0:	48 89 ce             	mov    %rcx,%rsi
   15ba3:	48 89 c7             	mov    %rax,%rdi
   15ba6:	ff d2                	call   *%rdx
   15ba8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15bac:	48 89 82 50 0b 00 00 	mov    %rax,0xb50(%rdx)
        if ( !vkCmdCopyBufferToImage2 )
   15bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bb7:	48 8b 80 20 05 00 00 	mov    0x520(%rax),%rax
   15bbe:	48 85 c0             	test   %rax,%rax
   15bc1:	75 16                	jne    15bd9 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x551d>
          vkCmdCopyBufferToImage2 = vkCmdCopyBufferToImage2KHR;
   15bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bc7:	48 8b 90 50 0b 00 00 	mov    0xb50(%rax),%rdx
   15bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bd2:	48 89 90 20 05 00 00 	mov    %rdx,0x520(%rax)
        vkCmdCopyImageToBuffer2KHR = PFN_vkCmdCopyImageToBuffer2KHR( vkGetDeviceProcAddr( device, "vkCmdCopyImageToBuffer2KHR" ) );
   15bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bdd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15be1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15be5:	48 8d 0d 47 8b 01 00 	lea    0x18b47(%rip),%rcx        # 2e733 <_ZNSt8__detailL19__atomic_spin_countE+0x237f>
   15bec:	48 89 ce             	mov    %rcx,%rsi
   15bef:	48 89 c7             	mov    %rax,%rdi
   15bf2:	ff d2                	call   *%rdx
   15bf4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15bf8:	48 89 82 58 0b 00 00 	mov    %rax,0xb58(%rdx)
        if ( !vkCmdCopyImageToBuffer2 )
   15bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c03:	48 8b 80 28 05 00 00 	mov    0x528(%rax),%rax
   15c0a:	48 85 c0             	test   %rax,%rax
   15c0d:	75 16                	jne    15c25 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5569>
          vkCmdCopyImageToBuffer2 = vkCmdCopyImageToBuffer2KHR;
   15c0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c13:	48 8b 90 58 0b 00 00 	mov    0xb58(%rax),%rdx
   15c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c1e:	48 89 90 28 05 00 00 	mov    %rdx,0x528(%rax)
        vkCmdBlitImage2KHR = PFN_vkCmdBlitImage2KHR( vkGetDeviceProcAddr( device, "vkCmdBlitImage2KHR" ) );
   15c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c29:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15c2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c31:	48 8d 0d 16 8b 01 00 	lea    0x18b16(%rip),%rcx        # 2e74e <_ZNSt8__detailL19__atomic_spin_countE+0x239a>
   15c38:	48 89 ce             	mov    %rcx,%rsi
   15c3b:	48 89 c7             	mov    %rax,%rdi
   15c3e:	ff d2                	call   *%rdx
   15c40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15c44:	48 89 82 60 0b 00 00 	mov    %rax,0xb60(%rdx)
        if ( !vkCmdBlitImage2 )
   15c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c4f:	48 8b 80 30 05 00 00 	mov    0x530(%rax),%rax
   15c56:	48 85 c0             	test   %rax,%rax
   15c59:	75 16                	jne    15c71 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x55b5>
          vkCmdBlitImage2 = vkCmdBlitImage2KHR;
   15c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c5f:	48 8b 90 60 0b 00 00 	mov    0xb60(%rax),%rdx
   15c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c6a:	48 89 90 30 05 00 00 	mov    %rdx,0x530(%rax)
        vkCmdResolveImage2KHR = PFN_vkCmdResolveImage2KHR( vkGetDeviceProcAddr( device, "vkCmdResolveImage2KHR" ) );
   15c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c75:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c7d:	48 8d 0d dd 8a 01 00 	lea    0x18add(%rip),%rcx        # 2e761 <_ZNSt8__detailL19__atomic_spin_countE+0x23ad>
   15c84:	48 89 ce             	mov    %rcx,%rsi
   15c87:	48 89 c7             	mov    %rax,%rdi
   15c8a:	ff d2                	call   *%rdx
   15c8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15c90:	48 89 82 68 0b 00 00 	mov    %rax,0xb68(%rdx)
        if ( !vkCmdResolveImage2 )
   15c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c9b:	48 8b 80 38 05 00 00 	mov    0x538(%rax),%rax
   15ca2:	48 85 c0             	test   %rax,%rax
   15ca5:	75 16                	jne    15cbd <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5601>
          vkCmdResolveImage2 = vkCmdResolveImage2KHR;
   15ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cab:	48 8b 90 68 0b 00 00 	mov    0xb68(%rax),%rdx
   15cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cb6:	48 89 90 38 05 00 00 	mov    %rdx,0x538(%rax)
        vkCreateRenderPass2KHR = PFN_vkCreateRenderPass2KHR( vkGetDeviceProcAddr( device, "vkCreateRenderPass2KHR" ) );
   15cbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cc1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15cc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cc9:	48 8d 0d a7 8a 01 00 	lea    0x18aa7(%rip),%rcx        # 2e777 <_ZNSt8__detailL19__atomic_spin_countE+0x23c3>
   15cd0:	48 89 ce             	mov    %rcx,%rsi
   15cd3:	48 89 c7             	mov    %rax,%rdi
   15cd6:	ff d2                	call   *%rdx
   15cd8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15cdc:	48 89 82 70 0b 00 00 	mov    %rax,0xb70(%rdx)
        if ( !vkCreateRenderPass2 )
   15ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ce7:	48 8b 80 68 04 00 00 	mov    0x468(%rax),%rax
   15cee:	48 85 c0             	test   %rax,%rax
   15cf1:	75 16                	jne    15d09 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x564d>
          vkCreateRenderPass2 = vkCreateRenderPass2KHR;
   15cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cf7:	48 8b 90 70 0b 00 00 	mov    0xb70(%rax),%rdx
   15cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d02:	48 89 90 68 04 00 00 	mov    %rdx,0x468(%rax)
        vkCmdBeginRenderPass2KHR = PFN_vkCmdBeginRenderPass2KHR( vkGetDeviceProcAddr( device, "vkCmdBeginRenderPass2KHR" ) );
   15d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d0d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15d11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d15:	48 8d 0d 72 8a 01 00 	lea    0x18a72(%rip),%rcx        # 2e78e <_ZNSt8__detailL19__atomic_spin_countE+0x23da>
   15d1c:	48 89 ce             	mov    %rcx,%rsi
   15d1f:	48 89 c7             	mov    %rax,%rdi
   15d22:	ff d2                	call   *%rdx
   15d24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15d28:	48 89 82 78 0b 00 00 	mov    %rax,0xb78(%rdx)
        if ( !vkCmdBeginRenderPass2 )
   15d2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d33:	48 8b 80 70 04 00 00 	mov    0x470(%rax),%rax
   15d3a:	48 85 c0             	test   %rax,%rax
   15d3d:	75 16                	jne    15d55 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5699>
          vkCmdBeginRenderPass2 = vkCmdBeginRenderPass2KHR;
   15d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d43:	48 8b 90 78 0b 00 00 	mov    0xb78(%rax),%rdx
   15d4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d4e:	48 89 90 70 04 00 00 	mov    %rdx,0x470(%rax)
        vkCmdNextSubpass2KHR = PFN_vkCmdNextSubpass2KHR( vkGetDeviceProcAddr( device, "vkCmdNextSubpass2KHR" ) );
   15d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d59:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15d5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d61:	48 8d 0d 3f 8a 01 00 	lea    0x18a3f(%rip),%rcx        # 2e7a7 <_ZNSt8__detailL19__atomic_spin_countE+0x23f3>
   15d68:	48 89 ce             	mov    %rcx,%rsi
   15d6b:	48 89 c7             	mov    %rax,%rdi
   15d6e:	ff d2                	call   *%rdx
   15d70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15d74:	48 89 82 80 0b 00 00 	mov    %rax,0xb80(%rdx)
        if ( !vkCmdNextSubpass2 )
   15d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d7f:	48 8b 80 78 04 00 00 	mov    0x478(%rax),%rax
   15d86:	48 85 c0             	test   %rax,%rax
   15d89:	75 16                	jne    15da1 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x56e5>
          vkCmdNextSubpass2 = vkCmdNextSubpass2KHR;
   15d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d8f:	48 8b 90 80 0b 00 00 	mov    0xb80(%rax),%rdx
   15d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d9a:	48 89 90 78 04 00 00 	mov    %rdx,0x478(%rax)
        vkCmdEndRenderPass2KHR = PFN_vkCmdEndRenderPass2KHR( vkGetDeviceProcAddr( device, "vkCmdEndRenderPass2KHR" ) );
   15da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15da5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15dad:	48 8d 0d 08 8a 01 00 	lea    0x18a08(%rip),%rcx        # 2e7bc <_ZNSt8__detailL19__atomic_spin_countE+0x2408>
   15db4:	48 89 ce             	mov    %rcx,%rsi
   15db7:	48 89 c7             	mov    %rax,%rdi
   15dba:	ff d2                	call   *%rdx
   15dbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15dc0:	48 89 82 88 0b 00 00 	mov    %rax,0xb88(%rdx)
        if ( !vkCmdEndRenderPass2 )
   15dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dcb:	48 8b 80 80 04 00 00 	mov    0x480(%rax),%rax
   15dd2:	48 85 c0             	test   %rax,%rax
   15dd5:	75 16                	jne    15ded <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5731>
          vkCmdEndRenderPass2 = vkCmdEndRenderPass2KHR;
   15dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ddb:	48 8b 90 88 0b 00 00 	mov    0xb88(%rax),%rdx
   15de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15de6:	48 89 90 80 04 00 00 	mov    %rdx,0x480(%rax)
        vkCreateDeferredOperationKHR  = PFN_vkCreateDeferredOperationKHR( vkGetDeviceProcAddr( device, "vkCreateDeferredOperationKHR" ) );
   15ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15df1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15df5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15df9:	48 8d 0d d3 89 01 00 	lea    0x189d3(%rip),%rcx        # 2e7d3 <_ZNSt8__detailL19__atomic_spin_countE+0x241f>
   15e00:	48 89 ce             	mov    %rcx,%rsi
   15e03:	48 89 c7             	mov    %rax,%rdi
   15e06:	ff d2                	call   *%rdx
   15e08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e0c:	48 89 82 90 0b 00 00 	mov    %rax,0xb90(%rdx)
        vkDestroyDeferredOperationKHR = PFN_vkDestroyDeferredOperationKHR( vkGetDeviceProcAddr( device, "vkDestroyDeferredOperationKHR" ) );
   15e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e17:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15e1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e1f:	48 8d 0d ca 89 01 00 	lea    0x189ca(%rip),%rcx        # 2e7f0 <_ZNSt8__detailL19__atomic_spin_countE+0x243c>
   15e26:	48 89 ce             	mov    %rcx,%rsi
   15e29:	48 89 c7             	mov    %rax,%rdi
   15e2c:	ff d2                	call   *%rdx
   15e2e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e32:	48 89 82 98 0b 00 00 	mov    %rax,0xb98(%rdx)
          PFN_vkGetDeferredOperationMaxConcurrencyKHR( vkGetDeviceProcAddr( device, "vkGetDeferredOperationMaxConcurrencyKHR" ) );
   15e39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e3d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15e41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e45:	48 8d 0d c4 89 01 00 	lea    0x189c4(%rip),%rcx        # 2e810 <_ZNSt8__detailL19__atomic_spin_countE+0x245c>
   15e4c:	48 89 ce             	mov    %rcx,%rsi
   15e4f:	48 89 c7             	mov    %rax,%rdi
   15e52:	ff d2                	call   *%rdx
        vkGetDeferredOperationMaxConcurrencyKHR =
   15e54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e58:	48 89 82 a0 0b 00 00 	mov    %rax,0xba0(%rdx)
        vkGetDeferredOperationResultKHR = PFN_vkGetDeferredOperationResultKHR( vkGetDeviceProcAddr( device, "vkGetDeferredOperationResultKHR" ) );
   15e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e63:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15e67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e6b:	48 8d 0d c6 89 01 00 	lea    0x189c6(%rip),%rcx        # 2e838 <_ZNSt8__detailL19__atomic_spin_countE+0x2484>
   15e72:	48 89 ce             	mov    %rcx,%rsi
   15e75:	48 89 c7             	mov    %rax,%rdi
   15e78:	ff d2                	call   *%rdx
   15e7a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e7e:	48 89 82 a8 0b 00 00 	mov    %rax,0xba8(%rdx)
        vkDeferredOperationJoinKHR      = PFN_vkDeferredOperationJoinKHR( vkGetDeviceProcAddr( device, "vkDeferredOperationJoinKHR" ) );
   15e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e89:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15e8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e91:	48 8d 0d c0 89 01 00 	lea    0x189c0(%rip),%rcx        # 2e858 <_ZNSt8__detailL19__atomic_spin_countE+0x24a4>
   15e98:	48 89 ce             	mov    %rcx,%rsi
   15e9b:	48 89 c7             	mov    %rax,%rdi
   15e9e:	ff d2                	call   *%rdx
   15ea0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ea4:	48 89 82 b0 0b 00 00 	mov    %rax,0xbb0(%rdx)
        vkCreateDescriptorUpdateTemplateKHR = PFN_vkCreateDescriptorUpdateTemplateKHR( vkGetDeviceProcAddr( device, "vkCreateDescriptorUpdateTemplateKHR" ) );
   15eab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15eaf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15eb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15eb7:	48 8d 0d ba 89 01 00 	lea    0x189ba(%rip),%rcx        # 2e878 <_ZNSt8__detailL19__atomic_spin_countE+0x24c4>
   15ebe:	48 89 ce             	mov    %rcx,%rsi
   15ec1:	48 89 c7             	mov    %rax,%rdi
   15ec4:	ff d2                	call   *%rdx
   15ec6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15eca:	48 89 82 b8 0b 00 00 	mov    %rax,0xbb8(%rdx)
        if ( !vkCreateDescriptorUpdateTemplate )
   15ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ed5:	48 8b 80 38 04 00 00 	mov    0x438(%rax),%rax
   15edc:	48 85 c0             	test   %rax,%rax
   15edf:	75 16                	jne    15ef7 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x583b>
          vkCreateDescriptorUpdateTemplate = vkCreateDescriptorUpdateTemplateKHR;
   15ee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ee5:	48 8b 90 b8 0b 00 00 	mov    0xbb8(%rax),%rdx
   15eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ef0:	48 89 90 38 04 00 00 	mov    %rdx,0x438(%rax)
          PFN_vkDestroyDescriptorUpdateTemplateKHR( vkGetDeviceProcAddr( device, "vkDestroyDescriptorUpdateTemplateKHR" ) );
   15ef7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15efb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15eff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f03:	48 8d 0d 96 89 01 00 	lea    0x18996(%rip),%rcx        # 2e8a0 <_ZNSt8__detailL19__atomic_spin_countE+0x24ec>
   15f0a:	48 89 ce             	mov    %rcx,%rsi
   15f0d:	48 89 c7             	mov    %rax,%rdi
   15f10:	ff d2                	call   *%rdx
        vkDestroyDescriptorUpdateTemplateKHR =
   15f12:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15f16:	48 89 82 c0 0b 00 00 	mov    %rax,0xbc0(%rdx)
        if ( !vkDestroyDescriptorUpdateTemplate )
   15f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f21:	48 8b 80 40 04 00 00 	mov    0x440(%rax),%rax
   15f28:	48 85 c0             	test   %rax,%rax
   15f2b:	75 16                	jne    15f43 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5887>
          vkDestroyDescriptorUpdateTemplate = vkDestroyDescriptorUpdateTemplateKHR;
   15f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f31:	48 8b 90 c0 0b 00 00 	mov    0xbc0(%rax),%rdx
   15f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f3c:	48 89 90 40 04 00 00 	mov    %rdx,0x440(%rax)
          PFN_vkUpdateDescriptorSetWithTemplateKHR( vkGetDeviceProcAddr( device, "vkUpdateDescriptorSetWithTemplateKHR" ) );
   15f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f47:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15f4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f4f:	48 8d 0d 72 89 01 00 	lea    0x18972(%rip),%rcx        # 2e8c8 <_ZNSt8__detailL19__atomic_spin_countE+0x2514>
   15f56:	48 89 ce             	mov    %rcx,%rsi
   15f59:	48 89 c7             	mov    %rax,%rdi
   15f5c:	ff d2                	call   *%rdx
        vkUpdateDescriptorSetWithTemplateKHR =
   15f5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15f62:	48 89 82 c8 0b 00 00 	mov    %rax,0xbc8(%rdx)
        if ( !vkUpdateDescriptorSetWithTemplate )
   15f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f6d:	48 8b 80 48 04 00 00 	mov    0x448(%rax),%rax
   15f74:	48 85 c0             	test   %rax,%rax
   15f77:	75 16                	jne    15f8f <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x58d3>
          vkUpdateDescriptorSetWithTemplate = vkUpdateDescriptorSetWithTemplateKHR;
   15f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f7d:	48 8b 90 c8 0b 00 00 	mov    0xbc8(%rax),%rdx
   15f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f88:	48 89 90 48 04 00 00 	mov    %rdx,0x448(%rax)
          PFN_vkCmdPushDescriptorSetWithTemplateKHR( vkGetDeviceProcAddr( device, "vkCmdPushDescriptorSetWithTemplateKHR" ) );
   15f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f93:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15f97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f9b:	48 8d 0d 4e 89 01 00 	lea    0x1894e(%rip),%rcx        # 2e8f0 <_ZNSt8__detailL19__atomic_spin_countE+0x253c>
   15fa2:	48 89 ce             	mov    %rcx,%rsi
   15fa5:	48 89 c7             	mov    %rax,%rdi
   15fa8:	ff d2                	call   *%rdx
        vkCmdPushDescriptorSetWithTemplateKHR =
   15faa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15fae:	48 89 82 d0 0b 00 00 	mov    %rax,0xbd0(%rdx)
          PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR( vkGetDeviceProcAddr( device, "vkGetDeviceGroupPeerMemoryFeaturesKHR" ) );
   15fb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fb9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15fbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15fc1:	48 8d 0d 50 89 01 00 	lea    0x18950(%rip),%rcx        # 2e918 <_ZNSt8__detailL19__atomic_spin_countE+0x2564>
   15fc8:	48 89 ce             	mov    %rcx,%rsi
   15fcb:	48 89 c7             	mov    %rax,%rdi
   15fce:	ff d2                	call   *%rdx
        vkGetDeviceGroupPeerMemoryFeaturesKHR =
   15fd0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15fd4:	48 89 82 d8 0b 00 00 	mov    %rax,0xbd8(%rdx)
        if ( !vkGetDeviceGroupPeerMemoryFeatures )
   15fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fdf:	48 8b 80 e8 03 00 00 	mov    0x3e8(%rax),%rax
   15fe6:	48 85 c0             	test   %rax,%rax
   15fe9:	75 16                	jne    16001 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5945>
          vkGetDeviceGroupPeerMemoryFeatures = vkGetDeviceGroupPeerMemoryFeaturesKHR;
   15feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fef:	48 8b 90 d8 0b 00 00 	mov    0xbd8(%rax),%rdx
   15ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ffa:	48 89 90 e8 03 00 00 	mov    %rdx,0x3e8(%rax)
        vkCmdSetDeviceMaskKHR = PFN_vkCmdSetDeviceMaskKHR( vkGetDeviceProcAddr( device, "vkCmdSetDeviceMaskKHR" ) );
   16001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16005:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16009:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1600d:	48 8d 0d 2a 89 01 00 	lea    0x1892a(%rip),%rcx        # 2e93e <_ZNSt8__detailL19__atomic_spin_countE+0x258a>
   16014:	48 89 ce             	mov    %rcx,%rsi
   16017:	48 89 c7             	mov    %rax,%rdi
   1601a:	ff d2                	call   *%rdx
   1601c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16020:	48 89 82 e0 0b 00 00 	mov    %rax,0xbe0(%rdx)
        if ( !vkCmdSetDeviceMask )
   16027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1602b:	48 8b 80 f0 03 00 00 	mov    0x3f0(%rax),%rax
   16032:	48 85 c0             	test   %rax,%rax
   16035:	75 16                	jne    1604d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5991>
          vkCmdSetDeviceMask = vkCmdSetDeviceMaskKHR;
   16037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1603b:	48 8b 90 e0 0b 00 00 	mov    0xbe0(%rax),%rdx
   16042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16046:	48 89 90 f0 03 00 00 	mov    %rdx,0x3f0(%rax)
        vkCmdDispatchBaseKHR = PFN_vkCmdDispatchBaseKHR( vkGetDeviceProcAddr( device, "vkCmdDispatchBaseKHR" ) );
   1604d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16051:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16055:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16059:	48 8d 0d f4 88 01 00 	lea    0x188f4(%rip),%rcx        # 2e954 <_ZNSt8__detailL19__atomic_spin_countE+0x25a0>
   16060:	48 89 ce             	mov    %rcx,%rsi
   16063:	48 89 c7             	mov    %rax,%rdi
   16066:	ff d2                	call   *%rdx
   16068:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1606c:	48 89 82 e8 0b 00 00 	mov    %rax,0xbe8(%rdx)
        if ( !vkCmdDispatchBase )
   16073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16077:	48 8b 80 f8 03 00 00 	mov    0x3f8(%rax),%rax
   1607e:	48 85 c0             	test   %rax,%rax
   16081:	75 16                	jne    16099 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x59dd>
          vkCmdDispatchBase = vkCmdDispatchBaseKHR;
   16083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16087:	48 8b 90 e8 0b 00 00 	mov    0xbe8(%rax),%rdx
   1608e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16092:	48 89 90 f8 03 00 00 	mov    %rdx,0x3f8(%rax)
          PFN_vkGetDeviceGroupPresentCapabilitiesKHR( vkGetDeviceProcAddr( device, "vkGetDeviceGroupPresentCapabilitiesKHR" ) );
   16099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1609d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   160a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160a5:	48 8d 0d c4 88 01 00 	lea    0x188c4(%rip),%rcx        # 2e970 <_ZNSt8__detailL19__atomic_spin_countE+0x25bc>
   160ac:	48 89 ce             	mov    %rcx,%rsi
   160af:	48 89 c7             	mov    %rax,%rdi
   160b2:	ff d2                	call   *%rdx
        vkGetDeviceGroupPresentCapabilitiesKHR =
   160b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   160b8:	48 89 82 f0 0b 00 00 	mov    %rax,0xbf0(%rdx)
          PFN_vkGetDeviceGroupSurfacePresentModesKHR( vkGetDeviceProcAddr( device, "vkGetDeviceGroupSurfacePresentModesKHR" ) );
   160bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160c3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   160c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160cb:	48 8d 0d c6 88 01 00 	lea    0x188c6(%rip),%rcx        # 2e998 <_ZNSt8__detailL19__atomic_spin_countE+0x25e4>
   160d2:	48 89 ce             	mov    %rcx,%rsi
   160d5:	48 89 c7             	mov    %rax,%rdi
   160d8:	ff d2                	call   *%rdx
        vkGetDeviceGroupSurfacePresentModesKHR =
   160da:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   160de:	48 89 82 f8 0b 00 00 	mov    %rax,0xbf8(%rdx)
        vkAcquireNextImage2KHR = PFN_vkAcquireNextImage2KHR( vkGetDeviceProcAddr( device, "vkAcquireNextImage2KHR" ) );
   160e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160e9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   160ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160f1:	48 8d 0d c7 88 01 00 	lea    0x188c7(%rip),%rcx        # 2e9bf <_ZNSt8__detailL19__atomic_spin_countE+0x260b>
   160f8:	48 89 ce             	mov    %rcx,%rsi
   160fb:	48 89 c7             	mov    %rax,%rdi
   160fe:	ff d2                	call   *%rdx
   16100:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16104:	48 89 82 00 0c 00 00 	mov    %rax,0xc00(%rdx)
        vkCreateSharedSwapchainsKHR = PFN_vkCreateSharedSwapchainsKHR( vkGetDeviceProcAddr( device, "vkCreateSharedSwapchainsKHR" ) );
   1610b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1610f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16117:	48 8d 0d b8 88 01 00 	lea    0x188b8(%rip),%rcx        # 2e9d6 <_ZNSt8__detailL19__atomic_spin_countE+0x2622>
   1611e:	48 89 ce             	mov    %rcx,%rsi
   16121:	48 89 c7             	mov    %rax,%rdi
   16124:	ff d2                	call   *%rdx
   16126:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1612a:	48 89 82 08 0c 00 00 	mov    %rax,0xc08(%rdx)
        vkCmdDrawIndirectCountKHR = PFN_vkCmdDrawIndirectCountKHR( vkGetDeviceProcAddr( device, "vkCmdDrawIndirectCountKHR" ) );
   16131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16135:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16139:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1613d:	48 8d 0d ae 88 01 00 	lea    0x188ae(%rip),%rcx        # 2e9f2 <_ZNSt8__detailL19__atomic_spin_countE+0x263e>
   16144:	48 89 ce             	mov    %rcx,%rsi
   16147:	48 89 c7             	mov    %rax,%rdi
   1614a:	ff d2                	call   *%rdx
   1614c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16150:	48 89 82 10 0c 00 00 	mov    %rax,0xc10(%rdx)
        if ( !vkCmdDrawIndirectCount )
   16157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1615b:	48 8b 80 58 04 00 00 	mov    0x458(%rax),%rax
   16162:	48 85 c0             	test   %rax,%rax
   16165:	75 16                	jne    1617d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5ac1>
          vkCmdDrawIndirectCount = vkCmdDrawIndirectCountKHR;
   16167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1616b:	48 8b 90 10 0c 00 00 	mov    0xc10(%rax),%rdx
   16172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16176:	48 89 90 58 04 00 00 	mov    %rdx,0x458(%rax)
        vkCmdDrawIndexedIndirectCountKHR = PFN_vkCmdDrawIndexedIndirectCountKHR( vkGetDeviceProcAddr( device, "vkCmdDrawIndexedIndirectCountKHR" ) );
   1617d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16181:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16189:	48 8d 0d 80 88 01 00 	lea    0x18880(%rip),%rcx        # 2ea10 <_ZNSt8__detailL19__atomic_spin_countE+0x265c>
   16190:	48 89 ce             	mov    %rcx,%rsi
   16193:	48 89 c7             	mov    %rax,%rdi
   16196:	ff d2                	call   *%rdx
   16198:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1619c:	48 89 82 18 0c 00 00 	mov    %rax,0xc18(%rdx)
        if ( !vkCmdDrawIndexedIndirectCount )
   161a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161a7:	48 8b 80 60 04 00 00 	mov    0x460(%rax),%rax
   161ae:	48 85 c0             	test   %rax,%rax
   161b1:	75 16                	jne    161c9 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5b0d>
          vkCmdDrawIndexedIndirectCount = vkCmdDrawIndexedIndirectCountKHR;
   161b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161b7:	48 8b 90 18 0c 00 00 	mov    0xc18(%rax),%rdx
   161be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161c2:	48 89 90 60 04 00 00 	mov    %rdx,0x460(%rax)
        vkCmdBeginRenderingKHR = PFN_vkCmdBeginRenderingKHR( vkGetDeviceProcAddr( device, "vkCmdBeginRenderingKHR" ) );
   161c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161cd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   161d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161d5:	48 8d 0d 55 88 01 00 	lea    0x18855(%rip),%rcx        # 2ea31 <_ZNSt8__detailL19__atomic_spin_countE+0x267d>
   161dc:	48 89 ce             	mov    %rcx,%rsi
   161df:	48 89 c7             	mov    %rax,%rdi
   161e2:	ff d2                	call   *%rdx
   161e4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   161e8:	48 89 82 20 0c 00 00 	mov    %rax,0xc20(%rdx)
        if ( !vkCmdBeginRendering )
   161ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161f3:	48 8b 80 40 05 00 00 	mov    0x540(%rax),%rax
   161fa:	48 85 c0             	test   %rax,%rax
   161fd:	75 16                	jne    16215 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5b59>
          vkCmdBeginRendering = vkCmdBeginRenderingKHR;
   161ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16203:	48 8b 90 20 0c 00 00 	mov    0xc20(%rax),%rdx
   1620a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1620e:	48 89 90 40 05 00 00 	mov    %rdx,0x540(%rax)
        vkCmdEndRenderingKHR = PFN_vkCmdEndRenderingKHR( vkGetDeviceProcAddr( device, "vkCmdEndRenderingKHR" ) );
   16215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16219:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1621d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16221:	48 8d 0d 20 88 01 00 	lea    0x18820(%rip),%rcx        # 2ea48 <_ZNSt8__detailL19__atomic_spin_countE+0x2694>
   16228:	48 89 ce             	mov    %rcx,%rsi
   1622b:	48 89 c7             	mov    %rax,%rdi
   1622e:	ff d2                	call   *%rdx
   16230:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16234:	48 89 82 28 0c 00 00 	mov    %rax,0xc28(%rdx)
        if ( !vkCmdEndRendering )
   1623b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1623f:	48 8b 80 48 05 00 00 	mov    0x548(%rax),%rax
   16246:	48 85 c0             	test   %rax,%rax
   16249:	75 16                	jne    16261 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5ba5>
          vkCmdEndRendering = vkCmdEndRenderingKHR;
   1624b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1624f:	48 8b 90 28 0c 00 00 	mov    0xc28(%rax),%rdx
   16256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1625a:	48 89 90 48 05 00 00 	mov    %rdx,0x548(%rax)
        vkImportFenceFdKHR = PFN_vkImportFenceFdKHR( vkGetDeviceProcAddr( device, "vkImportFenceFdKHR" ) );
   16261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16265:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1626d:	48 8d 0d e9 87 01 00 	lea    0x187e9(%rip),%rcx        # 2ea5d <_ZNSt8__detailL19__atomic_spin_countE+0x26a9>
   16274:	48 89 ce             	mov    %rcx,%rsi
   16277:	48 89 c7             	mov    %rax,%rdi
   1627a:	ff d2                	call   *%rdx
   1627c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16280:	48 89 82 30 0c 00 00 	mov    %rax,0xc30(%rdx)
        vkGetFenceFdKHR    = PFN_vkGetFenceFdKHR( vkGetDeviceProcAddr( device, "vkGetFenceFdKHR" ) );
   16287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1628b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1628f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16293:	48 8d 0d d6 87 01 00 	lea    0x187d6(%rip),%rcx        # 2ea70 <_ZNSt8__detailL19__atomic_spin_countE+0x26bc>
   1629a:	48 89 ce             	mov    %rcx,%rsi
   1629d:	48 89 c7             	mov    %rax,%rdi
   162a0:	ff d2                	call   *%rdx
   162a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   162a6:	48 89 82 38 0c 00 00 	mov    %rax,0xc38(%rdx)
        vkGetMemoryFdKHR           = PFN_vkGetMemoryFdKHR( vkGetDeviceProcAddr( device, "vkGetMemoryFdKHR" ) );
   162ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162b1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   162b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162b9:	48 8d 0d c0 87 01 00 	lea    0x187c0(%rip),%rcx        # 2ea80 <_ZNSt8__detailL19__atomic_spin_countE+0x26cc>
   162c0:	48 89 ce             	mov    %rcx,%rsi
   162c3:	48 89 c7             	mov    %rax,%rdi
   162c6:	ff d2                	call   *%rdx
   162c8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   162cc:	48 89 82 50 0c 00 00 	mov    %rax,0xc50(%rdx)
        vkGetMemoryFdPropertiesKHR = PFN_vkGetMemoryFdPropertiesKHR( vkGetDeviceProcAddr( device, "vkGetMemoryFdPropertiesKHR" ) );
   162d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162d7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   162db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162df:	48 8d 0d ab 87 01 00 	lea    0x187ab(%rip),%rcx        # 2ea91 <_ZNSt8__detailL19__atomic_spin_countE+0x26dd>
   162e6:	48 89 ce             	mov    %rcx,%rsi
   162e9:	48 89 c7             	mov    %rax,%rdi
   162ec:	ff d2                	call   *%rdx
   162ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   162f2:	48 89 82 58 0c 00 00 	mov    %rax,0xc58(%rdx)
        vkImportSemaphoreFdKHR = PFN_vkImportSemaphoreFdKHR( vkGetDeviceProcAddr( device, "vkImportSemaphoreFdKHR" ) );
   162f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162fd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16305:	48 8d 0d a0 87 01 00 	lea    0x187a0(%rip),%rcx        # 2eaac <_ZNSt8__detailL19__atomic_spin_countE+0x26f8>
   1630c:	48 89 ce             	mov    %rcx,%rsi
   1630f:	48 89 c7             	mov    %rax,%rdi
   16312:	ff d2                	call   *%rdx
   16314:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16318:	48 89 82 70 0c 00 00 	mov    %rax,0xc70(%rdx)
        vkGetSemaphoreFdKHR    = PFN_vkGetSemaphoreFdKHR( vkGetDeviceProcAddr( device, "vkGetSemaphoreFdKHR" ) );
   1631f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16323:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1632b:	48 8d 0d 91 87 01 00 	lea    0x18791(%rip),%rcx        # 2eac3 <_ZNSt8__detailL19__atomic_spin_countE+0x270f>
   16332:	48 89 ce             	mov    %rcx,%rsi
   16335:	48 89 c7             	mov    %rax,%rdi
   16338:	ff d2                	call   *%rdx
   1633a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1633e:	48 89 82 78 0c 00 00 	mov    %rax,0xc78(%rdx)
        vkCmdSetFragmentShadingRateKHR = PFN_vkCmdSetFragmentShadingRateKHR( vkGetDeviceProcAddr( device, "vkCmdSetFragmentShadingRateKHR" ) );
   16345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16349:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1634d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16351:	48 8d 0d 80 87 01 00 	lea    0x18780(%rip),%rcx        # 2ead8 <_ZNSt8__detailL19__atomic_spin_countE+0x2724>
   16358:	48 89 ce             	mov    %rcx,%rsi
   1635b:	48 89 c7             	mov    %rax,%rdi
   1635e:	ff d2                	call   *%rdx
   16360:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16364:	48 89 82 90 0c 00 00 	mov    %rax,0xc90(%rdx)
        vkGetImageMemoryRequirements2KHR = PFN_vkGetImageMemoryRequirements2KHR( vkGetDeviceProcAddr( device, "vkGetImageMemoryRequirements2KHR" ) );
   1636b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1636f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16373:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16377:	48 8d 0d 7a 87 01 00 	lea    0x1877a(%rip),%rcx        # 2eaf8 <_ZNSt8__detailL19__atomic_spin_countE+0x2744>
   1637e:	48 89 ce             	mov    %rcx,%rsi
   16381:	48 89 c7             	mov    %rax,%rdi
   16384:	ff d2                	call   *%rdx
   16386:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1638a:	48 89 82 98 0c 00 00 	mov    %rax,0xc98(%rdx)
        if ( !vkGetImageMemoryRequirements2 )
   16391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16395:	48 8b 80 00 04 00 00 	mov    0x400(%rax),%rax
   1639c:	48 85 c0             	test   %rax,%rax
   1639f:	75 16                	jne    163b7 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5cfb>
          vkGetImageMemoryRequirements2 = vkGetImageMemoryRequirements2KHR;
   163a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163a5:	48 8b 90 98 0c 00 00 	mov    0xc98(%rax),%rdx
   163ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163b0:	48 89 90 00 04 00 00 	mov    %rdx,0x400(%rax)
        vkGetBufferMemoryRequirements2KHR = PFN_vkGetBufferMemoryRequirements2KHR( vkGetDeviceProcAddr( device, "vkGetBufferMemoryRequirements2KHR" ) );
   163b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163bb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   163bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163c3:	48 8d 0d 56 87 01 00 	lea    0x18756(%rip),%rcx        # 2eb20 <_ZNSt8__detailL19__atomic_spin_countE+0x276c>
   163ca:	48 89 ce             	mov    %rcx,%rsi
   163cd:	48 89 c7             	mov    %rax,%rdi
   163d0:	ff d2                	call   *%rdx
   163d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   163d6:	48 89 82 a0 0c 00 00 	mov    %rax,0xca0(%rdx)
        if ( !vkGetBufferMemoryRequirements2 )
   163dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163e1:	48 8b 80 08 04 00 00 	mov    0x408(%rax),%rax
   163e8:	48 85 c0             	test   %rax,%rax
   163eb:	75 16                	jne    16403 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5d47>
          vkGetBufferMemoryRequirements2 = vkGetBufferMemoryRequirements2KHR;
   163ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163f1:	48 8b 90 a0 0c 00 00 	mov    0xca0(%rax),%rdx
   163f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163fc:	48 89 90 08 04 00 00 	mov    %rdx,0x408(%rax)
          PFN_vkGetImageSparseMemoryRequirements2KHR( vkGetDeviceProcAddr( device, "vkGetImageSparseMemoryRequirements2KHR" ) );
   16403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16407:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1640b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1640f:	48 8d 0d 32 87 01 00 	lea    0x18732(%rip),%rcx        # 2eb48 <_ZNSt8__detailL19__atomic_spin_countE+0x2794>
   16416:	48 89 ce             	mov    %rcx,%rsi
   16419:	48 89 c7             	mov    %rax,%rdi
   1641c:	ff d2                	call   *%rdx
        vkGetImageSparseMemoryRequirements2KHR =
   1641e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16422:	48 89 82 a8 0c 00 00 	mov    %rax,0xca8(%rdx)
        if ( !vkGetImageSparseMemoryRequirements2 )
   16429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1642d:	48 8b 80 10 04 00 00 	mov    0x410(%rax),%rax
   16434:	48 85 c0             	test   %rax,%rax
   16437:	75 16                	jne    1644f <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5d93>
          vkGetImageSparseMemoryRequirements2 = vkGetImageSparseMemoryRequirements2KHR;
   16439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1643d:	48 8b 90 a8 0c 00 00 	mov    0xca8(%rax),%rdx
   16444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16448:	48 89 90 10 04 00 00 	mov    %rdx,0x410(%rax)
        vkTrimCommandPoolKHR = PFN_vkTrimCommandPoolKHR( vkGetDeviceProcAddr( device, "vkTrimCommandPoolKHR" ) );
   1644f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16453:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1645b:	48 8d 0d 0d 87 01 00 	lea    0x1870d(%rip),%rcx        # 2eb6f <_ZNSt8__detailL19__atomic_spin_countE+0x27bb>
   16462:	48 89 ce             	mov    %rcx,%rsi
   16465:	48 89 c7             	mov    %rax,%rdi
   16468:	ff d2                	call   *%rdx
   1646a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1646e:	48 89 82 b0 0c 00 00 	mov    %rax,0xcb0(%rdx)
        if ( !vkTrimCommandPool )
   16475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16479:	48 8b 80 18 04 00 00 	mov    0x418(%rax),%rax
   16480:	48 85 c0             	test   %rax,%rax
   16483:	75 16                	jne    1649b <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5ddf>
          vkTrimCommandPool = vkTrimCommandPoolKHR;
   16485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16489:	48 8b 90 b0 0c 00 00 	mov    0xcb0(%rax),%rdx
   16490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16494:	48 89 90 18 04 00 00 	mov    %rdx,0x418(%rax)
        vkGetDescriptorSetLayoutSupportKHR = PFN_vkGetDescriptorSetLayoutSupportKHR( vkGetDeviceProcAddr( device, "vkGetDescriptorSetLayoutSupportKHR" ) );
   1649b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1649f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   164a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164a7:	48 8d 0d da 86 01 00 	lea    0x186da(%rip),%rcx        # 2eb88 <_ZNSt8__detailL19__atomic_spin_countE+0x27d4>
   164ae:	48 89 ce             	mov    %rcx,%rsi
   164b1:	48 89 c7             	mov    %rax,%rdi
   164b4:	ff d2                	call   *%rdx
   164b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   164ba:	48 89 82 b8 0c 00 00 	mov    %rax,0xcb8(%rdx)
        if ( !vkGetDescriptorSetLayoutSupport )
   164c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164c5:	48 8b 80 50 04 00 00 	mov    0x450(%rax),%rax
   164cc:	48 85 c0             	test   %rax,%rax
   164cf:	75 16                	jne    164e7 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5e2b>
          vkGetDescriptorSetLayoutSupport = vkGetDescriptorSetLayoutSupportKHR;
   164d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164d5:	48 8b 90 b8 0c 00 00 	mov    0xcb8(%rax),%rdx
   164dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164e0:	48 89 90 50 04 00 00 	mov    %rdx,0x450(%rax)
          PFN_vkGetDeviceBufferMemoryRequirementsKHR( vkGetDeviceProcAddr( device, "vkGetDeviceBufferMemoryRequirementsKHR" ) );
   164e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164eb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   164ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164f3:	48 8d 0d b6 86 01 00 	lea    0x186b6(%rip),%rcx        # 2ebb0 <_ZNSt8__detailL19__atomic_spin_countE+0x27fc>
   164fa:	48 89 ce             	mov    %rcx,%rsi
   164fd:	48 89 c7             	mov    %rax,%rdi
   16500:	ff d2                	call   *%rdx
        vkGetDeviceBufferMemoryRequirementsKHR =
   16502:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16506:	48 89 82 c0 0c 00 00 	mov    %rax,0xcc0(%rdx)
        if ( !vkGetDeviceBufferMemoryRequirements )
   1650d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16511:	48 8b 80 c8 05 00 00 	mov    0x5c8(%rax),%rax
   16518:	48 85 c0             	test   %rax,%rax
   1651b:	75 16                	jne    16533 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5e77>
          vkGetDeviceBufferMemoryRequirements = vkGetDeviceBufferMemoryRequirementsKHR;
   1651d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16521:	48 8b 90 c0 0c 00 00 	mov    0xcc0(%rax),%rdx
   16528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1652c:	48 89 90 c8 05 00 00 	mov    %rdx,0x5c8(%rax)
          PFN_vkGetDeviceImageMemoryRequirementsKHR( vkGetDeviceProcAddr( device, "vkGetDeviceImageMemoryRequirementsKHR" ) );
   16533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16537:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1653b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1653f:	48 8d 0d 92 86 01 00 	lea    0x18692(%rip),%rcx        # 2ebd8 <_ZNSt8__detailL19__atomic_spin_countE+0x2824>
   16546:	48 89 ce             	mov    %rcx,%rsi
   16549:	48 89 c7             	mov    %rax,%rdi
   1654c:	ff d2                	call   *%rdx
        vkGetDeviceImageMemoryRequirementsKHR =
   1654e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16552:	48 89 82 c8 0c 00 00 	mov    %rax,0xcc8(%rdx)
        if ( !vkGetDeviceImageMemoryRequirements )
   16559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1655d:	48 8b 80 d0 05 00 00 	mov    0x5d0(%rax),%rax
   16564:	48 85 c0             	test   %rax,%rax
   16567:	75 16                	jne    1657f <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5ec3>
          vkGetDeviceImageMemoryRequirements = vkGetDeviceImageMemoryRequirementsKHR;
   16569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1656d:	48 8b 90 c8 0c 00 00 	mov    0xcc8(%rax),%rdx
   16574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16578:	48 89 90 d0 05 00 00 	mov    %rdx,0x5d0(%rax)
          PFN_vkGetDeviceImageSparseMemoryRequirementsKHR( vkGetDeviceProcAddr( device, "vkGetDeviceImageSparseMemoryRequirementsKHR" ) );
   1657f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16583:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16587:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1658b:	48 8d 0d 6e 86 01 00 	lea    0x1866e(%rip),%rcx        # 2ec00 <_ZNSt8__detailL19__atomic_spin_countE+0x284c>
   16592:	48 89 ce             	mov    %rcx,%rsi
   16595:	48 89 c7             	mov    %rax,%rdi
   16598:	ff d2                	call   *%rdx
        vkGetDeviceImageSparseMemoryRequirementsKHR =
   1659a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1659e:	48 89 82 d0 0c 00 00 	mov    %rax,0xcd0(%rdx)
        if ( !vkGetDeviceImageSparseMemoryRequirements )
   165a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165a9:	48 8b 80 d8 05 00 00 	mov    0x5d8(%rax),%rax
   165b0:	48 85 c0             	test   %rax,%rax
   165b3:	75 16                	jne    165cb <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x5f0f>
          vkGetDeviceImageSparseMemoryRequirements = vkGetDeviceImageSparseMemoryRequirementsKHR;
   165b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165b9:	48 8b 90 d0 0c 00 00 	mov    0xcd0(%rax),%rdx
   165c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165c4:	48 89 90 d8 05 00 00 	mov    %rdx,0x5d8(%rax)
        vkAcquireProfilingLockKHR = PFN_vkAcquireProfilingLockKHR( vkGetDeviceProcAddr( device, "vkAcquireProfilingLockKHR" ) );
   165cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165cf:	48 8b 50 10          	mov    0x10(%rax),%rdx
   165d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165d7:	48 8d 0d 4e 86 01 00 	lea    0x1864e(%rip),%rcx        # 2ec2c <_ZNSt8__detailL19__atomic_spin_countE+0x2878>
   165de:	48 89 ce             	mov    %rcx,%rsi
   165e1:	48 89 c7             	mov    %rax,%rdi
   165e4:	ff d2                	call   *%rdx
   165e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   165ea:	48 89 82 d8 0c 00 00 	mov    %rax,0xcd8(%rdx)
        vkReleaseProfilingLockKHR = PFN_vkReleaseProfilingLockKHR( vkGetDeviceProcAddr( device, "vkReleaseProfilingLockKHR" ) );
   165f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165f5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   165f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165fd:	48 8d 0d 42 86 01 00 	lea    0x18642(%rip),%rcx        # 2ec46 <_ZNSt8__detailL19__atomic_spin_countE+0x2892>
   16604:	48 89 ce             	mov    %rcx,%rsi
   16607:	48 89 c7             	mov    %rax,%rdi
   1660a:	ff d2                	call   *%rdx
   1660c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16610:	48 89 82 e0 0c 00 00 	mov    %rax,0xce0(%rdx)
          PFN_vkGetPipelineExecutablePropertiesKHR( vkGetDeviceProcAddr( device, "vkGetPipelineExecutablePropertiesKHR" ) );
   16617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1661b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1661f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16623:	48 8d 0d 36 86 01 00 	lea    0x18636(%rip),%rcx        # 2ec60 <_ZNSt8__detailL19__atomic_spin_countE+0x28ac>
   1662a:	48 89 ce             	mov    %rcx,%rsi
   1662d:	48 89 c7             	mov    %rax,%rdi
   16630:	ff d2                	call   *%rdx
        vkGetPipelineExecutablePropertiesKHR =
   16632:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16636:	48 89 82 e8 0c 00 00 	mov    %rax,0xce8(%rdx)
          PFN_vkGetPipelineExecutableStatisticsKHR( vkGetDeviceProcAddr( device, "vkGetPipelineExecutableStatisticsKHR" ) );
   1663d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16641:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16649:	48 8d 0d 38 86 01 00 	lea    0x18638(%rip),%rcx        # 2ec88 <_ZNSt8__detailL19__atomic_spin_countE+0x28d4>
   16650:	48 89 ce             	mov    %rcx,%rsi
   16653:	48 89 c7             	mov    %rax,%rdi
   16656:	ff d2                	call   *%rdx
        vkGetPipelineExecutableStatisticsKHR =
   16658:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1665c:	48 89 82 f0 0c 00 00 	mov    %rax,0xcf0(%rdx)
          PFN_vkGetPipelineExecutableInternalRepresentationsKHR( vkGetDeviceProcAddr( device, "vkGetPipelineExecutableInternalRepresentationsKHR" ) );
   16663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16667:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1666b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1666f:	48 8d 0d 3a 86 01 00 	lea    0x1863a(%rip),%rcx        # 2ecb0 <_ZNSt8__detailL19__atomic_spin_countE+0x28fc>
   16676:	48 89 ce             	mov    %rcx,%rsi
   16679:	48 89 c7             	mov    %rax,%rdi
   1667c:	ff d2                	call   *%rdx
        vkGetPipelineExecutableInternalRepresentationsKHR =
   1667e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16682:	48 89 82 f8 0c 00 00 	mov    %rax,0xcf8(%rdx)
        vkWaitForPresentKHR = PFN_vkWaitForPresentKHR( vkGetDeviceProcAddr( device, "vkWaitForPresentKHR" ) );
   16689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1668d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16691:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16695:	48 8d 0d 46 86 01 00 	lea    0x18646(%rip),%rcx        # 2ece2 <_ZNSt8__detailL19__atomic_spin_countE+0x292e>
   1669c:	48 89 ce             	mov    %rcx,%rsi
   1669f:	48 89 c7             	mov    %rax,%rdi
   166a2:	ff d2                	call   *%rdx
   166a4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166a8:	48 89 82 00 0d 00 00 	mov    %rax,0xd00(%rdx)
        vkCmdPushDescriptorSetKHR = PFN_vkCmdPushDescriptorSetKHR( vkGetDeviceProcAddr( device, "vkCmdPushDescriptorSetKHR" ) );
   166af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166b3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   166b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166bb:	48 8d 0d 34 86 01 00 	lea    0x18634(%rip),%rcx        # 2ecf6 <_ZNSt8__detailL19__atomic_spin_countE+0x2942>
   166c2:	48 89 ce             	mov    %rcx,%rsi
   166c5:	48 89 c7             	mov    %rax,%rdi
   166c8:	ff d2                	call   *%rdx
   166ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166ce:	48 89 82 08 0d 00 00 	mov    %rax,0xd08(%rdx)
        vkCmdTraceRaysIndirect2KHR = PFN_vkCmdTraceRaysIndirect2KHR( vkGetDeviceProcAddr( device, "vkCmdTraceRaysIndirect2KHR" ) );
   166d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166d9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   166dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166e1:	48 8d 0d 28 86 01 00 	lea    0x18628(%rip),%rcx        # 2ed10 <_ZNSt8__detailL19__atomic_spin_countE+0x295c>
   166e8:	48 89 ce             	mov    %rcx,%rsi
   166eb:	48 89 c7             	mov    %rax,%rdi
   166ee:	ff d2                	call   *%rdx
   166f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166f4:	48 89 82 10 0d 00 00 	mov    %rax,0xd10(%rdx)
        vkCmdTraceRaysKHR              = PFN_vkCmdTraceRaysKHR( vkGetDeviceProcAddr( device, "vkCmdTraceRaysKHR" ) );
   166fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166ff:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16703:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16707:	48 8d 0d 1d 86 01 00 	lea    0x1861d(%rip),%rcx        # 2ed2b <_ZNSt8__detailL19__atomic_spin_countE+0x2977>
   1670e:	48 89 ce             	mov    %rcx,%rsi
   16711:	48 89 c7             	mov    %rax,%rdi
   16714:	ff d2                	call   *%rdx
   16716:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1671a:	48 89 82 18 0d 00 00 	mov    %rax,0xd18(%rdx)
        vkCreateRayTracingPipelinesKHR = PFN_vkCreateRayTracingPipelinesKHR( vkGetDeviceProcAddr( device, "vkCreateRayTracingPipelinesKHR" ) );
   16721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16725:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1672d:	48 8d 0d 0c 86 01 00 	lea    0x1860c(%rip),%rcx        # 2ed40 <_ZNSt8__detailL19__atomic_spin_countE+0x298c>
   16734:	48 89 ce             	mov    %rcx,%rsi
   16737:	48 89 c7             	mov    %rax,%rdi
   1673a:	ff d2                	call   *%rdx
   1673c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16740:	48 89 82 20 0d 00 00 	mov    %rax,0xd20(%rdx)
          PFN_vkGetRayTracingShaderGroupHandlesKHR( vkGetDeviceProcAddr( device, "vkGetRayTracingShaderGroupHandlesKHR" ) );
   16747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1674b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1674f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16753:	48 8d 0d 06 86 01 00 	lea    0x18606(%rip),%rcx        # 2ed60 <_ZNSt8__detailL19__atomic_spin_countE+0x29ac>
   1675a:	48 89 ce             	mov    %rcx,%rsi
   1675d:	48 89 c7             	mov    %rax,%rdi
   16760:	ff d2                	call   *%rdx
        vkGetRayTracingShaderGroupHandlesKHR =
   16762:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16766:	48 89 82 28 0d 00 00 	mov    %rax,0xd28(%rdx)
          PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR( vkGetDeviceProcAddr( device, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR" ) );
   1676d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16771:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16779:	48 8d 0d 08 86 01 00 	lea    0x18608(%rip),%rcx        # 2ed88 <_ZNSt8__detailL19__atomic_spin_countE+0x29d4>
   16780:	48 89 ce             	mov    %rcx,%rsi
   16783:	48 89 c7             	mov    %rax,%rdi
   16786:	ff d2                	call   *%rdx
        vkGetRayTracingCaptureReplayShaderGroupHandlesKHR =
   16788:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1678c:	48 89 82 30 0d 00 00 	mov    %rax,0xd30(%rdx)
        vkCmdTraceRaysIndirectKHR = PFN_vkCmdTraceRaysIndirectKHR( vkGetDeviceProcAddr( device, "vkCmdTraceRaysIndirectKHR" ) );
   16793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16797:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1679b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1679f:	48 8d 0d 14 86 01 00 	lea    0x18614(%rip),%rcx        # 2edba <_ZNSt8__detailL19__atomic_spin_countE+0x2a06>
   167a6:	48 89 ce             	mov    %rcx,%rsi
   167a9:	48 89 c7             	mov    %rax,%rdi
   167ac:	ff d2                	call   *%rdx
   167ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   167b2:	48 89 82 38 0d 00 00 	mov    %rax,0xd38(%rdx)
          PFN_vkGetRayTracingShaderGroupStackSizeKHR( vkGetDeviceProcAddr( device, "vkGetRayTracingShaderGroupStackSizeKHR" ) );
   167b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167bd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   167c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167c5:	48 8d 0d 0c 86 01 00 	lea    0x1860c(%rip),%rcx        # 2edd8 <_ZNSt8__detailL19__atomic_spin_countE+0x2a24>
   167cc:	48 89 ce             	mov    %rcx,%rsi
   167cf:	48 89 c7             	mov    %rax,%rdi
   167d2:	ff d2                	call   *%rdx
        vkGetRayTracingShaderGroupStackSizeKHR =
   167d4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   167d8:	48 89 82 40 0d 00 00 	mov    %rax,0xd40(%rdx)
          PFN_vkCmdSetRayTracingPipelineStackSizeKHR( vkGetDeviceProcAddr( device, "vkCmdSetRayTracingPipelineStackSizeKHR" ) );
   167df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167e3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   167e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167eb:	48 8d 0d 0e 86 01 00 	lea    0x1860e(%rip),%rcx        # 2ee00 <_ZNSt8__detailL19__atomic_spin_countE+0x2a4c>
   167f2:	48 89 ce             	mov    %rcx,%rsi
   167f5:	48 89 c7             	mov    %rax,%rdi
   167f8:	ff d2                	call   *%rdx
        vkCmdSetRayTracingPipelineStackSizeKHR =
   167fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   167fe:	48 89 82 48 0d 00 00 	mov    %rax,0xd48(%rdx)
        vkCreateSamplerYcbcrConversionKHR = PFN_vkCreateSamplerYcbcrConversionKHR( vkGetDeviceProcAddr( device, "vkCreateSamplerYcbcrConversionKHR" ) );
   16805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16809:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1680d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16811:	48 8d 0d 10 86 01 00 	lea    0x18610(%rip),%rcx        # 2ee28 <_ZNSt8__detailL19__atomic_spin_countE+0x2a74>
   16818:	48 89 ce             	mov    %rcx,%rsi
   1681b:	48 89 c7             	mov    %rax,%rdi
   1681e:	ff d2                	call   *%rdx
   16820:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16824:	48 89 82 50 0d 00 00 	mov    %rax,0xd50(%rdx)
        if ( !vkCreateSamplerYcbcrConversion )
   1682b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1682f:	48 8b 80 28 04 00 00 	mov    0x428(%rax),%rax
   16836:	48 85 c0             	test   %rax,%rax
   16839:	75 16                	jne    16851 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x6195>
          vkCreateSamplerYcbcrConversion = vkCreateSamplerYcbcrConversionKHR;
   1683b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1683f:	48 8b 90 50 0d 00 00 	mov    0xd50(%rax),%rdx
   16846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1684a:	48 89 90 28 04 00 00 	mov    %rdx,0x428(%rax)
        vkDestroySamplerYcbcrConversionKHR = PFN_vkDestroySamplerYcbcrConversionKHR( vkGetDeviceProcAddr( device, "vkDestroySamplerYcbcrConversionKHR" ) );
   16851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16855:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1685d:	48 8d 0d ec 85 01 00 	lea    0x185ec(%rip),%rcx        # 2ee50 <_ZNSt8__detailL19__atomic_spin_countE+0x2a9c>
   16864:	48 89 ce             	mov    %rcx,%rsi
   16867:	48 89 c7             	mov    %rax,%rdi
   1686a:	ff d2                	call   *%rdx
   1686c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16870:	48 89 82 58 0d 00 00 	mov    %rax,0xd58(%rdx)
        if ( !vkDestroySamplerYcbcrConversion )
   16877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1687b:	48 8b 80 30 04 00 00 	mov    0x430(%rax),%rax
   16882:	48 85 c0             	test   %rax,%rax
   16885:	75 16                	jne    1689d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x61e1>
          vkDestroySamplerYcbcrConversion = vkDestroySamplerYcbcrConversionKHR;
   16887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1688b:	48 8b 90 58 0d 00 00 	mov    0xd58(%rax),%rdx
   16892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16896:	48 89 90 30 04 00 00 	mov    %rdx,0x430(%rax)
        vkGetSwapchainStatusKHR = PFN_vkGetSwapchainStatusKHR( vkGetDeviceProcAddr( device, "vkGetSwapchainStatusKHR" ) );
   1689d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   168a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168a9:	48 8d 0d c3 85 01 00 	lea    0x185c3(%rip),%rcx        # 2ee73 <_ZNSt8__detailL19__atomic_spin_countE+0x2abf>
   168b0:	48 89 ce             	mov    %rcx,%rsi
   168b3:	48 89 c7             	mov    %rax,%rdi
   168b6:	ff d2                	call   *%rdx
   168b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   168bc:	48 89 82 60 0d 00 00 	mov    %rax,0xd60(%rdx)
        vkCreateSwapchainKHR    = PFN_vkCreateSwapchainKHR( vkGetDeviceProcAddr( device, "vkCreateSwapchainKHR" ) );
   168c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168c7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   168cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168cf:	48 8d 0d b5 85 01 00 	lea    0x185b5(%rip),%rcx        # 2ee8b <_ZNSt8__detailL19__atomic_spin_countE+0x2ad7>
   168d6:	48 89 ce             	mov    %rcx,%rsi
   168d9:	48 89 c7             	mov    %rax,%rdi
   168dc:	ff d2                	call   *%rdx
   168de:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   168e2:	48 89 82 68 0d 00 00 	mov    %rax,0xd68(%rdx)
        vkDestroySwapchainKHR   = PFN_vkDestroySwapchainKHR( vkGetDeviceProcAddr( device, "vkDestroySwapchainKHR" ) );
   168e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168ed:	48 8b 50 10          	mov    0x10(%rax),%rdx
   168f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168f5:	48 8d 0d a4 85 01 00 	lea    0x185a4(%rip),%rcx        # 2eea0 <_ZNSt8__detailL19__atomic_spin_countE+0x2aec>
   168fc:	48 89 ce             	mov    %rcx,%rsi
   168ff:	48 89 c7             	mov    %rax,%rdi
   16902:	ff d2                	call   *%rdx
   16904:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16908:	48 89 82 70 0d 00 00 	mov    %rax,0xd70(%rdx)
        vkGetSwapchainImagesKHR = PFN_vkGetSwapchainImagesKHR( vkGetDeviceProcAddr( device, "vkGetSwapchainImagesKHR" ) );
   1690f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16913:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1691b:	48 8d 0d 94 85 01 00 	lea    0x18594(%rip),%rcx        # 2eeb6 <_ZNSt8__detailL19__atomic_spin_countE+0x2b02>
   16922:	48 89 ce             	mov    %rcx,%rsi
   16925:	48 89 c7             	mov    %rax,%rdi
   16928:	ff d2                	call   *%rdx
   1692a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1692e:	48 89 82 78 0d 00 00 	mov    %rax,0xd78(%rdx)
        vkAcquireNextImageKHR   = PFN_vkAcquireNextImageKHR( vkGetDeviceProcAddr( device, "vkAcquireNextImageKHR" ) );
   16935:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16939:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1693d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16941:	48 8d 0d 86 85 01 00 	lea    0x18586(%rip),%rcx        # 2eece <_ZNSt8__detailL19__atomic_spin_countE+0x2b1a>
   16948:	48 89 ce             	mov    %rcx,%rsi
   1694b:	48 89 c7             	mov    %rax,%rdi
   1694e:	ff d2                	call   *%rdx
   16950:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16954:	48 89 82 80 0d 00 00 	mov    %rax,0xd80(%rdx)
        vkQueuePresentKHR       = PFN_vkQueuePresentKHR( vkGetDeviceProcAddr( device, "vkQueuePresentKHR" ) );
   1695b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1695f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16963:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16967:	48 8d 0d 76 85 01 00 	lea    0x18576(%rip),%rcx        # 2eee4 <_ZNSt8__detailL19__atomic_spin_countE+0x2b30>
   1696e:	48 89 ce             	mov    %rcx,%rsi
   16971:	48 89 c7             	mov    %rax,%rdi
   16974:	ff d2                	call   *%rdx
   16976:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1697a:	48 89 82 88 0d 00 00 	mov    %rax,0xd88(%rdx)
        vkCmdSetEvent2KHR = PFN_vkCmdSetEvent2KHR( vkGetDeviceProcAddr( device, "vkCmdSetEvent2KHR" ) );
   16981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16985:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1698d:	48 8d 0d 62 85 01 00 	lea    0x18562(%rip),%rcx        # 2eef6 <_ZNSt8__detailL19__atomic_spin_countE+0x2b42>
   16994:	48 89 ce             	mov    %rcx,%rsi
   16997:	48 89 c7             	mov    %rax,%rdi
   1699a:	ff d2                	call   *%rdx
   1699c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   169a0:	48 89 82 90 0d 00 00 	mov    %rax,0xd90(%rdx)
        if ( !vkCmdSetEvent2 )
   169a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169ab:	48 8b 80 e0 04 00 00 	mov    0x4e0(%rax),%rax
   169b2:	48 85 c0             	test   %rax,%rax
   169b5:	75 16                	jne    169cd <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x6311>
          vkCmdSetEvent2 = vkCmdSetEvent2KHR;
   169b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169bb:	48 8b 90 90 0d 00 00 	mov    0xd90(%rax),%rdx
   169c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169c6:	48 89 90 e0 04 00 00 	mov    %rdx,0x4e0(%rax)
        vkCmdResetEvent2KHR = PFN_vkCmdResetEvent2KHR( vkGetDeviceProcAddr( device, "vkCmdResetEvent2KHR" ) );
   169cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169d1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   169d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169d9:	48 8d 0d 28 85 01 00 	lea    0x18528(%rip),%rcx        # 2ef08 <_ZNSt8__detailL19__atomic_spin_countE+0x2b54>
   169e0:	48 89 ce             	mov    %rcx,%rsi
   169e3:	48 89 c7             	mov    %rax,%rdi
   169e6:	ff d2                	call   *%rdx
   169e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   169ec:	48 89 82 98 0d 00 00 	mov    %rax,0xd98(%rdx)
        if ( !vkCmdResetEvent2 )
   169f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169f7:	48 8b 80 e8 04 00 00 	mov    0x4e8(%rax),%rax
   169fe:	48 85 c0             	test   %rax,%rax
   16a01:	75 16                	jne    16a19 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x635d>
          vkCmdResetEvent2 = vkCmdResetEvent2KHR;
   16a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a07:	48 8b 90 98 0d 00 00 	mov    0xd98(%rax),%rdx
   16a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a12:	48 89 90 e8 04 00 00 	mov    %rdx,0x4e8(%rax)
        vkCmdWaitEvents2KHR = PFN_vkCmdWaitEvents2KHR( vkGetDeviceProcAddr( device, "vkCmdWaitEvents2KHR" ) );
   16a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a1d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a25:	48 8d 0d f0 84 01 00 	lea    0x184f0(%rip),%rcx        # 2ef1c <_ZNSt8__detailL19__atomic_spin_countE+0x2b68>
   16a2c:	48 89 ce             	mov    %rcx,%rsi
   16a2f:	48 89 c7             	mov    %rax,%rdi
   16a32:	ff d2                	call   *%rdx
   16a34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16a38:	48 89 82 a0 0d 00 00 	mov    %rax,0xda0(%rdx)
        if ( !vkCmdWaitEvents2 )
   16a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a43:	48 8b 80 f0 04 00 00 	mov    0x4f0(%rax),%rax
   16a4a:	48 85 c0             	test   %rax,%rax
   16a4d:	75 16                	jne    16a65 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x63a9>
          vkCmdWaitEvents2 = vkCmdWaitEvents2KHR;
   16a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a53:	48 8b 90 a0 0d 00 00 	mov    0xda0(%rax),%rdx
   16a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a5e:	48 89 90 f0 04 00 00 	mov    %rdx,0x4f0(%rax)
        vkCmdPipelineBarrier2KHR = PFN_vkCmdPipelineBarrier2KHR( vkGetDeviceProcAddr( device, "vkCmdPipelineBarrier2KHR" ) );
   16a65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a69:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16a6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a71:	48 8d 0d b8 84 01 00 	lea    0x184b8(%rip),%rcx        # 2ef30 <_ZNSt8__detailL19__atomic_spin_countE+0x2b7c>
   16a78:	48 89 ce             	mov    %rcx,%rsi
   16a7b:	48 89 c7             	mov    %rax,%rdi
   16a7e:	ff d2                	call   *%rdx
   16a80:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16a84:	48 89 82 a8 0d 00 00 	mov    %rax,0xda8(%rdx)
        if ( !vkCmdPipelineBarrier2 )
   16a8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a8f:	48 8b 80 f8 04 00 00 	mov    0x4f8(%rax),%rax
   16a96:	48 85 c0             	test   %rax,%rax
   16a99:	75 16                	jne    16ab1 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x63f5>
          vkCmdPipelineBarrier2 = vkCmdPipelineBarrier2KHR;
   16a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a9f:	48 8b 90 a8 0d 00 00 	mov    0xda8(%rax),%rdx
   16aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aaa:	48 89 90 f8 04 00 00 	mov    %rdx,0x4f8(%rax)
        vkCmdWriteTimestamp2KHR = PFN_vkCmdWriteTimestamp2KHR( vkGetDeviceProcAddr( device, "vkCmdWriteTimestamp2KHR" ) );
   16ab1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ab5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16abd:	48 8d 0d 85 84 01 00 	lea    0x18485(%rip),%rcx        # 2ef49 <_ZNSt8__detailL19__atomic_spin_countE+0x2b95>
   16ac4:	48 89 ce             	mov    %rcx,%rsi
   16ac7:	48 89 c7             	mov    %rax,%rdi
   16aca:	ff d2                	call   *%rdx
   16acc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16ad0:	48 89 82 b0 0d 00 00 	mov    %rax,0xdb0(%rdx)
        if ( !vkCmdWriteTimestamp2 )
   16ad7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16adb:	48 8b 80 00 05 00 00 	mov    0x500(%rax),%rax
   16ae2:	48 85 c0             	test   %rax,%rax
   16ae5:	75 16                	jne    16afd <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x6441>
          vkCmdWriteTimestamp2 = vkCmdWriteTimestamp2KHR;
   16ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aeb:	48 8b 90 b0 0d 00 00 	mov    0xdb0(%rax),%rdx
   16af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16af6:	48 89 90 00 05 00 00 	mov    %rdx,0x500(%rax)
        vkQueueSubmit2KHR = PFN_vkQueueSubmit2KHR( vkGetDeviceProcAddr( device, "vkQueueSubmit2KHR" ) );
   16afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b01:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16b05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b09:	48 8d 0d 51 84 01 00 	lea    0x18451(%rip),%rcx        # 2ef61 <_ZNSt8__detailL19__atomic_spin_countE+0x2bad>
   16b10:	48 89 ce             	mov    %rcx,%rsi
   16b13:	48 89 c7             	mov    %rax,%rdi
   16b16:	ff d2                	call   *%rdx
   16b18:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16b1c:	48 89 82 b8 0d 00 00 	mov    %rax,0xdb8(%rdx)
        if ( !vkQueueSubmit2 )
   16b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b27:	48 8b 80 08 05 00 00 	mov    0x508(%rax),%rax
   16b2e:	48 85 c0             	test   %rax,%rax
   16b31:	75 16                	jne    16b49 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x648d>
          vkQueueSubmit2 = vkQueueSubmit2KHR;
   16b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b37:	48 8b 90 b8 0d 00 00 	mov    0xdb8(%rax),%rdx
   16b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b42:	48 89 90 08 05 00 00 	mov    %rdx,0x508(%rax)
        vkCmdWriteBufferMarker2AMD  = PFN_vkCmdWriteBufferMarker2AMD( vkGetDeviceProcAddr( device, "vkCmdWriteBufferMarker2AMD" ) );
   16b49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b4d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16b51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b55:	48 8d 0d 17 84 01 00 	lea    0x18417(%rip),%rcx        # 2ef73 <_ZNSt8__detailL19__atomic_spin_countE+0x2bbf>
   16b5c:	48 89 ce             	mov    %rcx,%rsi
   16b5f:	48 89 c7             	mov    %rax,%rdi
   16b62:	ff d2                	call   *%rdx
   16b64:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16b68:	48 89 82 c0 0d 00 00 	mov    %rax,0xdc0(%rdx)
        vkGetQueueCheckpointData2NV = PFN_vkGetQueueCheckpointData2NV( vkGetDeviceProcAddr( device, "vkGetQueueCheckpointData2NV" ) );
   16b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b73:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16b77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b7b:	48 8d 0d 0c 84 01 00 	lea    0x1840c(%rip),%rcx        # 2ef8e <_ZNSt8__detailL19__atomic_spin_countE+0x2bda>
   16b82:	48 89 ce             	mov    %rcx,%rsi
   16b85:	48 89 c7             	mov    %rax,%rdi
   16b88:	ff d2                	call   *%rdx
   16b8a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16b8e:	48 89 82 c8 0d 00 00 	mov    %rax,0xdc8(%rdx)
        vkGetSemaphoreCounterValueKHR = PFN_vkGetSemaphoreCounterValueKHR( vkGetDeviceProcAddr( device, "vkGetSemaphoreCounterValueKHR" ) );
   16b95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b99:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16b9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ba1:	48 8d 0d 02 84 01 00 	lea    0x18402(%rip),%rcx        # 2efaa <_ZNSt8__detailL19__atomic_spin_countE+0x2bf6>
   16ba8:	48 89 ce             	mov    %rcx,%rsi
   16bab:	48 89 c7             	mov    %rax,%rdi
   16bae:	ff d2                	call   *%rdx
   16bb0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16bb4:	48 89 82 d0 0d 00 00 	mov    %rax,0xdd0(%rdx)
        if ( !vkGetSemaphoreCounterValue )
   16bbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bbf:	48 8b 80 90 04 00 00 	mov    0x490(%rax),%rax
   16bc6:	48 85 c0             	test   %rax,%rax
   16bc9:	75 16                	jne    16be1 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x6525>
          vkGetSemaphoreCounterValue = vkGetSemaphoreCounterValueKHR;
   16bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bcf:	48 8b 90 d0 0d 00 00 	mov    0xdd0(%rax),%rdx
   16bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bda:	48 89 90 90 04 00 00 	mov    %rdx,0x490(%rax)
        vkWaitSemaphoresKHR = PFN_vkWaitSemaphoresKHR( vkGetDeviceProcAddr( device, "vkWaitSemaphoresKHR" ) );
   16be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16be5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16be9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bed:	48 8d 0d d4 83 01 00 	lea    0x183d4(%rip),%rcx        # 2efc8 <_ZNSt8__detailL19__atomic_spin_countE+0x2c14>
   16bf4:	48 89 ce             	mov    %rcx,%rsi
   16bf7:	48 89 c7             	mov    %rax,%rdi
   16bfa:	ff d2                	call   *%rdx
   16bfc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16c00:	48 89 82 d8 0d 00 00 	mov    %rax,0xdd8(%rdx)
        if ( !vkWaitSemaphores )
   16c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c0b:	48 8b 80 98 04 00 00 	mov    0x498(%rax),%rax
   16c12:	48 85 c0             	test   %rax,%rax
   16c15:	75 16                	jne    16c2d <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x6571>
          vkWaitSemaphores = vkWaitSemaphoresKHR;
   16c17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c1b:	48 8b 90 d8 0d 00 00 	mov    0xdd8(%rax),%rdx
   16c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c26:	48 89 90 98 04 00 00 	mov    %rdx,0x498(%rax)
        vkSignalSemaphoreKHR = PFN_vkSignalSemaphoreKHR( vkGetDeviceProcAddr( device, "vkSignalSemaphoreKHR" ) );
   16c2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c31:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16c35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c39:	48 8d 0d 9c 83 01 00 	lea    0x1839c(%rip),%rcx        # 2efdc <_ZNSt8__detailL19__atomic_spin_countE+0x2c28>
   16c40:	48 89 ce             	mov    %rcx,%rsi
   16c43:	48 89 c7             	mov    %rax,%rdi
   16c46:	ff d2                	call   *%rdx
   16c48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16c4c:	48 89 82 e0 0d 00 00 	mov    %rax,0xde0(%rdx)
        if ( !vkSignalSemaphore )
   16c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c57:	48 8b 80 a0 04 00 00 	mov    0x4a0(%rax),%rax
   16c5e:	48 85 c0             	test   %rax,%rax
   16c61:	75 16                	jne    16c79 <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x65bd>
          vkSignalSemaphore = vkSignalSemaphoreKHR;
   16c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c67:	48 8b 90 e0 0d 00 00 	mov    0xde0(%rax),%rdx
   16c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c72:	48 89 90 a0 04 00 00 	mov    %rdx,0x4a0(%rax)
        vkCreateCuModuleNVX    = PFN_vkCreateCuModuleNVX( vkGetDeviceProcAddr( device, "vkCreateCuModuleNVX" ) );
   16c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c7d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16c81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c85:	48 8d 0d 65 83 01 00 	lea    0x18365(%rip),%rcx        # 2eff1 <_ZNSt8__detailL19__atomic_spin_countE+0x2c3d>
   16c8c:	48 89 ce             	mov    %rcx,%rsi
   16c8f:	48 89 c7             	mov    %rax,%rdi
   16c92:	ff d2                	call   *%rdx
   16c94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16c98:	48 89 82 48 0e 00 00 	mov    %rax,0xe48(%rdx)
        vkCreateCuFunctionNVX  = PFN_vkCreateCuFunctionNVX( vkGetDeviceProcAddr( device, "vkCreateCuFunctionNVX" ) );
   16c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ca3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cab:	48 8d 0d 53 83 01 00 	lea    0x18353(%rip),%rcx        # 2f005 <_ZNSt8__detailL19__atomic_spin_countE+0x2c51>
   16cb2:	48 89 ce             	mov    %rcx,%rsi
   16cb5:	48 89 c7             	mov    %rax,%rdi
   16cb8:	ff d2                	call   *%rdx
   16cba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16cbe:	48 89 82 50 0e 00 00 	mov    %rax,0xe50(%rdx)
        vkDestroyCuModuleNVX   = PFN_vkDestroyCuModuleNVX( vkGetDeviceProcAddr( device, "vkDestroyCuModuleNVX" ) );
   16cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cc9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ccd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cd1:	48 8d 0d 43 83 01 00 	lea    0x18343(%rip),%rcx        # 2f01b <_ZNSt8__detailL19__atomic_spin_countE+0x2c67>
   16cd8:	48 89 ce             	mov    %rcx,%rsi
   16cdb:	48 89 c7             	mov    %rax,%rdi
   16cde:	ff d2                	call   *%rdx
   16ce0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16ce4:	48 89 82 58 0e 00 00 	mov    %rax,0xe58(%rdx)
        vkDestroyCuFunctionNVX = PFN_vkDestroyCuFunctionNVX( vkGetDeviceProcAddr( device, "vkDestroyCuFunctionNVX" ) );
   16ceb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cef:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16cf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cf7:	48 8d 0d 32 83 01 00 	lea    0x18332(%rip),%rcx        # 2f030 <_ZNSt8__detailL19__atomic_spin_countE+0x2c7c>
   16cfe:	48 89 ce             	mov    %rcx,%rsi
   16d01:	48 89 c7             	mov    %rax,%rdi
   16d04:	ff d2                	call   *%rdx
   16d06:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16d0a:	48 89 82 60 0e 00 00 	mov    %rax,0xe60(%rdx)
        vkCmdCuLaunchKernelNVX = PFN_vkCmdCuLaunchKernelNVX( vkGetDeviceProcAddr( device, "vkCmdCuLaunchKernelNVX" ) );
   16d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d15:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d1d:	48 8d 0d 23 83 01 00 	lea    0x18323(%rip),%rcx        # 2f047 <_ZNSt8__detailL19__atomic_spin_countE+0x2c93>
   16d24:	48 89 ce             	mov    %rcx,%rsi
   16d27:	48 89 c7             	mov    %rax,%rdi
   16d2a:	ff d2                	call   *%rdx
   16d2c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16d30:	48 89 82 68 0e 00 00 	mov    %rax,0xe68(%rdx)
        vkGetImageViewHandleNVX  = PFN_vkGetImageViewHandleNVX( vkGetDeviceProcAddr( device, "vkGetImageViewHandleNVX" ) );
   16d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d3b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d43:	48 8d 0d 14 83 01 00 	lea    0x18314(%rip),%rcx        # 2f05e <_ZNSt8__detailL19__atomic_spin_countE+0x2caa>
   16d4a:	48 89 ce             	mov    %rcx,%rsi
   16d4d:	48 89 c7             	mov    %rax,%rdi
   16d50:	ff d2                	call   *%rdx
   16d52:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16d56:	48 89 82 70 0e 00 00 	mov    %rax,0xe70(%rdx)
        vkGetImageViewAddressNVX = PFN_vkGetImageViewAddressNVX( vkGetDeviceProcAddr( device, "vkGetImageViewAddressNVX" ) );
   16d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d61:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16d65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d69:	48 8d 0d 06 83 01 00 	lea    0x18306(%rip),%rcx        # 2f076 <_ZNSt8__detailL19__atomic_spin_countE+0x2cc2>
   16d70:	48 89 ce             	mov    %rcx,%rsi
   16d73:	48 89 c7             	mov    %rax,%rdi
   16d76:	ff d2                	call   *%rdx
   16d78:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16d7c:	48 89 82 78 0e 00 00 	mov    %rax,0xe78(%rdx)
        vkCmdSetViewportWScalingNV = PFN_vkCmdSetViewportWScalingNV( vkGetDeviceProcAddr( device, "vkCmdSetViewportWScalingNV" ) );
   16d83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d87:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16d8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d8f:	48 8d 0d f9 82 01 00 	lea    0x182f9(%rip),%rcx        # 2f08f <_ZNSt8__detailL19__atomic_spin_countE+0x2cdb>
   16d96:	48 89 ce             	mov    %rcx,%rsi
   16d99:	48 89 c7             	mov    %rax,%rdi
   16d9c:	ff d2                	call   *%rdx
   16d9e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16da2:	48 89 82 80 0e 00 00 	mov    %rax,0xe80(%rdx)
        vkCmdSetCheckpointNV       = PFN_vkCmdSetCheckpointNV( vkGetDeviceProcAddr( device, "vkCmdSetCheckpointNV" ) );
   16da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dad:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16db5:	48 8d 0d ee 82 01 00 	lea    0x182ee(%rip),%rcx        # 2f0aa <_ZNSt8__detailL19__atomic_spin_countE+0x2cf6>
   16dbc:	48 89 ce             	mov    %rcx,%rsi
   16dbf:	48 89 c7             	mov    %rax,%rdi
   16dc2:	ff d2                	call   *%rdx
   16dc4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16dc8:	48 89 82 88 0e 00 00 	mov    %rax,0xe88(%rdx)
        vkGetQueueCheckpointDataNV = PFN_vkGetQueueCheckpointDataNV( vkGetDeviceProcAddr( device, "vkGetQueueCheckpointDataNV" ) );
   16dcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dd3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16dd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ddb:	48 8d 0d dd 82 01 00 	lea    0x182dd(%rip),%rcx        # 2f0bf <_ZNSt8__detailL19__atomic_spin_countE+0x2d0b>
   16de2:	48 89 ce             	mov    %rcx,%rsi
   16de5:	48 89 c7             	mov    %rax,%rdi
   16de8:	ff d2                	call   *%rdx
   16dea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16dee:	48 89 82 90 0e 00 00 	mov    %rax,0xe90(%rdx)
          PFN_vkGetGeneratedCommandsMemoryRequirementsNV( vkGetDeviceProcAddr( device, "vkGetGeneratedCommandsMemoryRequirementsNV" ) );
   16df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16df9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16dfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e01:	48 8d 0d d8 82 01 00 	lea    0x182d8(%rip),%rcx        # 2f0e0 <_ZNSt8__detailL19__atomic_spin_countE+0x2d2c>
   16e08:	48 89 ce             	mov    %rcx,%rsi
   16e0b:	48 89 c7             	mov    %rax,%rdi
   16e0e:	ff d2                	call   *%rdx
        vkGetGeneratedCommandsMemoryRequirementsNV =
   16e10:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e14:	48 89 82 98 0e 00 00 	mov    %rax,0xe98(%rdx)
        vkCmdPreprocessGeneratedCommandsNV = PFN_vkCmdPreprocessGeneratedCommandsNV( vkGetDeviceProcAddr( device, "vkCmdPreprocessGeneratedCommandsNV" ) );
   16e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e1f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e27:	48 8d 0d e2 82 01 00 	lea    0x182e2(%rip),%rcx        # 2f110 <_ZNSt8__detailL19__atomic_spin_countE+0x2d5c>
   16e2e:	48 89 ce             	mov    %rcx,%rsi
   16e31:	48 89 c7             	mov    %rax,%rdi
   16e34:	ff d2                	call   *%rdx
   16e36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e3a:	48 89 82 a0 0e 00 00 	mov    %rax,0xea0(%rdx)
        vkCmdExecuteGeneratedCommandsNV    = PFN_vkCmdExecuteGeneratedCommandsNV( vkGetDeviceProcAddr( device, "vkCmdExecuteGeneratedCommandsNV" ) );
   16e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e45:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16e49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e4d:	48 8d 0d e4 82 01 00 	lea    0x182e4(%rip),%rcx        # 2f138 <_ZNSt8__detailL19__atomic_spin_countE+0x2d84>
   16e54:	48 89 ce             	mov    %rcx,%rsi
   16e57:	48 89 c7             	mov    %rax,%rdi
   16e5a:	ff d2                	call   *%rdx
   16e5c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e60:	48 89 82 a8 0e 00 00 	mov    %rax,0xea8(%rdx)
        vkCmdBindPipelineShaderGroupNV     = PFN_vkCmdBindPipelineShaderGroupNV( vkGetDeviceProcAddr( device, "vkCmdBindPipelineShaderGroupNV" ) );
   16e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e6b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16e6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e73:	48 8d 0d de 82 01 00 	lea    0x182de(%rip),%rcx        # 2f158 <_ZNSt8__detailL19__atomic_spin_countE+0x2da4>
   16e7a:	48 89 ce             	mov    %rcx,%rsi
   16e7d:	48 89 c7             	mov    %rax,%rdi
   16e80:	ff d2                	call   *%rdx
   16e82:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e86:	48 89 82 b0 0e 00 00 	mov    %rax,0xeb0(%rdx)
        vkCreateIndirectCommandsLayoutNV   = PFN_vkCreateIndirectCommandsLayoutNV( vkGetDeviceProcAddr( device, "vkCreateIndirectCommandsLayoutNV" ) );
   16e8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e91:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16e95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e99:	48 8d 0d d8 82 01 00 	lea    0x182d8(%rip),%rcx        # 2f178 <_ZNSt8__detailL19__atomic_spin_countE+0x2dc4>
   16ea0:	48 89 ce             	mov    %rcx,%rsi
   16ea3:	48 89 c7             	mov    %rax,%rdi
   16ea6:	ff d2                	call   *%rdx
   16ea8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16eac:	48 89 82 b8 0e 00 00 	mov    %rax,0xeb8(%rdx)
        vkDestroyIndirectCommandsLayoutNV  = PFN_vkDestroyIndirectCommandsLayoutNV( vkGetDeviceProcAddr( device, "vkDestroyIndirectCommandsLayoutNV" ) );
   16eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eb7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ebb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ebf:	48 8d 0d da 82 01 00 	lea    0x182da(%rip),%rcx        # 2f1a0 <_ZNSt8__detailL19__atomic_spin_countE+0x2dec>
   16ec6:	48 89 ce             	mov    %rcx,%rsi
   16ec9:	48 89 c7             	mov    %rax,%rdi
   16ecc:	ff d2                	call   *%rdx
   16ece:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16ed2:	48 89 82 c0 0e 00 00 	mov    %rax,0xec0(%rdx)
        vkGetMemoryRemoteAddressNV = PFN_vkGetMemoryRemoteAddressNV( vkGetDeviceProcAddr( device, "vkGetMemoryRemoteAddressNV" ) );
   16ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16edd:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ee5:	48 8d 0d d6 82 01 00 	lea    0x182d6(%rip),%rcx        # 2f1c2 <_ZNSt8__detailL19__atomic_spin_countE+0x2e0e>
   16eec:	48 89 ce             	mov    %rcx,%rsi
   16eef:	48 89 c7             	mov    %rax,%rdi
   16ef2:	ff d2                	call   *%rdx
   16ef4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16ef8:	48 89 82 c8 0e 00 00 	mov    %rax,0xec8(%rdx)
        vkCmdSetFragmentShadingRateEnumNV = PFN_vkCmdSetFragmentShadingRateEnumNV( vkGetDeviceProcAddr( device, "vkCmdSetFragmentShadingRateEnumNV" ) );
   16eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f03:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16f07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f0b:	48 8d 0d ce 82 01 00 	lea    0x182ce(%rip),%rcx        # 2f1e0 <_ZNSt8__detailL19__atomic_spin_countE+0x2e2c>
   16f12:	48 89 ce             	mov    %rcx,%rsi
   16f15:	48 89 c7             	mov    %rax,%rdi
   16f18:	ff d2                	call   *%rdx
   16f1a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f1e:	48 89 82 d8 0e 00 00 	mov    %rax,0xed8(%rdx)
        vkCmdDrawMeshTasksNV              = PFN_vkCmdDrawMeshTasksNV( vkGetDeviceProcAddr( device, "vkCmdDrawMeshTasksNV" ) );
   16f25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f29:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16f2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f31:	48 8d 0d ca 82 01 00 	lea    0x182ca(%rip),%rcx        # 2f202 <_ZNSt8__detailL19__atomic_spin_countE+0x2e4e>
   16f38:	48 89 ce             	mov    %rcx,%rsi
   16f3b:	48 89 c7             	mov    %rax,%rdi
   16f3e:	ff d2                	call   *%rdx
   16f40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f44:	48 89 82 e0 0e 00 00 	mov    %rax,0xee0(%rdx)
        vkCmdDrawMeshTasksIndirectNV      = PFN_vkCmdDrawMeshTasksIndirectNV( vkGetDeviceProcAddr( device, "vkCmdDrawMeshTasksIndirectNV" ) );
   16f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f4f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16f53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f57:	48 8d 0d b9 82 01 00 	lea    0x182b9(%rip),%rcx        # 2f217 <_ZNSt8__detailL19__atomic_spin_countE+0x2e63>
   16f5e:	48 89 ce             	mov    %rcx,%rsi
   16f61:	48 89 c7             	mov    %rax,%rdi
   16f64:	ff d2                	call   *%rdx
   16f66:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f6a:	48 89 82 e8 0e 00 00 	mov    %rax,0xee8(%rdx)
        vkCmdDrawMeshTasksIndirectCountNV = PFN_vkCmdDrawMeshTasksIndirectCountNV( vkGetDeviceProcAddr( device, "vkCmdDrawMeshTasksIndirectCountNV" ) );
   16f71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f75:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f7d:	48 8d 0d b4 82 01 00 	lea    0x182b4(%rip),%rcx        # 2f238 <_ZNSt8__detailL19__atomic_spin_countE+0x2e84>
   16f84:	48 89 ce             	mov    %rcx,%rsi
   16f87:	48 89 c7             	mov    %rax,%rdi
   16f8a:	ff d2                	call   *%rdx
   16f8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f90:	48 89 82 f0 0e 00 00 	mov    %rax,0xef0(%rdx)
        vkCreateOpticalFlowSessionNV    = PFN_vkCreateOpticalFlowSessionNV( vkGetDeviceProcAddr( device, "vkCreateOpticalFlowSessionNV" ) );
   16f97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f9b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fa3:	48 8d 0d b0 82 01 00 	lea    0x182b0(%rip),%rcx        # 2f25a <_ZNSt8__detailL19__atomic_spin_countE+0x2ea6>
   16faa:	48 89 ce             	mov    %rcx,%rsi
   16fad:	48 89 c7             	mov    %rax,%rdi
   16fb0:	ff d2                	call   *%rdx
   16fb2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16fb6:	48 89 82 f8 0e 00 00 	mov    %rax,0xef8(%rdx)
        vkDestroyOpticalFlowSessionNV   = PFN_vkDestroyOpticalFlowSessionNV( vkGetDeviceProcAddr( device, "vkDestroyOpticalFlowSessionNV" ) );
   16fbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fc1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16fc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fc9:	48 8d 0d a7 82 01 00 	lea    0x182a7(%rip),%rcx        # 2f277 <_ZNSt8__detailL19__atomic_spin_countE+0x2ec3>
   16fd0:	48 89 ce             	mov    %rcx,%rsi
   16fd3:	48 89 c7             	mov    %rax,%rdi
   16fd6:	ff d2                	call   *%rdx
   16fd8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16fdc:	48 89 82 00 0f 00 00 	mov    %rax,0xf00(%rdx)
        vkBindOpticalFlowSessionImageNV = PFN_vkBindOpticalFlowSessionImageNV( vkGetDeviceProcAddr( device, "vkBindOpticalFlowSessionImageNV" ) );
   16fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fe7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16feb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fef:	48 8d 0d a2 82 01 00 	lea    0x182a2(%rip),%rcx        # 2f298 <_ZNSt8__detailL19__atomic_spin_countE+0x2ee4>
   16ff6:	48 89 ce             	mov    %rcx,%rsi
   16ff9:	48 89 c7             	mov    %rax,%rdi
   16ffc:	ff d2                	call   *%rdx
   16ffe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17002:	48 89 82 08 0f 00 00 	mov    %rax,0xf08(%rdx)
        vkCmdOpticalFlowExecuteNV       = PFN_vkCmdOpticalFlowExecuteNV( vkGetDeviceProcAddr( device, "vkCmdOpticalFlowExecuteNV" ) );
   17009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1700d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17011:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17015:	48 8d 0d 9c 82 01 00 	lea    0x1829c(%rip),%rcx        # 2f2b8 <_ZNSt8__detailL19__atomic_spin_countE+0x2f04>
   1701c:	48 89 ce             	mov    %rcx,%rsi
   1701f:	48 89 c7             	mov    %rax,%rdi
   17022:	ff d2                	call   *%rdx
   17024:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17028:	48 89 82 10 0f 00 00 	mov    %rax,0xf10(%rdx)
        vkCreateAccelerationStructureNV  = PFN_vkCreateAccelerationStructureNV( vkGetDeviceProcAddr( device, "vkCreateAccelerationStructureNV" ) );
   1702f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17033:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17037:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1703b:	48 8d 0d 96 82 01 00 	lea    0x18296(%rip),%rcx        # 2f2d8 <_ZNSt8__detailL19__atomic_spin_countE+0x2f24>
   17042:	48 89 ce             	mov    %rcx,%rsi
   17045:	48 89 c7             	mov    %rax,%rdi
   17048:	ff d2                	call   *%rdx
   1704a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1704e:	48 89 82 18 0f 00 00 	mov    %rax,0xf18(%rdx)
        vkDestroyAccelerationStructureNV = PFN_vkDestroyAccelerationStructureNV( vkGetDeviceProcAddr( device, "vkDestroyAccelerationStructureNV" ) );
   17055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17059:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1705d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17061:	48 8d 0d 90 82 01 00 	lea    0x18290(%rip),%rcx        # 2f2f8 <_ZNSt8__detailL19__atomic_spin_countE+0x2f44>
   17068:	48 89 ce             	mov    %rcx,%rsi
   1706b:	48 89 c7             	mov    %rax,%rdi
   1706e:	ff d2                	call   *%rdx
   17070:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17074:	48 89 82 20 0f 00 00 	mov    %rax,0xf20(%rdx)
          PFN_vkGetAccelerationStructureMemoryRequirementsNV( vkGetDeviceProcAddr( device, "vkGetAccelerationStructureMemoryRequirementsNV" ) );
   1707b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1707f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17087:	48 8d 0d 92 82 01 00 	lea    0x18292(%rip),%rcx        # 2f320 <_ZNSt8__detailL19__atomic_spin_countE+0x2f6c>
   1708e:	48 89 ce             	mov    %rcx,%rsi
   17091:	48 89 c7             	mov    %rax,%rdi
   17094:	ff d2                	call   *%rdx
        vkGetAccelerationStructureMemoryRequirementsNV =
   17096:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1709a:	48 89 82 28 0f 00 00 	mov    %rax,0xf28(%rdx)
        vkBindAccelerationStructureMemoryNV = PFN_vkBindAccelerationStructureMemoryNV( vkGetDeviceProcAddr( device, "vkBindAccelerationStructureMemoryNV" ) );
   170a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170a5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   170a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170ad:	48 8d 0d 9c 82 01 00 	lea    0x1829c(%rip),%rcx        # 2f350 <_ZNSt8__detailL19__atomic_spin_countE+0x2f9c>
   170b4:	48 89 ce             	mov    %rcx,%rsi
   170b7:	48 89 c7             	mov    %rax,%rdi
   170ba:	ff d2                	call   *%rdx
   170bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   170c0:	48 89 82 30 0f 00 00 	mov    %rax,0xf30(%rdx)
        vkCmdBuildAccelerationStructureNV   = PFN_vkCmdBuildAccelerationStructureNV( vkGetDeviceProcAddr( device, "vkCmdBuildAccelerationStructureNV" ) );
   170c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170cb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   170cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170d3:	48 8d 0d 9e 82 01 00 	lea    0x1829e(%rip),%rcx        # 2f378 <_ZNSt8__detailL19__atomic_spin_countE+0x2fc4>
   170da:	48 89 ce             	mov    %rcx,%rsi
   170dd:	48 89 c7             	mov    %rax,%rdi
   170e0:	ff d2                	call   *%rdx
   170e2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   170e6:	48 89 82 38 0f 00 00 	mov    %rax,0xf38(%rdx)
        vkCmdCopyAccelerationStructureNV    = PFN_vkCmdCopyAccelerationStructureNV( vkGetDeviceProcAddr( device, "vkCmdCopyAccelerationStructureNV" ) );
   170ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170f1:	48 8b 50 10          	mov    0x10(%rax),%rdx
   170f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170f9:	48 8d 0d a0 82 01 00 	lea    0x182a0(%rip),%rcx        # 2f3a0 <_ZNSt8__detailL19__atomic_spin_countE+0x2fec>
   17100:	48 89 ce             	mov    %rcx,%rsi
   17103:	48 89 c7             	mov    %rax,%rdi
   17106:	ff d2                	call   *%rdx
   17108:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1710c:	48 89 82 40 0f 00 00 	mov    %rax,0xf40(%rdx)
        vkCmdTraceRaysNV                    = PFN_vkCmdTraceRaysNV( vkGetDeviceProcAddr( device, "vkCmdTraceRaysNV" ) );
   17113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17117:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1711b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1711f:	48 8d 0d 9b 82 01 00 	lea    0x1829b(%rip),%rcx        # 2f3c1 <_ZNSt8__detailL19__atomic_spin_countE+0x300d>
   17126:	48 89 ce             	mov    %rcx,%rsi
   17129:	48 89 c7             	mov    %rax,%rdi
   1712c:	ff d2                	call   *%rdx
   1712e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17132:	48 89 82 48 0f 00 00 	mov    %rax,0xf48(%rdx)
        vkCreateRayTracingPipelinesNV       = PFN_vkCreateRayTracingPipelinesNV( vkGetDeviceProcAddr( device, "vkCreateRayTracingPipelinesNV" ) );
   17139:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1713d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17145:	48 8d 0d 86 82 01 00 	lea    0x18286(%rip),%rcx        # 2f3d2 <_ZNSt8__detailL19__atomic_spin_countE+0x301e>
   1714c:	48 89 ce             	mov    %rcx,%rsi
   1714f:	48 89 c7             	mov    %rax,%rdi
   17152:	ff d2                	call   *%rdx
   17154:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17158:	48 89 82 50 0f 00 00 	mov    %rax,0xf50(%rdx)
        vkGetRayTracingShaderGroupHandlesNV = PFN_vkGetRayTracingShaderGroupHandlesNV( vkGetDeviceProcAddr( device, "vkGetRayTracingShaderGroupHandlesNV" ) );
   1715f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17163:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17167:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1716b:	48 8d 0d 7e 82 01 00 	lea    0x1827e(%rip),%rcx        # 2f3f0 <_ZNSt8__detailL19__atomic_spin_countE+0x303c>
   17172:	48 89 ce             	mov    %rcx,%rsi
   17175:	48 89 c7             	mov    %rax,%rdi
   17178:	ff d2                	call   *%rdx
   1717a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1717e:	48 89 82 58 0f 00 00 	mov    %rax,0xf58(%rdx)
        if ( !vkGetRayTracingShaderGroupHandlesKHR )
   17185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17189:	48 8b 80 28 0d 00 00 	mov    0xd28(%rax),%rax
   17190:	48 85 c0             	test   %rax,%rax
   17193:	75 16                	jne    171ab <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_+0x6aef>
          vkGetRayTracingShaderGroupHandlesKHR = vkGetRayTracingShaderGroupHandlesNV;
   17195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17199:	48 8b 90 58 0f 00 00 	mov    0xf58(%rax),%rdx
   171a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171a4:	48 89 90 28 0d 00 00 	mov    %rdx,0xd28(%rax)
        vkGetAccelerationStructureHandleNV = PFN_vkGetAccelerationStructureHandleNV( vkGetDeviceProcAddr( device, "vkGetAccelerationStructureHandleNV" ) );
   171ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171af:	48 8b 50 10          	mov    0x10(%rax),%rdx
   171b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   171b7:	48 8d 0d 5a 82 01 00 	lea    0x1825a(%rip),%rcx        # 2f418 <_ZNSt8__detailL19__atomic_spin_countE+0x3064>
   171be:	48 89 ce             	mov    %rcx,%rsi
   171c1:	48 89 c7             	mov    %rax,%rdi
   171c4:	ff d2                	call   *%rdx
   171c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   171ca:	48 89 82 60 0f 00 00 	mov    %rax,0xf60(%rdx)
          PFN_vkCmdWriteAccelerationStructuresPropertiesNV( vkGetDeviceProcAddr( device, "vkCmdWriteAccelerationStructuresPropertiesNV" ) );
   171d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171d5:	48 8b 50 10          	mov    0x10(%rax),%rdx
   171d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   171dd:	48 8d 0d 5c 82 01 00 	lea    0x1825c(%rip),%rcx        # 2f440 <_ZNSt8__detailL19__atomic_spin_countE+0x308c>
   171e4:	48 89 ce             	mov    %rcx,%rsi
   171e7:	48 89 c7             	mov    %rax,%rdi
   171ea:	ff d2                	call   *%rdx
        vkCmdWriteAccelerationStructuresPropertiesNV =
   171ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   171f0:	48 89 82 68 0f 00 00 	mov    %rax,0xf68(%rdx)
        vkCompileDeferredNV = PFN_vkCompileDeferredNV( vkGetDeviceProcAddr( device, "vkCompileDeferredNV" ) );
   171f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171fb:	48 8b 50 10          	mov    0x10(%rax),%rdx
   171ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17203:	48 8d 0d 63 82 01 00 	lea    0x18263(%rip),%rcx        # 2f46d <_ZNSt8__detailL19__atomic_spin_countE+0x30b9>
   1720a:	48 89 ce             	mov    %rcx,%rsi
   1720d:	48 89 c7             	mov    %rax,%rdi
   17210:	ff d2                	call   *%rdx
   17212:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17216:	48 89 82 70 0f 00 00 	mov    %rax,0xf70(%rdx)
        vkCmdSetExclusiveScissorNV = PFN_vkCmdSetExclusiveScissorNV( vkGetDeviceProcAddr( device, "vkCmdSetExclusiveScissorNV" ) );
   1721d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17221:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17229:	48 8d 0d 51 82 01 00 	lea    0x18251(%rip),%rcx        # 2f481 <_ZNSt8__detailL19__atomic_spin_countE+0x30cd>
   17230:	48 89 ce             	mov    %rcx,%rsi
   17233:	48 89 c7             	mov    %rax,%rdi
   17236:	ff d2                	call   *%rdx
   17238:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1723c:	48 89 82 78 0f 00 00 	mov    %rax,0xf78(%rdx)
        vkCmdBindShadingRateImageNV = PFN_vkCmdBindShadingRateImageNV( vkGetDeviceProcAddr( device, "vkCmdBindShadingRateImageNV" ) );
   17243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17247:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1724b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1724f:	48 8d 0d 46 82 01 00 	lea    0x18246(%rip),%rcx        # 2f49c <_ZNSt8__detailL19__atomic_spin_countE+0x30e8>
   17256:	48 89 ce             	mov    %rcx,%rsi
   17259:	48 89 c7             	mov    %rax,%rdi
   1725c:	ff d2                	call   *%rdx
   1725e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17262:	48 89 82 80 0f 00 00 	mov    %rax,0xf80(%rdx)
          PFN_vkCmdSetViewportShadingRatePaletteNV( vkGetDeviceProcAddr( device, "vkCmdSetViewportShadingRatePaletteNV" ) );
   17269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1726d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17271:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17275:	48 8d 0d 3c 82 01 00 	lea    0x1823c(%rip),%rcx        # 2f4b8 <_ZNSt8__detailL19__atomic_spin_countE+0x3104>
   1727c:	48 89 ce             	mov    %rcx,%rsi
   1727f:	48 89 c7             	mov    %rax,%rdi
   17282:	ff d2                	call   *%rdx
        vkCmdSetViewportShadingRatePaletteNV =
   17284:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17288:	48 89 82 88 0f 00 00 	mov    %rax,0xf88(%rdx)
        vkCmdSetCoarseSampleOrderNV = PFN_vkCmdSetCoarseSampleOrderNV( vkGetDeviceProcAddr( device, "vkCmdSetCoarseSampleOrderNV" ) );
   1728f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17293:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17297:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1729b:	48 8d 0d 3b 82 01 00 	lea    0x1823b(%rip),%rcx        # 2f4dd <_ZNSt8__detailL19__atomic_spin_countE+0x3129>
   172a2:	48 89 ce             	mov    %rcx,%rsi
   172a5:	48 89 c7             	mov    %rax,%rdi
   172a8:	ff d2                	call   *%rdx
   172aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   172ae:	48 89 82 90 0f 00 00 	mov    %rax,0xf90(%rdx)
        vkGetFramebufferTilePropertiesQCOM = PFN_vkGetFramebufferTilePropertiesQCOM( vkGetDeviceProcAddr( device, "vkGetFramebufferTilePropertiesQCOM" ) );
   172b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172b9:	48 8b 50 10          	mov    0x10(%rax),%rdx
   172bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   172c1:	48 8d 0d 38 82 01 00 	lea    0x18238(%rip),%rcx        # 2f500 <_ZNSt8__detailL19__atomic_spin_countE+0x314c>
   172c8:	48 89 ce             	mov    %rcx,%rsi
   172cb:	48 89 c7             	mov    %rax,%rdi
   172ce:	ff d2                	call   *%rdx
   172d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   172d4:	48 89 82 98 0f 00 00 	mov    %rax,0xf98(%rdx)
          PFN_vkGetDynamicRenderingTilePropertiesQCOM( vkGetDeviceProcAddr( device, "vkGetDynamicRenderingTilePropertiesQCOM" ) );
   172db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172df:	48 8b 50 10          	mov    0x10(%rax),%rdx
   172e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   172e7:	48 8d 0d 3a 82 01 00 	lea    0x1823a(%rip),%rcx        # 2f528 <_ZNSt8__detailL19__atomic_spin_countE+0x3174>
   172ee:	48 89 ce             	mov    %rcx,%rsi
   172f1:	48 89 c7             	mov    %rax,%rdi
   172f4:	ff d2                	call   *%rdx
        vkGetDynamicRenderingTilePropertiesQCOM =
   172f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   172fa:	48 89 82 a0 0f 00 00 	mov    %rax,0xfa0(%rdx)
          PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE( vkGetDeviceProcAddr( device, "vkGetDescriptorSetLayoutHostMappingInfoVALVE" ) );
   17301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17305:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17309:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1730d:	48 8d 0d 3c 82 01 00 	lea    0x1823c(%rip),%rcx        # 2f550 <_ZNSt8__detailL19__atomic_spin_countE+0x319c>
   17314:	48 89 ce             	mov    %rcx,%rsi
   17317:	48 89 c7             	mov    %rax,%rdi
   1731a:	ff d2                	call   *%rdx
        vkGetDescriptorSetLayoutHostMappingInfoVALVE =
   1731c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17320:	48 89 82 a8 0f 00 00 	mov    %rax,0xfa8(%rdx)
        vkGetDescriptorSetHostMappingVALVE = PFN_vkGetDescriptorSetHostMappingVALVE( vkGetDeviceProcAddr( device, "vkGetDescriptorSetHostMappingVALVE" ) );
   17327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1732b:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1732f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17333:	48 8d 0d 46 82 01 00 	lea    0x18246(%rip),%rcx        # 2f580 <_ZNSt8__detailL19__atomic_spin_countE+0x31cc>
   1733a:	48 89 ce             	mov    %rcx,%rsi
   1733d:	48 89 c7             	mov    %rax,%rdi
   17340:	ff d2                	call   *%rdx
   17342:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17346:	48 89 82 b0 0f 00 00 	mov    %rax,0xfb0(%rdx)
      }
   1734d:	90                   	nop
   1734e:	c9                   	leave
   1734f:	c3                   	ret

0000000000017350 <_ZNK2vk4raii8InstancedeEv>:
      VULKAN_HPP_NAMESPACE::Instance const & operator*() const VULKAN_HPP_NOEXCEPT
   17350:	55                   	push   %rbp
   17351:	48 89 e5             	mov    %rsp,%rbp
   17354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        return m_instance;
   17358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1735c:	5d                   	pop    %rbp
   1735d:	c3                   	ret

000000000001735e <_ZN2vk14PhysicalDeviceC1Ev>:
    VULKAN_HPP_CONSTEXPR PhysicalDevice() = default;
   1735e:	55                   	push   %rbp
   1735f:	48 89 e5             	mov    %rsp,%rbp
   17362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1736a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17371:	90                   	nop
   17372:	5d                   	pop    %rbp
   17373:	c3                   	ret

0000000000017374 <_ZN2vk4raii14PhysicalDeviceC1ERKNS0_8InstanceEP18VkPhysicalDevice_T>:
      PhysicalDevice( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Instance const & instance, VkPhysicalDevice physicalDevice )
   17374:	55                   	push   %rbp
   17375:	48 89 e5             	mov    %rsp,%rbp
   17378:	48 83 ec 20          	sub    $0x20,%rsp
   1737c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17380:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17384:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        : m_physicalDevice( physicalDevice ), m_dispatcher( instance.getDispatcher() )
   17388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1738c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17390:	48 89 d6             	mov    %rdx,%rsi
   17393:	48 89 c7             	mov    %rax,%rdi
   17396:	e8 07 93 ff ff       	call   106a2 <_ZN2vk14PhysicalDeviceC1EP18VkPhysicalDevice_T>
   1739b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1739f:	48 89 c7             	mov    %rax,%rdi
   173a2:	e8 e1 20 ff ff       	call   9488 <_ZNK2vk4raii8Instance13getDispatcherEv>
   173a7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   173ab:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   173af:	90                   	nop
   173b0:	c9                   	leave
   173b1:	c3                   	ret

00000000000173b2 <_ZN2vk4raii14PhysicalDeviceC1ERKS1_>:
      PhysicalDevice( PhysicalDevice const & rhs ) : m_physicalDevice( rhs.m_physicalDevice ), m_dispatcher( rhs.m_dispatcher ) {}
   173b2:	55                   	push   %rbp
   173b3:	48 89 e5             	mov    %rsp,%rbp
   173b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   173be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   173c6:	48 8b 12             	mov    (%rdx),%rdx
   173c9:	48 89 10             	mov    %rdx,(%rax)
   173cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   173d0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   173d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173d8:	48 89 50 08          	mov    %rdx,0x8(%rax)
   173dc:	90                   	nop
   173dd:	5d                   	pop    %rbp
   173de:	c3                   	ret
   173df:	90                   	nop

00000000000173e0 <_ZN2vk4raii14PhysicalDeviceC1EOS1_>:
      PhysicalDevice( PhysicalDevice && rhs ) VULKAN_HPP_NOEXCEPT
   173e0:	55                   	push   %rbp
   173e1:	48 89 e5             	mov    %rsp,%rbp
   173e4:	48 83 ec 30          	sub    $0x30,%rsp
   173e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   173ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
        : m_physicalDevice( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_physicalDevice, {} ) )
   173f0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   173f7:	00 
   173f8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   173fc:	48 89 c7             	mov    %rax,%rdi
   173ff:	e8 5a ff ff ff       	call   1735e <_ZN2vk14PhysicalDeviceC1Ev>
   17404:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17408:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      return std::exchange<T>( obj, std::forward<U>( newValue ) );
   1740c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   17410:	48 89 c7             	mov    %rax,%rdi
   17413:	e8 1d 21 00 00       	call   19535 <_ZSt7forwardIN2vk14PhysicalDeviceEEOT_RNSt16remove_referenceIS2_E4typeE>
   17418:	48 89 c2             	mov    %rax,%rdx
   1741b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1741f:	48 89 d6             	mov    %rdx,%rsi
   17422:	48 89 c7             	mov    %rax,%rdi
   17425:	e8 19 21 00 00       	call   19543 <_ZSt8exchangeIN2vk14PhysicalDeviceES1_ET_RS2_OT0_>
   1742a:	90                   	nop
   1742b:	48 89 c2             	mov    %rax,%rdx
        : m_physicalDevice( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_physicalDevice, {} ) )
   1742e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17432:	48 89 10             	mov    %rdx,(%rax)
        , m_dispatcher( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_dispatcher, nullptr ) )
   17435:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1743c:	00 
   1743d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17441:	48 83 c0 08          	add    $0x8,%rax
   17445:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      return std::exchange<T>( obj, std::forward<U>( newValue ) );
   17449:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1744d:	48 89 c7             	mov    %rax,%rdi
   17450:	e8 1e 21 00 00       	call   19573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>
   17455:	48 89 c2             	mov    %rax,%rdx
   17458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1745c:	48 89 d6             	mov    %rdx,%rsi
   1745f:	48 89 c7             	mov    %rax,%rdi
   17462:	e8 1a 21 00 00       	call   19581 <_ZSt8exchangeIPKN2vk4raii18InstanceDispatcherEDnET_RS5_OT0_>
   17467:	90                   	nop
        , m_dispatcher( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_dispatcher, nullptr ) )
   17468:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1746c:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   17470:	90                   	nop
   17471:	c9                   	leave
   17472:	c3                   	ret
   17473:	90                   	nop

0000000000017474 <_ZNK2vk4raii14PhysicalDevicedeEv>:
      VULKAN_HPP_NAMESPACE::PhysicalDevice const & operator*() const VULKAN_HPP_NOEXCEPT
   17474:	55                   	push   %rbp
   17475:	48 89 e5             	mov    %rsp,%rbp
   17478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        return m_physicalDevice;
   1747c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   17480:	5d                   	pop    %rbp
   17481:	c3                   	ret

0000000000017482 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   17482:	55                   	push   %rbp
   17483:	48 89 e5             	mov    %rsp,%rbp
   17486:	48 83 ec 10          	sub    $0x10,%rsp
   1748a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1748e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17492:	48 89 c7             	mov    %rax,%rdi
   17495:	e8 16 11 00 00       	call   185b0 <_ZNSaIN2vk4raii14PhysicalDeviceEED1Ev>
   1749a:	90                   	nop
   1749b:	c9                   	leave
   1749c:	c3                   	ret
   1749d:	90                   	nop

000000000001749e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EEC1Ev>:
      _Vector_base() = default;
   1749e:	55                   	push   %rbp
   1749f:	48 89 e5             	mov    %rsp,%rbp
   174a2:	48 83 ec 10          	sub    $0x10,%rsp
   174a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174ae:	48 89 c7             	mov    %rax,%rdi
   174b1:	e8 d2 10 00 00       	call   18588 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE12_Vector_implC1Ev>
   174b6:	90                   	nop
   174b7:	c9                   	leave
   174b8:	c3                   	ret
   174b9:	90                   	nop

00000000000174ba <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EEC1Ev>:
      vector() = default;
   174ba:	55                   	push   %rbp
   174bb:	48 89 e5             	mov    %rsp,%rbp
   174be:	48 83 ec 10          	sub    $0x10,%rsp
   174c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174ca:	48 89 c7             	mov    %rax,%rdi
   174cd:	e8 cc ff ff ff       	call   1749e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EEC1Ev>
   174d2:	90                   	nop
   174d3:	c9                   	leave
   174d4:	c3                   	ret
   174d5:	90                   	nop

00000000000174d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   174d6:	55                   	push   %rbp
   174d7:	48 89 e5             	mov    %rsp,%rbp
   174da:	48 83 ec 10          	sub    $0x10,%rsp
   174de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174e6:	48 89 c7             	mov    %rax,%rdi
   174e9:	e8 60 11 00 00       	call   1864e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
   174ee:	90                   	nop
   174ef:	c9                   	leave
   174f0:	c3                   	ret

00000000000174f1 <_ZN9__gnu_cxxeqIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   174f1:	55                   	push   %rbp
   174f2:	48 89 e5             	mov    %rsp,%rbp
   174f5:	53                   	push   %rbx
   174f6:	48 83 ec 18          	sub    $0x18,%rsp
   174fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   174fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   17502:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17506:	48 89 c7             	mov    %rax,%rdi
   17509:	e8 1e 00 00 00       	call   1752c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1750e:	48 8b 18             	mov    (%rax),%rbx
   17511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17515:	48 89 c7             	mov    %rax,%rdi
   17518:	e8 0f 00 00 00       	call   1752c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1751d:	48 8b 00             	mov    (%rax),%rax
   17520:	48 39 c3             	cmp    %rax,%rbx
   17523:	0f 94 c0             	sete   %al
   17526:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1752a:	c9                   	leave
   1752b:	c3                   	ret

000000000001752c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1752c:	55                   	push   %rbp
   1752d:	48 89 e5             	mov    %rsp,%rbp
   17530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   17534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17538:	5d                   	pop    %rbp
   17539:	c3                   	ret

000000000001753a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1753a:	55                   	push   %rbp
   1753b:	48 89 e5             	mov    %rsp,%rbp
   1753e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   17542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17546:	48 8b 00             	mov    (%rax),%rax
   17549:	5d                   	pop    %rbp
   1754a:	c3                   	ret
   1754b:	90                   	nop

000000000001754c <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE>:
      PhysicalDevices( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Instance const & instance )
   1754c:	55                   	push   %rbp
   1754d:	48 89 e5             	mov    %rsp,%rbp
   17550:	41 54                	push   %r12
   17552:	53                   	push   %rbx
   17553:	48 83 ec 70          	sub    $0x70,%rsp
   17557:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1755b:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      {
   1755f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   17563:	48 89 c7             	mov    %rax,%rdi
   17566:	e8 4f ff ff ff       	call   174ba <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EEC1Ev>
        VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher const * dispatcher = instance.getDispatcher();
   1756b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1756f:	48 89 c7             	mov    %rax,%rdi
   17572:	e8 11 1f ff ff       	call   9488 <_ZNK2vk4raii8Instance13getDispatcherEv>
   17577:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
        std::vector<VkPhysicalDevice>                                               physicalDevices;
   1757b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1757f:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
   17583:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
            dispatcher->vkEnumeratePhysicalDevices( static_cast<VkInstance>( *instance ), &physicalDeviceCount, nullptr ) );
   17588:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1758c:	48 8b 58 18          	mov    0x18(%rax),%rbx
   17590:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   17594:	48 89 c7             	mov    %rax,%rdi
   17597:	e8 b4 fd ff ff       	call   17350 <_ZNK2vk4raii8InstancedeEv>
   1759c:	48 89 c7             	mov    %rax,%rdi
   1759f:	e8 6e 1b ff ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
   175a4:	48 89 c1             	mov    %rax,%rcx
   175a7:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
   175ab:	ba 00 00 00 00       	mov    $0x0,%edx
   175b0:	48 89 c6             	mov    %rax,%rsi
   175b3:	48 89 cf             	mov    %rcx,%rdi
   175b6:	ff d3                	call   *%rbx
   175b8:	89 45 ec             	mov    %eax,-0x14(%rbp)
          if ( ( result == VULKAN_HPP_NAMESPACE::Result::eSuccess ) && physicalDeviceCount )
   175bb:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   175bf:	75 5b                	jne    1761c <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0xd0>
   175c1:	8b 45 ac             	mov    -0x54(%rbp),%eax
   175c4:	85 c0                	test   %eax,%eax
   175c6:	74 54                	je     1761c <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0xd0>
            physicalDevices.resize( physicalDeviceCount );
   175c8:	8b 45 ac             	mov    -0x54(%rbp),%eax
   175cb:	89 c2                	mov    %eax,%edx
   175cd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   175d1:	48 89 d6             	mov    %rdx,%rsi
   175d4:	48 89 c7             	mov    %rax,%rdi
   175d7:	e8 10 11 00 00       	call   186ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE6resizeEm>
              dispatcher->vkEnumeratePhysicalDevices( static_cast<VkInstance>( *instance ), &physicalDeviceCount, physicalDevices.data() ) );
   175dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   175e0:	48 8b 58 18          	mov    0x18(%rax),%rbx
   175e4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   175e8:	48 89 c7             	mov    %rax,%rdi
   175eb:	e8 82 11 00 00       	call   18772 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
   175f0:	49 89 c4             	mov    %rax,%r12
   175f3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   175f7:	48 89 c7             	mov    %rax,%rdi
   175fa:	e8 51 fd ff ff       	call   17350 <_ZNK2vk4raii8InstancedeEv>
   175ff:	48 89 c7             	mov    %rax,%rdi
   17602:	e8 0b 1b ff ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
   17607:	48 89 c1             	mov    %rax,%rcx
   1760a:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
   1760e:	4c 89 e2             	mov    %r12,%rdx
   17611:	48 89 c6             	mov    %rax,%rsi
   17614:	48 89 cf             	mov    %rcx,%rdi
   17617:	ff d3                	call   *%rbx
   17619:	89 45 ec             	mov    %eax,-0x14(%rbp)
        } while ( result == VULKAN_HPP_NAMESPACE::Result::eIncomplete );
   1761c:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
   17620:	0f 84 62 ff ff ff    	je     17588 <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x3c>
        if ( result == VULKAN_HPP_NAMESPACE::Result::eSuccess )
   17626:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1762a:	0f 85 cb 00 00 00    	jne    176fb <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x1af>
          VULKAN_HPP_ASSERT( physicalDeviceCount <= physicalDevices.size() );
   17630:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17633:	89 c3                	mov    %eax,%ebx
   17635:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17639:	48 89 c7             	mov    %rax,%rdi
   1763c:	e8 55 11 00 00       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   17641:	48 39 d8             	cmp    %rbx,%rax
   17644:	73 28                	jae    1766e <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x122>
   17646:	48 8d 05 63 80 01 00 	lea    0x18063(%rip),%rax        # 2f6b0 <_ZNSt8__detailL19__atomic_spin_countE+0x32fc>
   1764d:	48 89 c1             	mov    %rax,%rcx
   17650:	ba 6e 0c 00 00       	mov    $0xc6e,%edx
   17655:	48 8d 05 9c 7f 01 00 	lea    0x17f9c(%rip),%rax        # 2f5f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3244>
   1765c:	48 89 c6             	mov    %rax,%rsi
   1765f:	48 8d 05 92 80 01 00 	lea    0x18092(%rip),%rax        # 2f6f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3344>
   17666:	48 89 c7             	mov    %rax,%rdi
   17669:	e8 a2 da fe ff       	call   5110 <__assert_fail@plt>
          this->reserve( physicalDeviceCount );
   1766e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   17672:	8b 55 ac             	mov    -0x54(%rbp),%edx
   17675:	89 d2                	mov    %edx,%edx
   17677:	48 89 d6             	mov    %rdx,%rsi
   1767a:	48 89 c7             	mov    %rax,%rdi
   1767d:	e8 5c 11 00 00       	call   187de <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE7reserveEm>
          for ( auto const & physicalDevice : physicalDevices )
   17682:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17686:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1768a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1768e:	48 89 c7             	mov    %rax,%rdi
   17691:	e8 62 12 00 00       	call   188f8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   17696:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1769a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1769e:	48 89 c7             	mov    %rax,%rdi
   176a1:	e8 78 12 00 00       	call   1891e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   176a6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   176aa:	eb 33                	jmp    176df <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x193>
   176ac:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   176b0:	48 89 c7             	mov    %rax,%rdi
   176b3:	e8 82 fe ff ff       	call   1753a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   176b8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
            this->emplace_back( instance, physicalDevice );
   176bc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   176c0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   176c4:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   176c8:	48 89 ce             	mov    %rcx,%rsi
   176cb:	48 89 c7             	mov    %rax,%rdi
   176ce:	e8 95 12 00 00       	call   18968 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12emplace_backIJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEERS2_DpOT_>
          for ( auto const & physicalDevice : physicalDevices )
   176d3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   176d7:	48 89 c7             	mov    %rax,%rdi
   176da:	e8 69 12 00 00       	call   18948 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   176df:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   176e3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   176e7:	48 89 d6             	mov    %rdx,%rsi
   176ea:	48 89 c7             	mov    %rax,%rdi
   176ed:	e8 ff fd ff ff       	call   174f1 <_ZN9__gnu_cxxeqIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   176f2:	83 f0 01             	xor    $0x1,%eax
   176f5:	84 c0                	test   %al,%al
   176f7:	75 b3                	jne    176ac <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x160>
   176f9:	eb 14                	jmp    1770f <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x1c3>
          throwResultException( result, "vkEnumeratePhysicalDevices" );
   176fb:	8b 45 ec             	mov    -0x14(%rbp),%eax
   176fe:	48 8d 15 21 80 01 00 	lea    0x18021(%rip),%rdx        # 2f726 <_ZNSt8__detailL19__atomic_spin_countE+0x3372>
   17705:	48 89 d6             	mov    %rdx,%rsi
   17708:	89 c7                	mov    %eax,%edi
   1770a:	e8 83 6e ff ff       	call   e592 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
      }
   1770f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17713:	48 89 c7             	mov    %rax,%rdi
   17716:	e8 8d 0f 00 00       	call   186a8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   1771b:	eb 26                	jmp    17743 <_ZN2vk4raii15PhysicalDevicesC1ERKNS0_8InstanceE+0x1f7>
   1771d:	48 89 c3             	mov    %rax,%rbx
   17720:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   17724:	48 89 c7             	mov    %rax,%rdi
   17727:	e8 7c 0f 00 00       	call   186a8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   1772c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   17730:	48 89 c7             	mov    %rax,%rdi
   17733:	e8 d2 0e 00 00       	call   1860a <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EED1Ev>
   17738:	48 89 d8             	mov    %rbx,%rax
   1773b:	48 89 c7             	mov    %rax,%rdi
   1773e:	e8 5d dc fe ff       	call   53a0 <_Unwind_Resume@plt>
   17743:	48 83 c4 70          	add    $0x70,%rsp
   17747:	5b                   	pop    %rbx
   17748:	41 5c                	pop    %r12
   1774a:	5d                   	pop    %rbp
   1774b:	c3                   	ret

000000000001774c <_ZN2vk6DeviceC1Ev>:
    VULKAN_HPP_CONSTEXPR Device() = default;
   1774c:	55                   	push   %rbp
   1774d:	48 89 e5             	mov    %rsp,%rbp
   17750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17758:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1775f:	90                   	nop
   17760:	5d                   	pop    %rbp
   17761:	c3                   	ret

0000000000017762 <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      Device( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::PhysicalDevice const &         physicalDevice,
   17762:	55                   	push   %rbp
   17763:	48 89 e5             	mov    %rsp,%rbp
   17766:	41 55                	push   %r13
   17768:	41 54                	push   %r12
   1776a:	53                   	push   %rbx
   1776b:	48 83 ec 48          	sub    $0x48,%rsp
   1776f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17773:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   17777:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1777b:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
   1777f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17783:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1778a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1778e:	48 89 c7             	mov    %rax,%rdi
   17791:	e8 b6 ff ff ff       	call   1774c <_ZN2vk6DeviceC1Ev>
   17796:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1779a:	48 89 c7             	mov    %rax,%rdi
   1779d:	e8 d4 0d 00 00       	call   18576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
   177a2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   177a6:	48 89 42 08          	mov    %rax,0x8(%rdx)
   177aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   177ae:	48 83 c0 10          	add    $0x10,%rax
   177b2:	48 89 c7             	mov    %rax,%rdi
   177b5:	e8 b2 12 00 00       	call   18a6c <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>
          physicalDevice.getDispatcher()->vkCreateDevice( static_cast<VkPhysicalDevice>( *physicalDevice ),
   177ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   177be:	48 89 c7             	mov    %rax,%rdi
   177c1:	e8 be 61 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   177c6:	4c 8b 68 58          	mov    0x58(%rax),%r13
                                                          reinterpret_cast<VkDevice *>( &m_device ) ) );
   177ca:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
                                                          reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
   177ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   177d2:	48 8b 58 08          	mov    0x8(%rax),%rbx
          physicalDevice.getDispatcher()->vkCreateDevice( static_cast<VkPhysicalDevice>( *physicalDevice ),
   177d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   177da:	48 89 c7             	mov    %rax,%rdi
   177dd:	e8 92 fc ff ff       	call   17474 <_ZNK2vk4raii14PhysicalDevicedeEv>
   177e2:	48 89 c7             	mov    %rax,%rdi
   177e5:	e8 88 61 ff ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
   177ea:	48 89 c7             	mov    %rax,%rdi
   177ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   177f1:	4c 89 e1             	mov    %r12,%rcx
   177f4:	48 89 da             	mov    %rbx,%rdx
   177f7:	48 89 c6             	mov    %rax,%rsi
   177fa:	41 ff d5             	call   *%r13
   177fd:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
   17800:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   17804:	74 14                	je     1781a <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0xb8>
          throwResultException( result, "vkCreateDevice" );
   17806:	8b 45 dc             	mov    -0x24(%rbp),%eax
   17809:	48 8d 15 31 7f 01 00 	lea    0x17f31(%rip),%rdx        # 2f741 <_ZNSt8__detailL19__atomic_spin_countE+0x338d>
   17810:	48 89 d6             	mov    %rdx,%rsi
   17813:	89 c7                	mov    %eax,%edi
   17815:	e8 78 6d ff ff       	call   e592 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher( physicalDevice.getDispatcher()->vkGetDeviceProcAddr,
   1781a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1781e:	48 8d 58 10          	lea    0x10(%rax),%rbx
                                                                                                   static_cast<VkDevice>( m_device ) ) );
   17822:	bf b8 0f 00 00       	mov    $0xfb8,%edi
   17827:	e8 f4 d9 fe ff       	call   5220 <_Znwm@plt>
   1782c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher( physicalDevice.getDispatcher()->vkGetDeviceProcAddr,
   17830:	41 bd 01 00 00 00    	mov    $0x1,%r13d
                                                                                                   static_cast<VkDevice>( m_device ) ) );
   17836:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1783a:	48 89 c7             	mov    %rax,%rdi
   1783d:	e8 6a 18 ff ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
   17842:	49 89 c4             	mov    %rax,%r12
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher( physicalDevice.getDispatcher()->vkGetDeviceProcAddr,
   17845:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17849:	48 89 c7             	mov    %rax,%rdi
   1784c:	e8 33 61 ff ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   17851:	48 8b 80 40 03 00 00 	mov    0x340(%rax),%rax
                                                                                                   static_cast<VkDevice>( m_device ) ) );
   17858:	4c 89 e2             	mov    %r12,%rdx
   1785b:	48 89 c6             	mov    %rax,%rsi
   1785e:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   17862:	e8 55 8e ff ff       	call   106bc <_ZN2vk4raii16DeviceDispatcherC1EPFPFvvEP10VkDevice_TPKcES5_>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher( physicalDevice.getDispatcher()->vkGetDeviceProcAddr,
   17867:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   1786b:	48 89 df             	mov    %rbx,%rdi
   1786e:	e8 bf 2f ff ff       	call   a832 <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
   17873:	eb 36                	jmp    178ab <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x149>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher( physicalDevice.getDispatcher()->vkGetDeviceProcAddr,
   17875:	48 89 c3             	mov    %rax,%rbx
   17878:	45 84 ed             	test   %r13b,%r13b
   1787b:	74 13                	je     17890 <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x12e>
                                                                                                   static_cast<VkDevice>( m_device ) ) );
   1787d:	be b8 0f 00 00       	mov    $0xfb8,%esi
   17882:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   17886:	e8 a5 d9 fe ff       	call   5230 <_ZdlPvm@plt>
   1788b:	eb 03                	jmp    17890 <_ZN2vk4raii6DeviceC1ERKNS0_14PhysicalDeviceERKNS_16DeviceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x12e>
      }
   1788d:	48 89 c3             	mov    %rax,%rbx
   17890:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17894:	48 83 c0 10          	add    $0x10,%rax
   17898:	48 89 c7             	mov    %rax,%rdi
   1789b:	e8 2e 2f ff ff       	call   a7ce <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EED1Ev>
   178a0:	48 89 d8             	mov    %rbx,%rax
   178a3:	48 89 c7             	mov    %rax,%rdi
   178a6:	e8 f5 da fe ff       	call   53a0 <_Unwind_Resume@plt>
   178ab:	48 83 c4 48          	add    $0x48,%rsp
   178af:	5b                   	pop    %rbx
   178b0:	41 5c                	pop    %r12
   178b2:	41 5d                	pop    %r13
   178b4:	5d                   	pop    %rbp
   178b5:	c3                   	ret

00000000000178b6 <_ZNK2vk4raii6DevicedeEv>:
      VULKAN_HPP_NAMESPACE::Device const & operator*() const VULKAN_HPP_NOEXCEPT
   178b6:	55                   	push   %rbp
   178b7:	48 89 e5             	mov    %rsp,%rbp
   178ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        return m_device;
   178be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   178c2:	5d                   	pop    %rbp
   178c3:	c3                   	ret

00000000000178c4 <_ZN2vk5QueueC1Ev>:
    VULKAN_HPP_CONSTEXPR Queue() = default;
   178c4:	55                   	push   %rbp
   178c5:	48 89 e5             	mov    %rsp,%rbp
   178c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   178cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   178d7:	90                   	nop
   178d8:	5d                   	pop    %rbp
   178d9:	c3                   	ret

00000000000178da <_ZN2vk4raii5QueueC1ERKNS0_6DeviceEjj>:
      Queue( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Device const & device, uint32_t queueFamilyIndex, uint32_t queueIndex )
   178da:	55                   	push   %rbp
   178db:	48 89 e5             	mov    %rsp,%rbp
   178de:	41 54                	push   %r12
   178e0:	53                   	push   %rbx
   178e1:	48 83 ec 20          	sub    $0x20,%rsp
   178e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   178e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   178ed:	89 55 dc             	mov    %edx,-0x24(%rbp)
   178f0:	89 4d d8             	mov    %ecx,-0x28(%rbp)
        : m_dispatcher( device.getDispatcher() )
   178f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178f7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   178fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17902:	48 89 c7             	mov    %rax,%rdi
   17905:	e8 ba ff ff ff       	call   178c4 <_ZN2vk5QueueC1Ev>
   1790a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1790e:	48 89 c7             	mov    %rax,%rdi
   17911:	e8 d4 1c ff ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   17916:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1791a:	48 89 42 08          	mov    %rax,0x8(%rdx)
        getDispatcher()->vkGetDeviceQueue( static_cast<VkDevice>( *device ), queueFamilyIndex, queueIndex, reinterpret_cast<VkQueue *>( &m_queue ) );
   1791e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17922:	48 89 c7             	mov    %rax,%rdi
   17925:	e8 66 00 00 00       	call   17990 <_ZNK2vk4raii5Queue13getDispatcherEv>
   1792a:	4c 8b 60 20          	mov    0x20(%rax),%r12
   1792e:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   17932:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17936:	48 89 c7             	mov    %rax,%rdi
   17939:	e8 78 ff ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
   1793e:	48 89 c7             	mov    %rax,%rdi
   17941:	e8 66 17 ff ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
   17946:	48 89 c7             	mov    %rax,%rdi
   17949:	8b 55 d8             	mov    -0x28(%rbp),%edx
   1794c:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1794f:	48 89 d9             	mov    %rbx,%rcx
   17952:	89 c6                	mov    %eax,%esi
   17954:	41 ff d4             	call   *%r12
      }
   17957:	90                   	nop
   17958:	48 83 c4 20          	add    $0x20,%rsp
   1795c:	5b                   	pop    %rbx
   1795d:	41 5c                	pop    %r12
   1795f:	5d                   	pop    %rbp
   17960:	c3                   	ret
   17961:	90                   	nop

0000000000017962 <_ZN2vk4raii5QueueC1ERKS1_>:
      Queue( Queue const & rhs ) : m_queue( rhs.m_queue ), m_dispatcher( rhs.m_dispatcher ) {}
   17962:	55                   	push   %rbp
   17963:	48 89 e5             	mov    %rsp,%rbp
   17966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1796a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1796e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17972:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17976:	48 8b 12             	mov    (%rdx),%rdx
   17979:	48 89 10             	mov    %rdx,(%rax)
   1797c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17980:	48 8b 50 08          	mov    0x8(%rax),%rdx
   17984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17988:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1798c:	90                   	nop
   1798d:	5d                   	pop    %rbp
   1798e:	c3                   	ret
   1798f:	90                   	nop

0000000000017990 <_ZNK2vk4raii5Queue13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher const * getDispatcher() const
   17990:	55                   	push   %rbp
   17991:	48 89 e5             	mov    %rsp,%rbp
   17994:	48 83 ec 10          	sub    $0x10,%rsp
   17998:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
   1799c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   179a4:	48 89 c7             	mov    %rax,%rdi
   179a7:	e8 a6 eb fe ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
   179ac:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
   179b2:	74 28                	je     179dc <_ZNK2vk4raii5Queue13getDispatcherEv+0x4c>
   179b4:	48 8d 05 e5 7d 01 00 	lea    0x17de5(%rip),%rax        # 2f7a0 <_ZNSt8__detailL19__atomic_spin_countE+0x33ec>
   179bb:	48 89 c1             	mov    %rax,%rcx
   179be:	ba c7 23 00 00       	mov    $0x23c7,%edx
   179c3:	48 8d 05 2e 7c 01 00 	lea    0x17c2e(%rip),%rax        # 2f5f8 <_ZNSt8__detailL19__atomic_spin_countE+0x3244>
   179ca:	48 89 c6             	mov    %rax,%rsi
   179cd:	48 8d 05 4c 7c 01 00 	lea    0x17c4c(%rip),%rax        # 2f620 <_ZNSt8__detailL19__atomic_spin_countE+0x326c>
   179d4:	48 89 c7             	mov    %rax,%rdi
   179d7:	e8 34 d7 fe ff       	call   5110 <__assert_fail@plt>
        return m_dispatcher;
   179dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179e0:	48 8b 40 08          	mov    0x8(%rax),%rax
      }
   179e4:	c9                   	leave
   179e5:	c3                   	ret

00000000000179e6 <_ZNK2vk4raii10SurfaceKHRdeEv>:
      VULKAN_HPP_NAMESPACE::SurfaceKHR const & operator*() const VULKAN_HPP_NOEXCEPT
   179e6:	55                   	push   %rbp
   179e7:	48 89 e5             	mov    %rsp,%rbp
   179ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        return m_surface;
   179ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179f2:	48 83 c0 08          	add    $0x8,%rax
      }
   179f6:	5d                   	pop    %rbp
   179f7:	c3                   	ret

00000000000179f8 <_ZN2vk4raii15PhysicalDevicesD1Ev>:
    class PhysicalDevices : public std::vector<VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::PhysicalDevice>
   179f8:	55                   	push   %rbp
   179f9:	48 89 e5             	mov    %rsp,%rbp
   179fc:	48 83 ec 10          	sub    $0x10,%rsp
   17a00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a08:	48 89 c7             	mov    %rax,%rdi
   17a0b:	e8 fa 0b 00 00       	call   1860a <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EED1Ev>
   17a10:	90                   	nop
   17a11:	c9                   	leave
   17a12:	c3                   	ret
   17a13:	90                   	nop

0000000000017a14 <_ZN2vk14ArrayWrapper1DIcLm256EEC1Ev>:
    VULKAN_HPP_CONSTEXPR ArrayWrapper1D() VULKAN_HPP_NOEXCEPT : std::array<T, N>() {}
   17a14:	55                   	push   %rbp
   17a15:	48 89 e5             	mov    %rsp,%rbp
   17a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a20:	b9 00 01 00 00       	mov    $0x100,%ecx
   17a25:	be 00 00 00 00       	mov    $0x0,%esi
   17a2a:	48 89 30             	mov    %rsi,(%rax)
   17a2d:	89 ca                	mov    %ecx,%edx
   17a2f:	48 01 c2             	add    %rax,%rdx
   17a32:	48 83 c2 08          	add    $0x8,%rdx
   17a36:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   17a3a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17a3e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   17a42:	48 29 d0             	sub    %rdx,%rax
   17a45:	01 c1                	add    %eax,%ecx
   17a47:	83 e1 f8             	and    $0xfffffff8,%ecx
   17a4a:	89 c8                	mov    %ecx,%eax
   17a4c:	c1 e8 03             	shr    $0x3,%eax
   17a4f:	89 c1                	mov    %eax,%ecx
   17a51:	48 89 d7             	mov    %rdx,%rdi
   17a54:	48 89 f0             	mov    %rsi,%rax
   17a57:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   17a5a:	90                   	nop
   17a5b:	5d                   	pop    %rbp
   17a5c:	c3                   	ret
   17a5d:	90                   	nop

0000000000017a5e <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE12_Vector_implD1Ev>:
   17a5e:	55                   	push   %rbp
   17a5f:	48 89 e5             	mov    %rsp,%rbp
   17a62:	48 83 ec 10          	sub    $0x10,%rsp
   17a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a6e:	48 89 c7             	mov    %rax,%rdi
   17a71:	e8 1c 10 00 00       	call   18a92 <_ZNSaIN2vk21QueueFamilyPropertiesEED1Ev>
   17a76:	90                   	nop
   17a77:	c9                   	leave
   17a78:	c3                   	ret
   17a79:	90                   	nop

0000000000017a7a <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE12_Vector_implD1Ev>:
   17a7a:	55                   	push   %rbp
   17a7b:	48 89 e5             	mov    %rsp,%rbp
   17a7e:	48 83 ec 10          	sub    $0x10,%rsp
   17a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a8a:	48 89 c7             	mov    %rax,%rdi
   17a8d:	e8 8a 11 00 00       	call   18c1c <_ZNSaIN2vk19ExtensionPropertiesEED1Ev>
   17a92:	90                   	nop
   17a93:	c9                   	leave
   17a94:	c3                   	ret
   17a95:	90                   	nop

0000000000017a96 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE12_Vector_implD1Ev>:
   17a96:	55                   	push   %rbp
   17a97:	48 89 e5             	mov    %rsp,%rbp
   17a9a:	48 83 ec 10          	sub    $0x10,%rsp
   17a9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17aa6:	48 89 c7             	mov    %rax,%rdi
   17aa9:	e8 24 13 00 00       	call   18dd2 <_ZNSaIN2vk15LayerPropertiesEED1Ev>
   17aae:	90                   	nop
   17aaf:	c9                   	leave
   17ab0:	c3                   	ret
   17ab1:	90                   	nop

0000000000017ab2 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   17ab2:	55                   	push   %rbp
   17ab3:	48 89 e5             	mov    %rsp,%rbp
   17ab6:	48 83 ec 10          	sub    $0x10,%rsp
   17aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   17abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ac2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   17ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17acc:	48 89 c7             	mov    %rax,%rdi
   17acf:	e8 04 00 00 00       	call   17ad8 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   17ad4:	90                   	nop
   17ad5:	c9                   	leave
   17ad6:	c3                   	ret
   17ad7:	90                   	nop

0000000000017ad8 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   17ad8:	55                   	push   %rbp
   17ad9:	48 89 e5             	mov    %rsp,%rbp
   17adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   17ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ae4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17aeb:	00 
      _M_header._M_left = &_M_header;
   17aec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17af4:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   17af8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b00:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   17b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b08:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   17b0f:	00 
    }
   17b10:	90                   	nop
   17b11:	5d                   	pop    %rbp
   17b12:	c3                   	ret
   17b13:	90                   	nop

0000000000017b14 <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
   17b14:	55                   	push   %rbp
   17b15:	48 89 e5             	mov    %rsp,%rbp
   17b18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   17b1c:	48 8d 05 c6 7c 01 00 	lea    0x17cc6(%rip),%rax        # 2f7e9 <_ZNSt8__detailL19__atomic_spin_countE+0x3435>
   17b23:	5d                   	pop    %rbp
   17b24:	c3                   	ret
   17b25:	90                   	nop

0000000000017b26 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   17b26:	55                   	push   %rbp
   17b27:	48 89 e5             	mov    %rsp,%rbp
   17b2a:	48 83 ec 10          	sub    $0x10,%rsp
   17b2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17b32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b36:	48 89 c7             	mov    %rax,%rdi
   17b39:	e8 4a 8a ff ff       	call   10588 <_ZNSt9exceptionC1Ev>
   17b3e:	48 8d 15 1b 9e 02 00 	lea    0x29e1b(%rip),%rdx        # 41960 <_ZTVSt19bad_optional_access+0x10>
   17b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b49:	48 89 10             	mov    %rdx,(%rax)
   17b4c:	90                   	nop
   17b4d:	c9                   	leave
   17b4e:	c3                   	ret

0000000000017b4f <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   17b4f:	55                   	push   %rbp
   17b50:	48 89 e5             	mov    %rsp,%rbp
   17b53:	53                   	push   %rbx
   17b54:	48 83 ec 08          	sub    $0x8,%rsp
   17b58:	bf 08 00 00 00       	mov    $0x8,%edi
   17b5d:	e8 6e d5 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   17b62:	48 89 c3             	mov    %rax,%rbx
   17b65:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   17b6c:	48 89 df             	mov    %rbx,%rdi
   17b6f:	e8 b2 ff ff ff       	call   17b26 <_ZNSt19bad_optional_accessC1Ev>
   17b74:	48 8d 05 09 6f 00 00 	lea    0x6f09(%rip),%rax        # 1ea84 <_ZNSt19bad_optional_accessD1Ev>
   17b7b:	48 89 c2             	mov    %rax,%rdx
   17b7e:	48 8d 05 db a1 02 00 	lea    0x2a1db(%rip),%rax        # 41d60 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   17b85:	48 89 c6             	mov    %rax,%rsi
   17b88:	48 89 df             	mov    %rbx,%rdi
   17b8b:	e8 f0 d7 fe ff       	call   5380 <__cxa_throw@plt>

0000000000017b90 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   17b90:	55                   	push   %rbp
   17b91:	48 89 e5             	mov    %rsp,%rbp
   17b94:	53                   	push   %rbx
   17b95:	48 83 ec 38          	sub    $0x38,%rsp
   17b99:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17b9d:	48 89 f0             	mov    %rsi,%rax
   17ba0:	48 89 d6             	mov    %rdx,%rsi
   17ba3:	48 89 f2             	mov    %rsi,%rdx
   17ba6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   17baa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17bae:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   17bb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17bb6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17bba:	48 89 d6             	mov    %rdx,%rsi
   17bbd:	48 89 c7             	mov    %rax,%rdi
   17bc0:	e8 af 00 00 00       	call   17c74 <_ZNSt12_Vector_baseIPKcSaIS1_EEC2ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   17bc5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   17bc9:	48 89 c7             	mov    %rax,%rdi
   17bcc:	e8 97 01 00 00       	call   17d68 <_ZNKSt16initializer_listIPKcE3endEv>
   17bd1:	48 89 c3             	mov    %rax,%rbx
   17bd4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   17bd8:	48 89 c7             	mov    %rax,%rdi
   17bdb:	e8 76 01 00 00       	call   17d56 <_ZNKSt16initializer_listIPKcE5beginEv>
   17be0:	48 89 c1             	mov    %rax,%rcx
   17be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17be7:	48 89 da             	mov    %rbx,%rdx
   17bea:	48 89 ce             	mov    %rcx,%rsi
   17bed:	48 89 c7             	mov    %rax,%rdi
   17bf0:	e8 ed 01 00 00       	call   17de2 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   17bf5:	eb 1a                	jmp    17c11 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   17bf7:	48 89 c3             	mov    %rax,%rbx
   17bfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17bfe:	48 89 c7             	mov    %rax,%rdi
   17c01:	e8 58 13 00 00       	call   18f5e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   17c06:	48 89 d8             	mov    %rbx,%rax
   17c09:	48 89 c7             	mov    %rax,%rdi
   17c0c:	e8 8f d7 fe ff       	call   53a0 <_Unwind_Resume@plt>
   17c11:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17c15:	c9                   	leave
   17c16:	c3                   	ret
   17c17:	90                   	nop

0000000000017c18 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   17c18:	55                   	push   %rbp
   17c19:	48 89 e5             	mov    %rsp,%rbp
   17c1c:	48 83 ec 10          	sub    $0x10,%rsp
   17c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c28:	48 89 c7             	mov    %rax,%rdi
   17c2b:	e8 1c 00 00 00       	call   17c4c <_ZNSt15__new_allocatorIPKcEC2Ev>
   17c30:	90                   	nop
   17c31:	c9                   	leave
   17c32:	c3                   	ret
   17c33:	90                   	nop

0000000000017c34 <_ZNSaIPKcED2Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   17c34:	55                   	push   %rbp
   17c35:	48 89 e5             	mov    %rsp,%rbp
   17c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c3c:	90                   	nop
   17c3d:	5d                   	pop    %rbp
   17c3e:	c3                   	ret
   17c3f:	90                   	nop

0000000000017c40 <_ZNSaIPKcED1Ev>:
   17c40:	55                   	push   %rbp
   17c41:	48 89 e5             	mov    %rsp,%rbp
   17c44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c48:	90                   	nop
   17c49:	5d                   	pop    %rbp
   17c4a:	c3                   	ret
   17c4b:	90                   	nop

0000000000017c4c <_ZNSt15__new_allocatorIPKcEC2Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   17c4c:	55                   	push   %rbp
   17c4d:	48 89 e5             	mov    %rsp,%rbp
   17c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c54:	90                   	nop
   17c55:	5d                   	pop    %rbp
   17c56:	c3                   	ret
   17c57:	90                   	nop

0000000000017c58 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   17c58:	55                   	push   %rbp
   17c59:	48 89 e5             	mov    %rsp,%rbp
   17c5c:	48 83 ec 10          	sub    $0x10,%rsp
   17c60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c68:	48 89 c7             	mov    %rax,%rdi
   17c6b:	e8 c4 ff ff ff       	call   17c34 <_ZNSaIPKcED2Ev>
   17c70:	90                   	nop
   17c71:	c9                   	leave
   17c72:	c3                   	ret
   17c73:	90                   	nop

0000000000017c74 <_ZNSt12_Vector_baseIPKcSaIS1_EEC2ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   17c74:	55                   	push   %rbp
   17c75:	48 89 e5             	mov    %rsp,%rbp
   17c78:	48 83 ec 10          	sub    $0x10,%rsp
   17c7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   17c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17c8c:	48 89 d6             	mov    %rdx,%rsi
   17c8f:	48 89 c7             	mov    %rax,%rdi
   17c92:	e8 03 00 00 00       	call   17c9a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   17c97:	90                   	nop
   17c98:	c9                   	leave
   17c99:	c3                   	ret

0000000000017c9a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   17c9a:	55                   	push   %rbp
   17c9b:	48 89 e5             	mov    %rsp,%rbp
   17c9e:	48 83 ec 10          	sub    $0x10,%rsp
   17ca2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ca6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   17caa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17cae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cb2:	48 89 d6             	mov    %rdx,%rsi
   17cb5:	48 89 c7             	mov    %rax,%rdi
   17cb8:	e8 0f 00 00 00       	call   17ccc <_ZNSaIPKcEC2ERKS1_>
   17cbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cc1:	48 89 c7             	mov    %rax,%rdi
   17cc4:	e8 5f 00 00 00       	call   17d28 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev>
	{ }
   17cc9:	90                   	nop
   17cca:	c9                   	leave
   17ccb:	c3                   	ret

0000000000017ccc <_ZNSaIPKcEC2ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   17ccc:	55                   	push   %rbp
   17ccd:	48 89 e5             	mov    %rsp,%rbp
   17cd0:	48 83 ec 10          	sub    $0x10,%rsp
   17cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   17cdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ce4:	48 89 d6             	mov    %rdx,%rsi
   17ce7:	48 89 c7             	mov    %rax,%rdi
   17cea:	e8 29 00 00 00       	call   17d18 <_ZNSt15__new_allocatorIPKcEC2ERKS2_>
   17cef:	90                   	nop
   17cf0:	c9                   	leave
   17cf1:	c3                   	ret

0000000000017cf2 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   17cf2:	55                   	push   %rbp
   17cf3:	48 89 e5             	mov    %rsp,%rbp
   17cf6:	48 83 ec 10          	sub    $0x10,%rsp
   17cfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   17d02:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d0a:	48 89 d6             	mov    %rdx,%rsi
   17d0d:	48 89 c7             	mov    %rax,%rdi
   17d10:	e8 03 00 00 00       	call   17d18 <_ZNSt15__new_allocatorIPKcEC2ERKS2_>
   17d15:	90                   	nop
   17d16:	c9                   	leave
   17d17:	c3                   	ret

0000000000017d18 <_ZNSt15__new_allocatorIPKcEC2ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   17d18:	55                   	push   %rbp
   17d19:	48 89 e5             	mov    %rsp,%rbp
   17d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d24:	90                   	nop
   17d25:	5d                   	pop    %rbp
   17d26:	c3                   	ret
   17d27:	90                   	nop

0000000000017d28 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC2Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   17d28:	55                   	push   %rbp
   17d29:	48 89 e5             	mov    %rsp,%rbp
   17d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   17d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d34:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d3f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17d46:	00 
   17d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d4b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17d52:	00 
	{ }
   17d53:	90                   	nop
   17d54:	5d                   	pop    %rbp
   17d55:	c3                   	ret

0000000000017d56 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   17d56:	55                   	push   %rbp
   17d57:	48 89 e5             	mov    %rsp,%rbp
   17d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d62:	48 8b 00             	mov    (%rax),%rax
   17d65:	5d                   	pop    %rbp
   17d66:	c3                   	ret
   17d67:	90                   	nop

0000000000017d68 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   17d68:	55                   	push   %rbp
   17d69:	48 89 e5             	mov    %rsp,%rbp
   17d6c:	53                   	push   %rbx
   17d6d:	48 83 ec 18          	sub    $0x18,%rsp
   17d71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17d75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d79:	48 89 c7             	mov    %rax,%rdi
   17d7c:	e8 d5 ff ff ff       	call   17d56 <_ZNKSt16initializer_listIPKcE5beginEv>
   17d81:	48 89 c3             	mov    %rax,%rbx
   17d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d88:	48 89 c7             	mov    %rax,%rdi
   17d8b:	e8 0e 00 00 00       	call   17d9e <_ZNKSt16initializer_listIPKcE4sizeEv>
   17d90:	48 c1 e0 03          	shl    $0x3,%rax
   17d94:	48 01 d8             	add    %rbx,%rax
   17d97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17d9b:	c9                   	leave
   17d9c:	c3                   	ret
   17d9d:	90                   	nop

0000000000017d9e <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   17d9e:	55                   	push   %rbp
   17d9f:	48 89 e5             	mov    %rsp,%rbp
   17da2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17da6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17daa:	48 8b 40 08          	mov    0x8(%rax),%rax
   17dae:	5d                   	pop    %rbp
   17daf:	c3                   	ret

0000000000017db0 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   17db0:	55                   	push   %rbp
   17db1:	48 89 e5             	mov    %rsp,%rbp
   17db4:	48 83 ec 10          	sub    $0x10,%rsp
   17db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   17dc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17dc4:	48 89 c7             	mov    %rax,%rdi
   17dc7:	e8 c5 00 00 00       	call   17e91 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   17dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17dd4:	48 89 d6             	mov    %rdx,%rsi
   17dd7:	48 89 c7             	mov    %rax,%rdi
   17dda:	e8 bd 00 00 00       	call   17e9c <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   17ddf:	c9                   	leave
   17de0:	c3                   	ret
   17de1:	90                   	nop

0000000000017de2 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   17de2:	55                   	push   %rbp
   17de3:	48 89 e5             	mov    %rsp,%rbp
   17de6:	53                   	push   %rbx
   17de7:	48 83 ec 38          	sub    $0x38,%rsp
   17deb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17def:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   17df3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
   17df7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   17dfb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17dff:	48 89 d6             	mov    %rdx,%rsi
   17e02:	48 89 c7             	mov    %rax,%rdi
   17e05:	e8 a6 ff ff ff       	call   17db0 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   17e0a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   17e0e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   17e12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e16:	48 89 c7             	mov    %rax,%rdi
   17e19:	e8 98 00 00 00       	call   17eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   17e1e:	48 89 c2             	mov    %rax,%rdx
   17e21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e25:	48 89 d6             	mov    %rdx,%rsi
   17e28:	48 89 c7             	mov    %rax,%rdi
   17e2b:	e8 94 00 00 00       	call   17ec4 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   17e30:	48 89 c6             	mov    %rax,%rsi
   17e33:	48 89 df             	mov    %rbx,%rdi
   17e36:	e8 6b 01 00 00       	call   17fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   17e3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17e3f:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   17e42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e46:	48 8b 00             	mov    (%rax),%rax
   17e49:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e4d:	48 c1 e2 03          	shl    $0x3,%rdx
   17e51:	48 01 c2             	add    %rax,%rdx
   17e54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e58:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
   17e5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e60:	48 89 c7             	mov    %rax,%rdi
   17e63:	e8 4e 00 00 00       	call   17eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   17e68:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   17e6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e6f:	48 8b 10             	mov    (%rax),%rdx
   17e72:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   17e76:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17e7a:	48 89 c7             	mov    %rax,%rdi
   17e7d:	e8 de 01 00 00       	call   18060 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   17e82:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17e86:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   17e8a:	90                   	nop
   17e8b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17e8f:	c9                   	leave
   17e90:	c3                   	ret

0000000000017e91 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   17e91:	55                   	push   %rbp
   17e92:	48 89 e5             	mov    %rsp,%rbp
   17e95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17e99:	90                   	nop
   17e9a:	5d                   	pop    %rbp
   17e9b:	c3                   	ret

0000000000017e9c <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   17e9c:	55                   	push   %rbp
   17e9d:	48 89 e5             	mov    %rsp,%rbp
   17ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   17ea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17eac:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   17eb0:	48 c1 f8 03          	sar    $0x3,%rax
    }
   17eb4:	5d                   	pop    %rbp
   17eb5:	c3                   	ret

0000000000017eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   17eb6:	55                   	push   %rbp
   17eb7:	48 89 e5             	mov    %rsp,%rbp
   17eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   17ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ec2:	5d                   	pop    %rbp
   17ec3:	c3                   	ret

0000000000017ec4 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
   17ec4:	55                   	push   %rbp
   17ec5:	48 89 e5             	mov    %rsp,%rbp
   17ec8:	53                   	push   %rbx
   17ec9:	48 83 ec 28          	sub    $0x28,%rsp
   17ecd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   17ed1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   17ed5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17ed9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17edd:	48 89 d6             	mov    %rdx,%rsi
   17ee0:	48 89 c7             	mov    %rax,%rdi
   17ee3:	e8 0a fe ff ff       	call   17cf2 <_ZNSaIPKcEC1ERKS1_>
   17ee8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17eec:	48 89 c7             	mov    %rax,%rdi
   17eef:	e8 44 00 00 00       	call   17f38 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   17ef4:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   17ef8:	0f 92 c3             	setb   %bl
   17efb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   17eff:	48 89 c7             	mov    %rax,%rdi
   17f02:	e8 39 fd ff ff       	call   17c40 <_ZNSaIPKcED1Ev>
   17f07:	84 db                	test   %bl,%bl
   17f09:	74 0f                	je     17f1a <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   17f0b:	48 8d 05 ee 78 01 00 	lea    0x178ee(%rip),%rax        # 2f800 <_ZNSt8__detailL19__atomic_spin_countE+0x344c>
   17f12:	48 89 c7             	mov    %rax,%rdi
   17f15:	e8 c6 d1 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
   17f1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   17f1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17f22:	c9                   	leave
   17f23:	c3                   	ret

0000000000017f24 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   17f24:	55                   	push   %rbp
   17f25:	48 89 e5             	mov    %rsp,%rbp
   17f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   17f2c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   17f33:	ff ff 1f 
      }
   17f36:	5d                   	pop    %rbp
   17f37:	c3                   	ret

0000000000017f38 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   17f38:	55                   	push   %rbp
   17f39:	48 89 e5             	mov    %rsp,%rbp
   17f3c:	48 83 ec 20          	sub    $0x20,%rsp
   17f40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
   17f44:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17f4b:	ff ff 0f 
   17f4e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   17f52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f56:	48 89 c7             	mov    %rax,%rdi
   17f59:	e8 c6 ff ff ff       	call   17f24 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
   17f5e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   17f62:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   17f66:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17f6a:	48 89 d6             	mov    %rdx,%rsi
   17f6d:	48 89 c7             	mov    %rax,%rdi
   17f70:	e8 05 00 00 00       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   17f75:	48 8b 00             	mov    (%rax),%rax
      }
   17f78:	c9                   	leave
   17f79:	c3                   	ret

0000000000017f7a <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
   17f7a:	55                   	push   %rbp
   17f7b:	48 89 e5             	mov    %rsp,%rbp
   17f7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
   17f86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f8a:	48 8b 10             	mov    (%rax),%rdx
   17f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f91:	48 8b 00             	mov    (%rax),%rax
   17f94:	48 39 c2             	cmp    %rax,%rdx
   17f97:	73 06                	jae    17f9f <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
   17f99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17f9d:	eb 04                	jmp    17fa3 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
   17f9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   17fa3:	5d                   	pop    %rbp
   17fa4:	c3                   	ret
   17fa5:	90                   	nop

0000000000017fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   17fa6:	55                   	push   %rbp
   17fa7:	48 89 e5             	mov    %rsp,%rbp
   17faa:	48 83 ec 10          	sub    $0x10,%rsp
   17fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   17fb6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17fbb:	74 15                	je     17fd2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
   17fbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fc1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17fc5:	48 89 d6             	mov    %rdx,%rsi
   17fc8:	48 89 c7             	mov    %rax,%rdi
   17fcb:	e8 09 00 00 00       	call   17fd9 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
   17fd0:	eb 05                	jmp    17fd7 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
   17fd2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   17fd7:	c9                   	leave
   17fd8:	c3                   	ret

0000000000017fd9 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   17fd9:	55                   	push   %rbp
   17fda:	48 89 e5             	mov    %rsp,%rbp
   17fdd:	48 83 ec 20          	sub    $0x20,%rsp
   17fe1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17fe5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17fe9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17fed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   17ff1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17ff5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   17ff9:	e8 a0 e1 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   17ffe:	84 c0                	test   %al,%al
   18000:	74 43                	je     18045 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x6c>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   18002:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18006:	b9 00 00 00 00       	mov    $0x0,%ecx
   1800b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18012:	00 
   18013:	48 c1 e8 3d          	shr    $0x3d,%rax
   18017:	48 85 c0             	test   %rax,%rax
   1801a:	74 05                	je     18021 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x48>
   1801c:	b9 01 00 00 00       	mov    $0x1,%ecx
   18021:	48 89 d0             	mov    %rdx,%rax
   18024:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18028:	48 89 c8             	mov    %rcx,%rax
   1802b:	83 e0 01             	and    $0x1,%eax
   1802e:	84 c0                	test   %al,%al
   18030:	74 05                	je     18037 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x5e>
	      std::__throw_bad_array_new_length();
   18032:	e8 49 d1 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   18037:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1803b:	48 89 c7             	mov    %rax,%rdi
   1803e:	e8 dd d1 fe ff       	call   5220 <_Znwm@plt>
   18043:	eb 19                	jmp    1805e <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m+0x85>
	return __allocator_base<_Tp>::allocate(__n, 0);
   18045:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1804d:	ba 00 00 00 00       	mov    $0x0,%edx
   18052:	48 89 ce             	mov    %rcx,%rsi
   18055:	48 89 c7             	mov    %rax,%rdi
   18058:	e8 4f 0f 00 00       	call   18fac <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
   1805d:	90                   	nop
      { return __a.allocate(__n); }
   1805e:	c9                   	leave
   1805f:	c3                   	ret

0000000000018060 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   18060:	55                   	push   %rbp
   18061:	48 89 e5             	mov    %rsp,%rbp
   18064:	48 83 ec 20          	sub    $0x20,%rsp
   18068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1806c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18070:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   18074:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
			   _ForwardIterator __result, allocator<_Tp>&)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
   18078:	e8 2c e1 fe ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
   1807d:	84 c0                	test   %al,%al
   1807f:	74 19                	je     1809a <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E+0x3a>
	return std::__do_uninit_copy(__first, __last, __result);
   18081:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18085:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1808d:	48 89 ce             	mov    %rcx,%rsi
   18090:	48 89 c7             	mov    %rax,%rdi
   18093:	e8 1c 00 00 00       	call   180b4 <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_>
   18098:	eb 18                	jmp    180b2 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E+0x52>
#endif
      return std::uninitialized_copy(__first, __last, __result);
   1809a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1809e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   180a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180a6:	48 89 ce             	mov    %rcx,%rsi
   180a9:	48 89 c7             	mov    %rax,%rdi
   180ac:	e8 5c 0f 00 00       	call   1900d <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
   180b1:	90                   	nop
    }
   180b2:	c9                   	leave
   180b3:	c3                   	ret

00000000000180b4 <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_>:
    __do_uninit_copy(_InputIterator __first, _InputIterator __last,
   180b4:	55                   	push   %rbp
   180b5:	48 89 e5             	mov    %rsp,%rbp
   180b8:	48 83 ec 30          	sub    $0x30,%rsp
   180bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   180c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   180c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      _ForwardIterator __cur = __result;
   180c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  for (; __first != __last; ++__first, (void)++__cur)
   180d0:	eb 28                	jmp    180fa <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_+0x46>
	    std::_Construct(std::__addressof(*__cur), *__first);
   180d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180d6:	48 89 c7             	mov    %rax,%rdi
   180d9:	e8 2c 00 00 00       	call   1810a <_ZSt11__addressofIPKcEPT_RS2_>
   180de:	48 89 c2             	mov    %rax,%rdx
   180e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180e5:	48 89 c6             	mov    %rax,%rsi
   180e8:	48 89 d7             	mov    %rdx,%rdi
   180eb:	e8 28 00 00 00       	call   18118 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_>
	  for (; __first != __last; ++__first, (void)++__cur)
   180f0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   180f5:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   180fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180fe:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18102:	75 ce                	jne    180d2 <_ZSt16__do_uninit_copyIPKPKcPS1_ET0_T_S6_S5_+0x1e>
	  return __cur;
   18104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   18108:	c9                   	leave
   18109:	c3                   	ret

000000000001810a <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1810a:	55                   	push   %rbp
   1810b:	48 89 e5             	mov    %rsp,%rbp
   1810e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   18112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18116:	5d                   	pop    %rbp
   18117:	c3                   	ret

0000000000018118 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   18118:	55                   	push   %rbp
   18119:	48 89 e5             	mov    %rsp,%rbp
   1811c:	53                   	push   %rbx
   1811d:	48 83 ec 18          	sub    $0x18,%rsp
   18121:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18125:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      if (std::__is_constant_evaluated())
   18129:	e8 70 e0 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1812e:	84 c0                	test   %al,%al
   18130:	74 20                	je     18152 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_+0x3a>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   18132:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18136:	48 89 c7             	mov    %rax,%rdi
   18139:	e8 40 00 00 00       	call   1817e <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   1813e:	48 89 c2             	mov    %rax,%rdx
   18141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18145:	48 89 d6             	mov    %rdx,%rsi
   18148:	48 89 c7             	mov    %rax,%rdi
   1814b:	e8 3c 00 00 00       	call   1818c <_ZSt12construct_atIPKcJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>
	  return;
   18150:	eb 26                	jmp    18178 <_ZSt10_ConstructIPKcJRKS1_EEvPT_DpOT0_+0x60>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   18152:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18156:	48 89 c6             	mov    %rax,%rsi
   18159:	bf 08 00 00 00       	mov    $0x8,%edi
   1815e:	e8 51 e0 fe ff       	call   61b4 <_ZnwmPv>
   18163:	48 89 c3             	mov    %rax,%rbx
   18166:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1816a:	48 89 c7             	mov    %rax,%rdi
   1816d:	e8 0c 00 00 00       	call   1817e <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   18172:	48 8b 00             	mov    (%rax),%rax
   18175:	48 89 03             	mov    %rax,(%rbx)
    }
   18178:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1817c:	c9                   	leave
   1817d:	c3                   	ret

000000000001817e <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1817e:	55                   	push   %rbp
   1817f:	48 89 e5             	mov    %rsp,%rbp
   18182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1818a:	5d                   	pop    %rbp
   1818b:	c3                   	ret

000000000001818c <_ZSt12construct_atIPKcJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1818c:	55                   	push   %rbp
   1818d:	48 89 e5             	mov    %rsp,%rbp
   18190:	53                   	push   %rbx
   18191:	48 83 ec 18          	sub    $0x18,%rsp
   18195:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18199:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1819d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181a1:	48 89 c6             	mov    %rax,%rsi
   181a4:	bf 08 00 00 00       	mov    $0x8,%edi
   181a9:	e8 06 e0 fe ff       	call   61b4 <_ZnwmPv>
   181ae:	48 89 c3             	mov    %rax,%rbx
   181b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   181b5:	48 89 c7             	mov    %rax,%rdi
   181b8:	e8 c1 ff ff ff       	call   1817e <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   181bd:	48 8b 00             	mov    (%rax),%rax
   181c0:	48 89 03             	mov    %rax,(%rbx)
   181c3:	48 89 d8             	mov    %rbx,%rax
   181c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   181ca:	c9                   	leave
   181cb:	c3                   	ret

00000000000181cc <_ZN9__gnu_cxxeqIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   181cc:	55                   	push   %rbp
   181cd:	48 89 e5             	mov    %rsp,%rbp
   181d0:	53                   	push   %rbx
   181d1:	48 83 ec 18          	sub    $0x18,%rsp
   181d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   181d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   181dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181e1:	48 89 c7             	mov    %rax,%rdi
   181e4:	e8 1f 00 00 00       	call   18208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>
   181e9:	48 8b 18             	mov    (%rax),%rbx
   181ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   181f0:	48 89 c7             	mov    %rax,%rdi
   181f3:	e8 10 00 00 00       	call   18208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>
   181f8:	48 8b 00             	mov    (%rax),%rax
   181fb:	48 39 c3             	cmp    %rax,%rbx
   181fe:	0f 94 c0             	sete   %al
   18201:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18205:	c9                   	leave
   18206:	c3                   	ret
   18207:	90                   	nop

0000000000018208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   18208:	55                   	push   %rbp
   18209:	48 89 e5             	mov    %rsp,%rbp
   1820c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   18210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18214:	5d                   	pop    %rbp
   18215:	c3                   	ret

0000000000018216 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   18216:	55                   	push   %rbp
   18217:	48 89 e5             	mov    %rsp,%rbp
   1821a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1821e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18222:	48 8b 00             	mov    (%rax),%rax
   18225:	5d                   	pop    %rbp
   18226:	c3                   	ret
   18227:	90                   	nop

0000000000018228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   18228:	55                   	push   %rbp
   18229:	48 89 e5             	mov    %rsp,%rbp
   1822c:	48 83 ec 10          	sub    $0x10,%rsp
   18230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18238:	48 89 c7             	mov    %rax,%rdi
   1823b:	e8 4c 0f 00 00       	call   1918c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   18240:	90                   	nop
   18241:	c9                   	leave
   18242:	c3                   	ret
   18243:	90                   	nop

0000000000018244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   18244:	55                   	push   %rbp
   18245:	48 89 e5             	mov    %rsp,%rbp
   18248:	48 83 ec 10          	sub    $0x10,%rsp
   1824c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18254:	48 89 c7             	mov    %rax,%rdi
   18257:	e8 f8 0e 00 00       	call   19154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   1825c:	90                   	nop
   1825d:	c9                   	leave
   1825e:	c3                   	ret
   1825f:	90                   	nop

0000000000018260 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   18260:	55                   	push   %rbp
   18261:	48 89 e5             	mov    %rsp,%rbp
   18264:	48 83 ec 10          	sub    $0x10,%rsp
   18268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1826c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18270:	48 89 c7             	mov    %rax,%rdi
   18273:	e8 cc ff ff ff       	call   18244 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   18278:	90                   	nop
   18279:	c9                   	leave
   1827a:	c3                   	ret
   1827b:	90                   	nop

000000000001827c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   1827c:	55                   	push   %rbp
   1827d:	48 89 e5             	mov    %rsp,%rbp
   18280:	48 83 ec 10          	sub    $0x10,%rsp
   18284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1828c:	48 89 c7             	mov    %rax,%rdi
   1828f:	e8 04 0f 00 00       	call   19198 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   18294:	90                   	nop
   18295:	c9                   	leave
   18296:	c3                   	ret

0000000000018297 <_ZN9__gnu_cxxeqIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   18297:	55                   	push   %rbp
   18298:	48 89 e5             	mov    %rsp,%rbp
   1829b:	53                   	push   %rbx
   1829c:	48 83 ec 18          	sub    $0x18,%rsp
   182a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   182a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   182a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   182ac:	48 89 c7             	mov    %rax,%rdi
   182af:	e8 1e 00 00 00       	call   182d2 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>
   182b4:	48 8b 18             	mov    (%rax),%rbx
   182b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   182bb:	48 89 c7             	mov    %rax,%rdi
   182be:	e8 0f 00 00 00       	call   182d2 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>
   182c3:	48 8b 00             	mov    (%rax),%rax
   182c6:	48 39 c3             	cmp    %rax,%rbx
   182c9:	0f 94 c0             	sete   %al
   182cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   182d0:	c9                   	leave
   182d1:	c3                   	ret

00000000000182d2 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   182d2:	55                   	push   %rbp
   182d3:	48 89 e5             	mov    %rsp,%rbp
   182d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   182da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182de:	5d                   	pop    %rbp
   182df:	c3                   	ret

00000000000182e0 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   182e0:	55                   	push   %rbp
   182e1:	48 89 e5             	mov    %rsp,%rbp
   182e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   182e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182ec:	48 8b 00             	mov    (%rax),%rax
   182ef:	5d                   	pop    %rbp
   182f0:	c3                   	ret
   182f1:	90                   	nop

00000000000182f2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   182f2:	55                   	push   %rbp
   182f3:	48 89 e5             	mov    %rsp,%rbp
   182f6:	48 83 ec 20          	sub    $0x20,%rsp
   182fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   182fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18302:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18306:	48 89 d6             	mov    %rdx,%rsi
   18309:	48 89 c7             	mov    %rax,%rdi
   1830c:	e8 07 00 00 00       	call   18318 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   18311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18315:	c9                   	leave
   18316:	c3                   	ret
   18317:	90                   	nop

0000000000018318 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   18318:	55                   	push   %rbp
   18319:	48 89 e5             	mov    %rsp,%rbp
   1831c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18320:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   18324:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18328:	48 8b 10             	mov    (%rax),%rdx
   1832b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1832f:	48 89 10             	mov    %rdx,(%rax)
   18332:	90                   	nop
   18333:	5d                   	pop    %rbp
   18334:	c3                   	ret
   18335:	90                   	nop

0000000000018336 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   18336:	55                   	push   %rbp
   18337:	48 89 e5             	mov    %rsp,%rbp
   1833a:	48 83 ec 20          	sub    $0x20,%rsp
   1833e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   18342:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18346:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1834a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1834e:	48 89 d6             	mov    %rdx,%rsi
   18351:	48 89 c7             	mov    %rax,%rdi
   18354:	e8 bf ff ff ff       	call   18318 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   18359:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1835d:	c9                   	leave
   1835e:	c3                   	ret

000000000001835f <_ZN9__gnu_cxxeqIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   1835f:	55                   	push   %rbp
   18360:	48 89 e5             	mov    %rsp,%rbp
   18363:	53                   	push   %rbx
   18364:	48 83 ec 18          	sub    $0x18,%rsp
   18368:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1836c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   18370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18374:	48 89 c7             	mov    %rax,%rdi
   18377:	e8 1e 00 00 00       	call   1839a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1837c:	48 8b 18             	mov    (%rax),%rbx
   1837f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18383:	48 89 c7             	mov    %rax,%rdi
   18386:	e8 0f 00 00 00       	call   1839a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1838b:	48 8b 00             	mov    (%rax),%rax
   1838e:	48 39 c3             	cmp    %rax,%rbx
   18391:	0f 94 c0             	sete   %al
   18394:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18398:	c9                   	leave
   18399:	c3                   	ret

000000000001839a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1839a:	55                   	push   %rbp
   1839b:	48 89 e5             	mov    %rsp,%rbp
   1839e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   183a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183a6:	5d                   	pop    %rbp
   183a7:	c3                   	ret

00000000000183a8 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   183a8:	55                   	push   %rbp
   183a9:	48 89 e5             	mov    %rsp,%rbp
   183ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   183b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183b4:	48 8b 00             	mov    (%rax),%rax
   183b7:	5d                   	pop    %rbp
   183b8:	c3                   	ret

00000000000183b9 <_ZN9__gnu_cxxeqIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   183b9:	55                   	push   %rbp
   183ba:	48 89 e5             	mov    %rsp,%rbp
   183bd:	53                   	push   %rbx
   183be:	48 83 ec 18          	sub    $0x18,%rsp
   183c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   183c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   183ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183ce:	48 89 c7             	mov    %rax,%rdi
   183d1:	e8 1e 00 00 00       	call   183f4 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>
   183d6:	48 8b 18             	mov    (%rax),%rbx
   183d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   183dd:	48 89 c7             	mov    %rax,%rdi
   183e0:	e8 0f 00 00 00       	call   183f4 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>
   183e5:	48 8b 00             	mov    (%rax),%rax
   183e8:	48 39 c3             	cmp    %rax,%rbx
   183eb:	0f 94 c0             	sete   %al
   183ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   183f2:	c9                   	leave
   183f3:	c3                   	ret

00000000000183f4 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   183f4:	55                   	push   %rbp
   183f5:	48 89 e5             	mov    %rsp,%rbp
   183f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   183fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18400:	5d                   	pop    %rbp
   18401:	c3                   	ret

0000000000018402 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   18402:	55                   	push   %rbp
   18403:	48 89 e5             	mov    %rsp,%rbp
   18406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1840a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1840e:	48 8b 00             	mov    (%rax),%rax
   18411:	5d                   	pop    %rbp
   18412:	c3                   	ret
   18413:	90                   	nop

0000000000018414 <_ZNKSt8optionalIjE9has_valueEv>:
      { return std::move(this->_M_get()); }

      constexpr explicit operator bool() const noexcept
      { return this->_M_is_engaged(); }

      constexpr bool has_value() const noexcept
   18414:	55                   	push   %rbp
   18415:	48 89 e5             	mov    %rsp,%rbp
   18418:	48 83 ec 10          	sub    $0x10,%rsp
   1841c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   18420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18424:	48 89 c7             	mov    %rax,%rdi
   18427:	e8 02 00 00 00       	call   1842e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
   1842c:	c9                   	leave
   1842d:	c3                   	ret

000000000001842e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   1842e:	55                   	push   %rbp
   1842f:	48 89 e5             	mov    %rsp,%rbp
   18432:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   18436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1843a:	0f b6 40 04          	movzbl 0x4(%rax),%eax
   1843e:	5d                   	pop    %rbp
   1843f:	c3                   	ret

0000000000018440 <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   18440:	55                   	push   %rbp
   18441:	48 89 e5             	mov    %rsp,%rbp
   18444:	48 83 ec 10          	sub    $0x10,%rsp
   18448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   1844c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18450:	48 89 c7             	mov    %rax,%rdi
   18453:	e8 d6 ff ff ff       	call   1842e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
   18458:	84 c0                	test   %al,%al
   1845a:	74 0e                	je     1846a <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
   1845c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18460:	48 89 c7             	mov    %rax,%rdi
   18463:	e8 46 10 00 00       	call   194ae <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
   18468:	eb 05                	jmp    1846f <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
   1846a:	e8 e0 f6 ff ff       	call   17b4f <_ZSt27__throw_bad_optional_accessv>
      }
   1846f:	c9                   	leave
   18470:	c3                   	ret
   18471:	90                   	nop

0000000000018472 <_ZN2vk5FlagsINS_25DeviceQueueCreateFlagBitsEEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
   18472:	55                   	push   %rbp
   18473:	48 89 e5             	mov    %rsp,%rbp
   18476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1847a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1847e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   18484:	90                   	nop
   18485:	5d                   	pop    %rbp
   18486:	c3                   	ret
   18487:	90                   	nop

0000000000018488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18488:	55                   	push   %rbp
   18489:	48 89 e5             	mov    %rsp,%rbp
   1848c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18494:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1849c:	48 8b 00             	mov    (%rax),%rax
   1849f:	48 29 c2             	sub    %rax,%rdx
   184a2:	48 89 d0             	mov    %rdx,%rax
   184a5:	48 c1 f8 03          	sar    $0x3,%rax
   184a9:	5d                   	pop    %rbp
   184aa:	c3                   	ret
   184ab:	90                   	nop

00000000000184ac <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   184ac:	55                   	push   %rbp
   184ad:	48 89 e5             	mov    %rsp,%rbp
   184b0:	48 83 ec 10          	sub    $0x10,%rsp
   184b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   184b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184bc:	48 8b 10             	mov    (%rax),%rdx
   184bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184c3:	48 89 d6             	mov    %rdx,%rsi
   184c6:	48 89 c7             	mov    %rax,%rdi
   184c9:	e8 24 10 00 00       	call   194f2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   184ce:	c9                   	leave
   184cf:	c3                   	ret

00000000000184d0 <_ZN2vk5FlagsINS_20DeviceCreateFlagBitsEEC1Ev>:
   184d0:	55                   	push   %rbp
   184d1:	48 89 e5             	mov    %rsp,%rbp
   184d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   184d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184dc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   184e2:	90                   	nop
   184e3:	5d                   	pop    %rbp
   184e4:	c3                   	ret
   184e5:	90                   	nop

00000000000184e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   184e6:	55                   	push   %rbp
   184e7:	48 89 e5             	mov    %rsp,%rbp
   184ea:	48 83 ec 10          	sub    $0x10,%rsp
   184ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data(); }
   184f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184f6:	48 89 c7             	mov    %rax,%rdi
   184f9:	e8 9a 24 ff ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
   184fe:	c9                   	leave
   184ff:	c3                   	ret

0000000000018500 <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1ES1_>:
    VULKAN_HPP_CONSTEXPR Flags( BitType bit ) VULKAN_HPP_NOEXCEPT : m_mask( static_cast<MaskType>( bit ) ) {}
   18500:	55                   	push   %rbp
   18501:	48 89 e5             	mov    %rsp,%rbp
   18504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18508:	89 75 f4             	mov    %esi,-0xc(%rbp)
   1850b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1850f:	8b 55 f4             	mov    -0xc(%rbp),%edx
   18512:	89 10                	mov    %edx,(%rax)
   18514:	90                   	nop
   18515:	5d                   	pop    %rbp
   18516:	c3                   	ret
   18517:	90                   	nop

0000000000018518 <_ZNK2vk5FlagsINS_13QueueFlagBitsEEanERKS2_>:
    VULKAN_HPP_CONSTEXPR Flags<BitType> operator&( Flags<BitType> const & rhs ) const VULKAN_HPP_NOEXCEPT
   18518:	55                   	push   %rbp
   18519:	48 89 e5             	mov    %rsp,%rbp
   1851c:	48 83 ec 20          	sub    $0x20,%rsp
   18520:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18524:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return Flags<BitType>( m_mask & rhs.m_mask );
   18528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1852c:	8b 10                	mov    (%rax),%edx
   1852e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18532:	8b 00                	mov    (%rax),%eax
   18534:	21 c2                	and    %eax,%edx
   18536:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
   1853a:	89 d6                	mov    %edx,%esi
   1853c:	48 89 c7             	mov    %rax,%rdi
   1853f:	e8 da 0f 00 00       	call   1951e <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1Ej>
   18544:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
   18547:	c9                   	leave
   18548:	c3                   	ret
   18549:	90                   	nop

000000000001854a <_ZNK2vk5FlagsINS_13QueueFlagBitsEEcvbEv>:
    explicit VULKAN_HPP_CONSTEXPR operator bool() const VULKAN_HPP_NOEXCEPT
   1854a:	55                   	push   %rbp
   1854b:	48 89 e5             	mov    %rsp,%rbp
   1854e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !!m_mask;
   18552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18556:	8b 00                	mov    (%rax),%eax
   18558:	85 c0                	test   %eax,%eax
   1855a:	0f 95 c0             	setne  %al
    }
   1855d:	5d                   	pop    %rbp
   1855e:	c3                   	ret
   1855f:	90                   	nop

0000000000018560 <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
   18560:	55                   	push   %rbp
   18561:	48 89 e5             	mov    %rsp,%rbp
   18564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1856c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   18572:	90                   	nop
   18573:	5d                   	pop    %rbp
   18574:	c3                   	ret
   18575:	90                   	nop

0000000000018576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>:
    operator RefType *() const VULKAN_HPP_NOEXCEPT
   18576:	55                   	push   %rbp
   18577:	48 89 e5             	mov    %rsp,%rbp
   1857a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return m_ptr;
   1857e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18582:	48 8b 00             	mov    (%rax),%rax
    }
   18585:	5d                   	pop    %rbp
   18586:	c3                   	ret
   18587:	90                   	nop

0000000000018588 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   18588:	55                   	push   %rbp
   18589:	48 89 e5             	mov    %rsp,%rbp
   1858c:	48 83 ec 10          	sub    $0x10,%rsp
   18590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   18594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18598:	48 89 c7             	mov    %rax,%rdi
   1859b:	e8 2e 10 00 00       	call   195ce <_ZNSaIN2vk4raii14PhysicalDeviceEEC1Ev>
   185a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185a4:	48 89 c7             	mov    %rax,%rdi
   185a7:	e8 3e 10 00 00       	call   195ea <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
   185ac:	90                   	nop
   185ad:	c9                   	leave
   185ae:	c3                   	ret
   185af:	90                   	nop

00000000000185b0 <_ZNSaIN2vk4raii14PhysicalDeviceEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   185b0:	55                   	push   %rbp
   185b1:	48 89 e5             	mov    %rsp,%rbp
   185b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185b8:	90                   	nop
   185b9:	5d                   	pop    %rbp
   185ba:	c3                   	ret
   185bb:	90                   	nop

00000000000185bc <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   185bc:	55                   	push   %rbp
   185bd:	48 89 e5             	mov    %rsp,%rbp
   185c0:	48 83 ec 10          	sub    $0x10,%rsp
   185c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   185c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185cc:	48 8b 50 10          	mov    0x10(%rax),%rdx
   185d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185d4:	48 8b 00             	mov    (%rax),%rax
   185d7:	48 29 c2             	sub    %rax,%rdx
   185da:	48 89 d0             	mov    %rdx,%rax
   185dd:	48 c1 f8 04          	sar    $0x4,%rax
	_M_deallocate(_M_impl._M_start,
   185e1:	48 89 c2             	mov    %rax,%rdx
   185e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185e8:	48 8b 08             	mov    (%rax),%rcx
   185eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185ef:	48 89 ce             	mov    %rcx,%rsi
   185f2:	48 89 c7             	mov    %rax,%rdi
   185f5:	e8 1e 10 00 00       	call   19618 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE13_M_deallocateEPS2_m>
      }
   185fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185fe:	48 89 c7             	mov    %rax,%rdi
   18601:	e8 7c ee ff ff       	call   17482 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE12_Vector_implD1Ev>
   18606:	90                   	nop
   18607:	c9                   	leave
   18608:	c3                   	ret
   18609:	90                   	nop

000000000001860a <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1860a:	55                   	push   %rbp
   1860b:	48 89 e5             	mov    %rsp,%rbp
   1860e:	48 83 ec 10          	sub    $0x10,%rsp
   18612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   18616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1861a:	48 89 c7             	mov    %rax,%rdi
   1861d:	e8 2c 10 00 00       	call   1964e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>
   18622:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18629:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1862d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18631:	48 8b 00             	mov    (%rax),%rax
   18634:	48 89 ce             	mov    %rcx,%rsi
   18637:	48 89 c7             	mov    %rax,%rdi
   1863a:	e8 1d 10 00 00       	call   1965c <_ZSt8_DestroyIPN2vk4raii14PhysicalDeviceES2_EvT_S4_RSaIT0_E>
      }
   1863f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18643:	48 89 c7             	mov    %rax,%rdi
   18646:	e8 71 ff ff ff       	call   185bc <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EED1Ev>
   1864b:	90                   	nop
   1864c:	c9                   	leave
   1864d:	c3                   	ret

000000000001864e <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
   1864e:	55                   	push   %rbp
   1864f:	48 89 e5             	mov    %rsp,%rbp
   18652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18656:	90                   	nop
   18657:	5d                   	pop    %rbp
   18658:	c3                   	ret
   18659:	90                   	nop

000000000001865a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1865a:	55                   	push   %rbp
   1865b:	48 89 e5             	mov    %rsp,%rbp
   1865e:	48 83 ec 10          	sub    $0x10,%rsp
   18662:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1866a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1866e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18672:	48 8b 00             	mov    (%rax),%rax
   18675:	48 29 c2             	sub    %rax,%rdx
   18678:	48 89 d0             	mov    %rdx,%rax
   1867b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1867f:	48 89 c2             	mov    %rax,%rdx
   18682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18686:	48 8b 08             	mov    (%rax),%rcx
   18689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1868d:	48 89 ce             	mov    %rcx,%rsi
   18690:	48 89 c7             	mov    %rax,%rdi
   18693:	e8 ee 0f 00 00       	call   19686 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   18698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1869c:	48 89 c7             	mov    %rax,%rdi
   1869f:	e8 32 ee ff ff       	call   174d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
   186a4:	90                   	nop
   186a5:	c9                   	leave
   186a6:	c3                   	ret
   186a7:	90                   	nop

00000000000186a8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   186a8:	55                   	push   %rbp
   186a9:	48 89 e5             	mov    %rsp,%rbp
   186ac:	48 83 ec 10          	sub    $0x10,%rsp
   186b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   186b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186b8:	48 89 c7             	mov    %rax,%rdi
   186bb:	e8 fc 0f 00 00       	call   196bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
   186c0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   186c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186c7:	48 8b 48 08          	mov    0x8(%rax),%rcx
   186cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186cf:	48 8b 00             	mov    (%rax),%rax
   186d2:	48 89 ce             	mov    %rcx,%rsi
   186d5:	48 89 c7             	mov    %rax,%rdi
   186d8:	e8 ed 0f 00 00       	call   196ca <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
   186dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186e1:	48 89 c7             	mov    %rax,%rdi
   186e4:	e8 71 ff ff ff       	call   1865a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   186e9:	90                   	nop
   186ea:	c9                   	leave
   186eb:	c3                   	ret

00000000000186ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   186ec:	55                   	push   %rbp
   186ed:	48 89 e5             	mov    %rsp,%rbp
   186f0:	48 83 ec 10          	sub    $0x10,%rsp
   186f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   186fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18700:	48 89 c7             	mov    %rax,%rdi
   18703:	e8 8e 00 00 00       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   18708:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1870c:	0f 92 c0             	setb   %al
   1870f:	84 c0                	test   %al,%al
   18711:	74 24                	je     18737 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   18713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18717:	48 89 c7             	mov    %rax,%rdi
   1871a:	e8 77 00 00 00       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   1871f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18723:	48 29 c2             	sub    %rax,%rdx
   18726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1872a:	48 89 d6             	mov    %rdx,%rsi
   1872d:	48 89 c7             	mov    %rax,%rdi
   18730:	e8 b3 10 00 00       	call   197e8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm>
      }
   18735:	eb 38                	jmp    1876f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   18737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1873b:	48 89 c7             	mov    %rax,%rdi
   1873e:	e8 53 00 00 00       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   18743:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18747:	0f 92 c0             	setb   %al
   1874a:	84 c0                	test   %al,%al
   1874c:	74 21                	je     1876f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   1874e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18752:	48 8b 00             	mov    (%rax),%rax
   18755:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18759:	48 c1 e2 03          	shl    $0x3,%rdx
   1875d:	48 01 c2             	add    %rax,%rdx
   18760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18764:	48 89 d6             	mov    %rdx,%rsi
   18767:	48 89 c7             	mov    %rax,%rdi
   1876a:	e8 83 12 00 00       	call   199f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   1876f:	90                   	nop
   18770:	c9                   	leave
   18771:	c3                   	ret

0000000000018772 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   18772:	55                   	push   %rbp
   18773:	48 89 e5             	mov    %rsp,%rbp
   18776:	48 83 ec 10          	sub    $0x10,%rsp
   1877a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1877e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18782:	48 8b 10             	mov    (%rax),%rdx
   18785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18789:	48 89 d6             	mov    %rdx,%rsi
   1878c:	48 89 c7             	mov    %rax,%rdi
   1878f:	e8 be 12 00 00       	call   19a52 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   18794:	c9                   	leave
   18795:	c3                   	ret

0000000000018796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18796:	55                   	push   %rbp
   18797:	48 89 e5             	mov    %rsp,%rbp
   1879a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1879e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187a2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   187a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187aa:	48 8b 00             	mov    (%rax),%rax
   187ad:	48 29 c2             	sub    %rax,%rdx
   187b0:	48 89 d0             	mov    %rdx,%rax
   187b3:	48 c1 f8 03          	sar    $0x3,%rax
   187b7:	5d                   	pop    %rbp
   187b8:	c3                   	ret
   187b9:	90                   	nop

00000000000187ba <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   187ba:	55                   	push   %rbp
   187bb:	48 89 e5             	mov    %rsp,%rbp
   187be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   187c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187c6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   187ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187ce:	48 8b 00             	mov    (%rax),%rax
   187d1:	48 29 c2             	sub    %rax,%rdx
   187d4:	48 89 d0             	mov    %rdx,%rax
   187d7:	48 c1 f8 04          	sar    $0x4,%rax
   187db:	5d                   	pop    %rbp
   187dc:	c3                   	ret
   187dd:	90                   	nop

00000000000187de <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE7reserveEm>:
_GLIBCXX_BEGIN_NAMESPACE_CONTAINER

  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   187de:	55                   	push   %rbp
   187df:	48 89 e5             	mov    %rsp,%rbp
   187e2:	48 83 ec 20          	sub    $0x20,%rsp
   187e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   187ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    reserve(size_type __n)
    {
      if (__n > this->max_size())
   187ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   187f2:	48 89 c7             	mov    %rax,%rdi
   187f5:	e8 6a 12 00 00       	call   19a64 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8max_sizeEv>
   187fa:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   187fe:	0f 92 c0             	setb   %al
   18801:	84 c0                	test   %al,%al
   18803:	74 0f                	je     18814 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE7reserveEm+0x36>
	__throw_length_error(__N("vector::reserve"));
   18805:	48 8d 05 56 74 01 00 	lea    0x17456(%rip),%rax        # 2fc62 <_ZNSt8__detailL19__atomic_spin_countE+0x38ae>
   1880c:	48 89 c7             	mov    %rax,%rdi
   1880f:	e8 cc c8 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
      if (this->capacity() < __n)
   18814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18818:	48 89 c7             	mov    %rax,%rdi
   1881b:	e8 66 12 00 00       	call   19a86 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8capacityEv>
   18820:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18824:	0f 92 c0             	setb   %al
   18827:	84 c0                	test   %al,%al
   18829:	0f 84 c5 00 00 00    	je     188f4 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE7reserveEm+0x116>
	{
	  const size_type __old_size = size();
   1882f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18833:	48 89 c7             	mov    %rax,%rdi
   18836:	e8 7f ff ff ff       	call   187ba <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4sizeEv>
   1883b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  pointer __tmp;
#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __tmp = this->_M_allocate(__n);
   1883f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18843:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18847:	48 89 d6             	mov    %rdx,%rsi
   1884a:	48 89 c7             	mov    %rax,%rdi
   1884d:	e8 58 12 00 00       	call   19aaa <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE11_M_allocateEm>
   18852:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
			  __tmp, _M_get_Tp_allocator());
   18856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1885a:	48 89 c7             	mov    %rax,%rdi
   1885d:	e8 ec 0d 00 00       	call   1964e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>
   18862:	48 89 c1             	mov    %rax,%rcx
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   18865:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18869:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1886d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18871:	48 8b 00             	mov    (%rax),%rax
   18874:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18878:	48 89 c7             	mov    %rax,%rdi
   1887b:	e8 5d 12 00 00       	call   19add <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
			    _M_get_Tp_allocator());
	    }
	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
	  _M_deallocate(this->_M_impl._M_start,
   18880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
			this->_M_impl._M_end_of_storage
   18884:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18888:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			- this->_M_impl._M_start);
   1888c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18890:	48 8b 12             	mov    (%rdx),%rdx
   18893:	48 29 d1             	sub    %rdx,%rcx
   18896:	48 c1 f9 04          	sar    $0x4,%rcx
   1889a:	48 89 ca             	mov    %rcx,%rdx
	  _M_deallocate(this->_M_impl._M_start,
   1889d:	48 89 d6             	mov    %rdx,%rsi
   188a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   188a4:	48 8b 0a             	mov    (%rdx),%rcx
   188a7:	48 89 f2             	mov    %rsi,%rdx
   188aa:	48 89 ce             	mov    %rcx,%rsi
   188ad:	48 89 c7             	mov    %rax,%rdi
   188b0:	e8 63 0d 00 00       	call   19618 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE13_M_deallocateEPS2_m>
	  this->_M_impl._M_start = __tmp;
   188b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   188bd:	48 89 10             	mov    %rdx,(%rax)
	  this->_M_impl._M_finish = __tmp + __old_size;
   188c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188c4:	48 c1 e0 04          	shl    $0x4,%rax
   188c8:	48 89 c2             	mov    %rax,%rdx
   188cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   188cf:	48 01 c2             	add    %rax,%rdx
   188d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   188da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188de:	48 8b 00             	mov    (%rax),%rax
   188e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   188e5:	48 c1 e2 04          	shl    $0x4,%rdx
   188e9:	48 01 c2             	add    %rax,%rdx
   188ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    }
   188f4:	90                   	nop
   188f5:	c9                   	leave
   188f6:	c3                   	ret
   188f7:	90                   	nop

00000000000188f8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   188f8:	55                   	push   %rbp
   188f9:	48 89 e5             	mov    %rsp,%rbp
   188fc:	48 83 ec 20          	sub    $0x20,%rsp
   18900:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   18904:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18908:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1890c:	48 89 d6             	mov    %rdx,%rsi
   1890f:	48 89 c7             	mov    %rax,%rdi
   18912:	e8 f9 11 00 00       	call   19b10 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   18917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1891b:	c9                   	leave
   1891c:	c3                   	ret
   1891d:	90                   	nop

000000000001891e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1891e:	55                   	push   %rbp
   1891f:	48 89 e5             	mov    %rsp,%rbp
   18922:	48 83 ec 20          	sub    $0x20,%rsp
   18926:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1892a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1892e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18932:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   18936:	48 89 d6             	mov    %rdx,%rsi
   18939:	48 89 c7             	mov    %rax,%rdi
   1893c:	e8 cf 11 00 00       	call   19b10 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   18941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18945:	c9                   	leave
   18946:	c3                   	ret
   18947:	90                   	nop

0000000000018948 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   18948:	55                   	push   %rbp
   18949:	48 89 e5             	mov    %rsp,%rbp
   1894c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   18950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18954:	48 8b 00             	mov    (%rax),%rax
   18957:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1895b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1895f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   18962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   18966:	5d                   	pop    %rbp
   18967:	c3                   	ret

0000000000018968 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12emplace_backIJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEERS2_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   18968:	55                   	push   %rbp
   18969:	48 89 e5             	mov    %rsp,%rbp
   1896c:	41 54                	push   %r12
   1896e:	53                   	push   %rbx
   1896f:	48 83 ec 20          	sub    $0x20,%rsp
   18973:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18977:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1897b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1897f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18983:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18987:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1898b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1898f:	48 39 c2             	cmp    %rax,%rdx
   18992:	74 4b                	je     189df <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12emplace_backIJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEERS2_DpOT_+0x77>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   18994:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18998:	48 89 c7             	mov    %rax,%rdi
   1899b:	e8 9b 11 00 00       	call   19b3b <_ZSt7forwardIRKP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS4_E4typeE>
   189a0:	48 89 c3             	mov    %rax,%rbx
   189a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   189a7:	48 89 c7             	mov    %rax,%rdi
   189aa:	e8 7e 11 00 00       	call   19b2d <_ZSt7forwardIRKN2vk4raii8InstanceEEOT_RNSt16remove_referenceIS5_E4typeE>
   189af:	48 89 c2             	mov    %rax,%rdx
   189b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   189b6:	48 8b 70 08          	mov    0x8(%rax),%rsi
   189ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   189be:	48 89 d9             	mov    %rbx,%rcx
   189c1:	48 89 c7             	mov    %rax,%rdi
   189c4:	e8 80 11 00 00       	call   19b49 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE9constructIS2_JRKNS1_8InstanceERKP18VkPhysicalDevice_TEEEvRS3_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   189c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   189cd:	48 8b 40 08          	mov    0x8(%rax),%rax
   189d1:	48 8d 50 10          	lea    0x10(%rax),%rdx
   189d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   189d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   189dd:	eb 3f                	jmp    18a1e <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12emplace_backIJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEERS2_DpOT_+0xb6>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   189df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   189e3:	48 89 c7             	mov    %rax,%rdi
   189e6:	e8 50 11 00 00       	call   19b3b <_ZSt7forwardIRKP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS4_E4typeE>
   189eb:	49 89 c4             	mov    %rax,%r12
   189ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   189f2:	48 89 c7             	mov    %rax,%rdi
   189f5:	e8 33 11 00 00       	call   19b2d <_ZSt7forwardIRKN2vk4raii8InstanceEEOT_RNSt16remove_referenceIS5_E4typeE>
   189fa:	48 89 c3             	mov    %rax,%rbx
   189fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a01:	48 89 c7             	mov    %rax,%rdi
   18a04:	e8 e7 06 00 00       	call   190f0 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE3endEv>
   18a09:	48 89 c6             	mov    %rax,%rsi
   18a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a10:	4c 89 e1             	mov    %r12,%rcx
   18a13:	48 89 da             	mov    %rbx,%rdx
   18a16:	48 89 c7             	mov    %rax,%rdi
   18a19:	e8 86 12 00 00       	call   19ca4 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE17_M_realloc_insertIJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   18a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18a22:	48 89 c7             	mov    %rax,%rdi
   18a25:	e8 1e 14 00 00       	call   19e48 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4backEv>
#endif
      }
   18a2a:	48 83 c4 20          	add    $0x20,%rsp
   18a2e:	5b                   	pop    %rbx
   18a2f:	41 5c                	pop    %r12
   18a31:	5d                   	pop    %rbp
   18a32:	c3                   	ret
   18a33:	90                   	nop

0000000000018a34 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEC1Ev>:
      __uniq_ptr_impl() = default;
   18a34:	55                   	push   %rbp
   18a35:	48 89 e5             	mov    %rsp,%rbp
   18a38:	48 83 ec 10          	sub    $0x10,%rsp
   18a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a44:	48 89 c7             	mov    %rax,%rdi
   18a47:	e8 3c 14 00 00       	call   19e88 <_ZNSt5tupleIJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
   18a4c:	90                   	nop
   18a4d:	c9                   	leave
   18a4e:	c3                   	ret
   18a4f:	90                   	nop

0000000000018a50 <_ZNSt15__uniq_ptr_dataIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
   18a50:	55                   	push   %rbp
   18a51:	48 89 e5             	mov    %rsp,%rbp
   18a54:	48 83 ec 10          	sub    $0x10,%rsp
   18a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a60:	48 89 c7             	mov    %rax,%rdi
   18a63:	e8 cc ff ff ff       	call   18a34 <_ZNSt15__uniq_ptr_implIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEC1Ev>
   18a68:	90                   	nop
   18a69:	c9                   	leave
   18a6a:	c3                   	ret
   18a6b:	90                   	nop

0000000000018a6c <_ZNSt10unique_ptrIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>:
	constexpr unique_ptr() noexcept
   18a6c:	55                   	push   %rbp
   18a6d:	48 89 e5             	mov    %rsp,%rbp
   18a70:	48 83 ec 10          	sub    $0x10,%rsp
   18a74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
   18a78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   18a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a87:	48 89 c7             	mov    %rax,%rdi
   18a8a:	e8 c1 ff ff ff       	call   18a50 <_ZNSt15__uniq_ptr_dataIN2vk4raii16DeviceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>
	{ }
   18a8f:	90                   	nop
   18a90:	c9                   	leave
   18a91:	c3                   	ret

0000000000018a92 <_ZNSaIN2vk21QueueFamilyPropertiesEED1Ev>:
   18a92:	55                   	push   %rbp
   18a93:	48 89 e5             	mov    %rsp,%rbp
   18a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a9a:	90                   	nop
   18a9b:	5d                   	pop    %rbp
   18a9c:	c3                   	ret
   18a9d:	90                   	nop

0000000000018a9e <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18a9e:	55                   	push   %rbp
   18a9f:	48 89 e5             	mov    %rsp,%rbp
   18aa2:	48 83 ec 10          	sub    $0x10,%rsp
   18aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18aae:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ab6:	48 8b 00             	mov    (%rax),%rax
   18ab9:	48 29 c2             	sub    %rax,%rdx
   18abc:	48 c1 fa 03          	sar    $0x3,%rdx
   18ac0:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
   18ac7:	aa aa aa 
   18aca:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   18ace:	48 89 c2             	mov    %rax,%rdx
   18ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ad5:	48 8b 08             	mov    (%rax),%rcx
   18ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18adc:	48 89 ce             	mov    %rcx,%rsi
   18adf:	48 89 c7             	mov    %rax,%rdi
   18ae2:	e8 bd 13 00 00       	call   19ea4 <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE13_M_deallocateEPS1_m>
      }
   18ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18aeb:	48 89 c7             	mov    %rax,%rdi
   18aee:	e8 6b ef ff ff       	call   17a5e <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE12_Vector_implD1Ev>
   18af3:	90                   	nop
   18af4:	c9                   	leave
   18af5:	c3                   	ret

0000000000018af6 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18af6:	55                   	push   %rbp
   18af7:	48 89 e5             	mov    %rsp,%rbp
   18afa:	48 83 ec 10          	sub    $0x10,%rsp
   18afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   18b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b06:	48 89 c7             	mov    %rax,%rdi
   18b09:	e8 cc 13 00 00       	call   19eda <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   18b0e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b15:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b1d:	48 8b 00             	mov    (%rax),%rax
   18b20:	48 89 ce             	mov    %rcx,%rsi
   18b23:	48 89 c7             	mov    %rax,%rdi
   18b26:	e8 bd 13 00 00       	call   19ee8 <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesES1_EvT_S3_RSaIT0_E>
      }
   18b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b2f:	48 89 c7             	mov    %rax,%rdi
   18b32:	e8 67 ff ff ff       	call   18a9e <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EED1Ev>
   18b37:	90                   	nop
   18b38:	c9                   	leave
   18b39:	c3                   	ret

0000000000018b3a <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   18b3a:	55                   	push   %rbp
   18b3b:	48 89 e5             	mov    %rsp,%rbp
   18b3e:	48 83 ec 10          	sub    $0x10,%rsp
   18b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   18b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b4e:	48 89 c7             	mov    %rax,%rdi
   18b51:	e8 98 00 00 00       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   18b56:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18b5a:	0f 92 c0             	setb   %al
   18b5d:	84 c0                	test   %al,%al
   18b5f:	74 24                	je     18b85 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   18b61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b65:	48 89 c7             	mov    %rax,%rdi
   18b68:	e8 81 00 00 00       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   18b6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18b71:	48 29 c2             	sub    %rax,%rdx
   18b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b78:	48 89 d6             	mov    %rdx,%rsi
   18b7b:	48 89 c7             	mov    %rax,%rdi
   18b7e:	e8 57 14 00 00       	call   19fda <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm>
      }
   18b83:	eb 42                	jmp    18bc7 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE6resizeEm+0x8d>
	else if (__new_size < size())
   18b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b89:	48 89 c7             	mov    %rax,%rdi
   18b8c:	e8 5d 00 00 00       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   18b91:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18b95:	0f 92 c0             	setb   %al
   18b98:	84 c0                	test   %al,%al
   18b9a:	74 2b                	je     18bc7 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE6resizeEm+0x8d>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   18b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ba0:	48 8b 08             	mov    (%rax),%rcx
   18ba3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18ba7:	48 89 d0             	mov    %rdx,%rax
   18baa:	48 01 c0             	add    %rax,%rax
   18bad:	48 01 d0             	add    %rdx,%rax
   18bb0:	48 c1 e0 03          	shl    $0x3,%rax
   18bb4:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   18bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bbc:	48 89 d6             	mov    %rdx,%rsi
   18bbf:	48 89 c7             	mov    %rax,%rdi
   18bc2:	e8 4f 16 00 00       	call   1a216 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE15_M_erase_at_endEPS1_>
      }
   18bc7:	90                   	nop
   18bc8:	c9                   	leave
   18bc9:	c3                   	ret

0000000000018bca <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   18bca:	55                   	push   %rbp
   18bcb:	48 89 e5             	mov    %rsp,%rbp
   18bce:	48 83 ec 10          	sub    $0x10,%rsp
   18bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   18bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bda:	48 8b 10             	mov    (%rax),%rdx
   18bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18be1:	48 89 d6             	mov    %rdx,%rsi
   18be4:	48 89 c7             	mov    %rax,%rdi
   18be7:	e8 9c 16 00 00       	call   1a288 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   18bec:	c9                   	leave
   18bed:	c3                   	ret

0000000000018bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18bee:	55                   	push   %rbp
   18bef:	48 89 e5             	mov    %rsp,%rbp
   18bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18bfa:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c02:	48 8b 00             	mov    (%rax),%rax
   18c05:	48 29 c2             	sub    %rax,%rdx
   18c08:	48 c1 fa 03          	sar    $0x3,%rdx
   18c0c:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
   18c13:	aa aa aa 
   18c16:	48 0f af c2          	imul   %rdx,%rax
   18c1a:	5d                   	pop    %rbp
   18c1b:	c3                   	ret

0000000000018c1c <_ZNSaIN2vk19ExtensionPropertiesEED1Ev>:
   18c1c:	55                   	push   %rbp
   18c1d:	48 89 e5             	mov    %rsp,%rbp
   18c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18c24:	90                   	nop
   18c25:	5d                   	pop    %rbp
   18c26:	c3                   	ret
   18c27:	90                   	nop

0000000000018c28 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18c28:	55                   	push   %rbp
   18c29:	48 89 e5             	mov    %rsp,%rbp
   18c2c:	48 83 ec 10          	sub    $0x10,%rsp
   18c30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18c34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c38:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c40:	48 8b 00             	mov    (%rax),%rax
   18c43:	48 29 c2             	sub    %rax,%rdx
   18c46:	48 c1 fa 02          	sar    $0x2,%rdx
   18c4a:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   18c51:	fc c0 0f 
   18c54:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   18c58:	48 89 c2             	mov    %rax,%rdx
   18c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c5f:	48 8b 08             	mov    (%rax),%rcx
   18c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c66:	48 89 ce             	mov    %rcx,%rsi
   18c69:	48 89 c7             	mov    %rax,%rdi
   18c6c:	e8 29 16 00 00       	call   1a29a <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE13_M_deallocateEPS1_m>
      }
   18c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c75:	48 89 c7             	mov    %rax,%rdi
   18c78:	e8 fd ed ff ff       	call   17a7a <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE12_Vector_implD1Ev>
   18c7d:	90                   	nop
   18c7e:	c9                   	leave
   18c7f:	c3                   	ret

0000000000018c80 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18c80:	55                   	push   %rbp
   18c81:	48 89 e5             	mov    %rsp,%rbp
   18c84:	48 83 ec 10          	sub    $0x10,%rsp
   18c88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   18c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c90:	48 89 c7             	mov    %rax,%rdi
   18c93:	e8 38 16 00 00       	call   1a2d0 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   18c98:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18c9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18c9f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ca7:	48 8b 00             	mov    (%rax),%rax
   18caa:	48 89 ce             	mov    %rcx,%rsi
   18cad:	48 89 c7             	mov    %rax,%rdi
   18cb0:	e8 29 16 00 00       	call   1a2de <_ZSt8_DestroyIPN2vk19ExtensionPropertiesES1_EvT_S3_RSaIT0_E>
      }
   18cb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cb9:	48 89 c7             	mov    %rax,%rdi
   18cbc:	e8 67 ff ff ff       	call   18c28 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EED1Ev>
   18cc1:	90                   	nop
   18cc2:	c9                   	leave
   18cc3:	c3                   	ret

0000000000018cc4 <_ZNK2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEptEv>:
    RefType const * operator->() const VULKAN_HPP_NOEXCEPT
   18cc4:	55                   	push   %rbp
   18cc5:	48 89 e5             	mov    %rsp,%rbp
   18cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return m_ptr;
   18ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cd0:	48 8b 00             	mov    (%rax),%rax
    }
   18cd3:	5d                   	pop    %rbp
   18cd4:	c3                   	ret
   18cd5:	90                   	nop

0000000000018cd6 <_ZNK2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEcvbEv>:
    explicit operator bool() const VULKAN_HPP_NOEXCEPT
   18cd6:	55                   	push   %rbp
   18cd7:	48 89 e5             	mov    %rsp,%rbp
   18cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !!m_ptr;
   18cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ce2:	48 8b 00             	mov    (%rax),%rax
   18ce5:	48 85 c0             	test   %rax,%rax
   18ce8:	0f 95 c0             	setne  %al
    }
   18ceb:	5d                   	pop    %rbp
   18cec:	c3                   	ret
   18ced:	90                   	nop

0000000000018cee <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   18cee:	55                   	push   %rbp
   18cef:	48 89 e5             	mov    %rsp,%rbp
   18cf2:	48 83 ec 10          	sub    $0x10,%rsp
   18cf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18cfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   18cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d02:	48 89 c7             	mov    %rax,%rdi
   18d05:	e8 9a 00 00 00       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   18d0a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18d0e:	0f 92 c0             	setb   %al
   18d11:	84 c0                	test   %al,%al
   18d13:	74 24                	je     18d39 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   18d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d19:	48 89 c7             	mov    %rax,%rdi
   18d1c:	e8 83 00 00 00       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   18d21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d25:	48 29 c2             	sub    %rax,%rdx
   18d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d2c:	48 89 d6             	mov    %rdx,%rsi
   18d2f:	48 89 c7             	mov    %rax,%rdi
   18d32:	e8 99 16 00 00       	call   1a3d0 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm>
      }
   18d37:	eb 43                	jmp    18d7c <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE6resizeEm+0x8e>
	else if (__new_size < size())
   18d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d3d:	48 89 c7             	mov    %rax,%rdi
   18d40:	e8 5f 00 00 00       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   18d45:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18d49:	0f 92 c0             	setb   %al
   18d4c:	84 c0                	test   %al,%al
   18d4e:	74 2c                	je     18d7c <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE6resizeEm+0x8e>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   18d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d54:	48 8b 08             	mov    (%rax),%rcx
   18d57:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18d5b:	48 89 d0             	mov    %rdx,%rax
   18d5e:	48 c1 e0 06          	shl    $0x6,%rax
   18d62:	48 01 d0             	add    %rdx,%rax
   18d65:	48 c1 e0 02          	shl    $0x2,%rax
   18d69:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   18d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d71:	48 89 d6             	mov    %rdx,%rsi
   18d74:	48 89 c7             	mov    %rax,%rdi
   18d77:	e8 94 18 00 00       	call   1a610 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE15_M_erase_at_endEPS1_>
      }
   18d7c:	90                   	nop
   18d7d:	c9                   	leave
   18d7e:	c3                   	ret
   18d7f:	90                   	nop

0000000000018d80 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   18d80:	55                   	push   %rbp
   18d81:	48 89 e5             	mov    %rsp,%rbp
   18d84:	48 83 ec 10          	sub    $0x10,%rsp
   18d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   18d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d90:	48 8b 10             	mov    (%rax),%rdx
   18d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18d97:	48 89 d6             	mov    %rdx,%rsi
   18d9a:	48 89 c7             	mov    %rax,%rdi
   18d9d:	e8 e0 18 00 00       	call   1a682 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   18da2:	c9                   	leave
   18da3:	c3                   	ret

0000000000018da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18da4:	55                   	push   %rbp
   18da5:	48 89 e5             	mov    %rsp,%rbp
   18da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18db0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18db8:	48 8b 00             	mov    (%rax),%rax
   18dbb:	48 29 c2             	sub    %rax,%rdx
   18dbe:	48 c1 fa 02          	sar    $0x2,%rdx
   18dc2:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   18dc9:	fc c0 0f 
   18dcc:	48 0f af c2          	imul   %rdx,%rax
   18dd0:	5d                   	pop    %rbp
   18dd1:	c3                   	ret

0000000000018dd2 <_ZNSaIN2vk15LayerPropertiesEED1Ev>:
   18dd2:	55                   	push   %rbp
   18dd3:	48 89 e5             	mov    %rsp,%rbp
   18dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18dda:	90                   	nop
   18ddb:	5d                   	pop    %rbp
   18ddc:	c3                   	ret
   18ddd:	90                   	nop

0000000000018dde <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18dde:	55                   	push   %rbp
   18ddf:	48 89 e5             	mov    %rsp,%rbp
   18de2:	48 83 ec 10          	sub    $0x10,%rsp
   18de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18dee:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18df6:	48 8b 00             	mov    (%rax),%rax
   18df9:	48 29 c2             	sub    %rax,%rdx
   18dfc:	48 c1 fa 03          	sar    $0x3,%rdx
   18e00:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   18e07:	fc c0 0f 
   18e0a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   18e0e:	48 89 c2             	mov    %rax,%rdx
   18e11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e15:	48 8b 08             	mov    (%rax),%rcx
   18e18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e1c:	48 89 ce             	mov    %rcx,%rsi
   18e1f:	48 89 c7             	mov    %rax,%rdi
   18e22:	e8 6d 18 00 00       	call   1a694 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE13_M_deallocateEPS1_m>
      }
   18e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e2b:	48 89 c7             	mov    %rax,%rdi
   18e2e:	e8 63 ec ff ff       	call   17a96 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE12_Vector_implD1Ev>
   18e33:	90                   	nop
   18e34:	c9                   	leave
   18e35:	c3                   	ret

0000000000018e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   18e36:	55                   	push   %rbp
   18e37:	48 89 e5             	mov    %rsp,%rbp
   18e3a:	48 83 ec 10          	sub    $0x10,%rsp
   18e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   18e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e46:	48 89 c7             	mov    %rax,%rdi
   18e49:	e8 7c 18 00 00       	call   1a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   18e4e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   18e51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e55:	48 8b 48 08          	mov    0x8(%rax),%rcx
   18e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e5d:	48 8b 00             	mov    (%rax),%rax
   18e60:	48 89 ce             	mov    %rcx,%rsi
   18e63:	48 89 c7             	mov    %rax,%rdi
   18e66:	e8 6d 18 00 00       	call   1a6d8 <_ZSt8_DestroyIPN2vk15LayerPropertiesES1_EvT_S3_RSaIT0_E>
      }
   18e6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e6f:	48 89 c7             	mov    %rax,%rdi
   18e72:	e8 67 ff ff ff       	call   18dde <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EED1Ev>
   18e77:	90                   	nop
   18e78:	c9                   	leave
   18e79:	c3                   	ret

0000000000018e7a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   18e7a:	55                   	push   %rbp
   18e7b:	48 89 e5             	mov    %rsp,%rbp
   18e7e:	48 83 ec 10          	sub    $0x10,%rsp
   18e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   18e8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e8e:	48 89 c7             	mov    %rax,%rdi
   18e91:	e8 9a 00 00 00       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   18e96:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18e9a:	0f 92 c0             	setb   %al
   18e9d:	84 c0                	test   %al,%al
   18e9f:	74 24                	je     18ec5 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   18ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ea5:	48 89 c7             	mov    %rax,%rdi
   18ea8:	e8 83 00 00 00       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   18ead:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18eb1:	48 29 c2             	sub    %rax,%rdx
   18eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18eb8:	48 89 d6             	mov    %rdx,%rsi
   18ebb:	48 89 c7             	mov    %rax,%rdi
   18ebe:	e8 07 19 00 00       	call   1a7ca <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm>
      }
   18ec3:	eb 43                	jmp    18f08 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm+0x8e>
	else if (__new_size < size())
   18ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ec9:	48 89 c7             	mov    %rax,%rdi
   18ecc:	e8 5f 00 00 00       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   18ed1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   18ed5:	0f 92 c0             	setb   %al
   18ed8:	84 c0                	test   %al,%al
   18eda:	74 2c                	je     18f08 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm+0x8e>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   18edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ee0:	48 8b 08             	mov    (%rax),%rcx
   18ee3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18ee7:	48 89 d0             	mov    %rdx,%rax
   18eea:	48 c1 e0 06          	shl    $0x6,%rax
   18eee:	48 01 d0             	add    %rdx,%rax
   18ef1:	48 c1 e0 03          	shl    $0x3,%rax
   18ef5:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   18ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18efd:	48 89 d6             	mov    %rdx,%rsi
   18f00:	48 89 c7             	mov    %rax,%rdi
   18f03:	e8 02 1b 00 00       	call   1aa0a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE15_M_erase_at_endEPS1_>
      }
   18f08:	90                   	nop
   18f09:	c9                   	leave
   18f0a:	c3                   	ret
   18f0b:	90                   	nop

0000000000018f0c <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   18f0c:	55                   	push   %rbp
   18f0d:	48 89 e5             	mov    %rsp,%rbp
   18f10:	48 83 ec 10          	sub    $0x10,%rsp
   18f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   18f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f1c:	48 8b 10             	mov    (%rax),%rdx
   18f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f23:	48 89 d6             	mov    %rdx,%rsi
   18f26:	48 89 c7             	mov    %rax,%rdi
   18f29:	e8 4e 1b 00 00       	call   1aa7c <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   18f2e:	c9                   	leave
   18f2f:	c3                   	ret

0000000000018f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   18f30:	55                   	push   %rbp
   18f31:	48 89 e5             	mov    %rsp,%rbp
   18f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   18f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f3c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   18f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f44:	48 8b 00             	mov    (%rax),%rax
   18f47:	48 29 c2             	sub    %rax,%rdx
   18f4a:	48 c1 fa 03          	sar    $0x3,%rdx
   18f4e:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   18f55:	fc c0 0f 
   18f58:	48 0f af c2          	imul   %rdx,%rax
   18f5c:	5d                   	pop    %rbp
   18f5d:	c3                   	ret

0000000000018f5e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   18f5e:	55                   	push   %rbp
   18f5f:	48 89 e5             	mov    %rsp,%rbp
   18f62:	48 83 ec 10          	sub    $0x10,%rsp
   18f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   18f6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f6e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   18f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f76:	48 8b 00             	mov    (%rax),%rax
   18f79:	48 29 c2             	sub    %rax,%rdx
   18f7c:	48 89 d0             	mov    %rdx,%rax
   18f7f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   18f83:	48 89 c2             	mov    %rax,%rdx
   18f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f8a:	48 8b 08             	mov    (%rax),%rcx
   18f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18f91:	48 89 ce             	mov    %rcx,%rsi
   18f94:	48 89 c7             	mov    %rax,%rdi
   18f97:	e8 00 1b 00 00       	call   1aa9c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
   18f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fa0:	48 89 c7             	mov    %rax,%rdi
   18fa3:	e8 b0 ec ff ff       	call   17c58 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
   18fa8:	90                   	nop
   18fa9:	c9                   	leave
   18faa:	c3                   	ret
   18fab:	90                   	nop

0000000000018fac <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18fac:	55                   	push   %rbp
   18fad:	48 89 e5             	mov    %rsp,%rbp
   18fb0:	48 83 ec 20          	sub    $0x20,%rsp
   18fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18fb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18fbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fc4:	48 89 c7             	mov    %rax,%rdi
   18fc7:	e8 06 1b 00 00       	call   1aad2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
   18fcc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18fd0:	0f 92 c0             	setb   %al
   18fd3:	0f b6 c0             	movzbl %al,%eax
   18fd6:	48 85 c0             	test   %rax,%rax
   18fd9:	0f 95 c0             	setne  %al
   18fdc:	84 c0                	test   %al,%al
   18fde:	74 1a                	je     18ffa <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18fe0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   18fe7:	ff ff 1f 
   18fea:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18fee:	73 05                	jae    18ff5 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   18ff0:	e8 8b c1 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   18ff5:	e8 86 c0 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18ffa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18ffe:	48 c1 e0 03          	shl    $0x3,%rax
   19002:	48 89 c7             	mov    %rax,%rdi
   19005:	e8 16 c2 fe ff       	call   5220 <_Znwm@plt>
   1900a:	90                   	nop
      }
   1900b:	c9                   	leave
   1900c:	c3                   	ret

000000000001900d <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1900d:	55                   	push   %rbp
   1900e:	48 89 e5             	mov    %rsp,%rbp
   19011:	48 83 ec 30          	sub    $0x30,%rsp
   19015:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19019:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1901d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   19021:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   19025:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   19029:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1902d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19031:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19035:	48 89 ce             	mov    %rcx,%rsi
   19038:	48 89 c7             	mov    %rax,%rdi
   1903b:	e8 a6 1a 00 00       	call   1aae6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   19040:	c9                   	leave
   19041:	c3                   	ret

0000000000019042 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   19042:	55                   	push   %rbp
   19043:	48 89 e5             	mov    %rsp,%rbp
   19046:	48 83 ec 10          	sub    $0x10,%rsp
   1904a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1904e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   19052:	e8 47 d1 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   19057:	84 c0                	test   %al,%al
   19059:	74 15                	je     19070 <_ZSt8_DestroyIPPKcEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   1905b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1905f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19063:	48 89 d6             	mov    %rdx,%rsi
   19066:	48 89 c7             	mov    %rax,%rdi
   19069:	e8 a5 1a 00 00       	call   1ab13 <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_>
   1906e:	eb 13                	jmp    19083 <_ZSt8_DestroyIPPKcEvT_S3_+0x41>
	__destroy(__first, __last);
   19070:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19078:	48 89 d6             	mov    %rdx,%rsi
   1907b:	48 89 c7             	mov    %rax,%rdi
   1907e:	e8 c9 1a 00 00       	call   1ab4c <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   19083:	c9                   	leave
   19084:	c3                   	ret
   19085:	90                   	nop

0000000000019086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   19086:	55                   	push   %rbp
   19087:	48 89 e5             	mov    %rsp,%rbp
   1908a:	48 83 ec 10          	sub    $0x10,%rsp
   1908e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   19092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19096:	48 89 c7             	mov    %rax,%rdi
   19099:	e8 18 ee ff ff       	call   17eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1909e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   190a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190a5:	48 8b 48 08          	mov    0x8(%rax),%rcx
   190a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190ad:	48 8b 00             	mov    (%rax),%rax
   190b0:	48 89 ce             	mov    %rcx,%rsi
   190b3:	48 89 c7             	mov    %rax,%rdi
   190b6:	e8 a0 1a 00 00       	call   1ab5b <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   190bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190bf:	48 89 c7             	mov    %rax,%rdi
   190c2:	e8 97 fe ff ff       	call   18f5e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   190c7:	90                   	nop
   190c8:	c9                   	leave
   190c9:	c3                   	ret

00000000000190ca <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   190ca:	55                   	push   %rbp
   190cb:	48 89 e5             	mov    %rsp,%rbp
   190ce:	48 83 ec 20          	sub    $0x20,%rsp
   190d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   190d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   190da:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   190de:	48 89 d6             	mov    %rdx,%rsi
   190e1:	48 89 c7             	mov    %rax,%rdi
   190e4:	e8 9d 1a 00 00       	call   1ab86 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEC1ERKS4_>
   190e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190ed:	c9                   	leave
   190ee:	c3                   	ret
   190ef:	90                   	nop

00000000000190f0 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   190f0:	55                   	push   %rbp
   190f1:	48 89 e5             	mov    %rsp,%rbp
   190f4:	48 83 ec 20          	sub    $0x20,%rsp
   190f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   190fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19100:	48 8d 50 08          	lea    0x8(%rax),%rdx
   19104:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19108:	48 89 d6             	mov    %rdx,%rsi
   1910b:	48 89 c7             	mov    %rax,%rdi
   1910e:	e8 73 1a 00 00       	call   1ab86 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEC1ERKS4_>
   19113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19117:	c9                   	leave
   19118:	c3                   	ret
   19119:	90                   	nop

000000000001911a <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1911a:	55                   	push   %rbp
   1911b:	48 89 e5             	mov    %rsp,%rbp
   1911e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   19122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19126:	48 8b 00             	mov    (%rax),%rax
   19129:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1912d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19131:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   19134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   19138:	5d                   	pop    %rbp
   19139:	c3                   	ret

000000000001913a <_ZN2vk8OptionalIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EDn>:
    Optional( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
   1913a:	55                   	push   %rbp
   1913b:	48 89 e5             	mov    %rsp,%rbp
   1913e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      m_ptr = nullptr;
   19146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1914a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   19151:	90                   	nop
   19152:	5d                   	pop    %rbp
   19153:	c3                   	ret

0000000000019154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   19154:	55                   	push   %rbp
   19155:	48 89 e5             	mov    %rsp,%rbp
   19158:	48 83 ec 10          	sub    $0x10,%rsp
   1915c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   19160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19164:	48 89 c7             	mov    %rax,%rdi
   19167:	e8 38 1a 00 00       	call   1aba4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   1916c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19170:	48 89 c7             	mov    %rax,%rdi
   19173:	e8 48 1a 00 00       	call   1abc0 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   19178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1917c:	48 83 c0 08          	add    $0x8,%rax
   19180:	48 89 c7             	mov    %rax,%rdi
   19183:	e8 2a e9 ff ff       	call   17ab2 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   19188:	90                   	nop
   19189:	c9                   	leave
   1918a:	c3                   	ret
   1918b:	90                   	nop

000000000001918c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
   1918c:	55                   	push   %rbp
   1918d:	48 89 e5             	mov    %rsp,%rbp
   19190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19194:	90                   	nop
   19195:	5d                   	pop    %rbp
   19196:	c3                   	ret
   19197:	90                   	nop

0000000000019198 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   19198:	55                   	push   %rbp
   19199:	48 89 e5             	mov    %rsp,%rbp
   1919c:	48 83 ec 10          	sub    $0x10,%rsp
   191a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   191a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191a8:	48 89 c7             	mov    %rax,%rdi
   191ab:	e8 82 1a 00 00       	call   1ac32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   191b0:	48 89 c2             	mov    %rax,%rdx
   191b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191b7:	48 89 d6             	mov    %rdx,%rsi
   191ba:	48 89 c7             	mov    %rax,%rdi
   191bd:	e8 0a 1a 00 00       	call   1abcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   191c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191c6:	48 89 c7             	mov    %rax,%rdi
   191c9:	e8 5a f0 ff ff       	call   18228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   191ce:	90                   	nop
   191cf:	c9                   	leave
   191d0:	c3                   	ret
   191d1:	90                   	nop

00000000000191d2 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   191d2:	55                   	push   %rbp
   191d3:	48 89 e5             	mov    %rsp,%rbp
   191d6:	48 83 ec 20          	sub    $0x20,%rsp
   191da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   191de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   191e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   191e6:	48 89 d6             	mov    %rdx,%rsi
   191e9:	48 89 c7             	mov    %rax,%rdi
   191ec:	e8 5b 1a 00 00       	call   1ac4c <_ZN9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS3_>
   191f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   191f5:	c9                   	leave
   191f6:	c3                   	ret
   191f7:	90                   	nop

00000000000191f8 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   191f8:	55                   	push   %rbp
   191f9:	48 89 e5             	mov    %rsp,%rbp
   191fc:	48 83 ec 20          	sub    $0x20,%rsp
   19200:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   19204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19208:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1920c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19210:	48 89 d6             	mov    %rdx,%rsi
   19213:	48 89 c7             	mov    %rax,%rdi
   19216:	e8 31 1a 00 00       	call   1ac4c <_ZN9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1921b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1921f:	c9                   	leave
   19220:	c3                   	ret
   19221:	90                   	nop

0000000000019222 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   19222:	55                   	push   %rbp
   19223:	48 89 e5             	mov    %rsp,%rbp
   19226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1922a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1922e:	48 8b 00             	mov    (%rax),%rax
   19231:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   19238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1923c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1923f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   19243:	5d                   	pop    %rbp
   19244:	c3                   	ret
   19245:	90                   	nop

0000000000019246 <_ZNK2vk14ArrayWrapper1DIcLm256EEcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIcLi0EEEv>:
    operator std::string() const
   19246:	55                   	push   %rbp
   19247:	48 89 e5             	mov    %rsp,%rbp
   1924a:	53                   	push   %rbx
   1924b:	48 83 ec 28          	sub    $0x28,%rsp
   1924f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19253:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      return std::string( this->data() );
   19257:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1925b:	48 89 c7             	mov    %rax,%rdi
   1925e:	e8 4d c1 fe ff       	call   53b0 <_ZNSaIcEC1Ev@plt>
   19263:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19267:	48 89 c7             	mov    %rax,%rdi
   1926a:	e8 fb 19 00 00       	call   1ac6a <_ZNKSt5arrayIcLm256EE4dataEv>
   1926f:	48 89 c1             	mov    %rax,%rcx
   19272:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   19276:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1927a:	48 89 ce             	mov    %rcx,%rsi
   1927d:	48 89 c7             	mov    %rax,%rdi
   19280:	e8 ff 11 ff ff       	call   a484 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   19285:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   19289:	48 89 c7             	mov    %rax,%rdi
   1928c:	e8 df bf fe ff       	call   5270 <_ZNSaIcED1Ev@plt>
   19291:	eb 1a                	jmp    192ad <_ZNK2vk14ArrayWrapper1DIcLm256EEcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEIcLi0EEEv+0x67>
   19293:	48 89 c3             	mov    %rax,%rbx
   19296:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1929a:	48 89 c7             	mov    %rax,%rdi
   1929d:	e8 ce bf fe ff       	call   5270 <_ZNSaIcED1Ev@plt>
   192a2:	48 89 d8             	mov    %rbx,%rax
   192a5:	48 89 c7             	mov    %rax,%rdi
   192a8:	e8 f3 c0 fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   192ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   192b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   192b5:	c9                   	leave
   192b6:	c3                   	ret
   192b7:	90                   	nop

00000000000192b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   192b8:	55                   	push   %rbp
   192b9:	48 89 e5             	mov    %rsp,%rbp
   192bc:	53                   	push   %rbx
   192bd:	48 83 ec 48          	sub    $0x48,%rsp
   192c1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   192c5:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   192c9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   192cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   192d1:	48 89 d6             	mov    %rdx,%rsi
   192d4:	48 89 c7             	mov    %rax,%rdi
   192d7:	e8 a8 19 00 00       	call   1ac84 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   192dc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   192e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   192e4:	48 89 c7             	mov    %rax,%rdi
   192e7:	e8 be 19 00 00       	call   1acaa <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   192ec:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   192f0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   192f4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   192f8:	48 89 d6             	mov    %rdx,%rsi
   192fb:	48 89 c7             	mov    %rax,%rdi
   192fe:	e8 c1 19 00 00       	call   1acc4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   19303:	84 c0                	test   %al,%al
   19305:	75 32                	jne    19339 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   19307:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1930b:	48 89 c7             	mov    %rax,%rdi
   1930e:	e8 d3 19 00 00       	call   1ace6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   19313:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   19317:	48 89 c7             	mov    %rax,%rdi
   1931a:	e8 e3 19 00 00       	call   1ad02 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   1931f:	48 89 c2             	mov    %rax,%rdx
   19322:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   19326:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   1932a:	48 89 ce             	mov    %rcx,%rsi
   1932d:	48 89 c7             	mov    %rax,%rdi
   19330:	e8 11 1a 00 00       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   19335:	84 c0                	test   %al,%al
   19337:	74 07                	je     19340 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   19339:	b8 01 00 00 00       	mov    $0x1,%eax
   1933e:	eb 05                	jmp    19345 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   19340:	b8 00 00 00 00       	mov    $0x0,%eax
   19345:	84 c0                	test   %al,%al
   19347:	74 5d                	je     193a6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   19349:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   1934d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19351:	48 89 c7             	mov    %rax,%rdi
   19354:	e8 4c 19 ff ff       	call   aca5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   19359:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1935c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19360:	48 89 d6             	mov    %rdx,%rsi
   19363:	48 89 c7             	mov    %rax,%rdi
   19366:	e8 1c 1a 00 00       	call   1ad87 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   1936b:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   1936f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   19373:	48 89 d6             	mov    %rdx,%rsi
   19376:	48 89 c7             	mov    %rax,%rdi
   19379:	e8 3e 1a 00 00       	call   1adbc <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   1937e:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   19382:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   19386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1938a:	49 89 c8             	mov    %rcx,%r8
   1938d:	48 89 d1             	mov    %rdx,%rcx
   19390:	48 8d 15 ff 25 01 00 	lea    0x125ff(%rip),%rdx        # 2b996 <_ZSt19piecewise_construct>
   19397:	48 89 c6             	mov    %rax,%rsi
   1939a:	48 89 df             	mov    %rbx,%rdi
   1939d:	e8 38 1a 00 00       	call   1adda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   193a2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   193a6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   193aa:	48 89 c7             	mov    %rax,%rdi
   193ad:	e8 50 19 00 00       	call   1ad02 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   193b2:	48 83 c0 20          	add    $0x20,%rax
      }
   193b6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   193ba:	c9                   	leave
   193bb:	c3                   	ret

00000000000193bc <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   193bc:	55                   	push   %rbp
   193bd:	48 89 e5             	mov    %rsp,%rbp
   193c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   193c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193c8:	48 8b 00             	mov    (%rax),%rax
   193cb:	48 8d 50 08          	lea    0x8(%rax),%rdx
   193cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193d3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   193d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   193da:	5d                   	pop    %rbp
   193db:	c3                   	ret

00000000000193dc <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   193dc:	55                   	push   %rbp
   193dd:	48 89 e5             	mov    %rsp,%rbp
   193e0:	48 83 ec 20          	sub    $0x20,%rsp
   193e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   193e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   193ec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   193f0:	48 89 d6             	mov    %rdx,%rsi
   193f3:	48 89 c7             	mov    %rax,%rdi
   193f6:	e8 db 1a 00 00       	call   1aed6 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS3_>
   193fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   193ff:	c9                   	leave
   19400:	c3                   	ret
   19401:	90                   	nop

0000000000019402 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   19402:	55                   	push   %rbp
   19403:	48 89 e5             	mov    %rsp,%rbp
   19406:	48 83 ec 20          	sub    $0x20,%rsp
   1940a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1940e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19412:	48 8d 50 08          	lea    0x8(%rax),%rdx
   19416:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1941a:	48 89 d6             	mov    %rdx,%rsi
   1941d:	48 89 c7             	mov    %rax,%rdi
   19420:	e8 b1 1a 00 00       	call   1aed6 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS3_>
   19425:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19429:	c9                   	leave
   1942a:	c3                   	ret
   1942b:	90                   	nop

000000000001942c <_ZN9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1942c:	55                   	push   %rbp
   1942d:	48 89 e5             	mov    %rsp,%rbp
   19430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   19434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19438:	48 8b 00             	mov    (%rax),%rax
   1943b:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
   19442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19446:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   19449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1944d:	5d                   	pop    %rbp
   1944e:	c3                   	ret
   1944f:	90                   	nop

0000000000019450 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   19450:	55                   	push   %rbp
   19451:	48 89 e5             	mov    %rsp,%rbp
   19454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19458:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1945c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19460:	48 8b 08             	mov    (%rax),%rcx
   19463:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19467:	48 89 d0             	mov    %rdx,%rax
   1946a:	48 01 c0             	add    %rax,%rax
   1946d:	48 01 d0             	add    %rdx,%rax
   19470:	48 c1 e0 03          	shl    $0x3,%rax
   19474:	48 01 c8             	add    %rcx,%rax
      }
   19477:	5d                   	pop    %rbp
   19478:	c3                   	ret
   19479:	90                   	nop

000000000001947a <_ZNSt8optionalIjEC1IjLb1EEEOT_>:
	optional(_Up&& __t)
   1947a:	55                   	push   %rbp
   1947b:	48 89 e5             	mov    %rsp,%rbp
   1947e:	53                   	push   %rbx
   1947f:	48 83 ec 18          	sub    $0x18,%rsp
   19483:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19487:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   1948b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1948f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19493:	48 89 c7             	mov    %rax,%rdi
   19496:	e8 f3 15 00 00       	call   1aa8e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   1949b:	48 89 c6             	mov    %rax,%rsi
   1949e:	48 89 df             	mov    %rbx,%rdi
   194a1:	e8 74 1a 00 00       	call   1af1a <_ZNSt14_Optional_baseIjLb1ELb1EEC1IJjELb0EEESt10in_place_tDpOT_>
   194a6:	90                   	nop
   194a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   194ab:	c9                   	leave
   194ac:	c3                   	ret
   194ad:	90                   	nop

00000000000194ae <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   194ae:	55                   	push   %rbp
   194af:	48 89 e5             	mov    %rsp,%rbp
   194b2:	48 83 ec 10          	sub    $0x10,%rsp
   194b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   194ba:	e8 df cc fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   194bf:	84 c0                	test   %al,%al
   194c1:	74 1a                	je     194dd <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
   194c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194c7:	48 89 c7             	mov    %rax,%rdi
   194ca:	e8 5f ef ff ff       	call   1842e <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
   194cf:	83 f0 01             	xor    $0x1,%eax
   194d2:	84 c0                	test   %al,%al
   194d4:	74 07                	je     194dd <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
   194d6:	b8 01 00 00 00       	mov    $0x1,%eax
   194db:	eb 05                	jmp    194e2 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
   194dd:	b8 00 00 00 00       	mov    $0x0,%eax
   194e2:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   194e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   194e8:	48 89 c7             	mov    %rax,%rdi
   194eb:	e8 5e 1a 00 00       	call   1af4e <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
   194f0:	c9                   	leave
   194f1:	c3                   	ret

00000000000194f2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   194f2:	55                   	push   %rbp
   194f3:	48 89 e5             	mov    %rsp,%rbp
   194f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   194fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   194fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19502:	5d                   	pop    %rbp
   19503:	c3                   	ret

0000000000019504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>:
    Optional( std::nullptr_t ) VULKAN_HPP_NOEXCEPT
   19504:	55                   	push   %rbp
   19505:	48 89 e5             	mov    %rsp,%rbp
   19508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1950c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      m_ptr = nullptr;
   19510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19514:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1951b:	90                   	nop
   1951c:	5d                   	pop    %rbp
   1951d:	c3                   	ret

000000000001951e <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1Ej>:
    VULKAN_HPP_CONSTEXPR explicit Flags( MaskType flags ) VULKAN_HPP_NOEXCEPT : m_mask( flags ) {}
   1951e:	55                   	push   %rbp
   1951f:	48 89 e5             	mov    %rsp,%rbp
   19522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19526:	89 75 f4             	mov    %esi,-0xc(%rbp)
   19529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1952d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   19530:	89 10                	mov    %edx,(%rax)
   19532:	90                   	nop
   19533:	5d                   	pop    %rbp
   19534:	c3                   	ret

0000000000019535 <_ZSt7forwardIN2vk14PhysicalDeviceEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19535:	55                   	push   %rbp
   19536:	48 89 e5             	mov    %rsp,%rbp
   19539:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1953d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19541:	5d                   	pop    %rbp
   19542:	c3                   	ret

0000000000019543 <_ZSt8exchangeIN2vk14PhysicalDeviceES1_ET_RS2_OT0_>:

  /// Assign @p __new_val to @p __obj and return its previous value.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    exchange(_Tp& __obj, _Up&& __new_val)
   19543:	55                   	push   %rbp
   19544:	48 89 e5             	mov    %rsp,%rbp
   19547:	48 83 ec 10          	sub    $0x10,%rsp
   1954b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1954f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
		    is_nothrow_assignable<_Tp&, _Up>>::value)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   19553:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19557:	48 89 c7             	mov    %rax,%rdi
   1955a:	e8 d6 ff ff ff       	call   19535 <_ZSt7forwardIN2vk14PhysicalDeviceEEOT_RNSt16remove_referenceIS2_E4typeE>
   1955f:	48 89 c2             	mov    %rax,%rdx
   19562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19566:	48 89 d6             	mov    %rdx,%rsi
   19569:	48 89 c7             	mov    %rax,%rdi
   1956c:	e8 eb 19 00 00       	call   1af5c <_ZSt10__exchangeIN2vk14PhysicalDeviceES1_ET_RS2_OT0_>
   19571:	c9                   	leave
   19572:	c3                   	ret

0000000000019573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19573:	55                   	push   %rbp
   19574:	48 89 e5             	mov    %rsp,%rbp
   19577:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1957b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1957f:	5d                   	pop    %rbp
   19580:	c3                   	ret

0000000000019581 <_ZSt8exchangeIPKN2vk4raii18InstanceDispatcherEDnET_RS5_OT0_>:
    exchange(_Tp& __obj, _Up&& __new_val)
   19581:	55                   	push   %rbp
   19582:	48 89 e5             	mov    %rsp,%rbp
   19585:	48 83 ec 10          	sub    $0x10,%rsp
   19589:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1958d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   19591:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19595:	48 89 c7             	mov    %rax,%rdi
   19598:	e8 d6 ff ff ff       	call   19573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>
   1959d:	48 89 c2             	mov    %rax,%rdx
   195a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195a4:	48 89 d6             	mov    %rdx,%rsi
   195a7:	48 89 c7             	mov    %rax,%rdi
   195aa:	e8 ec 19 00 00       	call   1af9b <_ZSt10__exchangeIPKN2vk4raii18InstanceDispatcherEDnET_RS5_OT0_>
   195af:	c9                   	leave
   195b0:	c3                   	ret

00000000000195b1 <_ZSt4moveIRN2vk14PhysicalDeviceEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   195b1:	55                   	push   %rbp
   195b2:	48 89 e5             	mov    %rsp,%rbp
   195b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   195b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195bd:	5d                   	pop    %rbp
   195be:	c3                   	ret

00000000000195bf <_ZSt4moveIRPKN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   195bf:	55                   	push   %rbp
   195c0:	48 89 e5             	mov    %rsp,%rbp
   195c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   195c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195cb:	5d                   	pop    %rbp
   195cc:	c3                   	ret
   195cd:	90                   	nop

00000000000195ce <_ZNSaIN2vk4raii14PhysicalDeviceEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   195ce:	55                   	push   %rbp
   195cf:	48 89 e5             	mov    %rsp,%rbp
   195d2:	48 83 ec 10          	sub    $0x10,%rsp
   195d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   195da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195de:	48 89 c7             	mov    %rax,%rdi
   195e1:	e8 f6 19 00 00       	call   1afdc <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEEC1Ev>
   195e6:	90                   	nop
   195e7:	c9                   	leave
   195e8:	c3                   	ret
   195e9:	90                   	nop

00000000000195ea <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   195ea:	55                   	push   %rbp
   195eb:	48 89 e5             	mov    %rsp,%rbp
   195ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   195f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   195f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   195fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19601:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   19608:	00 
   19609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1960d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   19614:	00 
	{ }
   19615:	90                   	nop
   19616:	5d                   	pop    %rbp
   19617:	c3                   	ret

0000000000019618 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
   19618:	55                   	push   %rbp
   19619:	48 89 e5             	mov    %rsp,%rbp
   1961c:	48 83 ec 20          	sub    $0x20,%rsp
   19620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19624:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19628:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1962c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19631:	74 17                	je     1964a <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   19633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19637:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1963b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1963f:	48 89 ce             	mov    %rcx,%rsi
   19642:	48 89 c7             	mov    %rax,%rdi
   19645:	e8 9d 19 00 00       	call   1afe7 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE10deallocateERS3_PS2_m>
      }
   1964a:	90                   	nop
   1964b:	c9                   	leave
   1964c:	c3                   	ret
   1964d:	90                   	nop

000000000001964e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1964e:	55                   	push   %rbp
   1964f:	48 89 e5             	mov    %rsp,%rbp
   19652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1965a:	5d                   	pop    %rbp
   1965b:	c3                   	ret

000000000001965c <_ZSt8_DestroyIPN2vk4raii14PhysicalDeviceES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1965c:	55                   	push   %rbp
   1965d:	48 89 e5             	mov    %rsp,%rbp
   19660:	48 83 ec 20          	sub    $0x20,%rsp
   19664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1966c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   19670:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19678:	48 89 d6             	mov    %rdx,%rsi
   1967b:	48 89 c7             	mov    %rax,%rdi
   1967e:	e8 c2 19 00 00       	call   1b045 <_ZSt8_DestroyIPN2vk4raii14PhysicalDeviceEEvT_S4_>
    }
   19683:	90                   	nop
   19684:	c9                   	leave
   19685:	c3                   	ret

0000000000019686 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   19686:	55                   	push   %rbp
   19687:	48 89 e5             	mov    %rsp,%rbp
   1968a:	48 83 ec 20          	sub    $0x20,%rsp
   1968e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19692:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19696:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1969a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1969f:	74 17                	je     196b8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   196a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   196a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   196ad:	48 89 ce             	mov    %rcx,%rsi
   196b0:	48 89 c7             	mov    %rax,%rdi
   196b3:	e8 d0 19 00 00       	call   1b088 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
   196b8:	90                   	nop
   196b9:	c9                   	leave
   196ba:	c3                   	ret
   196bb:	90                   	nop

00000000000196bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   196bc:	55                   	push   %rbp
   196bd:	48 89 e5             	mov    %rsp,%rbp
   196c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   196c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196c8:	5d                   	pop    %rbp
   196c9:	c3                   	ret

00000000000196ca <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   196ca:	55                   	push   %rbp
   196cb:	48 89 e5             	mov    %rsp,%rbp
   196ce:	48 83 ec 20          	sub    $0x20,%rsp
   196d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   196da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   196de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   196e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   196e6:	48 89 d6             	mov    %rdx,%rsi
   196e9:	48 89 c7             	mov    %rax,%rdi
   196ec:	e8 f5 19 00 00       	call   1b0e6 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
   196f1:	90                   	nop
   196f2:	c9                   	leave
   196f3:	c3                   	ret

00000000000196f4 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   196f4:	55                   	push   %rbp
   196f5:	48 89 e5             	mov    %rsp,%rbp
   196f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   196fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   19700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19704:	48 8b 10             	mov    (%rax),%rdx
   19707:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1970b:	48 8b 00             	mov    (%rax),%rax
   1970e:	48 39 c2             	cmp    %rax,%rdx
   19711:	73 06                	jae    19719 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   19713:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19717:	eb 04                	jmp    1971d <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   19719:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   1971d:	5d                   	pop    %rbp
   1971e:	c3                   	ret
   1971f:	90                   	nop

0000000000019720 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   19720:	55                   	push   %rbp
   19721:	48 89 e5             	mov    %rsp,%rbp
   19724:	53                   	push   %rbx
   19725:	48 83 ec 38          	sub    $0x38,%rsp
   19729:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1972d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19731:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   19735:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19739:	48 89 c7             	mov    %rax,%rdi
   1973c:	e8 e9 19 00 00       	call   1b12a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE8max_sizeEv>
   19741:	48 89 c3             	mov    %rax,%rbx
   19744:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19748:	48 89 c7             	mov    %rax,%rdi
   1974b:	e8 46 f0 ff ff       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   19750:	48 29 c3             	sub    %rax,%rbx
   19753:	48 89 da             	mov    %rbx,%rdx
   19756:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1975a:	48 39 c2             	cmp    %rax,%rdx
   1975d:	0f 92 c0             	setb   %al
   19760:	84 c0                	test   %al,%al
   19762:	74 0c                	je     19770 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   19764:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19768:	48 89 c7             	mov    %rax,%rdi
   1976b:	e8 70 b9 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   19770:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19774:	48 89 c7             	mov    %rax,%rdi
   19777:	e8 1a f0 ff ff       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   1977c:	48 89 c3             	mov    %rax,%rbx
   1977f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19783:	48 89 c7             	mov    %rax,%rdi
   19786:	e8 0b f0 ff ff       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   1978b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1978f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   19793:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19797:	48 89 d6             	mov    %rdx,%rsi
   1979a:	48 89 c7             	mov    %rax,%rdi
   1979d:	e8 52 ff ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   197a2:	48 8b 00             	mov    (%rax),%rax
   197a5:	48 01 d8             	add    %rbx,%rax
   197a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   197ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   197b0:	48 89 c7             	mov    %rax,%rdi
   197b3:	e8 de ef ff ff       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   197b8:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   197bc:	72 12                	jb     197d0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   197be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   197c2:	48 89 c7             	mov    %rax,%rdi
   197c5:	e8 60 19 00 00       	call   1b12a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE8max_sizeEv>
   197ca:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   197ce:	73 0e                	jae    197de <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   197d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   197d4:	48 89 c7             	mov    %rax,%rdi
   197d7:	e8 4e 19 00 00       	call   1b12a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE8max_sizeEv>
   197dc:	eb 04                	jmp    197e2 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   197de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   197e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   197e6:	c9                   	leave
   197e7:	c3                   	ret

00000000000197e8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   197e8:	55                   	push   %rbp
   197e9:	48 89 e5             	mov    %rsp,%rbp
   197ec:	53                   	push   %rbx
   197ed:	48 83 ec 38          	sub    $0x38,%rsp
   197f1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   197f5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   197f9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   197fe:	0f 84 e7 01 00 00    	je     199eb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   19804:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19808:	48 89 c7             	mov    %rax,%rdi
   1980b:	e8 86 ef ff ff       	call   18796 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
   19810:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   19814:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19818:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1981c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19820:	48 8b 40 08          	mov    0x8(%rax),%rax
   19824:	48 29 c2             	sub    %rax,%rdx
   19827:	48 89 d0             	mov    %rdx,%rax
   1982a:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1982e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   19832:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19836:	48 89 c7             	mov    %rax,%rdi
   19839:	e8 ec 18 00 00       	call   1b12a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE8max_sizeEv>
   1983e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   19842:	72 16                	jb     1985a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0x72>
   19844:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19848:	48 89 c7             	mov    %rax,%rdi
   1984b:	e8 da 18 00 00       	call   1b12a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE8max_sizeEv>
   19850:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   19854:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19858:	73 07                	jae    19861 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0x79>
   1985a:	b8 01 00 00 00       	mov    $0x1,%eax
   1985f:	eb 05                	jmp    19866 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0x7e>
   19861:	b8 00 00 00 00       	mov    $0x0,%eax
   19866:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   19868:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1986c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   19870:	72 33                	jb     198a5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   19872:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19876:	48 89 c7             	mov    %rax,%rdi
   19879:	e8 3e fe ff ff       	call   196bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1987e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   19881:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19885:	48 8b 40 08          	mov    0x8(%rax),%rax
   19889:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1988d:	48 89 ce             	mov    %rcx,%rsi
   19890:	48 89 c7             	mov    %rax,%rdi
   19893:	e8 b4 18 00 00       	call   1b14c <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   19898:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1989c:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   198a0:	e9 46 01 00 00       	jmp    199eb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   198a5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   198a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198ad:	48 8d 15 0b 64 01 00 	lea    0x1640b(%rip),%rdx        # 2fcbf <_ZNSt8__detailL19__atomic_spin_countE+0x390b>
   198b4:	48 89 ce             	mov    %rcx,%rsi
   198b7:	48 89 c7             	mov    %rax,%rdi
   198ba:	e8 61 fe ff ff       	call   19720 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE12_M_check_lenEmPKc>
   198bf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   198c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198c7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   198cb:	48 89 d6             	mov    %rdx,%rsi
   198ce:	48 89 c7             	mov    %rax,%rdi
   198d1:	e8 a0 18 00 00       	call   1b176 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
   198d6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   198da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198de:	48 89 c7             	mov    %rax,%rdi
   198e1:	e8 d6 fd ff ff       	call   196bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
   198e6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   198e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   198ed:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   198f4:	00 
   198f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   198f9:	48 01 c1             	add    %rax,%rcx
   198fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19900:	48 89 c6             	mov    %rax,%rsi
   19903:	48 89 cf             	mov    %rcx,%rdi
   19906:	e8 41 18 00 00       	call   1b14c <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1990b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1990f:	48 89 c7             	mov    %rax,%rdi
   19912:	e8 a5 fd ff ff       	call   196bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19917:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1991a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1991e:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19922:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19926:	48 8b 00             	mov    (%rax),%rax
   19929:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1992d:	48 89 c7             	mov    %rax,%rdi
   19930:	e8 74 18 00 00       	call   1b1a9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   19935:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   19939:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1993d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   19941:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19945:	48 8b 12             	mov    (%rdx),%rdx
   19948:	48 29 d1             	sub    %rdx,%rcx
   1994b:	48 c1 f9 03          	sar    $0x3,%rcx
   1994f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   19952:	48 89 d6             	mov    %rdx,%rsi
   19955:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19959:	48 8b 0a             	mov    (%rdx),%rcx
   1995c:	48 89 f2             	mov    %rsi,%rdx
   1995f:	48 89 ce             	mov    %rcx,%rsi
   19962:	48 89 c7             	mov    %rax,%rdi
   19965:	e8 1c fd ff ff       	call   19686 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1996a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1996e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   19972:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   19975:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19979:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1997d:	48 01 d0             	add    %rdx,%rax
   19980:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   19987:	00 
   19988:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1998c:	48 01 c2             	add    %rax,%rdx
   1998f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19993:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   19997:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1999b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   199a2:	00 
   199a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   199a7:	48 01 c2             	add    %rax,%rdx
   199aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199ae:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   199b2:	eb 37                	jmp    199eb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   199b4:	48 89 c7             	mov    %rax,%rdi
   199b7:	e8 e4 b6 fe ff       	call   50a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   199bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   199c4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   199c8:	48 89 ce             	mov    %rcx,%rsi
   199cb:	48 89 c7             	mov    %rax,%rdi
   199ce:	e8 b3 fc ff ff       	call   19686 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   199d3:	e8 38 b9 fe ff       	call   5310 <__cxa_rethrow@plt>
		  __catch(...)
   199d8:	48 89 c3             	mov    %rax,%rbx
   199db:	e8 90 b9 fe ff       	call   5370 <__cxa_end_catch@plt>
   199e0:	48 89 d8             	mov    %rbx,%rax
   199e3:	48 89 c7             	mov    %rax,%rdi
   199e6:	e8 b5 b9 fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   199eb:	90                   	nop
   199ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   199f0:	c9                   	leave
   199f1:	c3                   	ret

00000000000199f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   199f2:	55                   	push   %rbp
   199f3:	48 89 e5             	mov    %rsp,%rbp
   199f6:	48 83 ec 20          	sub    $0x20,%rsp
   199fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   199fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   19a02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a06:	48 8b 40 08          	mov    0x8(%rax),%rax
   19a0a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   19a0e:	48 c1 f8 03          	sar    $0x3,%rax
   19a12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19a16:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   19a1b:	74 32                	je     19a4f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   19a1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a21:	48 89 c7             	mov    %rax,%rdi
   19a24:	e8 93 fc ff ff       	call   196bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
   19a29:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   19a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a30:	48 8b 48 08          	mov    0x8(%rax),%rcx
   19a34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a38:	48 89 ce             	mov    %rcx,%rsi
   19a3b:	48 89 c7             	mov    %rax,%rdi
   19a3e:	e8 87 fc ff ff       	call   196ca <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   19a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a47:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   19a4b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   19a4f:	90                   	nop
   19a50:	c9                   	leave
   19a51:	c3                   	ret

0000000000019a52 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   19a52:	55                   	push   %rbp
   19a53:	48 89 e5             	mov    %rsp,%rbp
   19a56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19a5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   19a5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19a62:	5d                   	pop    %rbp
   19a63:	c3                   	ret

0000000000019a64 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   19a64:	55                   	push   %rbp
   19a65:	48 89 e5             	mov    %rsp,%rbp
   19a68:	48 83 ec 10          	sub    $0x10,%rsp
   19a6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   19a70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a74:	48 89 c7             	mov    %rax,%rdi
   19a77:	e8 b6 17 00 00       	call   1b232 <_ZNKSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>
   19a7c:	48 89 c7             	mov    %rax,%rdi
   19a7f:	e8 6b 17 00 00       	call   1b1ef <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE11_S_max_sizeERKS3_>
   19a84:	c9                   	leave
   19a85:	c3                   	ret

0000000000019a86 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
   19a86:	55                   	push   %rbp
   19a87:	48 89 e5             	mov    %rsp,%rbp
   19a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_end_of_storage
   19a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a92:	48 8b 50 10          	mov    0x10(%rax),%rdx
			 - this->_M_impl._M_start); }
   19a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a9a:	48 8b 00             	mov    (%rax),%rax
   19a9d:	48 29 c2             	sub    %rax,%rdx
   19aa0:	48 89 d0             	mov    %rdx,%rax
   19aa3:	48 c1 f8 04          	sar    $0x4,%rax
   19aa7:	5d                   	pop    %rbp
   19aa8:	c3                   	ret
   19aa9:	90                   	nop

0000000000019aaa <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   19aaa:	55                   	push   %rbp
   19aab:	48 89 e5             	mov    %rsp,%rbp
   19aae:	48 83 ec 10          	sub    $0x10,%rsp
   19ab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ab6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   19aba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19abf:	74 15                	je     19ad6 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE11_M_allocateEm+0x2c>
   19ac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ac5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19ac9:	48 89 d6             	mov    %rdx,%rsi
   19acc:	48 89 c7             	mov    %rax,%rdi
   19acf:	e8 6c 17 00 00       	call   1b240 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8allocateERS3_m>
   19ad4:	eb 05                	jmp    19adb <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE11_M_allocateEm+0x31>
   19ad6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   19adb:	c9                   	leave
   19adc:	c3                   	ret

0000000000019add <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   19add:	55                   	push   %rbp
   19ade:	48 89 e5             	mov    %rsp,%rbp
   19ae1:	48 83 ec 20          	sub    $0x20,%rsp
   19ae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ae9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19aed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   19af1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   19af5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19af9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19afd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   19b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b05:	48 89 c7             	mov    %rax,%rdi
   19b08:	e8 b9 17 00 00       	call   1b2c6 <_ZSt12__relocate_aIPN2vk4raii14PhysicalDeviceES3_SaIS2_EET0_T_S6_S5_RT1_>
      }
   19b0d:	c9                   	leave
   19b0e:	c3                   	ret
   19b0f:	90                   	nop

0000000000019b10 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   19b10:	55                   	push   %rbp
   19b11:	48 89 e5             	mov    %rsp,%rbp
   19b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19b18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   19b1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   19b20:	48 8b 10             	mov    (%rax),%rdx
   19b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b27:	48 89 10             	mov    %rdx,(%rax)
   19b2a:	90                   	nop
   19b2b:	5d                   	pop    %rbp
   19b2c:	c3                   	ret

0000000000019b2d <_ZSt7forwardIRKN2vk4raii8InstanceEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19b2d:	55                   	push   %rbp
   19b2e:	48 89 e5             	mov    %rsp,%rbp
   19b31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b39:	5d                   	pop    %rbp
   19b3a:	c3                   	ret

0000000000019b3b <_ZSt7forwardIRKP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   19b3b:	55                   	push   %rbp
   19b3c:	48 89 e5             	mov    %rsp,%rbp
   19b3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   19b43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b47:	5d                   	pop    %rbp
   19b48:	c3                   	ret

0000000000019b49 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE9constructIS2_JRKNS1_8InstanceERKP18VkPhysicalDevice_TEEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   19b49:	55                   	push   %rbp
   19b4a:	48 89 e5             	mov    %rsp,%rbp
   19b4d:	53                   	push   %rbx
   19b4e:	48 83 ec 28          	sub    $0x28,%rsp
   19b52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19b56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19b5a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   19b5e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   19b62:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19b66:	48 89 c7             	mov    %rax,%rdi
   19b69:	e8 cd ff ff ff       	call   19b3b <_ZSt7forwardIRKP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS4_E4typeE>
   19b6e:	48 89 c3             	mov    %rax,%rbx
   19b71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19b75:	48 89 c7             	mov    %rax,%rdi
   19b78:	e8 b0 ff ff ff       	call   19b2d <_ZSt7forwardIRKN2vk4raii8InstanceEEOT_RNSt16remove_referenceIS5_E4typeE>
   19b7d:	48 89 c1             	mov    %rax,%rcx
   19b80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b84:	48 89 da             	mov    %rbx,%rdx
   19b87:	48 89 ce             	mov    %rcx,%rsi
   19b8a:	48 89 c7             	mov    %rax,%rdi
   19b8d:	e8 97 17 00 00       	call   1b329 <_ZSt12construct_atIN2vk4raii14PhysicalDeviceEJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSB_DpOSC_>
	}
   19b92:	90                   	nop
   19b93:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19b97:	c9                   	leave
   19b98:	c3                   	ret
   19b99:	90                   	nop

0000000000019b9a <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   19b9a:	55                   	push   %rbp
   19b9b:	48 89 e5             	mov    %rsp,%rbp
   19b9e:	53                   	push   %rbx
   19b9f:	48 83 ec 38          	sub    $0x38,%rsp
   19ba3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19ba7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19bab:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   19baf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bb3:	48 89 c7             	mov    %rax,%rdi
   19bb6:	e8 a9 fe ff ff       	call   19a64 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8max_sizeEv>
   19bbb:	48 89 c3             	mov    %rax,%rbx
   19bbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bc2:	48 89 c7             	mov    %rax,%rdi
   19bc5:	e8 f0 eb ff ff       	call   187ba <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4sizeEv>
   19bca:	48 29 c3             	sub    %rax,%rbx
   19bcd:	48 89 da             	mov    %rbx,%rdx
   19bd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19bd4:	48 39 c2             	cmp    %rax,%rdx
   19bd7:	0f 92 c0             	setb   %al
   19bda:	84 c0                	test   %al,%al
   19bdc:	74 0c                	je     19bea <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   19bde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19be2:	48 89 c7             	mov    %rax,%rdi
   19be5:	e8 f6 b4 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   19bea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bee:	48 89 c7             	mov    %rax,%rdi
   19bf1:	e8 c4 eb ff ff       	call   187ba <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4sizeEv>
   19bf6:	48 89 c3             	mov    %rax,%rbx
   19bf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19bfd:	48 89 c7             	mov    %rax,%rdi
   19c00:	e8 b5 eb ff ff       	call   187ba <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4sizeEv>
   19c05:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19c09:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   19c0d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19c11:	48 89 d6             	mov    %rdx,%rsi
   19c14:	48 89 c7             	mov    %rax,%rdi
   19c17:	e8 d8 fa ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   19c1c:	48 8b 00             	mov    (%rax),%rax
   19c1f:	48 01 d8             	add    %rbx,%rax
   19c22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   19c26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19c2a:	48 89 c7             	mov    %rax,%rdi
   19c2d:	e8 88 eb ff ff       	call   187ba <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4sizeEv>
   19c32:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   19c36:	72 12                	jb     19c4a <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12_M_check_lenEmPKc+0xb0>
   19c38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19c3c:	48 89 c7             	mov    %rax,%rdi
   19c3f:	e8 20 fe ff ff       	call   19a64 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8max_sizeEv>
   19c44:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   19c48:	73 0e                	jae    19c58 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12_M_check_lenEmPKc+0xbe>
   19c4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19c4e:	48 89 c7             	mov    %rax,%rdi
   19c51:	e8 0e fe ff ff       	call   19a64 <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE8max_sizeEv>
   19c56:	eb 04                	jmp    19c5c <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12_M_check_lenEmPKc+0xc2>
   19c58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   19c5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19c60:	c9                   	leave
   19c61:	c3                   	ret

0000000000019c62 <_ZN9__gnu_cxxmiIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   19c62:	55                   	push   %rbp
   19c63:	48 89 e5             	mov    %rsp,%rbp
   19c66:	53                   	push   %rbx
   19c67:	48 83 ec 18          	sub    $0x18,%rsp
   19c6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19c6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   19c73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c77:	48 89 c7             	mov    %rax,%rdi
   19c7a:	e8 89 e5 ff ff       	call   18208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>
   19c7f:	48 8b 18             	mov    (%rax),%rbx
   19c82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c86:	48 89 c7             	mov    %rax,%rdi
   19c89:	e8 7a e5 ff ff       	call   18208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>
   19c8e:	48 8b 00             	mov    (%rax),%rax
   19c91:	48 89 da             	mov    %rbx,%rdx
   19c94:	48 29 c2             	sub    %rax,%rdx
   19c97:	48 89 d0             	mov    %rdx,%rax
   19c9a:	48 c1 f8 04          	sar    $0x4,%rax
   19c9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19ca2:	c9                   	leave
   19ca3:	c3                   	ret

0000000000019ca4 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE17_M_realloc_insertIJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
      vector<_Tp, _Alloc>::
   19ca4:	55                   	push   %rbp
   19ca5:	48 89 e5             	mov    %rsp,%rbp
   19ca8:	53                   	push   %rbx
   19ca9:	48 83 ec 68          	sub    $0x68,%rsp
   19cad:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   19cb1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   19cb5:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   19cb9:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   19cbd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19cc1:	48 8d 15 11 60 01 00 	lea    0x16011(%rip),%rdx        # 2fcd9 <_ZNSt8__detailL19__atomic_spin_countE+0x3925>
   19cc8:	be 01 00 00 00       	mov    $0x1,%esi
   19ccd:	48 89 c7             	mov    %rax,%rdi
   19cd0:	e8 c5 fe ff ff       	call   19b9a <_ZNKSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE12_M_check_lenEmPKc>
   19cd5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   19cd9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19cdd:	48 8b 00             	mov    (%rax),%rax
   19ce0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   19ce4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19ce8:	48 8b 40 08          	mov    0x8(%rax),%rax
   19cec:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   19cf0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19cf4:	48 89 c7             	mov    %rax,%rdi
   19cf7:	e8 ce f3 ff ff       	call   190ca <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE5beginEv>
   19cfc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   19d00:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   19d04:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   19d08:	48 89 d6             	mov    %rdx,%rsi
   19d0b:	48 89 c7             	mov    %rax,%rdi
   19d0e:	e8 4f ff ff ff       	call   19c62 <_ZN9__gnu_cxxmiIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_>
   19d13:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   19d17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19d1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19d1f:	48 89 d6             	mov    %rdx,%rsi
   19d22:	48 89 c7             	mov    %rax,%rdi
   19d25:	e8 80 fd ff ff       	call   19aaa <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE11_M_allocateEm>
   19d2a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   19d2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   19d36:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   19d3a:	48 89 c7             	mov    %rax,%rdi
   19d3d:	e8 f9 fd ff ff       	call   19b3b <_ZSt7forwardIRKP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS4_E4typeE>
   19d42:	48 89 c3             	mov    %rax,%rbx
   19d45:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19d49:	48 89 c7             	mov    %rax,%rdi
   19d4c:	e8 dc fd ff ff       	call   19b2d <_ZSt7forwardIRKN2vk4raii8InstanceEEOT_RNSt16remove_referenceIS5_E4typeE>
   19d51:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   19d54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19d58:	48 c1 e0 04          	shl    $0x4,%rax
   19d5c:	48 89 c1             	mov    %rax,%rcx
	  _Alloc_traits::construct(this->_M_impl,
   19d5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19d63:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   19d67:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19d6b:	48 89 d9             	mov    %rbx,%rcx
   19d6e:	48 89 c7             	mov    %rax,%rdi
   19d71:	e8 d3 fd ff ff       	call   19b49 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE9constructIS2_JRKNS1_8InstanceERKP18VkPhysicalDevice_TEEEvRS3_PT_DpOT0_>
	  __new_finish = pointer();
   19d76:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   19d7d:	00 
					 __new_start, _M_get_Tp_allocator());
   19d7e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19d82:	48 89 c7             	mov    %rax,%rdi
   19d85:	e8 c4 f8 ff ff       	call   1964e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>
   19d8a:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   19d8d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   19d91:	48 89 c7             	mov    %rax,%rdi
   19d94:	e8 6f e4 ff ff       	call   18208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>
   19d99:	48 8b 30             	mov    (%rax),%rsi
   19d9c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19da0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19da4:	48 89 d9             	mov    %rbx,%rcx
   19da7:	48 89 c7             	mov    %rax,%rdi
   19daa:	e8 2e fd ff ff       	call   19add <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
   19daf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   19db3:	48 83 45 c0 10       	addq   $0x10,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   19db8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19dbc:	48 89 c7             	mov    %rax,%rdi
   19dbf:	e8 8a f8 ff ff       	call   1964e <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>
   19dc4:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   19dc7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   19dcb:	48 89 c7             	mov    %rax,%rdi
   19dce:	e8 35 e4 ff ff       	call   18208 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEE4baseEv>
   19dd3:	48 8b 00             	mov    (%rax),%rax
   19dd6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19dda:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   19dde:	48 89 d9             	mov    %rbx,%rcx
   19de1:	48 89 c7             	mov    %rax,%rdi
   19de4:	e8 f4 fc ff ff       	call   19add <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
   19de9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   19ded:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   19df1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   19df5:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   19df9:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   19dfd:	48 c1 fa 04          	sar    $0x4,%rdx
      _M_deallocate(__old_start,
   19e01:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   19e05:	48 89 ce             	mov    %rcx,%rsi
   19e08:	48 89 c7             	mov    %rax,%rdi
   19e0b:	e8 08 f8 ff ff       	call   19618 <_ZNSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE13_M_deallocateEPS2_m>
      this->_M_impl._M_start = __new_start;
   19e10:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19e14:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   19e18:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   19e1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19e1f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   19e23:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   19e27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e2b:	48 c1 e0 04          	shl    $0x4,%rax
   19e2f:	48 89 c2             	mov    %rax,%rdx
   19e32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19e36:	48 01 c2             	add    %rax,%rdx
   19e39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19e3d:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   19e41:	90                   	nop
   19e42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19e46:	c9                   	leave
   19e47:	c3                   	ret

0000000000019e48 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   19e48:	55                   	push   %rbp
   19e49:	48 89 e5             	mov    %rsp,%rbp
   19e4c:	48 83 ec 20          	sub    $0x20,%rsp
   19e50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   19e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e58:	48 89 c7             	mov    %rax,%rdi
   19e5b:	e8 90 f2 ff ff       	call   190f0 <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE3endEv>
   19e60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19e64:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   19e68:	be 01 00 00 00       	mov    $0x1,%esi
   19e6d:	48 89 c7             	mov    %rax,%rdi
   19e70:	e8 33 15 00 00       	call   1b3a8 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEmiEl>
   19e75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   19e79:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   19e7d:	48 89 c7             	mov    %rax,%rdi
   19e80:	e8 91 e3 ff ff       	call   18216 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEdeEv>
      }
   19e85:	c9                   	leave
   19e86:	c3                   	ret
   19e87:	90                   	nop

0000000000019e88 <_ZNSt5tupleIJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:
	tuple()
   19e88:	55                   	push   %rbp
   19e89:	48 89 e5             	mov    %rsp,%rbp
   19e8c:	48 83 ec 10          	sub    $0x10,%rsp
   19e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
   19e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19e98:	48 89 c7             	mov    %rax,%rdi
   19e9b:	e8 4a 15 00 00       	call   1b3ea <_ZNSt11_Tuple_implILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEEC1Ev>
   19ea0:	90                   	nop
   19ea1:	c9                   	leave
   19ea2:	c3                   	ret
   19ea3:	90                   	nop

0000000000019ea4 <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   19ea4:	55                   	push   %rbp
   19ea5:	48 89 e5             	mov    %rsp,%rbp
   19ea8:	48 83 ec 20          	sub    $0x20,%rsp
   19eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19eb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19eb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   19eb8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   19ebd:	74 17                	je     19ed6 <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   19ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ec3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   19ec7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   19ecb:	48 89 ce             	mov    %rcx,%rsi
   19ece:	48 89 c7             	mov    %rax,%rdi
   19ed1:	e8 3b 15 00 00       	call   1b411 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE10deallocateERS2_PS1_m>
      }
   19ed6:	90                   	nop
   19ed7:	c9                   	leave
   19ed8:	c3                   	ret
   19ed9:	90                   	nop

0000000000019eda <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   19eda:	55                   	push   %rbp
   19edb:	48 89 e5             	mov    %rsp,%rbp
   19ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   19ee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19ee6:	5d                   	pop    %rbp
   19ee7:	c3                   	ret

0000000000019ee8 <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   19ee8:	55                   	push   %rbp
   19ee9:	48 89 e5             	mov    %rsp,%rbp
   19eec:	48 83 ec 20          	sub    $0x20,%rsp
   19ef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19ef4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   19ef8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   19efc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   19f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19f04:	48 89 d6             	mov    %rdx,%rsi
   19f07:	48 89 c7             	mov    %rax,%rdi
   19f0a:	e8 60 15 00 00       	call   1b46f <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesEEvT_S3_>
    }
   19f0f:	90                   	nop
   19f10:	c9                   	leave
   19f11:	c3                   	ret

0000000000019f12 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   19f12:	55                   	push   %rbp
   19f13:	48 89 e5             	mov    %rsp,%rbp
   19f16:	53                   	push   %rbx
   19f17:	48 83 ec 38          	sub    $0x38,%rsp
   19f1b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19f1f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19f23:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   19f27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f2b:	48 89 c7             	mov    %rax,%rdi
   19f2e:	e8 7f 15 00 00       	call   1b4b2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE8max_sizeEv>
   19f33:	48 89 c3             	mov    %rax,%rbx
   19f36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f3a:	48 89 c7             	mov    %rax,%rdi
   19f3d:	e8 ac ec ff ff       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   19f42:	48 29 c3             	sub    %rax,%rbx
   19f45:	48 89 da             	mov    %rbx,%rdx
   19f48:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   19f4c:	48 39 c2             	cmp    %rax,%rdx
   19f4f:	0f 92 c0             	setb   %al
   19f52:	84 c0                	test   %al,%al
   19f54:	74 0c                	je     19f62 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   19f56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19f5a:	48 89 c7             	mov    %rax,%rdi
   19f5d:	e8 7e b1 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   19f62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f66:	48 89 c7             	mov    %rax,%rdi
   19f69:	e8 80 ec ff ff       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   19f6e:	48 89 c3             	mov    %rax,%rbx
   19f71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19f75:	48 89 c7             	mov    %rax,%rdi
   19f78:	e8 71 ec ff ff       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   19f7d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19f81:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   19f85:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   19f89:	48 89 d6             	mov    %rdx,%rsi
   19f8c:	48 89 c7             	mov    %rax,%rdi
   19f8f:	e8 60 f7 ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   19f94:	48 8b 00             	mov    (%rax),%rax
   19f97:	48 01 d8             	add    %rbx,%rax
   19f9a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   19f9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fa2:	48 89 c7             	mov    %rax,%rdi
   19fa5:	e8 44 ec ff ff       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   19faa:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   19fae:	72 12                	jb     19fc2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE12_M_check_lenEmPKc+0xb0>
   19fb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fb4:	48 89 c7             	mov    %rax,%rdi
   19fb7:	e8 f6 14 00 00       	call   1b4b2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE8max_sizeEv>
   19fbc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   19fc0:	73 0e                	jae    19fd0 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE12_M_check_lenEmPKc+0xbe>
   19fc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   19fc6:	48 89 c7             	mov    %rax,%rdi
   19fc9:	e8 e4 14 00 00       	call   1b4b2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE8max_sizeEv>
   19fce:	eb 04                	jmp    19fd4 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE12_M_check_lenEmPKc+0xc2>
   19fd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   19fd4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   19fd8:	c9                   	leave
   19fd9:	c3                   	ret

0000000000019fda <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   19fda:	55                   	push   %rbp
   19fdb:	48 89 e5             	mov    %rsp,%rbp
   19fde:	53                   	push   %rbx
   19fdf:	48 83 ec 38          	sub    $0x38,%rsp
   19fe3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   19fe7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   19feb:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   19ff0:	0f 84 19 02 00 00    	je     1a20f <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0x235>
	  const size_type __size = size();
   19ff6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19ffa:	48 89 c7             	mov    %rax,%rdi
   19ffd:	e8 ec eb ff ff       	call   18bee <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE4sizeEv>
   1a002:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a006:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a00a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1a00e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a012:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a016:	48 29 c2             	sub    %rax,%rdx
   1a019:	48 c1 fa 03          	sar    $0x3,%rdx
   1a01d:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
   1a024:	aa aa aa 
   1a027:	48 0f af c2          	imul   %rdx,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a02b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1a02f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a033:	48 89 c7             	mov    %rax,%rdi
   1a036:	e8 77 14 00 00       	call   1b4b2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE8max_sizeEv>
   1a03b:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a03f:	72 16                	jb     1a057 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0x7d>
   1a041:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a045:	48 89 c7             	mov    %rax,%rdi
   1a048:	e8 65 14 00 00       	call   1b4b2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE8max_sizeEv>
   1a04d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a051:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a055:	73 07                	jae    1a05e <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0x84>
   1a057:	b8 01 00 00 00       	mov    $0x1,%eax
   1a05c:	eb 05                	jmp    1a063 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0x89>
   1a05e:	b8 00 00 00 00       	mov    $0x0,%eax
   1a063:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1a065:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a069:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1a06d:	72 33                	jb     1a0a2 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0xc8>
						 __n, _M_get_Tp_allocator());
   1a06f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a073:	48 89 c7             	mov    %rax,%rdi
   1a076:	e8 5f fe ff ff       	call   19eda <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a07b:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1a07e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a082:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a086:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a08a:	48 89 ce             	mov    %rcx,%rsi
   1a08d:	48 89 c7             	mov    %rax,%rdi
   1a090:	e8 3f 14 00 00       	call   1b4d4 <_ZSt27__uninitialized_default_n_aIPN2vk21QueueFamilyPropertiesEmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1a095:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a099:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1a09d:	e9 6d 01 00 00       	jmp    1a20f <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0x235>
		_M_check_len(__n, "vector::_M_default_append");
   1a0a2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a0a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a0aa:	48 8d 15 0e 5c 01 00 	lea    0x15c0e(%rip),%rdx        # 2fcbf <_ZNSt8__detailL19__atomic_spin_countE+0x390b>
   1a0b1:	48 89 ce             	mov    %rcx,%rsi
   1a0b4:	48 89 c7             	mov    %rax,%rdi
   1a0b7:	e8 56 fe ff ff       	call   19f12 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE12_M_check_lenEmPKc>
   1a0bc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1a0c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a0c4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a0c8:	48 89 d6             	mov    %rdx,%rsi
   1a0cb:	48 89 c7             	mov    %rax,%rdi
   1a0ce:	e8 2b 14 00 00       	call   1b4fe <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE11_M_allocateEm>
   1a0d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1a0d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a0db:	48 89 c7             	mov    %rax,%rdi
   1a0de:	e8 f7 fd ff ff       	call   19eda <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a0e3:	48 89 c6             	mov    %rax,%rsi
		      std::__uninitialized_default_n_a(__new_start + __size,
   1a0e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a0ea:	48 89 d0             	mov    %rdx,%rax
   1a0ed:	48 01 c0             	add    %rax,%rax
   1a0f0:	48 01 d0             	add    %rdx,%rax
   1a0f3:	48 c1 e0 03          	shl    $0x3,%rax
   1a0f7:	48 89 c2             	mov    %rax,%rdx
   1a0fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a0fe:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a102:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a106:	48 89 f2             	mov    %rsi,%rdx
   1a109:	48 89 c6             	mov    %rax,%rsi
   1a10c:	48 89 cf             	mov    %rcx,%rdi
   1a10f:	e8 c0 13 00 00       	call   1b4d4 <_ZSt27__uninitialized_default_n_aIPN2vk21QueueFamilyPropertiesEmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1a114:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a118:	48 89 c7             	mov    %rax,%rdi
   1a11b:	e8 ba fd ff ff       	call   19eda <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a120:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1a123:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a127:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a12b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a12f:	48 8b 00             	mov    (%rax),%rax
   1a132:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a136:	48 89 c7             	mov    %rax,%rdi
   1a139:	e8 f3 13 00 00       	call   1b531 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1a13e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1a142:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a146:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1a14a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a14e:	48 8b 12             	mov    (%rdx),%rdx
   1a151:	48 29 d1             	sub    %rdx,%rcx
   1a154:	48 c1 f9 03          	sar    $0x3,%rcx
   1a158:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1a15f:	aa aa aa 
   1a162:	48 0f af d1          	imul   %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1a166:	48 89 d6             	mov    %rdx,%rsi
   1a169:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a16d:	48 8b 0a             	mov    (%rdx),%rcx
   1a170:	48 89 f2             	mov    %rsi,%rdx
   1a173:	48 89 ce             	mov    %rcx,%rsi
   1a176:	48 89 c7             	mov    %rax,%rdi
   1a179:	e8 26 fd ff ff       	call   19ea4 <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1a17e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a182:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a186:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1a189:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a18d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a191:	48 01 c2             	add    %rax,%rdx
   1a194:	48 89 d0             	mov    %rdx,%rax
   1a197:	48 01 c0             	add    %rax,%rax
   1a19a:	48 01 d0             	add    %rdx,%rax
   1a19d:	48 c1 e0 03          	shl    $0x3,%rax
   1a1a1:	48 89 c2             	mov    %rax,%rdx
   1a1a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a1a8:	48 01 c2             	add    %rax,%rdx
   1a1ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1af:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1a1b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a1b7:	48 89 d0             	mov    %rdx,%rax
   1a1ba:	48 01 c0             	add    %rax,%rax
   1a1bd:	48 01 d0             	add    %rdx,%rax
   1a1c0:	48 c1 e0 03          	shl    $0x3,%rax
   1a1c4:	48 89 c2             	mov    %rax,%rdx
   1a1c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a1cb:	48 01 c2             	add    %rax,%rdx
   1a1ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1d2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1a1d6:	eb 37                	jmp    1a20f <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE17_M_default_appendEm+0x235>
		  __catch(...)
   1a1d8:	48 89 c7             	mov    %rax,%rdi
   1a1db:	e8 c0 ae fe ff       	call   50a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1a1e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a1e4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a1e8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a1ec:	48 89 ce             	mov    %rcx,%rsi
   1a1ef:	48 89 c7             	mov    %rax,%rdi
   1a1f2:	e8 ad fc ff ff       	call   19ea4 <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1a1f7:	e8 14 b1 fe ff       	call   5310 <__cxa_rethrow@plt>
		  __catch(...)
   1a1fc:	48 89 c3             	mov    %rax,%rbx
   1a1ff:	e8 6c b1 fe ff       	call   5370 <__cxa_end_catch@plt>
   1a204:	48 89 d8             	mov    %rbx,%rax
   1a207:	48 89 c7             	mov    %rax,%rdi
   1a20a:	e8 91 b1 fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   1a20f:	90                   	nop
   1a210:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a214:	c9                   	leave
   1a215:	c3                   	ret

000000000001a216 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1a216:	55                   	push   %rbp
   1a217:	48 89 e5             	mov    %rsp,%rbp
   1a21a:	48 83 ec 20          	sub    $0x20,%rsp
   1a21e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a222:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1a226:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a22a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a22e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1a232:	48 c1 f8 03          	sar    $0x3,%rax
   1a236:	48 89 c2             	mov    %rax,%rdx
   1a239:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
   1a240:	aa aa aa 
   1a243:	48 0f af c2          	imul   %rdx,%rax
   1a247:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a24b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a250:	74 32                	je     1a284 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE15_M_erase_at_endEPS1_+0x6e>
			  _M_get_Tp_allocator());
   1a252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a256:	48 89 c7             	mov    %rax,%rdi
   1a259:	e8 7c fc ff ff       	call   19eda <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a25e:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1a261:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a265:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1a269:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a26d:	48 89 ce             	mov    %rcx,%rsi
   1a270:	48 89 c7             	mov    %rax,%rdi
   1a273:	e8 70 fc ff ff       	call   19ee8 <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesES1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1a278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a27c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a280:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1a284:	90                   	nop
   1a285:	c9                   	leave
   1a286:	c3                   	ret
   1a287:	90                   	nop

000000000001a288 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1a288:	55                   	push   %rbp
   1a289:	48 89 e5             	mov    %rsp,%rbp
   1a28c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a290:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1a294:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a298:	5d                   	pop    %rbp
   1a299:	c3                   	ret

000000000001a29a <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1a29a:	55                   	push   %rbp
   1a29b:	48 89 e5             	mov    %rsp,%rbp
   1a29e:	48 83 ec 20          	sub    $0x20,%rsp
   1a2a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a2a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a2aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1a2ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a2b3:	74 17                	je     1a2cc <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1a2b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a2bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a2c1:	48 89 ce             	mov    %rcx,%rsi
   1a2c4:	48 89 c7             	mov    %rax,%rdi
   1a2c7:	e8 97 12 00 00       	call   1b563 <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE10deallocateERS2_PS1_m>
      }
   1a2cc:	90                   	nop
   1a2cd:	c9                   	leave
   1a2ce:	c3                   	ret
   1a2cf:	90                   	nop

000000000001a2d0 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1a2d0:	55                   	push   %rbp
   1a2d1:	48 89 e5             	mov    %rsp,%rbp
   1a2d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1a2d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2dc:	5d                   	pop    %rbp
   1a2dd:	c3                   	ret

000000000001a2de <_ZSt8_DestroyIPN2vk19ExtensionPropertiesES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1a2de:	55                   	push   %rbp
   1a2df:	48 89 e5             	mov    %rsp,%rbp
   1a2e2:	48 83 ec 20          	sub    $0x20,%rsp
   1a2e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a2ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a2ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1a2f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a2f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a2fa:	48 89 d6             	mov    %rdx,%rsi
   1a2fd:	48 89 c7             	mov    %rax,%rdi
   1a300:	e8 bc 12 00 00       	call   1b5c1 <_ZSt8_DestroyIPN2vk19ExtensionPropertiesEEvT_S3_>
    }
   1a305:	90                   	nop
   1a306:	c9                   	leave
   1a307:	c3                   	ret

000000000001a308 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1a308:	55                   	push   %rbp
   1a309:	48 89 e5             	mov    %rsp,%rbp
   1a30c:	53                   	push   %rbx
   1a30d:	48 83 ec 38          	sub    $0x38,%rsp
   1a311:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a315:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1a319:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1a31d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a321:	48 89 c7             	mov    %rax,%rdi
   1a324:	e8 db 12 00 00       	call   1b604 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE8max_sizeEv>
   1a329:	48 89 c3             	mov    %rax,%rbx
   1a32c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a330:	48 89 c7             	mov    %rax,%rdi
   1a333:	e8 6c ea ff ff       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   1a338:	48 29 c3             	sub    %rax,%rbx
   1a33b:	48 89 da             	mov    %rbx,%rdx
   1a33e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a342:	48 39 c2             	cmp    %rax,%rdx
   1a345:	0f 92 c0             	setb   %al
   1a348:	84 c0                	test   %al,%al
   1a34a:	74 0c                	je     1a358 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1a34c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a350:	48 89 c7             	mov    %rax,%rdi
   1a353:	e8 88 ad fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1a358:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a35c:	48 89 c7             	mov    %rax,%rdi
   1a35f:	e8 40 ea ff ff       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   1a364:	48 89 c3             	mov    %rax,%rbx
   1a367:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a36b:	48 89 c7             	mov    %rax,%rdi
   1a36e:	e8 31 ea ff ff       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   1a373:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a377:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1a37b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1a37f:	48 89 d6             	mov    %rdx,%rsi
   1a382:	48 89 c7             	mov    %rax,%rdi
   1a385:	e8 6a f3 ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   1a38a:	48 8b 00             	mov    (%rax),%rax
   1a38d:	48 01 d8             	add    %rbx,%rax
   1a390:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1a394:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a398:	48 89 c7             	mov    %rax,%rdi
   1a39b:	e8 04 ea ff ff       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   1a3a0:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1a3a4:	72 12                	jb     1a3b8 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE12_M_check_lenEmPKc+0xb0>
   1a3a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a3aa:	48 89 c7             	mov    %rax,%rdi
   1a3ad:	e8 52 12 00 00       	call   1b604 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE8max_sizeEv>
   1a3b2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a3b6:	73 0e                	jae    1a3c6 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE12_M_check_lenEmPKc+0xbe>
   1a3b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a3bc:	48 89 c7             	mov    %rax,%rdi
   1a3bf:	e8 40 12 00 00       	call   1b604 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE8max_sizeEv>
   1a3c4:	eb 04                	jmp    1a3ca <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE12_M_check_lenEmPKc+0xc2>
   1a3c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1a3ca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a3ce:	c9                   	leave
   1a3cf:	c3                   	ret

000000000001a3d0 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1a3d0:	55                   	push   %rbp
   1a3d1:	48 89 e5             	mov    %rsp,%rbp
   1a3d4:	53                   	push   %rbx
   1a3d5:	48 83 ec 38          	sub    $0x38,%rsp
   1a3d9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a3dd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1a3e1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1a3e6:	0f 84 1c 02 00 00    	je     1a608 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0x238>
	  const size_type __size = size();
   1a3ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a3f0:	48 89 c7             	mov    %rax,%rdi
   1a3f3:	e8 ac e9 ff ff       	call   18da4 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE4sizeEv>
   1a3f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a3fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a400:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1a404:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a408:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a40c:	48 29 c2             	sub    %rax,%rdx
   1a40f:	48 c1 fa 02          	sar    $0x2,%rdx
   1a413:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   1a41a:	fc c0 0f 
   1a41d:	48 0f af c2          	imul   %rdx,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a421:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1a425:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a429:	48 89 c7             	mov    %rax,%rdi
   1a42c:	e8 d3 11 00 00       	call   1b604 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE8max_sizeEv>
   1a431:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a435:	72 16                	jb     1a44d <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0x7d>
   1a437:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a43b:	48 89 c7             	mov    %rax,%rdi
   1a43e:	e8 c1 11 00 00       	call   1b604 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE8max_sizeEv>
   1a443:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a447:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a44b:	73 07                	jae    1a454 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0x84>
   1a44d:	b8 01 00 00 00       	mov    $0x1,%eax
   1a452:	eb 05                	jmp    1a459 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0x89>
   1a454:	b8 00 00 00 00       	mov    $0x0,%eax
   1a459:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1a45b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a45f:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1a463:	72 33                	jb     1a498 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0xc8>
						 __n, _M_get_Tp_allocator());
   1a465:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a469:	48 89 c7             	mov    %rax,%rdi
   1a46c:	e8 5f fe ff ff       	call   1a2d0 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a471:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1a474:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a478:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a47c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a480:	48 89 ce             	mov    %rcx,%rsi
   1a483:	48 89 c7             	mov    %rax,%rdi
   1a486:	e8 9b 11 00 00       	call   1b626 <_ZSt27__uninitialized_default_n_aIPN2vk19ExtensionPropertiesEmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1a48b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a48f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1a493:	e9 70 01 00 00       	jmp    1a608 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0x238>
		_M_check_len(__n, "vector::_M_default_append");
   1a498:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a49c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4a0:	48 8d 15 18 58 01 00 	lea    0x15818(%rip),%rdx        # 2fcbf <_ZNSt8__detailL19__atomic_spin_countE+0x390b>
   1a4a7:	48 89 ce             	mov    %rcx,%rsi
   1a4aa:	48 89 c7             	mov    %rax,%rdi
   1a4ad:	e8 56 fe ff ff       	call   1a308 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE12_M_check_lenEmPKc>
   1a4b2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1a4b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a4be:	48 89 d6             	mov    %rdx,%rsi
   1a4c1:	48 89 c7             	mov    %rax,%rdi
   1a4c4:	e8 87 11 00 00       	call   1b650 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE11_M_allocateEm>
   1a4c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1a4cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a4d1:	48 89 c7             	mov    %rax,%rdi
   1a4d4:	e8 f7 fd ff ff       	call   1a2d0 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a4d9:	48 89 c6             	mov    %rax,%rsi
		      std::__uninitialized_default_n_a(__new_start + __size,
   1a4dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a4e0:	48 89 d0             	mov    %rdx,%rax
   1a4e3:	48 c1 e0 06          	shl    $0x6,%rax
   1a4e7:	48 01 d0             	add    %rdx,%rax
   1a4ea:	48 c1 e0 02          	shl    $0x2,%rax
   1a4ee:	48 89 c2             	mov    %rax,%rdx
   1a4f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a4f5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a4f9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a4fd:	48 89 f2             	mov    %rsi,%rdx
   1a500:	48 89 c6             	mov    %rax,%rsi
   1a503:	48 89 cf             	mov    %rcx,%rdi
   1a506:	e8 1b 11 00 00       	call   1b626 <_ZSt27__uninitialized_default_n_aIPN2vk19ExtensionPropertiesEmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1a50b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a50f:	48 89 c7             	mov    %rax,%rdi
   1a512:	e8 b9 fd ff ff       	call   1a2d0 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a517:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1a51a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a51e:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a522:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a526:	48 8b 00             	mov    (%rax),%rax
   1a529:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a52d:	48 89 c7             	mov    %rax,%rdi
   1a530:	e8 4e 11 00 00       	call   1b683 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1a535:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1a539:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a53d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1a541:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a545:	48 8b 12             	mov    (%rdx),%rdx
   1a548:	48 29 d1             	sub    %rdx,%rcx
   1a54b:	48 c1 f9 02          	sar    $0x2,%rcx
   1a54f:	48 ba c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rdx
   1a556:	fc c0 0f 
   1a559:	48 0f af d1          	imul   %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1a55d:	48 89 d6             	mov    %rdx,%rsi
   1a560:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a564:	48 8b 0a             	mov    (%rdx),%rcx
   1a567:	48 89 f2             	mov    %rsi,%rdx
   1a56a:	48 89 ce             	mov    %rcx,%rsi
   1a56d:	48 89 c7             	mov    %rax,%rdi
   1a570:	e8 25 fd ff ff       	call   1a29a <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1a575:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a579:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a57d:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1a580:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a584:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a588:	48 01 c2             	add    %rax,%rdx
   1a58b:	48 89 d0             	mov    %rdx,%rax
   1a58e:	48 c1 e0 06          	shl    $0x6,%rax
   1a592:	48 01 d0             	add    %rdx,%rax
   1a595:	48 c1 e0 02          	shl    $0x2,%rax
   1a599:	48 89 c2             	mov    %rax,%rdx
   1a59c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a5a0:	48 01 c2             	add    %rax,%rdx
   1a5a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1a5ab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a5af:	48 89 d0             	mov    %rdx,%rax
   1a5b2:	48 c1 e0 06          	shl    $0x6,%rax
   1a5b6:	48 01 d0             	add    %rdx,%rax
   1a5b9:	48 c1 e0 02          	shl    $0x2,%rax
   1a5bd:	48 89 c2             	mov    %rax,%rdx
   1a5c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a5c4:	48 01 c2             	add    %rax,%rdx
   1a5c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5cb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1a5cf:	eb 37                	jmp    1a608 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE17_M_default_appendEm+0x238>
		  __catch(...)
   1a5d1:	48 89 c7             	mov    %rax,%rdi
   1a5d4:	e8 c7 aa fe ff       	call   50a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1a5d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5dd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a5e1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a5e5:	48 89 ce             	mov    %rcx,%rsi
   1a5e8:	48 89 c7             	mov    %rax,%rdi
   1a5eb:	e8 aa fc ff ff       	call   1a29a <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1a5f0:	e8 1b ad fe ff       	call   5310 <__cxa_rethrow@plt>
		  __catch(...)
   1a5f5:	48 89 c3             	mov    %rax,%rbx
   1a5f8:	e8 73 ad fe ff       	call   5370 <__cxa_end_catch@plt>
   1a5fd:	48 89 d8             	mov    %rbx,%rax
   1a600:	48 89 c7             	mov    %rax,%rdi
   1a603:	e8 98 ad fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   1a608:	90                   	nop
   1a609:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a60d:	c9                   	leave
   1a60e:	c3                   	ret
   1a60f:	90                   	nop

000000000001a610 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1a610:	55                   	push   %rbp
   1a611:	48 89 e5             	mov    %rsp,%rbp
   1a614:	48 83 ec 20          	sub    $0x20,%rsp
   1a618:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a61c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1a620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a624:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a628:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1a62c:	48 c1 f8 02          	sar    $0x2,%rax
   1a630:	48 89 c2             	mov    %rax,%rdx
   1a633:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   1a63a:	fc c0 0f 
   1a63d:	48 0f af c2          	imul   %rdx,%rax
   1a641:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a645:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1a64a:	74 32                	je     1a67e <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE15_M_erase_at_endEPS1_+0x6e>
			  _M_get_Tp_allocator());
   1a64c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a650:	48 89 c7             	mov    %rax,%rdi
   1a653:	e8 78 fc ff ff       	call   1a2d0 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a658:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1a65b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a65f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1a663:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a667:	48 89 ce             	mov    %rcx,%rsi
   1a66a:	48 89 c7             	mov    %rax,%rdi
   1a66d:	e8 6c fc ff ff       	call   1a2de <_ZSt8_DestroyIPN2vk19ExtensionPropertiesES1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1a672:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a676:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1a67a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1a67e:	90                   	nop
   1a67f:	c9                   	leave
   1a680:	c3                   	ret
   1a681:	90                   	nop

000000000001a682 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1a682:	55                   	push   %rbp
   1a683:	48 89 e5             	mov    %rsp,%rbp
   1a686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a68a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1a68e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a692:	5d                   	pop    %rbp
   1a693:	c3                   	ret

000000000001a694 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1a694:	55                   	push   %rbp
   1a695:	48 89 e5             	mov    %rsp,%rbp
   1a698:	48 83 ec 20          	sub    $0x20,%rsp
   1a69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a6a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1a6a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1a6ad:	74 17                	je     1a6c6 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1a6af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a6b7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1a6bb:	48 89 ce             	mov    %rcx,%rsi
   1a6be:	48 89 c7             	mov    %rax,%rdi
   1a6c1:	e8 ef 0f 00 00       	call   1b6b5 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE10deallocateERS2_PS1_m>
      }
   1a6c6:	90                   	nop
   1a6c7:	c9                   	leave
   1a6c8:	c3                   	ret
   1a6c9:	90                   	nop

000000000001a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1a6ca:	55                   	push   %rbp
   1a6cb:	48 89 e5             	mov    %rsp,%rbp
   1a6ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1a6d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6d6:	5d                   	pop    %rbp
   1a6d7:	c3                   	ret

000000000001a6d8 <_ZSt8_DestroyIPN2vk15LayerPropertiesES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1a6d8:	55                   	push   %rbp
   1a6d9:	48 89 e5             	mov    %rsp,%rbp
   1a6dc:	48 83 ec 20          	sub    $0x20,%rsp
   1a6e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1a6e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1a6e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1a6ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a6f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a6f4:	48 89 d6             	mov    %rdx,%rsi
   1a6f7:	48 89 c7             	mov    %rax,%rdi
   1a6fa:	e8 14 10 00 00       	call   1b713 <_ZSt8_DestroyIPN2vk15LayerPropertiesEEvT_S3_>
    }
   1a6ff:	90                   	nop
   1a700:	c9                   	leave
   1a701:	c3                   	ret

000000000001a702 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1a702:	55                   	push   %rbp
   1a703:	48 89 e5             	mov    %rsp,%rbp
   1a706:	53                   	push   %rbx
   1a707:	48 83 ec 38          	sub    $0x38,%rsp
   1a70b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1a70f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1a713:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1a717:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a71b:	48 89 c7             	mov    %rax,%rdi
   1a71e:	e8 33 10 00 00       	call   1b756 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE8max_sizeEv>
   1a723:	48 89 c3             	mov    %rax,%rbx
   1a726:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a72a:	48 89 c7             	mov    %rax,%rdi
   1a72d:	e8 fe e7 ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   1a732:	48 29 c3             	sub    %rax,%rbx
   1a735:	48 89 da             	mov    %rbx,%rdx
   1a738:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a73c:	48 39 c2             	cmp    %rax,%rdx
   1a73f:	0f 92 c0             	setb   %al
   1a742:	84 c0                	test   %al,%al
   1a744:	74 0c                	je     1a752 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1a746:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a74a:	48 89 c7             	mov    %rax,%rdi
   1a74d:	e8 8e a9 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1a752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a756:	48 89 c7             	mov    %rax,%rdi
   1a759:	e8 d2 e7 ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   1a75e:	48 89 c3             	mov    %rax,%rbx
   1a761:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a765:	48 89 c7             	mov    %rax,%rdi
   1a768:	e8 c3 e7 ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   1a76d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1a771:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1a775:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1a779:	48 89 d6             	mov    %rdx,%rsi
   1a77c:	48 89 c7             	mov    %rax,%rdi
   1a77f:	e8 70 ef ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   1a784:	48 8b 00             	mov    (%rax),%rax
   1a787:	48 01 d8             	add    %rbx,%rax
   1a78a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1a78e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a792:	48 89 c7             	mov    %rax,%rdi
   1a795:	e8 96 e7 ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   1a79a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1a79e:	72 12                	jb     1a7b2 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE12_M_check_lenEmPKc+0xb0>
   1a7a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a7a4:	48 89 c7             	mov    %rax,%rdi
   1a7a7:	e8 aa 0f 00 00       	call   1b756 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE8max_sizeEv>
   1a7ac:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a7b0:	73 0e                	jae    1a7c0 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE12_M_check_lenEmPKc+0xbe>
   1a7b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a7b6:	48 89 c7             	mov    %rax,%rdi
   1a7b9:	e8 98 0f 00 00       	call   1b756 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE8max_sizeEv>
   1a7be:	eb 04                	jmp    1a7c4 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE12_M_check_lenEmPKc+0xc2>
   1a7c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1a7c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1a7c8:	c9                   	leave
   1a7c9:	c3                   	ret

000000000001a7ca <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   1a7ca:	55                   	push   %rbp
   1a7cb:	48 89 e5             	mov    %rsp,%rbp
   1a7ce:	53                   	push   %rbx
   1a7cf:	48 83 ec 38          	sub    $0x38,%rsp
   1a7d3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1a7d7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   1a7db:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1a7e0:	0f 84 1c 02 00 00    	je     1aa02 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0x238>
	  const size_type __size = size();
   1a7e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a7ea:	48 89 c7             	mov    %rax,%rdi
   1a7ed:	e8 3e e7 ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   1a7f2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a7f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a7fa:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1a7fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a802:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a806:	48 29 c2             	sub    %rax,%rdx
   1a809:	48 c1 fa 03          	sar    $0x3,%rdx
   1a80d:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   1a814:	fc c0 0f 
   1a817:	48 0f af c2          	imul   %rdx,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1a81b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1a81f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a823:	48 89 c7             	mov    %rax,%rdi
   1a826:	e8 2b 0f 00 00       	call   1b756 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE8max_sizeEv>
   1a82b:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1a82f:	72 16                	jb     1a847 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0x7d>
   1a831:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a835:	48 89 c7             	mov    %rax,%rdi
   1a838:	e8 19 0f 00 00       	call   1b756 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE8max_sizeEv>
   1a83d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1a841:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1a845:	73 07                	jae    1a84e <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0x84>
   1a847:	b8 01 00 00 00       	mov    $0x1,%eax
   1a84c:	eb 05                	jmp    1a853 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0x89>
   1a84e:	b8 00 00 00 00       	mov    $0x0,%eax
   1a853:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   1a855:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a859:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1a85d:	72 33                	jb     1a892 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0xc8>
						 __n, _M_get_Tp_allocator());
   1a85f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a863:	48 89 c7             	mov    %rax,%rdi
   1a866:	e8 5f fe ff ff       	call   1a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a86b:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1a86e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a872:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a876:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a87a:	48 89 ce             	mov    %rcx,%rsi
   1a87d:	48 89 c7             	mov    %rax,%rdi
   1a880:	e8 f3 0e 00 00       	call   1b778 <_ZSt27__uninitialized_default_n_aIPN2vk15LayerPropertiesEmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   1a885:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a889:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1a88d:	e9 70 01 00 00       	jmp    1aa02 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0x238>
		_M_check_len(__n, "vector::_M_default_append");
   1a892:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1a896:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a89a:	48 8d 15 1e 54 01 00 	lea    0x1541e(%rip),%rdx        # 2fcbf <_ZNSt8__detailL19__atomic_spin_countE+0x390b>
   1a8a1:	48 89 ce             	mov    %rcx,%rsi
   1a8a4:	48 89 c7             	mov    %rax,%rdi
   1a8a7:	e8 56 fe ff ff       	call   1a702 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE12_M_check_lenEmPKc>
   1a8ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1a8b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a8b4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a8b8:	48 89 d6             	mov    %rdx,%rsi
   1a8bb:	48 89 c7             	mov    %rax,%rdi
   1a8be:	e8 df 0e 00 00       	call   1b7a2 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE11_M_allocateEm>
   1a8c3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1a8c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a8cb:	48 89 c7             	mov    %rax,%rdi
   1a8ce:	e8 f7 fd ff ff       	call   1a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a8d3:	48 89 c6             	mov    %rax,%rsi
		      std::__uninitialized_default_n_a(__new_start + __size,
   1a8d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a8da:	48 89 d0             	mov    %rdx,%rax
   1a8dd:	48 c1 e0 06          	shl    $0x6,%rax
   1a8e1:	48 01 d0             	add    %rdx,%rax
   1a8e4:	48 c1 e0 03          	shl    $0x3,%rax
   1a8e8:	48 89 c2             	mov    %rax,%rdx
   1a8eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a8ef:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1a8f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a8f7:	48 89 f2             	mov    %rsi,%rdx
   1a8fa:	48 89 c6             	mov    %rax,%rsi
   1a8fd:	48 89 cf             	mov    %rcx,%rdi
   1a900:	e8 73 0e 00 00       	call   1b778 <_ZSt27__uninitialized_default_n_aIPN2vk15LayerPropertiesEmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1a905:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a909:	48 89 c7             	mov    %rax,%rdi
   1a90c:	e8 b9 fd ff ff       	call   1a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1a911:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1a914:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a918:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a91c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a920:	48 8b 00             	mov    (%rax),%rax
   1a923:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a927:	48 89 c7             	mov    %rax,%rdi
   1a92a:	e8 a6 0e 00 00       	call   1b7d5 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1a92f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   1a933:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a937:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1a93b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a93f:	48 8b 12             	mov    (%rdx),%rdx
   1a942:	48 29 d1             	sub    %rdx,%rcx
   1a945:	48 c1 f9 03          	sar    $0x3,%rcx
   1a949:	48 ba c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rdx
   1a950:	fc c0 0f 
   1a953:	48 0f af d1          	imul   %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1a957:	48 89 d6             	mov    %rdx,%rsi
   1a95a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1a95e:	48 8b 0a             	mov    (%rdx),%rcx
   1a961:	48 89 f2             	mov    %rsi,%rdx
   1a964:	48 89 ce             	mov    %rcx,%rsi
   1a967:	48 89 c7             	mov    %rax,%rdi
   1a96a:	e8 25 fd ff ff       	call   1a694 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1a96f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a973:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1a977:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1a97a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1a97e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1a982:	48 01 c2             	add    %rax,%rdx
   1a985:	48 89 d0             	mov    %rdx,%rax
   1a988:	48 c1 e0 06          	shl    $0x6,%rax
   1a98c:	48 01 d0             	add    %rdx,%rax
   1a98f:	48 c1 e0 03          	shl    $0x3,%rax
   1a993:	48 89 c2             	mov    %rax,%rdx
   1a996:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a99a:	48 01 c2             	add    %rax,%rdx
   1a99d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a9a1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1a9a5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a9a9:	48 89 d0             	mov    %rdx,%rax
   1a9ac:	48 c1 e0 06          	shl    $0x6,%rax
   1a9b0:	48 01 d0             	add    %rdx,%rax
   1a9b3:	48 c1 e0 03          	shl    $0x3,%rax
   1a9b7:	48 89 c2             	mov    %rax,%rdx
   1a9ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a9be:	48 01 c2             	add    %rax,%rdx
   1a9c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a9c5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1a9c9:	eb 37                	jmp    1aa02 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE17_M_default_appendEm+0x238>
		  __catch(...)
   1a9cb:	48 89 c7             	mov    %rax,%rdi
   1a9ce:	e8 cd a6 fe ff       	call   50a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1a9d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a9d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1a9db:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1a9df:	48 89 ce             	mov    %rcx,%rsi
   1a9e2:	48 89 c7             	mov    %rax,%rdi
   1a9e5:	e8 aa fc ff ff       	call   1a694 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1a9ea:	e8 21 a9 fe ff       	call   5310 <__cxa_rethrow@plt>
		  __catch(...)
   1a9ef:	48 89 c3             	mov    %rax,%rbx
   1a9f2:	e8 79 a9 fe ff       	call   5370 <__cxa_end_catch@plt>
   1a9f7:	48 89 d8             	mov    %rbx,%rax
   1a9fa:	48 89 c7             	mov    %rax,%rdi
   1a9fd:	e8 9e a9 fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   1aa02:	90                   	nop
   1aa03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1aa07:	c9                   	leave
   1aa08:	c3                   	ret
   1aa09:	90                   	nop

000000000001aa0a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1aa0a:	55                   	push   %rbp
   1aa0b:	48 89 e5             	mov    %rsp,%rbp
   1aa0e:	48 83 ec 20          	sub    $0x20,%rsp
   1aa12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1aa16:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1aa1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa1e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1aa22:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1aa26:	48 c1 f8 03          	sar    $0x3,%rax
   1aa2a:	48 89 c2             	mov    %rax,%rdx
   1aa2d:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
   1aa34:	fc c0 0f 
   1aa37:	48 0f af c2          	imul   %rdx,%rax
   1aa3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1aa3f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1aa44:	74 32                	je     1aa78 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE15_M_erase_at_endEPS1_+0x6e>
			  _M_get_Tp_allocator());
   1aa46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa4a:	48 89 c7             	mov    %rax,%rdi
   1aa4d:	e8 78 fc ff ff       	call   1a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1aa52:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1aa55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa59:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1aa5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aa61:	48 89 ce             	mov    %rcx,%rsi
   1aa64:	48 89 c7             	mov    %rax,%rdi
   1aa67:	e8 6c fc ff ff       	call   1a6d8 <_ZSt8_DestroyIPN2vk15LayerPropertiesES1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1aa6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1aa70:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1aa74:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1aa78:	90                   	nop
   1aa79:	c9                   	leave
   1aa7a:	c3                   	ret
   1aa7b:	90                   	nop

000000000001aa7c <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1aa7c:	55                   	push   %rbp
   1aa7d:	48 89 e5             	mov    %rsp,%rbp
   1aa80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aa84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1aa88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aa8c:	5d                   	pop    %rbp
   1aa8d:	c3                   	ret

000000000001aa8e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1aa8e:	55                   	push   %rbp
   1aa8f:	48 89 e5             	mov    %rsp,%rbp
   1aa92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1aa96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aa9a:	5d                   	pop    %rbp
   1aa9b:	c3                   	ret

000000000001aa9c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1aa9c:	55                   	push   %rbp
   1aa9d:	48 89 e5             	mov    %rsp,%rbp
   1aaa0:	48 83 ec 20          	sub    $0x20,%rsp
   1aaa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aaa8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aaac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1aab0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1aab5:	74 17                	je     1aace <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1aab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aabb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aabf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1aac3:	48 89 ce             	mov    %rcx,%rsi
   1aac6:	48 89 c7             	mov    %rax,%rdi
   1aac9:	e8 39 0d 00 00       	call   1b807 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
   1aace:	90                   	nop
   1aacf:	c9                   	leave
   1aad0:	c3                   	ret
   1aad1:	90                   	nop

000000000001aad2 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1aad2:	55                   	push   %rbp
   1aad3:	48 89 e5             	mov    %rsp,%rbp
   1aad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1aada:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1aae1:	ff ff 0f 
      }
   1aae4:	5d                   	pop    %rbp
   1aae5:	c3                   	ret

000000000001aae6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1aae6:	55                   	push   %rbp
   1aae7:	48 89 e5             	mov    %rsp,%rbp
   1aaea:	48 83 ec 20          	sub    $0x20,%rsp
   1aaee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aaf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1aaf6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1aafa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1aafe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1ab02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab06:	48 89 ce             	mov    %rcx,%rsi
   1ab09:	48 89 c7             	mov    %rax,%rdi
   1ab0c:	e8 54 0d 00 00       	call   1b865 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   1ab11:	c9                   	leave
   1ab12:	c3                   	ret

000000000001ab13 <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   1ab13:	55                   	push   %rbp
   1ab14:	48 89 e5             	mov    %rsp,%rbp
   1ab17:	48 83 ec 10          	sub    $0x10,%rsp
   1ab1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   1ab23:	eb 19                	jmp    1ab3e <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   1ab25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab29:	48 89 c7             	mov    %rax,%rdi
   1ab2c:	e8 d9 d5 ff ff       	call   1810a <_ZSt11__addressofIPKcEPT_RS2_>
   1ab31:	48 89 c7             	mov    %rax,%rdi
   1ab34:	e8 77 0d 00 00       	call   1b8b0 <_ZSt8_DestroyIPKcEvPT_>
	  for (; __first != __last; ++__first)
   1ab39:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   1ab3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab42:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1ab46:	75 dd                	jne    1ab25 <_ZNSt12_Destroy_auxILb0EE9__destroyIPPKcEEvT_S5_+0x12>
	}
   1ab48:	90                   	nop
   1ab49:	90                   	nop
   1ab4a:	c9                   	leave
   1ab4b:	c3                   	ret

000000000001ab4c <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1ab4c:	55                   	push   %rbp
   1ab4d:	48 89 e5             	mov    %rsp,%rbp
   1ab50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab58:	90                   	nop
   1ab59:	5d                   	pop    %rbp
   1ab5a:	c3                   	ret

000000000001ab5b <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1ab5b:	55                   	push   %rbp
   1ab5c:	48 89 e5             	mov    %rsp,%rbp
   1ab5f:	48 83 ec 20          	sub    $0x20,%rsp
   1ab63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1ab6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1ab6f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1ab73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab77:	48 89 d6             	mov    %rdx,%rsi
   1ab7a:	48 89 c7             	mov    %rax,%rdi
   1ab7d:	e8 c0 e4 ff ff       	call   19042 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   1ab82:	90                   	nop
   1ab83:	c9                   	leave
   1ab84:	c3                   	ret
   1ab85:	90                   	nop

000000000001ab86 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1ab86:	55                   	push   %rbp
   1ab87:	48 89 e5             	mov    %rsp,%rbp
   1ab8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ab8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1ab92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ab96:	48 8b 10             	mov    (%rax),%rdx
   1ab99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ab9d:	48 89 10             	mov    %rdx,(%rax)
   1aba0:	90                   	nop
   1aba1:	5d                   	pop    %rbp
   1aba2:	c3                   	ret
   1aba3:	90                   	nop

000000000001aba4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
   1aba4:	55                   	push   %rbp
   1aba5:	48 89 e5             	mov    %rsp,%rbp
   1aba8:	48 83 ec 10          	sub    $0x10,%rsp
   1abac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1abb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1abb4:	48 89 c7             	mov    %rax,%rdi
   1abb7:	e8 10 0d 00 00       	call   1b8cc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   1abbc:	90                   	nop
   1abbd:	c9                   	leave
   1abbe:	c3                   	ret
   1abbf:	90                   	nop

000000000001abc0 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   1abc0:	55                   	push   %rbp
   1abc1:	48 89 e5             	mov    %rsp,%rbp
   1abc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   1abc8:	90                   	nop
   1abc9:	5d                   	pop    %rbp
   1abca:	c3                   	ret
   1abcb:	90                   	nop

000000000001abcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1abcc:	55                   	push   %rbp
   1abcd:	48 89 e5             	mov    %rsp,%rbp
   1abd0:	48 83 ec 20          	sub    $0x20,%rsp
   1abd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1abd8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1abdc:	eb 49                	jmp    1ac27 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1abde:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1abe2:	48 89 c7             	mov    %rax,%rdi
   1abe5:	e8 ed 0c 00 00       	call   1b8d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1abea:	48 89 c2             	mov    %rax,%rdx
   1abed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1abf1:	48 89 d6             	mov    %rdx,%rsi
   1abf4:	48 89 c7             	mov    %rax,%rdi
   1abf7:	e8 d0 ff ff ff       	call   1abcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   1abfc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ac00:	48 89 c7             	mov    %rax,%rdi
   1ac03:	e8 e1 0c 00 00       	call   1b8e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1ac08:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   1ac0c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1ac10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ac14:	48 89 d6             	mov    %rdx,%rsi
   1ac17:	48 89 c7             	mov    %rax,%rdi
   1ac1a:	e8 dd 0c 00 00       	call   1b8fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   1ac1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac23:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   1ac27:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1ac2c:	75 b0                	jne    1abde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   1ac2e:	90                   	nop
   1ac2f:	90                   	nop
   1ac30:	c9                   	leave
   1ac31:	c3                   	ret

000000000001ac32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   1ac32:	55                   	push   %rbp
   1ac33:	48 89 e5             	mov    %rsp,%rbp
   1ac36:	48 83 ec 10          	sub    $0x10,%rsp
   1ac3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   1ac3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac42:	48 89 c7             	mov    %rax,%rdi
   1ac45:	e8 ec 0c 00 00       	call   1b936 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   1ac4a:	c9                   	leave
   1ac4b:	c3                   	ret

000000000001ac4c <_ZN9__gnu_cxx17__normal_iteratorIPN2vk19ExtensionPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1ac4c:	55                   	push   %rbp
   1ac4d:	48 89 e5             	mov    %rsp,%rbp
   1ac50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1ac58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ac5c:	48 8b 10             	mov    (%rax),%rdx
   1ac5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac63:	48 89 10             	mov    %rdx,(%rax)
   1ac66:	90                   	nop
   1ac67:	5d                   	pop    %rbp
   1ac68:	c3                   	ret
   1ac69:	90                   	nop

000000000001ac6a <_ZNKSt5arrayIcLm256EE4dataEv>:
      data() noexcept
      { return _AT_Type::_S_ptr(_M_elems); }

      [[__nodiscard__]]
      _GLIBCXX17_CONSTEXPR const_pointer
      data() const noexcept
   1ac6a:	55                   	push   %rbp
   1ac6b:	48 89 e5             	mov    %rsp,%rbp
   1ac6e:	48 83 ec 10          	sub    $0x10,%rsp
   1ac72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
   1ac76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac7a:	48 89 c7             	mov    %rax,%rdi
   1ac7d:	e8 c6 0c 00 00       	call   1b948 <_ZNSt14__array_traitsIcLm256EE6_S_ptrERA256_Kc>
   1ac82:	c9                   	leave
   1ac83:	c3                   	ret

000000000001ac84 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   1ac84:	55                   	push   %rbp
   1ac85:	48 89 e5             	mov    %rsp,%rbp
   1ac88:	48 83 ec 10          	sub    $0x10,%rsp
   1ac8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ac90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   1ac94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ac98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1ac9c:	48 89 d6             	mov    %rdx,%rsi
   1ac9f:	48 89 c7             	mov    %rax,%rdi
   1aca2:	e8 af 0c 00 00       	call   1b956 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   1aca7:	c9                   	leave
   1aca8:	c3                   	ret
   1aca9:	90                   	nop

000000000001acaa <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1acaa:	55                   	push   %rbp
   1acab:	48 89 e5             	mov    %rsp,%rbp
   1acae:	48 83 ec 10          	sub    $0x10,%rsp
   1acb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   1acb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1acba:	48 89 c7             	mov    %rax,%rdi
   1acbd:	e8 e0 0c 00 00       	call   1b9a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   1acc2:	c9                   	leave
   1acc3:	c3                   	ret

000000000001acc4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   1acc4:	55                   	push   %rbp
   1acc5:	48 89 e5             	mov    %rsp,%rbp
   1acc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1accc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   1acd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1acd4:	48 8b 10             	mov    (%rax),%rdx
   1acd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1acdb:	48 8b 00             	mov    (%rax),%rax
   1acde:	48 39 c2             	cmp    %rax,%rdx
   1ace1:	0f 94 c0             	sete   %al
   1ace4:	5d                   	pop    %rbp
   1ace5:	c3                   	ret

000000000001ace6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   1ace6:	55                   	push   %rbp
   1ace7:	48 89 e5             	mov    %rsp,%rbp
   1acea:	48 83 ec 10          	sub    $0x10,%rsp
   1acee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   1acf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1acf6:	48 89 c7             	mov    %rax,%rdi
   1acf9:	e8 ce 0c 00 00       	call   1b9cc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   1acfe:	90                   	nop
   1acff:	c9                   	leave
   1ad00:	c3                   	ret
   1ad01:	90                   	nop

000000000001ad02 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1ad02:	55                   	push   %rbp
   1ad03:	48 89 e5             	mov    %rsp,%rbp
   1ad06:	48 83 ec 10          	sub    $0x10,%rsp
   1ad0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   1ad0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ad12:	48 8b 00             	mov    (%rax),%rax
   1ad15:	48 89 c7             	mov    %rax,%rdi
   1ad18:	e8 bb 0c 00 00       	call   1b9d8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1ad1d:	c9                   	leave
   1ad1e:	c3                   	ret

000000000001ad1f <_ZNSt8__detail21__char_traits_cmp_catISt11char_traitsIcEEEDai>:
#if __cpp_lib_three_way_comparison
  namespace __detail
  {
    template<typename _ChTraits>
      constexpr auto
      __char_traits_cmp_cat(int __cmp) noexcept
   1ad1f:	55                   	push   %rbp
   1ad20:	48 89 e5             	mov    %rsp,%rbp
   1ad23:	89 7d fc             	mov    %edi,-0x4(%rbp)
      {
	if constexpr (requires { typename _ChTraits::comparison_category; })
	  {
	    using _Cat = typename _ChTraits::comparison_category;
	    static_assert( !is_void_v<common_comparison_category_t<_Cat>> );
	    return static_cast<_Cat>(__cmp <=> 0);
   1ad26:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1ad29:	85 c0                	test   %eax,%eax
   1ad2b:	74 12                	je     1ad3f <_ZNSt8__detail21__char_traits_cmp_catISt11char_traitsIcEEEDai+0x20>
   1ad2d:	85 c0                	test   %eax,%eax
   1ad2f:	79 07                	jns    1ad38 <_ZNSt8__detail21__char_traits_cmp_catISt11char_traitsIcEEEDai+0x19>
   1ad31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1ad36:	eb 0c                	jmp    1ad44 <_ZNSt8__detail21__char_traits_cmp_catISt11char_traitsIcEEEDai+0x25>
   1ad38:	b8 01 00 00 00       	mov    $0x1,%eax
   1ad3d:	eb 05                	jmp    1ad44 <_ZNSt8__detail21__char_traits_cmp_catISt11char_traitsIcEEEDai+0x25>
   1ad3f:	b8 00 00 00 00       	mov    $0x0,%eax
	  }
	else
	  return static_cast<weak_ordering>(__cmp <=> 0);
      }
   1ad44:	5d                   	pop    %rbp
   1ad45:	c3                   	ret

000000000001ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
   1ad46:	55                   	push   %rbp
   1ad47:	48 89 e5             	mov    %rsp,%rbp
   1ad4a:	48 83 ec 30          	sub    $0x30,%rsp
   1ad4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ad52:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ad56:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      { return __x < __y; }
   1ad5a:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1ad5e:	be 00 00 00 00       	mov    $0x0,%esi
   1ad63:	48 89 c7             	mov    %rax,%rdi
   1ad66:	e8 fd 57 ff ff       	call   10568 <_ZNSt9__cmp_cat8__unspecC1EPS0_>
   1ad6b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1ad6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ad73:	48 89 d6             	mov    %rdx,%rsi
   1ad76:	48 89 c7             	mov    %rax,%rdi
   1ad79:	e8 78 0c 00 00       	call   1b9f6 <_ZStssIcSt11char_traitsIcESaIcEEDTcl21__char_traits_cmp_catIT0_ELi0EEERKNSt7__cxx1112basic_stringIT_S3_T1_EESB_>
   1ad7e:	89 c7                	mov    %eax,%edi
   1ad80:	e8 f2 57 ff ff       	call   10577 <_ZStltSt15strong_orderingNSt9__cmp_cat8__unspecE>
   1ad85:	c9                   	leave
   1ad86:	c3                   	ret

000000000001ad87 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   1ad87:	55                   	push   %rbp
   1ad88:	48 89 e5             	mov    %rsp,%rbp
   1ad8b:	48 83 ec 10          	sub    $0x10,%rsp
   1ad8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ad93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   1ad97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1ad9b:	48 89 c7             	mov    %rax,%rdi
   1ad9e:	e8 7f 0c 00 00       	call   1ba22 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1ada3:	48 89 c2             	mov    %rax,%rdx
   1ada6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1adaa:	48 89 d6             	mov    %rdx,%rsi
   1adad:	48 89 c7             	mov    %rax,%rdi
   1adb0:	e8 7b 0c 00 00       	call   1ba30 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   1adb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1adb9:	c9                   	leave
   1adba:	c3                   	ret
   1adbb:	90                   	nop

000000000001adbc <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   1adbc:	55                   	push   %rbp
   1adbd:	48 89 e5             	mov    %rsp,%rbp
   1adc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1adc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   1adc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1adcc:	48 8b 10             	mov    (%rax),%rdx
   1adcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1add3:	48 89 10             	mov    %rdx,(%rax)
   1add6:	90                   	nop
   1add7:	5d                   	pop    %rbp
   1add8:	c3                   	ret
   1add9:	90                   	nop

000000000001adda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1adda:	55                   	push   %rbp
   1addb:	48 89 e5             	mov    %rsp,%rbp
   1adde:	41 54                	push   %r12
   1ade0:	53                   	push   %rbx
   1ade1:	48 83 ec 60          	sub    $0x60,%rsp
   1ade5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1ade9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1aded:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1adf1:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   1adf5:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   1adf9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1adfd:	48 89 c7             	mov    %rax,%rdi
   1ae00:	e8 7a 0c 00 00       	call   1ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1ae05:	49 89 c4             	mov    %rax,%r12
   1ae08:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ae0c:	48 89 c7             	mov    %rax,%rdi
   1ae0f:	e8 5d 0c 00 00       	call   1ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1ae14:	48 89 c3             	mov    %rax,%rbx
   1ae17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ae1b:	48 89 c7             	mov    %rax,%rdi
   1ae1e:	e8 40 0c 00 00       	call   1ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1ae23:	48 89 c2             	mov    %rax,%rdx
   1ae26:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   1ae2a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ae2e:	4d 89 e0             	mov    %r12,%r8
   1ae31:	48 89 d9             	mov    %rbx,%rcx
   1ae34:	48 89 c7             	mov    %rax,%rdi
   1ae37:	e8 52 0c 00 00       	call   1ba8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   1ae3c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ae40:	48 89 c7             	mov    %rax,%rdi
   1ae43:	e8 46 11 00 00       	call   1bf8e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   1ae48:	48 89 c2             	mov    %rax,%rdx
   1ae4b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1ae4f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1ae53:	48 89 ce             	mov    %rcx,%rsi
   1ae56:	48 89 c7             	mov    %rax,%rdi
   1ae59:	e8 e2 0c 00 00       	call   1bb40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   1ae5e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1ae62:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   1ae66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ae6a:	48 85 c0             	test   %rax,%rax
   1ae6d:	74 1c                	je     1ae8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   1ae6f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1ae73:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ae77:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1ae7b:	48 89 ce             	mov    %rcx,%rsi
   1ae7e:	48 89 c7             	mov    %rax,%rdi
   1ae81:	e8 26 11 00 00       	call   1bfac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   1ae86:	48 89 c3             	mov    %rax,%rbx
   1ae89:	eb 17                	jmp    1aea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   1ae8b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1ae8f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1ae93:	48 89 d6             	mov    %rdx,%rsi
   1ae96:	48 89 c7             	mov    %rax,%rdi
   1ae99:	e8 64 11 00 00       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1ae9e:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   1aea2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1aea6:	48 89 c7             	mov    %rax,%rdi
   1aea9:	e8 5c 0c 00 00       	call   1bb0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   1aeae:	48 89 d8             	mov    %rbx,%rax
   1aeb1:	eb 1a                	jmp    1aecd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   1aeb3:	48 89 c3             	mov    %rax,%rbx
   1aeb6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1aeba:	48 89 c7             	mov    %rax,%rdi
   1aebd:	e8 48 0c 00 00       	call   1bb0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   1aec2:	48 89 d8             	mov    %rbx,%rax
   1aec5:	48 89 c7             	mov    %rax,%rdi
   1aec8:	e8 d3 a4 fe ff       	call   53a0 <_Unwind_Resume@plt>
   1aecd:	48 83 c4 60          	add    $0x60,%rsp
   1aed1:	5b                   	pop    %rbx
   1aed2:	41 5c                	pop    %r12
   1aed4:	5d                   	pop    %rbp
   1aed5:	c3                   	ret

000000000001aed6 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1aed6:	55                   	push   %rbp
   1aed7:	48 89 e5             	mov    %rsp,%rbp
   1aeda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1aede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1aee2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1aee6:	48 8b 10             	mov    (%rax),%rdx
   1aee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1aeed:	48 89 10             	mov    %rdx,(%rax)
   1aef0:	90                   	nop
   1aef1:	5d                   	pop    %rbp
   1aef2:	c3                   	ret
   1aef3:	90                   	nop

000000000001aef4 <_ZNSt17_Optional_payloadIjLb1ELb1ELb1EECI1St22_Optional_payload_baseIjEIJjEEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   1aef4:	55                   	push   %rbp
   1aef5:	48 89 e5             	mov    %rsp,%rbp
   1aef8:	48 83 ec 20          	sub    $0x20,%rsp
   1aefc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1af00:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   1af04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1af0c:	48 89 d6             	mov    %rdx,%rsi
   1af0f:	48 89 c7             	mov    %rax,%rdi
   1af12:	e8 05 11 00 00       	call   1c01c <_ZNSt22_Optional_payload_baseIjEC1IJjEEESt10in_place_tDpOT_>
   1af17:	90                   	nop
   1af18:	c9                   	leave
   1af19:	c3                   	ret

000000000001af1a <_ZNSt14_Optional_baseIjLb1ELb1EEC1IJjELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   1af1a:	55                   	push   %rbp
   1af1b:	48 89 e5             	mov    %rsp,%rbp
   1af1e:	53                   	push   %rbx
   1af1f:	48 83 ec 18          	sub    $0x18,%rsp
   1af23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1af27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   1af2b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1af2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af33:	48 89 c7             	mov    %rax,%rdi
   1af36:	e8 53 fb ff ff       	call   1aa8e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   1af3b:	48 89 c6             	mov    %rax,%rsi
   1af3e:	48 89 df             	mov    %rbx,%rdi
   1af41:	e8 ae ff ff ff       	call   1aef4 <_ZNSt17_Optional_payloadIjLb1ELb1ELb1EECI1St22_Optional_payload_baseIjEIJjEEESt10in_place_tDpOT_>
	{ }
   1af46:	90                   	nop
   1af47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1af4b:	c9                   	leave
   1af4c:	c3                   	ret
   1af4d:	90                   	nop

000000000001af4e <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
   1af4e:	55                   	push   %rbp
   1af4f:	48 89 e5             	mov    %rsp,%rbp
   1af52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1af56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1af5a:	5d                   	pop    %rbp
   1af5b:	c3                   	ret

000000000001af5c <_ZSt10__exchangeIN2vk14PhysicalDeviceES1_ET_RS2_OT0_>:

  // C++11 version of std::exchange for internal use.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    __exchange(_Tp& __obj, _Up&& __new_val)
   1af5c:	55                   	push   %rbp
   1af5d:	48 89 e5             	mov    %rsp,%rbp
   1af60:	48 83 ec 20          	sub    $0x20,%rsp
   1af64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1af68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
      _Tp __old_val = std::move(__obj);
   1af6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1af70:	48 89 c7             	mov    %rax,%rdi
   1af73:	e8 39 e6 ff ff       	call   195b1 <_ZSt4moveIRN2vk14PhysicalDeviceEEONSt16remove_referenceIT_E4typeEOS4_>
   1af78:	48 8b 00             	mov    (%rax),%rax
   1af7b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __obj = std::forward<_Up>(__new_val);
   1af7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1af83:	48 89 c7             	mov    %rax,%rdi
   1af86:	e8 aa e5 ff ff       	call   19535 <_ZSt7forwardIN2vk14PhysicalDeviceEEOT_RNSt16remove_referenceIS2_E4typeE>
   1af8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1af8f:	48 8b 00             	mov    (%rax),%rax
   1af92:	48 89 02             	mov    %rax,(%rdx)
      return __old_val;
   1af95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   1af99:	c9                   	leave
   1af9a:	c3                   	ret

000000000001af9b <_ZSt10__exchangeIPKN2vk4raii18InstanceDispatcherEDnET_RS5_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   1af9b:	55                   	push   %rbp
   1af9c:	48 89 e5             	mov    %rsp,%rbp
   1af9f:	48 83 ec 20          	sub    $0x20,%rsp
   1afa3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1afa7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   1afab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afaf:	48 89 c7             	mov    %rax,%rdi
   1afb2:	e8 08 e6 ff ff       	call   195bf <_ZSt4moveIRPKN2vk4raii18InstanceDispatcherEEONSt16remove_referenceIT_E4typeEOS7_>
   1afb7:	48 8b 00             	mov    (%rax),%rax
   1afba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __obj = std::forward<_Up>(__new_val);
   1afbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1afc2:	48 89 c7             	mov    %rax,%rdi
   1afc5:	e8 a9 e5 ff ff       	call   19573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>
   1afca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1afce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return __old_val;
   1afd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   1afd9:	c9                   	leave
   1afda:	c3                   	ret
   1afdb:	90                   	nop

000000000001afdc <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1afdc:	55                   	push   %rbp
   1afdd:	48 89 e5             	mov    %rsp,%rbp
   1afe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1afe4:	90                   	nop
   1afe5:	5d                   	pop    %rbp
   1afe6:	c3                   	ret

000000000001afe7 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1afe7:	55                   	push   %rbp
   1afe8:	48 89 e5             	mov    %rsp,%rbp
   1afeb:	48 83 ec 40          	sub    $0x40,%rsp
   1afef:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1aff3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1aff7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1affb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1afff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b003:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b007:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b00b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b00f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1b013:	e8 86 b1 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b018:	84 c0                	test   %al,%al
   1b01a:	74 0e                	je     1b02a <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE10deallocateERS3_PS2_m+0x43>
	    ::operator delete(__p);
   1b01c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b020:	48 89 c7             	mov    %rax,%rdi
   1b023:	e8 c8 a1 fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1b028:	eb 18                	jmp    1b042 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE10deallocateERS3_PS2_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1b02a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b02e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b036:	48 89 ce             	mov    %rcx,%rsi
   1b039:	48 89 c7             	mov    %rax,%rdi
   1b03c:	e8 d7 1e 00 00       	call   1cf18 <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE10deallocateEPS2_m>
      { __a.deallocate(__p, __n); }
   1b041:	90                   	nop
   1b042:	90                   	nop
   1b043:	c9                   	leave
   1b044:	c3                   	ret

000000000001b045 <_ZSt8_DestroyIPN2vk4raii14PhysicalDeviceEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1b045:	55                   	push   %rbp
   1b046:	48 89 e5             	mov    %rsp,%rbp
   1b049:	48 83 ec 10          	sub    $0x10,%rsp
   1b04d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b051:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   1b055:	e8 44 b1 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b05a:	84 c0                	test   %al,%al
   1b05c:	74 15                	je     1b073 <_ZSt8_DestroyIPN2vk4raii14PhysicalDeviceEEvT_S4_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   1b05e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b066:	48 89 d6             	mov    %rdx,%rsi
   1b069:	48 89 c7             	mov    %rax,%rdi
   1b06c:	e8 e6 0f 00 00       	call   1c057 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii14PhysicalDeviceEEEvT_S6_>
   1b071:	eb 13                	jmp    1b086 <_ZSt8_DestroyIPN2vk4raii14PhysicalDeviceEEvT_S4_+0x41>
	__destroy(__first, __last);
   1b073:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b077:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b07b:	48 89 d6             	mov    %rdx,%rsi
   1b07e:	48 89 c7             	mov    %rax,%rdi
   1b081:	e8 d1 0f 00 00       	call   1c057 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii14PhysicalDeviceEEEvT_S6_>
    }
   1b086:	c9                   	leave
   1b087:	c3                   	ret

000000000001b088 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1b088:	55                   	push   %rbp
   1b089:	48 89 e5             	mov    %rsp,%rbp
   1b08c:	48 83 ec 40          	sub    $0x40,%rsp
   1b090:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b094:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1b098:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1b09c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b0a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b0a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b0a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b0ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b0b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1b0b4:	e8 e5 b0 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b0b9:	84 c0                	test   %al,%al
   1b0bb:	74 0e                	je     1b0cb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   1b0bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b0c1:	48 89 c7             	mov    %rax,%rdi
   1b0c4:	e8 27 a1 fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1b0c9:	eb 18                	jmp    1b0e3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1b0cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b0cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b0d7:	48 89 ce             	mov    %rcx,%rsi
   1b0da:	48 89 c7             	mov    %rax,%rdi
   1b0dd:	e8 90 1e 00 00       	call   1cf72 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   1b0e2:	90                   	nop
   1b0e3:	90                   	nop
   1b0e4:	c9                   	leave
   1b0e5:	c3                   	ret

000000000001b0e6 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1b0e6:	55                   	push   %rbp
   1b0e7:	48 89 e5             	mov    %rsp,%rbp
   1b0ea:	48 83 ec 10          	sub    $0x10,%rsp
   1b0ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b0f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   1b0f6:	e8 a3 b0 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b0fb:	84 c0                	test   %al,%al
   1b0fd:	74 15                	je     1b114 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   1b0ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b107:	48 89 d6             	mov    %rdx,%rsi
   1b10a:	48 89 c7             	mov    %rax,%rdi
   1b10d:	e8 7e 0f 00 00       	call   1c090 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
   1b112:	eb 13                	jmp    1b127 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_+0x41>
	__destroy(__first, __last);
   1b114:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b11c:	48 89 d6             	mov    %rdx,%rsi
   1b11f:	48 89 c7             	mov    %rax,%rdi
   1b122:	e8 a2 0f 00 00       	call   1c0c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
   1b127:	c9                   	leave
   1b128:	c3                   	ret
   1b129:	90                   	nop

000000000001b12a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1b12a:	55                   	push   %rbp
   1b12b:	48 89 e5             	mov    %rsp,%rbp
   1b12e:	48 83 ec 10          	sub    $0x10,%rsp
   1b132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1b136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b13a:	48 89 c7             	mov    %rax,%rdi
   1b13d:	e8 ec 0f 00 00       	call   1c12e <_ZNKSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1b142:	48 89 c7             	mov    %rax,%rdi
   1b145:	e8 a2 0f 00 00       	call   1c0ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
   1b14a:	c9                   	leave
   1b14b:	c3                   	ret

000000000001b14c <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1b14c:	55                   	push   %rbp
   1b14d:	48 89 e5             	mov    %rsp,%rbp
   1b150:	48 83 ec 20          	sub    $0x20,%rsp
   1b154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b158:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b15c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
   1b160:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b168:	48 89 d6             	mov    %rdx,%rsi
   1b16b:	48 89 c7             	mov    %rax,%rdi
   1b16e:	e8 c9 0f 00 00       	call   1c13c <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
   1b173:	c9                   	leave
   1b174:	c3                   	ret
   1b175:	90                   	nop

000000000001b176 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1b176:	55                   	push   %rbp
   1b177:	48 89 e5             	mov    %rsp,%rbp
   1b17a:	48 83 ec 10          	sub    $0x10,%rsp
   1b17e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b182:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1b186:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b18b:	74 15                	je     1b1a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
   1b18d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b191:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b195:	48 89 d6             	mov    %rdx,%rsi
   1b198:	48 89 c7             	mov    %rax,%rdi
   1b19b:	e8 c5 0f 00 00       	call   1c165 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
   1b1a0:	eb 05                	jmp    1b1a7 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
   1b1a2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1b1a7:	c9                   	leave
   1b1a8:	c3                   	ret

000000000001b1a9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1b1a9:	55                   	push   %rbp
   1b1aa:	48 89 e5             	mov    %rsp,%rbp
   1b1ad:	48 83 ec 20          	sub    $0x20,%rsp
   1b1b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b1b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b1b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1b1bd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1b1c1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1b1c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b1c9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1b1cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b1d1:	48 89 c7             	mov    %rax,%rdi
   1b1d4:	e8 13 10 00 00       	call   1c1ec <_ZSt12__relocate_aIPP18VkPhysicalDevice_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1b1d9:	c9                   	leave
   1b1da:	c3                   	ret

000000000001b1db <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1b1db:	55                   	push   %rbp
   1b1dc:	48 89 e5             	mov    %rsp,%rbp
   1b1df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   1b1e3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1b1ea:	ff ff 0f 
      }
   1b1ed:	5d                   	pop    %rbp
   1b1ee:	c3                   	ret

000000000001b1ef <_ZNSt6vectorIN2vk4raii14PhysicalDeviceESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1b1ef:	55                   	push   %rbp
   1b1f0:	48 89 e5             	mov    %rsp,%rbp
   1b1f3:	48 83 ec 20          	sub    $0x20,%rsp
   1b1f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1b1fb:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   1b202:	ff ff 07 
   1b205:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1b209:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b20d:	48 89 c7             	mov    %rax,%rdi
   1b210:	e8 c6 ff ff ff       	call   1b1db <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8max_sizeERKS3_>
   1b215:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1b219:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1b21d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b221:	48 89 d6             	mov    %rdx,%rsi
   1b224:	48 89 c7             	mov    %rax,%rdi
   1b227:	e8 4e cd ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   1b22c:	48 8b 00             	mov    (%rax),%rax
      }
   1b22f:	c9                   	leave
   1b230:	c3                   	ret
   1b231:	90                   	nop

000000000001b232 <_ZNKSt12_Vector_baseIN2vk4raii14PhysicalDeviceESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1b232:	55                   	push   %rbp
   1b233:	48 89 e5             	mov    %rsp,%rbp
   1b236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1b23a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b23e:	5d                   	pop    %rbp
   1b23f:	c3                   	ret

000000000001b240 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
   1b240:	55                   	push   %rbp
   1b241:	48 89 e5             	mov    %rsp,%rbp
   1b244:	48 83 ec 20          	sub    $0x20,%rsp
   1b248:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b24c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b254:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b258:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b25c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   1b260:	e8 39 af fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b265:	84 c0                	test   %al,%al
   1b267:	74 42                	je     1b2ab <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8allocateERS3_m+0x6b>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   1b269:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b26d:	b9 00 00 00 00       	mov    $0x0,%ecx
   1b272:	48 89 c2             	mov    %rax,%rdx
   1b275:	48 c1 e2 04          	shl    $0x4,%rdx
   1b279:	48 c1 e8 3c          	shr    $0x3c,%rax
   1b27d:	48 85 c0             	test   %rax,%rax
   1b280:	74 05                	je     1b287 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8allocateERS3_m+0x47>
   1b282:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b287:	48 89 d0             	mov    %rdx,%rax
   1b28a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b28e:	48 89 c8             	mov    %rcx,%rax
   1b291:	83 e0 01             	and    $0x1,%eax
   1b294:	84 c0                	test   %al,%al
   1b296:	74 05                	je     1b29d <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8allocateERS3_m+0x5d>
	      std::__throw_bad_array_new_length();
   1b298:	e8 e3 9e fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   1b29d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b2a1:	48 89 c7             	mov    %rax,%rdi
   1b2a4:	e8 77 9f fe ff       	call   5220 <_Znwm@plt>
   1b2a9:	eb 19                	jmp    1b2c4 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE8allocateERS3_m+0x84>
	return __allocator_base<_Tp>::allocate(__n, 0);
   1b2ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b2af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b2b3:	ba 00 00 00 00       	mov    $0x0,%edx
   1b2b8:	48 89 ce             	mov    %rcx,%rsi
   1b2bb:	48 89 c7             	mov    %rax,%rdi
   1b2be:	e8 3b 1e 00 00       	call   1d0fe <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE8allocateEmPKv>
   1b2c3:	90                   	nop
      { return __a.allocate(__n); }
   1b2c4:	c9                   	leave
   1b2c5:	c3                   	ret

000000000001b2c6 <_ZSt12__relocate_aIPN2vk4raii14PhysicalDeviceES3_SaIS2_EET0_T_S6_S5_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1b2c6:	55                   	push   %rbp
   1b2c7:	48 89 e5             	mov    %rsp,%rbp
   1b2ca:	41 54                	push   %r12
   1b2cc:	53                   	push   %rbx
   1b2cd:	48 83 ec 20          	sub    $0x20,%rsp
   1b2d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b2d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b2d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1b2dd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   1b2e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b2e5:	48 89 c7             	mov    %rax,%rdi
   1b2e8:	e8 62 0f 00 00       	call   1c24f <_ZSt12__niter_baseIPN2vk4raii14PhysicalDeviceEET_S4_>
   1b2ed:	49 89 c4             	mov    %rax,%r12
   1b2f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b2f4:	48 89 c7             	mov    %rax,%rdi
   1b2f7:	e8 53 0f 00 00       	call   1c24f <_ZSt12__niter_baseIPN2vk4raii14PhysicalDeviceEET_S4_>
   1b2fc:	48 89 c3             	mov    %rax,%rbx
   1b2ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b303:	48 89 c7             	mov    %rax,%rdi
   1b306:	e8 44 0f 00 00       	call   1c24f <_ZSt12__niter_baseIPN2vk4raii14PhysicalDeviceEET_S4_>
   1b30b:	48 89 c7             	mov    %rax,%rdi
   1b30e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b312:	48 89 c1             	mov    %rax,%rcx
   1b315:	4c 89 e2             	mov    %r12,%rdx
   1b318:	48 89 de             	mov    %rbx,%rsi
   1b31b:	e8 3d 0f 00 00       	call   1c25d <_ZSt14__relocate_a_1IPN2vk4raii14PhysicalDeviceES3_SaIS2_EET0_T_S6_S5_RT1_>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   1b320:	48 83 c4 20          	add    $0x20,%rsp
   1b324:	5b                   	pop    %rbx
   1b325:	41 5c                	pop    %r12
   1b327:	5d                   	pop    %rbp
   1b328:	c3                   	ret

000000000001b329 <_ZSt12construct_atIN2vk4raii14PhysicalDeviceEJRKNS1_8InstanceERKP18VkPhysicalDevice_TEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSB_DpOSC_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1b329:	55                   	push   %rbp
   1b32a:	48 89 e5             	mov    %rsp,%rbp
   1b32d:	41 54                	push   %r12
   1b32f:	53                   	push   %rbx
   1b330:	48 83 ec 20          	sub    $0x20,%rsp
   1b334:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b338:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b33c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1b340:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b344:	48 89 c6             	mov    %rax,%rsi
   1b347:	bf 10 00 00 00       	mov    $0x10,%edi
   1b34c:	e8 63 ae fe ff       	call   61b4 <_ZnwmPv>
   1b351:	48 89 c3             	mov    %rax,%rbx
   1b354:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b358:	48 89 c7             	mov    %rax,%rdi
   1b35b:	e8 db e7 ff ff       	call   19b3b <_ZSt7forwardIRKP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS4_E4typeE>
   1b360:	4c 8b 20             	mov    (%rax),%r12
   1b363:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b367:	48 89 c7             	mov    %rax,%rdi
   1b36a:	e8 be e7 ff ff       	call   19b2d <_ZSt7forwardIRKN2vk4raii8InstanceEEOT_RNSt16remove_referenceIS5_E4typeE>
   1b36f:	4c 89 e2             	mov    %r12,%rdx
   1b372:	48 89 c6             	mov    %rax,%rsi
   1b375:	48 89 df             	mov    %rbx,%rdi
   1b378:	e8 f7 bf ff ff       	call   17374 <_ZN2vk4raii14PhysicalDeviceC1ERKNS0_8InstanceEP18VkPhysicalDevice_T>
   1b37d:	48 89 d8             	mov    %rbx,%rax
   1b380:	48 83 c4 20          	add    $0x20,%rsp
   1b384:	5b                   	pop    %rbx
   1b385:	41 5c                	pop    %r12
   1b387:	5d                   	pop    %rbp
   1b388:	c3                   	ret

000000000001b389 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1b389:	55                   	push   %rbp
   1b38a:	48 89 e5             	mov    %rsp,%rbp
   1b38d:	48 83 ec 10          	sub    $0x10,%rsp
   1b391:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b395:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   1b399:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b39d:	48 89 c7             	mov    %rax,%rdi
   1b3a0:	e8 29 0f 00 00       	call   1c2ce <_ZSt10destroy_atIN2vk4raii14PhysicalDeviceEEvPT_>
	}
   1b3a5:	90                   	nop
   1b3a6:	c9                   	leave
   1b3a7:	c3                   	ret

000000000001b3a8 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   1b3a8:	55                   	push   %rbp
   1b3a9:	48 89 e5             	mov    %rsp,%rbp
   1b3ac:	48 83 ec 20          	sub    $0x20,%rsp
   1b3b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b3b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   1b3b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b3bc:	48 8b 00             	mov    (%rax),%rax
   1b3bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b3c3:	48 c1 e2 04          	shl    $0x4,%rdx
   1b3c7:	48 f7 da             	neg    %rdx
   1b3ca:	48 01 d0             	add    %rdx,%rax
   1b3cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b3d1:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1b3d5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1b3d9:	48 89 d6             	mov    %rdx,%rsi
   1b3dc:	48 89 c7             	mov    %rax,%rdi
   1b3df:	e8 a2 f7 ff ff       	call   1ab86 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii14PhysicalDeviceESt6vectorIS3_SaIS3_EEEC1ERKS4_>
   1b3e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b3e8:	c9                   	leave
   1b3e9:	c3                   	ret

000000000001b3ea <_ZNSt11_Tuple_implILm0EJPN2vk4raii16DeviceDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
   1b3ea:	55                   	push   %rbp
   1b3eb:	48 89 e5             	mov    %rsp,%rbp
   1b3ee:	48 83 ec 10          	sub    $0x10,%rsp
   1b3f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
   1b3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b3fa:	48 89 c7             	mov    %rax,%rdi
   1b3fd:	e8 e8 0e 00 00       	call   1c2ea <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii16DeviceDispatcherEEEEC1Ev>
   1b402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b406:	48 89 c7             	mov    %rax,%rdi
   1b409:	e8 f8 0e 00 00       	call   1c306 <_ZNSt10_Head_baseILm0EPN2vk4raii16DeviceDispatcherELb0EEC1Ev>
   1b40e:	90                   	nop
   1b40f:	c9                   	leave
   1b410:	c3                   	ret

000000000001b411 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1b411:	55                   	push   %rbp
   1b412:	48 89 e5             	mov    %rsp,%rbp
   1b415:	48 83 ec 40          	sub    $0x40,%rsp
   1b419:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b41d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1b421:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1b425:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b429:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b42d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b431:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b435:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b439:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1b43d:	e8 5c ad fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b442:	84 c0                	test   %al,%al
   1b444:	74 0e                	je     1b454 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   1b446:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b44a:	48 89 c7             	mov    %rax,%rdi
   1b44d:	e8 9e 9d fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1b452:	eb 18                	jmp    1b46c <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1b454:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b458:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b45c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b460:	48 89 ce             	mov    %rcx,%rsi
   1b463:	48 89 c7             	mov    %rax,%rdi
   1b466:	e8 57 1d 00 00       	call   1d1c2 <_ZNSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   1b46b:	90                   	nop
   1b46c:	90                   	nop
   1b46d:	c9                   	leave
   1b46e:	c3                   	ret

000000000001b46f <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesEEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1b46f:	55                   	push   %rbp
   1b470:	48 89 e5             	mov    %rsp,%rbp
   1b473:	48 83 ec 10          	sub    $0x10,%rsp
   1b477:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b47b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   1b47f:	e8 1a ad fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b484:	84 c0                	test   %al,%al
   1b486:	74 15                	je     1b49d <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesEEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   1b488:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b48c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b490:	48 89 d6             	mov    %rdx,%rsi
   1b493:	48 89 c7             	mov    %rax,%rdi
   1b496:	e8 81 0e 00 00       	call   1c31c <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk21QueueFamilyPropertiesEEEvT_S5_>
   1b49b:	eb 13                	jmp    1b4b0 <_ZSt8_DestroyIPN2vk21QueueFamilyPropertiesEEvT_S3_+0x41>
	__destroy(__first, __last);
   1b49d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b4a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4a5:	48 89 d6             	mov    %rdx,%rsi
   1b4a8:	48 89 c7             	mov    %rax,%rdi
   1b4ab:	e8 a5 0e 00 00       	call   1c355 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk21QueueFamilyPropertiesEEEvT_S5_>
    }
   1b4b0:	c9                   	leave
   1b4b1:	c3                   	ret

000000000001b4b2 <_ZNKSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1b4b2:	55                   	push   %rbp
   1b4b3:	48 89 e5             	mov    %rsp,%rbp
   1b4b6:	48 83 ec 10          	sub    $0x10,%rsp
   1b4ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1b4be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4c2:	48 89 c7             	mov    %rax,%rdi
   1b4c5:	e8 f0 0e 00 00       	call   1c3ba <_ZNKSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1b4ca:	48 89 c7             	mov    %rax,%rdi
   1b4cd:	e8 a6 0e 00 00       	call   1c378 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE11_S_max_sizeERKS2_>
   1b4d2:	c9                   	leave
   1b4d3:	c3                   	ret

000000000001b4d4 <_ZSt27__uninitialized_default_n_aIPN2vk21QueueFamilyPropertiesEmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1b4d4:	55                   	push   %rbp
   1b4d5:	48 89 e5             	mov    %rsp,%rbp
   1b4d8:	48 83 ec 20          	sub    $0x20,%rsp
   1b4dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b4e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b4e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1b4e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b4f0:	48 89 d6             	mov    %rdx,%rsi
   1b4f3:	48 89 c7             	mov    %rax,%rdi
   1b4f6:	e8 cd 0e 00 00       	call   1c3c8 <_ZSt25__uninitialized_default_nIPN2vk21QueueFamilyPropertiesEmET_S3_T0_>
   1b4fb:	c9                   	leave
   1b4fc:	c3                   	ret
   1b4fd:	90                   	nop

000000000001b4fe <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1b4fe:	55                   	push   %rbp
   1b4ff:	48 89 e5             	mov    %rsp,%rbp
   1b502:	48 83 ec 10          	sub    $0x10,%rsp
   1b506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b50a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1b50e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b513:	74 15                	je     1b52a <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE11_M_allocateEm+0x2c>
   1b515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b519:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b51d:	48 89 d6             	mov    %rdx,%rsi
   1b520:	48 89 c7             	mov    %rax,%rdi
   1b523:	e8 c9 0e 00 00       	call   1c3f1 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8allocateERS2_m>
   1b528:	eb 05                	jmp    1b52f <_ZNSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE11_M_allocateEm+0x31>
   1b52a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1b52f:	c9                   	leave
   1b530:	c3                   	ret

000000000001b531 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1b531:	55                   	push   %rbp
   1b532:	48 89 e5             	mov    %rsp,%rbp
   1b535:	48 83 ec 20          	sub    $0x20,%rsp
   1b539:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b53d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b541:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1b545:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1b549:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1b54d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b551:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1b555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b559:	48 89 c7             	mov    %rax,%rdi
   1b55c:	e8 0d 0f 00 00       	call   1c46e <_ZSt12__relocate_aIPN2vk21QueueFamilyPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1b561:	c9                   	leave
   1b562:	c3                   	ret

000000000001b563 <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1b563:	55                   	push   %rbp
   1b564:	48 89 e5             	mov    %rsp,%rbp
   1b567:	48 83 ec 40          	sub    $0x40,%rsp
   1b56b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b56f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1b573:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1b577:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b57b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b57f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b583:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b587:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b58b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1b58f:	e8 0a ac fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b594:	84 c0                	test   %al,%al
   1b596:	74 0e                	je     1b5a6 <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   1b598:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b59c:	48 89 c7             	mov    %rax,%rdi
   1b59f:	e8 4c 9c fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1b5a4:	eb 18                	jmp    1b5be <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1b5a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b5aa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5b2:	48 89 ce             	mov    %rcx,%rsi
   1b5b5:	48 89 c7             	mov    %rax,%rdi
   1b5b8:	e8 2b 1d 00 00       	call   1d2e8 <_ZNSt15__new_allocatorIN2vk19ExtensionPropertiesEE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   1b5bd:	90                   	nop
   1b5be:	90                   	nop
   1b5bf:	c9                   	leave
   1b5c0:	c3                   	ret

000000000001b5c1 <_ZSt8_DestroyIPN2vk19ExtensionPropertiesEEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1b5c1:	55                   	push   %rbp
   1b5c2:	48 89 e5             	mov    %rsp,%rbp
   1b5c5:	48 83 ec 10          	sub    $0x10,%rsp
   1b5c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b5cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   1b5d1:	e8 c8 ab fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b5d6:	84 c0                	test   %al,%al
   1b5d8:	74 15                	je     1b5ef <_ZSt8_DestroyIPN2vk19ExtensionPropertiesEEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   1b5da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b5de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5e2:	48 89 d6             	mov    %rdx,%rsi
   1b5e5:	48 89 c7             	mov    %rax,%rdi
   1b5e8:	e8 e4 0e 00 00       	call   1c4d1 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk19ExtensionPropertiesEEEvT_S5_>
   1b5ed:	eb 13                	jmp    1b602 <_ZSt8_DestroyIPN2vk19ExtensionPropertiesEEvT_S3_+0x41>
	__destroy(__first, __last);
   1b5ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b5f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b5f7:	48 89 d6             	mov    %rdx,%rsi
   1b5fa:	48 89 c7             	mov    %rax,%rdi
   1b5fd:	e8 0b 0f 00 00       	call   1c50d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk19ExtensionPropertiesEEEvT_S5_>
    }
   1b602:	c9                   	leave
   1b603:	c3                   	ret

000000000001b604 <_ZNKSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1b604:	55                   	push   %rbp
   1b605:	48 89 e5             	mov    %rsp,%rbp
   1b608:	48 83 ec 10          	sub    $0x10,%rsp
   1b60c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1b610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b614:	48 89 c7             	mov    %rax,%rdi
   1b617:	e8 56 0f 00 00       	call   1c572 <_ZNKSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1b61c:	48 89 c7             	mov    %rax,%rdi
   1b61f:	e8 0c 0f 00 00       	call   1c530 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE11_S_max_sizeERKS2_>
   1b624:	c9                   	leave
   1b625:	c3                   	ret

000000000001b626 <_ZSt27__uninitialized_default_n_aIPN2vk19ExtensionPropertiesEmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1b626:	55                   	push   %rbp
   1b627:	48 89 e5             	mov    %rsp,%rbp
   1b62a:	48 83 ec 20          	sub    $0x20,%rsp
   1b62e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b632:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b636:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1b63a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b63e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b642:	48 89 d6             	mov    %rdx,%rsi
   1b645:	48 89 c7             	mov    %rax,%rdi
   1b648:	e8 33 0f 00 00       	call   1c580 <_ZSt25__uninitialized_default_nIPN2vk19ExtensionPropertiesEmET_S3_T0_>
   1b64d:	c9                   	leave
   1b64e:	c3                   	ret
   1b64f:	90                   	nop

000000000001b650 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1b650:	55                   	push   %rbp
   1b651:	48 89 e5             	mov    %rsp,%rbp
   1b654:	48 83 ec 10          	sub    $0x10,%rsp
   1b658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b65c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1b660:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b665:	74 15                	je     1b67c <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE11_M_allocateEm+0x2c>
   1b667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b66b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b66f:	48 89 d6             	mov    %rdx,%rsi
   1b672:	48 89 c7             	mov    %rax,%rdi
   1b675:	e8 2f 0f 00 00       	call   1c5a9 <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8allocateERS2_m>
   1b67a:	eb 05                	jmp    1b681 <_ZNSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE11_M_allocateEm+0x31>
   1b67c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1b681:	c9                   	leave
   1b682:	c3                   	ret

000000000001b683 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1b683:	55                   	push   %rbp
   1b684:	48 89 e5             	mov    %rsp,%rbp
   1b687:	48 83 ec 20          	sub    $0x20,%rsp
   1b68b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b68f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b693:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1b697:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1b69b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1b69f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b6a3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1b6a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b6ab:	48 89 c7             	mov    %rax,%rdi
   1b6ae:	e8 73 0f 00 00       	call   1c626 <_ZSt12__relocate_aIPN2vk19ExtensionPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1b6b3:	c9                   	leave
   1b6b4:	c3                   	ret

000000000001b6b5 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1b6b5:	55                   	push   %rbp
   1b6b6:	48 89 e5             	mov    %rsp,%rbp
   1b6b9:	48 83 ec 40          	sub    $0x40,%rsp
   1b6bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b6c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1b6c5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1b6c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b6cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b6d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b6d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b6d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b6dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1b6e1:	e8 b8 aa fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b6e6:	84 c0                	test   %al,%al
   1b6e8:	74 0e                	je     1b6f8 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   1b6ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b6ee:	48 89 c7             	mov    %rax,%rdi
   1b6f1:	e8 fa 9a fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1b6f6:	eb 18                	jmp    1b710 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1b6f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b6fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b704:	48 89 ce             	mov    %rcx,%rsi
   1b707:	48 89 c7             	mov    %rax,%rdi
   1b70a:	e8 09 1d 00 00       	call   1d418 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   1b70f:	90                   	nop
   1b710:	90                   	nop
   1b711:	c9                   	leave
   1b712:	c3                   	ret

000000000001b713 <_ZSt8_DestroyIPN2vk15LayerPropertiesEEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1b713:	55                   	push   %rbp
   1b714:	48 89 e5             	mov    %rsp,%rbp
   1b717:	48 83 ec 10          	sub    $0x10,%rsp
   1b71b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b71f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   1b723:	e8 76 aa fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b728:	84 c0                	test   %al,%al
   1b72a:	74 15                	je     1b741 <_ZSt8_DestroyIPN2vk15LayerPropertiesEEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   1b72c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b734:	48 89 d6             	mov    %rdx,%rsi
   1b737:	48 89 c7             	mov    %rax,%rdi
   1b73a:	e8 4a 0f 00 00       	call   1c689 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk15LayerPropertiesEEEvT_S5_>
   1b73f:	eb 13                	jmp    1b754 <_ZSt8_DestroyIPN2vk15LayerPropertiesEEvT_S3_+0x41>
	__destroy(__first, __last);
   1b741:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b745:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b749:	48 89 d6             	mov    %rdx,%rsi
   1b74c:	48 89 c7             	mov    %rax,%rdi
   1b74f:	e8 71 0f 00 00       	call   1c6c5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk15LayerPropertiesEEEvT_S5_>
    }
   1b754:	c9                   	leave
   1b755:	c3                   	ret

000000000001b756 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1b756:	55                   	push   %rbp
   1b757:	48 89 e5             	mov    %rsp,%rbp
   1b75a:	48 83 ec 10          	sub    $0x10,%rsp
   1b75e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1b762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b766:	48 89 c7             	mov    %rax,%rdi
   1b769:	e8 bc 0f 00 00       	call   1c72a <_ZNKSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   1b76e:	48 89 c7             	mov    %rax,%rdi
   1b771:	e8 72 0f 00 00       	call   1c6e8 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE11_S_max_sizeERKS2_>
   1b776:	c9                   	leave
   1b777:	c3                   	ret

000000000001b778 <_ZSt27__uninitialized_default_n_aIPN2vk15LayerPropertiesEmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1b778:	55                   	push   %rbp
   1b779:	48 89 e5             	mov    %rsp,%rbp
   1b77c:	48 83 ec 20          	sub    $0x20,%rsp
   1b780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b788:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1b78c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b794:	48 89 d6             	mov    %rdx,%rsi
   1b797:	48 89 c7             	mov    %rax,%rdi
   1b79a:	e8 99 0f 00 00       	call   1c738 <_ZSt25__uninitialized_default_nIPN2vk15LayerPropertiesEmET_S3_T0_>
   1b79f:	c9                   	leave
   1b7a0:	c3                   	ret
   1b7a1:	90                   	nop

000000000001b7a2 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1b7a2:	55                   	push   %rbp
   1b7a3:	48 89 e5             	mov    %rsp,%rbp
   1b7a6:	48 83 ec 10          	sub    $0x10,%rsp
   1b7aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b7ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1b7b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1b7b7:	74 15                	je     1b7ce <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE11_M_allocateEm+0x2c>
   1b7b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7bd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b7c1:	48 89 d6             	mov    %rdx,%rsi
   1b7c4:	48 89 c7             	mov    %rax,%rdi
   1b7c7:	e8 95 0f 00 00       	call   1c761 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8allocateERS2_m>
   1b7cc:	eb 05                	jmp    1b7d3 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE11_M_allocateEm+0x31>
   1b7ce:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1b7d3:	c9                   	leave
   1b7d4:	c3                   	ret

000000000001b7d5 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1b7d5:	55                   	push   %rbp
   1b7d6:	48 89 e5             	mov    %rsp,%rbp
   1b7d9:	48 83 ec 20          	sub    $0x20,%rsp
   1b7dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b7e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1b7e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1b7e9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1b7ed:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1b7f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b7f5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1b7f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b7fd:	48 89 c7             	mov    %rax,%rdi
   1b800:	e8 d9 0f 00 00       	call   1c7de <_ZSt12__relocate_aIPN2vk15LayerPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1b805:	c9                   	leave
   1b806:	c3                   	ret

000000000001b807 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1b807:	55                   	push   %rbp
   1b808:	48 89 e5             	mov    %rsp,%rbp
   1b80b:	48 83 ec 40          	sub    $0x40,%rsp
   1b80f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1b813:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1b817:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1b81b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b81f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1b823:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1b827:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1b82b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1b82f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1b833:	e8 66 a9 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1b838:	84 c0                	test   %al,%al
   1b83a:	74 0e                	je     1b84a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   1b83c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1b840:	48 89 c7             	mov    %rax,%rdi
   1b843:	e8 a8 99 fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1b848:	eb 18                	jmp    1b862 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1b84a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1b84e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1b852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b856:	48 89 ce             	mov    %rcx,%rsi
   1b859:	48 89 c7             	mov    %rax,%rdi
   1b85c:	e8 e7 1c 00 00       	call   1d548 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   1b861:	90                   	nop
   1b862:	90                   	nop
   1b863:	c9                   	leave
   1b864:	c3                   	ret

000000000001b865 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   1b865:	55                   	push   %rbp
   1b866:	48 89 e5             	mov    %rsp,%rbp
   1b869:	53                   	push   %rbx
   1b86a:	48 83 ec 28          	sub    $0x28,%rsp
   1b86e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b872:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1b876:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1b87a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1b87e:	48 89 c7             	mov    %rax,%rdi
   1b881:	e8 bb 0f 00 00       	call   1c841 <_ZSt12__miter_baseIPKPKcET_S4_>
   1b886:	48 89 c3             	mov    %rax,%rbx
   1b889:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b88d:	48 89 c7             	mov    %rax,%rdi
   1b890:	e8 ac 0f 00 00       	call   1c841 <_ZSt12__miter_baseIPKPKcET_S4_>
   1b895:	48 89 c1             	mov    %rax,%rcx
   1b898:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1b89c:	48 89 c2             	mov    %rax,%rdx
   1b89f:	48 89 de             	mov    %rbx,%rsi
   1b8a2:	48 89 cf             	mov    %rcx,%rdi
   1b8a5:	e8 a5 0f 00 00       	call   1c84f <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   1b8aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b8ae:	c9                   	leave
   1b8af:	c3                   	ret

000000000001b8b0 <_ZSt8_DestroyIPKcEvPT_>:
    _Destroy(_Tp* __pointer)
   1b8b0:	55                   	push   %rbp
   1b8b1:	48 89 e5             	mov    %rsp,%rbp
   1b8b4:	48 83 ec 10          	sub    $0x10,%rsp
   1b8b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   1b8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8c0:	48 89 c7             	mov    %rax,%rdi
   1b8c3:	e8 f1 0f 00 00       	call   1c8b9 <_ZSt10destroy_atIPKcEvPT_>
    }
   1b8c8:	90                   	nop
   1b8c9:	c9                   	leave
   1b8ca:	c3                   	ret
   1b8cb:	90                   	nop

000000000001b8cc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
   1b8cc:	55                   	push   %rbp
   1b8cd:	48 89 e5             	mov    %rsp,%rbp
   1b8d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b8d4:	90                   	nop
   1b8d5:	5d                   	pop    %rbp
   1b8d6:	c3                   	ret

000000000001b8d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1b8d7:	55                   	push   %rbp
   1b8d8:	48 89 e5             	mov    %rsp,%rbp
   1b8db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1b8df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8e3:	48 8b 40 18          	mov    0x18(%rax),%rax
   1b8e7:	5d                   	pop    %rbp
   1b8e8:	c3                   	ret

000000000001b8e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1b8e9:	55                   	push   %rbp
   1b8ea:	48 89 e5             	mov    %rsp,%rbp
   1b8ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1b8f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b8f5:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b8f9:	5d                   	pop    %rbp
   1b8fa:	c3                   	ret
   1b8fb:	90                   	nop

000000000001b8fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1b8fc:	55                   	push   %rbp
   1b8fd:	48 89 e5             	mov    %rsp,%rbp
   1b900:	48 83 ec 10          	sub    $0x10,%rsp
   1b904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1b908:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   1b90c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b914:	48 89 d6             	mov    %rdx,%rsi
   1b917:	48 89 c7             	mov    %rax,%rdi
   1b91a:	e8 a5 0f 00 00       	call   1c8c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   1b91f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1b923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b927:	48 89 d6             	mov    %rdx,%rsi
   1b92a:	48 89 c7             	mov    %rax,%rdi
   1b92d:	e8 d0 0f 00 00       	call   1c902 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   1b932:	90                   	nop
   1b933:	c9                   	leave
   1b934:	c3                   	ret
   1b935:	90                   	nop

000000000001b936 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   1b936:	55                   	push   %rbp
   1b937:	48 89 e5             	mov    %rsp,%rbp
   1b93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1b93e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b942:	48 8b 40 10          	mov    0x10(%rax),%rax
   1b946:	5d                   	pop    %rbp
   1b947:	c3                   	ret

000000000001b948 <_ZNSt14__array_traitsIcLm256EE6_S_ptrERA256_Kc>:
      _S_ptr(const _Type& __t) noexcept
   1b948:	55                   	push   %rbp
   1b949:	48 89 e5             	mov    %rsp,%rbp
   1b94c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
   1b950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b954:	5d                   	pop    %rbp
   1b955:	c3                   	ret

000000000001b956 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   1b956:	55                   	push   %rbp
   1b957:	48 89 e5             	mov    %rsp,%rbp
   1b95a:	53                   	push   %rbx
   1b95b:	48 83 ec 18          	sub    $0x18,%rsp
   1b95f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1b963:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   1b967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b96b:	48 89 c7             	mov    %rax,%rdi
   1b96e:	e8 c5 0f 00 00       	call   1c938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1b973:	48 89 c3             	mov    %rax,%rbx
   1b976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b97a:	48 89 c7             	mov    %rax,%rdi
   1b97d:	e8 b0 f2 ff ff       	call   1ac32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1b982:	48 89 c6             	mov    %rax,%rsi
   1b985:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1b989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b98d:	48 89 d1             	mov    %rdx,%rcx
   1b990:	48 89 da             	mov    %rbx,%rdx
   1b993:	48 89 c7             	mov    %rax,%rdi
   1b996:	e8 af 0f 00 00       	call   1c94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   1b99b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1b99f:	c9                   	leave
   1b9a0:	c3                   	ret
   1b9a1:	90                   	nop

000000000001b9a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1b9a2:	55                   	push   %rbp
   1b9a3:	48 89 e5             	mov    %rsp,%rbp
   1b9a6:	48 83 ec 20          	sub    $0x20,%rsp
   1b9aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   1b9ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1b9b2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1b9b6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1b9ba:	48 89 d6             	mov    %rdx,%rsi
   1b9bd:	48 89 c7             	mov    %rax,%rdi
   1b9c0:	e8 3d 06 00 00       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1b9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9c9:	c9                   	leave
   1b9ca:	c3                   	ret
   1b9cb:	90                   	nop

000000000001b9cc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   1b9cc:	55                   	push   %rbp
   1b9cd:	48 89 e5             	mov    %rsp,%rbp
   1b9d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   1b9d4:	90                   	nop
   1b9d5:	5d                   	pop    %rbp
   1b9d6:	c3                   	ret
   1b9d7:	90                   	nop

000000000001b9d8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   1b9d8:	55                   	push   %rbp
   1b9d9:	48 89 e5             	mov    %rsp,%rbp
   1b9dc:	48 83 ec 10          	sub    $0x10,%rsp
   1b9e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1b9e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1b9e8:	48 83 c0 20          	add    $0x20,%rax
   1b9ec:	48 89 c7             	mov    %rax,%rdi
   1b9ef:	e8 ec 0f 00 00       	call   1c9e0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1b9f4:	c9                   	leave
   1b9f5:	c3                   	ret

000000000001b9f6 <_ZStssIcSt11char_traitsIcESaIcEEDTcl21__char_traits_cmp_catIT0_ELi0EEERKNSt7__cxx1112basic_stringIT_S3_T1_EESB_>:
   *  @return  A value indicating whether `__lhs` is less than, equal to,
   *	       greater than, or incomparable with `__rhs`.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    constexpr auto
    operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   1b9f6:	55                   	push   %rbp
   1b9f7:	48 89 e5             	mov    %rsp,%rbp
   1b9fa:	48 83 ec 10          	sub    $0x10,%rsp
   1b9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ba02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
    -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
    { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
   1ba06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1ba0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba0e:	48 89 d6             	mov    %rdx,%rsi
   1ba11:	48 89 c7             	mov    %rax,%rdi
   1ba14:	e8 e1 0f 00 00       	call   1c9fa <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
   1ba19:	89 c7                	mov    %eax,%edi
   1ba1b:	e8 ff f2 ff ff       	call   1ad1f <_ZNSt8__detail21__char_traits_cmp_catISt11char_traitsIcEEEDai>
   1ba20:	c9                   	leave
   1ba21:	c3                   	ret

000000000001ba22 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ba22:	55                   	push   %rbp
   1ba23:	48 89 e5             	mov    %rsp,%rbp
   1ba26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ba2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba2e:	5d                   	pop    %rbp
   1ba2f:	c3                   	ret

000000000001ba30 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   1ba30:	55                   	push   %rbp
   1ba31:	48 89 e5             	mov    %rsp,%rbp
   1ba34:	53                   	push   %rbx
   1ba35:	48 83 ec 18          	sub    $0x18,%rsp
   1ba39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ba3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   1ba41:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1ba45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ba49:	48 89 c7             	mov    %rax,%rdi
   1ba4c:	e8 d1 ff ff ff       	call   1ba22 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1ba51:	48 89 c6             	mov    %rax,%rsi
   1ba54:	48 89 df             	mov    %rbx,%rdi
   1ba57:	e8 42 10 00 00       	call   1ca9e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   1ba5c:	90                   	nop
   1ba5d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ba61:	c9                   	leave
   1ba62:	c3                   	ret

000000000001ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ba63:	55                   	push   %rbp
   1ba64:	48 89 e5             	mov    %rsp,%rbp
   1ba67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ba6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba6f:	5d                   	pop    %rbp
   1ba70:	c3                   	ret

000000000001ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ba71:	55                   	push   %rbp
   1ba72:	48 89 e5             	mov    %rsp,%rbp
   1ba75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ba79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba7d:	5d                   	pop    %rbp
   1ba7e:	c3                   	ret

000000000001ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ba7f:	55                   	push   %rbp
   1ba80:	48 89 e5             	mov    %rsp,%rbp
   1ba83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ba87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ba8b:	5d                   	pop    %rbp
   1ba8c:	c3                   	ret
   1ba8d:	90                   	nop

000000000001ba8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   1ba8e:	55                   	push   %rbp
   1ba8f:	48 89 e5             	mov    %rsp,%rbp
   1ba92:	41 54                	push   %r12
   1ba94:	53                   	push   %rbx
   1ba95:	48 83 ec 30          	sub    $0x30,%rsp
   1ba99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ba9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1baa1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1baa5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1baa9:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   1baad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bab1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1bab5:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   1bab8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1babc:	48 89 c7             	mov    %rax,%rdi
   1babf:	e8 bb ff ff ff       	call   1ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1bac4:	49 89 c4             	mov    %rax,%r12
   1bac7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bacb:	48 89 c7             	mov    %rax,%rdi
   1bace:	e8 9e ff ff ff       	call   1ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1bad3:	48 89 c3             	mov    %rax,%rbx
   1bad6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1bada:	48 89 c7             	mov    %rax,%rdi
   1badd:	e8 81 ff ff ff       	call   1ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1bae2:	48 89 c6             	mov    %rax,%rsi
   1bae5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1bae9:	4c 89 e1             	mov    %r12,%rcx
   1baec:	48 89 da             	mov    %rbx,%rdx
   1baef:	48 89 c7             	mov    %rax,%rdi
   1baf2:	e8 db 0f 00 00       	call   1cad2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   1baf7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bafb:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   1baff:	90                   	nop
   1bb00:	48 83 c4 30          	add    $0x30,%rsp
   1bb04:	5b                   	pop    %rbx
   1bb05:	41 5c                	pop    %r12
   1bb07:	5d                   	pop    %rbp
   1bb08:	c3                   	ret
   1bb09:	90                   	nop

000000000001bb0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   1bb0a:	55                   	push   %rbp
   1bb0b:	48 89 e5             	mov    %rsp,%rbp
   1bb0e:	48 83 ec 10          	sub    $0x10,%rsp
   1bb12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   1bb16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb1a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1bb1e:	48 85 c0             	test   %rax,%rax
   1bb21:	74 1a                	je     1bb3d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   1bb23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bb27:	48 8b 00             	mov    (%rax),%rax
   1bb2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1bb2e:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   1bb32:	48 89 d6             	mov    %rdx,%rsi
   1bb35:	48 89 c7             	mov    %rax,%rdi
   1bb38:	e8 bf fd ff ff       	call   1b8fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   1bb3d:	90                   	nop
   1bb3e:	c9                   	leave
   1bb3f:	c3                   	ret

000000000001bb40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1bb40:	55                   	push   %rbp
   1bb41:	48 89 e5             	mov    %rsp,%rbp
   1bb44:	53                   	push   %rbx
   1bb45:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1bb4c:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   1bb53:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   1bb5a:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   1bb61:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1bb68:	48 89 c7             	mov    %rax,%rdi
   1bb6b:	e8 de 0f 00 00       	call   1cb4e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   1bb70:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   1bb77:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1bb7e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bb85:	48 89 c7             	mov    %rax,%rdi
   1bb88:	e8 ab 0d 00 00       	call   1c938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1bb8d:	48 39 c3             	cmp    %rax,%rbx
   1bb90:	0f 94 c0             	sete   %al
   1bb93:	84 c0                	test   %al,%al
   1bb95:	0f 84 c8 00 00 00    	je     1bc63 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   1bb9b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bba2:	48 89 c7             	mov    %rax,%rdi
   1bba5:	e8 cc 0f 00 00       	call   1cb76 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   1bbaa:	48 85 c0             	test   %rax,%rax
   1bbad:	74 44                	je     1bbf3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1bbaf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1bbb6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bbbd:	48 89 c7             	mov    %rax,%rdi
   1bbc0:	e8 c3 0f 00 00       	call   1cb88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1bbc5:	48 8b 00             	mov    (%rax),%rax
   1bbc8:	48 89 c7             	mov    %rax,%rdi
   1bbcb:	e8 ca 0f 00 00       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1bbd0:	48 89 c1             	mov    %rax,%rcx
   1bbd3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1bbda:	48 89 c2             	mov    %rax,%rdx
   1bbdd:	48 89 ce             	mov    %rcx,%rsi
   1bbe0:	48 89 df             	mov    %rbx,%rdi
   1bbe3:	e8 5e f1 ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1bbe8:	84 c0                	test   %al,%al
   1bbea:	74 07                	je     1bbf3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1bbec:	b8 01 00 00 00       	mov    $0x1,%eax
   1bbf1:	eb 05                	jmp    1bbf8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   1bbf3:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   1bbf8:	84 c0                	test   %al,%al
   1bbfa:	74 49                	je     1bc45 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   1bbfc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bc03:	48 89 c7             	mov    %rax,%rdi
   1bc06:	e8 7d 0f 00 00       	call   1cb88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1bc0b:	48 89 c2             	mov    %rax,%rdx
   1bc0e:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   1bc15:	00 00 00 00 
   1bc19:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   1bc20:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1bc27:	48 89 ce             	mov    %rcx,%rsi
   1bc2a:	48 89 c7             	mov    %rax,%rdi
   1bc2d:	e8 82 0f 00 00       	call   1cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>
   1bc32:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1bc39:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1bc40:	e9 43 03 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1bc45:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1bc4c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bc53:	48 89 d6             	mov    %rdx,%rsi
   1bc56:	48 89 c7             	mov    %rax,%rdi
   1bc59:	e8 86 0f 00 00       	call   1cbe4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1bc5e:	e9 25 03 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   1bc63:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1bc6a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1bc71:	48 89 c7             	mov    %rax,%rdi
   1bc74:	e8 21 0f 00 00       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1bc79:	48 89 c2             	mov    %rax,%rdx
   1bc7c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1bc83:	48 89 c6             	mov    %rax,%rsi
   1bc86:	48 89 df             	mov    %rbx,%rdi
   1bc89:	e8 b8 f0 ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1bc8e:	84 c0                	test   %al,%al
   1bc90:	0f 84 66 01 00 00    	je     1bdfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   1bc96:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1bc9d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   1bca4:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1bcab:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bcb2:	48 89 c7             	mov    %rax,%rdi
   1bcb5:	e8 a0 10 00 00       	call   1cd5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1bcba:	48 8b 00             	mov    (%rax),%rax
   1bcbd:	48 39 c3             	cmp    %rax,%rbx
   1bcc0:	0f 94 c0             	sete   %al
   1bcc3:	84 c0                	test   %al,%al
   1bcc5:	74 4c                	je     1bd13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   1bcc7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bcce:	48 89 c7             	mov    %rax,%rdi
   1bcd1:	e8 84 10 00 00       	call   1cd5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1bcd6:	48 89 c3             	mov    %rax,%rbx
   1bcd9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bce0:	48 89 c7             	mov    %rax,%rdi
   1bce3:	e8 72 10 00 00       	call   1cd5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1bce8:	48 89 c1             	mov    %rax,%rcx
   1bceb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1bcf2:	48 89 da             	mov    %rbx,%rdx
   1bcf5:	48 89 ce             	mov    %rcx,%rsi
   1bcf8:	48 89 c7             	mov    %rax,%rdi
   1bcfb:	e8 6c 10 00 00       	call   1cd6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_EEOT_OT0_>
   1bd00:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1bd07:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1bd0e:	e9 75 02 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   1bd13:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1bd1a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   1bd21:	48 89 c7             	mov    %rax,%rdi
   1bd24:	e8 87 10 00 00       	call   1cdb0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   1bd29:	48 8b 00             	mov    (%rax),%rax
   1bd2c:	48 89 c7             	mov    %rax,%rdi
   1bd2f:	e8 66 0e 00 00       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1bd34:	48 89 c1             	mov    %rax,%rcx
   1bd37:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1bd3e:	48 89 c2             	mov    %rax,%rdx
   1bd41:	48 89 ce             	mov    %rcx,%rsi
   1bd44:	48 89 df             	mov    %rbx,%rdi
   1bd47:	e8 fa ef ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1bd4c:	84 c0                	test   %al,%al
   1bd4e:	0f 84 8a 00 00 00    	je     1bdde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   1bd54:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   1bd5b:	48 89 c7             	mov    %rax,%rdi
   1bd5e:	e8 74 fb ff ff       	call   1b8d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1bd63:	48 85 c0             	test   %rax,%rax
   1bd66:	0f 94 c0             	sete   %al
   1bd69:	84 c0                	test   %al,%al
   1bd6b:	74 3e                	je     1bdab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   1bd6d:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   1bd74:	00 00 00 00 
   1bd78:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   1bd7f:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   1bd86:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1bd8d:	48 89 ce             	mov    %rcx,%rsi
   1bd90:	48 89 c7             	mov    %rax,%rdi
   1bd93:	e8 1c 0e 00 00       	call   1cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>
   1bd98:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1bd9f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   1bda6:	e9 dd 01 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   1bdab:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1bdb2:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   1bdb9:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1bdc0:	48 89 ce             	mov    %rcx,%rsi
   1bdc3:	48 89 c7             	mov    %rax,%rdi
   1bdc6:	e8 a1 0f 00 00       	call   1cd6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_EEOT_OT0_>
   1bdcb:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1bdd2:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1bdd9:	e9 aa 01 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1bdde:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1bde5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bdec:	48 89 d6             	mov    %rdx,%rsi
   1bdef:	48 89 c7             	mov    %rax,%rdi
   1bdf2:	e8 ed 0d 00 00       	call   1cbe4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1bdf7:	e9 8c 01 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   1bdfc:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1be03:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1be0a:	48 89 c7             	mov    %rax,%rdi
   1be0d:	e8 88 0d 00 00       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1be12:	48 89 c1             	mov    %rax,%rcx
   1be15:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1be1c:	48 89 c2             	mov    %rax,%rdx
   1be1f:	48 89 ce             	mov    %rcx,%rsi
   1be22:	48 89 df             	mov    %rbx,%rdi
   1be25:	e8 1c ef ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1be2a:	84 c0                	test   %al,%al
   1be2c:	0f 84 2c 01 00 00    	je     1bf5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   1be32:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1be39:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   1be40:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1be47:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1be4e:	48 89 c7             	mov    %rax,%rdi
   1be51:	e8 32 0d 00 00       	call   1cb88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1be56:	48 8b 00             	mov    (%rax),%rax
   1be59:	48 39 c3             	cmp    %rax,%rbx
   1be5c:	0f 94 c0             	sete   %al
   1be5f:	84 c0                	test   %al,%al
   1be61:	74 3a                	je     1be9d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   1be63:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1be6a:	48 89 c7             	mov    %rax,%rdi
   1be6d:	e8 16 0d 00 00       	call   1cb88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1be72:	48 89 c2             	mov    %rax,%rdx
   1be75:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   1be7c:	00 
   1be7d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   1be81:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1be85:	48 89 ce             	mov    %rcx,%rsi
   1be88:	48 89 c7             	mov    %rax,%rdi
   1be8b:	e8 24 0d 00 00       	call   1cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>
   1be90:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1be94:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1be98:	e9 eb 00 00 00       	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   1be9d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1bea4:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   1beab:	48 89 c7             	mov    %rax,%rdi
   1beae:	e8 25 0f 00 00       	call   1cdd8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   1beb3:	48 8b 00             	mov    (%rax),%rax
   1beb6:	48 89 c7             	mov    %rax,%rdi
   1beb9:	e8 dc 0c 00 00       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1bebe:	48 89 c2             	mov    %rax,%rdx
   1bec1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1bec8:	48 89 c6             	mov    %rax,%rsi
   1becb:	48 89 df             	mov    %rbx,%rdi
   1bece:	e8 73 ee ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1bed3:	84 c0                	test   %al,%al
   1bed5:	74 6c                	je     1bf43 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   1bed7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1bede:	48 89 c7             	mov    %rax,%rdi
   1bee1:	e8 f1 f9 ff ff       	call   1b8d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1bee6:	48 85 c0             	test   %rax,%rax
   1bee9:	0f 94 c0             	sete   %al
   1beec:	84 c0                	test   %al,%al
   1beee:	74 2c                	je     1bf1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   1bef0:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   1bef7:	00 
   1bef8:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1beff:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   1bf03:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1bf07:	48 89 ce             	mov    %rcx,%rsi
   1bf0a:	48 89 c7             	mov    %rax,%rdi
   1bf0d:	e8 a2 0c 00 00       	call   1cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>
   1bf12:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1bf16:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1bf1a:	eb 6c                	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   1bf1c:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   1bf23:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   1bf2a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1bf2e:	48 89 ce             	mov    %rcx,%rsi
   1bf31:	48 89 c7             	mov    %rax,%rdi
   1bf34:	e8 33 0e 00 00       	call   1cd6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_EEOT_OT0_>
   1bf39:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1bf3d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1bf41:	eb 45                	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1bf43:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1bf4a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1bf51:	48 89 d6             	mov    %rdx,%rsi
   1bf54:	48 89 c7             	mov    %rax,%rdi
   1bf57:	e8 88 0c 00 00       	call   1cbe4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1bf5c:	eb 2a                	jmp    1bf88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   1bf5e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1bf65:	00 
   1bf66:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1bf6a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   1bf71:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1bf75:	48 89 ce             	mov    %rcx,%rsi
   1bf78:	48 89 c7             	mov    %rax,%rdi
   1bf7b:	e8 34 0c 00 00       	call   1cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>
   1bf80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1bf84:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1bf88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1bf8c:	c9                   	leave
   1bf8d:	c3                   	ret

000000000001bf8e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   1bf8e:	55                   	push   %rbp
   1bf8f:	48 89 e5             	mov    %rsp,%rbp
   1bf92:	48 83 ec 10          	sub    $0x10,%rsp
   1bf96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   1bf9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1bf9e:	48 8b 40 08          	mov    0x8(%rax),%rax
   1bfa2:	48 89 c7             	mov    %rax,%rdi
   1bfa5:	e8 56 0e 00 00       	call   1ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1bfaa:	c9                   	leave
   1bfab:	c3                   	ret

000000000001bfac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   1bfac:	55                   	push   %rbp
   1bfad:	48 89 e5             	mov    %rsp,%rbp
   1bfb0:	48 83 ec 30          	sub    $0x30,%rsp
   1bfb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1bfb8:	48 89 d1             	mov    %rdx,%rcx
   1bfbb:	48 89 f0             	mov    %rsi,%rax
   1bfbe:	48 89 fa             	mov    %rdi,%rdx
   1bfc1:	48 89 ca             	mov    %rcx,%rdx
   1bfc4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1bfc8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   1bfcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bfd0:	48 8b 00             	mov    (%rax),%rax
   1bfd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1bfd7:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1bfdb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1bfdf:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   1bfe3:	48 89 c7             	mov    %rax,%rdi
   1bfe6:	e8 41 0e 00 00       	call   1ce2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   1bfeb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   1bfef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1bff3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1bffa:	00 
	  return __it;
   1bffb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1bfff:	c9                   	leave
   1c000:	c3                   	ret
   1c001:	90                   	nop

000000000001c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1c002:	55                   	push   %rbp
   1c003:	48 89 e5             	mov    %rsp,%rbp
   1c006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c00a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1c00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c012:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1c016:	48 89 10             	mov    %rdx,(%rax)
   1c019:	90                   	nop
   1c01a:	5d                   	pop    %rbp
   1c01b:	c3                   	ret

000000000001c01c <_ZNSt22_Optional_payload_baseIjEC1IJjEEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   1c01c:	55                   	push   %rbp
   1c01d:	48 89 e5             	mov    %rsp,%rbp
   1c020:	53                   	push   %rbx
   1c021:	48 83 ec 28          	sub    $0x28,%rsp
   1c025:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c029:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   1c02d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1c031:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c035:	48 89 c7             	mov    %rax,%rdi
   1c038:	e8 51 ea ff ff       	call   1aa8e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   1c03d:	48 89 c6             	mov    %rax,%rsi
   1c040:	48 89 df             	mov    %rbx,%rdi
   1c043:	e8 a8 0e 00 00       	call   1cef0 <_ZNSt22_Optional_payload_baseIjE8_StorageIjLb1EEC1IJjEEESt10in_place_tDpOT_>
	  _M_engaged(true)
   1c048:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c04c:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	{ }
   1c050:	90                   	nop
   1c051:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c055:	c9                   	leave
   1c056:	c3                   	ret

000000000001c057 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii14PhysicalDeviceEEEvT_S6_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   1c057:	55                   	push   %rbp
   1c058:	48 89 e5             	mov    %rsp,%rbp
   1c05b:	48 83 ec 10          	sub    $0x10,%rsp
   1c05f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c063:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   1c067:	eb 19                	jmp    1c082 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii14PhysicalDeviceEEEvT_S6_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   1c069:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c06d:	48 89 c7             	mov    %rax,%rdi
   1c070:	e8 d3 0e 00 00       	call   1cf48 <_ZSt11__addressofIN2vk4raii14PhysicalDeviceEEPT_RS3_>
   1c075:	48 89 c7             	mov    %rax,%rdi
   1c078:	e8 d9 0e 00 00       	call   1cf56 <_ZSt8_DestroyIN2vk4raii14PhysicalDeviceEEvPT_>
	  for (; __first != __last; ++__first)
   1c07d:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)
   1c082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c086:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1c08a:	75 dd                	jne    1c069 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk4raii14PhysicalDeviceEEEvT_S6_+0x12>
	}
   1c08c:	90                   	nop
   1c08d:	90                   	nop
   1c08e:	c9                   	leave
   1c08f:	c3                   	ret

000000000001c090 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   1c090:	55                   	push   %rbp
   1c091:	48 89 e5             	mov    %rsp,%rbp
   1c094:	48 83 ec 10          	sub    $0x10,%rsp
   1c098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c09c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   1c0a0:	eb 19                	jmp    1c0bb <_ZNSt12_Destroy_auxILb0EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   1c0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0a6:	48 89 c7             	mov    %rax,%rdi
   1c0a9:	e8 f5 0e 00 00       	call   1cfa3 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   1c0ae:	48 89 c7             	mov    %rax,%rdi
   1c0b1:	e8 fb 0e 00 00       	call   1cfb1 <_ZSt8_DestroyIP18VkPhysicalDevice_TEvPT_>
	  for (; __first != __last; ++__first)
   1c0b6:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   1c0bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c0bf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1c0c3:	75 dd                	jne    1c0a2 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_+0x12>
	}
   1c0c5:	90                   	nop
   1c0c6:	90                   	nop
   1c0c7:	c9                   	leave
   1c0c8:	c3                   	ret

000000000001c0c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1c0c9:	55                   	push   %rbp
   1c0ca:	48 89 e5             	mov    %rsp,%rbp
   1c0cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c0d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c0d5:	90                   	nop
   1c0d6:	5d                   	pop    %rbp
   1c0d7:	c3                   	ret

000000000001c0d8 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1c0d8:	55                   	push   %rbp
   1c0d9:	48 89 e5             	mov    %rsp,%rbp
   1c0dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   1c0e0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1c0e7:	ff ff 1f 
      }
   1c0ea:	5d                   	pop    %rbp
   1c0eb:	c3                   	ret

000000000001c0ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1c0ec:	55                   	push   %rbp
   1c0ed:	48 89 e5             	mov    %rsp,%rbp
   1c0f0:	48 83 ec 20          	sub    $0x20,%rsp
   1c0f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1c0f8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1c0ff:	ff ff 0f 
   1c102:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1c106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c10a:	48 89 c7             	mov    %rax,%rdi
   1c10d:	e8 c6 ff ff ff       	call   1c0d8 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
   1c112:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1c116:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1c11a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1c11e:	48 89 d6             	mov    %rdx,%rsi
   1c121:	48 89 c7             	mov    %rax,%rdi
   1c124:	e8 51 be ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   1c129:	48 8b 00             	mov    (%rax),%rax
      }
   1c12c:	c9                   	leave
   1c12d:	c3                   	ret

000000000001c12e <_ZNKSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1c12e:	55                   	push   %rbp
   1c12f:	48 89 e5             	mov    %rsp,%rbp
   1c132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1c136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c13a:	5d                   	pop    %rbp
   1c13b:	c3                   	ret

000000000001c13c <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1c13c:	55                   	push   %rbp
   1c13d:	48 89 e5             	mov    %rsp,%rbp
   1c140:	48 83 ec 20          	sub    $0x20,%rsp
   1c144:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c148:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1c14c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1c150:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c154:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c158:	48 89 d6             	mov    %rdx,%rsi
   1c15b:	48 89 c7             	mov    %rax,%rdi
   1c15e:	e8 69 0e 00 00       	call   1cfcc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
   1c163:	c9                   	leave
   1c164:	c3                   	ret

000000000001c165 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1c165:	55                   	push   %rbp
   1c166:	48 89 e5             	mov    %rsp,%rbp
   1c169:	48 83 ec 20          	sub    $0x20,%rsp
   1c16d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c171:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c179:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c17d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c181:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   1c185:	e8 14 a0 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1c18a:	84 c0                	test   %al,%al
   1c18c:	74 43                	je     1c1d1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m+0x6c>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   1c18e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c192:	b9 00 00 00 00       	mov    $0x0,%ecx
   1c197:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1c19e:	00 
   1c19f:	48 c1 e8 3d          	shr    $0x3d,%rax
   1c1a3:	48 85 c0             	test   %rax,%rax
   1c1a6:	74 05                	je     1c1ad <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m+0x48>
   1c1a8:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c1ad:	48 89 d0             	mov    %rdx,%rax
   1c1b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1c1b4:	48 89 c8             	mov    %rcx,%rax
   1c1b7:	83 e0 01             	and    $0x1,%eax
   1c1ba:	84 c0                	test   %al,%al
   1c1bc:	74 05                	je     1c1c3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m+0x5e>
	      std::__throw_bad_array_new_length();
   1c1be:	e8 bd 8f fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   1c1c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c1c7:	48 89 c7             	mov    %rax,%rdi
   1c1ca:	e8 51 90 fe ff       	call   5220 <_Znwm@plt>
   1c1cf:	eb 19                	jmp    1c1ea <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m+0x85>
	return __allocator_base<_Tp>::allocate(__n, 0);
   1c1d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c1d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c1d9:	ba 00 00 00 00       	mov    $0x0,%edx
   1c1de:	48 89 ce             	mov    %rcx,%rsi
   1c1e1:	48 89 c7             	mov    %rax,%rdi
   1c1e4:	e8 25 17 00 00       	call   1d90e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
   1c1e9:	90                   	nop
      { return __a.allocate(__n); }
   1c1ea:	c9                   	leave
   1c1eb:	c3                   	ret

000000000001c1ec <_ZSt12__relocate_aIPP18VkPhysicalDevice_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1c1ec:	55                   	push   %rbp
   1c1ed:	48 89 e5             	mov    %rsp,%rbp
   1c1f0:	41 54                	push   %r12
   1c1f2:	53                   	push   %rbx
   1c1f3:	48 83 ec 20          	sub    $0x20,%rsp
   1c1f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c1fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c1ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1c203:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1c207:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c20b:	48 89 c7             	mov    %rax,%rdi
   1c20e:	e8 16 0e 00 00       	call   1d029 <_ZSt12__niter_baseIPP18VkPhysicalDevice_TET_S3_>
   1c213:	49 89 c4             	mov    %rax,%r12
   1c216:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c21a:	48 89 c7             	mov    %rax,%rdi
   1c21d:	e8 07 0e 00 00       	call   1d029 <_ZSt12__niter_baseIPP18VkPhysicalDevice_TET_S3_>
   1c222:	48 89 c3             	mov    %rax,%rbx
   1c225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c229:	48 89 c7             	mov    %rax,%rdi
   1c22c:	e8 f8 0d 00 00       	call   1d029 <_ZSt12__niter_baseIPP18VkPhysicalDevice_TET_S3_>
   1c231:	48 89 c7             	mov    %rax,%rdi
   1c234:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c238:	48 89 c1             	mov    %rax,%rcx
   1c23b:	4c 89 e2             	mov    %r12,%rdx
   1c23e:	48 89 de             	mov    %rbx,%rsi
   1c241:	e8 0f 0e 00 00       	call   1d055 <_ZSt14__relocate_a_1IP18VkPhysicalDevice_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1c246:	48 83 c4 20          	add    $0x20,%rsp
   1c24a:	5b                   	pop    %rbx
   1c24b:	41 5c                	pop    %r12
   1c24d:	5d                   	pop    %rbp
   1c24e:	c3                   	ret

000000000001c24f <_ZSt12__niter_baseIPN2vk4raii14PhysicalDeviceEET_S4_>:
    __niter_base(_Iterator __it)
   1c24f:	55                   	push   %rbp
   1c250:	48 89 e5             	mov    %rsp,%rbp
   1c253:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1c257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c25b:	5d                   	pop    %rbp
   1c25c:	c3                   	ret

000000000001c25d <_ZSt14__relocate_a_1IPN2vk4raii14PhysicalDeviceES3_SaIS2_EET0_T_S6_S5_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   1c25d:	55                   	push   %rbp
   1c25e:	48 89 e5             	mov    %rsp,%rbp
   1c261:	53                   	push   %rbx
   1c262:	48 83 ec 38          	sub    $0x38,%rsp
   1c266:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1c26a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1c26e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1c272:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   1c276:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1c27a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   1c27e:	eb 3a                	jmp    1c2ba <_ZSt14__relocate_a_1IPN2vk4raii14PhysicalDeviceES3_SaIS2_EET0_T_S6_S5_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
   1c280:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c284:	48 89 c7             	mov    %rax,%rdi
   1c287:	e8 bc 0c 00 00       	call   1cf48 <_ZSt11__addressofIN2vk4raii14PhysicalDeviceEEPT_RS3_>
   1c28c:	48 89 c3             	mov    %rax,%rbx
   1c28f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c293:	48 89 c7             	mov    %rax,%rdi
   1c296:	e8 ad 0c 00 00       	call   1cf48 <_ZSt11__addressofIN2vk4raii14PhysicalDeviceEEPT_RS3_>
   1c29b:	48 89 c1             	mov    %rax,%rcx
   1c29e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c2a2:	48 89 c2             	mov    %rax,%rdx
   1c2a5:	48 89 de             	mov    %rbx,%rsi
   1c2a8:	48 89 cf             	mov    %rcx,%rdi
   1c2ab:	e8 af 0e 00 00       	call   1d15f <_ZSt19__relocate_object_aIN2vk4raii14PhysicalDeviceES2_SaIS2_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   1c2b0:	48 83 45 d8 10       	addq   $0x10,-0x28(%rbp)
   1c2b5:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
   1c2ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c2be:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1c2c2:	75 bc                	jne    1c280 <_ZSt14__relocate_a_1IPN2vk4raii14PhysicalDeviceES3_SaIS2_EET0_T_S6_S5_RT1_+0x23>
      return __cur;
   1c2c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1c2c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c2cc:	c9                   	leave
   1c2cd:	c3                   	ret

000000000001c2ce <_ZSt10destroy_atIN2vk4raii14PhysicalDeviceEEvPT_>:
    destroy_at(_Tp* __location)
   1c2ce:	55                   	push   %rbp
   1c2cf:	48 89 e5             	mov    %rsp,%rbp
   1c2d2:	48 83 ec 10          	sub    $0x10,%rsp
   1c2d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__location->~_Tp();
   1c2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c2de:	48 89 c7             	mov    %rax,%rdi
   1c2e1:	e8 08 d2 fe ff       	call   94ee <_ZN2vk4raii14PhysicalDeviceD1Ev>
    }
   1c2e6:	90                   	nop
   1c2e7:	c9                   	leave
   1c2e8:	c3                   	ret
   1c2e9:	90                   	nop

000000000001c2ea <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii16DeviceDispatcherEEEEC1Ev>:
      _Tuple_impl()
   1c2ea:	55                   	push   %rbp
   1c2eb:	48 89 e5             	mov    %rsp,%rbp
   1c2ee:	48 83 ec 10          	sub    $0x10,%rsp
   1c2f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
   1c2f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c2fa:	48 89 c7             	mov    %rax,%rdi
   1c2fd:	e8 b4 0e 00 00       	call   1d1b6 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii16DeviceDispatcherEELb1EEC1Ev>
   1c302:	90                   	nop
   1c303:	c9                   	leave
   1c304:	c3                   	ret
   1c305:	90                   	nop

000000000001c306 <_ZNSt10_Head_baseILm0EPN2vk4raii16DeviceDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
   1c306:	55                   	push   %rbp
   1c307:	48 89 e5             	mov    %rsp,%rbp
   1c30a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
   1c30e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c312:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1c319:	90                   	nop
   1c31a:	5d                   	pop    %rbp
   1c31b:	c3                   	ret

000000000001c31c <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk21QueueFamilyPropertiesEEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   1c31c:	55                   	push   %rbp
   1c31d:	48 89 e5             	mov    %rsp,%rbp
   1c320:	48 83 ec 10          	sub    $0x10,%rsp
   1c324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c328:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   1c32c:	eb 19                	jmp    1c347 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk21QueueFamilyPropertiesEEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   1c32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c332:	48 89 c7             	mov    %rax,%rdi
   1c335:	e8 c1 0e 00 00       	call   1d1fb <_ZSt11__addressofIN2vk21QueueFamilyPropertiesEEPT_RS2_>
   1c33a:	48 89 c7             	mov    %rax,%rdi
   1c33d:	e8 c7 0e 00 00       	call   1d209 <_ZSt8_DestroyIN2vk21QueueFamilyPropertiesEEvPT_>
	  for (; __first != __last; ++__first)
   1c342:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   1c347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c34b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1c34f:	75 dd                	jne    1c32e <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk21QueueFamilyPropertiesEEEvT_S5_+0x12>
	}
   1c351:	90                   	nop
   1c352:	90                   	nop
   1c353:	c9                   	leave
   1c354:	c3                   	ret

000000000001c355 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk21QueueFamilyPropertiesEEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1c355:	55                   	push   %rbp
   1c356:	48 89 e5             	mov    %rsp,%rbp
   1c359:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c35d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c361:	90                   	nop
   1c362:	5d                   	pop    %rbp
   1c363:	c3                   	ret

000000000001c364 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1c364:	55                   	push   %rbp
   1c365:	48 89 e5             	mov    %rsp,%rbp
   1c368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   1c36c:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
   1c373:	aa aa 0a 
      }
   1c376:	5d                   	pop    %rbp
   1c377:	c3                   	ret

000000000001c378 <_ZNSt6vectorIN2vk21QueueFamilyPropertiesESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1c378:	55                   	push   %rbp
   1c379:	48 89 e5             	mov    %rsp,%rbp
   1c37c:	48 83 ec 20          	sub    $0x20,%rsp
   1c380:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1c384:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   1c38b:	55 55 05 
   1c38e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1c392:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c396:	48 89 c7             	mov    %rax,%rdi
   1c399:	e8 c6 ff ff ff       	call   1c364 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8max_sizeERKS2_>
   1c39e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1c3a2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1c3a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1c3aa:	48 89 d6             	mov    %rdx,%rsi
   1c3ad:	48 89 c7             	mov    %rax,%rdi
   1c3b0:	e8 c5 bb ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   1c3b5:	48 8b 00             	mov    (%rax),%rax
      }
   1c3b8:	c9                   	leave
   1c3b9:	c3                   	ret

000000000001c3ba <_ZNKSt12_Vector_baseIN2vk21QueueFamilyPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1c3ba:	55                   	push   %rbp
   1c3bb:	48 89 e5             	mov    %rsp,%rbp
   1c3be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1c3c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c3c6:	5d                   	pop    %rbp
   1c3c7:	c3                   	ret

000000000001c3c8 <_ZSt25__uninitialized_default_nIPN2vk21QueueFamilyPropertiesEmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1c3c8:	55                   	push   %rbp
   1c3c9:	48 89 e5             	mov    %rsp,%rbp
   1c3cc:	48 83 ec 20          	sub    $0x20,%rsp
   1c3d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c3d4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1c3d8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1c3dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c3e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c3e4:	48 89 d6             	mov    %rdx,%rsi
   1c3e7:	48 89 c7             	mov    %rax,%rdi
   1c3ea:	e8 35 0e 00 00       	call   1d224 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk21QueueFamilyPropertiesEmEET_S5_T0_>
    }
   1c3ef:	c9                   	leave
   1c3f0:	c3                   	ret

000000000001c3f1 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1c3f1:	55                   	push   %rbp
   1c3f2:	48 89 e5             	mov    %rsp,%rbp
   1c3f5:	48 83 ec 20          	sub    $0x20,%rsp
   1c3f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c3fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c401:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c405:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c409:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c40d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   1c411:	e8 88 9d fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1c416:	84 c0                	test   %al,%al
   1c418:	74 39                	je     1c453 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8allocateERS2_m+0x62>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   1c41a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c41e:	b9 00 00 00 00       	mov    $0x0,%ecx
   1c423:	ba 18 00 00 00       	mov    $0x18,%edx
   1c428:	48 f7 e2             	mul    %rdx
   1c42b:	71 05                	jno    1c432 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8allocateERS2_m+0x41>
   1c42d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c432:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1c436:	48 89 c8             	mov    %rcx,%rax
   1c439:	83 e0 01             	and    $0x1,%eax
   1c43c:	84 c0                	test   %al,%al
   1c43e:	74 05                	je     1c445 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8allocateERS2_m+0x54>
	      std::__throw_bad_array_new_length();
   1c440:	e8 3b 8d fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   1c445:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c449:	48 89 c7             	mov    %rax,%rdi
   1c44c:	e8 cf 8d fe ff       	call   5220 <_Znwm@plt>
   1c451:	eb 19                	jmp    1c46c <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE8allocateERS2_m+0x7b>
	return __allocator_base<_Tp>::allocate(__n, 0);
   1c453:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c45b:	ba 00 00 00 00       	mov    $0x0,%edx
   1c460:	48 89 ce             	mov    %rcx,%rsi
   1c463:	48 89 c7             	mov    %rax,%rdi
   1c466:	e8 af 16 00 00       	call   1db1a <_ZNSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE8allocateEmPKv>
   1c46b:	90                   	nop
      { return __a.allocate(__n); }
   1c46c:	c9                   	leave
   1c46d:	c3                   	ret

000000000001c46e <_ZSt12__relocate_aIPN2vk21QueueFamilyPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1c46e:	55                   	push   %rbp
   1c46f:	48 89 e5             	mov    %rsp,%rbp
   1c472:	41 54                	push   %r12
   1c474:	53                   	push   %rbx
   1c475:	48 83 ec 20          	sub    $0x20,%rsp
   1c479:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c47d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c481:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1c485:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1c489:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c48d:	48 89 c7             	mov    %rax,%rdi
   1c490:	e8 d4 0d 00 00       	call   1d269 <_ZSt12__niter_baseIPN2vk21QueueFamilyPropertiesEET_S3_>
   1c495:	49 89 c4             	mov    %rax,%r12
   1c498:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c49c:	48 89 c7             	mov    %rax,%rdi
   1c49f:	e8 c5 0d 00 00       	call   1d269 <_ZSt12__niter_baseIPN2vk21QueueFamilyPropertiesEET_S3_>
   1c4a4:	48 89 c3             	mov    %rax,%rbx
   1c4a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c4ab:	48 89 c7             	mov    %rax,%rdi
   1c4ae:	e8 b6 0d 00 00       	call   1d269 <_ZSt12__niter_baseIPN2vk21QueueFamilyPropertiesEET_S3_>
   1c4b3:	48 89 c7             	mov    %rax,%rdi
   1c4b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c4ba:	48 89 c1             	mov    %rax,%rcx
   1c4bd:	4c 89 e2             	mov    %r12,%rdx
   1c4c0:	48 89 de             	mov    %rbx,%rsi
   1c4c3:	e8 af 0d 00 00       	call   1d277 <_ZSt14__relocate_a_1IPN2vk21QueueFamilyPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>
    }
   1c4c8:	48 83 c4 20          	add    $0x20,%rsp
   1c4cc:	5b                   	pop    %rbx
   1c4cd:	41 5c                	pop    %r12
   1c4cf:	5d                   	pop    %rbp
   1c4d0:	c3                   	ret

000000000001c4d1 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk19ExtensionPropertiesEEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   1c4d1:	55                   	push   %rbp
   1c4d2:	48 89 e5             	mov    %rsp,%rbp
   1c4d5:	48 83 ec 10          	sub    $0x10,%rsp
   1c4d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c4dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   1c4e1:	eb 1c                	jmp    1c4ff <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk19ExtensionPropertiesEEEvT_S5_+0x2e>
	    std::_Destroy(std::__addressof(*__first));
   1c4e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c4e7:	48 89 c7             	mov    %rax,%rdi
   1c4ea:	e8 33 0e 00 00       	call   1d322 <_ZSt11__addressofIN2vk19ExtensionPropertiesEEPT_RS2_>
   1c4ef:	48 89 c7             	mov    %rax,%rdi
   1c4f2:	e8 39 0e 00 00       	call   1d330 <_ZSt8_DestroyIN2vk19ExtensionPropertiesEEvPT_>
	  for (; __first != __last; ++__first)
   1c4f7:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   1c4fe:	00 
   1c4ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c503:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1c507:	75 da                	jne    1c4e3 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk19ExtensionPropertiesEEEvT_S5_+0x12>
	}
   1c509:	90                   	nop
   1c50a:	90                   	nop
   1c50b:	c9                   	leave
   1c50c:	c3                   	ret

000000000001c50d <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk19ExtensionPropertiesEEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1c50d:	55                   	push   %rbp
   1c50e:	48 89 e5             	mov    %rsp,%rbp
   1c511:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c515:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c519:	90                   	nop
   1c51a:	5d                   	pop    %rbp
   1c51b:	c3                   	ret

000000000001c51c <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1c51c:	55                   	push   %rbp
   1c51d:	48 89 e5             	mov    %rsp,%rbp
   1c520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   1c524:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
   1c52b:	0f fc 00 
      }
   1c52e:	5d                   	pop    %rbp
   1c52f:	c3                   	ret

000000000001c530 <_ZNSt6vectorIN2vk19ExtensionPropertiesESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1c530:	55                   	push   %rbp
   1c531:	48 89 e5             	mov    %rsp,%rbp
   1c534:	48 83 ec 20          	sub    $0x20,%rsp
   1c538:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1c53c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1c543:	07 7e 00 
   1c546:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1c54a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c54e:	48 89 c7             	mov    %rax,%rdi
   1c551:	e8 c6 ff ff ff       	call   1c51c <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8max_sizeERKS2_>
   1c556:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1c55a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1c55e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1c562:	48 89 d6             	mov    %rdx,%rsi
   1c565:	48 89 c7             	mov    %rax,%rdi
   1c568:	e8 0d ba ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   1c56d:	48 8b 00             	mov    (%rax),%rax
      }
   1c570:	c9                   	leave
   1c571:	c3                   	ret

000000000001c572 <_ZNKSt12_Vector_baseIN2vk19ExtensionPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1c572:	55                   	push   %rbp
   1c573:	48 89 e5             	mov    %rsp,%rbp
   1c576:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1c57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c57e:	5d                   	pop    %rbp
   1c57f:	c3                   	ret

000000000001c580 <_ZSt25__uninitialized_default_nIPN2vk19ExtensionPropertiesEmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1c580:	55                   	push   %rbp
   1c581:	48 89 e5             	mov    %rsp,%rbp
   1c584:	48 83 ec 20          	sub    $0x20,%rsp
   1c588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c58c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1c590:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1c594:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c598:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c59c:	48 89 d6             	mov    %rdx,%rsi
   1c59f:	48 89 c7             	mov    %rax,%rdi
   1c5a2:	e8 a4 0d 00 00       	call   1d34b <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk19ExtensionPropertiesEmEET_S5_T0_>
    }
   1c5a7:	c9                   	leave
   1c5a8:	c3                   	ret

000000000001c5a9 <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1c5a9:	55                   	push   %rbp
   1c5aa:	48 89 e5             	mov    %rsp,%rbp
   1c5ad:	48 83 ec 20          	sub    $0x20,%rsp
   1c5b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c5b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c5b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c5bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c5c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c5c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   1c5c9:	e8 d0 9b fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1c5ce:	84 c0                	test   %al,%al
   1c5d0:	74 39                	je     1c60b <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8allocateERS2_m+0x62>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   1c5d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c5d6:	b9 00 00 00 00       	mov    $0x0,%ecx
   1c5db:	ba 04 01 00 00       	mov    $0x104,%edx
   1c5e0:	48 f7 e2             	mul    %rdx
   1c5e3:	71 05                	jno    1c5ea <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8allocateERS2_m+0x41>
   1c5e5:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c5ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1c5ee:	48 89 c8             	mov    %rcx,%rax
   1c5f1:	83 e0 01             	and    $0x1,%eax
   1c5f4:	84 c0                	test   %al,%al
   1c5f6:	74 05                	je     1c5fd <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8allocateERS2_m+0x54>
	      std::__throw_bad_array_new_length();
   1c5f8:	e8 83 8b fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   1c5fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c601:	48 89 c7             	mov    %rax,%rdi
   1c604:	e8 17 8c fe ff       	call   5220 <_Znwm@plt>
   1c609:	eb 19                	jmp    1c624 <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE8allocateERS2_m+0x7b>
	return __allocator_base<_Tp>::allocate(__n, 0);
   1c60b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c60f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c613:	ba 00 00 00 00       	mov    $0x0,%edx
   1c618:	48 89 ce             	mov    %rcx,%rsi
   1c61b:	48 89 c7             	mov    %rax,%rdi
   1c61e:	e8 6b 16 00 00       	call   1dc8e <_ZNSt15__new_allocatorIN2vk19ExtensionPropertiesEE8allocateEmPKv>
   1c623:	90                   	nop
      { return __a.allocate(__n); }
   1c624:	c9                   	leave
   1c625:	c3                   	ret

000000000001c626 <_ZSt12__relocate_aIPN2vk19ExtensionPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1c626:	55                   	push   %rbp
   1c627:	48 89 e5             	mov    %rsp,%rbp
   1c62a:	41 54                	push   %r12
   1c62c:	53                   	push   %rbx
   1c62d:	48 83 ec 20          	sub    $0x20,%rsp
   1c631:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c635:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c639:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1c63d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1c641:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c645:	48 89 c7             	mov    %rax,%rdi
   1c648:	e8 46 0d 00 00       	call   1d393 <_ZSt12__niter_baseIPN2vk19ExtensionPropertiesEET_S3_>
   1c64d:	49 89 c4             	mov    %rax,%r12
   1c650:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c654:	48 89 c7             	mov    %rax,%rdi
   1c657:	e8 37 0d 00 00       	call   1d393 <_ZSt12__niter_baseIPN2vk19ExtensionPropertiesEET_S3_>
   1c65c:	48 89 c3             	mov    %rax,%rbx
   1c65f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c663:	48 89 c7             	mov    %rax,%rdi
   1c666:	e8 28 0d 00 00       	call   1d393 <_ZSt12__niter_baseIPN2vk19ExtensionPropertiesEET_S3_>
   1c66b:	48 89 c7             	mov    %rax,%rdi
   1c66e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c672:	48 89 c1             	mov    %rax,%rcx
   1c675:	4c 89 e2             	mov    %r12,%rdx
   1c678:	48 89 de             	mov    %rbx,%rsi
   1c67b:	e8 21 0d 00 00       	call   1d3a1 <_ZSt14__relocate_a_1IPN2vk19ExtensionPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>
    }
   1c680:	48 83 c4 20          	add    $0x20,%rsp
   1c684:	5b                   	pop    %rbx
   1c685:	41 5c                	pop    %r12
   1c687:	5d                   	pop    %rbp
   1c688:	c3                   	ret

000000000001c689 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk15LayerPropertiesEEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   1c689:	55                   	push   %rbp
   1c68a:	48 89 e5             	mov    %rsp,%rbp
   1c68d:	48 83 ec 10          	sub    $0x10,%rsp
   1c691:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c695:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   1c699:	eb 1c                	jmp    1c6b7 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk15LayerPropertiesEEEvT_S5_+0x2e>
	    std::_Destroy(std::__addressof(*__first));
   1c69b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c69f:	48 89 c7             	mov    %rax,%rdi
   1c6a2:	e8 ab 0d 00 00       	call   1d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>
   1c6a7:	48 89 c7             	mov    %rax,%rdi
   1c6aa:	e8 b1 0d 00 00       	call   1d460 <_ZSt8_DestroyIN2vk15LayerPropertiesEEvPT_>
	  for (; __first != __last; ++__first)
   1c6af:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
   1c6b6:	00 
   1c6b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c6bb:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1c6bf:	75 da                	jne    1c69b <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk15LayerPropertiesEEEvT_S5_+0x12>
	}
   1c6c1:	90                   	nop
   1c6c2:	90                   	nop
   1c6c3:	c9                   	leave
   1c6c4:	c3                   	ret

000000000001c6c5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk15LayerPropertiesEEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1c6c5:	55                   	push   %rbp
   1c6c6:	48 89 e5             	mov    %rsp,%rbp
   1c6c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c6cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1c6d1:	90                   	nop
   1c6d2:	5d                   	pop    %rbp
   1c6d3:	c3                   	ret

000000000001c6d4 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1c6d4:	55                   	push   %rbp
   1c6d5:	48 89 e5             	mov    %rsp,%rbp
   1c6d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   1c6dc:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1c6e3:	07 7e 00 
      }
   1c6e6:	5d                   	pop    %rbp
   1c6e7:	c3                   	ret

000000000001c6e8 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1c6e8:	55                   	push   %rbp
   1c6e9:	48 89 e5             	mov    %rsp,%rbp
   1c6ec:	48 83 ec 20          	sub    $0x20,%rsp
   1c6f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1c6f4:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   1c6fb:	03 3f 00 
   1c6fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1c702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c706:	48 89 c7             	mov    %rax,%rdi
   1c709:	e8 c6 ff ff ff       	call   1c6d4 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8max_sizeERKS2_>
   1c70e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1c712:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1c716:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1c71a:	48 89 d6             	mov    %rdx,%rsi
   1c71d:	48 89 c7             	mov    %rax,%rdi
   1c720:	e8 55 b8 ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   1c725:	48 8b 00             	mov    (%rax),%rax
      }
   1c728:	c9                   	leave
   1c729:	c3                   	ret

000000000001c72a <_ZNKSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1c72a:	55                   	push   %rbp
   1c72b:	48 89 e5             	mov    %rsp,%rbp
   1c72e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1c732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c736:	5d                   	pop    %rbp
   1c737:	c3                   	ret

000000000001c738 <_ZSt25__uninitialized_default_nIPN2vk15LayerPropertiesEmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1c738:	55                   	push   %rbp
   1c739:	48 89 e5             	mov    %rsp,%rbp
   1c73c:	48 83 ec 20          	sub    $0x20,%rsp
   1c740:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c744:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1c748:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1c74c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1c750:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c754:	48 89 d6             	mov    %rdx,%rsi
   1c757:	48 89 c7             	mov    %rax,%rdi
   1c75a:	e8 1c 0d 00 00       	call   1d47b <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk15LayerPropertiesEmEET_S5_T0_>
    }
   1c75f:	c9                   	leave
   1c760:	c3                   	ret

000000000001c761 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1c761:	55                   	push   %rbp
   1c762:	48 89 e5             	mov    %rsp,%rbp
   1c765:	48 83 ec 20          	sub    $0x20,%rsp
   1c769:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c76d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c775:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1c779:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c77d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   1c781:	e8 18 9a fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1c786:	84 c0                	test   %al,%al
   1c788:	74 39                	je     1c7c3 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8allocateERS2_m+0x62>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   1c78a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c78e:	b9 00 00 00 00       	mov    $0x0,%ecx
   1c793:	ba 08 02 00 00       	mov    $0x208,%edx
   1c798:	48 f7 e2             	mul    %rdx
   1c79b:	71 05                	jno    1c7a2 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8allocateERS2_m+0x41>
   1c79d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c7a2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1c7a6:	48 89 c8             	mov    %rcx,%rax
   1c7a9:	83 e0 01             	and    $0x1,%eax
   1c7ac:	84 c0                	test   %al,%al
   1c7ae:	74 05                	je     1c7b5 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8allocateERS2_m+0x54>
	      std::__throw_bad_array_new_length();
   1c7b0:	e8 cb 89 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   1c7b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c7b9:	48 89 c7             	mov    %rax,%rdi
   1c7bc:	e8 5f 8a fe ff       	call   5220 <_Znwm@plt>
   1c7c1:	eb 19                	jmp    1c7dc <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE8allocateERS2_m+0x7b>
	return __allocator_base<_Tp>::allocate(__n, 0);
   1c7c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1c7c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c7cb:	ba 00 00 00 00       	mov    $0x0,%edx
   1c7d0:	48 89 ce             	mov    %rcx,%rsi
   1c7d3:	48 89 c7             	mov    %rax,%rdi
   1c7d6:	e8 49 16 00 00       	call   1de24 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEE8allocateEmPKv>
   1c7db:	90                   	nop
      { return __a.allocate(__n); }
   1c7dc:	c9                   	leave
   1c7dd:	c3                   	ret

000000000001c7de <_ZSt12__relocate_aIPN2vk15LayerPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1c7de:	55                   	push   %rbp
   1c7df:	48 89 e5             	mov    %rsp,%rbp
   1c7e2:	41 54                	push   %r12
   1c7e4:	53                   	push   %rbx
   1c7e5:	48 83 ec 20          	sub    $0x20,%rsp
   1c7e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c7ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c7f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1c7f5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1c7f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c7fd:	48 89 c7             	mov    %rax,%rdi
   1c800:	e8 be 0c 00 00       	call   1d4c3 <_ZSt12__niter_baseIPN2vk15LayerPropertiesEET_S3_>
   1c805:	49 89 c4             	mov    %rax,%r12
   1c808:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c80c:	48 89 c7             	mov    %rax,%rdi
   1c80f:	e8 af 0c 00 00       	call   1d4c3 <_ZSt12__niter_baseIPN2vk15LayerPropertiesEET_S3_>
   1c814:	48 89 c3             	mov    %rax,%rbx
   1c817:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c81b:	48 89 c7             	mov    %rax,%rdi
   1c81e:	e8 a0 0c 00 00       	call   1d4c3 <_ZSt12__niter_baseIPN2vk15LayerPropertiesEET_S3_>
   1c823:	48 89 c7             	mov    %rax,%rdi
   1c826:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c82a:	48 89 c1             	mov    %rax,%rcx
   1c82d:	4c 89 e2             	mov    %r12,%rdx
   1c830:	48 89 de             	mov    %rbx,%rsi
   1c833:	e8 99 0c 00 00       	call   1d4d1 <_ZSt14__relocate_a_1IPN2vk15LayerPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>
    }
   1c838:	48 83 c4 20          	add    $0x20,%rsp
   1c83c:	5b                   	pop    %rbx
   1c83d:	41 5c                	pop    %r12
   1c83f:	5d                   	pop    %rbp
   1c840:	c3                   	ret

000000000001c841 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   1c841:	55                   	push   %rbp
   1c842:	48 89 e5             	mov    %rsp,%rbp
   1c845:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1c849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c84d:	5d                   	pop    %rbp
   1c84e:	c3                   	ret

000000000001c84f <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1c84f:	55                   	push   %rbp
   1c850:	48 89 e5             	mov    %rsp,%rbp
   1c853:	41 54                	push   %r12
   1c855:	53                   	push   %rbx
   1c856:	48 83 ec 20          	sub    $0x20,%rsp
   1c85a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c85e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1c862:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1c866:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1c86a:	48 89 c7             	mov    %rax,%rdi
   1c86d:	e8 15 0d 00 00       	call   1d587 <_ZSt12__niter_baseIPPKcET_S3_>
   1c872:	49 89 c4             	mov    %rax,%r12
   1c875:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c879:	48 89 c7             	mov    %rax,%rdi
   1c87c:	e8 f8 0c 00 00       	call   1d579 <_ZSt12__niter_baseIPKPKcET_S4_>
   1c881:	48 89 c3             	mov    %rax,%rbx
   1c884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c888:	48 89 c7             	mov    %rax,%rdi
   1c88b:	e8 e9 0c 00 00       	call   1d579 <_ZSt12__niter_baseIPKPKcET_S4_>
   1c890:	4c 89 e2             	mov    %r12,%rdx
   1c893:	48 89 de             	mov    %rbx,%rsi
   1c896:	48 89 c7             	mov    %rax,%rdi
   1c899:	e8 f7 0c 00 00       	call   1d595 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1c89e:	48 89 c2             	mov    %rax,%rdx
   1c8a1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1c8a5:	48 89 d6             	mov    %rdx,%rsi
   1c8a8:	48 89 c7             	mov    %rax,%rdi
   1c8ab:	e8 12 0d 00 00       	call   1d5c2 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1c8b0:	48 83 c4 20          	add    $0x20,%rsp
   1c8b4:	5b                   	pop    %rbx
   1c8b5:	41 5c                	pop    %r12
   1c8b7:	5d                   	pop    %rbp
   1c8b8:	c3                   	ret

000000000001c8b9 <_ZSt10destroy_atIPKcEvPT_>:
    destroy_at(_Tp* __location)
   1c8b9:	55                   	push   %rbp
   1c8ba:	48 89 e5             	mov    %rsp,%rbp
   1c8bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   1c8c1:	90                   	nop
   1c8c2:	5d                   	pop    %rbp
   1c8c3:	c3                   	ret

000000000001c8c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1c8c4:	55                   	push   %rbp
   1c8c5:	48 89 e5             	mov    %rsp,%rbp
   1c8c8:	53                   	push   %rbx
   1c8c9:	48 83 ec 18          	sub    $0x18,%rsp
   1c8cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1c8d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   1c8d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1c8d9:	48 89 c7             	mov    %rax,%rdi
   1c8dc:	e8 f7 f0 ff ff       	call   1b9d8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1c8e1:	48 89 c3             	mov    %rax,%rbx
   1c8e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1c8e8:	48 89 c7             	mov    %rax,%rdi
   1c8eb:	e8 e4 0c 00 00       	call   1d5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1c8f0:	48 89 de             	mov    %rbx,%rsi
   1c8f3:	48 89 c7             	mov    %rax,%rdi
   1c8f6:	e8 e7 0c 00 00       	call   1d5e2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   1c8fb:	90                   	nop
   1c8fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c900:	c9                   	leave
   1c901:	c3                   	ret

000000000001c902 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1c902:	55                   	push   %rbp
   1c903:	48 89 e5             	mov    %rsp,%rbp
   1c906:	48 83 ec 10          	sub    $0x10,%rsp
   1c90a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1c90e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   1c912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c916:	48 89 c7             	mov    %rax,%rdi
   1c919:	e8 b6 0c 00 00       	call   1d5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1c91e:	48 89 c1             	mov    %rax,%rcx
   1c921:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1c925:	ba 01 00 00 00       	mov    $0x1,%edx
   1c92a:	48 89 c6             	mov    %rax,%rsi
   1c92d:	48 89 cf             	mov    %rcx,%rdi
   1c930:	e8 cc 0c 00 00       	call   1d601 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   1c935:	90                   	nop
   1c936:	c9                   	leave
   1c937:	c3                   	ret

000000000001c938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   1c938:	55                   	push   %rbp
   1c939:	48 89 e5             	mov    %rsp,%rbp
   1c93c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1c940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c944:	48 83 c0 08          	add    $0x8,%rax
   1c948:	5d                   	pop    %rbp
   1c949:	c3                   	ret

000000000001c94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1c94a:	55                   	push   %rbp
   1c94b:	48 89 e5             	mov    %rsp,%rbp
   1c94e:	53                   	push   %rbx
   1c94f:	48 83 ec 38          	sub    $0x38,%rsp
   1c953:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1c957:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1c95b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1c95f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   1c963:	eb 56                	jmp    1c9bb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1c965:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1c969:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c96d:	48 89 c7             	mov    %rax,%rdi
   1c970:	e8 8b 04 00 00       	call   1ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1c975:	48 89 c1             	mov    %rax,%rcx
   1c978:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1c97c:	48 89 c2             	mov    %rax,%rdx
   1c97f:	48 89 ce             	mov    %rcx,%rsi
   1c982:	48 89 df             	mov    %rbx,%rdi
   1c985:	e8 bc e3 ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1c98a:	83 f0 01             	xor    $0x1,%eax
   1c98d:	84 c0                	test   %al,%al
   1c98f:	74 1a                	je     1c9ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   1c991:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c995:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1c999:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c99d:	48 89 c7             	mov    %rax,%rdi
   1c9a0:	e8 44 ef ff ff       	call   1b8e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1c9a5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1c9a9:	eb 10                	jmp    1c9bb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   1c9ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1c9af:	48 89 c7             	mov    %rax,%rdi
   1c9b2:	e8 20 ef ff ff       	call   1b8d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1c9b7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   1c9bb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1c9c0:	75 a3                	jne    1c965 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   1c9c2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1c9c6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1c9ca:	48 89 d6             	mov    %rdx,%rsi
   1c9cd:	48 89 c7             	mov    %rax,%rdi
   1c9d0:	e8 2d f6 ff ff       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1c9d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1c9d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1c9dd:	c9                   	leave
   1c9de:	c3                   	ret
   1c9df:	90                   	nop

000000000001c9e0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   1c9e0:	55                   	push   %rbp
   1c9e1:	48 89 e5             	mov    %rsp,%rbp
   1c9e4:	48 83 ec 10          	sub    $0x10,%rsp
   1c9e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   1c9ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1c9f0:	48 89 c7             	mov    %rax,%rdi
   1c9f3:	e8 68 0c 00 00       	call   1d660 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1c9f8:	c9                   	leave
   1c9f9:	c3                   	ret

000000000001c9fa <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
      compare(const basic_string& __str) const
   1c9fa:	55                   	push   %rbp
   1c9fb:	48 89 e5             	mov    %rsp,%rbp
   1c9fe:	53                   	push   %rbx
   1c9ff:	48 83 ec 38          	sub    $0x38,%rsp
   1ca03:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1ca07:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	const size_type __size = this->size();
   1ca0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ca0f:	48 89 c7             	mov    %rax,%rdi
   1ca12:	e8 df 98 fe ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
   1ca17:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	const size_type __osize = __str.size();
   1ca1b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ca1f:	48 89 c7             	mov    %rax,%rdi
   1ca22:	e8 cf 98 fe ff       	call   62f6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
   1ca27:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	const size_type __len = std::min(__size, __osize);
   1ca2b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1ca2f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1ca33:	48 89 d6             	mov    %rdx,%rsi
   1ca36:	48 89 c7             	mov    %rax,%rdi
   1ca39:	e8 3c b5 ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   1ca3e:	48 8b 00             	mov    (%rax),%rax
   1ca41:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	int __r = traits_type::compare(_M_data(), __str.data(), __len);
   1ca45:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ca49:	48 89 c7             	mov    %rax,%rdi
   1ca4c:	e8 95 ba ff ff       	call   184e6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv>
   1ca51:	48 89 c3             	mov    %rax,%rbx
   1ca54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ca58:	48 89 c7             	mov    %rax,%rdi
   1ca5b:	e8 38 df fe ff       	call   a998 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
   1ca60:	48 89 c1             	mov    %rax,%rcx
   1ca63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ca67:	48 89 c2             	mov    %rax,%rdx
   1ca6a:	48 89 de             	mov    %rbx,%rsi
   1ca6d:	48 89 cf             	mov    %rcx,%rdi
   1ca70:	e8 6c 3b ff ff       	call   105e1 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
   1ca75:	89 45 ec             	mov    %eax,-0x14(%rbp)
	if (!__r)
   1ca78:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1ca7c:	75 16                	jne    1ca94 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x9a>
	  __r = _S_compare(__size, __osize);
   1ca7e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1ca82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ca86:	48 89 d6             	mov    %rdx,%rsi
   1ca89:	48 89 c7             	mov    %rax,%rdi
   1ca8c:	e8 dd 0b 00 00       	call   1d66e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm>
   1ca91:	89 45 ec             	mov    %eax,-0x14(%rbp)
	return __r;
   1ca94:	8b 45 ec             	mov    -0x14(%rbp),%eax
      }
   1ca97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ca9b:	c9                   	leave
   1ca9c:	c3                   	ret
   1ca9d:	90                   	nop

000000000001ca9e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   1ca9e:	55                   	push   %rbp
   1ca9f:	48 89 e5             	mov    %rsp,%rbp
   1caa2:	53                   	push   %rbx
   1caa3:	48 83 ec 18          	sub    $0x18,%rsp
   1caa7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1caab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   1caaf:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1cab3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1cab7:	48 89 c7             	mov    %rax,%rdi
   1caba:	e8 63 ef ff ff       	call   1ba22 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1cabf:	48 89 c6             	mov    %rax,%rsi
   1cac2:	48 89 df             	mov    %rbx,%rdi
   1cac5:	e8 ec 0b 00 00       	call   1d6b6 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   1caca:	90                   	nop
   1cacb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1cacf:	c9                   	leave
   1cad0:	c3                   	ret
   1cad1:	90                   	nop

000000000001cad2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   1cad2:	55                   	push   %rbp
   1cad3:	48 89 e5             	mov    %rsp,%rbp
   1cad6:	41 54                	push   %r12
   1cad8:	53                   	push   %rbx
   1cad9:	48 83 ec 30          	sub    $0x30,%rsp
   1cadd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1cae1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1cae5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1cae9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   1caed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1caf1:	48 89 c7             	mov    %rax,%rdi
   1caf4:	e8 e3 0b 00 00       	call   1d6dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   1caf9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   1cafd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cb01:	48 89 c7             	mov    %rax,%rdi
   1cb04:	e8 76 ef ff ff       	call   1ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1cb09:	49 89 c4             	mov    %rax,%r12
   1cb0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1cb10:	48 89 c7             	mov    %rax,%rdi
   1cb13:	e8 59 ef ff ff       	call   1ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1cb18:	48 89 c3             	mov    %rax,%rbx
   1cb1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cb1f:	48 89 c7             	mov    %rax,%rdi
   1cb22:	e8 3c ef ff ff       	call   1ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1cb27:	48 89 c2             	mov    %rax,%rdx
   1cb2a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1cb2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cb32:	4d 89 e0             	mov    %r12,%r8
   1cb35:	48 89 d9             	mov    %rbx,%rcx
   1cb38:	48 89 c7             	mov    %rax,%rdi
   1cb3b:	e8 c4 0b 00 00       	call   1d704 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   1cb40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1cb44:	48 83 c4 30          	add    $0x30,%rsp
   1cb48:	5b                   	pop    %rbx
   1cb49:	41 5c                	pop    %r12
   1cb4b:	5d                   	pop    %rbp
   1cb4c:	c3                   	ret
   1cb4d:	90                   	nop

000000000001cb4e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1cb4e:	55                   	push   %rbp
   1cb4f:	48 89 e5             	mov    %rsp,%rbp
   1cb52:	48 83 ec 20          	sub    $0x20,%rsp
   1cb56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   1cb5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cb5e:	48 8b 10             	mov    (%rax),%rdx
   1cb61:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1cb65:	48 89 d6             	mov    %rdx,%rsi
   1cb68:	48 89 c7             	mov    %rax,%rdi
   1cb6b:	e8 92 f4 ff ff       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1cb70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cb74:	c9                   	leave
   1cb75:	c3                   	ret

000000000001cb76 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1cb76:	55                   	push   %rbp
   1cb77:	48 89 e5             	mov    %rsp,%rbp
   1cb7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1cb7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cb82:	48 8b 40 28          	mov    0x28(%rax),%rax
   1cb86:	5d                   	pop    %rbp
   1cb87:	c3                   	ret

000000000001cb88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   1cb88:	55                   	push   %rbp
   1cb89:	48 89 e5             	mov    %rsp,%rbp
   1cb8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1cb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cb94:	48 83 c0 20          	add    $0x20,%rax
   1cb98:	5d                   	pop    %rbp
   1cb99:	c3                   	ret

000000000001cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   1cb9a:	55                   	push   %rbp
   1cb9b:	48 89 e5             	mov    %rsp,%rbp
   1cb9e:	48 83 ec 10          	sub    $0x10,%rsp
   1cba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   1cba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cbaa:	48 89 c7             	mov    %rax,%rdi
   1cbad:	e8 4e 02 00 00       	call   1ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1cbb2:	c9                   	leave
   1cbb3:	c3                   	ret

000000000001cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>:

    public:

      /// Constructor accepting lvalues of `first_type` and `second_type`
      constexpr explicit(!_S_convertible<const _T1&, const _T2&>())
      pair(const _T1& __x, const _T2& __y)
   1cbb4:	55                   	push   %rbp
   1cbb5:	48 89 e5             	mov    %rsp,%rbp
   1cbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cbbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1cbc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      noexcept(_S_nothrow_constructible<const _T1&, const _T2&>())
      requires (_S_constructible<const _T1&, const _T2&>())
      : first(__x), second(__y)
   1cbc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cbc8:	48 8b 10             	mov    (%rax),%rdx
   1cbcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cbcf:	48 89 10             	mov    %rdx,(%rax)
   1cbd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cbd6:	48 8b 10             	mov    (%rax),%rdx
   1cbd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cbdd:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
   1cbe1:	90                   	nop
   1cbe2:	5d                   	pop    %rbp
   1cbe3:	c3                   	ret

000000000001cbe4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1cbe4:	55                   	push   %rbp
   1cbe5:	48 89 e5             	mov    %rsp,%rbp
   1cbe8:	53                   	push   %rbx
   1cbe9:	48 83 ec 78          	sub    $0x78,%rsp
   1cbed:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1cbf1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   1cbf5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1cbf9:	48 89 c7             	mov    %rax,%rdi
   1cbfc:	e8 31 e0 ff ff       	call   1ac32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1cc01:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   1cc05:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1cc09:	48 89 c7             	mov    %rax,%rdi
   1cc0c:	e8 27 fd ff ff       	call   1c938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1cc11:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   1cc15:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   1cc19:	eb 51                	jmp    1cc6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   1cc1b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc1f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   1cc23:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1cc27:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc2b:	48 89 c7             	mov    %rax,%rdi
   1cc2e:	e8 cd 01 00 00       	call   1ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1cc33:	48 89 c2             	mov    %rax,%rdx
   1cc36:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1cc3a:	48 89 c6             	mov    %rax,%rsi
   1cc3d:	48 89 df             	mov    %rbx,%rdi
   1cc40:	e8 01 e1 ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1cc45:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1cc48:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1cc4c:	74 0e                	je     1cc5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   1cc4e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc52:	48 89 c7             	mov    %rax,%rdi
   1cc55:	e8 8f ec ff ff       	call   1b8e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1cc5a:	eb 0c                	jmp    1cc68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   1cc5c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc60:	48 89 c7             	mov    %rax,%rdi
   1cc63:	e8 6f ec ff ff       	call   1b8d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1cc68:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   1cc6c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1cc70:	48 85 c0             	test   %rax,%rax
   1cc73:	75 a6                	jne    1cc1b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   1cc75:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1cc79:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1cc7d:	48 89 d6             	mov    %rdx,%rsi
   1cc80:	48 89 c7             	mov    %rax,%rdi
   1cc83:	e8 7a f3 ff ff       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   1cc88:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1cc8c:	74 54                	je     1cce2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   1cc8e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1cc92:	48 89 c7             	mov    %rax,%rdi
   1cc95:	e8 3c 0b 00 00       	call   1d7d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   1cc9a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1cc9e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1cca2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1cca6:	48 89 d6             	mov    %rdx,%rsi
   1cca9:	48 89 c7             	mov    %rax,%rdi
   1ccac:	e8 13 e0 ff ff       	call   1acc4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   1ccb1:	84 c0                	test   %al,%al
   1ccb3:	74 21                	je     1ccd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   1ccb5:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1ccb9:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1ccbd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1ccc1:	48 89 ce             	mov    %rcx,%rsi
   1ccc4:	48 89 c7             	mov    %rax,%rdi
   1ccc7:	e8 34 0b 00 00       	call   1d800 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_EEOT_OT0_>
   1cccc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1ccd0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1ccd4:	eb 7d                	jmp    1cd53 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   1ccd6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ccda:	48 89 c7             	mov    %rax,%rdi
   1ccdd:	e8 ce 00 00 00       	call   1cdb0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   1cce2:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1cce6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1ccea:	48 89 c7             	mov    %rax,%rdi
   1cced:	e8 a8 fe ff ff       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1ccf2:	48 89 c1             	mov    %rax,%rcx
   1ccf5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1ccf9:	48 89 c2             	mov    %rax,%rdx
   1ccfc:	48 89 ce             	mov    %rcx,%rsi
   1ccff:	48 89 df             	mov    %rbx,%rdi
   1cd02:	e8 3f e0 ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1cd07:	84 c0                	test   %al,%al
   1cd09:	74 21                	je     1cd2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   1cd0b:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1cd0f:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1cd13:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1cd17:	48 89 ce             	mov    %rcx,%rsi
   1cd1a:	48 89 c7             	mov    %rax,%rdi
   1cd1d:	e8 de 0a 00 00       	call   1d800 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_EEOT_OT0_>
   1cd22:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1cd26:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1cd2a:	eb 27                	jmp    1cd53 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   1cd2c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1cd33:	00 
   1cd34:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1cd38:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   1cd3c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1cd40:	48 89 ce             	mov    %rcx,%rsi
   1cd43:	48 89 c7             	mov    %rax,%rdi
   1cd46:	e8 69 fe ff ff       	call   1cbb4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1ERKS1_S4_>
   1cd4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1cd4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1cd53:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1cd57:	c9                   	leave
   1cd58:	c3                   	ret
   1cd59:	90                   	nop

000000000001cd5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   1cd5a:	55                   	push   %rbp
   1cd5b:	48 89 e5             	mov    %rsp,%rbp
   1cd5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1cd62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd66:	48 83 c0 18          	add    $0x18,%rax
   1cd6a:	5d                   	pop    %rbp
   1cd6b:	c3                   	ret

000000000001cd6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_EEOT_OT0_>:

      /// Constructor accepting two values of arbitrary types
      template<typename _U1, typename _U2>
	requires (_S_constructible<_U1, _U2>())
	constexpr explicit(!_S_convertible<_U1, _U2>())
	pair(_U1&& __x, _U2&& __y)
   1cd6c:	55                   	push   %rbp
   1cd6d:	48 89 e5             	mov    %rsp,%rbp
   1cd70:	48 83 ec 20          	sub    $0x20,%rsp
   1cd74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cd78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1cd7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	noexcept(_S_nothrow_constructible<_U1, _U2>())
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
   1cd80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cd84:	48 89 c7             	mov    %rax,%rdi
   1cd87:	e8 b8 0a 00 00       	call   1d844 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1cd8c:	48 8b 10             	mov    (%rax),%rdx
   1cd8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cd93:	48 89 10             	mov    %rdx,(%rax)
   1cd96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cd9a:	48 89 c7             	mov    %rax,%rdi
   1cd9d:	e8 a2 0a 00 00       	call   1d844 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1cda2:	48 8b 10             	mov    (%rax),%rdx
   1cda5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cda9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	{ }
   1cdad:	90                   	nop
   1cdae:	c9                   	leave
   1cdaf:	c3                   	ret

000000000001cdb0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   1cdb0:	55                   	push   %rbp
   1cdb1:	48 89 e5             	mov    %rsp,%rbp
   1cdb4:	48 83 ec 10          	sub    $0x10,%rsp
   1cdb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   1cdbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cdc0:	48 8b 00             	mov    (%rax),%rax
   1cdc3:	48 89 c7             	mov    %rax,%rdi
   1cdc6:	e8 85 84 fe ff       	call   5250 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   1cdcb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1cdcf:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1cdd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1cdd6:	c9                   	leave
   1cdd7:	c3                   	ret

000000000001cdd8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1cdd8:	55                   	push   %rbp
   1cdd9:	48 89 e5             	mov    %rsp,%rbp
   1cddc:	48 83 ec 10          	sub    $0x10,%rsp
   1cde0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   1cde4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cde8:	48 8b 00             	mov    (%rax),%rax
   1cdeb:	48 89 c7             	mov    %rax,%rdi
   1cdee:	e8 2d 83 fe ff       	call   5120 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   1cdf3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1cdf7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1cdfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1cdfe:	c9                   	leave
   1cdff:	c3                   	ret

000000000001ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   1ce00:	55                   	push   %rbp
   1ce01:	48 89 e5             	mov    %rsp,%rbp
   1ce04:	48 83 ec 20          	sub    $0x20,%rsp
   1ce08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   1ce0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ce10:	48 89 c7             	mov    %rax,%rdi
   1ce13:	e8 3a 0a 00 00       	call   1d852 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1ce18:	48 89 c2             	mov    %rax,%rdx
   1ce1b:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1ce1f:	48 89 d6             	mov    %rdx,%rsi
   1ce22:	48 89 c7             	mov    %rax,%rdi
   1ce25:	e8 46 0a 00 00       	call   1d870 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   1ce2a:	c9                   	leave
   1ce2b:	c3                   	ret

000000000001ce2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1ce2c:	55                   	push   %rbp
   1ce2d:	48 89 e5             	mov    %rsp,%rbp
   1ce30:	41 54                	push   %r12
   1ce32:	53                   	push   %rbx
   1ce33:	48 83 ec 30          	sub    $0x30,%rsp
   1ce37:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1ce3b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1ce3f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1ce43:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   1ce47:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1ce4c:	75 43                	jne    1ce91 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   1ce4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ce52:	48 89 c7             	mov    %rax,%rdi
   1ce55:	e8 de fa ff ff       	call   1c938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   1ce5a:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1ce5e:	74 31                	je     1ce91 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1ce60:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1ce64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ce68:	48 89 c7             	mov    %rax,%rdi
   1ce6b:	e8 2a fd ff ff       	call   1cb9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1ce70:	49 89 c4             	mov    %rax,%r12
   1ce73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ce77:	48 89 c7             	mov    %rax,%rdi
   1ce7a:	e8 81 ff ff ff       	call   1ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1ce7f:	4c 89 e2             	mov    %r12,%rdx
   1ce82:	48 89 c6             	mov    %rax,%rsi
   1ce85:	48 89 df             	mov    %rbx,%rdi
   1ce88:	e8 b9 de ff ff       	call   1ad46 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1ce8d:	84 c0                	test   %al,%al
   1ce8f:	74 07                	je     1ce98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1ce91:	b8 01 00 00 00       	mov    $0x1,%eax
   1ce96:	eb 05                	jmp    1ce9d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   1ce98:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   1ce9d:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1cea0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cea4:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   1cea8:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   1ceac:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ceb0:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   1ceb4:	89 c7                	mov    %eax,%edi
   1ceb6:	e8 85 81 fe ff       	call   5040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   1cebb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cebf:	48 8b 40 28          	mov    0x28(%rax),%rax
   1cec3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1cec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1cecb:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   1cecf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1ced3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1ced7:	48 89 d6             	mov    %rdx,%rsi
   1ceda:	48 89 c7             	mov    %rax,%rdi
   1cedd:	e8 20 f1 ff ff       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1cee2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   1cee6:	48 83 c4 30          	add    $0x30,%rsp
   1ceea:	5b                   	pop    %rbx
   1ceeb:	41 5c                	pop    %r12
   1ceed:	5d                   	pop    %rbp
   1ceee:	c3                   	ret
   1ceef:	90                   	nop

000000000001cef0 <_ZNSt22_Optional_payload_baseIjE8_StorageIjLb1EEC1IJjEEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   1cef0:	55                   	push   %rbp
   1cef1:	48 89 e5             	mov    %rsp,%rbp
   1cef4:	48 83 ec 10          	sub    $0x10,%rsp
   1cef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cefc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   1cf00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cf04:	48 89 c7             	mov    %rax,%rdi
   1cf07:	e8 82 db ff ff       	call   1aa8e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   1cf0c:	8b 10                	mov    (%rax),%edx
   1cf0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf12:	89 10                	mov    %edx,(%rax)
	    { }
   1cf14:	90                   	nop
   1cf15:	c9                   	leave
   1cf16:	c3                   	ret
   1cf17:	90                   	nop

000000000001cf18 <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1cf18:	55                   	push   %rbp
   1cf19:	48 89 e5             	mov    %rsp,%rbp
   1cf1c:	48 83 ec 20          	sub    $0x20,%rsp
   1cf20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cf24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1cf28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1cf2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cf30:	48 c1 e0 04          	shl    $0x4,%rax
   1cf34:	48 89 c2             	mov    %rax,%rdx
   1cf37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cf3b:	48 89 d6             	mov    %rdx,%rsi
   1cf3e:	48 89 c7             	mov    %rax,%rdi
   1cf41:	e8 ea 82 fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1cf46:	c9                   	leave
   1cf47:	c3                   	ret

000000000001cf48 <_ZSt11__addressofIN2vk4raii14PhysicalDeviceEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1cf48:	55                   	push   %rbp
   1cf49:	48 89 e5             	mov    %rsp,%rbp
   1cf4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1cf50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf54:	5d                   	pop    %rbp
   1cf55:	c3                   	ret

000000000001cf56 <_ZSt8_DestroyIN2vk4raii14PhysicalDeviceEEvPT_>:
    _Destroy(_Tp* __pointer)
   1cf56:	55                   	push   %rbp
   1cf57:	48 89 e5             	mov    %rsp,%rbp
   1cf5a:	48 83 ec 10          	sub    $0x10,%rsp
   1cf5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   1cf62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cf66:	48 89 c7             	mov    %rax,%rdi
   1cf69:	e8 60 f3 ff ff       	call   1c2ce <_ZSt10destroy_atIN2vk4raii14PhysicalDeviceEEvPT_>
    }
   1cf6e:	90                   	nop
   1cf6f:	c9                   	leave
   1cf70:	c3                   	ret
   1cf71:	90                   	nop

000000000001cf72 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1cf72:	55                   	push   %rbp
   1cf73:	48 89 e5             	mov    %rsp,%rbp
   1cf76:	48 83 ec 20          	sub    $0x20,%rsp
   1cf7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1cf7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1cf82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1cf86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cf8a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1cf91:	00 
   1cf92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1cf96:	48 89 d6             	mov    %rdx,%rsi
   1cf99:	48 89 c7             	mov    %rax,%rdi
   1cf9c:	e8 8f 82 fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1cfa1:	c9                   	leave
   1cfa2:	c3                   	ret

000000000001cfa3 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1cfa3:	55                   	push   %rbp
   1cfa4:	48 89 e5             	mov    %rsp,%rbp
   1cfa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1cfab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfaf:	5d                   	pop    %rbp
   1cfb0:	c3                   	ret

000000000001cfb1 <_ZSt8_DestroyIP18VkPhysicalDevice_TEvPT_>:
    _Destroy(_Tp* __pointer)
   1cfb1:	55                   	push   %rbp
   1cfb2:	48 89 e5             	mov    %rsp,%rbp
   1cfb5:	48 83 ec 10          	sub    $0x10,%rsp
   1cfb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   1cfbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cfc1:	48 89 c7             	mov    %rax,%rdi
   1cfc4:	e8 b9 08 00 00       	call   1d882 <_ZSt10destroy_atIP18VkPhysicalDevice_TEvPT_>
    }
   1cfc9:	90                   	nop
   1cfca:	c9                   	leave
   1cfcb:	c3                   	ret

000000000001cfcc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1cfcc:	55                   	push   %rbp
   1cfcd:	48 89 e5             	mov    %rsp,%rbp
   1cfd0:	48 83 ec 20          	sub    $0x20,%rsp
   1cfd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1cfd8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1cfdc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1cfe1:	74 40                	je     1d023 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1cfe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1cfe7:	48 89 c7             	mov    %rax,%rdi
   1cfea:	e8 b4 ff ff ff       	call   1cfa3 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   1cfef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1cff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1cff7:	48 89 c7             	mov    %rax,%rdi
   1cffa:	e8 8e 08 00 00       	call   1d88d <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
   1cfff:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1d004:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d008:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1d00c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1d010:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d014:	48 89 ce             	mov    %rcx,%rsi
   1d017:	48 89 c7             	mov    %rax,%rdi
   1d01a:	e8 ab 08 00 00       	call   1d8ca <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
   1d01f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1d023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1d027:	c9                   	leave
   1d028:	c3                   	ret

000000000001d029 <_ZSt12__niter_baseIPP18VkPhysicalDevice_TET_S3_>:
    __niter_base(_Iterator __it)
   1d029:	55                   	push   %rbp
   1d02a:	48 89 e5             	mov    %rsp,%rbp
   1d02d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1d031:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d035:	5d                   	pop    %rbp
   1d036:	c3                   	ret
   1d037:	90                   	nop

000000000001d038 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1d038:	55                   	push   %rbp
   1d039:	48 89 e5             	mov    %rsp,%rbp
   1d03c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d040:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1d044:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d048:	48 8b 10             	mov    (%rax),%rdx
   1d04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d04f:	48 89 10             	mov    %rdx,(%rax)
   1d052:	90                   	nop
   1d053:	5d                   	pop    %rbp
   1d054:	c3                   	ret

000000000001d055 <_ZSt14__relocate_a_1IP18VkPhysicalDevice_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1d055:	55                   	push   %rbp
   1d056:	48 89 e5             	mov    %rsp,%rbp
   1d059:	48 83 ec 30          	sub    $0x30,%rsp
   1d05d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d061:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1d065:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1d069:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1d06d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1d071:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1d075:	48 c1 f8 03          	sar    $0x3,%rax
   1d079:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1d07d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1d082:	7e 68                	jle    1d0ec <_ZSt14__relocate_a_1IP18VkPhysicalDevice_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x97>
	  if (std::is_constant_evaluated())
   1d084:	e8 20 91 fe ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
   1d089:	84 c0                	test   %al,%al
   1d08b:	74 40                	je     1d0cd <_ZSt14__relocate_a_1IP18VkPhysicalDevice_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x78>
	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
   1d08d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   1d091:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1d095:	48 89 d6             	mov    %rdx,%rsi
   1d098:	48 89 c7             	mov    %rax,%rdi
   1d09b:	e8 98 ff ff ff       	call   1d038 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvEC1ERKS3_>
	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
   1d0a0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1d0a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1d0a8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1d0ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d0b0:	48 89 c7             	mov    %rax,%rdi
   1d0b3:	e8 b7 08 00 00       	call   1d96f <_ZSt14__relocate_a_1IPP18VkPhysicalDevice_TN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>
   1d0b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	      return __out.base();
   1d0bc:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1d0c0:	48 89 c7             	mov    %rax,%rdi
   1d0c3:	e8 28 09 00 00       	call   1d9f0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvE4baseEv>
   1d0c8:	48 8b 00             	mov    (%rax),%rax
   1d0cb:	eb 2e                	jmp    1d0fb <_ZSt14__relocate_a_1IP18VkPhysicalDevice_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0xa6>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1d0cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d0d1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d0d8:	00 
   1d0d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d0dd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1d0e1:	48 89 ce             	mov    %rcx,%rsi
   1d0e4:	48 89 c7             	mov    %rax,%rdi
   1d0e7:	e8 74 82 fe ff       	call   5360 <memmove@plt>
      return __result + __count;
   1d0ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d0f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1d0f4:	48 c1 e2 03          	shl    $0x3,%rdx
   1d0f8:	48 01 d0             	add    %rdx,%rax
    }
   1d0fb:	c9                   	leave
   1d0fc:	c3                   	ret
   1d0fd:	90                   	nop

000000000001d0fe <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1d0fe:	55                   	push   %rbp
   1d0ff:	48 89 e5             	mov    %rsp,%rbp
   1d102:	48 83 ec 20          	sub    $0x20,%rsp
   1d106:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d10a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d10e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1d112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d116:	48 89 c7             	mov    %rax,%rdi
   1d119:	e8 e0 08 00 00       	call   1d9fe <_ZNKSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE11_M_max_sizeEv>
   1d11e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1d122:	0f 92 c0             	setb   %al
   1d125:	0f b6 c0             	movzbl %al,%eax
   1d128:	48 85 c0             	test   %rax,%rax
   1d12b:	0f 95 c0             	setne  %al
   1d12e:	84 c0                	test   %al,%al
   1d130:	74 1a                	je     1d14c <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1d132:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1d139:	ff ff 0f 
   1d13c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1d140:	73 05                	jae    1d147 <_ZNSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1d142:	e8 39 80 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1d147:	e8 34 7f fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1d14c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d150:	48 c1 e0 04          	shl    $0x4,%rax
   1d154:	48 89 c7             	mov    %rax,%rdi
   1d157:	e8 c4 80 fe ff       	call   5220 <_Znwm@plt>
   1d15c:	90                   	nop
      }
   1d15d:	c9                   	leave
   1d15e:	c3                   	ret

000000000001d15f <_ZSt19__relocate_object_aIN2vk4raii14PhysicalDeviceES2_SaIS2_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   1d15f:	55                   	push   %rbp
   1d160:	48 89 e5             	mov    %rsp,%rbp
   1d163:	48 83 ec 20          	sub    $0x20,%rsp
   1d167:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d16b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d16f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   1d173:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d177:	48 89 c7             	mov    %rax,%rdi
   1d17a:	e8 93 08 00 00       	call   1da12 <_ZSt4moveIRN2vk4raii14PhysicalDeviceEEONSt16remove_referenceIT_E4typeEOS5_>
   1d17f:	48 89 c2             	mov    %rax,%rdx
   1d182:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1d186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d18a:	48 89 ce             	mov    %rcx,%rsi
   1d18d:	48 89 c7             	mov    %rax,%rdi
   1d190:	e8 8b 08 00 00       	call   1da20 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   1d195:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d199:	48 89 c7             	mov    %rax,%rdi
   1d19c:	e8 a7 fd ff ff       	call   1cf48 <_ZSt11__addressofIN2vk4raii14PhysicalDeviceEEPT_RS3_>
   1d1a1:	48 89 c2             	mov    %rax,%rdx
   1d1a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d1a8:	48 89 d6             	mov    %rdx,%rsi
   1d1ab:	48 89 c7             	mov    %rax,%rdi
   1d1ae:	e8 d6 e1 ff ff       	call   1b389 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE7destroyIS2_EEvRS3_PT_>
    }
   1d1b3:	90                   	nop
   1d1b4:	c9                   	leave
   1d1b5:	c3                   	ret

000000000001d1b6 <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii16DeviceDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
   1d1b6:	55                   	push   %rbp
   1d1b7:	48 89 e5             	mov    %rsp,%rbp
   1d1ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
   1d1be:	90                   	nop
   1d1bf:	5d                   	pop    %rbp
   1d1c0:	c3                   	ret
   1d1c1:	90                   	nop

000000000001d1c2 <_ZNSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1d1c2:	55                   	push   %rbp
   1d1c3:	48 89 e5             	mov    %rsp,%rbp
   1d1c6:	48 83 ec 20          	sub    $0x20,%rsp
   1d1ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d1ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d1d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1d1d6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d1da:	48 89 d0             	mov    %rdx,%rax
   1d1dd:	48 01 c0             	add    %rax,%rax
   1d1e0:	48 01 d0             	add    %rdx,%rax
   1d1e3:	48 c1 e0 03          	shl    $0x3,%rax
   1d1e7:	48 89 c2             	mov    %rax,%rdx
   1d1ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d1ee:	48 89 d6             	mov    %rdx,%rsi
   1d1f1:	48 89 c7             	mov    %rax,%rdi
   1d1f4:	e8 37 80 fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1d1f9:	c9                   	leave
   1d1fa:	c3                   	ret

000000000001d1fb <_ZSt11__addressofIN2vk21QueueFamilyPropertiesEEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1d1fb:	55                   	push   %rbp
   1d1fc:	48 89 e5             	mov    %rsp,%rbp
   1d1ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1d203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d207:	5d                   	pop    %rbp
   1d208:	c3                   	ret

000000000001d209 <_ZSt8_DestroyIN2vk21QueueFamilyPropertiesEEvPT_>:
    _Destroy(_Tp* __pointer)
   1d209:	55                   	push   %rbp
   1d20a:	48 89 e5             	mov    %rsp,%rbp
   1d20d:	48 83 ec 10          	sub    $0x10,%rsp
   1d211:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   1d215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d219:	48 89 c7             	mov    %rax,%rdi
   1d21c:	e8 34 08 00 00       	call   1da55 <_ZSt10destroy_atIN2vk21QueueFamilyPropertiesEEvPT_>
    }
   1d221:	90                   	nop
   1d222:	c9                   	leave
   1d223:	c3                   	ret

000000000001d224 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk21QueueFamilyPropertiesEmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1d224:	55                   	push   %rbp
   1d225:	48 89 e5             	mov    %rsp,%rbp
   1d228:	48 83 ec 20          	sub    $0x20,%rsp
   1d22c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d230:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
   1d234:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d238:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
   1d23c:	eb 1e                	jmp    1d25c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk21QueueFamilyPropertiesEmEET_S5_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
   1d23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d242:	48 89 c7             	mov    %rax,%rdi
   1d245:	e8 b1 ff ff ff       	call   1d1fb <_ZSt11__addressofIN2vk21QueueFamilyPropertiesEEPT_RS2_>
   1d24a:	48 89 c7             	mov    %rax,%rdi
   1d24d:	e8 60 08 00 00       	call   1dab2 <_ZSt10_ConstructIN2vk21QueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
   1d252:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   1d257:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   1d25c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1d261:	75 db                	jne    1d23e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk21QueueFamilyPropertiesEmEET_S5_T0_+0x1a>
	      return __cur;
   1d263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1d267:	c9                   	leave
   1d268:	c3                   	ret

000000000001d269 <_ZSt12__niter_baseIPN2vk21QueueFamilyPropertiesEET_S3_>:
    __niter_base(_Iterator __it)
   1d269:	55                   	push   %rbp
   1d26a:	48 89 e5             	mov    %rsp,%rbp
   1d26d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1d271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d275:	5d                   	pop    %rbp
   1d276:	c3                   	ret

000000000001d277 <_ZSt14__relocate_a_1IPN2vk21QueueFamilyPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   1d277:	55                   	push   %rbp
   1d278:	48 89 e5             	mov    %rsp,%rbp
   1d27b:	53                   	push   %rbx
   1d27c:	48 83 ec 38          	sub    $0x38,%rsp
   1d280:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d284:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d288:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d28c:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   1d290:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d294:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   1d298:	eb 3a                	jmp    1d2d4 <_ZSt14__relocate_a_1IPN2vk21QueueFamilyPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
   1d29a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d29e:	48 89 c7             	mov    %rax,%rdi
   1d2a1:	e8 55 ff ff ff       	call   1d1fb <_ZSt11__addressofIN2vk21QueueFamilyPropertiesEEPT_RS2_>
   1d2a6:	48 89 c3             	mov    %rax,%rbx
   1d2a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d2ad:	48 89 c7             	mov    %rax,%rdi
   1d2b0:	e8 46 ff ff ff       	call   1d1fb <_ZSt11__addressofIN2vk21QueueFamilyPropertiesEEPT_RS2_>
   1d2b5:	48 89 c1             	mov    %rax,%rcx
   1d2b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d2bc:	48 89 c2             	mov    %rax,%rdx
   1d2bf:	48 89 de             	mov    %rbx,%rsi
   1d2c2:	48 89 cf             	mov    %rcx,%rdi
   1d2c5:	e8 ba 08 00 00       	call   1db84 <_ZSt19__relocate_object_aIN2vk21QueueFamilyPropertiesES1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   1d2ca:	48 83 45 d8 18       	addq   $0x18,-0x28(%rbp)
   1d2cf:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
   1d2d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d2d8:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1d2dc:	75 bc                	jne    1d29a <_ZSt14__relocate_a_1IPN2vk21QueueFamilyPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_+0x23>
      return __cur;
   1d2de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1d2e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d2e6:	c9                   	leave
   1d2e7:	c3                   	ret

000000000001d2e8 <_ZNSt15__new_allocatorIN2vk19ExtensionPropertiesEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1d2e8:	55                   	push   %rbp
   1d2e9:	48 89 e5             	mov    %rsp,%rbp
   1d2ec:	48 83 ec 20          	sub    $0x20,%rsp
   1d2f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d2f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d2f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1d2fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d300:	48 89 d0             	mov    %rdx,%rax
   1d303:	48 c1 e0 06          	shl    $0x6,%rax
   1d307:	48 01 d0             	add    %rdx,%rax
   1d30a:	48 c1 e0 02          	shl    $0x2,%rax
   1d30e:	48 89 c2             	mov    %rax,%rdx
   1d311:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d315:	48 89 d6             	mov    %rdx,%rsi
   1d318:	48 89 c7             	mov    %rax,%rdi
   1d31b:	e8 10 7f fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1d320:	c9                   	leave
   1d321:	c3                   	ret

000000000001d322 <_ZSt11__addressofIN2vk19ExtensionPropertiesEEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1d322:	55                   	push   %rbp
   1d323:	48 89 e5             	mov    %rsp,%rbp
   1d326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1d32a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d32e:	5d                   	pop    %rbp
   1d32f:	c3                   	ret

000000000001d330 <_ZSt8_DestroyIN2vk19ExtensionPropertiesEEvPT_>:
    _Destroy(_Tp* __pointer)
   1d330:	55                   	push   %rbp
   1d331:	48 89 e5             	mov    %rsp,%rbp
   1d334:	48 83 ec 10          	sub    $0x10,%rsp
   1d338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   1d33c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d340:	48 89 c7             	mov    %rax,%rdi
   1d343:	e8 93 08 00 00       	call   1dbdb <_ZSt10destroy_atIN2vk19ExtensionPropertiesEEvPT_>
    }
   1d348:	90                   	nop
   1d349:	c9                   	leave
   1d34a:	c3                   	ret

000000000001d34b <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk19ExtensionPropertiesEmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1d34b:	55                   	push   %rbp
   1d34c:	48 89 e5             	mov    %rsp,%rbp
   1d34f:	48 83 ec 20          	sub    $0x20,%rsp
   1d353:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d357:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
   1d35b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d35f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
   1d363:	eb 21                	jmp    1d386 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk19ExtensionPropertiesEmEET_S5_T0_+0x3b>
		std::_Construct(std::__addressof(*__cur));
   1d365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d369:	48 89 c7             	mov    %rax,%rdi
   1d36c:	e8 b1 ff ff ff       	call   1d322 <_ZSt11__addressofIN2vk19ExtensionPropertiesEEPT_RS2_>
   1d371:	48 89 c7             	mov    %rax,%rdi
   1d374:	e8 96 08 00 00       	call   1dc0f <_ZSt10_ConstructIN2vk19ExtensionPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
   1d379:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   1d37e:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   1d385:	00 
   1d386:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1d38b:	75 d8                	jne    1d365 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk19ExtensionPropertiesEmEET_S5_T0_+0x1a>
	      return __cur;
   1d38d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1d391:	c9                   	leave
   1d392:	c3                   	ret

000000000001d393 <_ZSt12__niter_baseIPN2vk19ExtensionPropertiesEET_S3_>:
    __niter_base(_Iterator __it)
   1d393:	55                   	push   %rbp
   1d394:	48 89 e5             	mov    %rsp,%rbp
   1d397:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1d39b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d39f:	5d                   	pop    %rbp
   1d3a0:	c3                   	ret

000000000001d3a1 <_ZSt14__relocate_a_1IPN2vk19ExtensionPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   1d3a1:	55                   	push   %rbp
   1d3a2:	48 89 e5             	mov    %rsp,%rbp
   1d3a5:	53                   	push   %rbx
   1d3a6:	48 83 ec 38          	sub    $0x38,%rsp
   1d3aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d3ae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d3b2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d3b6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   1d3ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d3be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   1d3c2:	eb 40                	jmp    1d404 <_ZSt14__relocate_a_1IPN2vk19ExtensionPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_+0x63>
	std::__relocate_object_a(std::__addressof(*__cur),
   1d3c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d3c8:	48 89 c7             	mov    %rax,%rdi
   1d3cb:	e8 52 ff ff ff       	call   1d322 <_ZSt11__addressofIN2vk19ExtensionPropertiesEEPT_RS2_>
   1d3d0:	48 89 c3             	mov    %rax,%rbx
   1d3d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d3d7:	48 89 c7             	mov    %rax,%rdi
   1d3da:	e8 43 ff ff ff       	call   1d322 <_ZSt11__addressofIN2vk19ExtensionPropertiesEEPT_RS2_>
   1d3df:	48 89 c1             	mov    %rax,%rcx
   1d3e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d3e6:	48 89 c2             	mov    %rax,%rdx
   1d3e9:	48 89 de             	mov    %rbx,%rsi
   1d3ec:	48 89 cf             	mov    %rcx,%rdi
   1d3ef:	e8 05 09 00 00       	call   1dcf9 <_ZSt19__relocate_object_aIN2vk19ExtensionPropertiesES1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   1d3f4:	48 81 45 d8 04 01 00 	addq   $0x104,-0x28(%rbp)
   1d3fb:	00 
   1d3fc:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
   1d403:	00 
   1d404:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d408:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1d40c:	75 b6                	jne    1d3c4 <_ZSt14__relocate_a_1IPN2vk19ExtensionPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_+0x23>
      return __cur;
   1d40e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1d412:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d416:	c9                   	leave
   1d417:	c3                   	ret

000000000001d418 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1d418:	55                   	push   %rbp
   1d419:	48 89 e5             	mov    %rsp,%rbp
   1d41c:	48 83 ec 20          	sub    $0x20,%rsp
   1d420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d424:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d428:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1d42c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d430:	48 89 d0             	mov    %rdx,%rax
   1d433:	48 c1 e0 06          	shl    $0x6,%rax
   1d437:	48 01 d0             	add    %rdx,%rax
   1d43a:	48 c1 e0 03          	shl    $0x3,%rax
   1d43e:	48 89 c2             	mov    %rax,%rdx
   1d441:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d445:	48 89 d6             	mov    %rdx,%rsi
   1d448:	48 89 c7             	mov    %rax,%rdi
   1d44b:	e8 e0 7d fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1d450:	c9                   	leave
   1d451:	c3                   	ret

000000000001d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1d452:	55                   	push   %rbp
   1d453:	48 89 e5             	mov    %rsp,%rbp
   1d456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1d45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d45e:	5d                   	pop    %rbp
   1d45f:	c3                   	ret

000000000001d460 <_ZSt8_DestroyIN2vk15LayerPropertiesEEvPT_>:
    _Destroy(_Tp* __pointer)
   1d460:	55                   	push   %rbp
   1d461:	48 89 e5             	mov    %rsp,%rbp
   1d464:	48 83 ec 10          	sub    $0x10,%rsp
   1d468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   1d46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d470:	48 89 c7             	mov    %rax,%rdi
   1d473:	e8 d8 08 00 00       	call   1dd50 <_ZSt10destroy_atIN2vk15LayerPropertiesEEvPT_>
    }
   1d478:	90                   	nop
   1d479:	c9                   	leave
   1d47a:	c3                   	ret

000000000001d47b <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk15LayerPropertiesEmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1d47b:	55                   	push   %rbp
   1d47c:	48 89 e5             	mov    %rsp,%rbp
   1d47f:	48 83 ec 20          	sub    $0x20,%rsp
   1d483:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d487:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
   1d48b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d48f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
   1d493:	eb 21                	jmp    1d4b6 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk15LayerPropertiesEmEET_S5_T0_+0x3b>
		std::_Construct(std::__addressof(*__cur));
   1d495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d499:	48 89 c7             	mov    %rax,%rdi
   1d49c:	e8 b1 ff ff ff       	call   1d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>
   1d4a1:	48 89 c7             	mov    %rax,%rdi
   1d4a4:	e8 fc 08 00 00       	call   1dda5 <_ZSt10_ConstructIN2vk15LayerPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
   1d4a9:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   1d4ae:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
   1d4b5:	00 
   1d4b6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1d4bb:	75 d8                	jne    1d495 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk15LayerPropertiesEmEET_S5_T0_+0x1a>
	      return __cur;
   1d4bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1d4c1:	c9                   	leave
   1d4c2:	c3                   	ret

000000000001d4c3 <_ZSt12__niter_baseIPN2vk15LayerPropertiesEET_S3_>:
    __niter_base(_Iterator __it)
   1d4c3:	55                   	push   %rbp
   1d4c4:	48 89 e5             	mov    %rsp,%rbp
   1d4c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1d4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d4cf:	5d                   	pop    %rbp
   1d4d0:	c3                   	ret

000000000001d4d1 <_ZSt14__relocate_a_1IPN2vk15LayerPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   1d4d1:	55                   	push   %rbp
   1d4d2:	48 89 e5             	mov    %rsp,%rbp
   1d4d5:	53                   	push   %rbx
   1d4d6:	48 83 ec 38          	sub    $0x38,%rsp
   1d4da:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d4de:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d4e2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d4e6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   1d4ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d4ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   1d4f2:	eb 40                	jmp    1d534 <_ZSt14__relocate_a_1IPN2vk15LayerPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_+0x63>
	std::__relocate_object_a(std::__addressof(*__cur),
   1d4f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d4f8:	48 89 c7             	mov    %rax,%rdi
   1d4fb:	e8 52 ff ff ff       	call   1d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>
   1d500:	48 89 c3             	mov    %rax,%rbx
   1d503:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d507:	48 89 c7             	mov    %rax,%rdi
   1d50a:	e8 43 ff ff ff       	call   1d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>
   1d50f:	48 89 c1             	mov    %rax,%rcx
   1d512:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d516:	48 89 c2             	mov    %rax,%rdx
   1d519:	48 89 de             	mov    %rbx,%rsi
   1d51c:	48 89 cf             	mov    %rcx,%rdi
   1d51f:	e8 6b 09 00 00       	call   1de8f <_ZSt19__relocate_object_aIN2vk15LayerPropertiesES1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   1d524:	48 81 45 d8 08 02 00 	addq   $0x208,-0x28(%rbp)
   1d52b:	00 
   1d52c:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
   1d533:	00 
   1d534:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d538:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1d53c:	75 b6                	jne    1d4f4 <_ZSt14__relocate_a_1IPN2vk15LayerPropertiesES2_SaIS1_EET0_T_S5_S4_RT1_+0x23>
      return __cur;
   1d53e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1d542:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d546:	c9                   	leave
   1d547:	c3                   	ret

000000000001d548 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1d548:	55                   	push   %rbp
   1d549:	48 89 e5             	mov    %rsp,%rbp
   1d54c:	48 83 ec 20          	sub    $0x20,%rsp
   1d550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d558:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1d55c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d560:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d567:	00 
   1d568:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d56c:	48 89 d6             	mov    %rdx,%rsi
   1d56f:	48 89 c7             	mov    %rax,%rdi
   1d572:	e8 b9 7c fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1d577:	c9                   	leave
   1d578:	c3                   	ret

000000000001d579 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1d579:	55                   	push   %rbp
   1d57a:	48 89 e5             	mov    %rsp,%rbp
   1d57d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1d581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d585:	5d                   	pop    %rbp
   1d586:	c3                   	ret

000000000001d587 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   1d587:	55                   	push   %rbp
   1d588:	48 89 e5             	mov    %rsp,%rbp
   1d58b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1d58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d593:	5d                   	pop    %rbp
   1d594:	c3                   	ret

000000000001d595 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1d595:	55                   	push   %rbp
   1d596:	48 89 e5             	mov    %rsp,%rbp
   1d599:	48 83 ec 20          	sub    $0x20,%rsp
   1d59d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d5a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d5a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1d5a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d5ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d5b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d5b5:	48 89 ce             	mov    %rcx,%rsi
   1d5b8:	48 89 c7             	mov    %rax,%rdi
   1d5bb:	e8 26 09 00 00       	call   1dee6 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1d5c0:	c9                   	leave
   1d5c1:	c3                   	ret

000000000001d5c2 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1d5c2:	55                   	push   %rbp
   1d5c3:	48 89 e5             	mov    %rsp,%rbp
   1d5c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d5ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1d5ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d5d2:	5d                   	pop    %rbp
   1d5d3:	c3                   	ret

000000000001d5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1d5d4:	55                   	push   %rbp
   1d5d5:	48 89 e5             	mov    %rsp,%rbp
   1d5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1d5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d5e0:	5d                   	pop    %rbp
   1d5e1:	c3                   	ret

000000000001d5e2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1d5e2:	55                   	push   %rbp
   1d5e3:	48 89 e5             	mov    %rsp,%rbp
   1d5e6:	48 83 ec 10          	sub    $0x10,%rsp
   1d5ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d5ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   1d5f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d5f6:	48 89 c7             	mov    %rax,%rdi
   1d5f9:	e8 53 09 00 00       	call   1df51 <_ZSt10destroy_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEvPT_>
	}
   1d5fe:	90                   	nop
   1d5ff:	c9                   	leave
   1d600:	c3                   	ret

000000000001d601 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1d601:	55                   	push   %rbp
   1d602:	48 89 e5             	mov    %rsp,%rbp
   1d605:	48 83 ec 40          	sub    $0x40,%rsp
   1d609:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d60d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d611:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d615:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d619:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1d61d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d621:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1d625:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d629:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   1d62d:	e8 6c 8b fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1d632:	84 c0                	test   %al,%al
   1d634:	74 0e                	je     1d644 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m+0x43>
	    ::operator delete(__p);
   1d636:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d63a:	48 89 c7             	mov    %rax,%rdi
   1d63d:	e8 ae 7b fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   1d642:	eb 18                	jmp    1d65c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   1d644:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d648:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1d64c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d650:	48 89 ce             	mov    %rcx,%rsi
   1d653:	48 89 c7             	mov    %rax,%rdi
   1d656:	e8 e5 0e 00 00       	call   1e540 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
      { __a.deallocate(__p, __n); }
   1d65b:	90                   	nop
   1d65c:	90                   	nop
   1d65d:	c9                   	leave
   1d65e:	c3                   	ret
   1d65f:	90                   	nop

000000000001d660 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   1d660:	55                   	push   %rbp
   1d661:	48 89 e5             	mov    %rsp,%rbp
   1d664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1d668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d66c:	5d                   	pop    %rbp
   1d66d:	c3                   	ret

000000000001d66e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
   1d66e:	55                   	push   %rbp
   1d66f:	48 89 e5             	mov    %rsp,%rbp
   1d672:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1d676:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __d = difference_type(__n1 - __n2);
   1d67a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d67e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1d682:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
   1d686:	b8 00 00 00 80       	mov    $0x80000000,%eax
   1d68b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1d68f:	7c 07                	jl     1d698 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm+0x2a>
	  return __gnu_cxx::__numeric_traits<int>::__max;
   1d691:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   1d696:	eb 1b                	jmp    1d6b3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm+0x45>
	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
   1d698:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
   1d69f:	ff ff ff 
   1d6a2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   1d6a6:	7f 07                	jg     1d6af <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm+0x41>
	  return __gnu_cxx::__numeric_traits<int>::__min;
   1d6a8:	b8 00 00 00 80       	mov    $0x80000000,%eax
   1d6ad:	eb 04                	jmp    1d6b3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm+0x45>
	  return int(__d);
   1d6af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1d6b3:	5d                   	pop    %rbp
   1d6b4:	c3                   	ret
   1d6b5:	90                   	nop

000000000001d6b6 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   1d6b6:	55                   	push   %rbp
   1d6b7:	48 89 e5             	mov    %rsp,%rbp
   1d6ba:	48 83 ec 10          	sub    $0x10,%rsp
   1d6be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d6c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   1d6c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d6ca:	48 89 c7             	mov    %rax,%rdi
   1d6cd:	e8 50 e3 ff ff       	call   1ba22 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1d6d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1d6d6:	48 89 02             	mov    %rax,(%rdx)
   1d6d9:	90                   	nop
   1d6da:	c9                   	leave
   1d6db:	c3                   	ret

000000000001d6dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   1d6dc:	55                   	push   %rbp
   1d6dd:	48 89 e5             	mov    %rsp,%rbp
   1d6e0:	48 83 ec 10          	sub    $0x10,%rsp
   1d6e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   1d6e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d6ec:	48 89 c7             	mov    %rax,%rdi
   1d6ef:	e8 e0 fe ff ff       	call   1d5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1d6f4:	be 01 00 00 00       	mov    $0x1,%esi
   1d6f9:	48 89 c7             	mov    %rax,%rdi
   1d6fc:	e8 6b 08 00 00       	call   1df6c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1d701:	c9                   	leave
   1d702:	c3                   	ret
   1d703:	90                   	nop

000000000001d704 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   1d704:	55                   	push   %rbp
   1d705:	48 89 e5             	mov    %rsp,%rbp
   1d708:	41 56                	push   %r14
   1d70a:	41 55                	push   %r13
   1d70c:	41 54                	push   %r12
   1d70e:	53                   	push   %rbx
   1d70f:	48 83 ec 30          	sub    $0x30,%rsp
   1d713:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d717:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d71b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d71f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1d723:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   1d727:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d72b:	48 89 c6             	mov    %rax,%rsi
   1d72e:	bf 48 00 00 00       	mov    $0x48,%edi
   1d733:	e8 7c 8a fe ff       	call   61b4 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   1d738:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1d73c:	48 89 c7             	mov    %rax,%rdi
   1d73f:	e8 3b e3 ff ff       	call   1ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1d744:	49 89 c6             	mov    %rax,%r14
   1d747:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d74b:	48 89 c7             	mov    %rax,%rdi
   1d74e:	e8 1e e3 ff ff       	call   1ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1d753:	49 89 c5             	mov    %rax,%r13
   1d756:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d75a:	48 89 c7             	mov    %rax,%rdi
   1d75d:	e8 01 e3 ff ff       	call   1ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1d762:	49 89 c4             	mov    %rax,%r12
   1d765:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1d769:	48 89 c7             	mov    %rax,%rdi
   1d76c:	e8 67 e2 ff ff       	call   1b9d8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1d771:	48 89 c3             	mov    %rax,%rbx
   1d774:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d778:	48 89 c7             	mov    %rax,%rdi
   1d77b:	e8 54 fe ff ff       	call   1d5d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1d780:	4d 89 f0             	mov    %r14,%r8
   1d783:	4c 89 e9             	mov    %r13,%rcx
   1d786:	4c 89 e2             	mov    %r12,%rdx
   1d789:	48 89 de             	mov    %rbx,%rsi
   1d78c:	48 89 c7             	mov    %rax,%rdi
   1d78f:	e8 55 08 00 00       	call   1dfe9 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   1d794:	eb 33                	jmp    1d7c9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   1d796:	48 89 c7             	mov    %rax,%rdi
   1d799:	e8 02 79 fe ff       	call   50a0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   1d79e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1d7a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d7a6:	48 89 d6             	mov    %rdx,%rsi
   1d7a9:	48 89 c7             	mov    %rax,%rdi
   1d7ac:	e8 51 f1 ff ff       	call   1c902 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   1d7b1:	e8 5a 7b fe ff       	call   5310 <__cxa_rethrow@plt>
	  __catch(...)
   1d7b6:	48 89 c3             	mov    %rax,%rbx
   1d7b9:	e8 b2 7b fe ff       	call   5370 <__cxa_end_catch@plt>
   1d7be:	48 89 d8             	mov    %rbx,%rax
   1d7c1:	48 89 c7             	mov    %rax,%rdi
   1d7c4:	e8 d7 7b fe ff       	call   53a0 <_Unwind_Resume@plt>
	}
   1d7c9:	48 83 c4 30          	add    $0x30,%rsp
   1d7cd:	5b                   	pop    %rbx
   1d7ce:	41 5c                	pop    %r12
   1d7d0:	41 5d                	pop    %r13
   1d7d2:	41 5e                	pop    %r14
   1d7d4:	5d                   	pop    %rbp
   1d7d5:	c3                   	ret

000000000001d7d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1d7d6:	55                   	push   %rbp
   1d7d7:	48 89 e5             	mov    %rsp,%rbp
   1d7da:	48 83 ec 20          	sub    $0x20,%rsp
   1d7de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   1d7e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d7e6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1d7ea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1d7ee:	48 89 d6             	mov    %rdx,%rsi
   1d7f1:	48 89 c7             	mov    %rax,%rdi
   1d7f4:	e8 09 e8 ff ff       	call   1c002 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1d7f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d7fd:	c9                   	leave
   1d7fe:	c3                   	ret
   1d7ff:	90                   	nop

000000000001d800 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_EEOT_OT0_>:
	pair(_U1&& __x, _U2&& __y)
   1d800:	55                   	push   %rbp
   1d801:	48 89 e5             	mov    %rsp,%rbp
   1d804:	48 83 ec 20          	sub    $0x20,%rsp
   1d808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d80c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d810:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
   1d814:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d818:	48 89 c7             	mov    %rax,%rdi
   1d81b:	e8 31 08 00 00       	call   1e051 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1d820:	48 8b 10             	mov    (%rax),%rdx
   1d823:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d827:	48 89 10             	mov    %rdx,(%rax)
   1d82a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1d82e:	48 89 c7             	mov    %rax,%rdi
   1d831:	e8 0e 00 00 00       	call   1d844 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1d836:	48 8b 10             	mov    (%rax),%rdx
   1d839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d83d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	{ }
   1d841:	90                   	nop
   1d842:	c9                   	leave
   1d843:	c3                   	ret

000000000001d844 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1d844:	55                   	push   %rbp
   1d845:	48 89 e5             	mov    %rsp,%rbp
   1d848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1d84c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d850:	5d                   	pop    %rbp
   1d851:	c3                   	ret

000000000001d852 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   1d852:	55                   	push   %rbp
   1d853:	48 89 e5             	mov    %rsp,%rbp
   1d856:	48 83 ec 10          	sub    $0x10,%rsp
   1d85a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1d85e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d862:	48 83 c0 20          	add    $0x20,%rax
   1d866:	48 89 c7             	mov    %rax,%rdi
   1d869:	e8 f2 07 00 00       	call   1e060 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1d86e:	c9                   	leave
   1d86f:	c3                   	ret

000000000001d870 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   1d870:	55                   	push   %rbp
   1d871:	48 89 e5             	mov    %rsp,%rbp
   1d874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d878:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   1d87c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d880:	5d                   	pop    %rbp
   1d881:	c3                   	ret

000000000001d882 <_ZSt10destroy_atIP18VkPhysicalDevice_TEvPT_>:
    destroy_at(_Tp* __location)
   1d882:	55                   	push   %rbp
   1d883:	48 89 e5             	mov    %rsp,%rbp
   1d886:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   1d88a:	90                   	nop
   1d88b:	5d                   	pop    %rbp
   1d88c:	c3                   	ret

000000000001d88d <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1d88d:	55                   	push   %rbp
   1d88e:	48 89 e5             	mov    %rsp,%rbp
   1d891:	48 83 ec 10          	sub    $0x10,%rsp
   1d895:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   1d899:	e8 00 89 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1d89e:	84 c0                	test   %al,%al
   1d8a0:	74 0e                	je     1d8b0 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1d8a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d8a6:	48 89 c7             	mov    %rax,%rdi
   1d8a9:	e8 cc 07 00 00       	call   1e07a <_ZSt12construct_atIP18VkPhysicalDevice_TJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   1d8ae:	eb 18                	jmp    1d8c8 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_+0x3b>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1d8b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d8b4:	48 89 c6             	mov    %rax,%rsi
   1d8b7:	bf 08 00 00 00       	mov    $0x8,%edi
   1d8bc:	e8 f3 88 fe ff       	call   61b4 <_ZnwmPv>
   1d8c1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1d8c8:	c9                   	leave
   1d8c9:	c3                   	ret

000000000001d8ca <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1d8ca:	55                   	push   %rbp
   1d8cb:	48 89 e5             	mov    %rsp,%rbp
   1d8ce:	48 83 ec 20          	sub    $0x20,%rsp
   1d8d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d8d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d8da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
   1d8de:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1d8e2:	48 89 c7             	mov    %rax,%rdi
   1d8e5:	e8 b6 07 00 00       	call   1e0a0 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1d8ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d8ee:	48 89 c7             	mov    %rax,%rdi
   1d8f1:	e8 ba 2c ff ff       	call   105b0 <_ZSt17__size_to_integerm>
   1d8f6:	48 89 c1             	mov    %rax,%rcx
   1d8f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d8fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1d901:	48 89 ce             	mov    %rcx,%rsi
   1d904:	48 89 c7             	mov    %rax,%rdi
   1d907:	e8 9f 07 00 00       	call   1e0ab <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1d90c:	c9                   	leave
   1d90d:	c3                   	ret

000000000001d90e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1d90e:	55                   	push   %rbp
   1d90f:	48 89 e5             	mov    %rsp,%rbp
   1d912:	48 83 ec 20          	sub    $0x20,%rsp
   1d916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1d91a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1d91e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1d922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d926:	48 89 c7             	mov    %rax,%rdi
   1d929:	e8 da 07 00 00       	call   1e108 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   1d92e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1d932:	0f 92 c0             	setb   %al
   1d935:	0f b6 c0             	movzbl %al,%eax
   1d938:	48 85 c0             	test   %rax,%rax
   1d93b:	0f 95 c0             	setne  %al
   1d93e:	84 c0                	test   %al,%al
   1d940:	74 1a                	je     1d95c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1d942:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1d949:	ff ff 1f 
   1d94c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1d950:	73 05                	jae    1d957 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1d952:	e8 29 78 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1d957:	e8 24 77 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1d95c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1d960:	48 c1 e0 03          	shl    $0x3,%rax
   1d964:	48 89 c7             	mov    %rax,%rdi
   1d967:	e8 b4 78 fe ff       	call   5220 <_Znwm@plt>
   1d96c:	90                   	nop
      }
   1d96d:	c9                   	leave
   1d96e:	c3                   	ret

000000000001d96f <_ZSt14__relocate_a_1IPP18VkPhysicalDevice_TN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   1d96f:	55                   	push   %rbp
   1d970:	48 89 e5             	mov    %rsp,%rbp
   1d973:	53                   	push   %rbx
   1d974:	48 83 ec 38          	sub    $0x38,%rsp
   1d978:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1d97c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1d980:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1d984:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   1d988:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1d98c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   1d990:	eb 49                	jmp    1d9db <_ZSt14__relocate_a_1IPP18VkPhysicalDevice_TN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x6c>
	std::__relocate_object_a(std::__addressof(*__cur),
   1d992:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d996:	48 89 c7             	mov    %rax,%rdi
   1d999:	e8 05 f6 ff ff       	call   1cfa3 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   1d99e:	48 89 c3             	mov    %rax,%rbx
   1d9a1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1d9a5:	48 89 c7             	mov    %rax,%rdi
   1d9a8:	e8 8f 07 00 00       	call   1e13c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvEdeEv>
   1d9ad:	48 89 c7             	mov    %rax,%rdi
   1d9b0:	e8 ee f5 ff ff       	call   1cfa3 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   1d9b5:	48 89 c1             	mov    %rax,%rcx
   1d9b8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1d9bc:	48 89 c2             	mov    %rax,%rdx
   1d9bf:	48 89 de             	mov    %rbx,%rsi
   1d9c2:	48 89 cf             	mov    %rcx,%rdi
   1d9c5:	e8 83 07 00 00       	call   1e14d <_ZSt19__relocate_object_aIP18VkPhysicalDevice_TS1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   1d9ca:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
   1d9cf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1d9d3:	48 89 c7             	mov    %rax,%rdi
   1d9d6:	e8 41 07 00 00       	call   1e11c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvEppEv>
   1d9db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1d9df:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1d9e3:	75 ad                	jne    1d992 <_ZSt14__relocate_a_1IPP18VkPhysicalDevice_TN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x23>
      return __cur;
   1d9e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1d9e9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1d9ed:	c9                   	leave
   1d9ee:	c3                   	ret
   1d9ef:	90                   	nop

000000000001d9f0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1d9f0:	55                   	push   %rbp
   1d9f1:	48 89 e5             	mov    %rsp,%rbp
   1d9f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1d9f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1d9fc:	5d                   	pop    %rbp
   1d9fd:	c3                   	ret

000000000001d9fe <_ZNKSt15__new_allocatorIN2vk4raii14PhysicalDeviceEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1d9fe:	55                   	push   %rbp
   1d9ff:	48 89 e5             	mov    %rsp,%rbp
   1da02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1da06:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   1da0d:	ff ff 07 
      }
   1da10:	5d                   	pop    %rbp
   1da11:	c3                   	ret

000000000001da12 <_ZSt4moveIRN2vk4raii14PhysicalDeviceEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1da12:	55                   	push   %rbp
   1da13:	48 89 e5             	mov    %rsp,%rbp
   1da16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1da1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da1e:	5d                   	pop    %rbp
   1da1f:	c3                   	ret

000000000001da20 <_ZNSt16allocator_traitsISaIN2vk4raii14PhysicalDeviceEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1da20:	55                   	push   %rbp
   1da21:	48 89 e5             	mov    %rsp,%rbp
   1da24:	48 83 ec 20          	sub    $0x20,%rsp
   1da28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1da2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1da30:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1da34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1da38:	48 89 c7             	mov    %rax,%rdi
   1da3b:	e8 64 07 00 00       	call   1e1a4 <_ZSt7forwardIN2vk4raii14PhysicalDeviceEEOT_RNSt16remove_referenceIS3_E4typeE>
   1da40:	48 89 c2             	mov    %rax,%rdx
   1da43:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1da47:	48 89 d6             	mov    %rdx,%rsi
   1da4a:	48 89 c7             	mov    %rax,%rdi
   1da4d:	e8 60 07 00 00       	call   1e1b2 <_ZSt12construct_atIN2vk4raii14PhysicalDeviceEJS2_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS4_DpOS5_>
	}
   1da52:	90                   	nop
   1da53:	c9                   	leave
   1da54:	c3                   	ret

000000000001da55 <_ZSt10destroy_atIN2vk21QueueFamilyPropertiesEEvPT_>:
    destroy_at(_Tp* __location)
   1da55:	55                   	push   %rbp
   1da56:	48 89 e5             	mov    %rsp,%rbp
   1da59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   1da5d:	90                   	nop
   1da5e:	5d                   	pop    %rbp
   1da5f:	c3                   	ret

000000000001da60 <_ZN2vk21QueueFamilyPropertiesC1Ev>:
  {
    using Type = QueueFamilyGlobalPriorityPropertiesKHR;
  };
  using QueueFamilyGlobalPriorityPropertiesEXT = QueueFamilyGlobalPriorityPropertiesKHR;

  struct QueueFamilyProperties
   1da60:	55                   	push   %rbp
   1da61:	48 89 e5             	mov    %rsp,%rbp
   1da64:	48 83 ec 10          	sub    $0x10,%rsp
   1da68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1da6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da70:	48 89 c7             	mov    %rax,%rdi
   1da73:	e8 e8 aa ff ff       	call   18560 <_ZN2vk5FlagsINS_13QueueFlagBitsEEC1Ev>
   1da78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da7c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   1da83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da87:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   1da8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da92:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   1da99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1da9d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1daa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1daa8:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   1daaf:	90                   	nop
   1dab0:	c9                   	leave
   1dab1:	c3                   	ret

000000000001dab2 <_ZSt10_ConstructIN2vk21QueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1dab2:	55                   	push   %rbp
   1dab3:	48 89 e5             	mov    %rsp,%rbp
   1dab6:	48 83 ec 10          	sub    $0x10,%rsp
   1daba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   1dabe:	e8 db 86 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1dac3:	84 c0                	test   %al,%al
   1dac5:	74 0e                	je     1dad5 <_ZSt10_ConstructIN2vk21QueueFamilyPropertiesEJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1dac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dacb:	48 89 c7             	mov    %rax,%rdi
   1dace:	e8 24 07 00 00       	call   1e1f7 <_ZSt12construct_atIN2vk21QueueFamilyPropertiesEJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   1dad3:	eb 42                	jmp    1db17 <_ZSt10_ConstructIN2vk21QueueFamilyPropertiesEJEEvPT_DpOT0_+0x65>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1dad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dad9:	48 89 c6             	mov    %rax,%rsi
   1dadc:	bf 18 00 00 00       	mov    $0x18,%edi
   1dae1:	e8 ce 86 fe ff       	call   61b4 <_ZnwmPv>
   1dae6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   1daec:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   1daf3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   1dafa:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   1db01:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1db08:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
   1db0f:	48 89 c7             	mov    %rax,%rdi
   1db12:	e8 49 ff ff ff       	call   1da60 <_ZN2vk21QueueFamilyPropertiesC1Ev>
    }
   1db17:	c9                   	leave
   1db18:	c3                   	ret
   1db19:	90                   	nop

000000000001db1a <_ZNSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1db1a:	55                   	push   %rbp
   1db1b:	48 89 e5             	mov    %rsp,%rbp
   1db1e:	48 83 ec 20          	sub    $0x20,%rsp
   1db22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1db26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1db2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1db2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1db32:	48 89 c7             	mov    %rax,%rdi
   1db35:	e8 18 07 00 00       	call   1e252 <_ZNKSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE11_M_max_sizeEv>
   1db3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1db3e:	0f 92 c0             	setb   %al
   1db41:	0f b6 c0             	movzbl %al,%eax
   1db44:	48 85 c0             	test   %rax,%rax
   1db47:	0f 95 c0             	setne  %al
   1db4a:	84 c0                	test   %al,%al
   1db4c:	74 1a                	je     1db68 <_ZNSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1db4e:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
   1db55:	aa aa 0a 
   1db58:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1db5c:	73 05                	jae    1db63 <_ZNSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1db5e:	e8 1d 76 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1db63:	e8 18 75 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1db68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1db6c:	48 89 d0             	mov    %rdx,%rax
   1db6f:	48 01 c0             	add    %rax,%rax
   1db72:	48 01 d0             	add    %rdx,%rax
   1db75:	48 c1 e0 03          	shl    $0x3,%rax
   1db79:	48 89 c7             	mov    %rax,%rdi
   1db7c:	e8 9f 76 fe ff       	call   5220 <_Znwm@plt>
   1db81:	90                   	nop
      }
   1db82:	c9                   	leave
   1db83:	c3                   	ret

000000000001db84 <_ZSt19__relocate_object_aIN2vk21QueueFamilyPropertiesES1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   1db84:	55                   	push   %rbp
   1db85:	48 89 e5             	mov    %rsp,%rbp
   1db88:	48 83 ec 20          	sub    $0x20,%rsp
   1db8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1db90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1db94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   1db98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1db9c:	48 89 c7             	mov    %rax,%rdi
   1db9f:	e8 c2 06 00 00       	call   1e266 <_ZSt4moveIRN2vk21QueueFamilyPropertiesEEONSt16remove_referenceIT_E4typeEOS4_>
   1dba4:	48 89 c2             	mov    %rax,%rdx
   1dba7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1dbab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dbaf:	48 89 ce             	mov    %rcx,%rsi
   1dbb2:	48 89 c7             	mov    %rax,%rdi
   1dbb5:	e8 ba 06 00 00       	call   1e274 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   1dbba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dbbe:	48 89 c7             	mov    %rax,%rdi
   1dbc1:	e8 35 f6 ff ff       	call   1d1fb <_ZSt11__addressofIN2vk21QueueFamilyPropertiesEEPT_RS2_>
   1dbc6:	48 89 c2             	mov    %rax,%rdx
   1dbc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dbcd:	48 89 d6             	mov    %rdx,%rsi
   1dbd0:	48 89 c7             	mov    %rax,%rdi
   1dbd3:	e8 d1 06 00 00       	call   1e2a9 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE7destroyIS1_EEvRS2_PT_>
    }
   1dbd8:	90                   	nop
   1dbd9:	c9                   	leave
   1dbda:	c3                   	ret

000000000001dbdb <_ZSt10destroy_atIN2vk19ExtensionPropertiesEEvPT_>:
    destroy_at(_Tp* __location)
   1dbdb:	55                   	push   %rbp
   1dbdc:	48 89 e5             	mov    %rsp,%rbp
   1dbdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   1dbe3:	90                   	nop
   1dbe4:	5d                   	pop    %rbp
   1dbe5:	c3                   	ret

000000000001dbe6 <_ZN2vk19ExtensionPropertiesC1Ev>:
  struct ExtensionProperties
   1dbe6:	55                   	push   %rbp
   1dbe7:	48 89 e5             	mov    %rsp,%rbp
   1dbea:	48 83 ec 10          	sub    $0x10,%rsp
   1dbee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dbf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dbf6:	48 89 c7             	mov    %rax,%rdi
   1dbf9:	e8 16 9e ff ff       	call   17a14 <_ZN2vk14ArrayWrapper1DIcLm256EEC1Ev>
   1dbfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dc02:	c7 80 00 01 00 00 00 	movl   $0x0,0x100(%rax)
   1dc09:	00 00 00 
   1dc0c:	90                   	nop
   1dc0d:	c9                   	leave
   1dc0e:	c3                   	ret

000000000001dc0f <_ZSt10_ConstructIN2vk19ExtensionPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1dc0f:	55                   	push   %rbp
   1dc10:	48 89 e5             	mov    %rsp,%rbp
   1dc13:	48 83 ec 10          	sub    $0x10,%rsp
   1dc17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   1dc1b:	e8 7e 85 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1dc20:	84 c0                	test   %al,%al
   1dc22:	74 0e                	je     1dc32 <_ZSt10_ConstructIN2vk19ExtensionPropertiesEJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1dc24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dc28:	48 89 c7             	mov    %rax,%rdi
   1dc2b:	e8 98 06 00 00       	call   1e2c8 <_ZSt12construct_atIN2vk19ExtensionPropertiesEJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   1dc30:	eb 59                	jmp    1dc8b <_ZSt10_ConstructIN2vk19ExtensionPropertiesEJEEvPT_DpOT0_+0x7c>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1dc32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dc36:	48 89 c6             	mov    %rax,%rsi
   1dc39:	bf 04 01 00 00       	mov    $0x104,%edi
   1dc3e:	e8 71 85 fe ff       	call   61b4 <_ZnwmPv>
   1dc43:	49 89 c0             	mov    %rax,%r8
   1dc46:	4c 89 c0             	mov    %r8,%rax
   1dc49:	b9 04 01 00 00       	mov    $0x104,%ecx
   1dc4e:	be 00 00 00 00       	mov    $0x0,%esi
   1dc53:	48 89 30             	mov    %rsi,(%rax)
   1dc56:	89 ca                	mov    %ecx,%edx
   1dc58:	48 01 c2             	add    %rax,%rdx
   1dc5b:	48 83 c2 08          	add    $0x8,%rdx
   1dc5f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   1dc63:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1dc67:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1dc6b:	48 29 d0             	sub    %rdx,%rax
   1dc6e:	01 c1                	add    %eax,%ecx
   1dc70:	83 e1 f8             	and    $0xfffffff8,%ecx
   1dc73:	89 c8                	mov    %ecx,%eax
   1dc75:	c1 e8 03             	shr    $0x3,%eax
   1dc78:	89 c1                	mov    %eax,%ecx
   1dc7a:	48 89 d7             	mov    %rdx,%rdi
   1dc7d:	48 89 f0             	mov    %rsi,%rax
   1dc80:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1dc83:	4c 89 c7             	mov    %r8,%rdi
   1dc86:	e8 5b ff ff ff       	call   1dbe6 <_ZN2vk19ExtensionPropertiesC1Ev>
    }
   1dc8b:	c9                   	leave
   1dc8c:	c3                   	ret
   1dc8d:	90                   	nop

000000000001dc8e <_ZNSt15__new_allocatorIN2vk19ExtensionPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1dc8e:	55                   	push   %rbp
   1dc8f:	48 89 e5             	mov    %rsp,%rbp
   1dc92:	48 83 ec 20          	sub    $0x20,%rsp
   1dc96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dc9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1dc9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1dca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dca6:	48 89 c7             	mov    %rax,%rdi
   1dca9:	e8 8a 06 00 00       	call   1e338 <_ZNKSt15__new_allocatorIN2vk19ExtensionPropertiesEE11_M_max_sizeEv>
   1dcae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1dcb2:	0f 92 c0             	setb   %al
   1dcb5:	0f b6 c0             	movzbl %al,%eax
   1dcb8:	48 85 c0             	test   %rax,%rax
   1dcbb:	0f 95 c0             	setne  %al
   1dcbe:	84 c0                	test   %al,%al
   1dcc0:	74 1a                	je     1dcdc <_ZNSt15__new_allocatorIN2vk19ExtensionPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1dcc2:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
   1dcc9:	0f fc 00 
   1dccc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1dcd0:	73 05                	jae    1dcd7 <_ZNSt15__new_allocatorIN2vk19ExtensionPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1dcd2:	e8 a9 74 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1dcd7:	e8 a4 73 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1dcdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1dce0:	48 89 d0             	mov    %rdx,%rax
   1dce3:	48 c1 e0 06          	shl    $0x6,%rax
   1dce7:	48 01 d0             	add    %rdx,%rax
   1dcea:	48 c1 e0 02          	shl    $0x2,%rax
   1dcee:	48 89 c7             	mov    %rax,%rdi
   1dcf1:	e8 2a 75 fe ff       	call   5220 <_Znwm@plt>
   1dcf6:	90                   	nop
      }
   1dcf7:	c9                   	leave
   1dcf8:	c3                   	ret

000000000001dcf9 <_ZSt19__relocate_object_aIN2vk19ExtensionPropertiesES1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   1dcf9:	55                   	push   %rbp
   1dcfa:	48 89 e5             	mov    %rsp,%rbp
   1dcfd:	48 83 ec 20          	sub    $0x20,%rsp
   1dd01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dd05:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1dd09:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   1dd0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dd11:	48 89 c7             	mov    %rax,%rdi
   1dd14:	e8 33 06 00 00       	call   1e34c <_ZSt4moveIRN2vk19ExtensionPropertiesEEONSt16remove_referenceIT_E4typeEOS4_>
   1dd19:	48 89 c2             	mov    %rax,%rdx
   1dd1c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1dd20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dd24:	48 89 ce             	mov    %rcx,%rsi
   1dd27:	48 89 c7             	mov    %rax,%rdi
   1dd2a:	e8 2b 06 00 00       	call   1e35a <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   1dd2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dd33:	48 89 c7             	mov    %rax,%rdi
   1dd36:	e8 e7 f5 ff ff       	call   1d322 <_ZSt11__addressofIN2vk19ExtensionPropertiesEEPT_RS2_>
   1dd3b:	48 89 c2             	mov    %rax,%rdx
   1dd3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1dd42:	48 89 d6             	mov    %rdx,%rsi
   1dd45:	48 89 c7             	mov    %rax,%rdi
   1dd48:	e8 42 06 00 00       	call   1e38f <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE7destroyIS1_EEvRS2_PT_>
    }
   1dd4d:	90                   	nop
   1dd4e:	c9                   	leave
   1dd4f:	c3                   	ret

000000000001dd50 <_ZSt10destroy_atIN2vk15LayerPropertiesEEvPT_>:
    destroy_at(_Tp* __location)
   1dd50:	55                   	push   %rbp
   1dd51:	48 89 e5             	mov    %rsp,%rbp
   1dd54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   1dd58:	90                   	nop
   1dd59:	5d                   	pop    %rbp
   1dd5a:	c3                   	ret
   1dd5b:	90                   	nop

000000000001dd5c <_ZN2vk15LayerPropertiesC1Ev>:
  struct LayerProperties
   1dd5c:	55                   	push   %rbp
   1dd5d:	48 89 e5             	mov    %rsp,%rbp
   1dd60:	48 83 ec 10          	sub    $0x10,%rsp
   1dd64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1dd68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd6c:	48 89 c7             	mov    %rax,%rdi
   1dd6f:	e8 a0 9c ff ff       	call   17a14 <_ZN2vk14ArrayWrapper1DIcLm256EEC1Ev>
   1dd74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd78:	c7 80 00 01 00 00 00 	movl   $0x0,0x100(%rax)
   1dd7f:	00 00 00 
   1dd82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd86:	c7 80 04 01 00 00 00 	movl   $0x0,0x104(%rax)
   1dd8d:	00 00 00 
   1dd90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dd94:	48 05 08 01 00 00    	add    $0x108,%rax
   1dd9a:	48 89 c7             	mov    %rax,%rdi
   1dd9d:	e8 72 9c ff ff       	call   17a14 <_ZN2vk14ArrayWrapper1DIcLm256EEC1Ev>
   1dda2:	90                   	nop
   1dda3:	c9                   	leave
   1dda4:	c3                   	ret

000000000001dda5 <_ZSt10_ConstructIN2vk15LayerPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1dda5:	55                   	push   %rbp
   1dda6:	48 89 e5             	mov    %rsp,%rbp
   1dda9:	48 83 ec 10          	sub    $0x10,%rsp
   1ddad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   1ddb1:	e8 e8 83 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1ddb6:	84 c0                	test   %al,%al
   1ddb8:	74 0e                	je     1ddc8 <_ZSt10_ConstructIN2vk15LayerPropertiesEJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1ddba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ddbe:	48 89 c7             	mov    %rax,%rdi
   1ddc1:	e8 e8 05 00 00       	call   1e3ae <_ZSt12construct_atIN2vk15LayerPropertiesEJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   1ddc6:	eb 59                	jmp    1de21 <_ZSt10_ConstructIN2vk15LayerPropertiesEJEEvPT_DpOT0_+0x7c>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1ddc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ddcc:	48 89 c6             	mov    %rax,%rsi
   1ddcf:	bf 08 02 00 00       	mov    $0x208,%edi
   1ddd4:	e8 db 83 fe ff       	call   61b4 <_ZnwmPv>
   1ddd9:	49 89 c0             	mov    %rax,%r8
   1dddc:	4c 89 c0             	mov    %r8,%rax
   1dddf:	b9 08 02 00 00       	mov    $0x208,%ecx
   1dde4:	be 00 00 00 00       	mov    $0x0,%esi
   1dde9:	48 89 30             	mov    %rsi,(%rax)
   1ddec:	89 ca                	mov    %ecx,%edx
   1ddee:	48 01 c2             	add    %rax,%rdx
   1ddf1:	48 83 c2 08          	add    $0x8,%rdx
   1ddf5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   1ddf9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1ddfd:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1de01:	48 29 d0             	sub    %rdx,%rax
   1de04:	01 c1                	add    %eax,%ecx
   1de06:	83 e1 f8             	and    $0xfffffff8,%ecx
   1de09:	89 c8                	mov    %ecx,%eax
   1de0b:	c1 e8 03             	shr    $0x3,%eax
   1de0e:	89 c1                	mov    %eax,%ecx
   1de10:	48 89 d7             	mov    %rdx,%rdi
   1de13:	48 89 f0             	mov    %rsi,%rax
   1de16:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1de19:	4c 89 c7             	mov    %r8,%rdi
   1de1c:	e8 3b ff ff ff       	call   1dd5c <_ZN2vk15LayerPropertiesC1Ev>
    }
   1de21:	c9                   	leave
   1de22:	c3                   	ret
   1de23:	90                   	nop

000000000001de24 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1de24:	55                   	push   %rbp
   1de25:	48 89 e5             	mov    %rsp,%rbp
   1de28:	48 83 ec 20          	sub    $0x20,%rsp
   1de2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1de30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1de34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1de38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1de3c:	48 89 c7             	mov    %rax,%rdi
   1de3f:	e8 da 05 00 00       	call   1e41e <_ZNKSt15__new_allocatorIN2vk15LayerPropertiesEE11_M_max_sizeEv>
   1de44:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1de48:	0f 92 c0             	setb   %al
   1de4b:	0f b6 c0             	movzbl %al,%eax
   1de4e:	48 85 c0             	test   %rax,%rax
   1de51:	0f 95 c0             	setne  %al
   1de54:	84 c0                	test   %al,%al
   1de56:	74 1a                	je     1de72 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1de58:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1de5f:	07 7e 00 
   1de62:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1de66:	73 05                	jae    1de6d <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1de68:	e8 13 73 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1de6d:	e8 0e 72 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1de72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1de76:	48 89 d0             	mov    %rdx,%rax
   1de79:	48 c1 e0 06          	shl    $0x6,%rax
   1de7d:	48 01 d0             	add    %rdx,%rax
   1de80:	48 c1 e0 03          	shl    $0x3,%rax
   1de84:	48 89 c7             	mov    %rax,%rdi
   1de87:	e8 94 73 fe ff       	call   5220 <_Znwm@plt>
   1de8c:	90                   	nop
      }
   1de8d:	c9                   	leave
   1de8e:	c3                   	ret

000000000001de8f <_ZSt19__relocate_object_aIN2vk15LayerPropertiesES1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   1de8f:	55                   	push   %rbp
   1de90:	48 89 e5             	mov    %rsp,%rbp
   1de93:	48 83 ec 20          	sub    $0x20,%rsp
   1de97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1de9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1de9f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   1dea3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dea7:	48 89 c7             	mov    %rax,%rdi
   1deaa:	e8 83 05 00 00       	call   1e432 <_ZSt4moveIRN2vk15LayerPropertiesEEONSt16remove_referenceIT_E4typeEOS4_>
   1deaf:	48 89 c2             	mov    %rax,%rdx
   1deb2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1deb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1deba:	48 89 ce             	mov    %rcx,%rsi
   1debd:	48 89 c7             	mov    %rax,%rdi
   1dec0:	e8 7b 05 00 00       	call   1e440 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   1dec5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dec9:	48 89 c7             	mov    %rax,%rdi
   1decc:	e8 81 f5 ff ff       	call   1d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>
   1ded1:	48 89 c2             	mov    %rax,%rdx
   1ded4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ded8:	48 89 d6             	mov    %rdx,%rsi
   1dedb:	48 89 c7             	mov    %rax,%rdi
   1dede:	e8 92 05 00 00       	call   1e475 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE7destroyIS1_EEvRS2_PT_>
    }
   1dee3:	90                   	nop
   1dee4:	c9                   	leave
   1dee5:	c3                   	ret

000000000001dee6 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1dee6:	55                   	push   %rbp
   1dee7:	48 89 e5             	mov    %rsp,%rbp
   1deea:	48 83 ec 20          	sub    $0x20,%rsp
   1deee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1def2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1def6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (std::is_constant_evaluated())
   1defa:	e8 aa 82 fe ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
   1deff:	84 c0                	test   %al,%al
   1df01:	74 19                	je     1df1c <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_+0x36>
	  __copy_m(__first, __last, __result);
   1df03:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1df07:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1df0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df0f:	48 89 ce             	mov    %rcx,%rsi
   1df12:	48 89 c7             	mov    %rax,%rdi
   1df15:	e8 7a 05 00 00       	call   1e494 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_>
   1df1a:	eb 18                	jmp    1df34 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_+0x4e>
			      _Category>::__copy_m(__first, __last, __result);
   1df1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1df20:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1df24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df28:	48 89 ce             	mov    %rcx,%rsi
   1df2b:	48 89 c7             	mov    %rax,%rdi
   1df2e:	e8 ad 05 00 00       	call   1e4e0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
   1df33:	90                   	nop
    }
   1df34:	c9                   	leave
   1df35:	c3                   	ret

000000000001df36 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   1df36:	55                   	push   %rbp
   1df37:	48 89 e5             	mov    %rsp,%rbp
   1df3a:	48 83 ec 10          	sub    $0x10,%rsp
   1df3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1df42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df46:	48 89 c7             	mov    %rax,%rdi
   1df49:	e8 a0 c3 fe ff       	call   a2ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
   1df4e:	90                   	nop
   1df4f:	c9                   	leave
   1df50:	c3                   	ret

000000000001df51 <_ZSt10destroy_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEvPT_>:
    destroy_at(_Tp* __location)
   1df51:	55                   	push   %rbp
   1df52:	48 89 e5             	mov    %rsp,%rbp
   1df55:	48 83 ec 10          	sub    $0x10,%rsp
   1df59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__location->~_Tp();
   1df5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1df61:	48 89 c7             	mov    %rax,%rdi
   1df64:	e8 cd ff ff ff       	call   1df36 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    }
   1df69:	90                   	nop
   1df6a:	c9                   	leave
   1df6b:	c3                   	ret

000000000001df6c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   1df6c:	55                   	push   %rbp
   1df6d:	48 89 e5             	mov    %rsp,%rbp
   1df70:	48 83 ec 20          	sub    $0x20,%rsp
   1df74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1df78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1df7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1df80:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1df84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1df88:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   1df8c:	e8 0d 82 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   1df91:	84 c0                	test   %al,%al
   1df93:	74 39                	je     1dfce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m+0x62>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   1df95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1df99:	b9 00 00 00 00       	mov    $0x0,%ecx
   1df9e:	ba 48 00 00 00       	mov    $0x48,%edx
   1dfa3:	48 f7 e2             	mul    %rdx
   1dfa6:	71 05                	jno    1dfad <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m+0x41>
   1dfa8:	b9 01 00 00 00       	mov    $0x1,%ecx
   1dfad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1dfb1:	48 89 c8             	mov    %rcx,%rax
   1dfb4:	83 e0 01             	and    $0x1,%eax
   1dfb7:	84 c0                	test   %al,%al
   1dfb9:	74 05                	je     1dfc0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m+0x54>
	      std::__throw_bad_array_new_length();
   1dfbb:	e8 c0 71 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   1dfc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1dfc4:	48 89 c7             	mov    %rax,%rdi
   1dfc7:	e8 54 72 fe ff       	call   5220 <_Znwm@plt>
   1dfcc:	eb 19                	jmp    1dfe7 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m+0x7b>
	return __allocator_base<_Tp>::allocate(__n, 0);
   1dfce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1dfd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1dfd6:	ba 00 00 00 00       	mov    $0x0,%edx
   1dfdb:	48 89 ce             	mov    %rcx,%rsi
   1dfde:	48 89 c7             	mov    %rax,%rdi
   1dfe1:	e8 94 08 00 00       	call   1e87a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   1dfe6:	90                   	nop
      { return __a.allocate(__n); }
   1dfe7:	c9                   	leave
   1dfe8:	c3                   	ret

000000000001dfe9 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1dfe9:	55                   	push   %rbp
   1dfea:	48 89 e5             	mov    %rsp,%rbp
   1dfed:	41 54                	push   %r12
   1dfef:	53                   	push   %rbx
   1dff0:	48 83 ec 30          	sub    $0x30,%rsp
   1dff4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1dff8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1dffc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1e000:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1e004:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1e008:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e00c:	48 89 c7             	mov    %rax,%rdi
   1e00f:	e8 6b da ff ff       	call   1ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e014:	49 89 c4             	mov    %rax,%r12
   1e017:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1e01b:	48 89 c7             	mov    %rax,%rdi
   1e01e:	e8 4e da ff ff       	call   1ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1e023:	48 89 c3             	mov    %rax,%rbx
   1e026:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e02a:	48 89 c7             	mov    %rax,%rdi
   1e02d:	e8 31 da ff ff       	call   1ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1e032:	48 89 c6             	mov    %rax,%rsi
   1e035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e039:	4c 89 e1             	mov    %r12,%rcx
   1e03c:	48 89 da             	mov    %rbx,%rdx
   1e03f:	48 89 c7             	mov    %rax,%rdi
   1e042:	e8 59 05 00 00       	call   1e5a0 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEJRKSt21piecewise_construct_tSt5tupleIJOS6_EESC_IJEEEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSH_DpOSI_>
	}
   1e047:	90                   	nop
   1e048:	48 83 c4 30          	add    $0x30,%rsp
   1e04c:	5b                   	pop    %rbx
   1e04d:	41 5c                	pop    %r12
   1e04f:	5d                   	pop    %rbp
   1e050:	c3                   	ret

000000000001e051 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e051:	55                   	push   %rbp
   1e052:	48 89 e5             	mov    %rsp,%rbp
   1e055:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e05d:	5d                   	pop    %rbp
   1e05e:	c3                   	ret
   1e05f:	90                   	nop

000000000001e060 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   1e060:	55                   	push   %rbp
   1e061:	48 89 e5             	mov    %rsp,%rbp
   1e064:	48 83 ec 10          	sub    $0x10,%rsp
   1e068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   1e06c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e070:	48 89 c7             	mov    %rax,%rdi
   1e073:	e8 d6 05 00 00       	call   1e64e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1e078:	c9                   	leave
   1e079:	c3                   	ret

000000000001e07a <_ZSt12construct_atIP18VkPhysicalDevice_TJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e07a:	55                   	push   %rbp
   1e07b:	48 89 e5             	mov    %rsp,%rbp
   1e07e:	48 83 ec 10          	sub    $0x10,%rsp
   1e082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e08a:	48 89 c6             	mov    %rax,%rsi
   1e08d:	bf 08 00 00 00       	mov    $0x8,%edi
   1e092:	e8 1d 81 fe ff       	call   61b4 <_ZnwmPv>
   1e097:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1e09e:	c9                   	leave
   1e09f:	c3                   	ret

000000000001e0a0 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1e0a0:	55                   	push   %rbp
   1e0a1:	48 89 e5             	mov    %rsp,%rbp
   1e0a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1e0a8:	90                   	nop
   1e0a9:	5d                   	pop    %rbp
   1e0aa:	c3                   	ret

000000000001e0ab <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1e0ab:	55                   	push   %rbp
   1e0ac:	48 89 e5             	mov    %rsp,%rbp
   1e0af:	48 83 ec 20          	sub    $0x20,%rsp
   1e0b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e0b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e0bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1e0bf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1e0c4:	75 06                	jne    1e0cc <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1e0c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e0ca:	eb 3a                	jmp    1e106 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1e0cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e0d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e0d7:	00 
   1e0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e0dc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1e0e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e0e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e0e8:	48 89 ce             	mov    %rcx,%rsi
   1e0eb:	48 89 c7             	mov    %rax,%rdi
   1e0ee:	e8 69 05 00 00       	call   1e65c <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1e0f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e0f7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e0fe:	00 
   1e0ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e103:	48 01 d0             	add    %rdx,%rax
    }
   1e106:	c9                   	leave
   1e107:	c3                   	ret

000000000001e108 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1e108:	55                   	push   %rbp
   1e109:	48 89 e5             	mov    %rsp,%rbp
   1e10c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1e110:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1e117:	ff ff 0f 
      }
   1e11a:	5d                   	pop    %rbp
   1e11b:	c3                   	ret

000000000001e11c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1e11c:	55                   	push   %rbp
   1e11d:	48 89 e5             	mov    %rsp,%rbp
   1e120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1e124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e128:	48 8b 00             	mov    (%rax),%rax
   1e12b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1e12f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e133:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1e136:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1e13a:	5d                   	pop    %rbp
   1e13b:	c3                   	ret

000000000001e13c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TvEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1e13c:	55                   	push   %rbp
   1e13d:	48 89 e5             	mov    %rsp,%rbp
   1e140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1e144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e148:	48 8b 00             	mov    (%rax),%rax
   1e14b:	5d                   	pop    %rbp
   1e14c:	c3                   	ret

000000000001e14d <_ZSt19__relocate_object_aIP18VkPhysicalDevice_TS1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   1e14d:	55                   	push   %rbp
   1e14e:	48 89 e5             	mov    %rsp,%rbp
   1e151:	48 83 ec 20          	sub    $0x20,%rsp
   1e155:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e159:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e15d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   1e161:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e165:	48 89 c7             	mov    %rax,%rdi
   1e168:	e8 1d 05 00 00       	call   1e68a <_ZSt4moveIRP18VkPhysicalDevice_TEONSt16remove_referenceIT_E4typeEOS4_>
   1e16d:	48 89 c2             	mov    %rax,%rdx
   1e170:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1e174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e178:	48 89 ce             	mov    %rcx,%rsi
   1e17b:	48 89 c7             	mov    %rax,%rdi
   1e17e:	e8 15 05 00 00       	call   1e698 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   1e183:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e187:	48 89 c7             	mov    %rax,%rdi
   1e18a:	e8 14 ee ff ff       	call   1cfa3 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   1e18f:	48 89 c2             	mov    %rax,%rdx
   1e192:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e196:	48 89 d6             	mov    %rdx,%rsi
   1e199:	48 89 c7             	mov    %rax,%rdi
   1e19c:	e8 2c 05 00 00       	call   1e6cd <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE7destroyIS1_EEvRS2_PT_>
    }
   1e1a1:	90                   	nop
   1e1a2:	c9                   	leave
   1e1a3:	c3                   	ret

000000000001e1a4 <_ZSt7forwardIN2vk4raii14PhysicalDeviceEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e1a4:	55                   	push   %rbp
   1e1a5:	48 89 e5             	mov    %rsp,%rbp
   1e1a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e1ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e1b0:	5d                   	pop    %rbp
   1e1b1:	c3                   	ret

000000000001e1b2 <_ZSt12construct_atIN2vk4raii14PhysicalDeviceEJS2_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS4_DpOS5_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e1b2:	55                   	push   %rbp
   1e1b3:	48 89 e5             	mov    %rsp,%rbp
   1e1b6:	53                   	push   %rbx
   1e1b7:	48 83 ec 18          	sub    $0x18,%rsp
   1e1bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e1bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e1c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e1c7:	48 89 c6             	mov    %rax,%rsi
   1e1ca:	bf 10 00 00 00       	mov    $0x10,%edi
   1e1cf:	e8 e0 7f fe ff       	call   61b4 <_ZnwmPv>
   1e1d4:	48 89 c3             	mov    %rax,%rbx
   1e1d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e1db:	48 89 c7             	mov    %rax,%rdi
   1e1de:	e8 c1 ff ff ff       	call   1e1a4 <_ZSt7forwardIN2vk4raii14PhysicalDeviceEEOT_RNSt16remove_referenceIS3_E4typeE>
   1e1e3:	48 89 c6             	mov    %rax,%rsi
   1e1e6:	48 89 df             	mov    %rbx,%rdi
   1e1e9:	e8 f2 91 ff ff       	call   173e0 <_ZN2vk4raii14PhysicalDeviceC1EOS1_>
   1e1ee:	48 89 d8             	mov    %rbx,%rax
   1e1f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e1f5:	c9                   	leave
   1e1f6:	c3                   	ret

000000000001e1f7 <_ZSt12construct_atIN2vk21QueueFamilyPropertiesEJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e1f7:	55                   	push   %rbp
   1e1f8:	48 89 e5             	mov    %rsp,%rbp
   1e1fb:	53                   	push   %rbx
   1e1fc:	48 83 ec 18          	sub    $0x18,%rsp
   1e200:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e208:	48 89 c6             	mov    %rax,%rsi
   1e20b:	bf 18 00 00 00       	mov    $0x18,%edi
   1e210:	e8 9f 7f fe ff       	call   61b4 <_ZnwmPv>
   1e215:	48 89 c3             	mov    %rax,%rbx
   1e218:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   1e21e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
   1e225:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   1e22c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%rbx)
   1e233:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
   1e23a:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%rbx)
   1e241:	48 89 df             	mov    %rbx,%rdi
   1e244:	e8 17 f8 ff ff       	call   1da60 <_ZN2vk21QueueFamilyPropertiesC1Ev>
   1e249:	48 89 d8             	mov    %rbx,%rax
   1e24c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e250:	c9                   	leave
   1e251:	c3                   	ret

000000000001e252 <_ZNKSt15__new_allocatorIN2vk21QueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1e252:	55                   	push   %rbp
   1e253:	48 89 e5             	mov    %rsp,%rbp
   1e256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1e25a:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   1e261:	55 55 05 
      }
   1e264:	5d                   	pop    %rbp
   1e265:	c3                   	ret

000000000001e266 <_ZSt4moveIRN2vk21QueueFamilyPropertiesEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1e266:	55                   	push   %rbp
   1e267:	48 89 e5             	mov    %rsp,%rbp
   1e26a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1e26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e272:	5d                   	pop    %rbp
   1e273:	c3                   	ret

000000000001e274 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1e274:	55                   	push   %rbp
   1e275:	48 89 e5             	mov    %rsp,%rbp
   1e278:	48 83 ec 20          	sub    $0x20,%rsp
   1e27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e284:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1e288:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e28c:	48 89 c7             	mov    %rax,%rdi
   1e28f:	e8 58 04 00 00       	call   1e6ec <_ZSt7forwardIN2vk21QueueFamilyPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e294:	48 89 c2             	mov    %rax,%rdx
   1e297:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e29b:	48 89 d6             	mov    %rdx,%rsi
   1e29e:	48 89 c7             	mov    %rax,%rdi
   1e2a1:	e8 54 04 00 00       	call   1e6fa <_ZSt12construct_atIN2vk21QueueFamilyPropertiesEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   1e2a6:	90                   	nop
   1e2a7:	c9                   	leave
   1e2a8:	c3                   	ret

000000000001e2a9 <_ZNSt16allocator_traitsISaIN2vk21QueueFamilyPropertiesEEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1e2a9:	55                   	push   %rbp
   1e2aa:	48 89 e5             	mov    %rsp,%rbp
   1e2ad:	48 83 ec 10          	sub    $0x10,%rsp
   1e2b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e2b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   1e2b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e2bd:	48 89 c7             	mov    %rax,%rdi
   1e2c0:	e8 90 f7 ff ff       	call   1da55 <_ZSt10destroy_atIN2vk21QueueFamilyPropertiesEEvPT_>
	}
   1e2c5:	90                   	nop
   1e2c6:	c9                   	leave
   1e2c7:	c3                   	ret

000000000001e2c8 <_ZSt12construct_atIN2vk19ExtensionPropertiesEJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e2c8:	55                   	push   %rbp
   1e2c9:	48 89 e5             	mov    %rsp,%rbp
   1e2cc:	53                   	push   %rbx
   1e2cd:	48 83 ec 18          	sub    $0x18,%rsp
   1e2d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e2d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e2d9:	48 89 c6             	mov    %rax,%rsi
   1e2dc:	bf 04 01 00 00       	mov    $0x104,%edi
   1e2e1:	e8 ce 7e fe ff       	call   61b4 <_ZnwmPv>
   1e2e6:	48 89 c3             	mov    %rax,%rbx
   1e2e9:	48 89 d8             	mov    %rbx,%rax
   1e2ec:	b9 04 01 00 00       	mov    $0x104,%ecx
   1e2f1:	be 00 00 00 00       	mov    $0x0,%esi
   1e2f6:	48 89 30             	mov    %rsi,(%rax)
   1e2f9:	89 ca                	mov    %ecx,%edx
   1e2fb:	48 01 c2             	add    %rax,%rdx
   1e2fe:	48 83 c2 08          	add    $0x8,%rdx
   1e302:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   1e306:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1e30a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1e30e:	48 29 d0             	sub    %rdx,%rax
   1e311:	01 c1                	add    %eax,%ecx
   1e313:	83 e1 f8             	and    $0xfffffff8,%ecx
   1e316:	89 c8                	mov    %ecx,%eax
   1e318:	c1 e8 03             	shr    $0x3,%eax
   1e31b:	89 c1                	mov    %eax,%ecx
   1e31d:	48 89 d7             	mov    %rdx,%rdi
   1e320:	48 89 f0             	mov    %rsi,%rax
   1e323:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1e326:	48 89 df             	mov    %rbx,%rdi
   1e329:	e8 b8 f8 ff ff       	call   1dbe6 <_ZN2vk19ExtensionPropertiesC1Ev>
   1e32e:	48 89 d8             	mov    %rbx,%rax
   1e331:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e335:	c9                   	leave
   1e336:	c3                   	ret
   1e337:	90                   	nop

000000000001e338 <_ZNKSt15__new_allocatorIN2vk19ExtensionPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1e338:	55                   	push   %rbp
   1e339:	48 89 e5             	mov    %rsp,%rbp
   1e33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1e340:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1e347:	07 7e 00 
      }
   1e34a:	5d                   	pop    %rbp
   1e34b:	c3                   	ret

000000000001e34c <_ZSt4moveIRN2vk19ExtensionPropertiesEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1e34c:	55                   	push   %rbp
   1e34d:	48 89 e5             	mov    %rsp,%rbp
   1e350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1e354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e358:	5d                   	pop    %rbp
   1e359:	c3                   	ret

000000000001e35a <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1e35a:	55                   	push   %rbp
   1e35b:	48 89 e5             	mov    %rsp,%rbp
   1e35e:	48 83 ec 20          	sub    $0x20,%rsp
   1e362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e36a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1e36e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e372:	48 89 c7             	mov    %rax,%rdi
   1e375:	e8 d3 03 00 00       	call   1e74d <_ZSt7forwardIN2vk19ExtensionPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e37a:	48 89 c2             	mov    %rax,%rdx
   1e37d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e381:	48 89 d6             	mov    %rdx,%rsi
   1e384:	48 89 c7             	mov    %rax,%rdi
   1e387:	e8 cf 03 00 00       	call   1e75b <_ZSt12construct_atIN2vk19ExtensionPropertiesEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   1e38c:	90                   	nop
   1e38d:	c9                   	leave
   1e38e:	c3                   	ret

000000000001e38f <_ZNSt16allocator_traitsISaIN2vk19ExtensionPropertiesEEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1e38f:	55                   	push   %rbp
   1e390:	48 89 e5             	mov    %rsp,%rbp
   1e393:	48 83 ec 10          	sub    $0x10,%rsp
   1e397:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e39b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   1e39f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e3a3:	48 89 c7             	mov    %rax,%rdi
   1e3a6:	e8 30 f8 ff ff       	call   1dbdb <_ZSt10destroy_atIN2vk19ExtensionPropertiesEEvPT_>
	}
   1e3ab:	90                   	nop
   1e3ac:	c9                   	leave
   1e3ad:	c3                   	ret

000000000001e3ae <_ZSt12construct_atIN2vk15LayerPropertiesEJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e3ae:	55                   	push   %rbp
   1e3af:	48 89 e5             	mov    %rsp,%rbp
   1e3b2:	53                   	push   %rbx
   1e3b3:	48 83 ec 18          	sub    $0x18,%rsp
   1e3b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e3bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e3bf:	48 89 c6             	mov    %rax,%rsi
   1e3c2:	bf 08 02 00 00       	mov    $0x208,%edi
   1e3c7:	e8 e8 7d fe ff       	call   61b4 <_ZnwmPv>
   1e3cc:	48 89 c3             	mov    %rax,%rbx
   1e3cf:	48 89 d8             	mov    %rbx,%rax
   1e3d2:	b9 08 02 00 00       	mov    $0x208,%ecx
   1e3d7:	be 00 00 00 00       	mov    $0x0,%esi
   1e3dc:	48 89 30             	mov    %rsi,(%rax)
   1e3df:	89 ca                	mov    %ecx,%edx
   1e3e1:	48 01 c2             	add    %rax,%rdx
   1e3e4:	48 83 c2 08          	add    $0x8,%rdx
   1e3e8:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   1e3ec:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1e3f0:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1e3f4:	48 29 d0             	sub    %rdx,%rax
   1e3f7:	01 c1                	add    %eax,%ecx
   1e3f9:	83 e1 f8             	and    $0xfffffff8,%ecx
   1e3fc:	89 c8                	mov    %ecx,%eax
   1e3fe:	c1 e8 03             	shr    $0x3,%eax
   1e401:	89 c1                	mov    %eax,%ecx
   1e403:	48 89 d7             	mov    %rdx,%rdi
   1e406:	48 89 f0             	mov    %rsi,%rax
   1e409:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1e40c:	48 89 df             	mov    %rbx,%rdi
   1e40f:	e8 48 f9 ff ff       	call   1dd5c <_ZN2vk15LayerPropertiesC1Ev>
   1e414:	48 89 d8             	mov    %rbx,%rax
   1e417:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e41b:	c9                   	leave
   1e41c:	c3                   	ret
   1e41d:	90                   	nop

000000000001e41e <_ZNKSt15__new_allocatorIN2vk15LayerPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1e41e:	55                   	push   %rbp
   1e41f:	48 89 e5             	mov    %rsp,%rbp
   1e422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1e426:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   1e42d:	03 3f 00 
      }
   1e430:	5d                   	pop    %rbp
   1e431:	c3                   	ret

000000000001e432 <_ZSt4moveIRN2vk15LayerPropertiesEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1e432:	55                   	push   %rbp
   1e433:	48 89 e5             	mov    %rsp,%rbp
   1e436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1e43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e43e:	5d                   	pop    %rbp
   1e43f:	c3                   	ret

000000000001e440 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1e440:	55                   	push   %rbp
   1e441:	48 89 e5             	mov    %rsp,%rbp
   1e444:	48 83 ec 20          	sub    $0x20,%rsp
   1e448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e44c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e450:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1e454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e458:	48 89 c7             	mov    %rax,%rdi
   1e45b:	e8 83 03 00 00       	call   1e7e3 <_ZSt7forwardIN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e460:	48 89 c2             	mov    %rax,%rdx
   1e463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e467:	48 89 d6             	mov    %rdx,%rsi
   1e46a:	48 89 c7             	mov    %rax,%rdi
   1e46d:	e8 7f 03 00 00       	call   1e7f1 <_ZSt12construct_atIN2vk15LayerPropertiesEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   1e472:	90                   	nop
   1e473:	c9                   	leave
   1e474:	c3                   	ret

000000000001e475 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1e475:	55                   	push   %rbp
   1e476:	48 89 e5             	mov    %rsp,%rbp
   1e479:	48 83 ec 10          	sub    $0x10,%rsp
   1e47d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e481:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   1e485:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e489:	48 89 c7             	mov    %rax,%rdi
   1e48c:	e8 bf f8 ff ff       	call   1dd50 <_ZSt10destroy_atIN2vk15LayerPropertiesEEvPT_>
	}
   1e491:	90                   	nop
   1e492:	c9                   	leave
   1e493:	c3                   	ret

000000000001e494 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_>:
	__copy_m(_II __first, _II __last, _OI __result)
   1e494:	55                   	push   %rbp
   1e495:	48 89 e5             	mov    %rsp,%rbp
   1e498:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e49c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1e4a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  for(_Distance __n = __last - __first; __n > 0; --__n)
   1e4a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e4a8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1e4ac:	48 c1 f8 03          	sar    $0x3,%rax
   1e4b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1e4b4:	eb 1d                	jmp    1e4d3 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_+0x3f>
	      *__result = *__first;
   1e4b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e4ba:	48 8b 10             	mov    (%rax),%rdx
   1e4bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e4c1:	48 89 10             	mov    %rdx,(%rax)
	      ++__first;
   1e4c4:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      ++__result;
   1e4c9:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
	  for(_Distance __n = __last - __first; __n > 0; --__n)
   1e4ce:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
   1e4d3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1e4d8:	7f dc                	jg     1e4b6 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKPKcPS4_EET0_T_S9_S8_+0x22>
	  return __result;
   1e4da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
	}
   1e4de:	5d                   	pop    %rbp
   1e4df:	c3                   	ret

000000000001e4e0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1e4e0:	55                   	push   %rbp
   1e4e1:	48 89 e5             	mov    %rsp,%rbp
   1e4e4:	48 83 ec 30          	sub    $0x30,%rsp
   1e4e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e4ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1e4f0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1e4f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e4f8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1e4fc:	48 c1 f8 03          	sar    $0x3,%rax
   1e500:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1e504:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1e509:	74 1f                	je     1e52a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1e50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e50f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e516:	00 
   1e517:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1e51b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e51f:	48 89 ce             	mov    %rcx,%rsi
   1e522:	48 89 c7             	mov    %rax,%rdi
   1e525:	e8 36 6e fe ff       	call   5360 <memmove@plt>
	  return __result + _Num;
   1e52a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e52e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1e535:	00 
   1e536:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e53a:	48 01 d0             	add    %rdx,%rax
	}
   1e53d:	c9                   	leave
   1e53e:	c3                   	ret
   1e53f:	90                   	nop

000000000001e540 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1e540:	55                   	push   %rbp
   1e541:	48 89 e5             	mov    %rsp,%rbp
   1e544:	48 83 ec 20          	sub    $0x20,%rsp
   1e548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e54c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e550:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1e554:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e558:	48 89 d0             	mov    %rdx,%rax
   1e55b:	48 c1 e0 03          	shl    $0x3,%rax
   1e55f:	48 01 d0             	add    %rdx,%rax
   1e562:	48 c1 e0 03          	shl    $0x3,%rax
   1e566:	48 89 c2             	mov    %rax,%rdx
   1e569:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e56d:	48 89 d6             	mov    %rdx,%rsi
   1e570:	48 89 c7             	mov    %rax,%rdi
   1e573:	e8 b8 6c fe ff       	call   5230 <_ZdlPvm@plt>
      }
   1e578:	c9                   	leave
   1e579:	c3                   	ret

000000000001e57a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1e57a:	55                   	push   %rbp
   1e57b:	48 89 e5             	mov    %rsp,%rbp
   1e57e:	48 83 ec 10          	sub    $0x10,%rsp
   1e582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e586:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e58a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e58e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e592:	48 89 d6             	mov    %rdx,%rsi
   1e595:	48 89 c7             	mov    %rax,%rdi
   1e598:	e8 49 03 00 00       	call   1e8e6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1e59d:	90                   	nop
   1e59e:	c9                   	leave
   1e59f:	c3                   	ret

000000000001e5a0 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEJRKSt21piecewise_construct_tSt5tupleIJOS6_EESC_IJEEEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSH_DpOSI_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e5a0:	55                   	push   %rbp
   1e5a1:	48 89 e5             	mov    %rsp,%rbp
   1e5a4:	41 56                	push   %r14
   1e5a6:	41 55                	push   %r13
   1e5a8:	41 54                	push   %r12
   1e5aa:	53                   	push   %rbx
   1e5ab:	48 83 ec 30          	sub    $0x30,%rsp
   1e5af:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1e5b3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1e5b7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1e5bb:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e5bf:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
   1e5c3:	4c 89 e6             	mov    %r12,%rsi
   1e5c6:	bf 28 00 00 00       	mov    $0x28,%edi
   1e5cb:	e8 e4 7b fe ff       	call   61b4 <_ZnwmPv>
   1e5d0:	48 89 c3             	mov    %rax,%rbx
   1e5d3:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1e5d9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e5dd:	48 89 c7             	mov    %rax,%rdi
   1e5e0:	e8 9a d4 ff ff       	call   1ba7f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e5e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1e5e9:	48 89 c7             	mov    %rax,%rdi
   1e5ec:	e8 80 d4 ff ff       	call   1ba71 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1e5f1:	48 89 c2             	mov    %rax,%rdx
   1e5f4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1e5f8:	48 89 d6             	mov    %rdx,%rsi
   1e5fb:	48 89 c7             	mov    %rax,%rdi
   1e5fe:	e8 77 ff ff ff       	call   1e57a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1e603:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1e607:	48 89 c7             	mov    %rax,%rdi
   1e60a:	e8 54 d4 ff ff       	call   1ba63 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1e60f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1e613:	48 89 c6             	mov    %rax,%rsi
   1e616:	48 89 df             	mov    %rbx,%rdi
   1e619:	e8 e6 02 00 00       	call   1e904 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1e61e:	48 89 d8             	mov    %rbx,%rax
   1e621:	eb 1e                	jmp    1e641 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEJRKSt21piecewise_construct_tSt5tupleIJOS6_EESC_IJEEEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSH_DpOSI_+0xa1>
   1e623:	49 89 c5             	mov    %rax,%r13
   1e626:	45 84 f6             	test   %r14b,%r14b
   1e629:	74 0b                	je     1e636 <_ZSt12construct_atISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEJRKSt21piecewise_construct_tSt5tupleIJOS6_EESC_IJEEEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSH_DpOSI_+0x96>
   1e62b:	4c 89 e6             	mov    %r12,%rsi
   1e62e:	48 89 df             	mov    %rbx,%rdi
   1e631:	e8 6b 1f ff ff       	call   105a1 <_ZdlPvS_>
   1e636:	4c 89 e8             	mov    %r13,%rax
   1e639:	48 89 c7             	mov    %rax,%rdi
   1e63c:	e8 5f 6d fe ff       	call   53a0 <_Unwind_Resume@plt>
   1e641:	48 83 c4 30          	add    $0x30,%rsp
   1e645:	5b                   	pop    %rbx
   1e646:	41 5c                	pop    %r12
   1e648:	41 5d                	pop    %r13
   1e64a:	41 5e                	pop    %r14
   1e64c:	5d                   	pop    %rbp
   1e64d:	c3                   	ret

000000000001e64e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1e64e:	55                   	push   %rbp
   1e64f:	48 89 e5             	mov    %rsp,%rbp
   1e652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1e656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e65a:	5d                   	pop    %rbp
   1e65b:	c3                   	ret

000000000001e65c <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1e65c:	55                   	push   %rbp
   1e65d:	48 89 e5             	mov    %rsp,%rbp
   1e660:	48 83 ec 20          	sub    $0x20,%rsp
   1e664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e66c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1e670:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1e674:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e67c:	48 89 ce             	mov    %rcx,%rsi
   1e67f:	48 89 c7             	mov    %rax,%rdi
   1e682:	e8 a7 02 00 00       	call   1e92e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1e687:	90                   	nop
   1e688:	c9                   	leave
   1e689:	c3                   	ret

000000000001e68a <_ZSt4moveIRP18VkPhysicalDevice_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1e68a:	55                   	push   %rbp
   1e68b:	48 89 e5             	mov    %rsp,%rbp
   1e68e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1e692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e696:	5d                   	pop    %rbp
   1e697:	c3                   	ret

000000000001e698 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1e698:	55                   	push   %rbp
   1e699:	48 89 e5             	mov    %rsp,%rbp
   1e69c:	48 83 ec 20          	sub    $0x20,%rsp
   1e6a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e6a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e6a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   1e6ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e6b0:	48 89 c7             	mov    %rax,%rdi
   1e6b3:	e8 b1 02 00 00       	call   1e969 <_ZSt7forwardIP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS2_E4typeE>
   1e6b8:	48 89 c2             	mov    %rax,%rdx
   1e6bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e6bf:	48 89 d6             	mov    %rdx,%rsi
   1e6c2:	48 89 c7             	mov    %rax,%rdi
   1e6c5:	e8 ad 02 00 00       	call   1e977 <_ZSt12construct_atIP18VkPhysicalDevice_TJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   1e6ca:	90                   	nop
   1e6cb:	c9                   	leave
   1e6cc:	c3                   	ret

000000000001e6cd <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1e6cd:	55                   	push   %rbp
   1e6ce:	48 89 e5             	mov    %rsp,%rbp
   1e6d1:	48 83 ec 10          	sub    $0x10,%rsp
   1e6d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e6d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   1e6dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1e6e1:	48 89 c7             	mov    %rax,%rdi
   1e6e4:	e8 99 f1 ff ff       	call   1d882 <_ZSt10destroy_atIP18VkPhysicalDevice_TEvPT_>
	}
   1e6e9:	90                   	nop
   1e6ea:	c9                   	leave
   1e6eb:	c3                   	ret

000000000001e6ec <_ZSt7forwardIN2vk21QueueFamilyPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e6ec:	55                   	push   %rbp
   1e6ed:	48 89 e5             	mov    %rsp,%rbp
   1e6f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e6f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e6f8:	5d                   	pop    %rbp
   1e6f9:	c3                   	ret

000000000001e6fa <_ZSt12construct_atIN2vk21QueueFamilyPropertiesEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e6fa:	55                   	push   %rbp
   1e6fb:	48 89 e5             	mov    %rsp,%rbp
   1e6fe:	53                   	push   %rbx
   1e6ff:	48 83 ec 18          	sub    $0x18,%rsp
   1e703:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e707:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e70b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e70f:	48 89 c6             	mov    %rax,%rsi
   1e712:	bf 18 00 00 00       	mov    $0x18,%edi
   1e717:	e8 98 7a fe ff       	call   61b4 <_ZnwmPv>
   1e71c:	48 89 c3             	mov    %rax,%rbx
   1e71f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e723:	48 89 c7             	mov    %rax,%rdi
   1e726:	e8 c1 ff ff ff       	call   1e6ec <_ZSt7forwardIN2vk21QueueFamilyPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e72b:	48 89 c1             	mov    %rax,%rcx
   1e72e:	48 8b 01             	mov    (%rcx),%rax
   1e731:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   1e735:	48 89 03             	mov    %rax,(%rbx)
   1e738:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1e73c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1e740:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1e744:	48 89 d8             	mov    %rbx,%rax
   1e747:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e74b:	c9                   	leave
   1e74c:	c3                   	ret

000000000001e74d <_ZSt7forwardIN2vk19ExtensionPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e74d:	55                   	push   %rbp
   1e74e:	48 89 e5             	mov    %rsp,%rbp
   1e751:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e759:	5d                   	pop    %rbp
   1e75a:	c3                   	ret

000000000001e75b <_ZSt12construct_atIN2vk19ExtensionPropertiesEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e75b:	55                   	push   %rbp
   1e75c:	48 89 e5             	mov    %rsp,%rbp
   1e75f:	53                   	push   %rbx
   1e760:	48 83 ec 18          	sub    $0x18,%rsp
   1e764:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e768:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e76c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e770:	48 89 c6             	mov    %rax,%rsi
   1e773:	bf 04 01 00 00       	mov    $0x104,%edi
   1e778:	e8 37 7a fe ff       	call   61b4 <_ZnwmPv>
   1e77d:	48 89 c3             	mov    %rax,%rbx
   1e780:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e784:	48 89 c7             	mov    %rax,%rdi
   1e787:	e8 c1 ff ff ff       	call   1e74d <_ZSt7forwardIN2vk19ExtensionPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e78c:	48 89 c2             	mov    %rax,%rdx
   1e78f:	48 89 d8             	mov    %rbx,%rax
   1e792:	b9 04 01 00 00       	mov    $0x104,%ecx
   1e797:	48 8b 32             	mov    (%rdx),%rsi
   1e79a:	48 89 30             	mov    %rsi,(%rax)
   1e79d:	89 ce                	mov    %ecx,%esi
   1e79f:	48 01 c6             	add    %rax,%rsi
   1e7a2:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   1e7a6:	89 ce                	mov    %ecx,%esi
   1e7a8:	48 01 d6             	add    %rdx,%rsi
   1e7ab:	48 83 c6 08          	add    $0x8,%rsi
   1e7af:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   1e7b3:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   1e7b7:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1e7bb:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1e7bf:	48 29 f8             	sub    %rdi,%rax
   1e7c2:	48 29 c2             	sub    %rax,%rdx
   1e7c5:	01 c1                	add    %eax,%ecx
   1e7c7:	83 e1 f8             	and    $0xfffffff8,%ecx
   1e7ca:	89 c8                	mov    %ecx,%eax
   1e7cc:	c1 e8 03             	shr    $0x3,%eax
   1e7cf:	89 c0                	mov    %eax,%eax
   1e7d1:	48 89 d6             	mov    %rdx,%rsi
   1e7d4:	48 89 c1             	mov    %rax,%rcx
   1e7d7:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1e7da:	48 89 d8             	mov    %rbx,%rax
   1e7dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e7e1:	c9                   	leave
   1e7e2:	c3                   	ret

000000000001e7e3 <_ZSt7forwardIN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e7e3:	55                   	push   %rbp
   1e7e4:	48 89 e5             	mov    %rsp,%rbp
   1e7e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e7eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e7ef:	5d                   	pop    %rbp
   1e7f0:	c3                   	ret

000000000001e7f1 <_ZSt12construct_atIN2vk15LayerPropertiesEJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e7f1:	55                   	push   %rbp
   1e7f2:	48 89 e5             	mov    %rsp,%rbp
   1e7f5:	53                   	push   %rbx
   1e7f6:	48 83 ec 18          	sub    $0x18,%rsp
   1e7fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e7fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e802:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e806:	48 89 c6             	mov    %rax,%rsi
   1e809:	bf 08 02 00 00       	mov    $0x208,%edi
   1e80e:	e8 a1 79 fe ff       	call   61b4 <_ZnwmPv>
   1e813:	48 89 c3             	mov    %rax,%rbx
   1e816:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e81a:	48 89 c7             	mov    %rax,%rdi
   1e81d:	e8 c1 ff ff ff       	call   1e7e3 <_ZSt7forwardIN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS2_E4typeE>
   1e822:	48 89 c2             	mov    %rax,%rdx
   1e825:	48 89 d8             	mov    %rbx,%rax
   1e828:	b9 08 02 00 00       	mov    $0x208,%ecx
   1e82d:	48 8b 32             	mov    (%rdx),%rsi
   1e830:	48 89 30             	mov    %rsi,(%rax)
   1e833:	89 ce                	mov    %ecx,%esi
   1e835:	48 01 c6             	add    %rax,%rsi
   1e838:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   1e83c:	89 ce                	mov    %ecx,%esi
   1e83e:	48 01 d6             	add    %rdx,%rsi
   1e841:	48 83 c6 08          	add    $0x8,%rsi
   1e845:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   1e849:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   1e84d:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1e851:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1e855:	48 29 f8             	sub    %rdi,%rax
   1e858:	48 29 c2             	sub    %rax,%rdx
   1e85b:	01 c1                	add    %eax,%ecx
   1e85d:	83 e1 f8             	and    $0xfffffff8,%ecx
   1e860:	89 c8                	mov    %ecx,%eax
   1e862:	c1 e8 03             	shr    $0x3,%eax
   1e865:	89 c0                	mov    %eax,%eax
   1e867:	48 89 d6             	mov    %rdx,%rsi
   1e86a:	48 89 c1             	mov    %rax,%rcx
   1e86d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1e870:	48 89 d8             	mov    %rbx,%rax
   1e873:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e877:	c9                   	leave
   1e878:	c3                   	ret
   1e879:	90                   	nop

000000000001e87a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1e87a:	55                   	push   %rbp
   1e87b:	48 89 e5             	mov    %rsp,%rbp
   1e87e:	48 83 ec 20          	sub    $0x20,%rsp
   1e882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1e88a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1e88e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e892:	48 89 c7             	mov    %rax,%rdi
   1e895:	e8 1e 01 00 00       	call   1e9b8 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   1e89a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1e89e:	0f 92 c0             	setb   %al
   1e8a1:	0f b6 c0             	movzbl %al,%eax
   1e8a4:	48 85 c0             	test   %rax,%rax
   1e8a7:	0f 95 c0             	setne  %al
   1e8aa:	84 c0                	test   %al,%al
   1e8ac:	74 1a                	je     1e8c8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1e8ae:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   1e8b5:	38 8e 03 
   1e8b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1e8bc:	73 05                	jae    1e8c3 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1e8be:	e8 bd 68 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1e8c3:	e8 b8 67 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1e8c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e8cc:	48 89 d0             	mov    %rdx,%rax
   1e8cf:	48 c1 e0 03          	shl    $0x3,%rax
   1e8d3:	48 01 d0             	add    %rdx,%rax
   1e8d6:	48 c1 e0 03          	shl    $0x3,%rax
   1e8da:	48 89 c7             	mov    %rax,%rdi
   1e8dd:	e8 3e 69 fe ff       	call   5220 <_Znwm@plt>
   1e8e2:	90                   	nop
      }
   1e8e3:	c9                   	leave
   1e8e4:	c3                   	ret
   1e8e5:	90                   	nop

000000000001e8e6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   1e8e6:	55                   	push   %rbp
   1e8e7:	48 89 e5             	mov    %rsp,%rbp
   1e8ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e8ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1e8f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e8f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1e8fa:	48 8b 12             	mov    (%rdx),%rdx
   1e8fd:	48 89 10             	mov    %rdx,(%rax)
      { }
   1e900:	90                   	nop
   1e901:	5d                   	pop    %rbp
   1e902:	c3                   	ret
   1e903:	90                   	nop

000000000001e904 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1e904:	55                   	push   %rbp
   1e905:	48 89 e5             	mov    %rsp,%rbp
   1e908:	48 83 ec 20          	sub    $0x20,%rsp
   1e90c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1e910:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1e914:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1e918:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1e91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e920:	48 89 ce             	mov    %rcx,%rsi
   1e923:	48 89 c7             	mov    %rax,%rdi
   1e926:	e8 a1 00 00 00       	call   1e9cc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1e92b:	90                   	nop
   1e92c:	c9                   	leave
   1e92d:	c3                   	ret

000000000001e92e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1e92e:	55                   	push   %rbp
   1e92f:	48 89 e5             	mov    %rsp,%rbp
   1e932:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e936:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1e93a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1e93e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1e942:	48 8b 00             	mov    (%rax),%rax
   1e945:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1e949:	eb 10                	jmp    1e95b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1e94b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e94f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1e953:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1e956:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1e95b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e95f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1e963:	75 e6                	jne    1e94b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1e965:	90                   	nop
   1e966:	90                   	nop
   1e967:	5d                   	pop    %rbp
   1e968:	c3                   	ret

000000000001e969 <_ZSt7forwardIP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1e969:	55                   	push   %rbp
   1e96a:	48 89 e5             	mov    %rsp,%rbp
   1e96d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1e971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1e975:	5d                   	pop    %rbp
   1e976:	c3                   	ret

000000000001e977 <_ZSt12construct_atIP18VkPhysicalDevice_TJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   1e977:	55                   	push   %rbp
   1e978:	48 89 e5             	mov    %rsp,%rbp
   1e97b:	53                   	push   %rbx
   1e97c:	48 83 ec 18          	sub    $0x18,%rsp
   1e980:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e984:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   1e988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1e98c:	48 89 c6             	mov    %rax,%rsi
   1e98f:	bf 08 00 00 00       	mov    $0x8,%edi
   1e994:	e8 1b 78 fe ff       	call   61b4 <_ZnwmPv>
   1e999:	48 89 c3             	mov    %rax,%rbx
   1e99c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e9a0:	48 89 c7             	mov    %rax,%rdi
   1e9a3:	e8 c1 ff ff ff       	call   1e969 <_ZSt7forwardIP18VkPhysicalDevice_TEOT_RNSt16remove_referenceIS2_E4typeE>
   1e9a8:	48 8b 00             	mov    (%rax),%rax
   1e9ab:	48 89 03             	mov    %rax,(%rbx)
   1e9ae:	48 89 d8             	mov    %rbx,%rax
   1e9b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1e9b5:	c9                   	leave
   1e9b6:	c3                   	ret
   1e9b7:	90                   	nop

000000000001e9b8 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1e9b8:	55                   	push   %rbp
   1e9b9:	48 89 e5             	mov    %rsp,%rbp
   1e9bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1e9c0:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1e9c7:	1c c7 01 
      }
   1e9ca:	5d                   	pop    %rbp
   1e9cb:	c3                   	ret

000000000001e9cc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1e9cc:	55                   	push   %rbp
   1e9cd:	48 89 e5             	mov    %rsp,%rbp
   1e9d0:	53                   	push   %rbx
   1e9d1:	48 83 ec 28          	sub    $0x28,%rsp
   1e9d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1e9d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1e9dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1e9e1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1e9e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1e9e9:	48 89 c7             	mov    %rax,%rdi
   1e9ec:	e8 25 00 00 00       	call   1ea16 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1e9f1:	48 89 c7             	mov    %rax,%rdi
   1e9f4:	e8 37 00 00 00       	call   1ea30 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   1e9f9:	48 89 c6             	mov    %rax,%rsi
   1e9fc:	48 89 df             	mov    %rbx,%rdi
   1e9ff:	e8 12 b9 fe ff       	call   a316 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1ea04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ea08:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   1ea0f:	90                   	nop
   1ea10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1ea14:	c9                   	leave
   1ea15:	c3                   	ret

000000000001ea16 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   1ea16:	55                   	push   %rbp
   1ea17:	48 89 e5             	mov    %rsp,%rbp
   1ea1a:	48 83 ec 10          	sub    $0x10,%rsp
   1ea1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1ea22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea26:	48 89 c7             	mov    %rax,%rdi
   1ea29:	e8 10 00 00 00       	call   1ea3e <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1ea2e:	c9                   	leave
   1ea2f:	c3                   	ret

000000000001ea30 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1ea30:	55                   	push   %rbp
   1ea31:	48 89 e5             	mov    %rsp,%rbp
   1ea34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1ea38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea3c:	5d                   	pop    %rbp
   1ea3d:	c3                   	ret

000000000001ea3e <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1ea3e:	55                   	push   %rbp
   1ea3f:	48 89 e5             	mov    %rsp,%rbp
   1ea42:	48 83 ec 10          	sub    $0x10,%rsp
   1ea46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1ea4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea4e:	48 89 c7             	mov    %rax,%rdi
   1ea51:	e8 02 00 00 00       	call   1ea58 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1ea56:	c9                   	leave
   1ea57:	c3                   	ret

000000000001ea58 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1ea58:	55                   	push   %rbp
   1ea59:	48 89 e5             	mov    %rsp,%rbp
   1ea5c:	48 83 ec 10          	sub    $0x10,%rsp
   1ea60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ea64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea68:	48 89 c7             	mov    %rax,%rdi
   1ea6b:	e8 02 00 00 00       	call   1ea72 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   1ea70:	c9                   	leave
   1ea71:	c3                   	ret

000000000001ea72 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   1ea72:	55                   	push   %rbp
   1ea73:	48 89 e5             	mov    %rsp,%rbp
   1ea76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ea7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea7e:	48 8b 00             	mov    (%rax),%rax
   1ea81:	5d                   	pop    %rbp
   1ea82:	c3                   	ret
   1ea83:	90                   	nop

000000000001ea84 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   1ea84:	55                   	push   %rbp
   1ea85:	48 89 e5             	mov    %rsp,%rbp
   1ea88:	48 83 ec 10          	sub    $0x10,%rsp
   1ea8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ea90:	48 8d 15 c9 2e 02 00 	lea    0x22ec9(%rip),%rdx        # 41960 <_ZTVSt19bad_optional_access+0x10>
   1ea97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ea9b:	48 89 10             	mov    %rdx,(%rax)
   1ea9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eaa2:	48 89 c7             	mov    %rax,%rdi
   1eaa5:	e8 36 69 fe ff       	call   53e0 <_ZNSt9exceptionD2Ev@plt>
   1eaaa:	90                   	nop
   1eaab:	c9                   	leave
   1eaac:	c3                   	ret
   1eaad:	90                   	nop

000000000001eaae <_ZNSt19bad_optional_accessD0Ev>:
   1eaae:	55                   	push   %rbp
   1eaaf:	48 89 e5             	mov    %rsp,%rbp
   1eab2:	48 83 ec 10          	sub    $0x10,%rsp
   1eab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1eaba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eabe:	48 89 c7             	mov    %rax,%rdi
   1eac1:	e8 be ff ff ff       	call   1ea84 <_ZNSt19bad_optional_accessD1Ev>
   1eac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1eaca:	be 08 00 00 00       	mov    $0x8,%esi
   1eacf:	48 89 c7             	mov    %rax,%rdi
   1ead2:	e8 59 67 fe ff       	call   5230 <_ZdlPvm@plt>
   1ead7:	c9                   	leave
   1ead8:	c3                   	ret

000000000001ead9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
   1ead9:	55                   	push   %rbp
   1eada:	48 89 e5             	mov    %rsp,%rbp
   1eadd:	41 54                	push   %r12
   1eadf:	53                   	push   %rbx
   1eae0:	48 83 ec 30          	sub    $0x30,%rsp
   1eae4:	89 7d cc             	mov    %edi,-0x34(%rbp)
   1eae7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
   1eaeb:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   1eaef:	0f 89 28 07 00 00    	jns    1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eaf5:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
   1eaf9:	0f 8d 3d 01 00 00    	jge    1ec3c <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
   1eaff:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
   1eb06:	0f 84 19 05 00 00    	je     1f025 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
   1eb0c:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
   1eb13:	0f 8f 04 07 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eb19:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
   1eb20:	0f 84 37 05 00 00    	je     1f05d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
   1eb26:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
   1eb2d:	0f 8f ea 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eb33:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   1eb3a:	0f 84 55 05 00 00    	je     1f095 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
   1eb40:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   1eb47:	0f 8f d0 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eb4d:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
   1eb54:	0f 84 73 05 00 00    	je     1f0cd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
   1eb5a:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
   1eb61:	0f 8f b6 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eb67:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
   1eb6e:	0f 84 91 05 00 00    	je     1f105 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
   1eb74:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
   1eb7b:	0f 8f 9c 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eb81:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
   1eb88:	0f 84 af 05 00 00    	je     1f13d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
   1eb8e:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
   1eb95:	0f 8f 82 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1eb9b:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
   1eba2:	0f 84 9d 03 00 00    	je     1ef45 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
   1eba8:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
   1ebaf:	0f 8f 68 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ebb5:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
   1ebbc:	0f 84 bb 03 00 00    	je     1ef7d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
   1ebc2:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
   1ebc9:	0f 8f 4e 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ebcf:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
   1ebd6:	0f 84 99 05 00 00    	je     1f175 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
   1ebdc:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
   1ebe3:	0f 8f 34 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ebe9:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
   1ebf0:	0f 84 bf 03 00 00    	je     1efb5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
   1ebf6:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
   1ebfd:	0f 8f 1a 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ec03:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
   1ec0a:	0f 84 9d 05 00 00    	je     1f1ad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
   1ec10:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
   1ec17:	0f 8f 00 06 00 00    	jg     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ec1d:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
   1ec24:	0f 84 bb 05 00 00    	je     1f1e5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
   1ec2a:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
   1ec31:	0f 84 b6 03 00 00    	je     1efed <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
   1ec37:	e9 e1 05 00 00       	jmp    1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ec3c:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1ec3f:	83 c0 0d             	add    $0xd,%eax
   1ec42:	83 f8 0c             	cmp    $0xc,%eax
   1ec45:	0f 87 d2 05 00 00    	ja     1f21d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   1ec4b:	89 c0                	mov    %eax,%eax
   1ec4d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1ec54:	00 
   1ec55:	48 8d 05 d4 1a 01 00 	lea    0x11ad4(%rip),%rax        # 30730 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
   1ec5c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1ec5f:	48 98                	cltq
   1ec61:	48 8d 15 c8 1a 01 00 	lea    0x11ac8(%rip),%rdx        # 30730 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
   1ec68:	48 01 d0             	add    %rdx,%rax
   1ec6b:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
   1ec6d:	bf 28 00 00 00       	mov    $0x28,%edi
   1ec72:	e8 59 64 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ec77:	48 89 c3             	mov    %rax,%rbx
   1ec7a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ec7e:	48 89 c6             	mov    %rax,%rsi
   1ec81:	48 89 df             	mov    %rbx,%rdi
   1ec84:	e8 3d 8d fe ff       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
   1ec89:	48 8d 05 94 df fe ff 	lea    -0x1206c(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
   1ec90:	48 89 c2             	mov    %rax,%rdx
   1ec93:	48 8d 05 4e 30 02 00 	lea    0x2304e(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ec9a:	48 89 c6             	mov    %rax,%rsi
   1ec9d:	48 89 df             	mov    %rbx,%rdi
   1eca0:	e8 db 66 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
   1eca5:	bf 28 00 00 00       	mov    $0x28,%edi
   1ecaa:	e8 21 64 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ecaf:	48 89 c3             	mov    %rax,%rbx
   1ecb2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ecb6:	48 89 c6             	mov    %rax,%rsi
   1ecb9:	48 89 df             	mov    %rbx,%rdi
   1ecbc:	e8 d7 8d fe ff       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
   1ecc1:	48 8d 05 ec de fe ff 	lea    -0x12114(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
   1ecc8:	48 89 c2             	mov    %rax,%rdx
   1eccb:	48 8d 05 fe 2f 02 00 	lea    0x22ffe(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ecd2:	48 89 c6             	mov    %rax,%rsi
   1ecd5:	48 89 df             	mov    %rbx,%rdi
   1ecd8:	e8 a3 66 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
   1ecdd:	bf 28 00 00 00       	mov    $0x28,%edi
   1ece2:	e8 e9 63 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ece7:	48 89 c3             	mov    %rax,%rbx
   1ecea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ecee:	48 89 c6             	mov    %rax,%rsi
   1ecf1:	48 89 df             	mov    %rbx,%rdi
   1ecf4:	e8 71 8e fe ff       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
   1ecf9:	48 8d 05 44 de fe ff 	lea    -0x121bc(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
   1ed00:	48 89 c2             	mov    %rax,%rdx
   1ed03:	48 8d 05 ae 2f 02 00 	lea    0x22fae(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ed0a:	48 89 c6             	mov    %rax,%rsi
   1ed0d:	48 89 df             	mov    %rbx,%rdi
   1ed10:	e8 6b 66 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
   1ed15:	bf 28 00 00 00       	mov    $0x28,%edi
   1ed1a:	e8 b1 63 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ed1f:	48 89 c3             	mov    %rax,%rbx
   1ed22:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ed26:	48 89 c6             	mov    %rax,%rsi
   1ed29:	48 89 df             	mov    %rbx,%rdi
   1ed2c:	e8 0b 8f fe ff       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
   1ed31:	48 8d 05 9c dd fe ff 	lea    -0x12264(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
   1ed38:	48 89 c2             	mov    %rax,%rdx
   1ed3b:	48 8d 05 5e 2f 02 00 	lea    0x22f5e(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ed42:	48 89 c6             	mov    %rax,%rsi
   1ed45:	48 89 df             	mov    %rbx,%rdi
   1ed48:	e8 33 66 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
   1ed4d:	bf 28 00 00 00       	mov    $0x28,%edi
   1ed52:	e8 79 63 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ed57:	48 89 c3             	mov    %rax,%rbx
   1ed5a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ed5e:	48 89 c6             	mov    %rax,%rsi
   1ed61:	48 89 df             	mov    %rbx,%rdi
   1ed64:	e8 a5 8f fe ff       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
   1ed69:	48 8d 05 f4 dc fe ff 	lea    -0x1230c(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
   1ed70:	48 89 c2             	mov    %rax,%rdx
   1ed73:	48 8d 05 0e 2f 02 00 	lea    0x22f0e(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ed7a:	48 89 c6             	mov    %rax,%rsi
   1ed7d:	48 89 df             	mov    %rbx,%rdi
   1ed80:	e8 fb 65 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
   1ed85:	bf 28 00 00 00       	mov    $0x28,%edi
   1ed8a:	e8 41 63 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ed8f:	48 89 c3             	mov    %rax,%rbx
   1ed92:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ed96:	48 89 c6             	mov    %rax,%rsi
   1ed99:	48 89 df             	mov    %rbx,%rdi
   1ed9c:	e8 3f 90 fe ff       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
   1eda1:	48 8d 05 4c dc fe ff 	lea    -0x123b4(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
   1eda8:	48 89 c2             	mov    %rax,%rdx
   1edab:	48 8d 05 be 2e 02 00 	lea    0x22ebe(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1edb2:	48 89 c6             	mov    %rax,%rsi
   1edb5:	48 89 df             	mov    %rbx,%rdi
   1edb8:	e8 c3 65 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
   1edbd:	bf 28 00 00 00       	mov    $0x28,%edi
   1edc2:	e8 09 63 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1edc7:	48 89 c3             	mov    %rax,%rbx
   1edca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1edce:	48 89 c6             	mov    %rax,%rsi
   1edd1:	48 89 df             	mov    %rbx,%rdi
   1edd4:	e8 d9 90 fe ff       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
   1edd9:	48 8d 05 a4 db fe ff 	lea    -0x1245c(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
   1ede0:	48 89 c2             	mov    %rax,%rdx
   1ede3:	48 8d 05 6e 2e 02 00 	lea    0x22e6e(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1edea:	48 89 c6             	mov    %rax,%rsi
   1eded:	48 89 df             	mov    %rbx,%rdi
   1edf0:	e8 8b 65 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
   1edf5:	bf 28 00 00 00       	mov    $0x28,%edi
   1edfa:	e8 d1 62 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1edff:	48 89 c3             	mov    %rax,%rbx
   1ee02:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ee06:	48 89 c6             	mov    %rax,%rsi
   1ee09:	48 89 df             	mov    %rbx,%rdi
   1ee0c:	e8 73 91 fe ff       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
   1ee11:	48 8d 05 fc da fe ff 	lea    -0x12504(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
   1ee18:	48 89 c2             	mov    %rax,%rdx
   1ee1b:	48 8d 05 1e 2e 02 00 	lea    0x22e1e(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ee22:	48 89 c6             	mov    %rax,%rsi
   1ee25:	48 89 df             	mov    %rbx,%rdi
   1ee28:	e8 53 65 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
   1ee2d:	bf 28 00 00 00       	mov    $0x28,%edi
   1ee32:	e8 99 62 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ee37:	48 89 c3             	mov    %rax,%rbx
   1ee3a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ee3e:	48 89 c6             	mov    %rax,%rsi
   1ee41:	48 89 df             	mov    %rbx,%rdi
   1ee44:	e8 0d 92 fe ff       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
   1ee49:	48 8d 05 54 da fe ff 	lea    -0x125ac(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
   1ee50:	48 89 c2             	mov    %rax,%rdx
   1ee53:	48 8d 05 ce 2d 02 00 	lea    0x22dce(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ee5a:	48 89 c6             	mov    %rax,%rsi
   1ee5d:	48 89 df             	mov    %rbx,%rdi
   1ee60:	e8 1b 65 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
   1ee65:	bf 28 00 00 00       	mov    $0x28,%edi
   1ee6a:	e8 61 62 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ee6f:	48 89 c3             	mov    %rax,%rbx
   1ee72:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ee76:	48 89 c6             	mov    %rax,%rsi
   1ee79:	48 89 df             	mov    %rbx,%rdi
   1ee7c:	e8 a7 92 fe ff       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
   1ee81:	48 8d 05 ac d9 fe ff 	lea    -0x12654(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
   1ee88:	48 89 c2             	mov    %rax,%rdx
   1ee8b:	48 8d 05 7e 2d 02 00 	lea    0x22d7e(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ee92:	48 89 c6             	mov    %rax,%rsi
   1ee95:	48 89 df             	mov    %rbx,%rdi
   1ee98:	e8 e3 64 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
   1ee9d:	bf 28 00 00 00       	mov    $0x28,%edi
   1eea2:	e8 29 62 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1eea7:	48 89 c3             	mov    %rax,%rbx
   1eeaa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1eeae:	48 89 c6             	mov    %rax,%rsi
   1eeb1:	48 89 df             	mov    %rbx,%rdi
   1eeb4:	e8 41 93 fe ff       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
   1eeb9:	48 8d 05 04 d9 fe ff 	lea    -0x126fc(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
   1eec0:	48 89 c2             	mov    %rax,%rdx
   1eec3:	48 8d 05 2e 2d 02 00 	lea    0x22d2e(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1eeca:	48 89 c6             	mov    %rax,%rsi
   1eecd:	48 89 df             	mov    %rbx,%rdi
   1eed0:	e8 ab 64 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
   1eed5:	bf 28 00 00 00       	mov    $0x28,%edi
   1eeda:	e8 f1 61 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1eedf:	48 89 c3             	mov    %rax,%rbx
   1eee2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1eee6:	48 89 c6             	mov    %rax,%rsi
   1eee9:	48 89 df             	mov    %rbx,%rdi
   1eeec:	e8 db 93 fe ff       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
   1eef1:	48 8d 05 5c d8 fe ff 	lea    -0x127a4(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
   1eef8:	48 89 c2             	mov    %rax,%rdx
   1eefb:	48 8d 05 de 2c 02 00 	lea    0x22cde(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ef02:	48 89 c6             	mov    %rax,%rsi
   1ef05:	48 89 df             	mov    %rbx,%rdi
   1ef08:	e8 73 64 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
   1ef0d:	bf 28 00 00 00       	mov    $0x28,%edi
   1ef12:	e8 b9 61 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ef17:	48 89 c3             	mov    %rax,%rbx
   1ef1a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ef1e:	48 89 c6             	mov    %rax,%rsi
   1ef21:	48 89 df             	mov    %rbx,%rdi
   1ef24:	e8 75 94 fe ff       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
   1ef29:	48 8d 05 b4 d7 fe ff 	lea    -0x1284c(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
   1ef30:	48 89 c2             	mov    %rax,%rdx
   1ef33:	48 8d 05 8e 2c 02 00 	lea    0x22c8e(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ef3a:	48 89 c6             	mov    %rax,%rsi
   1ef3d:	48 89 df             	mov    %rbx,%rdi
   1ef40:	e8 3b 64 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
   1ef45:	bf 28 00 00 00       	mov    $0x28,%edi
   1ef4a:	e8 81 61 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ef4f:	48 89 c3             	mov    %rax,%rbx
   1ef52:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ef56:	48 89 c6             	mov    %rax,%rsi
   1ef59:	48 89 df             	mov    %rbx,%rdi
   1ef5c:	e8 0f 95 fe ff       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
   1ef61:	48 8d 05 0c d7 fe ff 	lea    -0x128f4(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
   1ef68:	48 89 c2             	mov    %rax,%rdx
   1ef6b:	48 8d 05 3e 2c 02 00 	lea    0x22c3e(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1ef72:	48 89 c6             	mov    %rax,%rsi
   1ef75:	48 89 df             	mov    %rbx,%rdi
   1ef78:	e8 03 64 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
   1ef7d:	bf 28 00 00 00       	mov    $0x28,%edi
   1ef82:	e8 49 61 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1ef87:	48 89 c3             	mov    %rax,%rbx
   1ef8a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ef8e:	48 89 c6             	mov    %rax,%rsi
   1ef91:	48 89 df             	mov    %rbx,%rdi
   1ef94:	e8 a9 95 fe ff       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
   1ef99:	48 8d 05 64 d6 fe ff 	lea    -0x1299c(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
   1efa0:	48 89 c2             	mov    %rax,%rdx
   1efa3:	48 8d 05 ee 2b 02 00 	lea    0x22bee(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1efaa:	48 89 c6             	mov    %rax,%rsi
   1efad:	48 89 df             	mov    %rbx,%rdi
   1efb0:	e8 cb 63 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
   1efb5:	bf 28 00 00 00       	mov    $0x28,%edi
   1efba:	e8 11 61 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1efbf:	48 89 c3             	mov    %rax,%rbx
   1efc2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1efc6:	48 89 c6             	mov    %rax,%rsi
   1efc9:	48 89 df             	mov    %rbx,%rdi
   1efcc:	e8 43 96 fe ff       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
   1efd1:	48 8d 05 bc d5 fe ff 	lea    -0x12a44(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
   1efd8:	48 89 c2             	mov    %rax,%rdx
   1efdb:	48 8d 05 9e 2b 02 00 	lea    0x22b9e(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1efe2:	48 89 c6             	mov    %rax,%rsi
   1efe5:	48 89 df             	mov    %rbx,%rdi
   1efe8:	e8 93 63 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
   1efed:	bf 28 00 00 00       	mov    $0x28,%edi
   1eff2:	e8 d9 60 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1eff7:	48 89 c3             	mov    %rax,%rbx
   1effa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1effe:	48 89 c6             	mov    %rax,%rsi
   1f001:	48 89 df             	mov    %rbx,%rdi
   1f004:	e8 dd 96 fe ff       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
   1f009:	48 8d 05 14 d5 fe ff 	lea    -0x12aec(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
   1f010:	48 89 c2             	mov    %rax,%rdx
   1f013:	48 8d 05 4e 2b 02 00 	lea    0x22b4e(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f01a:	48 89 c6             	mov    %rax,%rsi
   1f01d:	48 89 df             	mov    %rbx,%rdi
   1f020:	e8 5b 63 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
   1f025:	bf 28 00 00 00       	mov    $0x28,%edi
   1f02a:	e8 a1 60 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f02f:	48 89 c3             	mov    %rax,%rbx
   1f032:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f036:	48 89 c6             	mov    %rax,%rsi
   1f039:	48 89 df             	mov    %rbx,%rdi
   1f03c:	e8 77 97 fe ff       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
   1f041:	48 8d 05 6c d4 fe ff 	lea    -0x12b94(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
   1f048:	48 89 c2             	mov    %rax,%rdx
   1f04b:	48 8d 05 fe 2a 02 00 	lea    0x22afe(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f052:	48 89 c6             	mov    %rax,%rsi
   1f055:	48 89 df             	mov    %rbx,%rdi
   1f058:	e8 23 63 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
   1f05d:	bf 28 00 00 00       	mov    $0x28,%edi
   1f062:	e8 69 60 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f067:	48 89 c3             	mov    %rax,%rbx
   1f06a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f06e:	48 89 c6             	mov    %rax,%rsi
   1f071:	48 89 df             	mov    %rbx,%rdi
   1f074:	e8 11 98 fe ff       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
   1f079:	48 8d 05 c4 d3 fe ff 	lea    -0x12c3c(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
   1f080:	48 89 c2             	mov    %rax,%rdx
   1f083:	48 8d 05 ae 2a 02 00 	lea    0x22aae(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f08a:	48 89 c6             	mov    %rax,%rsi
   1f08d:	48 89 df             	mov    %rbx,%rdi
   1f090:	e8 eb 62 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
   1f095:	bf 28 00 00 00       	mov    $0x28,%edi
   1f09a:	e8 31 60 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f09f:	48 89 c3             	mov    %rax,%rbx
   1f0a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f0a6:	48 89 c6             	mov    %rax,%rsi
   1f0a9:	48 89 df             	mov    %rbx,%rdi
   1f0ac:	e8 ab 98 fe ff       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
   1f0b1:	48 8d 05 1c d3 fe ff 	lea    -0x12ce4(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
   1f0b8:	48 89 c2             	mov    %rax,%rdx
   1f0bb:	48 8d 05 5e 2a 02 00 	lea    0x22a5e(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f0c2:	48 89 c6             	mov    %rax,%rsi
   1f0c5:	48 89 df             	mov    %rbx,%rdi
   1f0c8:	e8 b3 62 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
   1f0cd:	bf 28 00 00 00       	mov    $0x28,%edi
   1f0d2:	e8 f9 5f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f0d7:	48 89 c3             	mov    %rax,%rbx
   1f0da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f0de:	48 89 c6             	mov    %rax,%rsi
   1f0e1:	48 89 df             	mov    %rbx,%rdi
   1f0e4:	e8 45 99 fe ff       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
   1f0e9:	48 8d 05 74 d2 fe ff 	lea    -0x12d8c(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
   1f0f0:	48 89 c2             	mov    %rax,%rdx
   1f0f3:	48 8d 05 0e 2a 02 00 	lea    0x22a0e(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f0fa:	48 89 c6             	mov    %rax,%rsi
   1f0fd:	48 89 df             	mov    %rbx,%rdi
   1f100:	e8 7b 62 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
   1f105:	bf 28 00 00 00       	mov    $0x28,%edi
   1f10a:	e8 c1 5f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f10f:	48 89 c3             	mov    %rax,%rbx
   1f112:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f116:	48 89 c6             	mov    %rax,%rsi
   1f119:	48 89 df             	mov    %rbx,%rdi
   1f11c:	e8 df 99 fe ff       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
   1f121:	48 8d 05 cc d1 fe ff 	lea    -0x12e34(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
   1f128:	48 89 c2             	mov    %rax,%rdx
   1f12b:	48 8d 05 be 29 02 00 	lea    0x229be(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f132:	48 89 c6             	mov    %rax,%rsi
   1f135:	48 89 df             	mov    %rbx,%rdi
   1f138:	e8 43 62 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
   1f13d:	bf 28 00 00 00       	mov    $0x28,%edi
   1f142:	e8 89 5f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f147:	48 89 c3             	mov    %rax,%rbx
   1f14a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f14e:	48 89 c6             	mov    %rax,%rsi
   1f151:	48 89 df             	mov    %rbx,%rdi
   1f154:	e8 79 9a fe ff       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
   1f159:	48 8d 05 24 d1 fe ff 	lea    -0x12edc(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
   1f160:	48 89 c2             	mov    %rax,%rdx
   1f163:	48 8d 05 6e 29 02 00 	lea    0x2296e(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f16a:	48 89 c6             	mov    %rax,%rsi
   1f16d:	48 89 df             	mov    %rbx,%rdi
   1f170:	e8 0b 62 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
   1f175:	bf 28 00 00 00       	mov    $0x28,%edi
   1f17a:	e8 51 5f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f17f:	48 89 c3             	mov    %rax,%rbx
   1f182:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f186:	48 89 c6             	mov    %rax,%rsi
   1f189:	48 89 df             	mov    %rbx,%rdi
   1f18c:	e8 13 9b fe ff       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
   1f191:	48 8d 05 7c d0 fe ff 	lea    -0x12f84(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
   1f198:	48 89 c2             	mov    %rax,%rdx
   1f19b:	48 8d 05 1e 29 02 00 	lea    0x2291e(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f1a2:	48 89 c6             	mov    %rax,%rsi
   1f1a5:	48 89 df             	mov    %rbx,%rdi
   1f1a8:	e8 d3 61 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
   1f1ad:	bf 28 00 00 00       	mov    $0x28,%edi
   1f1b2:	e8 19 5f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f1b7:	48 89 c3             	mov    %rax,%rbx
   1f1ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f1be:	48 89 c6             	mov    %rax,%rsi
   1f1c1:	48 89 df             	mov    %rbx,%rdi
   1f1c4:	e8 ad 9b fe ff       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
   1f1c9:	48 8d 05 d4 cf fe ff 	lea    -0x1302c(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
   1f1d0:	48 89 c2             	mov    %rax,%rdx
   1f1d3:	48 8d 05 ce 28 02 00 	lea    0x228ce(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f1da:	48 89 c6             	mov    %rax,%rsi
   1f1dd:	48 89 df             	mov    %rbx,%rdi
   1f1e0:	e8 9b 61 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
   1f1e5:	bf 28 00 00 00       	mov    $0x28,%edi
   1f1ea:	e8 e1 5e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f1ef:	48 89 c3             	mov    %rax,%rbx
   1f1f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1f1f6:	48 89 c6             	mov    %rax,%rsi
   1f1f9:	48 89 df             	mov    %rbx,%rdi
   1f1fc:	e8 47 9c fe ff       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
   1f201:	48 8d 05 2c cf fe ff 	lea    -0x130d4(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
   1f208:	48 89 c2             	mov    %rax,%rdx
   1f20b:	48 8d 05 7e 28 02 00 	lea    0x2287e(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1f212:	48 89 c6             	mov    %rax,%rsi
   1f215:	48 89 df             	mov    %rbx,%rdi
   1f218:	e8 63 61 fe ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
   1f21d:	bf 28 00 00 00       	mov    $0x28,%edi
   1f222:	e8 a9 5e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1f227:	48 89 c3             	mov    %rax,%rbx
   1f22a:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1f22d:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
   1f230:	0f b6 05 21 31 02 00 	movzbl 0x23121(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   1f237:	84 c0                	test   %al,%al
   1f239:	0f 94 c0             	sete   %al
   1f23c:	84 c0                	test   %al,%al
   1f23e:	74 4a                	je     1f28a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
   1f240:	48 8d 05 11 31 02 00 	lea    0x23111(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   1f247:	48 89 c7             	mov    %rax,%rdi
   1f24a:	e8 71 61 fe ff       	call   53c0 <__cxa_guard_acquire@plt>
   1f24f:	85 c0                	test   %eax,%eax
   1f251:	0f 95 c0             	setne  %al
   1f254:	84 c0                	test   %al,%al
   1f256:	74 32                	je     1f28a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
   1f258:	48 8d 05 99 2f 02 00 	lea    0x22f99(%rip),%rax        # 421f8 <__dso_handle>
   1f25f:	48 89 c2             	mov    %rax,%rdx
   1f262:	48 8d 05 97 2f 02 00 	lea    0x22f97(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
   1f269:	48 89 c6             	mov    %rax,%rsi
   1f26c:	48 8d 05 21 da fe ff 	lea    -0x125df(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
   1f273:	48 89 c7             	mov    %rax,%rdi
   1f276:	e8 55 5f fe ff       	call   51d0 <__cxa_atexit@plt>
   1f27b:	48 8d 05 d6 30 02 00 	lea    0x230d6(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   1f282:	48 89 c7             	mov    %rax,%rdi
   1f285:	e8 76 5e fe ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
   1f28a:	48 8d 15 6f 2f 02 00 	lea    0x22f6f(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
   1f291:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   1f294:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1f298:	89 ce                	mov    %ecx,%esi
   1f29a:	48 89 c7             	mov    %rax,%rdi
   1f29d:	e8 66 70 fe ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
   1f2a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f2a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
   1f2aa:	48 89 c6             	mov    %rax,%rsi
   1f2ad:	48 89 d7             	mov    %rdx,%rdi
   1f2b0:	89 f1                	mov    %esi,%ecx
   1f2b2:	48 89 d0             	mov    %rdx,%rax
   1f2b5:	89 ce                	mov    %ecx,%esi
   1f2b7:	48 89 c2             	mov    %rax,%rdx
   1f2ba:	48 89 df             	mov    %rbx,%rdi
   1f2bd:	e8 4e 85 fe ff       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
   1f2c2:	48 8d 05 7d 86 fe ff 	lea    -0x17983(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
   1f2c9:	48 89 c2             	mov    %rax,%rdx
   1f2cc:	48 8d 05 2d 2a 02 00 	lea    0x22a2d(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
   1f2d3:	48 89 c6             	mov    %rax,%rsi
   1f2d6:	48 89 df             	mov    %rbx,%rdi
   1f2d9:	e8 a2 60 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
   1f2de:	49 89 c4             	mov    %rax,%r12
   1f2e1:	48 89 df             	mov    %rbx,%rdi
   1f2e4:	e8 67 5e fe ff       	call   5150 <__cxa_free_exception@plt>
   1f2e9:	4c 89 e0             	mov    %r12,%rax
   1f2ec:	48 89 c7             	mov    %rax,%rdi
   1f2ef:	e8 ac 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
   1f2f4:	49 89 c4             	mov    %rax,%r12
   1f2f7:	48 89 df             	mov    %rbx,%rdi
   1f2fa:	e8 51 5e fe ff       	call   5150 <__cxa_free_exception@plt>
   1f2ff:	4c 89 e0             	mov    %r12,%rax
   1f302:	48 89 c7             	mov    %rax,%rdi
   1f305:	e8 96 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
   1f30a:	49 89 c4             	mov    %rax,%r12
   1f30d:	48 89 df             	mov    %rbx,%rdi
   1f310:	e8 3b 5e fe ff       	call   5150 <__cxa_free_exception@plt>
   1f315:	4c 89 e0             	mov    %r12,%rax
   1f318:	48 89 c7             	mov    %rax,%rdi
   1f31b:	e8 80 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
   1f320:	49 89 c4             	mov    %rax,%r12
   1f323:	48 89 df             	mov    %rbx,%rdi
   1f326:	e8 25 5e fe ff       	call   5150 <__cxa_free_exception@plt>
   1f32b:	4c 89 e0             	mov    %r12,%rax
   1f32e:	48 89 c7             	mov    %rax,%rdi
   1f331:	e8 6a 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
   1f336:	49 89 c4             	mov    %rax,%r12
   1f339:	48 89 df             	mov    %rbx,%rdi
   1f33c:	e8 0f 5e fe ff       	call   5150 <__cxa_free_exception@plt>
   1f341:	4c 89 e0             	mov    %r12,%rax
   1f344:	48 89 c7             	mov    %rax,%rdi
   1f347:	e8 54 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
   1f34c:	49 89 c4             	mov    %rax,%r12
   1f34f:	48 89 df             	mov    %rbx,%rdi
   1f352:	e8 f9 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f357:	4c 89 e0             	mov    %r12,%rax
   1f35a:	48 89 c7             	mov    %rax,%rdi
   1f35d:	e8 3e 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
   1f362:	49 89 c4             	mov    %rax,%r12
   1f365:	48 89 df             	mov    %rbx,%rdi
   1f368:	e8 e3 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f36d:	4c 89 e0             	mov    %r12,%rax
   1f370:	48 89 c7             	mov    %rax,%rdi
   1f373:	e8 28 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
   1f378:	49 89 c4             	mov    %rax,%r12
   1f37b:	48 89 df             	mov    %rbx,%rdi
   1f37e:	e8 cd 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f383:	4c 89 e0             	mov    %r12,%rax
   1f386:	48 89 c7             	mov    %rax,%rdi
   1f389:	e8 12 60 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
   1f38e:	49 89 c4             	mov    %rax,%r12
   1f391:	48 89 df             	mov    %rbx,%rdi
   1f394:	e8 b7 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f399:	4c 89 e0             	mov    %r12,%rax
   1f39c:	48 89 c7             	mov    %rax,%rdi
   1f39f:	e8 fc 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
   1f3a4:	49 89 c4             	mov    %rax,%r12
   1f3a7:	48 89 df             	mov    %rbx,%rdi
   1f3aa:	e8 a1 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f3af:	4c 89 e0             	mov    %r12,%rax
   1f3b2:	48 89 c7             	mov    %rax,%rdi
   1f3b5:	e8 e6 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
   1f3ba:	49 89 c4             	mov    %rax,%r12
   1f3bd:	48 89 df             	mov    %rbx,%rdi
   1f3c0:	e8 8b 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f3c5:	4c 89 e0             	mov    %r12,%rax
   1f3c8:	48 89 c7             	mov    %rax,%rdi
   1f3cb:	e8 d0 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
   1f3d0:	49 89 c4             	mov    %rax,%r12
   1f3d3:	48 89 df             	mov    %rbx,%rdi
   1f3d6:	e8 75 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f3db:	4c 89 e0             	mov    %r12,%rax
   1f3de:	48 89 c7             	mov    %rax,%rdi
   1f3e1:	e8 ba 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
   1f3e6:	49 89 c4             	mov    %rax,%r12
   1f3e9:	48 89 df             	mov    %rbx,%rdi
   1f3ec:	e8 5f 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f3f1:	4c 89 e0             	mov    %r12,%rax
   1f3f4:	48 89 c7             	mov    %rax,%rdi
   1f3f7:	e8 a4 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
   1f3fc:	49 89 c4             	mov    %rax,%r12
   1f3ff:	48 89 df             	mov    %rbx,%rdi
   1f402:	e8 49 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f407:	4c 89 e0             	mov    %r12,%rax
   1f40a:	48 89 c7             	mov    %rax,%rdi
   1f40d:	e8 8e 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
   1f412:	49 89 c4             	mov    %rax,%r12
   1f415:	48 89 df             	mov    %rbx,%rdi
   1f418:	e8 33 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f41d:	4c 89 e0             	mov    %r12,%rax
   1f420:	48 89 c7             	mov    %rax,%rdi
   1f423:	e8 78 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
   1f428:	49 89 c4             	mov    %rax,%r12
   1f42b:	48 89 df             	mov    %rbx,%rdi
   1f42e:	e8 1d 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f433:	4c 89 e0             	mov    %r12,%rax
   1f436:	48 89 c7             	mov    %rax,%rdi
   1f439:	e8 62 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
   1f43e:	49 89 c4             	mov    %rax,%r12
   1f441:	48 89 df             	mov    %rbx,%rdi
   1f444:	e8 07 5d fe ff       	call   5150 <__cxa_free_exception@plt>
   1f449:	4c 89 e0             	mov    %r12,%rax
   1f44c:	48 89 c7             	mov    %rax,%rdi
   1f44f:	e8 4c 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
   1f454:	49 89 c4             	mov    %rax,%r12
   1f457:	48 89 df             	mov    %rbx,%rdi
   1f45a:	e8 f1 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f45f:	4c 89 e0             	mov    %r12,%rax
   1f462:	48 89 c7             	mov    %rax,%rdi
   1f465:	e8 36 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
   1f46a:	49 89 c4             	mov    %rax,%r12
   1f46d:	48 89 df             	mov    %rbx,%rdi
   1f470:	e8 db 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f475:	4c 89 e0             	mov    %r12,%rax
   1f478:	48 89 c7             	mov    %rax,%rdi
   1f47b:	e8 20 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
   1f480:	49 89 c4             	mov    %rax,%r12
   1f483:	48 89 df             	mov    %rbx,%rdi
   1f486:	e8 c5 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f48b:	4c 89 e0             	mov    %r12,%rax
   1f48e:	48 89 c7             	mov    %rax,%rdi
   1f491:	e8 0a 5f fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
   1f496:	49 89 c4             	mov    %rax,%r12
   1f499:	48 89 df             	mov    %rbx,%rdi
   1f49c:	e8 af 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f4a1:	4c 89 e0             	mov    %r12,%rax
   1f4a4:	48 89 c7             	mov    %rax,%rdi
   1f4a7:	e8 f4 5e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
   1f4ac:	49 89 c4             	mov    %rax,%r12
   1f4af:	48 89 df             	mov    %rbx,%rdi
   1f4b2:	e8 99 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f4b7:	4c 89 e0             	mov    %r12,%rax
   1f4ba:	48 89 c7             	mov    %rax,%rdi
   1f4bd:	e8 de 5e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
   1f4c2:	49 89 c4             	mov    %rax,%r12
   1f4c5:	48 89 df             	mov    %rbx,%rdi
   1f4c8:	e8 83 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f4cd:	4c 89 e0             	mov    %r12,%rax
   1f4d0:	48 89 c7             	mov    %rax,%rdi
   1f4d3:	e8 c8 5e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
   1f4d8:	49 89 c4             	mov    %rax,%r12
   1f4db:	48 89 df             	mov    %rbx,%rdi
   1f4de:	e8 6d 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f4e3:	4c 89 e0             	mov    %r12,%rax
   1f4e6:	48 89 c7             	mov    %rax,%rdi
   1f4e9:	e8 b2 5e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
   1f4ee:	49 89 c4             	mov    %rax,%r12
   1f4f1:	48 89 df             	mov    %rbx,%rdi
   1f4f4:	e8 57 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f4f9:	4c 89 e0             	mov    %r12,%rax
   1f4fc:	48 89 c7             	mov    %rax,%rdi
   1f4ff:	e8 9c 5e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
   1f504:	49 89 c4             	mov    %rax,%r12
   1f507:	48 89 df             	mov    %rbx,%rdi
   1f50a:	e8 41 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f50f:	4c 89 e0             	mov    %r12,%rax
   1f512:	48 89 c7             	mov    %rax,%rdi
   1f515:	e8 86 5e fe ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
   1f51a:	49 89 c4             	mov    %rax,%r12
   1f51d:	48 89 df             	mov    %rbx,%rdi
   1f520:	e8 2b 5c fe ff       	call   5150 <__cxa_free_exception@plt>
   1f525:	4c 89 e0             	mov    %r12,%rax
   1f528:	48 89 c7             	mov    %rax,%rdi
   1f52b:	e8 70 5e fe ff       	call   53a0 <_Unwind_Resume@plt>

000000000001f530 <_ZN4rtvc17selectPresentModeERKNS_8SettingsERKSt6vectorIN2vk14PresentModeKHRESaIS5_EE>:

namespace rtvc {

vk::PresentModeKHR selectPresentMode(
    const Settings &settings,
    const std::vector<vk::PresentModeKHR> &availablePresentModes) {
   1f530:	55                   	push   %rbp
   1f531:	48 89 e5             	mov    %rsp,%rbp
   1f534:	48 83 ec 30          	sub    $0x30,%rsp
   1f538:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1f53c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  for (auto &presentMode : availablePresentModes) {
   1f540:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1f544:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1f548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f54c:	48 89 c7             	mov    %rax,%rdi
   1f54f:	e8 68 0f 00 00       	call   204bc <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE5beginEv>
   1f554:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1f558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1f55c:	48 89 c7             	mov    %rax,%rdi
   1f55f:	e8 7e 0f 00 00       	call   204e2 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE3endEv>
   1f564:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1f568:	eb 35                	jmp    1f59f <_ZN4rtvc17selectPresentModeERKNS_8SettingsERKSt6vectorIN2vk14PresentModeKHRESaIS5_EE+0x6f>
   1f56a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1f56e:	48 89 c7             	mov    %rax,%rdi
   1f571:	e8 66 0b 00 00       	call   200dc <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEdeEv>
   1f576:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if (presentMode == settings.presentMode) {
   1f57a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f57e:	8b 10                	mov    (%rax),%edx
   1f580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1f584:	8b 40 04             	mov    0x4(%rax),%eax
   1f587:	39 c2                	cmp    %eax,%edx
   1f589:	75 08                	jne    1f593 <_ZN4rtvc17selectPresentModeERKNS_8SettingsERKSt6vectorIN2vk14PresentModeKHRESaIS5_EE+0x63>
      return presentMode;
   1f58b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1f58f:	8b 00                	mov    (%rax),%eax
   1f591:	eb 2b                	jmp    1f5be <_ZN4rtvc17selectPresentModeERKNS_8SettingsERKSt6vectorIN2vk14PresentModeKHRESaIS5_EE+0x8e>
  for (auto &presentMode : availablePresentModes) {
   1f593:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1f597:	48 89 c7             	mov    %rax,%rdi
   1f59a:	e8 6d 0f 00 00       	call   2050c <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEppEv>
   1f59f:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1f5a3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1f5a7:	48 89 d6             	mov    %rdx,%rsi
   1f5aa:	48 89 c7             	mov    %rax,%rdi
   1f5ad:	e8 e1 0a 00 00       	call   20093 <_ZN9__gnu_cxxeqIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   1f5b2:	83 f0 01             	xor    $0x1,%eax
   1f5b5:	84 c0                	test   %al,%al
   1f5b7:	75 b1                	jne    1f56a <_ZN4rtvc17selectPresentModeERKNS_8SettingsERKSt6vectorIN2vk14PresentModeKHRESaIS5_EE+0x3a>
    }
  }
  return vk::PresentModeKHR::eFifo;
   1f5b9:	b8 02 00 00 00       	mov    $0x2,%eax
}
   1f5be:	c9                   	leave
   1f5bf:	c3                   	ret

000000000001f5c0 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE>:

SwapchainWrapper makeSwapchain(const Settings &settings,
                               const vk::raii::SurfaceKHR &surface,
                               const DeviceWrapper &device) {
   1f5c0:	55                   	push   %rbp
   1f5c1:	48 89 e5             	mov    %rsp,%rbp
   1f5c4:	41 56                	push   %r14
   1f5c6:	41 55                	push   %r13
   1f5c8:	41 54                	push   %r12
   1f5ca:	53                   	push   %rbx
   1f5cb:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
   1f5d2:	48 89 bd 38 fe ff ff 	mov    %rdi,-0x1c8(%rbp)
   1f5d9:	48 89 b5 30 fe ff ff 	mov    %rsi,-0x1d0(%rbp)
   1f5e0:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
   1f5e7:	48 89 8d 20 fe ff ff 	mov    %rcx,-0x1e0(%rbp)
  auto surfaceCapabilities =
      device.physical.getSurfaceCapabilitiesKHR(*surface);
   1f5ee:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
   1f5f5:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1f5f9:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   1f600:	48 89 c7             	mov    %rax,%rdi
   1f603:	e8 de 83 ff ff       	call   179e6 <_ZNK2vk4raii10SurfaceKHRdeEv>
   1f608:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
   1f60c:	48 8b 00             	mov    (%rax),%rax
   1f60f:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    }

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE VULKAN_HPP_NAMESPACE::SurfaceCapabilitiesKHR
                                           PhysicalDevice::getSurfaceCapabilitiesKHR( VULKAN_HPP_NAMESPACE::SurfaceKHR surface ) const
    {
      VULKAN_HPP_ASSERT( getDispatcher()->vkGetPhysicalDeviceSurfaceCapabilitiesKHR &&
   1f616:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f61a:	48 89 c7             	mov    %rax,%rdi
   1f61d:	e8 62 e3 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f622:	48 8b 80 80 02 00 00 	mov    0x280(%rax),%rax
   1f629:	48 85 c0             	test   %rax,%rax
   1f62c:	75 28                	jne    1f656 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x96>
   1f62e:	48 8d 05 5b 12 01 00 	lea    0x1125b(%rip),%rax        # 30890 <_ZNSt8__detailL19__atomic_spin_countE+0x11c>
   1f635:	48 89 c1             	mov    %rax,%rcx
   1f638:	ba 19 32 00 00       	mov    $0x3219,%edx
   1f63d:	48 8d 05 8c 11 01 00 	lea    0x1118c(%rip),%rax        # 307d0 <_ZNSt8__detailL19__atomic_spin_countE+0x5c>
   1f644:	48 89 c6             	mov    %rax,%rsi
   1f647:	48 8d 05 aa 12 01 00 	lea    0x112aa(%rip),%rax        # 308f8 <_ZNSt8__detailL19__atomic_spin_countE+0x184>
   1f64e:	48 89 c7             	mov    %rax,%rdi
   1f651:	e8 ba 5a fe ff       	call   5110 <__assert_fail@plt>
                         "Function <vkGetPhysicalDeviceSurfaceCapabilitiesKHR> needs extension <VK_KHR_surface> enabled!" );

      VULKAN_HPP_NAMESPACE::SurfaceCapabilitiesKHR surfaceCapabilities;
   1f656:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f65a:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
   1f661:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
   1f668:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
   1f66f:	66 0f 7e 85 50 ff ff 	movd   %xmm0,-0xb0(%rbp)
   1f676:	ff 
   1f677:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%rbp)
   1f67e:	00 00 00 
      VkResult result = getDispatcher()->vkGetPhysicalDeviceSurfaceCapabilitiesKHR( static_cast<VkPhysicalDevice>( m_physicalDevice ),
   1f681:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f685:	48 89 c7             	mov    %rax,%rdi
   1f688:	e8 f7 e2 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f68d:	48 8b 98 80 02 00 00 	mov    0x280(%rax),%rbx
   1f694:	48 8d 85 48 fe ff ff 	lea    -0x1b8(%rbp),%rax
   1f69b:	48 89 c7             	mov    %rax,%rdi
   1f69e:	e8 95 98 fe ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
   1f6a3:	49 89 c4             	mov    %rax,%r12
   1f6a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1f6aa:	48 89 c7             	mov    %rax,%rdi
   1f6ad:	e8 c0 e2 fe ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
   1f6b2:	48 89 c1             	mov    %rax,%rcx
   1f6b5:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1f6bc:	48 89 c2             	mov    %rax,%rdx
   1f6bf:	4c 89 e6             	mov    %r12,%rsi
   1f6c2:	48 89 cf             	mov    %rcx,%rdi
   1f6c5:	ff d3                	call   *%rbx
   1f6c7:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   1f6ca:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1f6cd:	89 45 b0             	mov    %eax,-0x50(%rbp)
   1f6d0:	48 8d 05 c1 12 01 00 	lea    0x112c1(%rip),%rax        # 30998 <_ZNSt8__detailL19__atomic_spin_countE+0x224>
   1f6d7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    if ( result != Result::eSuccess )
   1f6db:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
   1f6df:	74 11                	je     1f6f2 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x132>
      throwResultException( result, message );
   1f6e1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1f6e5:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1f6e8:	48 89 d6             	mov    %rdx,%rsi
   1f6eb:	89 c7                	mov    %eax,%edi
   1f6ed:	e8 e7 f3 ff ff       	call   1ead9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
   1f6f2:	90                   	nop
                                                                                    static_cast<VkSurfaceKHR>( surface ),
                                                                                    reinterpret_cast<VkSurfaceCapabilitiesKHR *>( &surfaceCapabilities ) );
      resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::PhysicalDevice::getSurfaceCapabilitiesKHR" );

      return surfaceCapabilities;
   1f6f3:	90                   	nop
  auto surfaceFormats = device.physical.getSurfaceFormatsKHR(*surface);
   1f6f4:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
   1f6fb:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1f6ff:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   1f706:	48 89 c7             	mov    %rax,%rdi
   1f709:	e8 d8 82 ff ff       	call   179e6 <_ZNK2vk4raii10SurfaceKHRdeEv>
   1f70e:	48 89 5d a0          	mov    %rbx,-0x60(%rbp)
   1f712:	48 8b 00             	mov    (%rax),%rax
   1f715:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
   1f71c:	48 8d 9d 00 ff ff ff 	lea    -0x100(%rbp),%rbx
    }

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE std::vector<VULKAN_HPP_NAMESPACE::SurfaceFormatKHR>
                                           PhysicalDevice::getSurfaceFormatsKHR( VULKAN_HPP_NAMESPACE::SurfaceKHR surface ) const
    {
      VULKAN_HPP_ASSERT( getDispatcher()->vkGetPhysicalDeviceSurfaceFormatsKHR &&
   1f723:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f727:	48 89 c7             	mov    %rax,%rdi
   1f72a:	e8 55 e2 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f72f:	48 8b 80 88 02 00 00 	mov    0x288(%rax),%rax
   1f736:	48 85 c0             	test   %rax,%rax
   1f739:	75 28                	jne    1f763 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x1a3>
   1f73b:	48 8d 05 86 12 01 00 	lea    0x11286(%rip),%rax        # 309c8 <_ZNSt8__detailL19__atomic_spin_countE+0x254>
   1f742:	48 89 c1             	mov    %rax,%rcx
   1f745:	ba 28 32 00 00       	mov    $0x3228,%edx
   1f74a:	48 8d 05 7f 10 01 00 	lea    0x1107f(%rip),%rax        # 307d0 <_ZNSt8__detailL19__atomic_spin_countE+0x5c>
   1f751:	48 89 c6             	mov    %rax,%rsi
   1f754:	48 8d 05 d5 12 01 00 	lea    0x112d5(%rip),%rax        # 30a30 <_ZNSt8__detailL19__atomic_spin_countE+0x2bc>
   1f75b:	48 89 c7             	mov    %rax,%rdi
   1f75e:	e8 ad 59 fe ff       	call   5110 <__assert_fail@plt>
                         "Function <vkGetPhysicalDeviceSurfaceFormatsKHR> needs extension <VK_KHR_surface> enabled!" );

      std::vector<VULKAN_HPP_NAMESPACE::SurfaceFormatKHR> surfaceFormats;
   1f763:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f767:	0f 11 03             	movups %xmm0,(%rbx)
   1f76a:	66 0f d6 43 10       	movq   %xmm0,0x10(%rbx)
      uint32_t                                            surfaceFormatCount;
      VkResult                                            result;
      do
      {
        result = getDispatcher()->vkGetPhysicalDeviceSurfaceFormatsKHR(
   1f76f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f773:	48 89 c7             	mov    %rax,%rdi
   1f776:	e8 09 e2 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f77b:	4c 8b a0 88 02 00 00 	mov    0x288(%rax),%r12
   1f782:	48 8d 85 58 fe ff ff 	lea    -0x1a8(%rbp),%rax
   1f789:	48 89 c7             	mov    %rax,%rdi
   1f78c:	e8 a7 97 fe ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
   1f791:	49 89 c5             	mov    %rax,%r13
   1f794:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f798:	48 89 c7             	mov    %rax,%rdi
   1f79b:	e8 d2 e1 fe ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
   1f7a0:	48 89 c7             	mov    %rax,%rdi
   1f7a3:	48 8d 85 54 fe ff ff 	lea    -0x1ac(%rbp),%rax
   1f7aa:	b9 00 00 00 00       	mov    $0x0,%ecx
   1f7af:	48 89 c2             	mov    %rax,%rdx
   1f7b2:	4c 89 ee             	mov    %r13,%rsi
   1f7b5:	41 ff d4             	call   *%r12
   1f7b8:	89 45 9c             	mov    %eax,-0x64(%rbp)
          static_cast<VkPhysicalDevice>( m_physicalDevice ), static_cast<VkSurfaceKHR>( surface ), &surfaceFormatCount, nullptr );
        if ( ( result == VK_SUCCESS ) && surfaceFormatCount )
   1f7bb:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
   1f7bf:	75 72                	jne    1f833 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x273>
   1f7c1:	8b 85 54 fe ff ff    	mov    -0x1ac(%rbp),%eax
   1f7c7:	85 c0                	test   %eax,%eax
   1f7c9:	74 68                	je     1f833 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x273>
        {
          surfaceFormats.resize( surfaceFormatCount );
   1f7cb:	8b 85 54 fe ff ff    	mov    -0x1ac(%rbp),%eax
   1f7d1:	89 c0                	mov    %eax,%eax
   1f7d3:	48 89 c6             	mov    %rax,%rsi
   1f7d6:	48 89 df             	mov    %rbx,%rdi
   1f7d9:	e8 a4 0a 00 00       	call   20282 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE6resizeEm>
          result = getDispatcher()->vkGetPhysicalDeviceSurfaceFormatsKHR( static_cast<VkPhysicalDevice>( m_physicalDevice ),
   1f7de:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f7e2:	48 89 c7             	mov    %rax,%rdi
   1f7e5:	e8 9a e1 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f7ea:	4c 8b a0 88 02 00 00 	mov    0x288(%rax),%r12
                                                                          static_cast<VkSurfaceKHR>( surface ),
                                                                          &surfaceFormatCount,
                                                                          reinterpret_cast<VkSurfaceFormatKHR *>( surfaceFormats.data() ) );
   1f7f1:	48 89 df             	mov    %rbx,%rdi
   1f7f4:	e8 0f 0b 00 00       	call   20308 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4dataEv>
   1f7f9:	49 89 c6             	mov    %rax,%r14
          result = getDispatcher()->vkGetPhysicalDeviceSurfaceFormatsKHR( static_cast<VkPhysicalDevice>( m_physicalDevice ),
   1f7fc:	48 8d 85 58 fe ff ff 	lea    -0x1a8(%rbp),%rax
   1f803:	48 89 c7             	mov    %rax,%rdi
   1f806:	e8 2d 97 fe ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
   1f80b:	49 89 c5             	mov    %rax,%r13
   1f80e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1f812:	48 89 c7             	mov    %rax,%rdi
   1f815:	e8 58 e1 fe ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
   1f81a:	48 89 c7             	mov    %rax,%rdi
   1f81d:	48 8d 85 54 fe ff ff 	lea    -0x1ac(%rbp),%rax
   1f824:	4c 89 f1             	mov    %r14,%rcx
   1f827:	48 89 c2             	mov    %rax,%rdx
   1f82a:	4c 89 ee             	mov    %r13,%rsi
   1f82d:	41 ff d4             	call   *%r12
   1f830:	89 45 9c             	mov    %eax,-0x64(%rbp)
        }
      } while ( result == VK_INCOMPLETE );
   1f833:	83 7d 9c 05          	cmpl   $0x5,-0x64(%rbp)
   1f837:	0f 84 32 ff ff ff    	je     1f76f <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x1af>
   1f83d:	8b 45 9c             	mov    -0x64(%rbp),%eax
   1f840:	89 45 98             	mov    %eax,-0x68(%rbp)
   1f843:	48 8d 05 7e 12 01 00 	lea    0x1127e(%rip),%rax        # 30ac8 <_ZNSt8__detailL19__atomic_spin_countE+0x354>
   1f84a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    if ( result != Result::eSuccess )
   1f84e:	83 7d 98 00          	cmpl   $0x0,-0x68(%rbp)
   1f852:	74 11                	je     1f865 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x2a5>
      throwResultException( result, message );
   1f854:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
   1f858:	8b 45 98             	mov    -0x68(%rbp),%eax
   1f85b:	48 89 d6             	mov    %rdx,%rsi
   1f85e:	89 c7                	mov    %eax,%edi
   1f860:	e8 74 f2 ff ff       	call   1ead9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
   1f865:	90                   	nop
      resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::PhysicalDevice::getSurfaceFormatsKHR" );
      VULKAN_HPP_ASSERT( surfaceFormatCount <= surfaceFormats.size() );
   1f866:	8b 85 54 fe ff ff    	mov    -0x1ac(%rbp),%eax
   1f86c:	41 89 c4             	mov    %eax,%r12d
   1f86f:	48 89 df             	mov    %rbx,%rdi
   1f872:	e8 b5 0a 00 00       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   1f877:	4c 39 e0             	cmp    %r12,%rax
   1f87a:	73 28                	jae    1f8a4 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x2e4>
   1f87c:	48 8d 05 45 11 01 00 	lea    0x11145(%rip),%rax        # 309c8 <_ZNSt8__detailL19__atomic_spin_countE+0x254>
   1f883:	48 89 c1             	mov    %rax,%rcx
   1f886:	ba 3c 32 00 00       	mov    $0x323c,%edx
   1f88b:	48 8d 05 3e 0f 01 00 	lea    0x10f3e(%rip),%rax        # 307d0 <_ZNSt8__detailL19__atomic_spin_countE+0x5c>
   1f892:	48 89 c6             	mov    %rax,%rsi
   1f895:	48 8d 05 5c 12 01 00 	lea    0x1125c(%rip),%rax        # 30af8 <_ZNSt8__detailL19__atomic_spin_countE+0x384>
   1f89c:	48 89 c7             	mov    %rax,%rdi
   1f89f:	e8 6c 58 fe ff       	call   5110 <__assert_fail@plt>
      if ( surfaceFormatCount < surfaceFormats.size() )
   1f8a4:	8b 85 54 fe ff ff    	mov    -0x1ac(%rbp),%eax
   1f8aa:	41 89 c4             	mov    %eax,%r12d
   1f8ad:	48 89 df             	mov    %rbx,%rdi
   1f8b0:	e8 77 0a 00 00       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   1f8b5:	49 39 c4             	cmp    %rax,%r12
   1f8b8:	0f 92 c0             	setb   %al
   1f8bb:	84 c0                	test   %al,%al
   1f8bd:	74 2b                	je     1f8ea <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x32a>
      {
        surfaceFormats.resize( surfaceFormatCount );
   1f8bf:	8b 85 54 fe ff ff    	mov    -0x1ac(%rbp),%eax
   1f8c5:	89 c0                	mov    %eax,%eax
   1f8c7:	48 89 c6             	mov    %rax,%rsi
   1f8ca:	48 89 df             	mov    %rbx,%rdi
   1f8cd:	e8 b0 09 00 00       	call   20282 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE6resizeEm>
      }
      return surfaceFormats;
   1f8d2:	eb 16                	jmp    1f8ea <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x32a>
    }
   1f8d4:	49 89 c4             	mov    %rax,%r12
   1f8d7:	48 89 df             	mov    %rbx,%rdi
   1f8da:	e8 5f 09 00 00       	call   2023e <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EED1Ev>
   1f8df:	4c 89 e0             	mov    %r12,%rax
   1f8e2:	48 89 c7             	mov    %rax,%rdi
   1f8e5:	e8 b6 5a fe ff       	call   53a0 <_Unwind_Resume@plt>
      return surfaceFormats;
   1f8ea:	90                   	nop
  auto surfacePresentModes =
      device.physical.getSurfacePresentModesKHR(*surface);
   1f8eb:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
   1f8f2:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1f8f6:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   1f8fd:	48 89 c7             	mov    %rax,%rdi
   1f900:	e8 e1 80 ff ff       	call   179e6 <_ZNK2vk4raii10SurfaceKHRdeEv>
   1f905:	48 89 5d 88          	mov    %rbx,-0x78(%rbp)
   1f909:	48 8b 00             	mov    (%rax),%rax
   1f90c:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
   1f913:	48 8d 9d e0 fe ff ff 	lea    -0x120(%rbp),%rbx

    VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE std::vector<VULKAN_HPP_NAMESPACE::PresentModeKHR>
                                           PhysicalDevice::getSurfacePresentModesKHR( VULKAN_HPP_NAMESPACE::SurfaceKHR surface ) const
    {
      VULKAN_HPP_ASSERT( getDispatcher()->vkGetPhysicalDeviceSurfacePresentModesKHR &&
   1f91a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f91e:	48 89 c7             	mov    %rax,%rdi
   1f921:	e8 5e e0 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f926:	48 8b 80 90 02 00 00 	mov    0x290(%rax),%rax
   1f92d:	48 85 c0             	test   %rax,%rax
   1f930:	75 28                	jne    1f95a <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x39a>
   1f932:	48 8d 05 ef 11 01 00 	lea    0x111ef(%rip),%rax        # 30b28 <_ZNSt8__detailL19__atomic_spin_countE+0x3b4>
   1f939:	48 89 c1             	mov    %rax,%rcx
   1f93c:	ba 47 32 00 00       	mov    $0x3247,%edx
   1f941:	48 8d 05 88 0e 01 00 	lea    0x10e88(%rip),%rax        # 307d0 <_ZNSt8__detailL19__atomic_spin_countE+0x5c>
   1f948:	48 89 c6             	mov    %rax,%rsi
   1f94b:	48 8d 05 46 12 01 00 	lea    0x11246(%rip),%rax        # 30b98 <_ZNSt8__detailL19__atomic_spin_countE+0x424>
   1f952:	48 89 c7             	mov    %rax,%rdi
   1f955:	e8 b6 57 fe ff       	call   5110 <__assert_fail@plt>
                         "Function <vkGetPhysicalDeviceSurfacePresentModesKHR> needs extension <VK_KHR_surface> enabled!" );

      std::vector<VULKAN_HPP_NAMESPACE::PresentModeKHR> presentModes;
   1f95a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f95e:	0f 11 03             	movups %xmm0,(%rbx)
   1f961:	66 0f d6 43 10       	movq   %xmm0,0x10(%rbx)
      uint32_t                                          presentModeCount;
      VkResult                                          result;
      do
      {
        result = getDispatcher()->vkGetPhysicalDeviceSurfacePresentModesKHR(
   1f966:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f96a:	48 89 c7             	mov    %rax,%rdi
   1f96d:	e8 12 e0 fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f972:	4c 8b a0 90 02 00 00 	mov    0x290(%rax),%r12
   1f979:	48 8d 85 68 fe ff ff 	lea    -0x198(%rbp),%rax
   1f980:	48 89 c7             	mov    %rax,%rdi
   1f983:	e8 b0 95 fe ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
   1f988:	49 89 c5             	mov    %rax,%r13
   1f98b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f98f:	48 89 c7             	mov    %rax,%rdi
   1f992:	e8 db df fe ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
   1f997:	48 89 c7             	mov    %rax,%rdi
   1f99a:	48 8d 85 64 fe ff ff 	lea    -0x19c(%rbp),%rax
   1f9a1:	b9 00 00 00 00       	mov    $0x0,%ecx
   1f9a6:	48 89 c2             	mov    %rax,%rdx
   1f9a9:	4c 89 ee             	mov    %r13,%rsi
   1f9ac:	41 ff d4             	call   *%r12
   1f9af:	89 45 84             	mov    %eax,-0x7c(%rbp)
          static_cast<VkPhysicalDevice>( m_physicalDevice ), static_cast<VkSurfaceKHR>( surface ), &presentModeCount, nullptr );
        if ( ( result == VK_SUCCESS ) && presentModeCount )
   1f9b2:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   1f9b6:	75 72                	jne    1fa2a <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x46a>
   1f9b8:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
   1f9be:	85 c0                	test   %eax,%eax
   1f9c0:	74 68                	je     1fa2a <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x46a>
        {
          presentModes.resize( presentModeCount );
   1f9c2:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
   1f9c8:	89 c0                	mov    %eax,%eax
   1f9ca:	48 89 c6             	mov    %rax,%rsi
   1f9cd:	48 89 df             	mov    %rbx,%rdi
   1f9d0:	e8 19 0a 00 00       	call   203ee <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE6resizeEm>
          result = getDispatcher()->vkGetPhysicalDeviceSurfacePresentModesKHR( static_cast<VkPhysicalDevice>( m_physicalDevice ),
   1f9d5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1f9d9:	48 89 c7             	mov    %rax,%rdi
   1f9dc:	e8 a3 df fe ff       	call   d984 <_ZNK2vk4raii14PhysicalDevice13getDispatcherEv>
   1f9e1:	4c 8b a0 90 02 00 00 	mov    0x290(%rax),%r12
                                                                               static_cast<VkSurfaceKHR>( surface ),
                                                                               &presentModeCount,
                                                                               reinterpret_cast<VkPresentModeKHR *>( presentModes.data() ) );
   1f9e8:	48 89 df             	mov    %rbx,%rdi
   1f9eb:	e8 84 0a 00 00       	call   20474 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE4dataEv>
   1f9f0:	49 89 c6             	mov    %rax,%r14
          result = getDispatcher()->vkGetPhysicalDeviceSurfacePresentModesKHR( static_cast<VkPhysicalDevice>( m_physicalDevice ),
   1f9f3:	48 8d 85 68 fe ff ff 	lea    -0x198(%rbp),%rax
   1f9fa:	48 89 c7             	mov    %rax,%rdi
   1f9fd:	e8 36 95 fe ff       	call   8f38 <_ZNK2vk10SurfaceKHRcvP14VkSurfaceKHR_TEv>
   1fa02:	49 89 c5             	mov    %rax,%r13
   1fa05:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1fa09:	48 89 c7             	mov    %rax,%rdi
   1fa0c:	e8 61 df fe ff       	call   d972 <_ZNK2vk14PhysicalDevicecvP18VkPhysicalDevice_TEv>
   1fa11:	48 89 c7             	mov    %rax,%rdi
   1fa14:	48 8d 85 64 fe ff ff 	lea    -0x19c(%rbp),%rax
   1fa1b:	4c 89 f1             	mov    %r14,%rcx
   1fa1e:	48 89 c2             	mov    %rax,%rdx
   1fa21:	4c 89 ee             	mov    %r13,%rsi
   1fa24:	41 ff d4             	call   *%r12
   1fa27:	89 45 84             	mov    %eax,-0x7c(%rbp)
        }
      } while ( result == VK_INCOMPLETE );
   1fa2a:	83 7d 84 05          	cmpl   $0x5,-0x7c(%rbp)
   1fa2e:	0f 84 32 ff ff ff    	je     1f966 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x3a6>
   1fa34:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1fa37:	89 45 80             	mov    %eax,-0x80(%rbp)
   1fa3a:	48 8d 05 f7 11 01 00 	lea    0x111f7(%rip),%rax        # 30c38 <_ZNSt8__detailL19__atomic_spin_countE+0x4c4>
   1fa41:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    if ( result != Result::eSuccess )
   1fa48:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
   1fa4c:	74 14                	je     1fa62 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x4a2>
      throwResultException( result, message );
   1fa4e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   1fa55:	8b 45 80             	mov    -0x80(%rbp),%eax
   1fa58:	48 89 d6             	mov    %rdx,%rsi
   1fa5b:	89 c7                	mov    %eax,%edi
   1fa5d:	e8 77 f0 ff ff       	call   1ead9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
   1fa62:	90                   	nop
      resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::PhysicalDevice::getSurfacePresentModesKHR" );
      VULKAN_HPP_ASSERT( presentModeCount <= presentModes.size() );
   1fa63:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
   1fa69:	41 89 c4             	mov    %eax,%r12d
   1fa6c:	48 89 df             	mov    %rbx,%rdi
   1fa6f:	e8 24 0a 00 00       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   1fa74:	4c 39 e0             	cmp    %r12,%rax
   1fa77:	73 28                	jae    1faa1 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x4e1>
   1fa79:	48 8d 05 a8 10 01 00 	lea    0x110a8(%rip),%rax        # 30b28 <_ZNSt8__detailL19__atomic_spin_countE+0x3b4>
   1fa80:	48 89 c1             	mov    %rax,%rcx
   1fa83:	ba 5b 32 00 00       	mov    $0x325b,%edx
   1fa88:	48 8d 05 41 0d 01 00 	lea    0x10d41(%rip),%rax        # 307d0 <_ZNSt8__detailL19__atomic_spin_countE+0x5c>
   1fa8f:	48 89 c6             	mov    %rax,%rsi
   1fa92:	48 8d 05 cf 11 01 00 	lea    0x111cf(%rip),%rax        # 30c68 <_ZNSt8__detailL19__atomic_spin_countE+0x4f4>
   1fa99:	48 89 c7             	mov    %rax,%rdi
   1fa9c:	e8 6f 56 fe ff       	call   5110 <__assert_fail@plt>
      if ( presentModeCount < presentModes.size() )
   1faa1:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
   1faa7:	41 89 c4             	mov    %eax,%r12d
   1faaa:	48 89 df             	mov    %rbx,%rdi
   1faad:	e8 e6 09 00 00       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   1fab2:	49 39 c4             	cmp    %rax,%r12
   1fab5:	0f 92 c0             	setb   %al
   1fab8:	84 c0                	test   %al,%al
   1faba:	74 28                	je     1fae4 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x524>
      {
        presentModes.resize( presentModeCount );
   1fabc:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
   1fac2:	89 c0                	mov    %eax,%eax
   1fac4:	48 89 c6             	mov    %rax,%rsi
   1fac7:	48 89 df             	mov    %rbx,%rdi
   1faca:	e8 1f 09 00 00       	call   203ee <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE6resizeEm>
      }
      return presentModes;
   1facf:	eb 13                	jmp    1fae4 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x524>
    }
   1fad1:	49 89 c4             	mov    %rax,%r12
   1fad4:	48 89 df             	mov    %rbx,%rdi
   1fad7:	e8 ce 08 00 00       	call   203aa <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EED1Ev>
   1fadc:	4c 89 e3             	mov    %r12,%rbx
   1fadf:	e9 47 04 00 00       	jmp    1ff2b <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x96b>
      return presentModes;
   1fae4:	90                   	nop

  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
   1fae5:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
   1faeb:	83 c0 01             	add    $0x1,%eax
   1faee:	89 45 dc             	mov    %eax,-0x24(%rbp)
  if (surfaceCapabilities.maxImageCount > 0 &&
   1faf1:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1faf7:	85 c0                	test   %eax,%eax
   1faf9:	74 14                	je     1fb0f <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x54f>
      minImageCount > surfaceCapabilities.maxImageCount) {
   1fafb:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
   1fb01:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   1fb04:	73 09                	jae    1fb0f <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x54f>
    minImageCount = surfaceCapabilities.maxImageCount;
   1fb06:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
   1fb0c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  }

  if (surfaceFormats.empty()) {
   1fb0f:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fb16:	48 89 c7             	mov    %rax,%rdi
   1fb19:	e8 0e 0a 00 00       	call   2052c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE5emptyEv>
   1fb1e:	84 c0                	test   %al,%al
   1fb20:	74 3b                	je     1fb5d <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x59d>
    throw std::runtime_error("No surface format available");
   1fb22:	bf 10 00 00 00       	mov    $0x10,%edi
   1fb27:	e8 a4 55 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1fb2c:	48 89 c3             	mov    %rax,%rbx
   1fb2f:	48 8d 05 5a 11 01 00 	lea    0x1115a(%rip),%rax        # 30c90 <_ZNSt8__detailL19__atomic_spin_countE+0x51c>
   1fb36:	48 89 c6             	mov    %rax,%rsi
   1fb39:	48 89 df             	mov    %rbx,%rdi
   1fb3c:	e8 4f 55 fe ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
   1fb41:	48 8b 05 68 24 02 00 	mov    0x22468(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1fb48:	48 89 c2             	mov    %rax,%rdx
   1fb4b:	48 8d 05 ae 1e 02 00 	lea    0x21eae(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1fb52:	48 89 c6             	mov    %rax,%rsi
   1fb55:	48 89 df             	mov    %rbx,%rdi
   1fb58:	e8 23 58 fe ff       	call   5380 <__cxa_throw@plt>
  }
  vk::Format selectedImageFormat = surfaceFormats[0].format;
   1fb5d:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fb64:	be 00 00 00 00       	mov    $0x0,%esi
   1fb69:	48 89 c7             	mov    %rax,%rdi
   1fb6c:	e8 7d 05 00 00       	call   200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>
   1fb71:	8b 00                	mov    (%rax),%eax
   1fb73:	89 45 d8             	mov    %eax,-0x28(%rbp)
  vk::ColorSpaceKHR selectedColorSpace = surfaceFormats[0].colorSpace;
   1fb76:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fb7d:	be 00 00 00 00       	mov    $0x0,%esi
   1fb82:	48 89 c7             	mov    %rax,%rdi
   1fb85:	e8 64 05 00 00       	call   200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>
   1fb8a:	8b 40 04             	mov    0x4(%rax),%eax
   1fb8d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  for (size_t i = 1; i < surfaceFormats.size(); ++i) {
   1fb90:	48 c7 45 c8 01 00 00 	movq   $0x1,-0x38(%rbp)
   1fb97:	00 
   1fb98:	e9 88 00 00 00       	jmp    1fc25 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x665>
    if (surfaceFormats[i].format == vk::Format::eR8G8B8A8Srgb &&
   1fb9d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1fba1:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fba8:	48 89 d6             	mov    %rdx,%rsi
   1fbab:	48 89 c7             	mov    %rax,%rdi
   1fbae:	e8 3b 05 00 00       	call   200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>
   1fbb3:	8b 00                	mov    (%rax),%eax
   1fbb5:	83 f8 2b             	cmp    $0x2b,%eax
   1fbb8:	75 24                	jne    1fbde <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x61e>
        surfaceFormats[i].colorSpace == vk::ColorSpaceKHR::eSrgbNonlinear) {
   1fbba:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1fbbe:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fbc5:	48 89 d6             	mov    %rdx,%rsi
   1fbc8:	48 89 c7             	mov    %rax,%rdi
   1fbcb:	e8 1e 05 00 00       	call   200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>
   1fbd0:	8b 40 04             	mov    0x4(%rax),%eax
    if (surfaceFormats[i].format == vk::Format::eR8G8B8A8Srgb &&
   1fbd3:	85 c0                	test   %eax,%eax
   1fbd5:	75 07                	jne    1fbde <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x61e>
   1fbd7:	b8 01 00 00 00       	mov    $0x1,%eax
   1fbdc:	eb 05                	jmp    1fbe3 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x623>
   1fbde:	b8 00 00 00 00       	mov    $0x0,%eax
   1fbe3:	84 c0                	test   %al,%al
   1fbe5:	74 39                	je     1fc20 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x660>
      selectedImageFormat = surfaceFormats[i].format;
   1fbe7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1fbeb:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fbf2:	48 89 d6             	mov    %rdx,%rsi
   1fbf5:	48 89 c7             	mov    %rax,%rdi
   1fbf8:	e8 f1 04 00 00       	call   200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>
   1fbfd:	8b 00                	mov    (%rax),%eax
   1fbff:	89 45 d8             	mov    %eax,-0x28(%rbp)
      selectedColorSpace = surfaceFormats[i].colorSpace;
   1fc02:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1fc06:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fc0d:	48 89 d6             	mov    %rdx,%rsi
   1fc10:	48 89 c7             	mov    %rax,%rdi
   1fc13:	e8 d6 04 00 00       	call   200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>
   1fc18:	8b 40 04             	mov    0x4(%rax),%eax
   1fc1b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
      break;
   1fc1e:	eb 23                	jmp    1fc43 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x683>
  for (size_t i = 1; i < surfaceFormats.size(); ++i) {
   1fc20:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
   1fc25:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fc2c:	48 89 c7             	mov    %rax,%rdi
   1fc2f:	e8 f8 06 00 00       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   1fc34:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1fc38:	0f 92 c0             	setb   %al
   1fc3b:	84 c0                	test   %al,%al
   1fc3d:	0f 85 5a ff ff ff    	jne    1fb9d <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x5dd>
    }
  }

  vk::Extent2D selectedImageExtent = surfaceCapabilities.currentExtent;
   1fc43:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1fc4a:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  if (selectedImageExtent.width > surfaceCapabilities.currentExtent.width ||
   1fc51:	8b 85 d8 fe ff ff    	mov    -0x128(%rbp),%eax
   1fc57:	8b 95 28 ff ff ff    	mov    -0xd8(%rbp),%edx
   1fc5d:	39 c2                	cmp    %eax,%edx
   1fc5f:	72 10                	jb     1fc71 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x6b1>
      selectedImageExtent.height > surfaceCapabilities.currentExtent.height) {
   1fc61:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
   1fc67:	8b 95 2c ff ff ff    	mov    -0xd4(%rbp),%edx
  if (selectedImageExtent.width > surfaceCapabilities.currentExtent.width ||
   1fc6d:	39 c2                	cmp    %eax,%edx
   1fc6f:	73 0e                	jae    1fc7f <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x6bf>
    selectedImageExtent = surfaceCapabilities.maxImageExtent;
   1fc71:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1fc78:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  }

  vk::SurfaceTransformFlagBitsKHR selectedTransform;
  if (surfaceCapabilities.supportedTransforms &
      vk::SurfaceTransformFlagBitsKHR::eIdentity) {
   1fc7f:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
   1fc86:	be 01 00 00 00       	mov    $0x1,%esi
   1fc8b:	48 89 c7             	mov    %rax,%rdi
   1fc8e:	e8 db 04 00 00       	call   2016e <_ZN2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEC1ES1_>
   1fc93:	48 8d 85 64 ff ff ff 	lea    -0x9c(%rbp),%rax
   1fc9a:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
   1fca1:	48 83 c2 24          	add    $0x24,%rdx
   1fca5:	48 89 c6             	mov    %rax,%rsi
   1fca8:	48 89 d7             	mov    %rdx,%rdi
   1fcab:	e8 d6 04 00 00       	call   20186 <_ZNK2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEanERKS2_>
   1fcb0:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  if (surfaceCapabilities.supportedTransforms &
   1fcb6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   1fcbd:	48 89 c7             	mov    %rax,%rdi
   1fcc0:	e8 f3 04 00 00       	call   201b8 <_ZNK2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEcvbEv>
   1fcc5:	84 c0                	test   %al,%al
   1fcc7:	74 57                	je     1fd20 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x760>
    selectedTransform = vk::SurfaceTransformFlagBitsKHR::eIdentity;
   1fcc9:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
    throw std::runtime_error("Identity transform not supported");
  }

  vk::CompositeAlphaFlagBitsKHR selectedCompositeAlpha;
  if (surfaceCapabilities.supportedCompositeAlpha &
      vk::CompositeAlphaFlagBitsKHR::eOpaque) {
   1fcd0:	48 8d 85 6c ff ff ff 	lea    -0x94(%rbp),%rax
   1fcd7:	be 01 00 00 00       	mov    $0x1,%esi
   1fcdc:	48 89 c7             	mov    %rax,%rdi
   1fcdf:	e8 2a 04 00 00       	call   2010e <_ZN2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEC1ES1_>
   1fce4:	48 8d 85 6c ff ff ff 	lea    -0x94(%rbp),%rax
   1fceb:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
   1fcf2:	48 83 c2 2c          	add    $0x2c,%rdx
   1fcf6:	48 89 c6             	mov    %rax,%rsi
   1fcf9:	48 89 d7             	mov    %rdx,%rdi
   1fcfc:	e8 25 04 00 00       	call   20126 <_ZNK2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEanERKS2_>
   1fd01:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
  if (surfaceCapabilities.supportedCompositeAlpha &
   1fd07:	48 8d 85 68 ff ff ff 	lea    -0x98(%rbp),%rax
   1fd0e:	48 89 c7             	mov    %rax,%rdi
   1fd11:	e8 42 04 00 00       	call   20158 <_ZNK2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEcvbEv>
   1fd16:	84 c0                	test   %al,%al
   1fd18:	0f 84 50 01 00 00    	je     1fe6e <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x8ae>
   1fd1e:	eb 3b                	jmp    1fd5b <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x79b>
    throw std::runtime_error("Identity transform not supported");
   1fd20:	bf 10 00 00 00       	mov    $0x10,%edi
   1fd25:	e8 a6 53 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1fd2a:	48 89 c3             	mov    %rax,%rbx
   1fd2d:	48 8d 05 7c 0f 01 00 	lea    0x10f7c(%rip),%rax        # 30cb0 <_ZNSt8__detailL19__atomic_spin_countE+0x53c>
   1fd34:	48 89 c6             	mov    %rax,%rsi
   1fd37:	48 89 df             	mov    %rbx,%rdi
   1fd3a:	e8 51 53 fe ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
   1fd3f:	48 8b 05 6a 22 02 00 	mov    0x2226a(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1fd46:	48 89 c2             	mov    %rax,%rdx
   1fd49:	48 8d 05 b0 1c 02 00 	lea    0x21cb0(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1fd50:	48 89 c6             	mov    %rax,%rsi
   1fd53:	48 89 df             	mov    %rbx,%rdi
   1fd56:	e8 25 56 fe ff       	call   5380 <__cxa_throw@plt>
    selectedCompositeAlpha = vk::CompositeAlphaFlagBitsKHR::eOpaque;
   1fd5b:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  } else {
    throw std::runtime_error("Opaque composite alpha not supported");
  }

  vk::SwapchainCreateInfoKHR swapchainInfo{
   1fd62:	48 8d 95 70 fe ff ff 	lea    -0x190(%rbp),%rdx
   1fd69:	b8 00 00 00 00       	mov    $0x0,%eax
   1fd6e:	b9 0d 00 00 00       	mov    $0xd,%ecx
   1fd73:	48 89 d7             	mov    %rdx,%rdi
   1fd76:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1fd79:	c7 85 70 fe ff ff e8 	movl   $0x3b9acde8,-0x190(%rbp)
   1fd80:	cd 9a 3b 
   1fd83:	c7 85 a4 fe ff ff 01 	movl   $0x1,-0x15c(%rbp)
   1fd8a:	00 00 00 
   1fd8d:	c7 85 a8 fe ff ff 10 	movl   $0x10,-0x158(%rbp)
   1fd94:	00 00 00 
   1fd97:	c7 85 cc fe ff ff 01 	movl   $0x1,-0x134(%rbp)
   1fd9e:	00 00 00 
      .preTransform = selectedTransform,
      .compositeAlpha = selectedCompositeAlpha,
      .presentMode = selectPresentMode(settings, surfacePresentModes),
      .clipped = VK_TRUE,
      .oldSwapchain = VK_NULL_HANDLE,
  };
   1fda1:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
   1fda8:	48 83 c0 10          	add    $0x10,%rax
   1fdac:	48 89 c7             	mov    %rax,%rdi
   1fdaf:	e8 1a 04 00 00       	call   201ce <_ZN2vk5FlagsINS_26SwapchainCreateFlagBitsKHREEC1Ev>
      .surface = *surface,
   1fdb4:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
   1fdbb:	48 89 c7             	mov    %rax,%rdi
   1fdbe:	e8 23 7c ff ff       	call   179e6 <_ZNK2vk4raii10SurfaceKHRdeEv>
  };
   1fdc3:	48 8b 00             	mov    (%rax),%rax
   1fdc6:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
   1fdcd:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1fdd0:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
   1fdd6:	8b 45 d8             	mov    -0x28(%rbp),%eax
   1fdd9:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
   1fddf:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1fde2:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
   1fde8:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1fdef:	48 89 85 9c fe ff ff 	mov    %rax,-0x164(%rbp)
   1fdf6:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1fdf9:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   1fdff:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1fe02:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
      .presentMode = selectPresentMode(settings, surfacePresentModes),
   1fe08:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
   1fe0f:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
   1fe16:	48 89 d6             	mov    %rdx,%rsi
   1fe19:	48 89 c7             	mov    %rax,%rdi
   1fe1c:	e8 0f f7 ff ff       	call   1f530 <_ZN4rtvc17selectPresentModeERKNS_8SettingsERKSt6vectorIN2vk14PresentModeKHRESaIS5_EE>
  };
   1fe21:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
  return {
      .self = {device.logical, swapchainInfo},
      .format = selectedImageFormat,
      .extent = selectedImageExtent,
  };
}
   1fe27:	48 8b 9d 38 fe ff ff 	mov    -0x1c8(%rbp),%rbx
      .self = {device.logical, swapchainInfo},
   1fe2e:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
   1fe35:	4c 8d 60 28          	lea    0x28(%rax),%r12
}
   1fe39:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1fe40:	be 00 00 00 00       	mov    $0x0,%esi
   1fe45:	48 89 c7             	mov    %rax,%rdi
   1fe48:	e8 b7 96 ff ff       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   1fe4d:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
   1fe54:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
   1fe5b:	48 89 d1             	mov    %rdx,%rcx
   1fe5e:	48 89 c2             	mov    %rax,%rdx
   1fe61:	4c 89 e6             	mov    %r12,%rsi
   1fe64:	48 89 df             	mov    %rbx,%rdi
   1fe67:	e8 06 01 00 00       	call   1ff72 <_ZN2vk4raii12SwapchainKHRC1ERKNS0_6DeviceERKNS_22SwapchainCreateInfoKHRENS_8OptionalIKNS_19AllocationCallbacksEEE>
   1fe6c:	eb 3b                	jmp    1fea9 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x8e9>
    throw std::runtime_error("Opaque composite alpha not supported");
   1fe6e:	bf 10 00 00 00       	mov    $0x10,%edi
   1fe73:	e8 58 52 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   1fe78:	48 89 c3             	mov    %rax,%rbx
   1fe7b:	48 8d 05 56 0e 01 00 	lea    0x10e56(%rip),%rax        # 30cd8 <_ZNSt8__detailL19__atomic_spin_countE+0x564>
   1fe82:	48 89 c6             	mov    %rax,%rsi
   1fe85:	48 89 df             	mov    %rbx,%rdi
   1fe88:	e8 03 52 fe ff       	call   5090 <_ZNSt13runtime_errorC1EPKc@plt>
   1fe8d:	48 8b 05 1c 21 02 00 	mov    0x2211c(%rip),%rax        # 41fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1fe94:	48 89 c2             	mov    %rax,%rdx
   1fe97:	48 8d 05 62 1b 02 00 	lea    0x21b62(%rip),%rax        # 41a00 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1fe9e:	48 89 c6             	mov    %rax,%rsi
   1fea1:	48 89 df             	mov    %rbx,%rdi
   1fea4:	e8 d7 54 fe ff       	call   5380 <__cxa_throw@plt>
}
   1fea9:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
   1feb0:	8b 55 d8             	mov    -0x28(%rbp),%edx
   1feb3:	89 50 20             	mov    %edx,0x20(%rax)
   1feb6:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
   1febd:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1fec4:	48 89 50 24          	mov    %rdx,0x24(%rax)
  };
   1fec8:	90                   	nop
}
   1fec9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   1fed0:	48 89 c7             	mov    %rax,%rdi
   1fed3:	e8 d2 04 00 00       	call   203aa <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EED1Ev>
   1fed8:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1fedf:	48 89 c7             	mov    %rax,%rdi
   1fee2:	e8 57 03 00 00       	call   2023e <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EED1Ev>
  };
   1fee7:	eb 5c                	jmp    1ff45 <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x985>
    throw std::runtime_error("No surface format available");
   1fee9:	49 89 c4             	mov    %rax,%r12
   1feec:	48 89 df             	mov    %rbx,%rdi
   1feef:	e8 5c 52 fe ff       	call   5150 <__cxa_free_exception@plt>
   1fef4:	4c 89 e3             	mov    %r12,%rbx
   1fef7:	eb 23                	jmp    1ff1c <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x95c>
    throw std::runtime_error("Identity transform not supported");
   1fef9:	49 89 c4             	mov    %rax,%r12
   1fefc:	48 89 df             	mov    %rbx,%rdi
   1feff:	e8 4c 52 fe ff       	call   5150 <__cxa_free_exception@plt>
   1ff04:	4c 89 e3             	mov    %r12,%rbx
   1ff07:	eb 13                	jmp    1ff1c <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x95c>
    throw std::runtime_error("Opaque composite alpha not supported");
   1ff09:	49 89 c4             	mov    %rax,%r12
   1ff0c:	48 89 df             	mov    %rbx,%rdi
   1ff0f:	e8 3c 52 fe ff       	call   5150 <__cxa_free_exception@plt>
   1ff14:	4c 89 e3             	mov    %r12,%rbx
   1ff17:	eb 03                	jmp    1ff1c <_ZN4rtvc13makeSwapchainERKNS_8SettingsERKN2vk4raii10SurfaceKHRERKNS_13DeviceWrapperE+0x95c>
}
   1ff19:	48 89 c3             	mov    %rax,%rbx
   1ff1c:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
   1ff23:	48 89 c7             	mov    %rax,%rdi
   1ff26:	e8 7f 04 00 00       	call   203aa <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EED1Ev>
   1ff2b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
   1ff32:	48 89 c7             	mov    %rax,%rdi
   1ff35:	e8 04 03 00 00       	call   2023e <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EED1Ev>
   1ff3a:	48 89 d8             	mov    %rbx,%rax
   1ff3d:	48 89 c7             	mov    %rax,%rdi
   1ff40:	e8 5b 54 fe ff       	call   53a0 <_Unwind_Resume@plt>
   1ff45:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
   1ff4c:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
   1ff53:	5b                   	pop    %rbx
   1ff54:	41 5c                	pop    %r12
   1ff56:	41 5d                	pop    %r13
   1ff58:	41 5e                	pop    %r14
   1ff5a:	5d                   	pop    %rbp
   1ff5b:	c3                   	ret

000000000001ff5c <_ZN2vk12SwapchainKHRC1Ev>:
    VULKAN_HPP_CONSTEXPR         SwapchainKHR() = default;
   1ff5c:	55                   	push   %rbp
   1ff5d:	48 89 e5             	mov    %rsp,%rbp
   1ff60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1ff64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ff68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ff6f:	90                   	nop
   1ff70:	5d                   	pop    %rbp
   1ff71:	c3                   	ret

000000000001ff72 <_ZN2vk4raii12SwapchainKHRC1ERKNS0_6DeviceERKNS_22SwapchainCreateInfoKHRENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      SwapchainKHR( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Device const &                 device,
   1ff72:	55                   	push   %rbp
   1ff73:	48 89 e5             	mov    %rsp,%rbp
   1ff76:	41 55                	push   %r13
   1ff78:	41 54                	push   %r12
   1ff7a:	53                   	push   %rbx
   1ff7b:	48 83 ec 38          	sub    $0x38,%rsp
   1ff7f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1ff83:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1ff87:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1ff8b:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_device( *device )
   1ff8f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ff93:	48 89 c7             	mov    %rax,%rdi
   1ff96:	e8 1b 79 ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
   1ff9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ff9f:	48 8b 00             	mov    (%rax),%rax
   1ffa2:	48 89 02             	mov    %rax,(%rdx)
        , m_dispatcher( device.getDispatcher() )
   1ffa5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ffa9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1ffb0:	00 
   1ffb1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1ffb5:	48 83 c0 08          	add    $0x8,%rax
   1ffb9:	48 89 c7             	mov    %rax,%rdi
   1ffbc:	e8 9b ff ff ff       	call   1ff5c <_ZN2vk12SwapchainKHRC1Ev>
        , m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
   1ffc1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1ffc5:	48 89 c7             	mov    %rax,%rdi
   1ffc8:	e8 a9 85 ff ff       	call   18576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
   1ffcd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ffd1:	48 89 42 10          	mov    %rax,0x10(%rdx)
        , m_dispatcher( device.getDispatcher() )
   1ffd5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ffd9:	48 89 c7             	mov    %rax,%rdi
   1ffdc:	e8 09 96 fe ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   1ffe1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1ffe5:	48 89 42 18          	mov    %rax,0x18(%rdx)
          device.getDispatcher()->vkCreateSwapchainKHR( static_cast<VkDevice>( *device ),
   1ffe9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1ffed:	48 89 c7             	mov    %rax,%rdi
   1fff0:	e8 f5 95 fe ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   1fff5:	4c 8b a0 68 0d 00 00 	mov    0xd68(%rax),%r12
                                                        reinterpret_cast<VkSwapchainKHR *>( &m_swapchain ) ) );
   1fffc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20000:	4c 8d 68 08          	lea    0x8(%rax),%r13
                                                        reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
   20004:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20008:	48 8b 58 10          	mov    0x10(%rax),%rbx
          device.getDispatcher()->vkCreateSwapchainKHR( static_cast<VkDevice>( *device ),
   2000c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20010:	48 89 c7             	mov    %rax,%rdi
   20013:	e8 9e 78 ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
   20018:	48 89 c7             	mov    %rax,%rdi
   2001b:	e8 8c 90 fe ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
   20020:	48 89 c7             	mov    %rax,%rdi
   20023:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   20027:	4c 89 e9             	mov    %r13,%rcx
   2002a:	48 89 da             	mov    %rbx,%rdx
   2002d:	48 89 c6             	mov    %rax,%rsi
   20030:	41 ff d4             	call   *%r12
   20033:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
   20036:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   2003a:	74 14                	je     20050 <_ZN2vk4raii12SwapchainKHRC1ERKNS0_6DeviceERKNS_22SwapchainCreateInfoKHRENS_8OptionalIKNS_19AllocationCallbacksEEE+0xde>
          throwResultException( result, "vkCreateSwapchainKHR" );
   2003c:	8b 45 dc             	mov    -0x24(%rbp),%eax
   2003f:	48 8d 15 34 08 01 00 	lea    0x10834(%rip),%rdx        # 3087a <_ZNSt8__detailL19__atomic_spin_countE+0x106>
   20046:	48 89 d6             	mov    %rdx,%rsi
   20049:	89 c7                	mov    %eax,%edi
   2004b:	e8 89 ea ff ff       	call   1ead9 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
      }
   20050:	90                   	nop
   20051:	48 83 c4 38          	add    $0x38,%rsp
   20055:	5b                   	pop    %rbx
   20056:	41 5c                	pop    %r12
   20058:	41 5d                	pop    %r13
   2005a:	5d                   	pop    %rbp
   2005b:	c3                   	ret

000000000002005c <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   2005c:	55                   	push   %rbp
   2005d:	48 89 e5             	mov    %rsp,%rbp
   20060:	48 83 ec 10          	sub    $0x10,%rsp
   20064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2006c:	48 89 c7             	mov    %rax,%rdi
   2006f:	e8 70 01 00 00       	call   201e4 <_ZNSaIN2vk16SurfaceFormatKHREED1Ev>
   20074:	90                   	nop
   20075:	c9                   	leave
   20076:	c3                   	ret
   20077:	90                   	nop

0000000000020078 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE12_Vector_implD1Ev>:
   20078:	55                   	push   %rbp
   20079:	48 89 e5             	mov    %rsp,%rbp
   2007c:	48 83 ec 10          	sub    $0x10,%rsp
   20080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20088:	48 89 c7             	mov    %rax,%rdi
   2008b:	e8 c0 02 00 00       	call   20350 <_ZNSaIN2vk14PresentModeKHREED1Ev>
   20090:	90                   	nop
   20091:	c9                   	leave
   20092:	c3                   	ret

0000000000020093 <_ZN9__gnu_cxxeqIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   20093:	55                   	push   %rbp
   20094:	48 89 e5             	mov    %rsp,%rbp
   20097:	53                   	push   %rbx
   20098:	48 83 ec 18          	sub    $0x18,%rsp
   2009c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   200a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   200a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   200a8:	48 89 c7             	mov    %rax,%rdi
   200ab:	e8 1e 00 00 00       	call   200ce <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEE4baseEv>
   200b0:	48 8b 18             	mov    (%rax),%rbx
   200b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   200b7:	48 89 c7             	mov    %rax,%rdi
   200ba:	e8 0f 00 00 00       	call   200ce <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEE4baseEv>
   200bf:	48 8b 00             	mov    (%rax),%rax
   200c2:	48 39 c3             	cmp    %rax,%rbx
   200c5:	0f 94 c0             	sete   %al
   200c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   200cc:	c9                   	leave
   200cd:	c3                   	ret

00000000000200ce <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   200ce:	55                   	push   %rbp
   200cf:	48 89 e5             	mov    %rsp,%rbp
   200d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   200d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   200da:	5d                   	pop    %rbp
   200db:	c3                   	ret

00000000000200dc <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   200dc:	55                   	push   %rbp
   200dd:	48 89 e5             	mov    %rsp,%rbp
   200e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   200e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   200e8:	48 8b 00             	mov    (%rax),%rax
   200eb:	5d                   	pop    %rbp
   200ec:	c3                   	ret
   200ed:	90                   	nop

00000000000200ee <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   200ee:	55                   	push   %rbp
   200ef:	48 89 e5             	mov    %rsp,%rbp
   200f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   200f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   200fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   200fe:	48 8b 00             	mov    (%rax),%rax
   20101:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20105:	48 c1 e2 03          	shl    $0x3,%rdx
   20109:	48 01 d0             	add    %rdx,%rax
      }
   2010c:	5d                   	pop    %rbp
   2010d:	c3                   	ret

000000000002010e <_ZN2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEC1ES1_>:
    VULKAN_HPP_CONSTEXPR Flags( BitType bit ) VULKAN_HPP_NOEXCEPT : m_mask( static_cast<MaskType>( bit ) ) {}
   2010e:	55                   	push   %rbp
   2010f:	48 89 e5             	mov    %rsp,%rbp
   20112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20116:	89 75 f4             	mov    %esi,-0xc(%rbp)
   20119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2011d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   20120:	89 10                	mov    %edx,(%rax)
   20122:	90                   	nop
   20123:	5d                   	pop    %rbp
   20124:	c3                   	ret
   20125:	90                   	nop

0000000000020126 <_ZNK2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEanERKS2_>:
    VULKAN_HPP_CONSTEXPR Flags<BitType> operator&( Flags<BitType> const & rhs ) const VULKAN_HPP_NOEXCEPT
   20126:	55                   	push   %rbp
   20127:	48 89 e5             	mov    %rsp,%rbp
   2012a:	48 83 ec 20          	sub    $0x20,%rsp
   2012e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20132:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return Flags<BitType>( m_mask & rhs.m_mask );
   20136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2013a:	8b 10                	mov    (%rax),%edx
   2013c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20140:	8b 00                	mov    (%rax),%eax
   20142:	21 c2                	and    %eax,%edx
   20144:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
   20148:	89 d6                	mov    %edx,%esi
   2014a:	48 89 c7             	mov    %rax,%rdi
   2014d:	e8 1c 04 00 00       	call   2056e <_ZN2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEC1Ej>
   20152:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
   20155:	c9                   	leave
   20156:	c3                   	ret
   20157:	90                   	nop

0000000000020158 <_ZNK2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEcvbEv>:
    explicit VULKAN_HPP_CONSTEXPR operator bool() const VULKAN_HPP_NOEXCEPT
   20158:	55                   	push   %rbp
   20159:	48 89 e5             	mov    %rsp,%rbp
   2015c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !!m_mask;
   20160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20164:	8b 00                	mov    (%rax),%eax
   20166:	85 c0                	test   %eax,%eax
   20168:	0f 95 c0             	setne  %al
    }
   2016b:	5d                   	pop    %rbp
   2016c:	c3                   	ret
   2016d:	90                   	nop

000000000002016e <_ZN2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEC1ES1_>:
    VULKAN_HPP_CONSTEXPR Flags( BitType bit ) VULKAN_HPP_NOEXCEPT : m_mask( static_cast<MaskType>( bit ) ) {}
   2016e:	55                   	push   %rbp
   2016f:	48 89 e5             	mov    %rsp,%rbp
   20172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20176:	89 75 f4             	mov    %esi,-0xc(%rbp)
   20179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2017d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   20180:	89 10                	mov    %edx,(%rax)
   20182:	90                   	nop
   20183:	5d                   	pop    %rbp
   20184:	c3                   	ret
   20185:	90                   	nop

0000000000020186 <_ZNK2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEanERKS2_>:
    VULKAN_HPP_CONSTEXPR Flags<BitType> operator&( Flags<BitType> const & rhs ) const VULKAN_HPP_NOEXCEPT
   20186:	55                   	push   %rbp
   20187:	48 89 e5             	mov    %rsp,%rbp
   2018a:	48 83 ec 20          	sub    $0x20,%rsp
   2018e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20192:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return Flags<BitType>( m_mask & rhs.m_mask );
   20196:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2019a:	8b 10                	mov    (%rax),%edx
   2019c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   201a0:	8b 00                	mov    (%rax),%eax
   201a2:	21 c2                	and    %eax,%edx
   201a4:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
   201a8:	89 d6                	mov    %edx,%esi
   201aa:	48 89 c7             	mov    %rax,%rdi
   201ad:	e8 d4 03 00 00       	call   20586 <_ZN2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEC1Ej>
   201b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
   201b5:	c9                   	leave
   201b6:	c3                   	ret
   201b7:	90                   	nop

00000000000201b8 <_ZNK2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEcvbEv>:
    explicit VULKAN_HPP_CONSTEXPR operator bool() const VULKAN_HPP_NOEXCEPT
   201b8:	55                   	push   %rbp
   201b9:	48 89 e5             	mov    %rsp,%rbp
   201bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !!m_mask;
   201c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   201c4:	8b 00                	mov    (%rax),%eax
   201c6:	85 c0                	test   %eax,%eax
   201c8:	0f 95 c0             	setne  %al
    }
   201cb:	5d                   	pop    %rbp
   201cc:	c3                   	ret
   201cd:	90                   	nop

00000000000201ce <_ZN2vk5FlagsINS_26SwapchainCreateFlagBitsKHREEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
   201ce:	55                   	push   %rbp
   201cf:	48 89 e5             	mov    %rsp,%rbp
   201d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   201d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   201da:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   201e0:	90                   	nop
   201e1:	5d                   	pop    %rbp
   201e2:	c3                   	ret
   201e3:	90                   	nop

00000000000201e4 <_ZNSaIN2vk16SurfaceFormatKHREED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   201e4:	55                   	push   %rbp
   201e5:	48 89 e5             	mov    %rsp,%rbp
   201e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   201ec:	90                   	nop
   201ed:	5d                   	pop    %rbp
   201ee:	c3                   	ret
   201ef:	90                   	nop

00000000000201f0 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   201f0:	55                   	push   %rbp
   201f1:	48 89 e5             	mov    %rsp,%rbp
   201f4:	48 83 ec 10          	sub    $0x10,%rsp
   201f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   201fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20200:	48 8b 50 10          	mov    0x10(%rax),%rdx
   20204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20208:	48 8b 00             	mov    (%rax),%rax
   2020b:	48 29 c2             	sub    %rax,%rdx
   2020e:	48 89 d0             	mov    %rdx,%rax
   20211:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   20215:	48 89 c2             	mov    %rax,%rdx
   20218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2021c:	48 8b 08             	mov    (%rax),%rcx
   2021f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20223:	48 89 ce             	mov    %rcx,%rsi
   20226:	48 89 c7             	mov    %rax,%rdi
   20229:	e8 70 03 00 00       	call   2059e <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE13_M_deallocateEPS1_m>
      }
   2022e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20232:	48 89 c7             	mov    %rax,%rdi
   20235:	e8 22 fe ff ff       	call   2005c <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE12_Vector_implD1Ev>
   2023a:	90                   	nop
   2023b:	c9                   	leave
   2023c:	c3                   	ret
   2023d:	90                   	nop

000000000002023e <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   2023e:	55                   	push   %rbp
   2023f:	48 89 e5             	mov    %rsp,%rbp
   20242:	48 83 ec 10          	sub    $0x10,%rsp
   20246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   2024a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2024e:	48 89 c7             	mov    %rax,%rdi
   20251:	e8 7e 03 00 00       	call   205d4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20256:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   20259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2025d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   20261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20265:	48 8b 00             	mov    (%rax),%rax
   20268:	48 89 ce             	mov    %rcx,%rsi
   2026b:	48 89 c7             	mov    %rax,%rdi
   2026e:	e8 6f 03 00 00       	call   205e2 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHRES1_EvT_S3_RSaIT0_E>
      }
   20273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20277:	48 89 c7             	mov    %rax,%rdi
   2027a:	e8 71 ff ff ff       	call   201f0 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EED1Ev>
   2027f:	90                   	nop
   20280:	c9                   	leave
   20281:	c3                   	ret

0000000000020282 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   20282:	55                   	push   %rbp
   20283:	48 89 e5             	mov    %rsp,%rbp
   20286:	48 83 ec 10          	sub    $0x10,%rsp
   2028a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2028e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   20292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20296:	48 89 c7             	mov    %rax,%rdi
   20299:	e8 8e 00 00 00       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   2029e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   202a2:	0f 92 c0             	setb   %al
   202a5:	84 c0                	test   %al,%al
   202a7:	74 24                	je     202cd <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   202a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202ad:	48 89 c7             	mov    %rax,%rdi
   202b0:	e8 77 00 00 00       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   202b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   202b9:	48 29 c2             	sub    %rax,%rdx
   202bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202c0:	48 89 d6             	mov    %rdx,%rsi
   202c3:	48 89 c7             	mov    %rax,%rdi
   202c6:	e8 09 04 00 00       	call   206d4 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm>
      }
   202cb:	eb 38                	jmp    20305 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   202cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202d1:	48 89 c7             	mov    %rax,%rdi
   202d4:	e8 53 00 00 00       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   202d9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   202dd:	0f 92 c0             	setb   %al
   202e0:	84 c0                	test   %al,%al
   202e2:	74 21                	je     20305 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   202e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202e8:	48 8b 00             	mov    (%rax),%rax
   202eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   202ef:	48 c1 e2 03          	shl    $0x3,%rdx
   202f3:	48 01 c2             	add    %rax,%rdx
   202f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   202fa:	48 89 d6             	mov    %rdx,%rsi
   202fd:	48 89 c7             	mov    %rax,%rdi
   20300:	e8 d9 05 00 00       	call   208de <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE15_M_erase_at_endEPS1_>
      }
   20305:	90                   	nop
   20306:	c9                   	leave
   20307:	c3                   	ret

0000000000020308 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   20308:	55                   	push   %rbp
   20309:	48 89 e5             	mov    %rsp,%rbp
   2030c:	48 83 ec 10          	sub    $0x10,%rsp
   20310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   20314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20318:	48 8b 10             	mov    (%rax),%rdx
   2031b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2031f:	48 89 d6             	mov    %rdx,%rsi
   20322:	48 89 c7             	mov    %rax,%rdi
   20325:	e8 14 06 00 00       	call   2093e <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   2032a:	c9                   	leave
   2032b:	c3                   	ret

000000000002032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   2032c:	55                   	push   %rbp
   2032d:	48 89 e5             	mov    %rsp,%rbp
   20330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   20334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20338:	48 8b 50 08          	mov    0x8(%rax),%rdx
   2033c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20340:	48 8b 00             	mov    (%rax),%rax
   20343:	48 29 c2             	sub    %rax,%rdx
   20346:	48 89 d0             	mov    %rdx,%rax
   20349:	48 c1 f8 03          	sar    $0x3,%rax
   2034d:	5d                   	pop    %rbp
   2034e:	c3                   	ret
   2034f:	90                   	nop

0000000000020350 <_ZNSaIN2vk14PresentModeKHREED1Ev>:
   20350:	55                   	push   %rbp
   20351:	48 89 e5             	mov    %rsp,%rbp
   20354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20358:	90                   	nop
   20359:	5d                   	pop    %rbp
   2035a:	c3                   	ret
   2035b:	90                   	nop

000000000002035c <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   2035c:	55                   	push   %rbp
   2035d:	48 89 e5             	mov    %rsp,%rbp
   20360:	48 83 ec 10          	sub    $0x10,%rsp
   20364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   20368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2036c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   20370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20374:	48 8b 00             	mov    (%rax),%rax
   20377:	48 29 c2             	sub    %rax,%rdx
   2037a:	48 89 d0             	mov    %rdx,%rax
   2037d:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   20381:	48 89 c2             	mov    %rax,%rdx
   20384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20388:	48 8b 08             	mov    (%rax),%rcx
   2038b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2038f:	48 89 ce             	mov    %rcx,%rsi
   20392:	48 89 c7             	mov    %rax,%rdi
   20395:	e8 b6 05 00 00       	call   20950 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE13_M_deallocateEPS1_m>
      }
   2039a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2039e:	48 89 c7             	mov    %rax,%rdi
   203a1:	e8 d2 fc ff ff       	call   20078 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE12_Vector_implD1Ev>
   203a6:	90                   	nop
   203a7:	c9                   	leave
   203a8:	c3                   	ret
   203a9:	90                   	nop

00000000000203aa <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   203aa:	55                   	push   %rbp
   203ab:	48 89 e5             	mov    %rsp,%rbp
   203ae:	48 83 ec 10          	sub    $0x10,%rsp
   203b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   203b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   203ba:	48 89 c7             	mov    %rax,%rdi
   203bd:	e8 c4 05 00 00       	call   20986 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   203c2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   203c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   203c9:	48 8b 48 08          	mov    0x8(%rax),%rcx
   203cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   203d1:	48 8b 00             	mov    (%rax),%rax
   203d4:	48 89 ce             	mov    %rcx,%rsi
   203d7:	48 89 c7             	mov    %rax,%rdi
   203da:	e8 b5 05 00 00       	call   20994 <_ZSt8_DestroyIPN2vk14PresentModeKHRES1_EvT_S3_RSaIT0_E>
      }
   203df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   203e3:	48 89 c7             	mov    %rax,%rdi
   203e6:	e8 71 ff ff ff       	call   2035c <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EED1Ev>
   203eb:	90                   	nop
   203ec:	c9                   	leave
   203ed:	c3                   	ret

00000000000203ee <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   203ee:	55                   	push   %rbp
   203ef:	48 89 e5             	mov    %rsp,%rbp
   203f2:	48 83 ec 10          	sub    $0x10,%rsp
   203f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   203fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   203fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20402:	48 89 c7             	mov    %rax,%rdi
   20405:	e8 8e 00 00 00       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   2040a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2040e:	0f 92 c0             	setb   %al
   20411:	84 c0                	test   %al,%al
   20413:	74 24                	je     20439 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   20415:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20419:	48 89 c7             	mov    %rax,%rdi
   2041c:	e8 77 00 00 00       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   20421:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20425:	48 29 c2             	sub    %rax,%rdx
   20428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2042c:	48 89 d6             	mov    %rdx,%rsi
   2042f:	48 89 c7             	mov    %rax,%rdi
   20432:	e8 4f 06 00 00       	call   20a86 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm>
      }
   20437:	eb 38                	jmp    20471 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   20439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2043d:	48 89 c7             	mov    %rax,%rdi
   20440:	e8 53 00 00 00       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   20445:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   20449:	0f 92 c0             	setb   %al
   2044c:	84 c0                	test   %al,%al
   2044e:	74 21                	je     20471 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   20450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20454:	48 8b 00             	mov    (%rax),%rax
   20457:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2045b:	48 c1 e2 02          	shl    $0x2,%rdx
   2045f:	48 01 c2             	add    %rax,%rdx
   20462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20466:	48 89 d6             	mov    %rdx,%rsi
   20469:	48 89 c7             	mov    %rax,%rdi
   2046c:	e8 1f 08 00 00       	call   20c90 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE15_M_erase_at_endEPS1_>
      }
   20471:	90                   	nop
   20472:	c9                   	leave
   20473:	c3                   	ret

0000000000020474 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   20474:	55                   	push   %rbp
   20475:	48 89 e5             	mov    %rsp,%rbp
   20478:	48 83 ec 10          	sub    $0x10,%rsp
   2047c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   20480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20484:	48 8b 10             	mov    (%rax),%rdx
   20487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2048b:	48 89 d6             	mov    %rdx,%rsi
   2048e:	48 89 c7             	mov    %rax,%rdi
   20491:	e8 5a 08 00 00       	call   20cf0 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   20496:	c9                   	leave
   20497:	c3                   	ret

0000000000020498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   20498:	55                   	push   %rbp
   20499:	48 89 e5             	mov    %rsp,%rbp
   2049c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   204a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   204a4:	48 8b 50 08          	mov    0x8(%rax),%rdx
   204a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   204ac:	48 8b 00             	mov    (%rax),%rax
   204af:	48 29 c2             	sub    %rax,%rdx
   204b2:	48 89 d0             	mov    %rdx,%rax
   204b5:	48 c1 f8 02          	sar    $0x2,%rax
   204b9:	5d                   	pop    %rbp
   204ba:	c3                   	ret
   204bb:	90                   	nop

00000000000204bc <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   204bc:	55                   	push   %rbp
   204bd:	48 89 e5             	mov    %rsp,%rbp
   204c0:	48 83 ec 20          	sub    $0x20,%rsp
   204c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   204c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   204cc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   204d0:	48 89 d6             	mov    %rdx,%rsi
   204d3:	48 89 c7             	mov    %rax,%rdi
   204d6:	e8 27 08 00 00       	call   20d02 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEC1ERKS4_>
   204db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   204df:	c9                   	leave
   204e0:	c3                   	ret
   204e1:	90                   	nop

00000000000204e2 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   204e2:	55                   	push   %rbp
   204e3:	48 89 e5             	mov    %rsp,%rbp
   204e6:	48 83 ec 20          	sub    $0x20,%rsp
   204ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   204ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   204f2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   204f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   204fa:	48 89 d6             	mov    %rdx,%rsi
   204fd:	48 89 c7             	mov    %rax,%rdi
   20500:	e8 fd 07 00 00       	call   20d02 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEC1ERKS4_>
   20505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20509:	c9                   	leave
   2050a:	c3                   	ret
   2050b:	90                   	nop

000000000002050c <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   2050c:	55                   	push   %rbp
   2050d:	48 89 e5             	mov    %rsp,%rbp
   20510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   20514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20518:	48 8b 00             	mov    (%rax),%rax
   2051b:	48 8d 50 04          	lea    0x4(%rax),%rdx
   2051f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20523:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   20526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   2052a:	5d                   	pop    %rbp
   2052b:	c3                   	ret

000000000002052c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   2052c:	55                   	push   %rbp
   2052d:	48 89 e5             	mov    %rsp,%rbp
   20530:	48 83 ec 20          	sub    $0x20,%rsp
   20534:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   20538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2053c:	48 89 c7             	mov    %rax,%rdi
   2053f:	e8 02 08 00 00       	call   20d46 <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE3endEv>
   20544:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2054c:	48 89 c7             	mov    %rax,%rdi
   2054f:	e8 cc 07 00 00       	call   20d20 <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE5beginEv>
   20554:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20558:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   2055c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   20560:	48 89 d6             	mov    %rdx,%rsi
   20563:	48 89 c7             	mov    %rax,%rdi
   20566:	e8 04 08 00 00       	call   20d6f <_ZN9__gnu_cxxeqIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   2056b:	c9                   	leave
   2056c:	c3                   	ret
   2056d:	90                   	nop

000000000002056e <_ZN2vk5FlagsINS_25CompositeAlphaFlagBitsKHREEC1Ej>:
    VULKAN_HPP_CONSTEXPR explicit Flags( MaskType flags ) VULKAN_HPP_NOEXCEPT : m_mask( flags ) {}
   2056e:	55                   	push   %rbp
   2056f:	48 89 e5             	mov    %rsp,%rbp
   20572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20576:	89 75 f4             	mov    %esi,-0xc(%rbp)
   20579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2057d:	8b 55 f4             	mov    -0xc(%rbp),%edx
   20580:	89 10                	mov    %edx,(%rax)
   20582:	90                   	nop
   20583:	5d                   	pop    %rbp
   20584:	c3                   	ret
   20585:	90                   	nop

0000000000020586 <_ZN2vk5FlagsINS_27SurfaceTransformFlagBitsKHREEC1Ej>:
   20586:	55                   	push   %rbp
   20587:	48 89 e5             	mov    %rsp,%rbp
   2058a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2058e:	89 75 f4             	mov    %esi,-0xc(%rbp)
   20591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20595:	8b 55 f4             	mov    -0xc(%rbp),%edx
   20598:	89 10                	mov    %edx,(%rax)
   2059a:	90                   	nop
   2059b:	5d                   	pop    %rbp
   2059c:	c3                   	ret
   2059d:	90                   	nop

000000000002059e <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   2059e:	55                   	push   %rbp
   2059f:	48 89 e5             	mov    %rsp,%rbp
   205a2:	48 83 ec 20          	sub    $0x20,%rsp
   205a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   205aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   205ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   205b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   205b7:	74 17                	je     205d0 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   205b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   205bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   205c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   205c5:	48 89 ce             	mov    %rcx,%rsi
   205c8:	48 89 c7             	mov    %rax,%rdi
   205cb:	e8 da 07 00 00       	call   20daa <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE10deallocateERS2_PS1_m>
      }
   205d0:	90                   	nop
   205d1:	c9                   	leave
   205d2:	c3                   	ret
   205d3:	90                   	nop

00000000000205d4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   205d4:	55                   	push   %rbp
   205d5:	48 89 e5             	mov    %rsp,%rbp
   205d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   205dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   205e0:	5d                   	pop    %rbp
   205e1:	c3                   	ret

00000000000205e2 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHRES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   205e2:	55                   	push   %rbp
   205e3:	48 89 e5             	mov    %rsp,%rbp
   205e6:	48 83 ec 20          	sub    $0x20,%rsp
   205ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   205ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   205f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   205f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   205fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   205fe:	48 89 d6             	mov    %rdx,%rsi
   20601:	48 89 c7             	mov    %rax,%rdi
   20604:	e8 ff 07 00 00       	call   20e08 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHREEvT_S3_>
    }
   20609:	90                   	nop
   2060a:	c9                   	leave
   2060b:	c3                   	ret

000000000002060c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   2060c:	55                   	push   %rbp
   2060d:	48 89 e5             	mov    %rsp,%rbp
   20610:	53                   	push   %rbx
   20611:	48 83 ec 38          	sub    $0x38,%rsp
   20615:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20619:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2061d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   20621:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20625:	48 89 c7             	mov    %rax,%rdi
   20628:	e8 1f 08 00 00       	call   20e4c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE8max_sizeEv>
   2062d:	48 89 c3             	mov    %rax,%rbx
   20630:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20634:	48 89 c7             	mov    %rax,%rdi
   20637:	e8 f0 fc ff ff       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   2063c:	48 29 c3             	sub    %rax,%rbx
   2063f:	48 89 da             	mov    %rbx,%rdx
   20642:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20646:	48 39 c2             	cmp    %rax,%rdx
   20649:	0f 92 c0             	setb   %al
   2064c:	84 c0                	test   %al,%al
   2064e:	74 0c                	je     2065c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   20650:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20654:	48 89 c7             	mov    %rax,%rdi
   20657:	e8 84 4a fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   2065c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20660:	48 89 c7             	mov    %rax,%rdi
   20663:	e8 c4 fc ff ff       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   20668:	48 89 c3             	mov    %rax,%rbx
   2066b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2066f:	48 89 c7             	mov    %rax,%rdi
   20672:	e8 b5 fc ff ff       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   20677:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   2067b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   2067f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   20683:	48 89 d6             	mov    %rdx,%rsi
   20686:	48 89 c7             	mov    %rax,%rdi
   20689:	e8 66 90 ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   2068e:	48 8b 00             	mov    (%rax),%rax
   20691:	48 01 d8             	add    %rbx,%rax
   20694:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   20698:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2069c:	48 89 c7             	mov    %rax,%rdi
   2069f:	e8 88 fc ff ff       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   206a4:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   206a8:	72 12                	jb     206bc <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE12_M_check_lenEmPKc+0xb0>
   206aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   206ae:	48 89 c7             	mov    %rax,%rdi
   206b1:	e8 96 07 00 00       	call   20e4c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE8max_sizeEv>
   206b6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   206ba:	73 0e                	jae    206ca <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE12_M_check_lenEmPKc+0xbe>
   206bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   206c0:	48 89 c7             	mov    %rax,%rdi
   206c3:	e8 84 07 00 00       	call   20e4c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE8max_sizeEv>
   206c8:	eb 04                	jmp    206ce <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE12_M_check_lenEmPKc+0xc2>
   206ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   206ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   206d2:	c9                   	leave
   206d3:	c3                   	ret

00000000000206d4 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   206d4:	55                   	push   %rbp
   206d5:	48 89 e5             	mov    %rsp,%rbp
   206d8:	53                   	push   %rbx
   206d9:	48 83 ec 38          	sub    $0x38,%rsp
   206dd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   206e1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   206e5:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   206ea:	0f 84 e7 01 00 00    	je     208d7 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   206f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   206f4:	48 89 c7             	mov    %rax,%rdi
   206f7:	e8 30 fc ff ff       	call   2032c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE4sizeEv>
   206fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   20700:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20704:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   20708:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2070c:	48 8b 40 08          	mov    0x8(%rax),%rax
   20710:	48 29 c2             	sub    %rax,%rdx
   20713:	48 89 d0             	mov    %rdx,%rax
   20716:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   2071a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   2071e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20722:	48 89 c7             	mov    %rax,%rdi
   20725:	e8 22 07 00 00       	call   20e4c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE8max_sizeEv>
   2072a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   2072e:	72 16                	jb     20746 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0x72>
   20730:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20734:	48 89 c7             	mov    %rax,%rdi
   20737:	e8 10 07 00 00       	call   20e4c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE8max_sizeEv>
   2073c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   20740:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   20744:	73 07                	jae    2074d <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0x79>
   20746:	b8 01 00 00 00       	mov    $0x1,%eax
   2074b:	eb 05                	jmp    20752 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0x7e>
   2074d:	b8 00 00 00 00       	mov    $0x0,%eax
   20752:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   20754:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20758:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   2075c:	72 33                	jb     20791 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   2075e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20762:	48 89 c7             	mov    %rax,%rdi
   20765:	e8 6a fe ff ff       	call   205d4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   2076a:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   2076d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20771:	48 8b 40 08          	mov    0x8(%rax),%rax
   20775:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   20779:	48 89 ce             	mov    %rcx,%rsi
   2077c:	48 89 c7             	mov    %rax,%rdi
   2077f:	e8 ea 06 00 00       	call   20e6e <_ZSt27__uninitialized_default_n_aIPN2vk16SurfaceFormatKHREmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   20784:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20788:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   2078c:	e9 46 01 00 00       	jmp    208d7 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   20791:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   20795:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20799:	48 8d 15 df 05 01 00 	lea    0x105df(%rip),%rdx        # 30d7f <_ZNSt8__detailL19__atomic_spin_countE+0x60b>
   207a0:	48 89 ce             	mov    %rcx,%rsi
   207a3:	48 89 c7             	mov    %rax,%rdi
   207a6:	e8 61 fe ff ff       	call   2060c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE12_M_check_lenEmPKc>
   207ab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   207af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   207b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   207b7:	48 89 d6             	mov    %rdx,%rsi
   207ba:	48 89 c7             	mov    %rax,%rdi
   207bd:	e8 d6 06 00 00       	call   20e98 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE11_M_allocateEm>
   207c2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   207c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   207ca:	48 89 c7             	mov    %rax,%rdi
   207cd:	e8 02 fe ff ff       	call   205d4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   207d2:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   207d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   207d9:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   207e0:	00 
   207e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   207e5:	48 01 c1             	add    %rax,%rcx
   207e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   207ec:	48 89 c6             	mov    %rax,%rsi
   207ef:	48 89 cf             	mov    %rcx,%rdi
   207f2:	e8 77 06 00 00       	call   20e6e <_ZSt27__uninitialized_default_n_aIPN2vk16SurfaceFormatKHREmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   207f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   207fb:	48 89 c7             	mov    %rax,%rdi
   207fe:	e8 d1 fd ff ff       	call   205d4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20803:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   20806:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2080a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   2080e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20812:	48 8b 00             	mov    (%rax),%rax
   20815:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   20819:	48 89 c7             	mov    %rax,%rdi
   2081c:	e8 aa 06 00 00       	call   20ecb <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   20821:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   20825:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20829:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   2082d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20831:	48 8b 12             	mov    (%rdx),%rdx
   20834:	48 29 d1             	sub    %rdx,%rcx
   20837:	48 c1 f9 03          	sar    $0x3,%rcx
   2083b:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   2083e:	48 89 d6             	mov    %rdx,%rsi
   20841:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20845:	48 8b 0a             	mov    (%rdx),%rcx
   20848:	48 89 f2             	mov    %rsi,%rdx
   2084b:	48 89 ce             	mov    %rcx,%rsi
   2084e:	48 89 c7             	mov    %rax,%rdi
   20851:	e8 48 fd ff ff       	call   2059e <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   20856:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2085a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   2085e:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   20861:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20865:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20869:	48 01 d0             	add    %rdx,%rax
   2086c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   20873:	00 
   20874:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20878:	48 01 c2             	add    %rax,%rdx
   2087b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2087f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   20883:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20887:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2088e:	00 
   2088f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20893:	48 01 c2             	add    %rax,%rdx
   20896:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2089a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   2089e:	eb 37                	jmp    208d7 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   208a0:	48 89 c7             	mov    %rax,%rdi
   208a3:	e8 f8 47 fe ff       	call   50a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   208a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   208ac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   208b0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   208b4:	48 89 ce             	mov    %rcx,%rsi
   208b7:	48 89 c7             	mov    %rax,%rdi
   208ba:	e8 df fc ff ff       	call   2059e <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   208bf:	e8 4c 4a fe ff       	call   5310 <__cxa_rethrow@plt>
		  __catch(...)
   208c4:	48 89 c3             	mov    %rax,%rbx
   208c7:	e8 a4 4a fe ff       	call   5370 <__cxa_end_catch@plt>
   208cc:	48 89 d8             	mov    %rbx,%rax
   208cf:	48 89 c7             	mov    %rax,%rdi
   208d2:	e8 c9 4a fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   208d7:	90                   	nop
   208d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   208dc:	c9                   	leave
   208dd:	c3                   	ret

00000000000208de <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   208de:	55                   	push   %rbp
   208df:	48 89 e5             	mov    %rsp,%rbp
   208e2:	48 83 ec 20          	sub    $0x20,%rsp
   208e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   208ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   208ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   208f2:	48 8b 40 08          	mov    0x8(%rax),%rax
   208f6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   208fa:	48 c1 f8 03          	sar    $0x3,%rax
   208fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20902:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20907:	74 32                	je     2093b <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   20909:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2090d:	48 89 c7             	mov    %rax,%rdi
   20910:	e8 bf fc ff ff       	call   205d4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20915:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   20918:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2091c:	48 8b 48 08          	mov    0x8(%rax),%rcx
   20920:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20924:	48 89 ce             	mov    %rcx,%rsi
   20927:	48 89 c7             	mov    %rax,%rdi
   2092a:	e8 b3 fc ff ff       	call   205e2 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHRES1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   2092f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20933:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20937:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   2093b:	90                   	nop
   2093c:	c9                   	leave
   2093d:	c3                   	ret

000000000002093e <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   2093e:	55                   	push   %rbp
   2093f:	48 89 e5             	mov    %rsp,%rbp
   20942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20946:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   2094a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2094e:	5d                   	pop    %rbp
   2094f:	c3                   	ret

0000000000020950 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   20950:	55                   	push   %rbp
   20951:	48 89 e5             	mov    %rsp,%rbp
   20954:	48 83 ec 20          	sub    $0x20,%rsp
   20958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2095c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20960:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   20964:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   20969:	74 17                	je     20982 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   2096b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2096f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20973:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20977:	48 89 ce             	mov    %rcx,%rsi
   2097a:	48 89 c7             	mov    %rax,%rdi
   2097d:	e8 7b 05 00 00       	call   20efd <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE10deallocateERS2_PS1_m>
      }
   20982:	90                   	nop
   20983:	c9                   	leave
   20984:	c3                   	ret
   20985:	90                   	nop

0000000000020986 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   20986:	55                   	push   %rbp
   20987:	48 89 e5             	mov    %rsp,%rbp
   2098a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   2098e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20992:	5d                   	pop    %rbp
   20993:	c3                   	ret

0000000000020994 <_ZSt8_DestroyIPN2vk14PresentModeKHRES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   20994:	55                   	push   %rbp
   20995:	48 89 e5             	mov    %rsp,%rbp
   20998:	48 83 ec 20          	sub    $0x20,%rsp
   2099c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   209a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   209a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   209a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   209ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   209b0:	48 89 d6             	mov    %rdx,%rsi
   209b3:	48 89 c7             	mov    %rax,%rdi
   209b6:	e8 a0 05 00 00       	call   20f5b <_ZSt8_DestroyIPN2vk14PresentModeKHREEvT_S3_>
    }
   209bb:	90                   	nop
   209bc:	c9                   	leave
   209bd:	c3                   	ret

00000000000209be <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   209be:	55                   	push   %rbp
   209bf:	48 89 e5             	mov    %rsp,%rbp
   209c2:	53                   	push   %rbx
   209c3:	48 83 ec 38          	sub    $0x38,%rsp
   209c7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   209cb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   209cf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   209d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   209d7:	48 89 c7             	mov    %rax,%rdi
   209da:	e8 bf 05 00 00       	call   20f9e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE8max_sizeEv>
   209df:	48 89 c3             	mov    %rax,%rbx
   209e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   209e6:	48 89 c7             	mov    %rax,%rdi
   209e9:	e8 aa fa ff ff       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   209ee:	48 29 c3             	sub    %rax,%rbx
   209f1:	48 89 da             	mov    %rbx,%rdx
   209f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   209f8:	48 39 c2             	cmp    %rax,%rdx
   209fb:	0f 92 c0             	setb   %al
   209fe:	84 c0                	test   %al,%al
   20a00:	74 0c                	je     20a0e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   20a02:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20a06:	48 89 c7             	mov    %rax,%rdi
   20a09:	e8 d2 46 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   20a0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a12:	48 89 c7             	mov    %rax,%rdi
   20a15:	e8 7e fa ff ff       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   20a1a:	48 89 c3             	mov    %rax,%rbx
   20a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a21:	48 89 c7             	mov    %rax,%rdi
   20a24:	e8 6f fa ff ff       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   20a29:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   20a2d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   20a31:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   20a35:	48 89 d6             	mov    %rdx,%rsi
   20a38:	48 89 c7             	mov    %rax,%rdi
   20a3b:	e8 b4 8c ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   20a40:	48 8b 00             	mov    (%rax),%rax
   20a43:	48 01 d8             	add    %rbx,%rax
   20a46:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   20a4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a4e:	48 89 c7             	mov    %rax,%rdi
   20a51:	e8 42 fa ff ff       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   20a56:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   20a5a:	72 12                	jb     20a6e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE12_M_check_lenEmPKc+0xb0>
   20a5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a60:	48 89 c7             	mov    %rax,%rdi
   20a63:	e8 36 05 00 00       	call   20f9e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE8max_sizeEv>
   20a68:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   20a6c:	73 0e                	jae    20a7c <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE12_M_check_lenEmPKc+0xbe>
   20a6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20a72:	48 89 c7             	mov    %rax,%rdi
   20a75:	e8 24 05 00 00       	call   20f9e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE8max_sizeEv>
   20a7a:	eb 04                	jmp    20a80 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE12_M_check_lenEmPKc+0xc2>
   20a7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   20a80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   20a84:	c9                   	leave
   20a85:	c3                   	ret

0000000000020a86 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   20a86:	55                   	push   %rbp
   20a87:	48 89 e5             	mov    %rsp,%rbp
   20a8a:	53                   	push   %rbx
   20a8b:	48 83 ec 38          	sub    $0x38,%rsp
   20a8f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   20a93:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   20a97:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   20a9c:	0f 84 e7 01 00 00    	je     20c89 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   20aa2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20aa6:	48 89 c7             	mov    %rax,%rdi
   20aa9:	e8 ea f9 ff ff       	call   20498 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE4sizeEv>
   20aae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   20ab2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20ab6:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   20aba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20abe:	48 8b 40 08          	mov    0x8(%rax),%rax
   20ac2:	48 29 c2             	sub    %rax,%rdx
   20ac5:	48 89 d0             	mov    %rdx,%rax
   20ac8:	48 c1 f8 02          	sar    $0x2,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   20acc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   20ad0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20ad4:	48 89 c7             	mov    %rax,%rdi
   20ad7:	e8 c2 04 00 00       	call   20f9e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE8max_sizeEv>
   20adc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   20ae0:	72 16                	jb     20af8 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0x72>
   20ae2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20ae6:	48 89 c7             	mov    %rax,%rdi
   20ae9:	e8 b0 04 00 00       	call   20f9e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE8max_sizeEv>
   20aee:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   20af2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   20af6:	73 07                	jae    20aff <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0x79>
   20af8:	b8 01 00 00 00       	mov    $0x1,%eax
   20afd:	eb 05                	jmp    20b04 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0x7e>
   20aff:	b8 00 00 00 00       	mov    $0x0,%eax
   20b04:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   20b06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20b0a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   20b0e:	72 33                	jb     20b43 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   20b10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20b14:	48 89 c7             	mov    %rax,%rdi
   20b17:	e8 6a fe ff ff       	call   20986 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20b1c:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   20b1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20b23:	48 8b 40 08          	mov    0x8(%rax),%rax
   20b27:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   20b2b:	48 89 ce             	mov    %rcx,%rsi
   20b2e:	48 89 c7             	mov    %rax,%rdi
   20b31:	e8 8a 04 00 00       	call   20fc0 <_ZSt27__uninitialized_default_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   20b36:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20b3a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   20b3e:	e9 46 01 00 00       	jmp    20c89 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   20b43:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   20b47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20b4b:	48 8d 15 2d 02 01 00 	lea    0x1022d(%rip),%rdx        # 30d7f <_ZNSt8__detailL19__atomic_spin_countE+0x60b>
   20b52:	48 89 ce             	mov    %rcx,%rsi
   20b55:	48 89 c7             	mov    %rax,%rdi
   20b58:	e8 61 fe ff ff       	call   209be <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE12_M_check_lenEmPKc>
   20b5d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   20b61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20b65:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20b69:	48 89 d6             	mov    %rdx,%rsi
   20b6c:	48 89 c7             	mov    %rax,%rdi
   20b6f:	e8 76 04 00 00       	call   20fea <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE11_M_allocateEm>
   20b74:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   20b78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20b7c:	48 89 c7             	mov    %rax,%rdi
   20b7f:	e8 02 fe ff ff       	call   20986 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20b84:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   20b87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20b8b:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
   20b92:	00 
   20b93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20b97:	48 01 c1             	add    %rax,%rcx
   20b9a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20b9e:	48 89 c6             	mov    %rax,%rsi
   20ba1:	48 89 cf             	mov    %rcx,%rdi
   20ba4:	e8 17 04 00 00       	call   20fc0 <_ZSt27__uninitialized_default_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   20ba9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20bad:	48 89 c7             	mov    %rax,%rdi
   20bb0:	e8 d1 fd ff ff       	call   20986 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20bb5:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   20bb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20bbc:	48 8b 70 08          	mov    0x8(%rax),%rsi
   20bc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20bc4:	48 8b 00             	mov    (%rax),%rax
   20bc7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   20bcb:	48 89 c7             	mov    %rax,%rdi
   20bce:	e8 4a 04 00 00       	call   2101d <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   20bd3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   20bd7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20bdb:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   20bdf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20be3:	48 8b 12             	mov    (%rdx),%rdx
   20be6:	48 29 d1             	sub    %rdx,%rcx
   20be9:	48 c1 f9 02          	sar    $0x2,%rcx
   20bed:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   20bf0:	48 89 d6             	mov    %rdx,%rsi
   20bf3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20bf7:	48 8b 0a             	mov    (%rdx),%rcx
   20bfa:	48 89 f2             	mov    %rsi,%rdx
   20bfd:	48 89 ce             	mov    %rcx,%rsi
   20c00:	48 89 c7             	mov    %rax,%rdi
   20c03:	e8 48 fd ff ff       	call   20950 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   20c08:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20c0c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   20c10:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   20c13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20c17:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20c1b:	48 01 d0             	add    %rdx,%rax
   20c1e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   20c25:	00 
   20c26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20c2a:	48 01 c2             	add    %rax,%rdx
   20c2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20c31:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   20c35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20c39:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   20c40:	00 
   20c41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20c45:	48 01 c2             	add    %rax,%rdx
   20c48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20c4c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   20c50:	eb 37                	jmp    20c89 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   20c52:	48 89 c7             	mov    %rax,%rdi
   20c55:	e8 46 44 fe ff       	call   50a0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   20c5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20c5e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   20c62:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   20c66:	48 89 ce             	mov    %rcx,%rsi
   20c69:	48 89 c7             	mov    %rax,%rdi
   20c6c:	e8 df fc ff ff       	call   20950 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   20c71:	e8 9a 46 fe ff       	call   5310 <__cxa_rethrow@plt>
		  __catch(...)
   20c76:	48 89 c3             	mov    %rax,%rbx
   20c79:	e8 f2 46 fe ff       	call   5370 <__cxa_end_catch@plt>
   20c7e:	48 89 d8             	mov    %rbx,%rax
   20c81:	48 89 c7             	mov    %rax,%rdi
   20c84:	e8 17 47 fe ff       	call   53a0 <_Unwind_Resume@plt>
    }
   20c89:	90                   	nop
   20c8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   20c8e:	c9                   	leave
   20c8f:	c3                   	ret

0000000000020c90 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   20c90:	55                   	push   %rbp
   20c91:	48 89 e5             	mov    %rsp,%rbp
   20c94:	48 83 ec 20          	sub    $0x20,%rsp
   20c98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20c9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   20ca0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ca4:	48 8b 40 08          	mov    0x8(%rax),%rax
   20ca8:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   20cac:	48 c1 f8 02          	sar    $0x2,%rax
   20cb0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20cb4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   20cb9:	74 32                	je     20ced <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   20cbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cbf:	48 89 c7             	mov    %rax,%rdi
   20cc2:	e8 bf fc ff ff       	call   20986 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20cc7:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   20cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20cce:	48 8b 48 08          	mov    0x8(%rax),%rcx
   20cd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20cd6:	48 89 ce             	mov    %rcx,%rsi
   20cd9:	48 89 c7             	mov    %rax,%rdi
   20cdc:	e8 b3 fc ff ff       	call   20994 <_ZSt8_DestroyIPN2vk14PresentModeKHRES1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   20ce1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20ce5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   20ce9:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   20ced:	90                   	nop
   20cee:	c9                   	leave
   20cef:	c3                   	ret

0000000000020cf0 <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   20cf0:	55                   	push   %rbp
   20cf1:	48 89 e5             	mov    %rsp,%rbp
   20cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20cf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   20cfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20d00:	5d                   	pop    %rbp
   20d01:	c3                   	ret

0000000000020d02 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk14PresentModeKHRESt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   20d02:	55                   	push   %rbp
   20d03:	48 89 e5             	mov    %rsp,%rbp
   20d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20d0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   20d0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20d12:	48 8b 10             	mov    (%rax),%rdx
   20d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d19:	48 89 10             	mov    %rdx,(%rax)
   20d1c:	90                   	nop
   20d1d:	5d                   	pop    %rbp
   20d1e:	c3                   	ret
   20d1f:	90                   	nop

0000000000020d20 <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   20d20:	55                   	push   %rbp
   20d21:	48 89 e5             	mov    %rsp,%rbp
   20d24:	48 83 ec 20          	sub    $0x20,%rsp
   20d28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   20d2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20d30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   20d34:	48 89 d6             	mov    %rdx,%rsi
   20d37:	48 89 c7             	mov    %rax,%rdi
   20d3a:	e8 11 03 00 00       	call   21050 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEEC1ERKS4_>
   20d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d43:	c9                   	leave
   20d44:	c3                   	ret
   20d45:	90                   	nop

0000000000020d46 <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   20d46:	55                   	push   %rbp
   20d47:	48 89 e5             	mov    %rsp,%rbp
   20d4a:	48 83 ec 20          	sub    $0x20,%rsp
   20d4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   20d52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20d56:	48 8d 50 08          	lea    0x8(%rax),%rdx
   20d5a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   20d5e:	48 89 d6             	mov    %rdx,%rsi
   20d61:	48 89 c7             	mov    %rax,%rdi
   20d64:	e8 e7 02 00 00       	call   21050 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEEC1ERKS4_>
   20d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20d6d:	c9                   	leave
   20d6e:	c3                   	ret

0000000000020d6f <_ZN9__gnu_cxxeqIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   20d6f:	55                   	push   %rbp
   20d70:	48 89 e5             	mov    %rsp,%rbp
   20d73:	53                   	push   %rbx
   20d74:	48 83 ec 18          	sub    $0x18,%rsp
   20d78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   20d7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   20d80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   20d84:	48 89 c7             	mov    %rax,%rdi
   20d87:	e8 e2 02 00 00       	call   2106e <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEE4baseEv>
   20d8c:	48 8b 18             	mov    (%rax),%rbx
   20d8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   20d93:	48 89 c7             	mov    %rax,%rdi
   20d96:	e8 d3 02 00 00       	call   2106e <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEE4baseEv>
   20d9b:	48 8b 00             	mov    (%rax),%rax
   20d9e:	48 39 c3             	cmp    %rax,%rbx
   20da1:	0f 94 c0             	sete   %al
   20da4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   20da8:	c9                   	leave
   20da9:	c3                   	ret

0000000000020daa <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   20daa:	55                   	push   %rbp
   20dab:	48 89 e5             	mov    %rsp,%rbp
   20dae:	48 83 ec 40          	sub    $0x40,%rsp
   20db2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20db6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   20dba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   20dbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20dc2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20dc6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20dca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20dce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20dd2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   20dd6:	e8 c3 53 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   20ddb:	84 c0                	test   %al,%al
   20ddd:	74 0e                	je     20ded <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   20ddf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20de3:	48 89 c7             	mov    %rax,%rdi
   20de6:	e8 05 44 fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   20deb:	eb 18                	jmp    20e05 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   20ded:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20df1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20df9:	48 89 ce             	mov    %rcx,%rsi
   20dfc:	48 89 c7             	mov    %rax,%rdi
   20dff:	e8 f8 05 00 00       	call   213fc <_ZNSt15__new_allocatorIN2vk16SurfaceFormatKHREE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   20e04:	90                   	nop
   20e05:	90                   	nop
   20e06:	c9                   	leave
   20e07:	c3                   	ret

0000000000020e08 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHREEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   20e08:	55                   	push   %rbp
   20e09:	48 89 e5             	mov    %rsp,%rbp
   20e0c:	48 83 ec 10          	sub    $0x10,%rsp
   20e10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20e14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   20e18:	e8 81 53 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   20e1d:	84 c0                	test   %al,%al
   20e1f:	74 15                	je     20e36 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHREEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   20e21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e29:	48 89 d6             	mov    %rdx,%rsi
   20e2c:	48 89 c7             	mov    %rax,%rdi
   20e2f:	e8 48 02 00 00       	call   2107c <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk16SurfaceFormatKHREEEvT_S5_>
   20e34:	eb 13                	jmp    20e49 <_ZSt8_DestroyIPN2vk16SurfaceFormatKHREEvT_S3_+0x41>
	__destroy(__first, __last);
   20e36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e3e:	48 89 d6             	mov    %rdx,%rsi
   20e41:	48 89 c7             	mov    %rax,%rdi
   20e44:	e8 6c 02 00 00       	call   210b5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk16SurfaceFormatKHREEEvT_S5_>
    }
   20e49:	c9                   	leave
   20e4a:	c3                   	ret
   20e4b:	90                   	nop

0000000000020e4c <_ZNKSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   20e4c:	55                   	push   %rbp
   20e4d:	48 89 e5             	mov    %rsp,%rbp
   20e50:	48 83 ec 10          	sub    $0x10,%rsp
   20e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   20e58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e5c:	48 89 c7             	mov    %rax,%rdi
   20e5f:	e8 b6 02 00 00       	call   2111a <_ZNKSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20e64:	48 89 c7             	mov    %rax,%rdi
   20e67:	e8 6c 02 00 00       	call   210d8 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE11_S_max_sizeERKS2_>
   20e6c:	c9                   	leave
   20e6d:	c3                   	ret

0000000000020e6e <_ZSt27__uninitialized_default_n_aIPN2vk16SurfaceFormatKHREmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   20e6e:	55                   	push   %rbp
   20e6f:	48 89 e5             	mov    %rsp,%rbp
   20e72:	48 83 ec 20          	sub    $0x20,%rsp
   20e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20e7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20e7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   20e82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20e8a:	48 89 d6             	mov    %rdx,%rsi
   20e8d:	48 89 c7             	mov    %rax,%rdi
   20e90:	e8 93 02 00 00       	call   21128 <_ZSt25__uninitialized_default_nIPN2vk16SurfaceFormatKHREmET_S3_T0_>
   20e95:	c9                   	leave
   20e96:	c3                   	ret
   20e97:	90                   	nop

0000000000020e98 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   20e98:	55                   	push   %rbp
   20e99:	48 89 e5             	mov    %rsp,%rbp
   20e9c:	48 83 ec 10          	sub    $0x10,%rsp
   20ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   20ea8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   20ead:	74 15                	je     20ec4 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE11_M_allocateEm+0x2c>
   20eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20eb3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20eb7:	48 89 d6             	mov    %rdx,%rsi
   20eba:	48 89 c7             	mov    %rax,%rdi
   20ebd:	e8 8f 02 00 00       	call   21151 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8allocateERS2_m>
   20ec2:	eb 05                	jmp    20ec9 <_ZNSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE11_M_allocateEm+0x31>
   20ec4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   20ec9:	c9                   	leave
   20eca:	c3                   	ret

0000000000020ecb <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   20ecb:	55                   	push   %rbp
   20ecc:	48 89 e5             	mov    %rsp,%rbp
   20ecf:	48 83 ec 20          	sub    $0x20,%rsp
   20ed3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20ed7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20edb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   20edf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   20ee3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   20ee7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20eeb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   20eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20ef3:	48 89 c7             	mov    %rax,%rdi
   20ef6:	e8 dd 02 00 00       	call   211d8 <_ZSt12__relocate_aIPN2vk16SurfaceFormatKHRES2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   20efb:	c9                   	leave
   20efc:	c3                   	ret

0000000000020efd <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   20efd:	55                   	push   %rbp
   20efe:	48 89 e5             	mov    %rsp,%rbp
   20f01:	48 83 ec 40          	sub    $0x40,%rsp
   20f05:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   20f09:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   20f0d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   20f11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   20f15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20f19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   20f1d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   20f21:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   20f25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   20f29:	e8 70 52 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   20f2e:	84 c0                	test   %al,%al
   20f30:	74 0e                	je     20f40 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   20f32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   20f36:	48 89 c7             	mov    %rax,%rdi
   20f39:	e8 b2 42 fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   20f3e:	eb 18                	jmp    20f58 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   20f40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   20f44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   20f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f4c:	48 89 ce             	mov    %rcx,%rsi
   20f4f:	48 89 c7             	mov    %rax,%rdi
   20f52:	e8 c3 05 00 00       	call   2151a <_ZNSt15__new_allocatorIN2vk14PresentModeKHREE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   20f57:	90                   	nop
   20f58:	90                   	nop
   20f59:	c9                   	leave
   20f5a:	c3                   	ret

0000000000020f5b <_ZSt8_DestroyIPN2vk14PresentModeKHREEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   20f5b:	55                   	push   %rbp
   20f5c:	48 89 e5             	mov    %rsp,%rbp
   20f5f:	48 83 ec 10          	sub    $0x10,%rsp
   20f63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20f67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   20f6b:	e8 2e 52 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   20f70:	84 c0                	test   %al,%al
   20f72:	74 15                	je     20f89 <_ZSt8_DestroyIPN2vk14PresentModeKHREEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   20f74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f7c:	48 89 d6             	mov    %rdx,%rsi
   20f7f:	48 89 c7             	mov    %rax,%rdi
   20f82:	e8 b4 02 00 00       	call   2123b <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk14PresentModeKHREEEvT_S5_>
   20f87:	eb 13                	jmp    20f9c <_ZSt8_DestroyIPN2vk14PresentModeKHREEvT_S3_+0x41>
	__destroy(__first, __last);
   20f89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20f91:	48 89 d6             	mov    %rdx,%rsi
   20f94:	48 89 c7             	mov    %rax,%rdi
   20f97:	e8 d8 02 00 00       	call   21274 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk14PresentModeKHREEEvT_S5_>
    }
   20f9c:	c9                   	leave
   20f9d:	c3                   	ret

0000000000020f9e <_ZNKSt6vectorIN2vk14PresentModeKHRESaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   20f9e:	55                   	push   %rbp
   20f9f:	48 89 e5             	mov    %rsp,%rbp
   20fa2:	48 83 ec 10          	sub    $0x10,%rsp
   20fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   20faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fae:	48 89 c7             	mov    %rax,%rdi
   20fb1:	e8 24 03 00 00       	call   212da <_ZNKSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>
   20fb6:	48 89 c7             	mov    %rax,%rdi
   20fb9:	e8 d9 02 00 00       	call   21297 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE11_S_max_sizeERKS2_>
   20fbe:	c9                   	leave
   20fbf:	c3                   	ret

0000000000020fc0 <_ZSt27__uninitialized_default_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   20fc0:	55                   	push   %rbp
   20fc1:	48 89 e5             	mov    %rsp,%rbp
   20fc4:	48 83 ec 20          	sub    $0x20,%rsp
   20fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   20fd0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   20fd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   20fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   20fdc:	48 89 d6             	mov    %rdx,%rsi
   20fdf:	48 89 c7             	mov    %rax,%rdi
   20fe2:	e8 01 03 00 00       	call   212e8 <_ZSt25__uninitialized_default_nIPN2vk14PresentModeKHREmET_S3_T0_>
   20fe7:	c9                   	leave
   20fe8:	c3                   	ret
   20fe9:	90                   	nop

0000000000020fea <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   20fea:	55                   	push   %rbp
   20feb:	48 89 e5             	mov    %rsp,%rbp
   20fee:	48 83 ec 10          	sub    $0x10,%rsp
   20ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   20ff6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   20ffa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   20fff:	74 15                	je     21016 <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE11_M_allocateEm+0x2c>
   21001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21005:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21009:	48 89 d6             	mov    %rdx,%rsi
   2100c:	48 89 c7             	mov    %rax,%rdi
   2100f:	e8 fd 02 00 00       	call   21311 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8allocateERS2_m>
   21014:	eb 05                	jmp    2101b <_ZNSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE11_M_allocateEm+0x31>
   21016:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   2101b:	c9                   	leave
   2101c:	c3                   	ret

000000000002101d <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   2101d:	55                   	push   %rbp
   2101e:	48 89 e5             	mov    %rsp,%rbp
   21021:	48 83 ec 20          	sub    $0x20,%rsp
   21025:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21029:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2102d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   21031:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   21035:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   21039:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2103d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   21041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21045:	48 89 c7             	mov    %rax,%rdi
   21048:	e8 4b 03 00 00       	call   21398 <_ZSt12__relocate_aIPN2vk14PresentModeKHRES2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   2104d:	c9                   	leave
   2104e:	c3                   	ret
   2104f:	90                   	nop

0000000000021050 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   21050:	55                   	push   %rbp
   21051:	48 89 e5             	mov    %rsp,%rbp
   21054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21058:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   2105c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21060:	48 8b 10             	mov    (%rax),%rdx
   21063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21067:	48 89 10             	mov    %rdx,(%rax)
   2106a:	90                   	nop
   2106b:	5d                   	pop    %rbp
   2106c:	c3                   	ret
   2106d:	90                   	nop

000000000002106e <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk16SurfaceFormatKHRESt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   2106e:	55                   	push   %rbp
   2106f:	48 89 e5             	mov    %rsp,%rbp
   21072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   21076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2107a:	5d                   	pop    %rbp
   2107b:	c3                   	ret

000000000002107c <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk16SurfaceFormatKHREEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   2107c:	55                   	push   %rbp
   2107d:	48 89 e5             	mov    %rsp,%rbp
   21080:	48 83 ec 10          	sub    $0x10,%rsp
   21084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21088:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   2108c:	eb 19                	jmp    210a7 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk16SurfaceFormatKHREEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   2108e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21092:	48 89 c7             	mov    %rax,%rdi
   21095:	e8 93 03 00 00       	call   2142d <_ZSt11__addressofIN2vk16SurfaceFormatKHREEPT_RS2_>
   2109a:	48 89 c7             	mov    %rax,%rdi
   2109d:	e8 99 03 00 00       	call   2143b <_ZSt8_DestroyIN2vk16SurfaceFormatKHREEvPT_>
	  for (; __first != __last; ++__first)
   210a2:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   210a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   210ab:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   210af:	75 dd                	jne    2108e <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk16SurfaceFormatKHREEEvT_S5_+0x12>
	}
   210b1:	90                   	nop
   210b2:	90                   	nop
   210b3:	c9                   	leave
   210b4:	c3                   	ret

00000000000210b5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk16SurfaceFormatKHREEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   210b5:	55                   	push   %rbp
   210b6:	48 89 e5             	mov    %rsp,%rbp
   210b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   210bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   210c1:	90                   	nop
   210c2:	5d                   	pop    %rbp
   210c3:	c3                   	ret

00000000000210c4 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   210c4:	55                   	push   %rbp
   210c5:	48 89 e5             	mov    %rsp,%rbp
   210c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   210cc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   210d3:	ff ff 1f 
      }
   210d6:	5d                   	pop    %rbp
   210d7:	c3                   	ret

00000000000210d8 <_ZNSt6vectorIN2vk16SurfaceFormatKHRESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   210d8:	55                   	push   %rbp
   210d9:	48 89 e5             	mov    %rsp,%rbp
   210dc:	48 83 ec 20          	sub    $0x20,%rsp
   210e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   210e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   210eb:	ff ff 0f 
   210ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   210f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   210f6:	48 89 c7             	mov    %rax,%rdi
   210f9:	e8 c6 ff ff ff       	call   210c4 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8max_sizeERKS2_>
   210fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   21102:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   21106:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   2110a:	48 89 d6             	mov    %rdx,%rsi
   2110d:	48 89 c7             	mov    %rax,%rdi
   21110:	e8 65 6e ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   21115:	48 8b 00             	mov    (%rax),%rax
      }
   21118:	c9                   	leave
   21119:	c3                   	ret

000000000002111a <_ZNKSt12_Vector_baseIN2vk16SurfaceFormatKHRESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   2111a:	55                   	push   %rbp
   2111b:	48 89 e5             	mov    %rsp,%rbp
   2111e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   21122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21126:	5d                   	pop    %rbp
   21127:	c3                   	ret

0000000000021128 <_ZSt25__uninitialized_default_nIPN2vk16SurfaceFormatKHREmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   21128:	55                   	push   %rbp
   21129:	48 89 e5             	mov    %rsp,%rbp
   2112c:	48 83 ec 20          	sub    $0x20,%rsp
   21130:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21134:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   21138:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   2113c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21140:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21144:	48 89 d6             	mov    %rdx,%rsi
   21147:	48 89 c7             	mov    %rax,%rdi
   2114a:	e8 07 03 00 00       	call   21456 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk16SurfaceFormatKHREmEET_S5_T0_>
    }
   2114f:	c9                   	leave
   21150:	c3                   	ret

0000000000021151 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   21151:	55                   	push   %rbp
   21152:	48 89 e5             	mov    %rsp,%rbp
   21155:	48 83 ec 20          	sub    $0x20,%rsp
   21159:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2115d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21161:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21165:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21169:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2116d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   21171:	e8 28 50 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   21176:	84 c0                	test   %al,%al
   21178:	74 43                	je     211bd <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8allocateERS2_m+0x6c>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   2117a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2117e:	b9 00 00 00 00       	mov    $0x0,%ecx
   21183:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2118a:	00 
   2118b:	48 c1 e8 3d          	shr    $0x3d,%rax
   2118f:	48 85 c0             	test   %rax,%rax
   21192:	74 05                	je     21199 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8allocateERS2_m+0x48>
   21194:	b9 01 00 00 00       	mov    $0x1,%ecx
   21199:	48 89 d0             	mov    %rdx,%rax
   2119c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   211a0:	48 89 c8             	mov    %rcx,%rax
   211a3:	83 e0 01             	and    $0x1,%eax
   211a6:	84 c0                	test   %al,%al
   211a8:	74 05                	je     211af <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8allocateERS2_m+0x5e>
	      std::__throw_bad_array_new_length();
   211aa:	e8 d1 3f fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   211af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   211b3:	48 89 c7             	mov    %rax,%rdi
   211b6:	e8 65 40 fe ff       	call   5220 <_Znwm@plt>
   211bb:	eb 19                	jmp    211d6 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE8allocateERS2_m+0x85>
	return __allocator_base<_Tp>::allocate(__n, 0);
   211bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   211c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   211c5:	ba 00 00 00 00       	mov    $0x0,%edx
   211ca:	48 89 ce             	mov    %rcx,%rsi
   211cd:	48 89 c7             	mov    %rax,%rdi
   211d0:	e8 47 05 00 00       	call   2171c <_ZNSt15__new_allocatorIN2vk16SurfaceFormatKHREE8allocateEmPKv>
   211d5:	90                   	nop
      { return __a.allocate(__n); }
   211d6:	c9                   	leave
   211d7:	c3                   	ret

00000000000211d8 <_ZSt12__relocate_aIPN2vk16SurfaceFormatKHRES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   211d8:	55                   	push   %rbp
   211d9:	48 89 e5             	mov    %rsp,%rbp
   211dc:	41 54                	push   %r12
   211de:	53                   	push   %rbx
   211df:	48 83 ec 20          	sub    $0x20,%rsp
   211e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   211e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   211eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   211ef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   211f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   211f7:	48 89 c7             	mov    %rax,%rdi
   211fa:	e8 9c 02 00 00       	call   2149b <_ZSt12__niter_baseIPN2vk16SurfaceFormatKHREET_S3_>
   211ff:	49 89 c4             	mov    %rax,%r12
   21202:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21206:	48 89 c7             	mov    %rax,%rdi
   21209:	e8 8d 02 00 00       	call   2149b <_ZSt12__niter_baseIPN2vk16SurfaceFormatKHREET_S3_>
   2120e:	48 89 c3             	mov    %rax,%rbx
   21211:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21215:	48 89 c7             	mov    %rax,%rdi
   21218:	e8 7e 02 00 00       	call   2149b <_ZSt12__niter_baseIPN2vk16SurfaceFormatKHREET_S3_>
   2121d:	48 89 c7             	mov    %rax,%rdi
   21220:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   21224:	48 89 c1             	mov    %rax,%rcx
   21227:	4c 89 e2             	mov    %r12,%rdx
   2122a:	48 89 de             	mov    %rbx,%rsi
   2122d:	e8 77 02 00 00       	call   214a9 <_ZSt14__relocate_a_1IPN2vk16SurfaceFormatKHRES2_SaIS1_EET0_T_S5_S4_RT1_>
    }
   21232:	48 83 c4 20          	add    $0x20,%rsp
   21236:	5b                   	pop    %rbx
   21237:	41 5c                	pop    %r12
   21239:	5d                   	pop    %rbp
   2123a:	c3                   	ret

000000000002123b <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk14PresentModeKHREEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   2123b:	55                   	push   %rbp
   2123c:	48 89 e5             	mov    %rsp,%rbp
   2123f:	48 83 ec 10          	sub    $0x10,%rsp
   21243:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21247:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   2124b:	eb 19                	jmp    21266 <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk14PresentModeKHREEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   2124d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21251:	48 89 c7             	mov    %rax,%rdi
   21254:	e8 f2 02 00 00       	call   2154b <_ZSt11__addressofIN2vk14PresentModeKHREEPT_RS2_>
   21259:	48 89 c7             	mov    %rax,%rdi
   2125c:	e8 f8 02 00 00       	call   21559 <_ZSt8_DestroyIN2vk14PresentModeKHREEvPT_>
	  for (; __first != __last; ++__first)
   21261:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
   21266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2126a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2126e:	75 dd                	jne    2124d <_ZNSt12_Destroy_auxILb0EE9__destroyIPN2vk14PresentModeKHREEEvT_S5_+0x12>
	}
   21270:	90                   	nop
   21271:	90                   	nop
   21272:	c9                   	leave
   21273:	c3                   	ret

0000000000021274 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN2vk14PresentModeKHREEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   21274:	55                   	push   %rbp
   21275:	48 89 e5             	mov    %rsp,%rbp
   21278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2127c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21280:	90                   	nop
   21281:	5d                   	pop    %rbp
   21282:	c3                   	ret

0000000000021283 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   21283:	55                   	push   %rbp
   21284:	48 89 e5             	mov    %rsp,%rbp
   21287:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   2128b:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   21292:	ff ff 3f 
      }
   21295:	5d                   	pop    %rbp
   21296:	c3                   	ret

0000000000021297 <_ZNSt6vectorIN2vk14PresentModeKHRESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   21297:	55                   	push   %rbp
   21298:	48 89 e5             	mov    %rsp,%rbp
   2129b:	48 83 ec 20          	sub    $0x20,%rsp
   2129f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   212a3:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   212aa:	ff ff 1f 
   212ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   212b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   212b5:	48 89 c7             	mov    %rax,%rdi
   212b8:	e8 c6 ff ff ff       	call   21283 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8max_sizeERKS2_>
   212bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   212c1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   212c5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   212c9:	48 89 d6             	mov    %rdx,%rsi
   212cc:	48 89 c7             	mov    %rax,%rdi
   212cf:	e8 a6 6c ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   212d4:	48 8b 00             	mov    (%rax),%rax
      }
   212d7:	c9                   	leave
   212d8:	c3                   	ret
   212d9:	90                   	nop

00000000000212da <_ZNKSt12_Vector_baseIN2vk14PresentModeKHRESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   212da:	55                   	push   %rbp
   212db:	48 89 e5             	mov    %rsp,%rbp
   212de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   212e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   212e6:	5d                   	pop    %rbp
   212e7:	c3                   	ret

00000000000212e8 <_ZSt25__uninitialized_default_nIPN2vk14PresentModeKHREmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   212e8:	55                   	push   %rbp
   212e9:	48 89 e5             	mov    %rsp,%rbp
   212ec:	48 83 ec 20          	sub    $0x20,%rsp
   212f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   212f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   212f8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   212fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21304:	48 89 d6             	mov    %rdx,%rsi
   21307:	48 89 c7             	mov    %rax,%rdi
   2130a:	e8 65 02 00 00       	call   21574 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPN2vk14PresentModeKHREmEET_S5_T0_>
    }
   2130f:	c9                   	leave
   21310:	c3                   	ret

0000000000021311 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   21311:	55                   	push   %rbp
   21312:	48 89 e5             	mov    %rsp,%rbp
   21315:	48 83 ec 20          	sub    $0x20,%rsp
   21319:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2131d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   21321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21325:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21329:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2132d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   21331:	e8 68 4e fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   21336:	84 c0                	test   %al,%al
   21338:	74 43                	je     2137d <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8allocateERS2_m+0x6c>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   2133a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2133e:	b9 00 00 00 00       	mov    $0x0,%ecx
   21343:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   2134a:	00 
   2134b:	48 c1 e8 3e          	shr    $0x3e,%rax
   2134f:	48 85 c0             	test   %rax,%rax
   21352:	74 05                	je     21359 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8allocateERS2_m+0x48>
   21354:	b9 01 00 00 00       	mov    $0x1,%ecx
   21359:	48 89 d0             	mov    %rdx,%rax
   2135c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   21360:	48 89 c8             	mov    %rcx,%rax
   21363:	83 e0 01             	and    $0x1,%eax
   21366:	84 c0                	test   %al,%al
   21368:	74 05                	je     2136f <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8allocateERS2_m+0x5e>
	      std::__throw_bad_array_new_length();
   2136a:	e8 11 3e fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   2136f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21373:	48 89 c7             	mov    %rax,%rdi
   21376:	e8 a5 3e fe ff       	call   5220 <_Znwm@plt>
   2137b:	eb 19                	jmp    21396 <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE8allocateERS2_m+0x85>
	return __allocator_base<_Tp>::allocate(__n, 0);
   2137d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   21381:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21385:	ba 00 00 00 00       	mov    $0x0,%edx
   2138a:	48 89 ce             	mov    %rcx,%rsi
   2138d:	48 89 c7             	mov    %rax,%rdi
   21390:	e8 cb 04 00 00       	call   21860 <_ZNSt15__new_allocatorIN2vk14PresentModeKHREE8allocateEmPKv>
   21395:	90                   	nop
      { return __a.allocate(__n); }
   21396:	c9                   	leave
   21397:	c3                   	ret

0000000000021398 <_ZSt12__relocate_aIPN2vk14PresentModeKHRES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   21398:	55                   	push   %rbp
   21399:	48 89 e5             	mov    %rsp,%rbp
   2139c:	41 54                	push   %r12
   2139e:	53                   	push   %rbx
   2139f:	48 83 ec 20          	sub    $0x20,%rsp
   213a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   213a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   213ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   213af:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   213b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   213b7:	48 89 c7             	mov    %rax,%rdi
   213ba:	e8 12 02 00 00       	call   215d1 <_ZSt12__niter_baseIPN2vk14PresentModeKHREET_S3_>
   213bf:	49 89 c4             	mov    %rax,%r12
   213c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   213c6:	48 89 c7             	mov    %rax,%rdi
   213c9:	e8 03 02 00 00       	call   215d1 <_ZSt12__niter_baseIPN2vk14PresentModeKHREET_S3_>
   213ce:	48 89 c3             	mov    %rax,%rbx
   213d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   213d5:	48 89 c7             	mov    %rax,%rdi
   213d8:	e8 f4 01 00 00       	call   215d1 <_ZSt12__niter_baseIPN2vk14PresentModeKHREET_S3_>
   213dd:	48 89 c7             	mov    %rax,%rdi
   213e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   213e4:	48 89 c1             	mov    %rax,%rcx
   213e7:	4c 89 e2             	mov    %r12,%rdx
   213ea:	48 89 de             	mov    %rbx,%rsi
   213ed:	e8 0b 02 00 00       	call   215fd <_ZSt14__relocate_a_1IN2vk14PresentModeKHRES1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   213f2:	48 83 c4 20          	add    $0x20,%rsp
   213f6:	5b                   	pop    %rbx
   213f7:	41 5c                	pop    %r12
   213f9:	5d                   	pop    %rbp
   213fa:	c3                   	ret
   213fb:	90                   	nop

00000000000213fc <_ZNSt15__new_allocatorIN2vk16SurfaceFormatKHREE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   213fc:	55                   	push   %rbp
   213fd:	48 89 e5             	mov    %rsp,%rbp
   21400:	48 83 ec 20          	sub    $0x20,%rsp
   21404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21408:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2140c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   21410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21414:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2141b:	00 
   2141c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21420:	48 89 d6             	mov    %rdx,%rsi
   21423:	48 89 c7             	mov    %rax,%rdi
   21426:	e8 05 3e fe ff       	call   5230 <_ZdlPvm@plt>
      }
   2142b:	c9                   	leave
   2142c:	c3                   	ret

000000000002142d <_ZSt11__addressofIN2vk16SurfaceFormatKHREEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   2142d:	55                   	push   %rbp
   2142e:	48 89 e5             	mov    %rsp,%rbp
   21431:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   21435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21439:	5d                   	pop    %rbp
   2143a:	c3                   	ret

000000000002143b <_ZSt8_DestroyIN2vk16SurfaceFormatKHREEvPT_>:
    _Destroy(_Tp* __pointer)
   2143b:	55                   	push   %rbp
   2143c:	48 89 e5             	mov    %rsp,%rbp
   2143f:	48 83 ec 10          	sub    $0x10,%rsp
   21443:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   21447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2144b:	48 89 c7             	mov    %rax,%rdi
   2144e:	e8 52 02 00 00       	call   216a5 <_ZSt10destroy_atIN2vk16SurfaceFormatKHREEvPT_>
    }
   21453:	90                   	nop
   21454:	c9                   	leave
   21455:	c3                   	ret

0000000000021456 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk16SurfaceFormatKHREmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   21456:	55                   	push   %rbp
   21457:	48 89 e5             	mov    %rsp,%rbp
   2145a:	48 83 ec 20          	sub    $0x20,%rsp
   2145e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21462:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
   21466:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2146a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
   2146e:	eb 1e                	jmp    2148e <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk16SurfaceFormatKHREmEET_S5_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
   21470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21474:	48 89 c7             	mov    %rax,%rdi
   21477:	e8 b1 ff ff ff       	call   2142d <_ZSt11__addressofIN2vk16SurfaceFormatKHREEPT_RS2_>
   2147c:	48 89 c7             	mov    %rax,%rdi
   2147f:	e8 4c 02 00 00       	call   216d0 <_ZSt10_ConstructIN2vk16SurfaceFormatKHREJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
   21484:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
   21489:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   2148e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   21493:	75 db                	jne    21470 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN2vk16SurfaceFormatKHREmEET_S5_T0_+0x1a>
	      return __cur;
   21495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   21499:	c9                   	leave
   2149a:	c3                   	ret

000000000002149b <_ZSt12__niter_baseIPN2vk16SurfaceFormatKHREET_S3_>:
    __niter_base(_Iterator __it)
   2149b:	55                   	push   %rbp
   2149c:	48 89 e5             	mov    %rsp,%rbp
   2149f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   214a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   214a7:	5d                   	pop    %rbp
   214a8:	c3                   	ret

00000000000214a9 <_ZSt14__relocate_a_1IPN2vk16SurfaceFormatKHRES2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   214a9:	55                   	push   %rbp
   214aa:	48 89 e5             	mov    %rsp,%rbp
   214ad:	53                   	push   %rbx
   214ae:	48 83 ec 38          	sub    $0x38,%rsp
   214b2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   214b6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   214ba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   214be:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   214c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   214c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   214ca:	eb 3a                	jmp    21506 <_ZSt14__relocate_a_1IPN2vk16SurfaceFormatKHRES2_SaIS1_EET0_T_S5_S4_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
   214cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   214d0:	48 89 c7             	mov    %rax,%rdi
   214d3:	e8 55 ff ff ff       	call   2142d <_ZSt11__addressofIN2vk16SurfaceFormatKHREEPT_RS2_>
   214d8:	48 89 c3             	mov    %rax,%rbx
   214db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   214df:	48 89 c7             	mov    %rax,%rdi
   214e2:	e8 46 ff ff ff       	call   2142d <_ZSt11__addressofIN2vk16SurfaceFormatKHREEPT_RS2_>
   214e7:	48 89 c1             	mov    %rax,%rcx
   214ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   214ee:	48 89 c2             	mov    %rax,%rdx
   214f1:	48 89 de             	mov    %rbx,%rsi
   214f4:	48 89 cf             	mov    %rcx,%rdi
   214f7:	e8 81 02 00 00       	call   2177d <_ZSt19__relocate_object_aIN2vk16SurfaceFormatKHRES1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   214fc:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
   21501:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   21506:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2150a:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   2150e:	75 bc                	jne    214cc <_ZSt14__relocate_a_1IPN2vk16SurfaceFormatKHRES2_SaIS1_EET0_T_S5_S4_RT1_+0x23>
      return __cur;
   21510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   21514:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   21518:	c9                   	leave
   21519:	c3                   	ret

000000000002151a <_ZNSt15__new_allocatorIN2vk14PresentModeKHREE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   2151a:	55                   	push   %rbp
   2151b:	48 89 e5             	mov    %rsp,%rbp
   2151e:	48 83 ec 20          	sub    $0x20,%rsp
   21522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2152a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   2152e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21532:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   21539:	00 
   2153a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2153e:	48 89 d6             	mov    %rdx,%rsi
   21541:	48 89 c7             	mov    %rax,%rdi
   21544:	e8 e7 3c fe ff       	call   5230 <_ZdlPvm@plt>
      }
   21549:	c9                   	leave
   2154a:	c3                   	ret

000000000002154b <_ZSt11__addressofIN2vk14PresentModeKHREEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   2154b:	55                   	push   %rbp
   2154c:	48 89 e5             	mov    %rsp,%rbp
   2154f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   21553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21557:	5d                   	pop    %rbp
   21558:	c3                   	ret

0000000000021559 <_ZSt8_DestroyIN2vk14PresentModeKHREEvPT_>:
    _Destroy(_Tp* __pointer)
   21559:	55                   	push   %rbp
   2155a:	48 89 e5             	mov    %rsp,%rbp
   2155d:	48 83 ec 10          	sub    $0x10,%rsp
   21561:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   21565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21569:	48 89 c7             	mov    %rax,%rdi
   2156c:	e8 63 02 00 00       	call   217d4 <_ZSt10destroy_atIN2vk14PresentModeKHREEvPT_>
    }
   21571:	90                   	nop
   21572:	c9                   	leave
   21573:	c3                   	ret

0000000000021574 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPN2vk14PresentModeKHREmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   21574:	55                   	push   %rbp
   21575:	48 89 e5             	mov    %rsp,%rbp
   21578:	48 83 ec 20          	sub    $0x20,%rsp
   2157c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21580:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   21584:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   21589:	74 40                	je     215cb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPN2vk14PresentModeKHREmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   2158b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2158f:	48 89 c7             	mov    %rax,%rdi
   21592:	e8 b4 ff ff ff       	call   2154b <_ZSt11__addressofIN2vk14PresentModeKHREEPT_RS2_>
   21597:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   2159b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2159f:	48 89 c7             	mov    %rax,%rdi
   215a2:	e8 38 02 00 00       	call   217df <_ZSt10_ConstructIN2vk14PresentModeKHREJEEvPT_DpOT0_>
	      ++__first;
   215a7:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   215ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   215b0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   215b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   215b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   215bc:	48 89 ce             	mov    %rcx,%rsi
   215bf:	48 89 c7             	mov    %rax,%rdi
   215c2:	e8 54 02 00 00       	call   2181b <_ZSt6fill_nIPN2vk14PresentModeKHREmS1_ET_S3_T0_RKT1_>
   215c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   215cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   215cf:	c9                   	leave
   215d0:	c3                   	ret

00000000000215d1 <_ZSt12__niter_baseIPN2vk14PresentModeKHREET_S3_>:
    __niter_base(_Iterator __it)
   215d1:	55                   	push   %rbp
   215d2:	48 89 e5             	mov    %rsp,%rbp
   215d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   215d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   215dd:	5d                   	pop    %rbp
   215de:	c3                   	ret
   215df:	90                   	nop

00000000000215e0 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   215e0:	55                   	push   %rbp
   215e1:	48 89 e5             	mov    %rsp,%rbp
   215e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   215e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   215ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   215f0:	48 8b 10             	mov    (%rax),%rdx
   215f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   215f7:	48 89 10             	mov    %rdx,(%rax)
   215fa:	90                   	nop
   215fb:	5d                   	pop    %rbp
   215fc:	c3                   	ret

00000000000215fd <_ZSt14__relocate_a_1IN2vk14PresentModeKHRES1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   215fd:	55                   	push   %rbp
   215fe:	48 89 e5             	mov    %rsp,%rbp
   21601:	48 83 ec 30          	sub    $0x30,%rsp
   21605:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21609:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2160d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   21611:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   21615:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21619:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   2161d:	48 c1 f8 02          	sar    $0x2,%rax
   21621:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   21625:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   2162a:	7e 68                	jle    21694 <_ZSt14__relocate_a_1IN2vk14PresentModeKHRES1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x97>
	  if (std::is_constant_evaluated())
   2162c:	e8 78 4b fe ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
   21631:	84 c0                	test   %al,%al
   21633:	74 40                	je     21675 <_ZSt14__relocate_a_1IN2vk14PresentModeKHRES1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x78>
	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
   21635:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   21639:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   2163d:	48 89 d6             	mov    %rdx,%rsi
   21640:	48 89 c7             	mov    %rax,%rdi
   21643:	e8 98 ff ff ff       	call   215e0 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvEC1ERKS3_>
	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
   21648:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   2164c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   21650:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   21654:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21658:	48 89 c7             	mov    %rax,%rdi
   2165b:	e8 61 02 00 00       	call   218c1 <_ZSt14__relocate_a_1IPN2vk14PresentModeKHREN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>
   21660:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	      return __out.base();
   21664:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   21668:	48 89 c7             	mov    %rax,%rdi
   2166b:	e8 d2 02 00 00       	call   21942 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvE4baseEv>
   21670:	48 8b 00             	mov    (%rax),%rax
   21673:	eb 2e                	jmp    216a3 <_ZSt14__relocate_a_1IN2vk14PresentModeKHRES1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0xa6>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   21675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21679:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   21680:	00 
   21681:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21685:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   21689:	48 89 ce             	mov    %rcx,%rsi
   2168c:	48 89 c7             	mov    %rax,%rdi
   2168f:	e8 cc 3c fe ff       	call   5360 <memmove@plt>
      return __result + __count;
   21694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21698:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2169c:	48 c1 e2 02          	shl    $0x2,%rdx
   216a0:	48 01 d0             	add    %rdx,%rax
    }
   216a3:	c9                   	leave
   216a4:	c3                   	ret

00000000000216a5 <_ZSt10destroy_atIN2vk16SurfaceFormatKHREEvPT_>:
    destroy_at(_Tp* __location)
   216a5:	55                   	push   %rbp
   216a6:	48 89 e5             	mov    %rsp,%rbp
   216a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   216ad:	90                   	nop
   216ae:	5d                   	pop    %rbp
   216af:	c3                   	ret

00000000000216b0 <_ZN2vk16SurfaceFormatKHRC1Ev>:
  struct CppType<StructureType, StructureType::eSurfaceCapabilitiesPresentBarrierNV>
  {
    using Type = SurfaceCapabilitiesPresentBarrierNV;
  };

  struct SurfaceFormatKHR
   216b0:	55                   	push   %rbp
   216b1:	48 89 e5             	mov    %rsp,%rbp
   216b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   216b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216bc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   216c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216c6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   216cd:	90                   	nop
   216ce:	5d                   	pop    %rbp
   216cf:	c3                   	ret

00000000000216d0 <_ZSt10_ConstructIN2vk16SurfaceFormatKHREJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   216d0:	55                   	push   %rbp
   216d1:	48 89 e5             	mov    %rsp,%rbp
   216d4:	48 83 ec 10          	sub    $0x10,%rsp
   216d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   216dc:	e8 bd 4a fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   216e1:	84 c0                	test   %al,%al
   216e3:	74 0e                	je     216f3 <_ZSt10_ConstructIN2vk16SurfaceFormatKHREJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   216e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216e9:	48 89 c7             	mov    %rax,%rdi
   216ec:	e8 5f 02 00 00       	call   21950 <_ZSt12construct_atIN2vk16SurfaceFormatKHREJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   216f1:	eb 26                	jmp    21719 <_ZSt10_ConstructIN2vk16SurfaceFormatKHREJEEvPT_DpOT0_+0x49>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   216f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   216f7:	48 89 c6             	mov    %rax,%rsi
   216fa:	bf 08 00 00 00       	mov    $0x8,%edi
   216ff:	e8 b0 4a fe ff       	call   61b4 <_ZnwmPv>
   21704:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   2170a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   21711:	48 89 c7             	mov    %rax,%rdi
   21714:	e8 97 ff ff ff       	call   216b0 <_ZN2vk16SurfaceFormatKHRC1Ev>
    }
   21719:	c9                   	leave
   2171a:	c3                   	ret
   2171b:	90                   	nop

000000000002171c <_ZNSt15__new_allocatorIN2vk16SurfaceFormatKHREE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   2171c:	55                   	push   %rbp
   2171d:	48 89 e5             	mov    %rsp,%rbp
   21720:	48 83 ec 20          	sub    $0x20,%rsp
   21724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21728:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2172c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   21730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21734:	48 89 c7             	mov    %rax,%rdi
   21737:	e8 54 02 00 00       	call   21990 <_ZNKSt15__new_allocatorIN2vk16SurfaceFormatKHREE11_M_max_sizeEv>
   2173c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21740:	0f 92 c0             	setb   %al
   21743:	0f b6 c0             	movzbl %al,%eax
   21746:	48 85 c0             	test   %rax,%rax
   21749:	0f 95 c0             	setne  %al
   2174c:	84 c0                	test   %al,%al
   2174e:	74 1a                	je     2176a <_ZNSt15__new_allocatorIN2vk16SurfaceFormatKHREE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   21750:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   21757:	ff ff 1f 
   2175a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2175e:	73 05                	jae    21765 <_ZNSt15__new_allocatorIN2vk16SurfaceFormatKHREE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   21760:	e8 1b 3a fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   21765:	e8 16 39 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   2176a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2176e:	48 c1 e0 03          	shl    $0x3,%rax
   21772:	48 89 c7             	mov    %rax,%rdi
   21775:	e8 a6 3a fe ff       	call   5220 <_Znwm@plt>
   2177a:	90                   	nop
      }
   2177b:	c9                   	leave
   2177c:	c3                   	ret

000000000002177d <_ZSt19__relocate_object_aIN2vk16SurfaceFormatKHRES1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   2177d:	55                   	push   %rbp
   2177e:	48 89 e5             	mov    %rsp,%rbp
   21781:	48 83 ec 20          	sub    $0x20,%rsp
   21785:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21789:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2178d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   21791:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21795:	48 89 c7             	mov    %rax,%rdi
   21798:	e8 07 02 00 00       	call   219a4 <_ZSt4moveIRN2vk16SurfaceFormatKHREEONSt16remove_referenceIT_E4typeEOS4_>
   2179d:	48 89 c2             	mov    %rax,%rdx
   217a0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   217a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   217a8:	48 89 ce             	mov    %rcx,%rsi
   217ab:	48 89 c7             	mov    %rax,%rdi
   217ae:	e8 ff 01 00 00       	call   219b2 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   217b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   217b7:	48 89 c7             	mov    %rax,%rdi
   217ba:	e8 6e fc ff ff       	call   2142d <_ZSt11__addressofIN2vk16SurfaceFormatKHREEPT_RS2_>
   217bf:	48 89 c2             	mov    %rax,%rdx
   217c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   217c6:	48 89 d6             	mov    %rdx,%rsi
   217c9:	48 89 c7             	mov    %rax,%rdi
   217cc:	e8 16 02 00 00       	call   219e7 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE7destroyIS1_EEvRS2_PT_>
    }
   217d1:	90                   	nop
   217d2:	c9                   	leave
   217d3:	c3                   	ret

00000000000217d4 <_ZSt10destroy_atIN2vk14PresentModeKHREEvPT_>:
    destroy_at(_Tp* __location)
   217d4:	55                   	push   %rbp
   217d5:	48 89 e5             	mov    %rsp,%rbp
   217d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   217dc:	90                   	nop
   217dd:	5d                   	pop    %rbp
   217de:	c3                   	ret

00000000000217df <_ZSt10_ConstructIN2vk14PresentModeKHREJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   217df:	55                   	push   %rbp
   217e0:	48 89 e5             	mov    %rsp,%rbp
   217e3:	48 83 ec 10          	sub    $0x10,%rsp
   217e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   217eb:	e8 ae 49 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   217f0:	84 c0                	test   %al,%al
   217f2:	74 0e                	je     21802 <_ZSt10_ConstructIN2vk14PresentModeKHREJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   217f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   217f8:	48 89 c7             	mov    %rax,%rdi
   217fb:	e8 06 02 00 00       	call   21a06 <_ZSt12construct_atIN2vk14PresentModeKHREJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   21800:	eb 17                	jmp    21819 <_ZSt10_ConstructIN2vk14PresentModeKHREJEEvPT_DpOT0_+0x3a>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   21802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21806:	48 89 c6             	mov    %rax,%rsi
   21809:	bf 04 00 00 00       	mov    $0x4,%edi
   2180e:	e8 a1 49 fe ff       	call   61b4 <_ZnwmPv>
   21813:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
   21819:	c9                   	leave
   2181a:	c3                   	ret

000000000002181b <_ZSt6fill_nIPN2vk14PresentModeKHREmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   2181b:	55                   	push   %rbp
   2181c:	48 89 e5             	mov    %rsp,%rbp
   2181f:	48 83 ec 20          	sub    $0x20,%rsp
   21823:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21827:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2182b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   2182f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   21833:	48 89 c7             	mov    %rax,%rdi
   21836:	e8 f0 01 00 00       	call   21a2b <_ZSt19__iterator_categoryIPN2vk14PresentModeKHREENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   2183b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2183f:	48 89 c7             	mov    %rax,%rdi
   21842:	e8 69 ed fe ff       	call   105b0 <_ZSt17__size_to_integerm>
   21847:	48 89 c1             	mov    %rax,%rcx
   2184a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2184e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21852:	48 89 ce             	mov    %rcx,%rsi
   21855:	48 89 c7             	mov    %rax,%rdi
   21858:	e8 d9 01 00 00       	call   21a36 <_ZSt10__fill_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   2185d:	c9                   	leave
   2185e:	c3                   	ret
   2185f:	90                   	nop

0000000000021860 <_ZNSt15__new_allocatorIN2vk14PresentModeKHREE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   21860:	55                   	push   %rbp
   21861:	48 89 e5             	mov    %rsp,%rbp
   21864:	48 83 ec 20          	sub    $0x20,%rsp
   21868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2186c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21870:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   21874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21878:	48 89 c7             	mov    %rax,%rdi
   2187b:	e8 14 02 00 00       	call   21a94 <_ZNKSt15__new_allocatorIN2vk14PresentModeKHREE11_M_max_sizeEv>
   21880:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21884:	0f 92 c0             	setb   %al
   21887:	0f b6 c0             	movzbl %al,%eax
   2188a:	48 85 c0             	test   %rax,%rax
   2188d:	0f 95 c0             	setne  %al
   21890:	84 c0                	test   %al,%al
   21892:	74 1a                	je     218ae <_ZNSt15__new_allocatorIN2vk14PresentModeKHREE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   21894:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   2189b:	ff ff 3f 
   2189e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   218a2:	73 05                	jae    218a9 <_ZNSt15__new_allocatorIN2vk14PresentModeKHREE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   218a4:	e8 d7 38 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   218a9:	e8 d2 37 fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   218ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   218b2:	48 c1 e0 02          	shl    $0x2,%rax
   218b6:	48 89 c7             	mov    %rax,%rdi
   218b9:	e8 62 39 fe ff       	call   5220 <_Znwm@plt>
   218be:	90                   	nop
      }
   218bf:	c9                   	leave
   218c0:	c3                   	ret

00000000000218c1 <_ZSt14__relocate_a_1IPN2vk14PresentModeKHREN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   218c1:	55                   	push   %rbp
   218c2:	48 89 e5             	mov    %rsp,%rbp
   218c5:	53                   	push   %rbx
   218c6:	48 83 ec 38          	sub    $0x38,%rsp
   218ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   218ce:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   218d2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   218d6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   218da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   218de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   218e2:	eb 49                	jmp    2192d <_ZSt14__relocate_a_1IPN2vk14PresentModeKHREN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x6c>
	std::__relocate_object_a(std::__addressof(*__cur),
   218e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   218e8:	48 89 c7             	mov    %rax,%rdi
   218eb:	e8 5b fc ff ff       	call   2154b <_ZSt11__addressofIN2vk14PresentModeKHREEPT_RS2_>
   218f0:	48 89 c3             	mov    %rax,%rbx
   218f3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   218f7:	48 89 c7             	mov    %rax,%rdi
   218fa:	e8 c9 01 00 00       	call   21ac8 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvEdeEv>
   218ff:	48 89 c7             	mov    %rax,%rdi
   21902:	e8 44 fc ff ff       	call   2154b <_ZSt11__addressofIN2vk14PresentModeKHREEPT_RS2_>
   21907:	48 89 c1             	mov    %rax,%rcx
   2190a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2190e:	48 89 c2             	mov    %rax,%rdx
   21911:	48 89 de             	mov    %rbx,%rsi
   21914:	48 89 cf             	mov    %rcx,%rdi
   21917:	e8 bd 01 00 00       	call   21ad9 <_ZSt19__relocate_object_aIN2vk14PresentModeKHRES1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   2191c:	48 83 45 d8 04       	addq   $0x4,-0x28(%rbp)
   21921:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   21925:	48 89 c7             	mov    %rax,%rdi
   21928:	e8 7b 01 00 00       	call   21aa8 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvEppEv>
   2192d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   21931:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   21935:	75 ad                	jne    218e4 <_ZSt14__relocate_a_1IPN2vk14PresentModeKHREN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x23>
      return __cur;
   21937:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   2193b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2193f:	c9                   	leave
   21940:	c3                   	ret
   21941:	90                   	nop

0000000000021942 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   21942:	55                   	push   %rbp
   21943:	48 89 e5             	mov    %rsp,%rbp
   21946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   2194a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2194e:	5d                   	pop    %rbp
   2194f:	c3                   	ret

0000000000021950 <_ZSt12construct_atIN2vk16SurfaceFormatKHREJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   21950:	55                   	push   %rbp
   21951:	48 89 e5             	mov    %rsp,%rbp
   21954:	53                   	push   %rbx
   21955:	48 83 ec 18          	sub    $0x18,%rsp
   21959:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   2195d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21961:	48 89 c6             	mov    %rax,%rsi
   21964:	bf 08 00 00 00       	mov    $0x8,%edi
   21969:	e8 46 48 fe ff       	call   61b4 <_ZnwmPv>
   2196e:	48 89 c3             	mov    %rax,%rbx
   21971:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   21977:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
   2197e:	48 89 df             	mov    %rbx,%rdi
   21981:	e8 2a fd ff ff       	call   216b0 <_ZN2vk16SurfaceFormatKHRC1Ev>
   21986:	48 89 d8             	mov    %rbx,%rax
   21989:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2198d:	c9                   	leave
   2198e:	c3                   	ret
   2198f:	90                   	nop

0000000000021990 <_ZNKSt15__new_allocatorIN2vk16SurfaceFormatKHREE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21990:	55                   	push   %rbp
   21991:	48 89 e5             	mov    %rsp,%rbp
   21994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21998:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   2199f:	ff ff 0f 
      }
   219a2:	5d                   	pop    %rbp
   219a3:	c3                   	ret

00000000000219a4 <_ZSt4moveIRN2vk16SurfaceFormatKHREEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   219a4:	55                   	push   %rbp
   219a5:	48 89 e5             	mov    %rsp,%rbp
   219a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   219ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   219b0:	5d                   	pop    %rbp
   219b1:	c3                   	ret

00000000000219b2 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   219b2:	55                   	push   %rbp
   219b3:	48 89 e5             	mov    %rsp,%rbp
   219b6:	48 83 ec 20          	sub    $0x20,%rsp
   219ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   219be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   219c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   219c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   219ca:	48 89 c7             	mov    %rax,%rdi
   219cd:	e8 5e 01 00 00       	call   21b30 <_ZSt7forwardIN2vk16SurfaceFormatKHREEOT_RNSt16remove_referenceIS2_E4typeE>
   219d2:	48 89 c2             	mov    %rax,%rdx
   219d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   219d9:	48 89 d6             	mov    %rdx,%rsi
   219dc:	48 89 c7             	mov    %rax,%rdi
   219df:	e8 5a 01 00 00       	call   21b3e <_ZSt12construct_atIN2vk16SurfaceFormatKHREJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   219e4:	90                   	nop
   219e5:	c9                   	leave
   219e6:	c3                   	ret

00000000000219e7 <_ZNSt16allocator_traitsISaIN2vk16SurfaceFormatKHREEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   219e7:	55                   	push   %rbp
   219e8:	48 89 e5             	mov    %rsp,%rbp
   219eb:	48 83 ec 10          	sub    $0x10,%rsp
   219ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   219f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   219f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   219fb:	48 89 c7             	mov    %rax,%rdi
   219fe:	e8 a2 fc ff ff       	call   216a5 <_ZSt10destroy_atIN2vk16SurfaceFormatKHREEvPT_>
	}
   21a03:	90                   	nop
   21a04:	c9                   	leave
   21a05:	c3                   	ret

0000000000021a06 <_ZSt12construct_atIN2vk14PresentModeKHREJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   21a06:	55                   	push   %rbp
   21a07:	48 89 e5             	mov    %rsp,%rbp
   21a0a:	48 83 ec 10          	sub    $0x10,%rsp
   21a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   21a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a16:	48 89 c6             	mov    %rax,%rsi
   21a19:	bf 04 00 00 00       	mov    $0x4,%edi
   21a1e:	e8 91 47 fe ff       	call   61b4 <_ZnwmPv>
   21a23:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   21a29:	c9                   	leave
   21a2a:	c3                   	ret

0000000000021a2b <_ZSt19__iterator_categoryIPN2vk14PresentModeKHREENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   21a2b:	55                   	push   %rbp
   21a2c:	48 89 e5             	mov    %rsp,%rbp
   21a2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   21a33:	90                   	nop
   21a34:	5d                   	pop    %rbp
   21a35:	c3                   	ret

0000000000021a36 <_ZSt10__fill_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   21a36:	55                   	push   %rbp
   21a37:	48 89 e5             	mov    %rsp,%rbp
   21a3a:	48 83 ec 20          	sub    $0x20,%rsp
   21a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21a42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21a46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   21a4a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   21a4f:	75 06                	jne    21a57 <_ZSt10__fill_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   21a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a55:	eb 3a                	jmp    21a91 <_ZSt10__fill_n_aIPN2vk14PresentModeKHREmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   21a57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21a5b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   21a62:	00 
   21a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a67:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   21a6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a73:	48 89 ce             	mov    %rcx,%rsi
   21a76:	48 89 c7             	mov    %rax,%rdi
   21a79:	e8 00 01 00 00       	call   21b7e <_ZSt8__fill_aIPN2vk14PresentModeKHRES1_EvT_S3_RKT0_>
      return __first + __n;
   21a7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21a82:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   21a89:	00 
   21a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21a8e:	48 01 d0             	add    %rdx,%rax
    }
   21a91:	c9                   	leave
   21a92:	c3                   	ret
   21a93:	90                   	nop

0000000000021a94 <_ZNKSt15__new_allocatorIN2vk14PresentModeKHREE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   21a94:	55                   	push   %rbp
   21a95:	48 89 e5             	mov    %rsp,%rbp
   21a98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   21a9c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   21aa3:	ff ff 1f 
      }
   21aa6:	5d                   	pop    %rbp
   21aa7:	c3                   	ret

0000000000021aa8 <_ZN9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   21aa8:	55                   	push   %rbp
   21aa9:	48 89 e5             	mov    %rsp,%rbp
   21aac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   21ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ab4:	48 8b 00             	mov    (%rax),%rax
   21ab7:	48 8d 50 04          	lea    0x4(%rax),%rdx
   21abb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21abf:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   21ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   21ac6:	5d                   	pop    %rbp
   21ac7:	c3                   	ret

0000000000021ac8 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk14PresentModeKHREvEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   21ac8:	55                   	push   %rbp
   21ac9:	48 89 e5             	mov    %rsp,%rbp
   21acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   21ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21ad4:	48 8b 00             	mov    (%rax),%rax
   21ad7:	5d                   	pop    %rbp
   21ad8:	c3                   	ret

0000000000021ad9 <_ZSt19__relocate_object_aIN2vk14PresentModeKHRES1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   21ad9:	55                   	push   %rbp
   21ada:	48 89 e5             	mov    %rsp,%rbp
   21add:	48 83 ec 20          	sub    $0x20,%rsp
   21ae1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21ae5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21ae9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   21aed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21af1:	48 89 c7             	mov    %rax,%rdi
   21af4:	e8 b3 00 00 00       	call   21bac <_ZSt4moveIRN2vk14PresentModeKHREEONSt16remove_referenceIT_E4typeEOS4_>
   21af9:	48 89 c2             	mov    %rax,%rdx
   21afc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   21b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21b04:	48 89 ce             	mov    %rcx,%rsi
   21b07:	48 89 c7             	mov    %rax,%rdi
   21b0a:	e8 ab 00 00 00       	call   21bba <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   21b0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21b13:	48 89 c7             	mov    %rax,%rdi
   21b16:	e8 30 fa ff ff       	call   2154b <_ZSt11__addressofIN2vk14PresentModeKHREEPT_RS2_>
   21b1b:	48 89 c2             	mov    %rax,%rdx
   21b1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21b22:	48 89 d6             	mov    %rdx,%rsi
   21b25:	48 89 c7             	mov    %rax,%rdi
   21b28:	e8 c2 00 00 00       	call   21bef <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE7destroyIS1_EEvRS2_PT_>
    }
   21b2d:	90                   	nop
   21b2e:	c9                   	leave
   21b2f:	c3                   	ret

0000000000021b30 <_ZSt7forwardIN2vk16SurfaceFormatKHREEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   21b30:	55                   	push   %rbp
   21b31:	48 89 e5             	mov    %rsp,%rbp
   21b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   21b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b3c:	5d                   	pop    %rbp
   21b3d:	c3                   	ret

0000000000021b3e <_ZSt12construct_atIN2vk16SurfaceFormatKHREJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   21b3e:	55                   	push   %rbp
   21b3f:	48 89 e5             	mov    %rsp,%rbp
   21b42:	53                   	push   %rbx
   21b43:	48 83 ec 18          	sub    $0x18,%rsp
   21b47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21b4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   21b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21b53:	48 89 c6             	mov    %rax,%rsi
   21b56:	bf 08 00 00 00       	mov    $0x8,%edi
   21b5b:	e8 54 46 fe ff       	call   61b4 <_ZnwmPv>
   21b60:	48 89 c3             	mov    %rax,%rbx
   21b63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21b67:	48 89 c7             	mov    %rax,%rdi
   21b6a:	e8 c1 ff ff ff       	call   21b30 <_ZSt7forwardIN2vk16SurfaceFormatKHREEOT_RNSt16remove_referenceIS2_E4typeE>
   21b6f:	48 8b 00             	mov    (%rax),%rax
   21b72:	48 89 03             	mov    %rax,(%rbx)
   21b75:	48 89 d8             	mov    %rbx,%rax
   21b78:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   21b7c:	c9                   	leave
   21b7d:	c3                   	ret

0000000000021b7e <_ZSt8__fill_aIPN2vk14PresentModeKHRES1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   21b7e:	55                   	push   %rbp
   21b7f:	48 89 e5             	mov    %rsp,%rbp
   21b82:	48 83 ec 20          	sub    $0x20,%rsp
   21b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21b8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   21b92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   21b96:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   21b9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21b9e:	48 89 ce             	mov    %rcx,%rsi
   21ba1:	48 89 c7             	mov    %rax,%rdi
   21ba4:	e8 65 00 00 00       	call   21c0e <_ZSt9__fill_a1IPN2vk14PresentModeKHRES1_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   21ba9:	90                   	nop
   21baa:	c9                   	leave
   21bab:	c3                   	ret

0000000000021bac <_ZSt4moveIRN2vk14PresentModeKHREEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   21bac:	55                   	push   %rbp
   21bad:	48 89 e5             	mov    %rsp,%rbp
   21bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   21bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21bb8:	5d                   	pop    %rbp
   21bb9:	c3                   	ret

0000000000021bba <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   21bba:	55                   	push   %rbp
   21bbb:	48 89 e5             	mov    %rsp,%rbp
   21bbe:	48 83 ec 20          	sub    $0x20,%rsp
   21bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21bc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21bca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   21bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21bd2:	48 89 c7             	mov    %rax,%rdi
   21bd5:	e8 65 00 00 00       	call   21c3f <_ZSt7forwardIN2vk14PresentModeKHREEOT_RNSt16remove_referenceIS2_E4typeE>
   21bda:	48 89 c2             	mov    %rax,%rdx
   21bdd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21be1:	48 89 d6             	mov    %rdx,%rsi
   21be4:	48 89 c7             	mov    %rax,%rdi
   21be7:	e8 61 00 00 00       	call   21c4d <_ZSt12construct_atIN2vk14PresentModeKHREJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   21bec:	90                   	nop
   21bed:	c9                   	leave
   21bee:	c3                   	ret

0000000000021bef <_ZNSt16allocator_traitsISaIN2vk14PresentModeKHREEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   21bef:	55                   	push   %rbp
   21bf0:	48 89 e5             	mov    %rsp,%rbp
   21bf3:	48 83 ec 10          	sub    $0x10,%rsp
   21bf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21bfb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   21bff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   21c03:	48 89 c7             	mov    %rax,%rdi
   21c06:	e8 c9 fb ff ff       	call   217d4 <_ZSt10destroy_atIN2vk14PresentModeKHREEvPT_>
	}
   21c0b:	90                   	nop
   21c0c:	c9                   	leave
   21c0d:	c3                   	ret

0000000000021c0e <_ZSt9__fill_a1IPN2vk14PresentModeKHRES1_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   21c0e:	55                   	push   %rbp
   21c0f:	48 89 e5             	mov    %rsp,%rbp
   21c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   21c16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   21c1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   21c1e:	eb 11                	jmp    21c31 <_ZSt9__fill_a1IPN2vk14PresentModeKHRES1_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x23>
	*__first = __value;
   21c20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21c24:	8b 10                	mov    (%rax),%edx
   21c26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c2a:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
   21c2c:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
   21c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c35:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   21c39:	75 e5                	jne    21c20 <_ZSt9__fill_a1IPN2vk14PresentModeKHRES1_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x12>
    }
   21c3b:	90                   	nop
   21c3c:	90                   	nop
   21c3d:	5d                   	pop    %rbp
   21c3e:	c3                   	ret

0000000000021c3f <_ZSt7forwardIN2vk14PresentModeKHREEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   21c3f:	55                   	push   %rbp
   21c40:	48 89 e5             	mov    %rsp,%rbp
   21c43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   21c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   21c4b:	5d                   	pop    %rbp
   21c4c:	c3                   	ret

0000000000021c4d <_ZSt12construct_atIN2vk14PresentModeKHREJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   21c4d:	55                   	push   %rbp
   21c4e:	48 89 e5             	mov    %rsp,%rbp
   21c51:	53                   	push   %rbx
   21c52:	48 83 ec 18          	sub    $0x18,%rsp
   21c56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   21c5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   21c5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   21c62:	48 89 c6             	mov    %rax,%rsi
   21c65:	bf 04 00 00 00       	mov    $0x4,%edi
   21c6a:	e8 45 45 fe ff       	call   61b4 <_ZnwmPv>
   21c6f:	48 89 c3             	mov    %rax,%rbx
   21c72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   21c76:	48 89 c7             	mov    %rax,%rdi
   21c79:	e8 c1 ff ff ff       	call   21c3f <_ZSt7forwardIN2vk14PresentModeKHREEOT_RNSt16remove_referenceIS2_E4typeE>
   21c7e:	8b 00                	mov    (%rax),%eax
   21c80:	89 03                	mov    %eax,(%rbx)
   21c82:	48 89 d8             	mov    %rbx,%rax
   21c85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   21c89:	c9                   	leave
   21c8a:	c3                   	ret

0000000000021c8b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
   21c8b:	55                   	push   %rbp
   21c8c:	48 89 e5             	mov    %rsp,%rbp
   21c8f:	41 54                	push   %r12
   21c91:	53                   	push   %rbx
   21c92:	48 83 ec 30          	sub    $0x30,%rsp
   21c96:	89 7d cc             	mov    %edi,-0x34(%rbp)
   21c99:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
   21c9d:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   21ca1:	0f 89 28 07 00 00    	jns    223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21ca7:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
   21cab:	0f 8d 3d 01 00 00    	jge    21dee <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
   21cb1:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
   21cb8:	0f 84 19 05 00 00    	je     221d7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
   21cbe:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
   21cc5:	0f 8f 04 07 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21ccb:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
   21cd2:	0f 84 37 05 00 00    	je     2220f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
   21cd8:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
   21cdf:	0f 8f ea 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21ce5:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   21cec:	0f 84 55 05 00 00    	je     22247 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
   21cf2:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   21cf9:	0f 8f d0 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21cff:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
   21d06:	0f 84 73 05 00 00    	je     2227f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
   21d0c:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
   21d13:	0f 8f b6 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21d19:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
   21d20:	0f 84 91 05 00 00    	je     222b7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
   21d26:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
   21d2d:	0f 8f 9c 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21d33:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
   21d3a:	0f 84 af 05 00 00    	je     222ef <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
   21d40:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
   21d47:	0f 8f 82 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21d4d:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
   21d54:	0f 84 9d 03 00 00    	je     220f7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
   21d5a:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
   21d61:	0f 8f 68 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21d67:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
   21d6e:	0f 84 bb 03 00 00    	je     2212f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
   21d74:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
   21d7b:	0f 8f 4e 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21d81:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
   21d88:	0f 84 99 05 00 00    	je     22327 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
   21d8e:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
   21d95:	0f 8f 34 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21d9b:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
   21da2:	0f 84 bf 03 00 00    	je     22167 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
   21da8:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
   21daf:	0f 8f 1a 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21db5:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
   21dbc:	0f 84 9d 05 00 00    	je     2235f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
   21dc2:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
   21dc9:	0f 8f 00 06 00 00    	jg     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21dcf:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
   21dd6:	0f 84 bb 05 00 00    	je     22397 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
   21ddc:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
   21de3:	0f 84 b6 03 00 00    	je     2219f <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
   21de9:	e9 e1 05 00 00       	jmp    223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21dee:	8b 45 cc             	mov    -0x34(%rbp),%eax
   21df1:	83 c0 0d             	add    $0xd,%eax
   21df4:	83 f8 0c             	cmp    $0xc,%eax
   21df7:	0f 87 d2 05 00 00    	ja     223cf <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   21dfd:	89 c0                	mov    %eax,%eax
   21dff:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   21e06:	00 
   21e07:	48 8d 05 aa f9 00 00 	lea    0xf9aa(%rip),%rax        # 317b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
   21e0e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   21e11:	48 98                	cltq
   21e13:	48 8d 15 9e f9 00 00 	lea    0xf99e(%rip),%rdx        # 317b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
   21e1a:	48 01 d0             	add    %rdx,%rax
   21e1d:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
   21e1f:	bf 28 00 00 00       	mov    $0x28,%edi
   21e24:	e8 a7 32 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21e29:	48 89 c3             	mov    %rax,%rbx
   21e2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21e30:	48 89 c6             	mov    %rax,%rsi
   21e33:	48 89 df             	mov    %rbx,%rdi
   21e36:	e8 8b 5b fe ff       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
   21e3b:	48 8d 05 e2 ad fe ff 	lea    -0x1521e(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
   21e42:	48 89 c2             	mov    %rax,%rdx
   21e45:	48 8d 05 9c fe 01 00 	lea    0x1fe9c(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21e4c:	48 89 c6             	mov    %rax,%rsi
   21e4f:	48 89 df             	mov    %rbx,%rdi
   21e52:	e8 29 35 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
   21e57:	bf 28 00 00 00       	mov    $0x28,%edi
   21e5c:	e8 6f 32 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21e61:	48 89 c3             	mov    %rax,%rbx
   21e64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21e68:	48 89 c6             	mov    %rax,%rsi
   21e6b:	48 89 df             	mov    %rbx,%rdi
   21e6e:	e8 25 5c fe ff       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
   21e73:	48 8d 05 3a ad fe ff 	lea    -0x152c6(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
   21e7a:	48 89 c2             	mov    %rax,%rdx
   21e7d:	48 8d 05 4c fe 01 00 	lea    0x1fe4c(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21e84:	48 89 c6             	mov    %rax,%rsi
   21e87:	48 89 df             	mov    %rbx,%rdi
   21e8a:	e8 f1 34 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
   21e8f:	bf 28 00 00 00       	mov    $0x28,%edi
   21e94:	e8 37 32 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21e99:	48 89 c3             	mov    %rax,%rbx
   21e9c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21ea0:	48 89 c6             	mov    %rax,%rsi
   21ea3:	48 89 df             	mov    %rbx,%rdi
   21ea6:	e8 bf 5c fe ff       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
   21eab:	48 8d 05 92 ac fe ff 	lea    -0x1536e(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
   21eb2:	48 89 c2             	mov    %rax,%rdx
   21eb5:	48 8d 05 fc fd 01 00 	lea    0x1fdfc(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21ebc:	48 89 c6             	mov    %rax,%rsi
   21ebf:	48 89 df             	mov    %rbx,%rdi
   21ec2:	e8 b9 34 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
   21ec7:	bf 28 00 00 00       	mov    $0x28,%edi
   21ecc:	e8 ff 31 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21ed1:	48 89 c3             	mov    %rax,%rbx
   21ed4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21ed8:	48 89 c6             	mov    %rax,%rsi
   21edb:	48 89 df             	mov    %rbx,%rdi
   21ede:	e8 59 5d fe ff       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
   21ee3:	48 8d 05 ea ab fe ff 	lea    -0x15416(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
   21eea:	48 89 c2             	mov    %rax,%rdx
   21eed:	48 8d 05 ac fd 01 00 	lea    0x1fdac(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21ef4:	48 89 c6             	mov    %rax,%rsi
   21ef7:	48 89 df             	mov    %rbx,%rdi
   21efa:	e8 81 34 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
   21eff:	bf 28 00 00 00       	mov    $0x28,%edi
   21f04:	e8 c7 31 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21f09:	48 89 c3             	mov    %rax,%rbx
   21f0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21f10:	48 89 c6             	mov    %rax,%rsi
   21f13:	48 89 df             	mov    %rbx,%rdi
   21f16:	e8 f3 5d fe ff       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
   21f1b:	48 8d 05 42 ab fe ff 	lea    -0x154be(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
   21f22:	48 89 c2             	mov    %rax,%rdx
   21f25:	48 8d 05 5c fd 01 00 	lea    0x1fd5c(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21f2c:	48 89 c6             	mov    %rax,%rsi
   21f2f:	48 89 df             	mov    %rbx,%rdi
   21f32:	e8 49 34 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
   21f37:	bf 28 00 00 00       	mov    $0x28,%edi
   21f3c:	e8 8f 31 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21f41:	48 89 c3             	mov    %rax,%rbx
   21f44:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21f48:	48 89 c6             	mov    %rax,%rsi
   21f4b:	48 89 df             	mov    %rbx,%rdi
   21f4e:	e8 8d 5e fe ff       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
   21f53:	48 8d 05 9a aa fe ff 	lea    -0x15566(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
   21f5a:	48 89 c2             	mov    %rax,%rdx
   21f5d:	48 8d 05 0c fd 01 00 	lea    0x1fd0c(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21f64:	48 89 c6             	mov    %rax,%rsi
   21f67:	48 89 df             	mov    %rbx,%rdi
   21f6a:	e8 11 34 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
   21f6f:	bf 28 00 00 00       	mov    $0x28,%edi
   21f74:	e8 57 31 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21f79:	48 89 c3             	mov    %rax,%rbx
   21f7c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21f80:	48 89 c6             	mov    %rax,%rsi
   21f83:	48 89 df             	mov    %rbx,%rdi
   21f86:	e8 27 5f fe ff       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
   21f8b:	48 8d 05 f2 a9 fe ff 	lea    -0x1560e(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
   21f92:	48 89 c2             	mov    %rax,%rdx
   21f95:	48 8d 05 bc fc 01 00 	lea    0x1fcbc(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21f9c:	48 89 c6             	mov    %rax,%rsi
   21f9f:	48 89 df             	mov    %rbx,%rdi
   21fa2:	e8 d9 33 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
   21fa7:	bf 28 00 00 00       	mov    $0x28,%edi
   21fac:	e8 1f 31 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21fb1:	48 89 c3             	mov    %rax,%rbx
   21fb4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21fb8:	48 89 c6             	mov    %rax,%rsi
   21fbb:	48 89 df             	mov    %rbx,%rdi
   21fbe:	e8 c1 5f fe ff       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
   21fc3:	48 8d 05 4a a9 fe ff 	lea    -0x156b6(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
   21fca:	48 89 c2             	mov    %rax,%rdx
   21fcd:	48 8d 05 6c fc 01 00 	lea    0x1fc6c(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   21fd4:	48 89 c6             	mov    %rax,%rsi
   21fd7:	48 89 df             	mov    %rbx,%rdi
   21fda:	e8 a1 33 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
   21fdf:	bf 28 00 00 00       	mov    $0x28,%edi
   21fe4:	e8 e7 30 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   21fe9:	48 89 c3             	mov    %rax,%rbx
   21fec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   21ff0:	48 89 c6             	mov    %rax,%rsi
   21ff3:	48 89 df             	mov    %rbx,%rdi
   21ff6:	e8 5b 60 fe ff       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
   21ffb:	48 8d 05 a2 a8 fe ff 	lea    -0x1575e(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
   22002:	48 89 c2             	mov    %rax,%rdx
   22005:	48 8d 05 1c fc 01 00 	lea    0x1fc1c(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2200c:	48 89 c6             	mov    %rax,%rsi
   2200f:	48 89 df             	mov    %rbx,%rdi
   22012:	e8 69 33 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
   22017:	bf 28 00 00 00       	mov    $0x28,%edi
   2201c:	e8 af 30 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22021:	48 89 c3             	mov    %rax,%rbx
   22024:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22028:	48 89 c6             	mov    %rax,%rsi
   2202b:	48 89 df             	mov    %rbx,%rdi
   2202e:	e8 f5 60 fe ff       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
   22033:	48 8d 05 fa a7 fe ff 	lea    -0x15806(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
   2203a:	48 89 c2             	mov    %rax,%rdx
   2203d:	48 8d 05 cc fb 01 00 	lea    0x1fbcc(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   22044:	48 89 c6             	mov    %rax,%rsi
   22047:	48 89 df             	mov    %rbx,%rdi
   2204a:	e8 31 33 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
   2204f:	bf 28 00 00 00       	mov    $0x28,%edi
   22054:	e8 77 30 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22059:	48 89 c3             	mov    %rax,%rbx
   2205c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22060:	48 89 c6             	mov    %rax,%rsi
   22063:	48 89 df             	mov    %rbx,%rdi
   22066:	e8 8f 61 fe ff       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
   2206b:	48 8d 05 52 a7 fe ff 	lea    -0x158ae(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
   22072:	48 89 c2             	mov    %rax,%rdx
   22075:	48 8d 05 7c fb 01 00 	lea    0x1fb7c(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2207c:	48 89 c6             	mov    %rax,%rsi
   2207f:	48 89 df             	mov    %rbx,%rdi
   22082:	e8 f9 32 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
   22087:	bf 28 00 00 00       	mov    $0x28,%edi
   2208c:	e8 3f 30 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22091:	48 89 c3             	mov    %rax,%rbx
   22094:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22098:	48 89 c6             	mov    %rax,%rsi
   2209b:	48 89 df             	mov    %rbx,%rdi
   2209e:	e8 29 62 fe ff       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
   220a3:	48 8d 05 aa a6 fe ff 	lea    -0x15956(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
   220aa:	48 89 c2             	mov    %rax,%rdx
   220ad:	48 8d 05 2c fb 01 00 	lea    0x1fb2c(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   220b4:	48 89 c6             	mov    %rax,%rsi
   220b7:	48 89 df             	mov    %rbx,%rdi
   220ba:	e8 c1 32 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
   220bf:	bf 28 00 00 00       	mov    $0x28,%edi
   220c4:	e8 07 30 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   220c9:	48 89 c3             	mov    %rax,%rbx
   220cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   220d0:	48 89 c6             	mov    %rax,%rsi
   220d3:	48 89 df             	mov    %rbx,%rdi
   220d6:	e8 c3 62 fe ff       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
   220db:	48 8d 05 02 a6 fe ff 	lea    -0x159fe(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
   220e2:	48 89 c2             	mov    %rax,%rdx
   220e5:	48 8d 05 dc fa 01 00 	lea    0x1fadc(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   220ec:	48 89 c6             	mov    %rax,%rsi
   220ef:	48 89 df             	mov    %rbx,%rdi
   220f2:	e8 89 32 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
   220f7:	bf 28 00 00 00       	mov    $0x28,%edi
   220fc:	e8 cf 2f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22101:	48 89 c3             	mov    %rax,%rbx
   22104:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22108:	48 89 c6             	mov    %rax,%rsi
   2210b:	48 89 df             	mov    %rbx,%rdi
   2210e:	e8 5d 63 fe ff       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
   22113:	48 8d 05 5a a5 fe ff 	lea    -0x15aa6(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
   2211a:	48 89 c2             	mov    %rax,%rdx
   2211d:	48 8d 05 8c fa 01 00 	lea    0x1fa8c(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   22124:	48 89 c6             	mov    %rax,%rsi
   22127:	48 89 df             	mov    %rbx,%rdi
   2212a:	e8 51 32 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
   2212f:	bf 28 00 00 00       	mov    $0x28,%edi
   22134:	e8 97 2f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22139:	48 89 c3             	mov    %rax,%rbx
   2213c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22140:	48 89 c6             	mov    %rax,%rsi
   22143:	48 89 df             	mov    %rbx,%rdi
   22146:	e8 f7 63 fe ff       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
   2214b:	48 8d 05 b2 a4 fe ff 	lea    -0x15b4e(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
   22152:	48 89 c2             	mov    %rax,%rdx
   22155:	48 8d 05 3c fa 01 00 	lea    0x1fa3c(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2215c:	48 89 c6             	mov    %rax,%rsi
   2215f:	48 89 df             	mov    %rbx,%rdi
   22162:	e8 19 32 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
   22167:	bf 28 00 00 00       	mov    $0x28,%edi
   2216c:	e8 5f 2f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22171:	48 89 c3             	mov    %rax,%rbx
   22174:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22178:	48 89 c6             	mov    %rax,%rsi
   2217b:	48 89 df             	mov    %rbx,%rdi
   2217e:	e8 91 64 fe ff       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
   22183:	48 8d 05 0a a4 fe ff 	lea    -0x15bf6(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
   2218a:	48 89 c2             	mov    %rax,%rdx
   2218d:	48 8d 05 ec f9 01 00 	lea    0x1f9ec(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   22194:	48 89 c6             	mov    %rax,%rsi
   22197:	48 89 df             	mov    %rbx,%rdi
   2219a:	e8 e1 31 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
   2219f:	bf 28 00 00 00       	mov    $0x28,%edi
   221a4:	e8 27 2f fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   221a9:	48 89 c3             	mov    %rax,%rbx
   221ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   221b0:	48 89 c6             	mov    %rax,%rsi
   221b3:	48 89 df             	mov    %rbx,%rdi
   221b6:	e8 2b 65 fe ff       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
   221bb:	48 8d 05 62 a3 fe ff 	lea    -0x15c9e(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
   221c2:	48 89 c2             	mov    %rax,%rdx
   221c5:	48 8d 05 9c f9 01 00 	lea    0x1f99c(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   221cc:	48 89 c6             	mov    %rax,%rsi
   221cf:	48 89 df             	mov    %rbx,%rdi
   221d2:	e8 a9 31 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
   221d7:	bf 28 00 00 00       	mov    $0x28,%edi
   221dc:	e8 ef 2e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   221e1:	48 89 c3             	mov    %rax,%rbx
   221e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   221e8:	48 89 c6             	mov    %rax,%rsi
   221eb:	48 89 df             	mov    %rbx,%rdi
   221ee:	e8 c5 65 fe ff       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
   221f3:	48 8d 05 ba a2 fe ff 	lea    -0x15d46(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
   221fa:	48 89 c2             	mov    %rax,%rdx
   221fd:	48 8d 05 4c f9 01 00 	lea    0x1f94c(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   22204:	48 89 c6             	mov    %rax,%rsi
   22207:	48 89 df             	mov    %rbx,%rdi
   2220a:	e8 71 31 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
   2220f:	bf 28 00 00 00       	mov    $0x28,%edi
   22214:	e8 b7 2e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22219:	48 89 c3             	mov    %rax,%rbx
   2221c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22220:	48 89 c6             	mov    %rax,%rsi
   22223:	48 89 df             	mov    %rbx,%rdi
   22226:	e8 5f 66 fe ff       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
   2222b:	48 8d 05 12 a2 fe ff 	lea    -0x15dee(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
   22232:	48 89 c2             	mov    %rax,%rdx
   22235:	48 8d 05 fc f8 01 00 	lea    0x1f8fc(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2223c:	48 89 c6             	mov    %rax,%rsi
   2223f:	48 89 df             	mov    %rbx,%rdi
   22242:	e8 39 31 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
   22247:	bf 28 00 00 00       	mov    $0x28,%edi
   2224c:	e8 7f 2e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22251:	48 89 c3             	mov    %rax,%rbx
   22254:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22258:	48 89 c6             	mov    %rax,%rsi
   2225b:	48 89 df             	mov    %rbx,%rdi
   2225e:	e8 f9 66 fe ff       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
   22263:	48 8d 05 6a a1 fe ff 	lea    -0x15e96(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
   2226a:	48 89 c2             	mov    %rax,%rdx
   2226d:	48 8d 05 ac f8 01 00 	lea    0x1f8ac(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   22274:	48 89 c6             	mov    %rax,%rsi
   22277:	48 89 df             	mov    %rbx,%rdi
   2227a:	e8 01 31 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
   2227f:	bf 28 00 00 00       	mov    $0x28,%edi
   22284:	e8 47 2e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22289:	48 89 c3             	mov    %rax,%rbx
   2228c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22290:	48 89 c6             	mov    %rax,%rsi
   22293:	48 89 df             	mov    %rbx,%rdi
   22296:	e8 93 67 fe ff       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
   2229b:	48 8d 05 c2 a0 fe ff 	lea    -0x15f3e(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
   222a2:	48 89 c2             	mov    %rax,%rdx
   222a5:	48 8d 05 5c f8 01 00 	lea    0x1f85c(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   222ac:	48 89 c6             	mov    %rax,%rsi
   222af:	48 89 df             	mov    %rbx,%rdi
   222b2:	e8 c9 30 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
   222b7:	bf 28 00 00 00       	mov    $0x28,%edi
   222bc:	e8 0f 2e fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   222c1:	48 89 c3             	mov    %rax,%rbx
   222c4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   222c8:	48 89 c6             	mov    %rax,%rsi
   222cb:	48 89 df             	mov    %rbx,%rdi
   222ce:	e8 2d 68 fe ff       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
   222d3:	48 8d 05 1a a0 fe ff 	lea    -0x15fe6(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
   222da:	48 89 c2             	mov    %rax,%rdx
   222dd:	48 8d 05 0c f8 01 00 	lea    0x1f80c(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   222e4:	48 89 c6             	mov    %rax,%rsi
   222e7:	48 89 df             	mov    %rbx,%rdi
   222ea:	e8 91 30 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
   222ef:	bf 28 00 00 00       	mov    $0x28,%edi
   222f4:	e8 d7 2d fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   222f9:	48 89 c3             	mov    %rax,%rbx
   222fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22300:	48 89 c6             	mov    %rax,%rsi
   22303:	48 89 df             	mov    %rbx,%rdi
   22306:	e8 c7 68 fe ff       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
   2230b:	48 8d 05 72 9f fe ff 	lea    -0x1608e(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
   22312:	48 89 c2             	mov    %rax,%rdx
   22315:	48 8d 05 bc f7 01 00 	lea    0x1f7bc(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2231c:	48 89 c6             	mov    %rax,%rsi
   2231f:	48 89 df             	mov    %rbx,%rdi
   22322:	e8 59 30 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
   22327:	bf 28 00 00 00       	mov    $0x28,%edi
   2232c:	e8 9f 2d fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22331:	48 89 c3             	mov    %rax,%rbx
   22334:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22338:	48 89 c6             	mov    %rax,%rsi
   2233b:	48 89 df             	mov    %rbx,%rdi
   2233e:	e8 61 69 fe ff       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
   22343:	48 8d 05 ca 9e fe ff 	lea    -0x16136(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
   2234a:	48 89 c2             	mov    %rax,%rdx
   2234d:	48 8d 05 6c f7 01 00 	lea    0x1f76c(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   22354:	48 89 c6             	mov    %rax,%rsi
   22357:	48 89 df             	mov    %rbx,%rdi
   2235a:	e8 21 30 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
   2235f:	bf 28 00 00 00       	mov    $0x28,%edi
   22364:	e8 67 2d fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   22369:	48 89 c3             	mov    %rax,%rbx
   2236c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22370:	48 89 c6             	mov    %rax,%rsi
   22373:	48 89 df             	mov    %rbx,%rdi
   22376:	e8 fb 69 fe ff       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
   2237b:	48 8d 05 22 9e fe ff 	lea    -0x161de(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
   22382:	48 89 c2             	mov    %rax,%rdx
   22385:	48 8d 05 1c f7 01 00 	lea    0x1f71c(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2238c:	48 89 c6             	mov    %rax,%rsi
   2238f:	48 89 df             	mov    %rbx,%rdi
   22392:	e8 e9 2f fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
   22397:	bf 28 00 00 00       	mov    $0x28,%edi
   2239c:	e8 2f 2d fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   223a1:	48 89 c3             	mov    %rax,%rbx
   223a4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   223a8:	48 89 c6             	mov    %rax,%rsi
   223ab:	48 89 df             	mov    %rbx,%rdi
   223ae:	e8 95 6a fe ff       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
   223b3:	48 8d 05 7a 9d fe ff 	lea    -0x16286(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
   223ba:	48 89 c2             	mov    %rax,%rdx
   223bd:	48 8d 05 cc f6 01 00 	lea    0x1f6cc(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   223c4:	48 89 c6             	mov    %rax,%rsi
   223c7:	48 89 df             	mov    %rbx,%rdi
   223ca:	e8 b1 2f fe ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
   223cf:	bf 28 00 00 00       	mov    $0x28,%edi
   223d4:	e8 f7 2c fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   223d9:	48 89 c3             	mov    %rax,%rbx
   223dc:	8b 45 cc             	mov    -0x34(%rbp),%eax
   223df:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
   223e2:	0f b6 05 6f ff 01 00 	movzbl 0x1ff6f(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   223e9:	84 c0                	test   %al,%al
   223eb:	0f 94 c0             	sete   %al
   223ee:	84 c0                	test   %al,%al
   223f0:	74 4a                	je     2243c <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
   223f2:	48 8d 05 5f ff 01 00 	lea    0x1ff5f(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   223f9:	48 89 c7             	mov    %rax,%rdi
   223fc:	e8 bf 2f fe ff       	call   53c0 <__cxa_guard_acquire@plt>
   22401:	85 c0                	test   %eax,%eax
   22403:	0f 95 c0             	setne  %al
   22406:	84 c0                	test   %al,%al
   22408:	74 32                	je     2243c <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
   2240a:	48 8d 05 e7 fd 01 00 	lea    0x1fde7(%rip),%rax        # 421f8 <__dso_handle>
   22411:	48 89 c2             	mov    %rax,%rdx
   22414:	48 8d 05 e5 fd 01 00 	lea    0x1fde5(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
   2241b:	48 89 c6             	mov    %rax,%rsi
   2241e:	48 8d 05 6f a8 fe ff 	lea    -0x15791(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
   22425:	48 89 c7             	mov    %rax,%rdi
   22428:	e8 a3 2d fe ff       	call   51d0 <__cxa_atexit@plt>
   2242d:	48 8d 05 24 ff 01 00 	lea    0x1ff24(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   22434:	48 89 c7             	mov    %rax,%rdi
   22437:	e8 c4 2c fe ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
   2243c:	48 8d 15 bd fd 01 00 	lea    0x1fdbd(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
   22443:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   22446:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   2244a:	89 ce                	mov    %ecx,%esi
   2244c:	48 89 c7             	mov    %rax,%rdi
   2244f:	e8 b4 3e fe ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
   22454:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   22458:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
   2245c:	48 89 c6             	mov    %rax,%rsi
   2245f:	48 89 d7             	mov    %rdx,%rdi
   22462:	89 f1                	mov    %esi,%ecx
   22464:	48 89 d0             	mov    %rdx,%rax
   22467:	89 ce                	mov    %ecx,%esi
   22469:	48 89 c2             	mov    %rax,%rdx
   2246c:	48 89 df             	mov    %rbx,%rdi
   2246f:	e8 9c 53 fe ff       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
   22474:	48 8d 05 cb 54 fe ff 	lea    -0x1ab35(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
   2247b:	48 89 c2             	mov    %rax,%rdx
   2247e:	48 8d 05 7b f8 01 00 	lea    0x1f87b(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
   22485:	48 89 c6             	mov    %rax,%rsi
   22488:	48 89 df             	mov    %rbx,%rdi
   2248b:	e8 f0 2e fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
   22490:	49 89 c4             	mov    %rax,%r12
   22493:	48 89 df             	mov    %rbx,%rdi
   22496:	e8 b5 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   2249b:	4c 89 e0             	mov    %r12,%rax
   2249e:	48 89 c7             	mov    %rax,%rdi
   224a1:	e8 fa 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
   224a6:	49 89 c4             	mov    %rax,%r12
   224a9:	48 89 df             	mov    %rbx,%rdi
   224ac:	e8 9f 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   224b1:	4c 89 e0             	mov    %r12,%rax
   224b4:	48 89 c7             	mov    %rax,%rdi
   224b7:	e8 e4 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
   224bc:	49 89 c4             	mov    %rax,%r12
   224bf:	48 89 df             	mov    %rbx,%rdi
   224c2:	e8 89 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   224c7:	4c 89 e0             	mov    %r12,%rax
   224ca:	48 89 c7             	mov    %rax,%rdi
   224cd:	e8 ce 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
   224d2:	49 89 c4             	mov    %rax,%r12
   224d5:	48 89 df             	mov    %rbx,%rdi
   224d8:	e8 73 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   224dd:	4c 89 e0             	mov    %r12,%rax
   224e0:	48 89 c7             	mov    %rax,%rdi
   224e3:	e8 b8 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
   224e8:	49 89 c4             	mov    %rax,%r12
   224eb:	48 89 df             	mov    %rbx,%rdi
   224ee:	e8 5d 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   224f3:	4c 89 e0             	mov    %r12,%rax
   224f6:	48 89 c7             	mov    %rax,%rdi
   224f9:	e8 a2 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
   224fe:	49 89 c4             	mov    %rax,%r12
   22501:	48 89 df             	mov    %rbx,%rdi
   22504:	e8 47 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   22509:	4c 89 e0             	mov    %r12,%rax
   2250c:	48 89 c7             	mov    %rax,%rdi
   2250f:	e8 8c 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
   22514:	49 89 c4             	mov    %rax,%r12
   22517:	48 89 df             	mov    %rbx,%rdi
   2251a:	e8 31 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   2251f:	4c 89 e0             	mov    %r12,%rax
   22522:	48 89 c7             	mov    %rax,%rdi
   22525:	e8 76 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
   2252a:	49 89 c4             	mov    %rax,%r12
   2252d:	48 89 df             	mov    %rbx,%rdi
   22530:	e8 1b 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   22535:	4c 89 e0             	mov    %r12,%rax
   22538:	48 89 c7             	mov    %rax,%rdi
   2253b:	e8 60 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
   22540:	49 89 c4             	mov    %rax,%r12
   22543:	48 89 df             	mov    %rbx,%rdi
   22546:	e8 05 2c fe ff       	call   5150 <__cxa_free_exception@plt>
   2254b:	4c 89 e0             	mov    %r12,%rax
   2254e:	48 89 c7             	mov    %rax,%rdi
   22551:	e8 4a 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
   22556:	49 89 c4             	mov    %rax,%r12
   22559:	48 89 df             	mov    %rbx,%rdi
   2255c:	e8 ef 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   22561:	4c 89 e0             	mov    %r12,%rax
   22564:	48 89 c7             	mov    %rax,%rdi
   22567:	e8 34 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
   2256c:	49 89 c4             	mov    %rax,%r12
   2256f:	48 89 df             	mov    %rbx,%rdi
   22572:	e8 d9 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   22577:	4c 89 e0             	mov    %r12,%rax
   2257a:	48 89 c7             	mov    %rax,%rdi
   2257d:	e8 1e 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
   22582:	49 89 c4             	mov    %rax,%r12
   22585:	48 89 df             	mov    %rbx,%rdi
   22588:	e8 c3 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   2258d:	4c 89 e0             	mov    %r12,%rax
   22590:	48 89 c7             	mov    %rax,%rdi
   22593:	e8 08 2e fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
   22598:	49 89 c4             	mov    %rax,%r12
   2259b:	48 89 df             	mov    %rbx,%rdi
   2259e:	e8 ad 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   225a3:	4c 89 e0             	mov    %r12,%rax
   225a6:	48 89 c7             	mov    %rax,%rdi
   225a9:	e8 f2 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
   225ae:	49 89 c4             	mov    %rax,%r12
   225b1:	48 89 df             	mov    %rbx,%rdi
   225b4:	e8 97 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   225b9:	4c 89 e0             	mov    %r12,%rax
   225bc:	48 89 c7             	mov    %rax,%rdi
   225bf:	e8 dc 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
   225c4:	49 89 c4             	mov    %rax,%r12
   225c7:	48 89 df             	mov    %rbx,%rdi
   225ca:	e8 81 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   225cf:	4c 89 e0             	mov    %r12,%rax
   225d2:	48 89 c7             	mov    %rax,%rdi
   225d5:	e8 c6 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
   225da:	49 89 c4             	mov    %rax,%r12
   225dd:	48 89 df             	mov    %rbx,%rdi
   225e0:	e8 6b 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   225e5:	4c 89 e0             	mov    %r12,%rax
   225e8:	48 89 c7             	mov    %rax,%rdi
   225eb:	e8 b0 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
   225f0:	49 89 c4             	mov    %rax,%r12
   225f3:	48 89 df             	mov    %rbx,%rdi
   225f6:	e8 55 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   225fb:	4c 89 e0             	mov    %r12,%rax
   225fe:	48 89 c7             	mov    %rax,%rdi
   22601:	e8 9a 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
   22606:	49 89 c4             	mov    %rax,%r12
   22609:	48 89 df             	mov    %rbx,%rdi
   2260c:	e8 3f 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   22611:	4c 89 e0             	mov    %r12,%rax
   22614:	48 89 c7             	mov    %rax,%rdi
   22617:	e8 84 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
   2261c:	49 89 c4             	mov    %rax,%r12
   2261f:	48 89 df             	mov    %rbx,%rdi
   22622:	e8 29 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   22627:	4c 89 e0             	mov    %r12,%rax
   2262a:	48 89 c7             	mov    %rax,%rdi
   2262d:	e8 6e 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
   22632:	49 89 c4             	mov    %rax,%r12
   22635:	48 89 df             	mov    %rbx,%rdi
   22638:	e8 13 2b fe ff       	call   5150 <__cxa_free_exception@plt>
   2263d:	4c 89 e0             	mov    %r12,%rax
   22640:	48 89 c7             	mov    %rax,%rdi
   22643:	e8 58 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
   22648:	49 89 c4             	mov    %rax,%r12
   2264b:	48 89 df             	mov    %rbx,%rdi
   2264e:	e8 fd 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   22653:	4c 89 e0             	mov    %r12,%rax
   22656:	48 89 c7             	mov    %rax,%rdi
   22659:	e8 42 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
   2265e:	49 89 c4             	mov    %rax,%r12
   22661:	48 89 df             	mov    %rbx,%rdi
   22664:	e8 e7 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   22669:	4c 89 e0             	mov    %r12,%rax
   2266c:	48 89 c7             	mov    %rax,%rdi
   2266f:	e8 2c 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
   22674:	49 89 c4             	mov    %rax,%r12
   22677:	48 89 df             	mov    %rbx,%rdi
   2267a:	e8 d1 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   2267f:	4c 89 e0             	mov    %r12,%rax
   22682:	48 89 c7             	mov    %rax,%rdi
   22685:	e8 16 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
   2268a:	49 89 c4             	mov    %rax,%r12
   2268d:	48 89 df             	mov    %rbx,%rdi
   22690:	e8 bb 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   22695:	4c 89 e0             	mov    %r12,%rax
   22698:	48 89 c7             	mov    %rax,%rdi
   2269b:	e8 00 2d fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
   226a0:	49 89 c4             	mov    %rax,%r12
   226a3:	48 89 df             	mov    %rbx,%rdi
   226a6:	e8 a5 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   226ab:	4c 89 e0             	mov    %r12,%rax
   226ae:	48 89 c7             	mov    %rax,%rdi
   226b1:	e8 ea 2c fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
   226b6:	49 89 c4             	mov    %rax,%r12
   226b9:	48 89 df             	mov    %rbx,%rdi
   226bc:	e8 8f 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   226c1:	4c 89 e0             	mov    %r12,%rax
   226c4:	48 89 c7             	mov    %rax,%rdi
   226c7:	e8 d4 2c fe ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
   226cc:	49 89 c4             	mov    %rax,%r12
   226cf:	48 89 df             	mov    %rbx,%rdi
   226d2:	e8 79 2a fe ff       	call   5150 <__cxa_free_exception@plt>
   226d7:	4c 89 e0             	mov    %r12,%rax
   226da:	48 89 c7             	mov    %rax,%rdi
   226dd:	e8 be 2c fe ff       	call   53a0 <_Unwind_Resume@plt>

00000000000226e2 <_ZN4rtvc15makeCommandPoolERKNS_13DeviceWrapperE>:
#include "command_pool.hpp"

namespace rtvc {

vk::raii::CommandPool makeCommandPool(const DeviceWrapper &device) {
   226e2:	55                   	push   %rbp
   226e3:	48 89 e5             	mov    %rsp,%rbp
   226e6:	53                   	push   %rbx
   226e7:	48 83 ec 38          	sub    $0x38,%rsp
   226eb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   226ef:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  vk::CommandPoolCreateInfo commandPoolInfo{
   226f3:	66 0f ef c0          	pxor   %xmm0,%xmm0
   226f7:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
   226fb:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
   22700:	c7 45 d0 27 00 00 00 	movl   $0x27,-0x30(%rbp)
   22707:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%rbp)
      .flags{vk::CommandPoolCreateFlagBits::eResetCommandBuffer},
      .queueFamilyIndex{device.queueFamilyIndex},
   2270e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22712:	8b 00                	mov    (%rax),%eax
  };
   22714:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  return {device.logical, commandPoolInfo};
   22717:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2271b:	48 8d 58 28          	lea    0x28(%rax),%rbx
   2271f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   22723:	be 00 00 00 00       	mov    $0x0,%esi
   22728:	48 89 c7             	mov    %rax,%rdi
   2272b:	e8 d4 6d ff ff       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   22730:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   22734:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   22738:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2273c:	48 89 de             	mov    %rbx,%rsi
   2273f:	48 89 c7             	mov    %rax,%rdi
   22742:	e8 d5 00 00 00       	call   2281c <_ZN2vk4raii11CommandPoolC1ERKNS0_6DeviceERKNS_21CommandPoolCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>
}
   22747:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2274b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2274f:	c9                   	leave
   22750:	c3                   	ret

0000000000022751 <_ZN4rtvc18makeCommandBuffersERKN2vk4raii6DeviceERKNS1_11CommandPoolEjNS0_18CommandBufferLevelE>:

vk::raii::CommandBuffers
makeCommandBuffers(const vk::raii::Device &device,
                   const vk::raii::CommandPool &commandPool, uint32_t count,
                   vk::CommandBufferLevel level) {
   22751:	55                   	push   %rbp
   22752:	48 89 e5             	mov    %rsp,%rbp
   22755:	48 83 ec 40          	sub    $0x40,%rsp
   22759:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2275d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   22761:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   22765:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
   22768:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
  vk::CommandBufferAllocateInfo allocInfo{
   2276c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22770:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
   22774:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
   22778:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
      .commandPool{*commandPool},
   2277f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22783:	48 89 c7             	mov    %rax,%rdi
   22786:	e8 7b 01 00 00       	call   22906 <_ZNK2vk4raii11CommandPooldeEv>
      .level{level},
      .commandBufferCount{count},
  };
   2278b:	48 8b 00             	mov    (%rax),%rax
   2278e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   22792:	8b 45 c0             	mov    -0x40(%rbp),%eax
   22795:	89 45 f8             	mov    %eax,-0x8(%rbp)
   22798:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   2279b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  return {device, allocInfo};
   2279e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   227a2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   227a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   227aa:	48 89 ce             	mov    %rcx,%rsi
   227ad:	48 89 c7             	mov    %rax,%rdi
   227b0:	e8 91 03 00 00       	call   22b46 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE>
}
   227b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   227b9:	c9                   	leave
   227ba:	c3                   	ret
   227bb:	90                   	nop

00000000000227bc <_ZN2vk13CommandBufferC1EP17VkCommandBuffer_T>:
    CommandBuffer( VkCommandBuffer commandBuffer ) VULKAN_HPP_NOEXCEPT : m_commandBuffer( commandBuffer ) {}
   227bc:	55                   	push   %rbp
   227bd:	48 89 e5             	mov    %rsp,%rbp
   227c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   227c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   227c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   227cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   227d0:	48 89 10             	mov    %rdx,(%rax)
   227d3:	90                   	nop
   227d4:	5d                   	pop    %rbp
   227d5:	c3                   	ret

00000000000227d6 <_ZN2vk11CommandPoolC1EP15VkCommandPool_T>:
    VULKAN_HPP_TYPESAFE_EXPLICIT CommandPool( VkCommandPool commandPool ) VULKAN_HPP_NOEXCEPT : m_commandPool( commandPool ) {}
   227d6:	55                   	push   %rbp
   227d7:	48 89 e5             	mov    %rsp,%rbp
   227da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   227de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   227e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   227e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   227ea:	48 89 10             	mov    %rdx,(%rax)
   227ed:	90                   	nop
   227ee:	5d                   	pop    %rbp
   227ef:	c3                   	ret

00000000000227f0 <_ZN2vk11CommandPoolC1Ev>:
    VULKAN_HPP_CONSTEXPR         CommandPool() = default;
   227f0:	55                   	push   %rbp
   227f1:	48 89 e5             	mov    %rsp,%rbp
   227f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   227f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   227fc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   22803:	90                   	nop
   22804:	5d                   	pop    %rbp
   22805:	c3                   	ret

0000000000022806 <_ZN2vk13CommandBufferC1Ev>:
    VULKAN_HPP_CONSTEXPR CommandBuffer() = default;
   22806:	55                   	push   %rbp
   22807:	48 89 e5             	mov    %rsp,%rbp
   2280a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2280e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22812:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   22819:	90                   	nop
   2281a:	5d                   	pop    %rbp
   2281b:	c3                   	ret

000000000002281c <_ZN2vk4raii11CommandPoolC1ERKNS0_6DeviceERKNS_21CommandPoolCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      CommandPool( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Device const &                 device,
   2281c:	55                   	push   %rbp
   2281d:	48 89 e5             	mov    %rsp,%rbp
   22820:	41 55                	push   %r13
   22822:	41 54                	push   %r12
   22824:	53                   	push   %rbx
   22825:	48 83 ec 38          	sub    $0x38,%rsp
   22829:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   2282d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   22831:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   22835:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_device( *device )
   22839:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2283d:	48 89 c7             	mov    %rax,%rdi
   22840:	e8 71 50 ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
   22845:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   22849:	48 8b 00             	mov    (%rax),%rax
   2284c:	48 89 02             	mov    %rax,(%rdx)
        , m_dispatcher( device.getDispatcher() )
   2284f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   22853:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   2285a:	00 
   2285b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2285f:	48 83 c0 08          	add    $0x8,%rax
   22863:	48 89 c7             	mov    %rax,%rdi
   22866:	e8 85 ff ff ff       	call   227f0 <_ZN2vk11CommandPoolC1Ev>
        , m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
   2286b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2286f:	48 89 c7             	mov    %rax,%rdi
   22872:	e8 ff 5c ff ff       	call   18576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
   22877:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2287b:	48 89 42 10          	mov    %rax,0x10(%rdx)
        , m_dispatcher( device.getDispatcher() )
   2287f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22883:	48 89 c7             	mov    %rax,%rdi
   22886:	e8 5f 6d fe ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   2288b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2288f:	48 89 42 18          	mov    %rax,0x18(%rdx)
          device.getDispatcher()->vkCreateCommandPool( static_cast<VkDevice>( *device ),
   22893:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   22897:	48 89 c7             	mov    %rax,%rdi
   2289a:	e8 4b 6d fe ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   2289f:	4c 8b a0 38 02 00 00 	mov    0x238(%rax),%r12
                                                       reinterpret_cast<VkCommandPool *>( &m_commandPool ) ) );
   228a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   228aa:	4c 8d 68 08          	lea    0x8(%rax),%r13
                                                       reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
   228ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   228b2:	48 8b 58 10          	mov    0x10(%rax),%rbx
          device.getDispatcher()->vkCreateCommandPool( static_cast<VkDevice>( *device ),
   228b6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   228ba:	48 89 c7             	mov    %rax,%rdi
   228bd:	e8 f4 4f ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
   228c2:	48 89 c7             	mov    %rax,%rdi
   228c5:	e8 e2 67 fe ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
   228ca:	48 89 c7             	mov    %rax,%rdi
   228cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   228d1:	4c 89 e9             	mov    %r13,%rcx
   228d4:	48 89 da             	mov    %rbx,%rdx
   228d7:	48 89 c6             	mov    %rax,%rsi
   228da:	41 ff d4             	call   *%r12
   228dd:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
   228e0:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   228e4:	74 14                	je     228fa <_ZN2vk4raii11CommandPoolC1ERKNS0_6DeviceERKNS_21CommandPoolCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0xde>
          throwResultException( result, "vkCreateCommandPool" );
   228e6:	8b 45 dc             	mov    -0x24(%rbp),%eax
   228e9:	48 8d 15 c0 ef 00 00 	lea    0xefc0(%rip),%rdx        # 318b0 <_ZNSt8__detailL19__atomic_spin_countE+0xb4>
   228f0:	48 89 d6             	mov    %rdx,%rsi
   228f3:	89 c7                	mov    %eax,%edi
   228f5:	e8 91 f3 ff ff       	call   21c8b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
      }
   228fa:	90                   	nop
   228fb:	48 83 c4 38          	add    $0x38,%rsp
   228ff:	5b                   	pop    %rbx
   22900:	41 5c                	pop    %r12
   22902:	41 5d                	pop    %r13
   22904:	5d                   	pop    %rbp
   22905:	c3                   	ret

0000000000022906 <_ZNK2vk4raii11CommandPooldeEv>:
      VULKAN_HPP_NAMESPACE::CommandPool const & operator*() const VULKAN_HPP_NOEXCEPT
   22906:	55                   	push   %rbp
   22907:	48 89 e5             	mov    %rsp,%rbp
   2290a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        return m_commandPool;
   2290e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22912:	48 83 c0 08          	add    $0x8,%rax
      }
   22916:	5d                   	pop    %rbp
   22917:	c3                   	ret

0000000000022918 <_ZN2vk4raii13CommandBufferC1ERKNS0_6DeviceEP17VkCommandBuffer_TP15VkCommandPool_T>:
      CommandBuffer( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Device const & device, VkCommandBuffer commandBuffer, VkCommandPool commandPool )
   22918:	55                   	push   %rbp
   22919:	48 89 e5             	mov    %rsp,%rbp
   2291c:	48 83 ec 20          	sub    $0x20,%rsp
   22920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22924:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   22928:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2292c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
        : m_device( *device ), m_commandPool( commandPool ), m_commandBuffer( commandBuffer ), m_dispatcher( device.getDispatcher() )
   22930:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22934:	48 89 c7             	mov    %rax,%rdi
   22937:	e8 7a 4f ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
   2293c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22940:	48 8b 00             	mov    (%rax),%rax
   22943:	48 89 02             	mov    %rax,(%rdx)
   22946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2294a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   2294e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22952:	48 89 c6             	mov    %rax,%rsi
   22955:	48 89 d7             	mov    %rdx,%rdi
   22958:	e8 79 fe ff ff       	call   227d6 <_ZN2vk11CommandPoolC1EP15VkCommandPool_T>
   2295d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22961:	48 8d 50 10          	lea    0x10(%rax),%rdx
   22965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22969:	48 89 c6             	mov    %rax,%rsi
   2296c:	48 89 d7             	mov    %rdx,%rdi
   2296f:	e8 48 fe ff ff       	call   227bc <_ZN2vk13CommandBufferC1EP17VkCommandBuffer_T>
   22974:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22978:	48 89 c7             	mov    %rax,%rdi
   2297b:	e8 6a 6c fe ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   22980:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   22984:	48 89 42 18          	mov    %rax,0x18(%rdx)
      }
   22988:	90                   	nop
   22989:	c9                   	leave
   2298a:	c3                   	ret
   2298b:	90                   	nop

000000000002298c <_ZN2vk4raii13CommandBufferC1EOS1_>:
      CommandBuffer( CommandBuffer && rhs ) VULKAN_HPP_NOEXCEPT
   2298c:	55                   	push   %rbp
   2298d:	48 89 e5             	mov    %rsp,%rbp
   22990:	48 83 ec 50          	sub    $0x50,%rsp
   22994:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   22998:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
        : m_device( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_device, {} ) )
   2299c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   229a3:	00 
   229a4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   229a8:	48 89 c7             	mov    %rax,%rdi
   229ab:	e8 9c 4d ff ff       	call   1774c <_ZN2vk6DeviceC1Ev>
   229b0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   229b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      return std::exchange<T>( obj, std::forward<U>( newValue ) );
   229b8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   229bc:	48 89 c7             	mov    %rax,%rdi
   229bf:	e8 23 07 00 00       	call   230e7 <_ZSt7forwardIN2vk6DeviceEEOT_RNSt16remove_referenceIS2_E4typeE>
   229c4:	48 89 c2             	mov    %rax,%rdx
   229c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   229cb:	48 89 d6             	mov    %rdx,%rsi
   229ce:	48 89 c7             	mov    %rax,%rdi
   229d1:	e8 1f 07 00 00       	call   230f5 <_ZSt8exchangeIN2vk6DeviceES1_ET_RS2_OT0_>
   229d6:	90                   	nop
   229d7:	48 89 c2             	mov    %rax,%rdx
        : m_device( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_device, {} ) )
   229da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   229de:	48 89 10             	mov    %rdx,(%rax)
        , m_commandPool( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_commandPool, {} ) )
   229e1:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   229e8:	00 
   229e9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   229ed:	48 89 c7             	mov    %rax,%rdi
   229f0:	e8 fb fd ff ff       	call   227f0 <_ZN2vk11CommandPoolC1Ev>
   229f5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   229f9:	48 83 c0 08          	add    $0x8,%rax
   229fd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      return std::exchange<T>( obj, std::forward<U>( newValue ) );
   22a01:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   22a05:	48 89 c7             	mov    %rax,%rdi
   22a08:	e8 64 07 00 00       	call   23171 <_ZSt7forwardIN2vk11CommandPoolEEOT_RNSt16remove_referenceIS2_E4typeE>
   22a0d:	48 89 c2             	mov    %rax,%rdx
   22a10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22a14:	48 89 d6             	mov    %rdx,%rsi
   22a17:	48 89 c7             	mov    %rax,%rdi
   22a1a:	e8 60 07 00 00       	call   2317f <_ZSt8exchangeIN2vk11CommandPoolES1_ET_RS2_OT0_>
   22a1f:	90                   	nop
   22a20:	48 89 c2             	mov    %rax,%rdx
        , m_commandPool( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_commandPool, {} ) )
   22a23:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22a27:	48 89 50 08          	mov    %rdx,0x8(%rax)
        , m_commandBuffer( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_commandBuffer, {} ) )
   22a2b:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   22a32:	00 
   22a33:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   22a37:	48 89 c7             	mov    %rax,%rdi
   22a3a:	e8 c7 fd ff ff       	call   22806 <_ZN2vk13CommandBufferC1Ev>
   22a3f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22a43:	48 83 c0 10          	add    $0x10,%rax
   22a47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      return std::exchange<T>( obj, std::forward<U>( newValue ) );
   22a4b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   22a4f:	48 89 c7             	mov    %rax,%rdi
   22a52:	e8 66 07 00 00       	call   231bd <_ZSt7forwardIN2vk13CommandBufferEEOT_RNSt16remove_referenceIS2_E4typeE>
   22a57:	48 89 c2             	mov    %rax,%rdx
   22a5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22a5e:	48 89 d6             	mov    %rdx,%rsi
   22a61:	48 89 c7             	mov    %rax,%rdi
   22a64:	e8 62 07 00 00       	call   231cb <_ZSt8exchangeIN2vk13CommandBufferES1_ET_RS2_OT0_>
   22a69:	90                   	nop
   22a6a:	48 89 c2             	mov    %rax,%rdx
        , m_commandBuffer( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_commandBuffer, {} ) )
   22a6d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   22a71:	48 89 50 10          	mov    %rdx,0x10(%rax)
        , m_dispatcher( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_dispatcher, nullptr ) )
   22a75:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   22a7c:	00 
   22a7d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   22a81:	48 83 c0 18          	add    $0x18,%rax
   22a85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      return std::exchange<T>( obj, std::forward<U>( newValue ) );
   22a89:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   22a8d:	48 89 c7             	mov    %rax,%rdi
   22a90:	e8 de 6a ff ff       	call   19573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>
   22a95:	48 89 c2             	mov    %rax,%rdx
   22a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22a9c:	48 89 d6             	mov    %rdx,%rsi
   22a9f:	48 89 c7             	mov    %rax,%rdi
   22aa2:	e8 8c 06 00 00       	call   23133 <_ZSt8exchangeIPKN2vk4raii16DeviceDispatcherEDnET_RS5_OT0_>
   22aa7:	90                   	nop
        , m_dispatcher( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::exchange( rhs.m_dispatcher, nullptr ) )
   22aa8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   22aac:	48 89 42 18          	mov    %rax,0x18(%rdx)
      }
   22ab0:	90                   	nop
   22ab1:	c9                   	leave
   22ab2:	c3                   	ret
   22ab3:	90                   	nop

0000000000022ab4 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EEC1Ev>:
      _Vector_base() = default;
   22ab4:	55                   	push   %rbp
   22ab5:	48 89 e5             	mov    %rsp,%rbp
   22ab8:	48 83 ec 10          	sub    $0x10,%rsp
   22abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22ac4:	48 89 c7             	mov    %rax,%rdi
   22ac7:	e8 48 02 00 00       	call   22d14 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE12_Vector_implC1Ev>
   22acc:	90                   	nop
   22acd:	c9                   	leave
   22ace:	c3                   	ret
   22acf:	90                   	nop

0000000000022ad0 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EEC1Ev>:
      vector() = default;
   22ad0:	55                   	push   %rbp
   22ad1:	48 89 e5             	mov    %rsp,%rbp
   22ad4:	48 83 ec 10          	sub    $0x10,%rsp
   22ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22ae0:	48 89 c7             	mov    %rax,%rdi
   22ae3:	e8 cc ff ff ff       	call   22ab4 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EEC1Ev>
   22ae8:	90                   	nop
   22ae9:	c9                   	leave
   22aea:	c3                   	ret

0000000000022aeb <_ZN9__gnu_cxxeqIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   22aeb:	55                   	push   %rbp
   22aec:	48 89 e5             	mov    %rsp,%rbp
   22aef:	53                   	push   %rbx
   22af0:	48 83 ec 18          	sub    $0x18,%rsp
   22af4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22af8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   22afc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22b00:	48 89 c7             	mov    %rax,%rdi
   22b03:	e8 1e 00 00 00       	call   22b26 <_ZNK9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   22b08:	48 8b 18             	mov    (%rax),%rbx
   22b0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22b0f:	48 89 c7             	mov    %rax,%rdi
   22b12:	e8 0f 00 00 00       	call   22b26 <_ZNK9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   22b17:	48 8b 00             	mov    (%rax),%rax
   22b1a:	48 39 c3             	cmp    %rax,%rbx
   22b1d:	0f 94 c0             	sete   %al
   22b20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   22b24:	c9                   	leave
   22b25:	c3                   	ret

0000000000022b26 <_ZNK9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   22b26:	55                   	push   %rbp
   22b27:	48 89 e5             	mov    %rsp,%rbp
   22b2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   22b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22b32:	5d                   	pop    %rbp
   22b33:	c3                   	ret

0000000000022b34 <_ZNK9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   22b34:	55                   	push   %rbp
   22b35:	48 89 e5             	mov    %rsp,%rbp
   22b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   22b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22b40:	48 8b 00             	mov    (%rax),%rax
   22b43:	5d                   	pop    %rbp
   22b44:	c3                   	ret
   22b45:	90                   	nop

0000000000022b46 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE>:
      CommandBuffers( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Device const & device,
   22b46:	55                   	push   %rbp
   22b47:	48 89 e5             	mov    %rsp,%rbp
   22b4a:	41 54                	push   %r12
   22b4c:	53                   	push   %rbx
   22b4d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   22b51:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   22b55:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
   22b59:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
      {
   22b60:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22b64:	48 89 c7             	mov    %rax,%rdi
   22b67:	e8 64 ff ff ff       	call   22ad0 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EEC1Ev>
        VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::DeviceDispatcher const * dispatcher = device.getDispatcher();
   22b6c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22b70:	48 89 c7             	mov    %rax,%rdi
   22b73:	e8 72 6a fe ff       	call   95ea <_ZNK2vk4raii6Device13getDispatcherEv>
   22b78:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
        std::vector<VkCommandBuffer>                                              commandBuffers( allocateInfo.commandBufferCount );
   22b7c:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   22b80:	48 89 c7             	mov    %rax,%rdi
   22b83:	e8 b4 01 00 00       	call   22d3c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
   22b88:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22b8f:	8b 40 1c             	mov    0x1c(%rax),%eax
   22b92:	89 c1                	mov    %eax,%ecx
   22b94:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
   22b98:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   22b9c:	48 89 ce             	mov    %rcx,%rsi
   22b9f:	48 89 c7             	mov    %rax,%rdi
   22ba2:	e8 bd 01 00 00       	call   22d64 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
   22ba7:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   22bab:	48 89 c7             	mov    %rax,%rdi
   22bae:	e8 a5 01 00 00       	call   22d58 <_ZNSaIP17VkCommandBuffer_TED1Ev>
        VULKAN_HPP_NAMESPACE::Result result = static_cast<VULKAN_HPP_NAMESPACE::Result>( dispatcher->vkAllocateCommandBuffers(
   22bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22bb7:	48 8b 98 50 02 00 00 	mov    0x250(%rax),%rbx
   22bbe:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   22bc2:	48 89 c7             	mov    %rax,%rdi
   22bc5:	e8 54 02 00 00       	call   22e1e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
   22bca:	49 89 c4             	mov    %rax,%r12
          static_cast<VkDevice>( *device ), reinterpret_cast<const VkCommandBufferAllocateInfo *>( &allocateInfo ), commandBuffers.data() ) );
   22bcd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22bd1:	48 89 c7             	mov    %rax,%rdi
   22bd4:	e8 dd 4c ff ff       	call   178b6 <_ZNK2vk4raii6DevicedeEv>
        VULKAN_HPP_NAMESPACE::Result result = static_cast<VULKAN_HPP_NAMESPACE::Result>( dispatcher->vkAllocateCommandBuffers(
   22bd9:	48 89 c7             	mov    %rax,%rdi
   22bdc:	e8 cb 64 fe ff       	call   90ac <_ZNK2vk6DevicecvP10VkDevice_TEv>
   22be1:	48 89 c1             	mov    %rax,%rcx
   22be4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22beb:	4c 89 e2             	mov    %r12,%rdx
   22bee:	48 89 c6             	mov    %rax,%rsi
   22bf1:	48 89 cf             	mov    %rcx,%rdi
   22bf4:	ff d3                	call   *%rbx
   22bf6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
        if ( result == VULKAN_HPP_NAMESPACE::Result::eSuccess )
   22bf9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   22bfd:	0f 85 af 00 00 00    	jne    22cb2 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE+0x16c>
          this->reserve( allocateInfo.commandBufferCount );
   22c03:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22c07:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   22c0e:	8b 52 1c             	mov    0x1c(%rdx),%edx
   22c11:	89 d2                	mov    %edx,%edx
   22c13:	48 89 d6             	mov    %rdx,%rsi
   22c16:	48 89 c7             	mov    %rax,%rdi
   22c19:	e8 48 02 00 00       	call   22e66 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE7reserveEm>
          for ( auto const & commandBuffer : commandBuffers )
   22c1e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   22c22:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   22c26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22c2a:	48 89 c7             	mov    %rax,%rdi
   22c2d:	e8 4e 03 00 00       	call   22f80 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE5beginEv>
   22c32:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   22c36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22c3a:	48 89 c7             	mov    %rax,%rdi
   22c3d:	e8 64 03 00 00       	call   22fa6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE3endEv>
   22c42:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   22c46:	eb 4e                	jmp    22c96 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE+0x150>
   22c48:	48 8d 45 98          	lea    -0x68(%rbp),%rax
   22c4c:	48 89 c7             	mov    %rax,%rdi
   22c4f:	e8 e0 fe ff ff       	call   22b34 <_ZNK9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
   22c54:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
            this->emplace_back( device, commandBuffer, static_cast<VkCommandPool>( allocateInfo.commandPool ) );
   22c58:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   22c5c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   22c63:	48 83 c0 10          	add    $0x10,%rax
   22c67:	48 89 c7             	mov    %rax,%rdi
   22c6a:	e8 d7 63 fe ff       	call   9046 <_ZNK2vk11CommandPoolcvP15VkCommandPool_TEv>
   22c6f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   22c73:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   22c77:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   22c7b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   22c7f:	48 89 c6             	mov    %rax,%rsi
   22c82:	48 89 df             	mov    %rbx,%rdi
   22c85:	e8 66 03 00 00       	call   22ff0 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12emplace_backIJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEERS2_DpOT_>
          for ( auto const & commandBuffer : commandBuffers )
   22c8a:	48 8d 45 98          	lea    -0x68(%rbp),%rax
   22c8e:	48 89 c7             	mov    %rax,%rdi
   22c91:	e8 3a 03 00 00       	call   22fd0 <_ZN9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEppEv>
   22c96:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
   22c9a:	48 8d 45 98          	lea    -0x68(%rbp),%rax
   22c9e:	48 89 d6             	mov    %rdx,%rsi
   22ca1:	48 89 c7             	mov    %rax,%rdi
   22ca4:	e8 42 fe ff ff       	call   22aeb <_ZN9__gnu_cxxeqIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   22ca9:	83 f0 01             	xor    $0x1,%eax
   22cac:	84 c0                	test   %al,%al
   22cae:	75 98                	jne    22c48 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE+0x102>
   22cb0:	eb 14                	jmp    22cc6 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE+0x180>
          throwResultException( result, "vkAllocateCommandBuffers" );
   22cb2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   22cb5:	48 8d 15 5d ec 00 00 	lea    0xec5d(%rip),%rdx        # 31919 <_ZNSt8__detailL19__atomic_spin_countE+0x11d>
   22cbc:	48 89 d6             	mov    %rdx,%rsi
   22cbf:	89 c7                	mov    %eax,%edi
   22cc1:	e8 c5 ef ff ff       	call   21c8b <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
      }
   22cc6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   22cca:	48 89 c7             	mov    %rax,%rdi
   22ccd:	e8 08 01 00 00       	call   22dda <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   22cd2:	eb 37                	jmp    22d0b <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE+0x1c5>
        std::vector<VkCommandBuffer>                                              commandBuffers( allocateInfo.commandBufferCount );
   22cd4:	48 89 c3             	mov    %rax,%rbx
   22cd7:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
   22cdb:	48 89 c7             	mov    %rax,%rdi
   22cde:	e8 75 00 00 00       	call   22d58 <_ZNSaIP17VkCommandBuffer_TED1Ev>
   22ce3:	eb 0f                	jmp    22cf4 <_ZN2vk4raii14CommandBuffersC1ERKNS0_6DeviceERKNS_25CommandBufferAllocateInfoE+0x1ae>
      }
   22ce5:	48 89 c3             	mov    %rax,%rbx
   22ce8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   22cec:	48 89 c7             	mov    %rax,%rdi
   22cef:	e8 e6 00 00 00       	call   22dda <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
   22cf4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   22cf8:	48 89 c7             	mov    %rax,%rdi
   22cfb:	e8 46 7c fe ff       	call   a946 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EED1Ev>
   22d00:	48 89 d8             	mov    %rbx,%rax
   22d03:	48 89 c7             	mov    %rax,%rdi
   22d06:	e8 95 26 fe ff       	call   53a0 <_Unwind_Resume@plt>
   22d0b:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   22d0f:	5b                   	pop    %rbx
   22d10:	41 5c                	pop    %r12
   22d12:	5d                   	pop    %rbp
   22d13:	c3                   	ret

0000000000022d14 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   22d14:	55                   	push   %rbp
   22d15:	48 89 e5             	mov    %rsp,%rbp
   22d18:	48 83 ec 10          	sub    $0x10,%rsp
   22d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   22d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22d24:	48 89 c7             	mov    %rax,%rdi
   22d27:	e8 de 04 00 00       	call   2320a <_ZNSaIN2vk4raii13CommandBufferEEC1Ev>
   22d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22d30:	48 89 c7             	mov    %rax,%rdi
   22d33:	e8 ee 04 00 00       	call   23226 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
   22d38:	90                   	nop
   22d39:	c9                   	leave
   22d3a:	c3                   	ret
   22d3b:	90                   	nop

0000000000022d3c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   22d3c:	55                   	push   %rbp
   22d3d:	48 89 e5             	mov    %rsp,%rbp
   22d40:	48 83 ec 10          	sub    $0x10,%rsp
   22d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22d4c:	48 89 c7             	mov    %rax,%rdi
   22d4f:	e8 00 05 00 00       	call   23254 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
   22d54:	90                   	nop
   22d55:	c9                   	leave
   22d56:	c3                   	ret
   22d57:	90                   	nop

0000000000022d58 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   22d58:	55                   	push   %rbp
   22d59:	48 89 e5             	mov    %rsp,%rbp
   22d5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   22d60:	90                   	nop
   22d61:	5d                   	pop    %rbp
   22d62:	c3                   	ret
   22d63:	90                   	nop

0000000000022d64 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   22d64:	55                   	push   %rbp
   22d65:	48 89 e5             	mov    %rsp,%rbp
   22d68:	53                   	push   %rbx
   22d69:	48 83 ec 28          	sub    $0x28,%rsp
   22d6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22d71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   22d75:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   22d79:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   22d7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   22d81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   22d85:	48 89 d6             	mov    %rdx,%rsi
   22d88:	48 89 c7             	mov    %rax,%rdi
   22d8b:	e8 cf 04 00 00       	call   2325f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   22d90:	48 89 c1             	mov    %rax,%rcx
   22d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   22d97:	48 89 c2             	mov    %rax,%rdx
   22d9a:	48 89 ce             	mov    %rcx,%rsi
   22d9d:	48 89 df             	mov    %rbx,%rdi
   22da0:	e8 37 05 00 00       	call   232dc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   22da5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   22da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22dad:	48 89 d6             	mov    %rdx,%rsi
   22db0:	48 89 c7             	mov    %rax,%rdi
   22db3:	e8 d0 05 00 00       	call   23388 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
   22db8:	eb 1a                	jmp    22dd4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
   22dba:	48 89 c3             	mov    %rax,%rbx
   22dbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22dc1:	48 89 c7             	mov    %rax,%rdi
   22dc4:	e8 71 05 00 00       	call   2333a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
   22dc9:	48 89 d8             	mov    %rbx,%rax
   22dcc:	48 89 c7             	mov    %rax,%rdi
   22dcf:	e8 cc 25 fe ff       	call   53a0 <_Unwind_Resume@plt>
   22dd4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   22dd8:	c9                   	leave
   22dd9:	c3                   	ret

0000000000022dda <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   22dda:	55                   	push   %rbp
   22ddb:	48 89 e5             	mov    %rsp,%rbp
   22dde:	48 83 ec 10          	sub    $0x10,%rsp
   22de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   22de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22dea:	48 89 c7             	mov    %rax,%rdi
   22ded:	e8 d6 05 00 00       	call   233c8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   22df2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   22df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22df9:	48 8b 48 08          	mov    0x8(%rax),%rcx
   22dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22e01:	48 8b 00             	mov    (%rax),%rax
   22e04:	48 89 ce             	mov    %rcx,%rsi
   22e07:	48 89 c7             	mov    %rax,%rdi
   22e0a:	e8 c7 05 00 00       	call   233d6 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
   22e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22e13:	48 89 c7             	mov    %rax,%rdi
   22e16:	e8 1f 05 00 00       	call   2333a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
   22e1b:	90                   	nop
   22e1c:	c9                   	leave
   22e1d:	c3                   	ret

0000000000022e1e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   22e1e:	55                   	push   %rbp
   22e1f:	48 89 e5             	mov    %rsp,%rbp
   22e22:	48 83 ec 10          	sub    $0x10,%rsp
   22e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   22e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22e2e:	48 8b 10             	mov    (%rax),%rdx
   22e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22e35:	48 89 d6             	mov    %rdx,%rsi
   22e38:	48 89 c7             	mov    %rax,%rdi
   22e3b:	e8 c0 05 00 00       	call   23400 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   22e40:	c9                   	leave
   22e41:	c3                   	ret

0000000000022e42 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   22e42:	55                   	push   %rbp
   22e43:	48 89 e5             	mov    %rsp,%rbp
   22e46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   22e4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22e4e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   22e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22e56:	48 8b 00             	mov    (%rax),%rax
   22e59:	48 29 c2             	sub    %rax,%rdx
   22e5c:	48 89 d0             	mov    %rdx,%rax
   22e5f:	48 c1 f8 05          	sar    $0x5,%rax
   22e63:	5d                   	pop    %rbp
   22e64:	c3                   	ret
   22e65:	90                   	nop

0000000000022e66 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE7reserveEm>:
    vector<_Tp, _Alloc>::
   22e66:	55                   	push   %rbp
   22e67:	48 89 e5             	mov    %rsp,%rbp
   22e6a:	48 83 ec 20          	sub    $0x20,%rsp
   22e6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   22e72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      if (__n > this->max_size())
   22e76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22e7a:	48 89 c7             	mov    %rax,%rdi
   22e7d:	e8 90 05 00 00       	call   23412 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8max_sizeEv>
   22e82:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   22e86:	0f 92 c0             	setb   %al
   22e89:	84 c0                	test   %al,%al
   22e8b:	74 0f                	je     22e9c <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE7reserveEm+0x36>
	__throw_length_error(__N("vector::reserve"));
   22e8d:	48 8d 05 d6 ea 00 00 	lea    0xead6(%rip),%rax        # 3196a <_ZNSt8__detailL19__atomic_spin_countE+0x16e>
   22e94:	48 89 c7             	mov    %rax,%rdi
   22e97:	e8 44 22 fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
      if (this->capacity() < __n)
   22e9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22ea0:	48 89 c7             	mov    %rax,%rdi
   22ea3:	e8 8c 05 00 00       	call   23434 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8capacityEv>
   22ea8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   22eac:	0f 92 c0             	setb   %al
   22eaf:	84 c0                	test   %al,%al
   22eb1:	0f 84 c5 00 00 00    	je     22f7c <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE7reserveEm+0x116>
	  const size_type __old_size = size();
   22eb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22ebb:	48 89 c7             	mov    %rax,%rdi
   22ebe:	e8 7f ff ff ff       	call   22e42 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4sizeEv>
   22ec3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      __tmp = this->_M_allocate(__n);
   22ec7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22ecb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   22ecf:	48 89 d6             	mov    %rdx,%rsi
   22ed2:	48 89 c7             	mov    %rax,%rdi
   22ed5:	e8 7e 05 00 00       	call   23458 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE11_M_allocateEm>
   22eda:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
			  __tmp, _M_get_Tp_allocator());
   22ede:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22ee2:	48 89 c7             	mov    %rax,%rdi
   22ee5:	e8 1c 81 fe ff       	call   b006 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>
   22eea:	48 89 c1             	mov    %rax,%rcx
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   22eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22ef1:	48 8b 70 08          	mov    0x8(%rax),%rsi
   22ef5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22ef9:	48 8b 00             	mov    (%rax),%rax
   22efc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   22f00:	48 89 c7             	mov    %rax,%rdi
   22f03:	e8 83 05 00 00       	call   2348b <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
	  _M_deallocate(this->_M_impl._M_start,
   22f08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
			this->_M_impl._M_end_of_storage
   22f0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22f10:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			- this->_M_impl._M_start);
   22f14:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22f18:	48 8b 12             	mov    (%rdx),%rdx
   22f1b:	48 29 d1             	sub    %rdx,%rcx
   22f1e:	48 c1 f9 05          	sar    $0x5,%rcx
   22f22:	48 89 ca             	mov    %rcx,%rdx
	  _M_deallocate(this->_M_impl._M_start,
   22f25:	48 89 d6             	mov    %rdx,%rsi
   22f28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22f2c:	48 8b 0a             	mov    (%rdx),%rcx
   22f2f:	48 89 f2             	mov    %rsi,%rdx
   22f32:	48 89 ce             	mov    %rcx,%rsi
   22f35:	48 89 c7             	mov    %rax,%rdi
   22f38:	e8 93 80 fe ff       	call   afd0 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE13_M_deallocateEPS2_m>
	  this->_M_impl._M_start = __tmp;
   22f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22f41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   22f45:	48 89 10             	mov    %rdx,(%rax)
	  this->_M_impl._M_finish = __tmp + __old_size;
   22f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22f4c:	48 c1 e0 05          	shl    $0x5,%rax
   22f50:	48 89 c2             	mov    %rax,%rdx
   22f53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   22f57:	48 01 c2             	add    %rax,%rdx
   22f5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22f5e:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   22f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22f66:	48 8b 00             	mov    (%rax),%rax
   22f69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   22f6d:	48 c1 e2 05          	shl    $0x5,%rdx
   22f71:	48 01 c2             	add    %rax,%rdx
   22f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22f78:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   22f7c:	90                   	nop
   22f7d:	c9                   	leave
   22f7e:	c3                   	ret
   22f7f:	90                   	nop

0000000000022f80 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   22f80:	55                   	push   %rbp
   22f81:	48 89 e5             	mov    %rsp,%rbp
   22f84:	48 83 ec 20          	sub    $0x20,%rsp
   22f88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   22f8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   22f90:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   22f94:	48 89 d6             	mov    %rdx,%rsi
   22f97:	48 89 c7             	mov    %rax,%rdi
   22f9a:	e8 1f 05 00 00       	call   234be <_ZN9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   22f9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22fa3:	c9                   	leave
   22fa4:	c3                   	ret
   22fa5:	90                   	nop

0000000000022fa6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   22fa6:	55                   	push   %rbp
   22fa7:	48 89 e5             	mov    %rsp,%rbp
   22faa:	48 83 ec 20          	sub    $0x20,%rsp
   22fae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   22fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   22fb6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   22fba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   22fbe:	48 89 d6             	mov    %rdx,%rsi
   22fc1:	48 89 c7             	mov    %rax,%rdi
   22fc4:	e8 f5 04 00 00       	call   234be <_ZN9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   22fc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22fcd:	c9                   	leave
   22fce:	c3                   	ret
   22fcf:	90                   	nop

0000000000022fd0 <_ZN9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   22fd0:	55                   	push   %rbp
   22fd1:	48 89 e5             	mov    %rsp,%rbp
   22fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   22fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22fdc:	48 8b 00             	mov    (%rax),%rax
   22fdf:	48 8d 50 08          	lea    0x8(%rax),%rdx
   22fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   22fe7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   22fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   22fee:	5d                   	pop    %rbp
   22fef:	c3                   	ret

0000000000022ff0 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12emplace_backIJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEERS2_DpOT_>:
      vector<_Tp, _Alloc>::
   22ff0:	55                   	push   %rbp
   22ff1:	48 89 e5             	mov    %rsp,%rbp
   22ff4:	41 55                	push   %r13
   22ff6:	41 54                	push   %r12
   22ff8:	53                   	push   %rbx
   22ff9:	48 83 ec 28          	sub    $0x28,%rsp
   22ffd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   23001:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   23005:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23009:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   2300d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23011:	48 8b 50 08          	mov    0x8(%rax),%rdx
   23015:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23019:	48 8b 40 10          	mov    0x10(%rax),%rax
   2301d:	48 39 c2             	cmp    %rax,%rdx
   23020:	74 5d                	je     2307f <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12emplace_backIJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEERS2_DpOT_+0x8f>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   23022:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23026:	48 89 c7             	mov    %rax,%rdi
   23029:	e8 c9 04 00 00       	call   234f7 <_ZSt7forwardIP15VkCommandPool_TEOT_RNSt16remove_referenceIS2_E4typeE>
   2302e:	49 89 c4             	mov    %rax,%r12
   23031:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23035:	48 89 c7             	mov    %rax,%rdi
   23038:	e8 ac 04 00 00       	call   234e9 <_ZSt7forwardIRKP17VkCommandBuffer_TEOT_RNSt16remove_referenceIS4_E4typeE>
   2303d:	48 89 c3             	mov    %rax,%rbx
   23040:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23044:	48 89 c7             	mov    %rax,%rdi
   23047:	e8 8f 04 00 00       	call   234db <_ZSt7forwardIRKN2vk4raii6DeviceEEOT_RNSt16remove_referenceIS5_E4typeE>
   2304c:	48 89 c2             	mov    %rax,%rdx
   2304f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23053:	48 8b 70 08          	mov    0x8(%rax),%rsi
   23057:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2305b:	4d 89 e0             	mov    %r12,%r8
   2305e:	48 89 d9             	mov    %rbx,%rcx
   23061:	48 89 c7             	mov    %rax,%rdi
   23064:	e8 9c 04 00 00       	call   23505 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE9constructIS2_JRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   23069:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2306d:	48 8b 40 08          	mov    0x8(%rax),%rax
   23071:	48 8d 50 20          	lea    0x20(%rax),%rdx
   23075:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23079:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2307d:	eb 51                	jmp    230d0 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12emplace_backIJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEERS2_DpOT_+0xe0>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   2307f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23083:	48 89 c7             	mov    %rax,%rdi
   23086:	e8 6c 04 00 00       	call   234f7 <_ZSt7forwardIP15VkCommandPool_TEOT_RNSt16remove_referenceIS2_E4typeE>
   2308b:	49 89 c5             	mov    %rax,%r13
   2308e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23092:	48 89 c7             	mov    %rax,%rdi
   23095:	e8 4f 04 00 00       	call   234e9 <_ZSt7forwardIRKP17VkCommandBuffer_TEOT_RNSt16remove_referenceIS4_E4typeE>
   2309a:	49 89 c4             	mov    %rax,%r12
   2309d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   230a1:	48 89 c7             	mov    %rax,%rdi
   230a4:	e8 32 04 00 00       	call   234db <_ZSt7forwardIRKN2vk4raii6DeviceEEOT_RNSt16remove_referenceIS5_E4typeE>
   230a9:	48 89 c3             	mov    %rax,%rbx
   230ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   230b0:	48 89 c7             	mov    %rax,%rdi
   230b3:	e8 b6 04 00 00       	call   2356e <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE3endEv>
   230b8:	48 89 c6             	mov    %rax,%rsi
   230bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   230bf:	4d 89 e8             	mov    %r13,%r8
   230c2:	4c 89 e1             	mov    %r12,%rcx
   230c5:	48 89 da             	mov    %rbx,%rdx
   230c8:	48 89 c7             	mov    %rax,%rdi
   230cb:	e8 f8 05 00 00       	call   236c8 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE17_M_realloc_insertIJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
	return back();
   230d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   230d4:	48 89 c7             	mov    %rax,%rdi
   230d7:	e8 ac 07 00 00       	call   23888 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4backEv>
      }
   230dc:	48 83 c4 28          	add    $0x28,%rsp
   230e0:	5b                   	pop    %rbx
   230e1:	41 5c                	pop    %r12
   230e3:	41 5d                	pop    %r13
   230e5:	5d                   	pop    %rbp
   230e6:	c3                   	ret

00000000000230e7 <_ZSt7forwardIN2vk6DeviceEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   230e7:	55                   	push   %rbp
   230e8:	48 89 e5             	mov    %rsp,%rbp
   230eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   230ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   230f3:	5d                   	pop    %rbp
   230f4:	c3                   	ret

00000000000230f5 <_ZSt8exchangeIN2vk6DeviceES1_ET_RS2_OT0_>:
    exchange(_Tp& __obj, _Up&& __new_val)
   230f5:	55                   	push   %rbp
   230f6:	48 89 e5             	mov    %rsp,%rbp
   230f9:	48 83 ec 10          	sub    $0x10,%rsp
   230fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23101:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   23105:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23109:	48 89 c7             	mov    %rax,%rdi
   2310c:	e8 d6 ff ff ff       	call   230e7 <_ZSt7forwardIN2vk6DeviceEEOT_RNSt16remove_referenceIS2_E4typeE>
   23111:	48 89 c2             	mov    %rax,%rdx
   23114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23118:	48 89 d6             	mov    %rdx,%rsi
   2311b:	48 89 c7             	mov    %rax,%rdi
   2311e:	e8 a4 07 00 00       	call   238c7 <_ZSt10__exchangeIN2vk6DeviceES1_ET_RS2_OT0_>
   23123:	c9                   	leave
   23124:	c3                   	ret

0000000000023125 <_ZSt4moveIRN2vk6DeviceEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   23125:	55                   	push   %rbp
   23126:	48 89 e5             	mov    %rsp,%rbp
   23129:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   2312d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23131:	5d                   	pop    %rbp
   23132:	c3                   	ret

0000000000023133 <_ZSt8exchangeIPKN2vk4raii16DeviceDispatcherEDnET_RS5_OT0_>:
    exchange(_Tp& __obj, _Up&& __new_val)
   23133:	55                   	push   %rbp
   23134:	48 89 e5             	mov    %rsp,%rbp
   23137:	48 83 ec 10          	sub    $0x10,%rsp
   2313b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2313f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   23143:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23147:	48 89 c7             	mov    %rax,%rdi
   2314a:	e8 24 64 ff ff       	call   19573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>
   2314f:	48 89 c2             	mov    %rax,%rdx
   23152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23156:	48 89 d6             	mov    %rdx,%rsi
   23159:	48 89 c7             	mov    %rax,%rdi
   2315c:	e8 a5 07 00 00       	call   23906 <_ZSt10__exchangeIPKN2vk4raii16DeviceDispatcherEDnET_RS5_OT0_>
   23161:	c9                   	leave
   23162:	c3                   	ret

0000000000023163 <_ZSt4moveIRPKN2vk4raii16DeviceDispatcherEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   23163:	55                   	push   %rbp
   23164:	48 89 e5             	mov    %rsp,%rbp
   23167:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   2316b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2316f:	5d                   	pop    %rbp
   23170:	c3                   	ret

0000000000023171 <_ZSt7forwardIN2vk11CommandPoolEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   23171:	55                   	push   %rbp
   23172:	48 89 e5             	mov    %rsp,%rbp
   23175:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   23179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2317d:	5d                   	pop    %rbp
   2317e:	c3                   	ret

000000000002317f <_ZSt8exchangeIN2vk11CommandPoolES1_ET_RS2_OT0_>:
    exchange(_Tp& __obj, _Up&& __new_val)
   2317f:	55                   	push   %rbp
   23180:	48 89 e5             	mov    %rsp,%rbp
   23183:	48 83 ec 10          	sub    $0x10,%rsp
   23187:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2318b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   2318f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23193:	48 89 c7             	mov    %rax,%rdi
   23196:	e8 d6 ff ff ff       	call   23171 <_ZSt7forwardIN2vk11CommandPoolEEOT_RNSt16remove_referenceIS2_E4typeE>
   2319b:	48 89 c2             	mov    %rax,%rdx
   2319e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   231a2:	48 89 d6             	mov    %rdx,%rsi
   231a5:	48 89 c7             	mov    %rax,%rdi
   231a8:	e8 99 07 00 00       	call   23946 <_ZSt10__exchangeIN2vk11CommandPoolES1_ET_RS2_OT0_>
   231ad:	c9                   	leave
   231ae:	c3                   	ret

00000000000231af <_ZSt4moveIRN2vk11CommandPoolEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   231af:	55                   	push   %rbp
   231b0:	48 89 e5             	mov    %rsp,%rbp
   231b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   231b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   231bb:	5d                   	pop    %rbp
   231bc:	c3                   	ret

00000000000231bd <_ZSt7forwardIN2vk13CommandBufferEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   231bd:	55                   	push   %rbp
   231be:	48 89 e5             	mov    %rsp,%rbp
   231c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   231c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   231c9:	5d                   	pop    %rbp
   231ca:	c3                   	ret

00000000000231cb <_ZSt8exchangeIN2vk13CommandBufferES1_ET_RS2_OT0_>:
    exchange(_Tp& __obj, _Up&& __new_val)
   231cb:	55                   	push   %rbp
   231cc:	48 89 e5             	mov    %rsp,%rbp
   231cf:	48 83 ec 10          	sub    $0x10,%rsp
   231d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   231d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   231db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   231df:	48 89 c7             	mov    %rax,%rdi
   231e2:	e8 d6 ff ff ff       	call   231bd <_ZSt7forwardIN2vk13CommandBufferEEOT_RNSt16remove_referenceIS2_E4typeE>
   231e7:	48 89 c2             	mov    %rax,%rdx
   231ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   231ee:	48 89 d6             	mov    %rdx,%rsi
   231f1:	48 89 c7             	mov    %rax,%rdi
   231f4:	e8 8c 07 00 00       	call   23985 <_ZSt10__exchangeIN2vk13CommandBufferES1_ET_RS2_OT0_>
   231f9:	c9                   	leave
   231fa:	c3                   	ret

00000000000231fb <_ZSt4moveIRN2vk13CommandBufferEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   231fb:	55                   	push   %rbp
   231fc:	48 89 e5             	mov    %rsp,%rbp
   231ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   23203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23207:	5d                   	pop    %rbp
   23208:	c3                   	ret
   23209:	90                   	nop

000000000002320a <_ZNSaIN2vk4raii13CommandBufferEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   2320a:	55                   	push   %rbp
   2320b:	48 89 e5             	mov    %rsp,%rbp
   2320e:	48 83 ec 10          	sub    $0x10,%rsp
   23212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2321a:	48 89 c7             	mov    %rax,%rdi
   2321d:	e8 a2 07 00 00       	call   239c4 <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEEC1Ev>
   23222:	90                   	nop
   23223:	c9                   	leave
   23224:	c3                   	ret
   23225:	90                   	nop

0000000000023226 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   23226:	55                   	push   %rbp
   23227:	48 89 e5             	mov    %rsp,%rbp
   2322a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   2322e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23232:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2323d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   23244:	00 
   23245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23249:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   23250:	00 
	{ }
   23251:	90                   	nop
   23252:	5d                   	pop    %rbp
   23253:	c3                   	ret

0000000000023254 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   23254:	55                   	push   %rbp
   23255:	48 89 e5             	mov    %rsp,%rbp
   23258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2325c:	90                   	nop
   2325d:	5d                   	pop    %rbp
   2325e:	c3                   	ret

000000000002325f <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   2325f:	55                   	push   %rbp
   23260:	48 89 e5             	mov    %rsp,%rbp
   23263:	53                   	push   %rbx
   23264:	48 83 ec 28          	sub    $0x28,%rsp
   23268:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2326c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   23270:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   23274:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23278:	48 89 d6             	mov    %rdx,%rsi
   2327b:	48 89 c7             	mov    %rax,%rdi
   2327e:	e8 a3 07 00 00       	call   23a26 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   23283:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   23287:	48 89 c7             	mov    %rax,%rdi
   2328a:	e8 54 07 00 00       	call   239e3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   2328f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   23293:	0f 92 c3             	setb   %bl
   23296:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   2329a:	48 89 c7             	mov    %rax,%rdi
   2329d:	e8 b6 fa ff ff       	call   22d58 <_ZNSaIP17VkCommandBuffer_TED1Ev>
   232a2:	84 db                	test   %bl,%bl
   232a4:	74 0f                	je     232b5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   232a6:	48 8d 05 1b e7 00 00 	lea    0xe71b(%rip),%rax        # 319c8 <_ZNSt8__detailL19__atomic_spin_countE+0x1cc>
   232ad:	48 89 c7             	mov    %rax,%rdi
   232b0:	e8 2b 1e fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   232b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   232b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   232bd:	c9                   	leave
   232be:	c3                   	ret
   232bf:	90                   	nop

00000000000232c0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   232c0:	55                   	push   %rbp
   232c1:	48 89 e5             	mov    %rsp,%rbp
   232c4:	48 83 ec 10          	sub    $0x10,%rsp
   232c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   232cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   232d0:	48 89 c7             	mov    %rax,%rdi
   232d3:	e8 80 fa ff ff       	call   22d58 <_ZNSaIP17VkCommandBuffer_TED1Ev>
   232d8:	90                   	nop
   232d9:	c9                   	leave
   232da:	c3                   	ret
   232db:	90                   	nop

00000000000232dc <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   232dc:	55                   	push   %rbp
   232dd:	48 89 e5             	mov    %rsp,%rbp
   232e0:	53                   	push   %rbx
   232e1:	48 83 ec 28          	sub    $0x28,%rsp
   232e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   232e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   232ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   232f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   232f5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   232f9:	48 89 d6             	mov    %rdx,%rsi
   232fc:	48 89 c7             	mov    %rax,%rdi
   232ff:	e8 48 07 00 00       	call   23a4c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   23304:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23308:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2330c:	48 89 d6             	mov    %rdx,%rsi
   2330f:	48 89 c7             	mov    %rax,%rdi
   23312:	e8 67 07 00 00       	call   23a7e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
   23317:	eb 1a                	jmp    23333 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
   23319:	48 89 c3             	mov    %rax,%rbx
   2331c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23320:	48 89 c7             	mov    %rax,%rdi
   23323:	e8 98 ff ff ff       	call   232c0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
   23328:	48 89 d8             	mov    %rbx,%rax
   2332b:	48 89 c7             	mov    %rax,%rdi
   2332e:	e8 6d 20 fe ff       	call   53a0 <_Unwind_Resume@plt>
   23333:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   23337:	c9                   	leave
   23338:	c3                   	ret
   23339:	90                   	nop

000000000002333a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   2333a:	55                   	push   %rbp
   2333b:	48 89 e5             	mov    %rsp,%rbp
   2333e:	48 83 ec 10          	sub    $0x10,%rsp
   23342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   23346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2334a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2334e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23352:	48 8b 00             	mov    (%rax),%rax
   23355:	48 29 c2             	sub    %rax,%rdx
   23358:	48 89 d0             	mov    %rdx,%rax
   2335b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   2335f:	48 89 c2             	mov    %rax,%rdx
   23362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23366:	48 8b 08             	mov    (%rax),%rcx
   23369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2336d:	48 89 ce             	mov    %rcx,%rsi
   23370:	48 89 c7             	mov    %rax,%rdi
   23373:	e8 5c 07 00 00       	call   23ad4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   23378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2337c:	48 89 c7             	mov    %rax,%rdi
   2337f:	e8 3c ff ff ff       	call   232c0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
   23384:	90                   	nop
   23385:	c9                   	leave
   23386:	c3                   	ret
   23387:	90                   	nop

0000000000023388 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   23388:	55                   	push   %rbp
   23389:	48 89 e5             	mov    %rsp,%rbp
   2338c:	48 83 ec 10          	sub    $0x10,%rsp
   23390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   23398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2339c:	48 89 c7             	mov    %rax,%rdi
   2339f:	e8 24 00 00 00       	call   233c8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   233a4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   233a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   233ab:	48 8b 00             	mov    (%rax),%rax
   233ae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   233b2:	48 89 ce             	mov    %rcx,%rsi
   233b5:	48 89 c7             	mov    %rax,%rdi
   233b8:	e8 4c 07 00 00       	call   23b09 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   233bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   233c1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   233c5:	90                   	nop
   233c6:	c9                   	leave
   233c7:	c3                   	ret

00000000000233c8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   233c8:	55                   	push   %rbp
   233c9:	48 89 e5             	mov    %rsp,%rbp
   233cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   233d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   233d4:	5d                   	pop    %rbp
   233d5:	c3                   	ret

00000000000233d6 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   233d6:	55                   	push   %rbp
   233d7:	48 89 e5             	mov    %rsp,%rbp
   233da:	48 83 ec 20          	sub    $0x20,%rsp
   233de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   233e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   233e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   233ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   233ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   233f2:	48 89 d6             	mov    %rdx,%rsi
   233f5:	48 89 c7             	mov    %rax,%rdi
   233f8:	e8 35 07 00 00       	call   23b32 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
   233fd:	90                   	nop
   233fe:	c9                   	leave
   233ff:	c3                   	ret

0000000000023400 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   23400:	55                   	push   %rbp
   23401:	48 89 e5             	mov    %rsp,%rbp
   23404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23408:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   2340c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23410:	5d                   	pop    %rbp
   23411:	c3                   	ret

0000000000023412 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   23412:	55                   	push   %rbp
   23413:	48 89 e5             	mov    %rsp,%rbp
   23416:	48 83 ec 10          	sub    $0x10,%rsp
   2341a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   2341e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23422:	48 89 c7             	mov    %rax,%rdi
   23425:	e8 a2 07 00 00       	call   23bcc <_ZNKSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>
   2342a:	48 89 c7             	mov    %rax,%rdi
   2342d:	e8 57 07 00 00       	call   23b89 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE11_S_max_sizeERKS3_>
   23432:	c9                   	leave
   23433:	c3                   	ret

0000000000023434 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
   23434:	55                   	push   %rbp
   23435:	48 89 e5             	mov    %rsp,%rbp
   23438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_end_of_storage
   2343c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23440:	48 8b 50 10          	mov    0x10(%rax),%rdx
			 - this->_M_impl._M_start); }
   23444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23448:	48 8b 00             	mov    (%rax),%rax
   2344b:	48 29 c2             	sub    %rax,%rdx
   2344e:	48 89 d0             	mov    %rdx,%rax
   23451:	48 c1 f8 05          	sar    $0x5,%rax
   23455:	5d                   	pop    %rbp
   23456:	c3                   	ret
   23457:	90                   	nop

0000000000023458 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   23458:	55                   	push   %rbp
   23459:	48 89 e5             	mov    %rsp,%rbp
   2345c:	48 83 ec 10          	sub    $0x10,%rsp
   23460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   23468:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   2346d:	74 15                	je     23484 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE11_M_allocateEm+0x2c>
   2346f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23473:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23477:	48 89 d6             	mov    %rdx,%rsi
   2347a:	48 89 c7             	mov    %rax,%rdi
   2347d:	e8 58 07 00 00       	call   23bda <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8allocateERS3_m>
   23482:	eb 05                	jmp    23489 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE11_M_allocateEm+0x31>
   23484:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   23489:	c9                   	leave
   2348a:	c3                   	ret

000000000002348b <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   2348b:	55                   	push   %rbp
   2348c:	48 89 e5             	mov    %rsp,%rbp
   2348f:	48 83 ec 20          	sub    $0x20,%rsp
   23493:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23497:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2349b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2349f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   234a3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   234a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   234ab:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   234af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234b3:	48 89 c7             	mov    %rax,%rdi
   234b6:	e8 a5 07 00 00       	call   23c60 <_ZSt12__relocate_aIPN2vk4raii13CommandBufferES3_SaIS2_EET0_T_S6_S5_RT1_>
      }
   234bb:	c9                   	leave
   234bc:	c3                   	ret
   234bd:	90                   	nop

00000000000234be <_ZN9__gnu_cxx17__normal_iteratorIPP17VkCommandBuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   234be:	55                   	push   %rbp
   234bf:	48 89 e5             	mov    %rsp,%rbp
   234c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   234c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   234ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   234ce:	48 8b 10             	mov    (%rax),%rdx
   234d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234d5:	48 89 10             	mov    %rdx,(%rax)
   234d8:	90                   	nop
   234d9:	5d                   	pop    %rbp
   234da:	c3                   	ret

00000000000234db <_ZSt7forwardIRKN2vk4raii6DeviceEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   234db:	55                   	push   %rbp
   234dc:	48 89 e5             	mov    %rsp,%rbp
   234df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   234e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234e7:	5d                   	pop    %rbp
   234e8:	c3                   	ret

00000000000234e9 <_ZSt7forwardIRKP17VkCommandBuffer_TEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   234e9:	55                   	push   %rbp
   234ea:	48 89 e5             	mov    %rsp,%rbp
   234ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   234f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   234f5:	5d                   	pop    %rbp
   234f6:	c3                   	ret

00000000000234f7 <_ZSt7forwardIP15VkCommandPool_TEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   234f7:	55                   	push   %rbp
   234f8:	48 89 e5             	mov    %rsp,%rbp
   234fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   234ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23503:	5d                   	pop    %rbp
   23504:	c3                   	ret

0000000000023505 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE9constructIS2_JRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   23505:	55                   	push   %rbp
   23506:	48 89 e5             	mov    %rsp,%rbp
   23509:	41 54                	push   %r12
   2350b:	53                   	push   %rbx
   2350c:	48 83 ec 30          	sub    $0x30,%rsp
   23510:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23514:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23518:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   2351c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   23520:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   23524:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23528:	48 89 c7             	mov    %rax,%rdi
   2352b:	e8 c7 ff ff ff       	call   234f7 <_ZSt7forwardIP15VkCommandPool_TEOT_RNSt16remove_referenceIS2_E4typeE>
   23530:	49 89 c4             	mov    %rax,%r12
   23533:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23537:	48 89 c7             	mov    %rax,%rdi
   2353a:	e8 aa ff ff ff       	call   234e9 <_ZSt7forwardIRKP17VkCommandBuffer_TEOT_RNSt16remove_referenceIS4_E4typeE>
   2353f:	48 89 c3             	mov    %rax,%rbx
   23542:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23546:	48 89 c7             	mov    %rax,%rdi
   23549:	e8 8d ff ff ff       	call   234db <_ZSt7forwardIRKN2vk4raii6DeviceEEOT_RNSt16remove_referenceIS5_E4typeE>
   2354e:	48 89 c6             	mov    %rax,%rsi
   23551:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23555:	4c 89 e1             	mov    %r12,%rcx
   23558:	48 89 da             	mov    %rbx,%rdx
   2355b:	48 89 c7             	mov    %rax,%rdi
   2355e:	e8 60 07 00 00       	call   23cc3 <_ZSt12construct_atIN2vk4raii13CommandBufferEJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSD_DpOSE_>
	}
   23563:	90                   	nop
   23564:	48 83 c4 30          	add    $0x30,%rsp
   23568:	5b                   	pop    %rbx
   23569:	41 5c                	pop    %r12
   2356b:	5d                   	pop    %rbp
   2356c:	c3                   	ret
   2356d:	90                   	nop

000000000002356e <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   2356e:	55                   	push   %rbp
   2356f:	48 89 e5             	mov    %rsp,%rbp
   23572:	48 83 ec 20          	sub    $0x20,%rsp
   23576:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   2357a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2357e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   23582:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   23586:	48 89 d6             	mov    %rdx,%rsi
   23589:	48 89 c7             	mov    %rax,%rdi
   2358c:	e8 ad 07 00 00       	call   23d3e <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEC1ERKS4_>
   23591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23595:	c9                   	leave
   23596:	c3                   	ret
   23597:	90                   	nop

0000000000023598 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   23598:	55                   	push   %rbp
   23599:	48 89 e5             	mov    %rsp,%rbp
   2359c:	53                   	push   %rbx
   2359d:	48 83 ec 38          	sub    $0x38,%rsp
   235a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   235a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   235a9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   235ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   235b1:	48 89 c7             	mov    %rax,%rdi
   235b4:	e8 59 fe ff ff       	call   23412 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8max_sizeEv>
   235b9:	48 89 c3             	mov    %rax,%rbx
   235bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   235c0:	48 89 c7             	mov    %rax,%rdi
   235c3:	e8 7a f8 ff ff       	call   22e42 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4sizeEv>
   235c8:	48 29 c3             	sub    %rax,%rbx
   235cb:	48 89 da             	mov    %rbx,%rdx
   235ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   235d2:	48 39 c2             	cmp    %rax,%rdx
   235d5:	0f 92 c0             	setb   %al
   235d8:	84 c0                	test   %al,%al
   235da:	74 0c                	je     235e8 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   235dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   235e0:	48 89 c7             	mov    %rax,%rdi
   235e3:	e8 f8 1a fe ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   235e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   235ec:	48 89 c7             	mov    %rax,%rdi
   235ef:	e8 4e f8 ff ff       	call   22e42 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4sizeEv>
   235f4:	48 89 c3             	mov    %rax,%rbx
   235f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   235fb:	48 89 c7             	mov    %rax,%rdi
   235fe:	e8 3f f8 ff ff       	call   22e42 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4sizeEv>
   23603:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   23607:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   2360b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   2360f:	48 89 d6             	mov    %rdx,%rsi
   23612:	48 89 c7             	mov    %rax,%rdi
   23615:	e8 da 60 ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   2361a:	48 8b 00             	mov    (%rax),%rax
   2361d:	48 01 d8             	add    %rbx,%rax
   23620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   23624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23628:	48 89 c7             	mov    %rax,%rdi
   2362b:	e8 12 f8 ff ff       	call   22e42 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4sizeEv>
   23630:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   23634:	72 12                	jb     23648 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12_M_check_lenEmPKc+0xb0>
   23636:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2363a:	48 89 c7             	mov    %rax,%rdi
   2363d:	e8 d0 fd ff ff       	call   23412 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8max_sizeEv>
   23642:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   23646:	73 0e                	jae    23656 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12_M_check_lenEmPKc+0xbe>
   23648:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2364c:	48 89 c7             	mov    %rax,%rdi
   2364f:	e8 be fd ff ff       	call   23412 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE8max_sizeEv>
   23654:	eb 04                	jmp    2365a <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12_M_check_lenEmPKc+0xc2>
   23656:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   2365a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2365e:	c9                   	leave
   2365f:	c3                   	ret

0000000000023660 <_ZN9__gnu_cxxmiIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   23660:	55                   	push   %rbp
   23661:	48 89 e5             	mov    %rsp,%rbp
   23664:	53                   	push   %rbx
   23665:	48 83 ec 18          	sub    $0x18,%rsp
   23669:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2366d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
   23671:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23675:	48 89 c7             	mov    %rax,%rdi
   23678:	e8 df 06 00 00       	call   23d5c <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEE4baseEv>
   2367d:	48 8b 18             	mov    (%rax),%rbx
   23680:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23684:	48 89 c7             	mov    %rax,%rdi
   23687:	e8 d0 06 00 00       	call   23d5c <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEE4baseEv>
   2368c:	48 8b 00             	mov    (%rax),%rax
   2368f:	48 89 da             	mov    %rbx,%rdx
   23692:	48 29 c2             	sub    %rax,%rdx
   23695:	48 89 d0             	mov    %rdx,%rax
   23698:	48 c1 f8 05          	sar    $0x5,%rax
   2369c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   236a0:	c9                   	leave
   236a1:	c3                   	ret

00000000000236a2 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   236a2:	55                   	push   %rbp
   236a3:	48 89 e5             	mov    %rsp,%rbp
   236a6:	48 83 ec 20          	sub    $0x20,%rsp
   236aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   236ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   236b2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   236b6:	48 89 d6             	mov    %rdx,%rsi
   236b9:	48 89 c7             	mov    %rax,%rdi
   236bc:	e8 7d 06 00 00       	call   23d3e <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEC1ERKS4_>
   236c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   236c5:	c9                   	leave
   236c6:	c3                   	ret
   236c7:	90                   	nop

00000000000236c8 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE17_M_realloc_insertIJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
      vector<_Tp, _Alloc>::
   236c8:	55                   	push   %rbp
   236c9:	48 89 e5             	mov    %rsp,%rbp
   236cc:	41 54                	push   %r12
   236ce:	53                   	push   %rbx
   236cf:	48 83 ec 70          	sub    $0x70,%rsp
   236d3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   236d7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   236db:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   236df:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   236e3:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   236e7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   236eb:	48 8d 15 07 e3 00 00 	lea    0xe307(%rip),%rdx        # 319f9 <_ZNSt8__detailL19__atomic_spin_countE+0x1fd>
   236f2:	be 01 00 00 00       	mov    $0x1,%esi
   236f7:	48 89 c7             	mov    %rax,%rdi
   236fa:	e8 99 fe ff ff       	call   23598 <_ZNKSt6vectorIN2vk4raii13CommandBufferESaIS2_EE12_M_check_lenEmPKc>
   236ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   23703:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23707:	48 8b 00             	mov    (%rax),%rax
   2370a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   2370e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23712:	48 8b 40 08          	mov    0x8(%rax),%rax
   23716:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   2371a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2371e:	48 89 c7             	mov    %rax,%rdi
   23721:	e8 7c ff ff ff       	call   236a2 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE5beginEv>
   23726:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   2372a:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   2372e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   23732:	48 89 d6             	mov    %rdx,%rsi
   23735:	48 89 c7             	mov    %rax,%rdi
   23738:	e8 23 ff ff ff       	call   23660 <_ZN9__gnu_cxxmiIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_>
   2373d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   23741:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23745:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   23749:	48 89 d6             	mov    %rdx,%rsi
   2374c:	48 89 c7             	mov    %rax,%rdi
   2374f:	e8 04 fd ff ff       	call   23458 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE11_M_allocateEm>
   23754:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   23758:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2375c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   23760:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   23764:	48 89 c7             	mov    %rax,%rdi
   23767:	e8 8b fd ff ff       	call   234f7 <_ZSt7forwardIP15VkCommandPool_TEOT_RNSt16remove_referenceIS2_E4typeE>
   2376c:	49 89 c4             	mov    %rax,%r12
   2376f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   23773:	48 89 c7             	mov    %rax,%rdi
   23776:	e8 6e fd ff ff       	call   234e9 <_ZSt7forwardIRKP17VkCommandBuffer_TEOT_RNSt16remove_referenceIS4_E4typeE>
   2377b:	48 89 c3             	mov    %rax,%rbx
   2377e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   23782:	48 89 c7             	mov    %rax,%rdi
   23785:	e8 51 fd ff ff       	call   234db <_ZSt7forwardIRKN2vk4raii6DeviceEEOT_RNSt16remove_referenceIS5_E4typeE>
   2378a:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   2378d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23791:	48 c1 e0 05          	shl    $0x5,%rax
   23795:	48 89 c1             	mov    %rax,%rcx
	  _Alloc_traits::construct(this->_M_impl,
   23798:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2379c:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   237a0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   237a4:	4d 89 e0             	mov    %r12,%r8
   237a7:	48 89 d9             	mov    %rbx,%rcx
   237aa:	48 89 c7             	mov    %rax,%rdi
   237ad:	e8 53 fd ff ff       	call   23505 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE9constructIS2_JRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEEvRS3_PT_DpOT0_>
	  __new_finish = pointer();
   237b2:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   237b9:	00 
					 __new_start, _M_get_Tp_allocator());
   237ba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   237be:	48 89 c7             	mov    %rax,%rdi
   237c1:	e8 40 78 fe ff       	call   b006 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>
   237c6:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   237c9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   237cd:	48 89 c7             	mov    %rax,%rdi
   237d0:	e8 87 05 00 00       	call   23d5c <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEE4baseEv>
   237d5:	48 8b 30             	mov    (%rax),%rsi
   237d8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   237dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   237e0:	48 89 d9             	mov    %rbx,%rcx
   237e3:	48 89 c7             	mov    %rax,%rdi
   237e6:	e8 a0 fc ff ff       	call   2348b <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
   237eb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   237ef:	48 83 45 c0 20       	addq   $0x20,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   237f4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   237f8:	48 89 c7             	mov    %rax,%rdi
   237fb:	e8 06 78 fe ff       	call   b006 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>
   23800:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   23803:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   23807:	48 89 c7             	mov    %rax,%rdi
   2380a:	e8 4d 05 00 00       	call   23d5c <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEE4baseEv>
   2380f:	48 8b 00             	mov    (%rax),%rax
   23812:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   23816:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   2381a:	48 89 d9             	mov    %rbx,%rcx
   2381d:	48 89 c7             	mov    %rax,%rdi
   23820:	e8 66 fc ff ff       	call   2348b <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_>
   23825:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   23829:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   2382d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   23831:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   23835:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   23839:	48 c1 fa 05          	sar    $0x5,%rdx
      _M_deallocate(__old_start,
   2383d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   23841:	48 89 ce             	mov    %rcx,%rsi
   23844:	48 89 c7             	mov    %rax,%rdi
   23847:	e8 84 77 fe ff       	call   afd0 <_ZNSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE13_M_deallocateEPS2_m>
      this->_M_impl._M_start = __new_start;
   2384c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23850:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   23854:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   23857:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2385b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   2385f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   23863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23867:	48 c1 e0 05          	shl    $0x5,%rax
   2386b:	48 89 c2             	mov    %rax,%rdx
   2386e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23872:	48 01 c2             	add    %rax,%rdx
   23875:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   23879:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   2387d:	90                   	nop
   2387e:	48 83 c4 70          	add    $0x70,%rsp
   23882:	5b                   	pop    %rbx
   23883:	41 5c                	pop    %r12
   23885:	5d                   	pop    %rbp
   23886:	c3                   	ret
   23887:	90                   	nop

0000000000023888 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   23888:	55                   	push   %rbp
   23889:	48 89 e5             	mov    %rsp,%rbp
   2388c:	48 83 ec 20          	sub    $0x20,%rsp
   23890:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   23894:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23898:	48 89 c7             	mov    %rax,%rdi
   2389b:	e8 ce fc ff ff       	call   2356e <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE3endEv>
   238a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   238a4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   238a8:	be 01 00 00 00       	mov    $0x1,%esi
   238ad:	48 89 c7             	mov    %rax,%rdi
   238b0:	e8 d5 04 00 00       	call   23d8a <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEmiEl>
   238b5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   238b9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   238bd:	48 89 c7             	mov    %rax,%rdi
   238c0:	e8 07 05 00 00       	call   23dcc <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEdeEv>
      }
   238c5:	c9                   	leave
   238c6:	c3                   	ret

00000000000238c7 <_ZSt10__exchangeIN2vk6DeviceES1_ET_RS2_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   238c7:	55                   	push   %rbp
   238c8:	48 89 e5             	mov    %rsp,%rbp
   238cb:	48 83 ec 20          	sub    $0x20,%rsp
   238cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   238d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   238d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   238db:	48 89 c7             	mov    %rax,%rdi
   238de:	e8 42 f8 ff ff       	call   23125 <_ZSt4moveIRN2vk6DeviceEEONSt16remove_referenceIT_E4typeEOS4_>
   238e3:	48 8b 00             	mov    (%rax),%rax
   238e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __obj = std::forward<_Up>(__new_val);
   238ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   238ee:	48 89 c7             	mov    %rax,%rdi
   238f1:	e8 f1 f7 ff ff       	call   230e7 <_ZSt7forwardIN2vk6DeviceEEOT_RNSt16remove_referenceIS2_E4typeE>
   238f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   238fa:	48 8b 00             	mov    (%rax),%rax
   238fd:	48 89 02             	mov    %rax,(%rdx)
      return __old_val;
   23900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   23904:	c9                   	leave
   23905:	c3                   	ret

0000000000023906 <_ZSt10__exchangeIPKN2vk4raii16DeviceDispatcherEDnET_RS5_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   23906:	55                   	push   %rbp
   23907:	48 89 e5             	mov    %rsp,%rbp
   2390a:	48 83 ec 20          	sub    $0x20,%rsp
   2390e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23912:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   23916:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2391a:	48 89 c7             	mov    %rax,%rdi
   2391d:	e8 41 f8 ff ff       	call   23163 <_ZSt4moveIRPKN2vk4raii16DeviceDispatcherEEONSt16remove_referenceIT_E4typeEOS7_>
   23922:	48 8b 00             	mov    (%rax),%rax
   23925:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __obj = std::forward<_Up>(__new_val);
   23929:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2392d:	48 89 c7             	mov    %rax,%rdi
   23930:	e8 3e 5c ff ff       	call   19573 <_ZSt7forwardIDnEOT_RNSt16remove_referenceIS0_E4typeE>
   23935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23939:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      return __old_val;
   23940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   23944:	c9                   	leave
   23945:	c3                   	ret

0000000000023946 <_ZSt10__exchangeIN2vk11CommandPoolES1_ET_RS2_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   23946:	55                   	push   %rbp
   23947:	48 89 e5             	mov    %rsp,%rbp
   2394a:	48 83 ec 20          	sub    $0x20,%rsp
   2394e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23952:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   23956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2395a:	48 89 c7             	mov    %rax,%rdi
   2395d:	e8 4d f8 ff ff       	call   231af <_ZSt4moveIRN2vk11CommandPoolEEONSt16remove_referenceIT_E4typeEOS4_>
   23962:	48 8b 00             	mov    (%rax),%rax
   23965:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __obj = std::forward<_Up>(__new_val);
   23969:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2396d:	48 89 c7             	mov    %rax,%rdi
   23970:	e8 fc f7 ff ff       	call   23171 <_ZSt7forwardIN2vk11CommandPoolEEOT_RNSt16remove_referenceIS2_E4typeE>
   23975:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   23979:	48 8b 00             	mov    (%rax),%rax
   2397c:	48 89 02             	mov    %rax,(%rdx)
      return __old_val;
   2397f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   23983:	c9                   	leave
   23984:	c3                   	ret

0000000000023985 <_ZSt10__exchangeIN2vk13CommandBufferES1_ET_RS2_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   23985:	55                   	push   %rbp
   23986:	48 89 e5             	mov    %rsp,%rbp
   23989:	48 83 ec 20          	sub    $0x20,%rsp
   2398d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23991:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   23995:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23999:	48 89 c7             	mov    %rax,%rdi
   2399c:	e8 5a f8 ff ff       	call   231fb <_ZSt4moveIRN2vk13CommandBufferEEONSt16remove_referenceIT_E4typeEOS4_>
   239a1:	48 8b 00             	mov    (%rax),%rax
   239a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __obj = std::forward<_Up>(__new_val);
   239a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   239ac:	48 89 c7             	mov    %rax,%rdi
   239af:	e8 09 f8 ff ff       	call   231bd <_ZSt7forwardIN2vk13CommandBufferEEOT_RNSt16remove_referenceIS2_E4typeE>
   239b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   239b8:	48 8b 00             	mov    (%rax),%rax
   239bb:	48 89 02             	mov    %rax,(%rdx)
      return __old_val;
   239be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   239c2:	c9                   	leave
   239c3:	c3                   	ret

00000000000239c4 <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEEC1Ev>:
   239c4:	55                   	push   %rbp
   239c5:	48 89 e5             	mov    %rsp,%rbp
   239c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   239cc:	90                   	nop
   239cd:	5d                   	pop    %rbp
   239ce:	c3                   	ret

00000000000239cf <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   239cf:	55                   	push   %rbp
   239d0:	48 89 e5             	mov    %rsp,%rbp
   239d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   239d7:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   239de:	ff ff 1f 
      }
   239e1:	5d                   	pop    %rbp
   239e2:	c3                   	ret

00000000000239e3 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   239e3:	55                   	push   %rbp
   239e4:	48 89 e5             	mov    %rsp,%rbp
   239e7:	48 83 ec 20          	sub    $0x20,%rsp
   239eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   239ef:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   239f6:	ff ff 0f 
   239f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   239fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23a01:	48 89 c7             	mov    %rax,%rdi
   23a04:	e8 c6 ff ff ff       	call   239cf <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
   23a09:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   23a0d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   23a11:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   23a15:	48 89 d6             	mov    %rdx,%rsi
   23a18:	48 89 c7             	mov    %rax,%rdi
   23a1b:	e8 5a 45 ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   23a20:	48 8b 00             	mov    (%rax),%rax
      }
   23a23:	c9                   	leave
   23a24:	c3                   	ret
   23a25:	90                   	nop

0000000000023a26 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   23a26:	55                   	push   %rbp
   23a27:	48 89 e5             	mov    %rsp,%rbp
   23a2a:	48 83 ec 10          	sub    $0x10,%rsp
   23a2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23a32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   23a36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23a3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a3e:	48 89 d6             	mov    %rdx,%rsi
   23a41:	48 89 c7             	mov    %rax,%rdi
   23a44:	e8 95 03 00 00       	call   23dde <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
   23a49:	90                   	nop
   23a4a:	c9                   	leave
   23a4b:	c3                   	ret

0000000000023a4c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   23a4c:	55                   	push   %rbp
   23a4d:	48 89 e5             	mov    %rsp,%rbp
   23a50:	48 83 ec 10          	sub    $0x10,%rsp
   23a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   23a5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a64:	48 89 d6             	mov    %rdx,%rsi
   23a67:	48 89 c7             	mov    %rax,%rdi
   23a6a:	e8 b7 ff ff ff       	call   23a26 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
   23a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a73:	48 89 c7             	mov    %rax,%rdi
   23a76:	e8 73 03 00 00       	call   23dee <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   23a7b:	90                   	nop
   23a7c:	c9                   	leave
   23a7d:	c3                   	ret

0000000000023a7e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   23a7e:	55                   	push   %rbp
   23a7f:	48 89 e5             	mov    %rsp,%rbp
   23a82:	48 83 ec 10          	sub    $0x10,%rsp
   23a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23a8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   23a8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23a96:	48 89 d6             	mov    %rdx,%rsi
   23a99:	48 89 c7             	mov    %rax,%rdi
   23a9c:	e8 7b 03 00 00       	call   23e1c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
   23aa1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   23aa5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   23aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23aac:	48 8b 10             	mov    (%rax),%rdx
   23aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23ab3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   23ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23abb:	48 8b 00             	mov    (%rax),%rax
   23abe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23ac2:	48 c1 e2 03          	shl    $0x3,%rdx
   23ac6:	48 01 c2             	add    %rax,%rdx
   23ac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23acd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   23ad1:	90                   	nop
   23ad2:	c9                   	leave
   23ad3:	c3                   	ret

0000000000023ad4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   23ad4:	55                   	push   %rbp
   23ad5:	48 89 e5             	mov    %rsp,%rbp
   23ad8:	48 83 ec 20          	sub    $0x20,%rsp
   23adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23ae0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23ae4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   23ae8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   23aed:	74 17                	je     23b06 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   23aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23af3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   23af7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   23afb:	48 89 ce             	mov    %rcx,%rsi
   23afe:	48 89 c7             	mov    %rax,%rdi
   23b01:	e8 49 03 00 00       	call   23e4f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
   23b06:	90                   	nop
   23b07:	c9                   	leave
   23b08:	c3                   	ret

0000000000023b09 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   23b09:	55                   	push   %rbp
   23b0a:	48 89 e5             	mov    %rsp,%rbp
   23b0d:	48 83 ec 20          	sub    $0x20,%rsp
   23b11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23b15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23b19:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   23b1d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23b21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b25:	48 89 d6             	mov    %rdx,%rsi
   23b28:	48 89 c7             	mov    %rax,%rdi
   23b2b:	e8 7d 03 00 00       	call   23ead <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
   23b30:	c9                   	leave
   23b31:	c3                   	ret

0000000000023b32 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   23b32:	55                   	push   %rbp
   23b33:	48 89 e5             	mov    %rsp,%rbp
   23b36:	48 83 ec 10          	sub    $0x10,%rsp
   23b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23b3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (std::__is_constant_evaluated())
   23b42:	e8 57 26 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   23b47:	84 c0                	test   %al,%al
   23b49:	74 15                	je     23b60 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_+0x2e>
	return _Destroy_aux<false>::__destroy(__first, __last);
   23b4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b53:	48 89 d6             	mov    %rdx,%rsi
   23b56:	48 89 c7             	mov    %rax,%rdi
   23b59:	e8 78 03 00 00       	call   23ed6 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
   23b5e:	eb 13                	jmp    23b73 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_+0x41>
	__destroy(__first, __last);
   23b60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23b68:	48 89 d6             	mov    %rdx,%rsi
   23b6b:	48 89 c7             	mov    %rax,%rdi
   23b6e:	e8 9c 03 00 00       	call   23f0f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
   23b73:	c9                   	leave
   23b74:	c3                   	ret

0000000000023b75 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   23b75:	55                   	push   %rbp
   23b76:	48 89 e5             	mov    %rsp,%rbp
   23b79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return size_t(-1) / sizeof(value_type);
   23b7d:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   23b84:	ff ff 07 
      }
   23b87:	5d                   	pop    %rbp
   23b88:	c3                   	ret

0000000000023b89 <_ZNSt6vectorIN2vk4raii13CommandBufferESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   23b89:	55                   	push   %rbp
   23b8a:	48 89 e5             	mov    %rsp,%rbp
   23b8d:	48 83 ec 20          	sub    $0x20,%rsp
   23b91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   23b95:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
   23b9c:	ff ff 03 
   23b9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   23ba3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ba7:	48 89 c7             	mov    %rax,%rdi
   23baa:	e8 c6 ff ff ff       	call   23b75 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8max_sizeERKS3_>
   23baf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   23bb3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   23bb7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   23bbb:	48 89 d6             	mov    %rdx,%rsi
   23bbe:	48 89 c7             	mov    %rax,%rdi
   23bc1:	e8 b4 43 ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   23bc6:	48 8b 00             	mov    (%rax),%rax
      }
   23bc9:	c9                   	leave
   23bca:	c3                   	ret
   23bcb:	90                   	nop

0000000000023bcc <_ZNKSt12_Vector_baseIN2vk4raii13CommandBufferESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   23bcc:	55                   	push   %rbp
   23bcd:	48 89 e5             	mov    %rsp,%rbp
   23bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   23bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23bd8:	5d                   	pop    %rbp
   23bd9:	c3                   	ret

0000000000023bda <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
   23bda:	55                   	push   %rbp
   23bdb:	48 89 e5             	mov    %rsp,%rbp
   23bde:	48 83 ec 20          	sub    $0x20,%rsp
   23be2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23be6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23bea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23bee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23bf2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23bf6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   23bfa:	e8 9f 25 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   23bff:	84 c0                	test   %al,%al
   23c01:	74 42                	je     23c45 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8allocateERS3_m+0x6b>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   23c03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23c07:	b9 00 00 00 00       	mov    $0x0,%ecx
   23c0c:	48 89 c2             	mov    %rax,%rdx
   23c0f:	48 c1 e2 05          	shl    $0x5,%rdx
   23c13:	48 c1 e8 3b          	shr    $0x3b,%rax
   23c17:	48 85 c0             	test   %rax,%rax
   23c1a:	74 05                	je     23c21 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8allocateERS3_m+0x47>
   23c1c:	b9 01 00 00 00       	mov    $0x1,%ecx
   23c21:	48 89 d0             	mov    %rdx,%rax
   23c24:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23c28:	48 89 c8             	mov    %rcx,%rax
   23c2b:	83 e0 01             	and    $0x1,%eax
   23c2e:	84 c0                	test   %al,%al
   23c30:	74 05                	je     23c37 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8allocateERS3_m+0x5d>
	      std::__throw_bad_array_new_length();
   23c32:	e8 49 15 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   23c37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23c3b:	48 89 c7             	mov    %rax,%rdi
   23c3e:	e8 dd 15 fe ff       	call   5220 <_Znwm@plt>
   23c43:	eb 19                	jmp    23c5e <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE8allocateERS3_m+0x84>
	return __allocator_base<_Tp>::allocate(__n, 0);
   23c45:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   23c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23c4d:	ba 00 00 00 00       	mov    $0x0,%edx
   23c52:	48 89 ce             	mov    %rcx,%rsi
   23c55:	48 89 c7             	mov    %rax,%rdi
   23c58:	e8 4d 04 00 00       	call   240aa <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEE8allocateEmPKv>
   23c5d:	90                   	nop
      { return __a.allocate(__n); }
   23c5e:	c9                   	leave
   23c5f:	c3                   	ret

0000000000023c60 <_ZSt12__relocate_aIPN2vk4raii13CommandBufferES3_SaIS2_EET0_T_S6_S5_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   23c60:	55                   	push   %rbp
   23c61:	48 89 e5             	mov    %rsp,%rbp
   23c64:	41 54                	push   %r12
   23c66:	53                   	push   %rbx
   23c67:	48 83 ec 20          	sub    $0x20,%rsp
   23c6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23c6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23c73:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   23c77:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   23c7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23c7f:	48 89 c7             	mov    %rax,%rdi
   23c82:	e8 97 02 00 00       	call   23f1e <_ZSt12__niter_baseIPN2vk4raii13CommandBufferEET_S4_>
   23c87:	49 89 c4             	mov    %rax,%r12
   23c8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23c8e:	48 89 c7             	mov    %rax,%rdi
   23c91:	e8 88 02 00 00       	call   23f1e <_ZSt12__niter_baseIPN2vk4raii13CommandBufferEET_S4_>
   23c96:	48 89 c3             	mov    %rax,%rbx
   23c99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23c9d:	48 89 c7             	mov    %rax,%rdi
   23ca0:	e8 79 02 00 00       	call   23f1e <_ZSt12__niter_baseIPN2vk4raii13CommandBufferEET_S4_>
   23ca5:	48 89 c7             	mov    %rax,%rdi
   23ca8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23cac:	48 89 c1             	mov    %rax,%rcx
   23caf:	4c 89 e2             	mov    %r12,%rdx
   23cb2:	48 89 de             	mov    %rbx,%rsi
   23cb5:	e8 72 02 00 00       	call   23f2c <_ZSt14__relocate_a_1IPN2vk4raii13CommandBufferES3_SaIS2_EET0_T_S6_S5_RT1_>
    }
   23cba:	48 83 c4 20          	add    $0x20,%rsp
   23cbe:	5b                   	pop    %rbx
   23cbf:	41 5c                	pop    %r12
   23cc1:	5d                   	pop    %rbp
   23cc2:	c3                   	ret

0000000000023cc3 <_ZSt12construct_atIN2vk4raii13CommandBufferEJRKNS1_6DeviceERKP17VkCommandBuffer_TP15VkCommandPool_TEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPSD_DpOSE_>:
    construct_at(_Tp* __location, _Args&&... __args)
   23cc3:	55                   	push   %rbp
   23cc4:	48 89 e5             	mov    %rsp,%rbp
   23cc7:	41 55                	push   %r13
   23cc9:	41 54                	push   %r12
   23ccb:	53                   	push   %rbx
   23ccc:	48 83 ec 28          	sub    $0x28,%rsp
   23cd0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   23cd4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   23cd8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23cdc:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   23ce0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23ce4:	48 89 c6             	mov    %rax,%rsi
   23ce7:	bf 20 00 00 00       	mov    $0x20,%edi
   23cec:	e8 c3 24 fe ff       	call   61b4 <_ZnwmPv>
   23cf1:	48 89 c3             	mov    %rax,%rbx
   23cf4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23cf8:	48 89 c7             	mov    %rax,%rdi
   23cfb:	e8 f7 f7 ff ff       	call   234f7 <_ZSt7forwardIP15VkCommandPool_TEOT_RNSt16remove_referenceIS2_E4typeE>
   23d00:	4c 8b 28             	mov    (%rax),%r13
   23d03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23d07:	48 89 c7             	mov    %rax,%rdi
   23d0a:	e8 da f7 ff ff       	call   234e9 <_ZSt7forwardIRKP17VkCommandBuffer_TEOT_RNSt16remove_referenceIS4_E4typeE>
   23d0f:	4c 8b 20             	mov    (%rax),%r12
   23d12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23d16:	48 89 c7             	mov    %rax,%rdi
   23d19:	e8 bd f7 ff ff       	call   234db <_ZSt7forwardIRKN2vk4raii6DeviceEEOT_RNSt16remove_referenceIS5_E4typeE>
   23d1e:	4c 89 e9             	mov    %r13,%rcx
   23d21:	4c 89 e2             	mov    %r12,%rdx
   23d24:	48 89 c6             	mov    %rax,%rsi
   23d27:	48 89 df             	mov    %rbx,%rdi
   23d2a:	e8 e9 eb ff ff       	call   22918 <_ZN2vk4raii13CommandBufferC1ERKNS0_6DeviceEP17VkCommandBuffer_TP15VkCommandPool_T>
   23d2f:	48 89 d8             	mov    %rbx,%rax
   23d32:	48 83 c4 28          	add    $0x28,%rsp
   23d36:	5b                   	pop    %rbx
   23d37:	41 5c                	pop    %r12
   23d39:	41 5d                	pop    %r13
   23d3b:	5d                   	pop    %rbp
   23d3c:	c3                   	ret
   23d3d:	90                   	nop

0000000000023d3e <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   23d3e:	55                   	push   %rbp
   23d3f:	48 89 e5             	mov    %rsp,%rbp
   23d42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23d46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   23d4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23d4e:	48 8b 10             	mov    (%rax),%rdx
   23d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23d55:	48 89 10             	mov    %rdx,(%rax)
   23d58:	90                   	nop
   23d59:	5d                   	pop    %rbp
   23d5a:	c3                   	ret
   23d5b:	90                   	nop

0000000000023d5c <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   23d5c:	55                   	push   %rbp
   23d5d:	48 89 e5             	mov    %rsp,%rbp
   23d60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   23d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23d68:	5d                   	pop    %rbp
   23d69:	c3                   	ret

0000000000023d6a <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   23d6a:	55                   	push   %rbp
   23d6b:	48 89 e5             	mov    %rsp,%rbp
   23d6e:	48 83 ec 10          	sub    $0x10,%rsp
   23d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23d76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   23d7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23d7e:	48 89 c7             	mov    %rax,%rdi
   23d81:	e8 76 7f fe ff       	call   bcfc <_ZSt10destroy_atIN2vk4raii13CommandBufferEEvPT_>
	}
   23d86:	90                   	nop
   23d87:	c9                   	leave
   23d88:	c3                   	ret
   23d89:	90                   	nop

0000000000023d8a <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   23d8a:	55                   	push   %rbp
   23d8b:	48 89 e5             	mov    %rsp,%rbp
   23d8e:	48 83 ec 20          	sub    $0x20,%rsp
   23d92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23d96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   23d9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23d9e:	48 8b 00             	mov    (%rax),%rax
   23da1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23da5:	48 c1 e2 05          	shl    $0x5,%rdx
   23da9:	48 f7 da             	neg    %rdx
   23dac:	48 01 d0             	add    %rdx,%rax
   23daf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23db3:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   23db7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   23dbb:	48 89 d6             	mov    %rdx,%rsi
   23dbe:	48 89 c7             	mov    %rax,%rdi
   23dc1:	e8 78 ff ff ff       	call   23d3e <_ZN9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEC1ERKS4_>
   23dc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23dca:	c9                   	leave
   23dcb:	c3                   	ret

0000000000023dcc <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk4raii13CommandBufferESt6vectorIS3_SaIS3_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   23dcc:	55                   	push   %rbp
   23dcd:	48 89 e5             	mov    %rsp,%rbp
   23dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   23dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23dd8:	48 8b 00             	mov    (%rax),%rax
   23ddb:	5d                   	pop    %rbp
   23ddc:	c3                   	ret
   23ddd:	90                   	nop

0000000000023dde <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   23dde:	55                   	push   %rbp
   23ddf:	48 89 e5             	mov    %rsp,%rbp
   23de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23de6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23dea:	90                   	nop
   23deb:	5d                   	pop    %rbp
   23dec:	c3                   	ret
   23ded:	90                   	nop

0000000000023dee <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   23dee:	55                   	push   %rbp
   23def:	48 89 e5             	mov    %rsp,%rbp
   23df2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   23df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23dfa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23e05:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   23e0c:	00 
   23e0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23e11:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   23e18:	00 
	{ }
   23e19:	90                   	nop
   23e1a:	5d                   	pop    %rbp
   23e1b:	c3                   	ret

0000000000023e1c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   23e1c:	55                   	push   %rbp
   23e1d:	48 89 e5             	mov    %rsp,%rbp
   23e20:	48 83 ec 10          	sub    $0x10,%rsp
   23e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23e28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   23e2c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   23e31:	74 15                	je     23e48 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   23e33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23e37:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   23e3b:	48 89 d6             	mov    %rdx,%rsi
   23e3e:	48 89 c7             	mov    %rax,%rdi
   23e41:	e8 57 01 00 00       	call   23f9d <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
   23e46:	eb 05                	jmp    23e4d <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
   23e48:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   23e4d:	c9                   	leave
   23e4e:	c3                   	ret

0000000000023e4f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   23e4f:	55                   	push   %rbp
   23e50:	48 89 e5             	mov    %rsp,%rbp
   23e53:	48 83 ec 40          	sub    $0x40,%rsp
   23e57:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   23e5b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   23e5f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23e63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23e67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23e6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   23e6f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23e73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23e77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::__is_constant_evaluated())
   23e7b:	e8 1e 23 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   23e80:	84 c0                	test   %al,%al
   23e82:	74 0e                	je     23e92 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m+0x43>
	    ::operator delete(__p);
   23e84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23e88:	48 89 c7             	mov    %rax,%rdi
   23e8b:	e8 60 13 fe ff       	call   51f0 <_ZdlPv@plt>
	    return;
   23e90:	eb 18                	jmp    23eaa <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m+0x5b>
	__allocator_base<_Tp>::deallocate(__p, __n);
   23e92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   23e96:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   23e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23e9e:	48 89 ce             	mov    %rcx,%rsi
   23ea1:	48 89 c7             	mov    %rax,%rdi
   23ea4:	e8 b9 02 00 00       	call   24162 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
      { __a.deallocate(__p, __n); }
   23ea9:	90                   	nop
   23eaa:	90                   	nop
   23eab:	c9                   	leave
   23eac:	c3                   	ret

0000000000023ead <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   23ead:	55                   	push   %rbp
   23eae:	48 89 e5             	mov    %rsp,%rbp
   23eb1:	48 83 ec 20          	sub    $0x20,%rsp
   23eb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23eb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   23ebd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   23ec1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   23ec5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23ec9:	48 89 d6             	mov    %rdx,%rsi
   23ecc:	48 89 c7             	mov    %rax,%rdi
   23ecf:	e8 50 01 00 00       	call   24024 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
   23ed4:	c9                   	leave
   23ed5:	c3                   	ret

0000000000023ed6 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
   23ed6:	55                   	push   %rbp
   23ed7:	48 89 e5             	mov    %rsp,%rbp
   23eda:	48 83 ec 10          	sub    $0x10,%rsp
   23ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23ee2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
   23ee6:	eb 19                	jmp    23f01 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
   23ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23eec:	48 89 c7             	mov    %rax,%rdi
   23eef:	e8 8d 01 00 00       	call   24081 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
   23ef4:	48 89 c7             	mov    %rax,%rdi
   23ef7:	e8 93 01 00 00       	call   2408f <_ZSt8_DestroyIP17VkCommandBuffer_TEvPT_>
	  for (; __first != __last; ++__first)
   23efc:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   23f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f05:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   23f09:	75 dd                	jne    23ee8 <_ZNSt12_Destroy_auxILb0EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_+0x12>
	}
   23f0b:	90                   	nop
   23f0c:	90                   	nop
   23f0d:	c9                   	leave
   23f0e:	c3                   	ret

0000000000023f0f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   23f0f:	55                   	push   %rbp
   23f10:	48 89 e5             	mov    %rsp,%rbp
   23f13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   23f17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   23f1b:	90                   	nop
   23f1c:	5d                   	pop    %rbp
   23f1d:	c3                   	ret

0000000000023f1e <_ZSt12__niter_baseIPN2vk4raii13CommandBufferEET_S4_>:
    __niter_base(_Iterator __it)
   23f1e:	55                   	push   %rbp
   23f1f:	48 89 e5             	mov    %rsp,%rbp
   23f22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   23f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   23f2a:	5d                   	pop    %rbp
   23f2b:	c3                   	ret

0000000000023f2c <_ZSt14__relocate_a_1IPN2vk4raii13CommandBufferES3_SaIS2_EET0_T_S6_S5_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   23f2c:	55                   	push   %rbp
   23f2d:	48 89 e5             	mov    %rsp,%rbp
   23f30:	53                   	push   %rbx
   23f31:	48 83 ec 38          	sub    $0x38,%rsp
   23f35:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   23f39:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   23f3d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   23f41:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   23f45:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   23f49:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   23f4d:	eb 3a                	jmp    23f89 <_ZSt14__relocate_a_1IPN2vk4raii13CommandBufferES3_SaIS2_EET0_T_S6_S5_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
   23f4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23f53:	48 89 c7             	mov    %rax,%rdi
   23f56:	e8 e3 7f fe ff       	call   bf3e <_ZSt11__addressofIN2vk4raii13CommandBufferEEPT_RS3_>
   23f5b:	48 89 c3             	mov    %rax,%rbx
   23f5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23f62:	48 89 c7             	mov    %rax,%rdi
   23f65:	e8 d4 7f fe ff       	call   bf3e <_ZSt11__addressofIN2vk4raii13CommandBufferEEPT_RS3_>
   23f6a:	48 89 c1             	mov    %rax,%rcx
   23f6d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   23f71:	48 89 c2             	mov    %rax,%rdx
   23f74:	48 89 de             	mov    %rbx,%rsi
   23f77:	48 89 cf             	mov    %rcx,%rdi
   23f7a:	e8 8c 01 00 00       	call   2410b <_ZSt19__relocate_object_aIN2vk4raii13CommandBufferES2_SaIS2_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   23f7f:	48 83 45 d8 20       	addq   $0x20,-0x28(%rbp)
   23f84:	48 83 45 e8 20       	addq   $0x20,-0x18(%rbp)
   23f89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   23f8d:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   23f91:	75 bc                	jne    23f4f <_ZSt14__relocate_a_1IPN2vk4raii13CommandBufferES3_SaIS2_EET0_T_S6_S5_RT1_+0x23>
      return __cur;
   23f93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   23f97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   23f9b:	c9                   	leave
   23f9c:	c3                   	ret

0000000000023f9d <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   23f9d:	55                   	push   %rbp
   23f9e:	48 89 e5             	mov    %rsp,%rbp
   23fa1:	48 83 ec 20          	sub    $0x20,%rsp
   23fa5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   23fa9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   23fad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   23fb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   23fb5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   23fb9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (std::__is_constant_evaluated())
   23fbd:	e8 dc 21 fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   23fc2:	84 c0                	test   %al,%al
   23fc4:	74 43                	je     24009 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m+0x6c>
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
   23fc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23fca:	b9 00 00 00 00       	mov    $0x0,%ecx
   23fcf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   23fd6:	00 
   23fd7:	48 c1 e8 3d          	shr    $0x3d,%rax
   23fdb:	48 85 c0             	test   %rax,%rax
   23fde:	74 05                	je     23fe5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m+0x48>
   23fe0:	b9 01 00 00 00       	mov    $0x1,%ecx
   23fe5:	48 89 d0             	mov    %rdx,%rax
   23fe8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   23fec:	48 89 c8             	mov    %rcx,%rax
   23fef:	83 e0 01             	and    $0x1,%eax
   23ff2:	84 c0                	test   %al,%al
   23ff4:	74 05                	je     23ffb <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m+0x5e>
	      std::__throw_bad_array_new_length();
   23ff6:	e8 85 11 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
   23ffb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   23fff:	48 89 c7             	mov    %rax,%rdi
   24002:	e8 19 12 fe ff       	call   5220 <_Znwm@plt>
   24007:	eb 19                	jmp    24022 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m+0x85>
	return __allocator_base<_Tp>::allocate(__n, 0);
   24009:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2400d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24011:	ba 00 00 00 00       	mov    $0x0,%edx
   24016:	48 89 ce             	mov    %rcx,%rsi
   24019:	48 89 c7             	mov    %rax,%rdi
   2401c:	e8 57 02 00 00       	call   24278 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
   24021:	90                   	nop
      { return __a.allocate(__n); }
   24022:	c9                   	leave
   24023:	c3                   	ret

0000000000024024 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   24024:	55                   	push   %rbp
   24025:	48 89 e5             	mov    %rsp,%rbp
   24028:	48 83 ec 20          	sub    $0x20,%rsp
   2402c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24030:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   24034:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   24039:	74 40                	je     2407b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   2403b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2403f:	48 89 c7             	mov    %rax,%rdi
   24042:	e8 3a 00 00 00       	call   24081 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
   24047:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   2404b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2404f:	48 89 c7             	mov    %rax,%rdi
   24052:	e8 3c 01 00 00       	call   24193 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
   24057:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   2405c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   24060:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   24064:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   24068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2406c:	48 89 ce             	mov    %rcx,%rsi
   2406f:	48 89 c7             	mov    %rax,%rdi
   24072:	e8 59 01 00 00       	call   241d0 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
   24077:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   2407b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   2407f:	c9                   	leave
   24080:	c3                   	ret

0000000000024081 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   24081:	55                   	push   %rbp
   24082:	48 89 e5             	mov    %rsp,%rbp
   24085:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   24089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2408d:	5d                   	pop    %rbp
   2408e:	c3                   	ret

000000000002408f <_ZSt8_DestroyIP17VkCommandBuffer_TEvPT_>:
    _Destroy(_Tp* __pointer)
   2408f:	55                   	push   %rbp
   24090:	48 89 e5             	mov    %rsp,%rbp
   24093:	48 83 ec 10          	sub    $0x10,%rsp
   24097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      std::destroy_at(__pointer);
   2409b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2409f:	48 89 c7             	mov    %rax,%rdi
   240a2:	e8 6d 01 00 00       	call   24214 <_ZSt10destroy_atIP17VkCommandBuffer_TEvPT_>
    }
   240a7:	90                   	nop
   240a8:	c9                   	leave
   240a9:	c3                   	ret

00000000000240aa <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   240aa:	55                   	push   %rbp
   240ab:	48 89 e5             	mov    %rsp,%rbp
   240ae:	48 83 ec 20          	sub    $0x20,%rsp
   240b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   240b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   240ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   240be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   240c2:	48 89 c7             	mov    %rax,%rdi
   240c5:	e8 56 01 00 00       	call   24220 <_ZNKSt15__new_allocatorIN2vk4raii13CommandBufferEE11_M_max_sizeEv>
   240ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   240ce:	0f 92 c0             	setb   %al
   240d1:	0f b6 c0             	movzbl %al,%eax
   240d4:	48 85 c0             	test   %rax,%rax
   240d7:	0f 95 c0             	setne  %al
   240da:	84 c0                	test   %al,%al
   240dc:	74 1a                	je     240f8 <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   240de:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   240e5:	ff ff 07 
   240e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   240ec:	73 05                	jae    240f3 <_ZNSt15__new_allocatorIN2vk4raii13CommandBufferEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   240ee:	e8 8d 10 fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   240f3:	e8 88 0f fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   240f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   240fc:	48 c1 e0 05          	shl    $0x5,%rax
   24100:	48 89 c7             	mov    %rax,%rdi
   24103:	e8 18 11 fe ff       	call   5220 <_Znwm@plt>
   24108:	90                   	nop
      }
   24109:	c9                   	leave
   2410a:	c3                   	ret

000000000002410b <_ZSt19__relocate_object_aIN2vk4raii13CommandBufferES2_SaIS2_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   2410b:	55                   	push   %rbp
   2410c:	48 89 e5             	mov    %rsp,%rbp
   2410f:	48 83 ec 20          	sub    $0x20,%rsp
   24113:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   24117:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2411b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   2411f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   24123:	48 89 c7             	mov    %rax,%rdi
   24126:	e8 09 01 00 00       	call   24234 <_ZSt4moveIRN2vk4raii13CommandBufferEEONSt16remove_referenceIT_E4typeEOS5_>
   2412b:	48 89 c2             	mov    %rax,%rdx
   2412e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   24132:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   24136:	48 89 ce             	mov    %rcx,%rsi
   24139:	48 89 c7             	mov    %rax,%rdi
   2413c:	e8 01 01 00 00       	call   24242 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   24141:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   24145:	48 89 c7             	mov    %rax,%rdi
   24148:	e8 f1 7d fe ff       	call   bf3e <_ZSt11__addressofIN2vk4raii13CommandBufferEEPT_RS3_>
   2414d:	48 89 c2             	mov    %rax,%rdx
   24150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   24154:	48 89 d6             	mov    %rdx,%rsi
   24157:	48 89 c7             	mov    %rax,%rdi
   2415a:	e8 0b fc ff ff       	call   23d6a <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE7destroyIS2_EEvRS3_PT_>
    }
   2415f:	90                   	nop
   24160:	c9                   	leave
   24161:	c3                   	ret

0000000000024162 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   24162:	55                   	push   %rbp
   24163:	48 89 e5             	mov    %rsp,%rbp
   24166:	48 83 ec 20          	sub    $0x20,%rsp
   2416a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2416e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   24172:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   24176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2417a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   24181:	00 
   24182:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   24186:	48 89 d6             	mov    %rdx,%rsi
   24189:	48 89 c7             	mov    %rax,%rdi
   2418c:	e8 9f 10 fe ff       	call   5230 <_ZdlPvm@plt>
      }
   24191:	c9                   	leave
   24192:	c3                   	ret

0000000000024193 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   24193:	55                   	push   %rbp
   24194:	48 89 e5             	mov    %rsp,%rbp
   24197:	48 83 ec 10          	sub    $0x10,%rsp
   2419b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   2419f:	e8 fa 1f fe ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   241a4:	84 c0                	test   %al,%al
   241a6:	74 0e                	je     241b6 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   241a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   241ac:	48 89 c7             	mov    %rax,%rdi
   241af:	e8 25 01 00 00       	call   242d9 <_ZSt12construct_atIP17VkCommandBuffer_TJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   241b4:	eb 18                	jmp    241ce <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_+0x3b>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   241b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   241ba:	48 89 c6             	mov    %rax,%rsi
   241bd:	bf 08 00 00 00       	mov    $0x8,%edi
   241c2:	e8 ed 1f fe ff       	call   61b4 <_ZnwmPv>
   241c7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   241ce:	c9                   	leave
   241cf:	c3                   	ret

00000000000241d0 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   241d0:	55                   	push   %rbp
   241d1:	48 89 e5             	mov    %rsp,%rbp
   241d4:	48 83 ec 20          	sub    $0x20,%rsp
   241d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   241dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   241e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   241e4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   241e8:	48 89 c7             	mov    %rax,%rdi
   241eb:	e8 0f 01 00 00       	call   242ff <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   241f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   241f4:	48 89 c7             	mov    %rax,%rdi
   241f7:	e8 b4 c3 fe ff       	call   105b0 <_ZSt17__size_to_integerm>
   241fc:	48 89 c1             	mov    %rax,%rcx
   241ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24203:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   24207:	48 89 ce             	mov    %rcx,%rsi
   2420a:	48 89 c7             	mov    %rax,%rdi
   2420d:	e8 f8 00 00 00       	call   2430a <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   24212:	c9                   	leave
   24213:	c3                   	ret

0000000000024214 <_ZSt10destroy_atIP17VkCommandBuffer_TEvPT_>:
    destroy_at(_Tp* __location)
   24214:	55                   	push   %rbp
   24215:	48 89 e5             	mov    %rsp,%rbp
   24218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    }
   2421c:	90                   	nop
   2421d:	5d                   	pop    %rbp
   2421e:	c3                   	ret
   2421f:	90                   	nop

0000000000024220 <_ZNKSt15__new_allocatorIN2vk4raii13CommandBufferEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   24220:	55                   	push   %rbp
   24221:	48 89 e5             	mov    %rsp,%rbp
   24224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   24228:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
   2422f:	ff ff 03 
      }
   24232:	5d                   	pop    %rbp
   24233:	c3                   	ret

0000000000024234 <_ZSt4moveIRN2vk4raii13CommandBufferEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   24234:	55                   	push   %rbp
   24235:	48 89 e5             	mov    %rsp,%rbp
   24238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   2423c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24240:	5d                   	pop    %rbp
   24241:	c3                   	ret

0000000000024242 <_ZNSt16allocator_traitsISaIN2vk4raii13CommandBufferEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   24242:	55                   	push   %rbp
   24243:	48 89 e5             	mov    %rsp,%rbp
   24246:	48 83 ec 20          	sub    $0x20,%rsp
   2424a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2424e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   24252:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   24256:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2425a:	48 89 c7             	mov    %rax,%rdi
   2425d:	e8 05 01 00 00       	call   24367 <_ZSt7forwardIN2vk4raii13CommandBufferEEOT_RNSt16remove_referenceIS3_E4typeE>
   24262:	48 89 c2             	mov    %rax,%rdx
   24265:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   24269:	48 89 d6             	mov    %rdx,%rsi
   2426c:	48 89 c7             	mov    %rax,%rdi
   2426f:	e8 01 01 00 00       	call   24375 <_ZSt12construct_atIN2vk4raii13CommandBufferEJS2_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS4_DpOS5_>
	}
   24274:	90                   	nop
   24275:	c9                   	leave
   24276:	c3                   	ret
   24277:	90                   	nop

0000000000024278 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   24278:	55                   	push   %rbp
   24279:	48 89 e5             	mov    %rsp,%rbp
   2427c:	48 83 ec 20          	sub    $0x20,%rsp
   24280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   24284:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   24288:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   2428c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24290:	48 89 c7             	mov    %rax,%rdi
   24293:	e8 22 01 00 00       	call   243ba <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
   24298:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   2429c:	0f 92 c0             	setb   %al
   2429f:	0f b6 c0             	movzbl %al,%eax
   242a2:	48 85 c0             	test   %rax,%rax
   242a5:	0f 95 c0             	setne  %al
   242a8:	84 c0                	test   %al,%al
   242aa:	74 1a                	je     242c6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   242ac:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   242b3:	ff ff 1f 
   242b6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   242ba:	73 05                	jae    242c1 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   242bc:	e8 bf 0e fe ff       	call   5180 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   242c1:	e8 ba 0d fe ff       	call   5080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   242c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   242ca:	48 c1 e0 03          	shl    $0x3,%rax
   242ce:	48 89 c7             	mov    %rax,%rdi
   242d1:	e8 4a 0f fe ff       	call   5220 <_Znwm@plt>
   242d6:	90                   	nop
      }
   242d7:	c9                   	leave
   242d8:	c3                   	ret

00000000000242d9 <_ZSt12construct_atIP17VkCommandBuffer_TJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   242d9:	55                   	push   %rbp
   242da:	48 89 e5             	mov    %rsp,%rbp
   242dd:	48 83 ec 10          	sub    $0x10,%rsp
   242e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   242e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   242e9:	48 89 c6             	mov    %rax,%rsi
   242ec:	bf 08 00 00 00       	mov    $0x8,%edi
   242f1:	e8 be 1e fe ff       	call   61b4 <_ZnwmPv>
   242f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   242fd:	c9                   	leave
   242fe:	c3                   	ret

00000000000242ff <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   242ff:	55                   	push   %rbp
   24300:	48 89 e5             	mov    %rsp,%rbp
   24303:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   24307:	90                   	nop
   24308:	5d                   	pop    %rbp
   24309:	c3                   	ret

000000000002430a <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   2430a:	55                   	push   %rbp
   2430b:	48 89 e5             	mov    %rsp,%rbp
   2430e:	48 83 ec 20          	sub    $0x20,%rsp
   24312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   24316:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2431a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   2431e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   24323:	75 06                	jne    2432b <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   24325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24329:	eb 3a                	jmp    24365 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   2432b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2432f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   24336:	00 
   24337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2433b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   2433f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   24343:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24347:	48 89 ce             	mov    %rcx,%rsi
   2434a:	48 89 c7             	mov    %rax,%rdi
   2434d:	e8 7c 00 00 00       	call   243ce <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   24352:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   24356:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   2435d:	00 
   2435e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24362:	48 01 d0             	add    %rdx,%rax
    }
   24365:	c9                   	leave
   24366:	c3                   	ret

0000000000024367 <_ZSt7forwardIN2vk4raii13CommandBufferEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   24367:	55                   	push   %rbp
   24368:	48 89 e5             	mov    %rsp,%rbp
   2436b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   2436f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   24373:	5d                   	pop    %rbp
   24374:	c3                   	ret

0000000000024375 <_ZSt12construct_atIN2vk4raii13CommandBufferEJS2_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS4_DpOS5_>:
    construct_at(_Tp* __location, _Args&&... __args)
   24375:	55                   	push   %rbp
   24376:	48 89 e5             	mov    %rsp,%rbp
   24379:	53                   	push   %rbx
   2437a:	48 83 ec 18          	sub    $0x18,%rsp
   2437e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24382:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   24386:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2438a:	48 89 c6             	mov    %rax,%rsi
   2438d:	bf 20 00 00 00       	mov    $0x20,%edi
   24392:	e8 1d 1e fe ff       	call   61b4 <_ZnwmPv>
   24397:	48 89 c3             	mov    %rax,%rbx
   2439a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   2439e:	48 89 c7             	mov    %rax,%rdi
   243a1:	e8 c1 ff ff ff       	call   24367 <_ZSt7forwardIN2vk4raii13CommandBufferEEOT_RNSt16remove_referenceIS3_E4typeE>
   243a6:	48 89 c6             	mov    %rax,%rsi
   243a9:	48 89 df             	mov    %rbx,%rdi
   243ac:	e8 db e5 ff ff       	call   2298c <_ZN2vk4raii13CommandBufferC1EOS1_>
   243b1:	48 89 d8             	mov    %rbx,%rax
   243b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   243b8:	c9                   	leave
   243b9:	c3                   	ret

00000000000243ba <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   243ba:	55                   	push   %rbp
   243bb:	48 89 e5             	mov    %rsp,%rbp
   243be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   243c2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   243c9:	ff ff 0f 
      }
   243cc:	5d                   	pop    %rbp
   243cd:	c3                   	ret

00000000000243ce <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   243ce:	55                   	push   %rbp
   243cf:	48 89 e5             	mov    %rsp,%rbp
   243d2:	48 83 ec 20          	sub    $0x20,%rsp
   243d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   243da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   243de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   243e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   243e6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   243ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   243ee:	48 89 ce             	mov    %rcx,%rsi
   243f1:	48 89 c7             	mov    %rax,%rdi
   243f4:	e8 03 00 00 00       	call   243fc <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   243f9:	90                   	nop
   243fa:	c9                   	leave
   243fb:	c3                   	ret

00000000000243fc <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   243fc:	55                   	push   %rbp
   243fd:	48 89 e5             	mov    %rsp,%rbp
   24400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   24404:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   24408:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   2440c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24410:	48 8b 00             	mov    (%rax),%rax
   24413:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   24417:	eb 10                	jmp    24429 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   24419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2441d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   24421:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   24424:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   24429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2442d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   24431:	75 e6                	jne    24419 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   24433:	90                   	nop
   24434:	90                   	nop
   24435:	5d                   	pop    %rbp
   24436:	c3                   	ret

0000000000024437 <_ZN2vkL23getDispatchLoaderStaticEv>:
  {
   24437:	55                   	push   %rbp
   24438:	48 89 e5             	mov    %rsp,%rbp
    return dls;
   2443b:	48 8d 05 de dd 01 00 	lea    0x1ddde(%rip),%rax        # 42220 <_ZZN2vkL23getDispatchLoaderStaticEvE3dls>
  }
   24442:	5d                   	pop    %rbp
   24443:	c3                   	ret

0000000000024444 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
    {
   24444:	55                   	push   %rbp
   24445:	48 89 e5             	mov    %rsp,%rbp
   24448:	41 54                	push   %r12
   2444a:	53                   	push   %rbx
   2444b:	48 83 ec 30          	sub    $0x30,%rsp
   2444f:	89 7d cc             	mov    %edi,-0x34(%rbp)
   24452:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
   24456:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   2445a:	0f 89 28 07 00 00    	jns    24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   24460:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
   24464:	0f 8d 3d 01 00 00    	jge    245a7 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
   2446a:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
   24471:	0f 84 19 05 00 00    	je     24990 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
   24477:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
   2447e:	0f 8f 04 07 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   24484:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
   2448b:	0f 84 37 05 00 00    	je     249c8 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
   24491:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
   24498:	0f 8f ea 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   2449e:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   244a5:	0f 84 55 05 00 00    	je     24a00 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
   244ab:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
   244b2:	0f 8f d0 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   244b8:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
   244bf:	0f 84 73 05 00 00    	je     24a38 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
   244c5:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
   244cc:	0f 8f b6 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   244d2:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
   244d9:	0f 84 91 05 00 00    	je     24a70 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
   244df:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
   244e6:	0f 8f 9c 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   244ec:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
   244f3:	0f 84 af 05 00 00    	je     24aa8 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
   244f9:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
   24500:	0f 8f 82 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   24506:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
   2450d:	0f 84 9d 03 00 00    	je     248b0 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
   24513:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
   2451a:	0f 8f 68 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   24520:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
   24527:	0f 84 bb 03 00 00    	je     248e8 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
   2452d:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
   24534:	0f 8f 4e 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   2453a:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
   24541:	0f 84 99 05 00 00    	je     24ae0 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
   24547:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
   2454e:	0f 8f 34 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   24554:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
   2455b:	0f 84 bf 03 00 00    	je     24920 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
   24561:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
   24568:	0f 8f 1a 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   2456e:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
   24575:	0f 84 9d 05 00 00    	je     24b18 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
   2457b:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
   24582:	0f 8f 00 06 00 00    	jg     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   24588:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
   2458f:	0f 84 bb 05 00 00    	je     24b50 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
   24595:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
   2459c:	0f 84 b6 03 00 00    	je     24958 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
   245a2:	e9 e1 05 00 00       	jmp    24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   245a7:	8b 45 cc             	mov    -0x34(%rbp),%eax
   245aa:	83 c0 0d             	add    $0xd,%eax
   245ad:	83 f8 0c             	cmp    $0xc,%eax
   245b0:	0f 87 d2 05 00 00    	ja     24b88 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
   245b6:	89 c0                	mov    %eax,%eax
   245b8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   245bf:	00 
   245c0:	48 8d 05 71 de 00 00 	lea    0xde71(%rip),%rax        # 32438 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
   245c7:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   245ca:	48 98                	cltq
   245cc:	48 8d 15 65 de 00 00 	lea    0xde65(%rip),%rdx        # 32438 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
   245d3:	48 01 d0             	add    %rdx,%rax
   245d6:	ff e0                	jmp    *%rax
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
   245d8:	bf 28 00 00 00       	mov    $0x28,%edi
   245dd:	e8 ee 0a fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   245e2:	48 89 c3             	mov    %rax,%rbx
   245e5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   245e9:	48 89 c6             	mov    %rax,%rsi
   245ec:	48 89 df             	mov    %rbx,%rdi
   245ef:	e8 d2 33 fe ff       	call   79c6 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
   245f4:	48 8d 05 29 86 fe ff 	lea    -0x179d7(%rip),%rax        # cc24 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
   245fb:	48 89 c2             	mov    %rax,%rdx
   245fe:	48 8d 05 e3 d6 01 00 	lea    0x1d6e3(%rip),%rax        # 41ce8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24605:	48 89 c6             	mov    %rax,%rsi
   24608:	48 89 df             	mov    %rbx,%rdi
   2460b:	e8 70 0d fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
   24610:	bf 28 00 00 00       	mov    $0x28,%edi
   24615:	e8 b6 0a fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   2461a:	48 89 c3             	mov    %rax,%rbx
   2461d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24621:	48 89 c6             	mov    %rax,%rsi
   24624:	48 89 df             	mov    %rbx,%rdi
   24627:	e8 6c 34 fe ff       	call   7a98 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
   2462c:	48 8d 05 81 85 fe ff 	lea    -0x17a7f(%rip),%rax        # cbb4 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
   24633:	48 89 c2             	mov    %rax,%rdx
   24636:	48 8d 05 93 d6 01 00 	lea    0x1d693(%rip),%rax        # 41cd0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2463d:	48 89 c6             	mov    %rax,%rsi
   24640:	48 89 df             	mov    %rbx,%rdi
   24643:	e8 38 0d fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
   24648:	bf 28 00 00 00       	mov    $0x28,%edi
   2464d:	e8 7e 0a fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24652:	48 89 c3             	mov    %rax,%rbx
   24655:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24659:	48 89 c6             	mov    %rax,%rsi
   2465c:	48 89 df             	mov    %rbx,%rdi
   2465f:	e8 06 35 fe ff       	call   7b6a <_ZN2vk25InitializationFailedErrorC1EPKc>
   24664:	48 8d 05 d9 84 fe ff 	lea    -0x17b27(%rip),%rax        # cb44 <_ZN2vk25InitializationFailedErrorD1Ev>
   2466b:	48 89 c2             	mov    %rax,%rdx
   2466e:	48 8d 05 43 d6 01 00 	lea    0x1d643(%rip),%rax        # 41cb8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24675:	48 89 c6             	mov    %rax,%rsi
   24678:	48 89 df             	mov    %rbx,%rdi
   2467b:	e8 00 0d fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
   24680:	bf 28 00 00 00       	mov    $0x28,%edi
   24685:	e8 46 0a fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   2468a:	48 89 c3             	mov    %rax,%rbx
   2468d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24691:	48 89 c6             	mov    %rax,%rsi
   24694:	48 89 df             	mov    %rbx,%rdi
   24697:	e8 a0 35 fe ff       	call   7c3c <_ZN2vk15DeviceLostErrorC1EPKc>
   2469c:	48 8d 05 31 84 fe ff 	lea    -0x17bcf(%rip),%rax        # cad4 <_ZN2vk15DeviceLostErrorD1Ev>
   246a3:	48 89 c2             	mov    %rax,%rdx
   246a6:	48 8d 05 f3 d5 01 00 	lea    0x1d5f3(%rip),%rax        # 41ca0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   246ad:	48 89 c6             	mov    %rax,%rsi
   246b0:	48 89 df             	mov    %rbx,%rdi
   246b3:	e8 c8 0c fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
   246b8:	bf 28 00 00 00       	mov    $0x28,%edi
   246bd:	e8 0e 0a fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   246c2:	48 89 c3             	mov    %rax,%rbx
   246c5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   246c9:	48 89 c6             	mov    %rax,%rsi
   246cc:	48 89 df             	mov    %rbx,%rdi
   246cf:	e8 3a 36 fe ff       	call   7d0e <_ZN2vk20MemoryMapFailedErrorC1EPKc>
   246d4:	48 8d 05 89 83 fe ff 	lea    -0x17c77(%rip),%rax        # ca64 <_ZN2vk20MemoryMapFailedErrorD1Ev>
   246db:	48 89 c2             	mov    %rax,%rdx
   246de:	48 8d 05 a3 d5 01 00 	lea    0x1d5a3(%rip),%rax        # 41c88 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   246e5:	48 89 c6             	mov    %rax,%rsi
   246e8:	48 89 df             	mov    %rbx,%rdi
   246eb:	e8 90 0c fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
   246f0:	bf 28 00 00 00       	mov    $0x28,%edi
   246f5:	e8 d6 09 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   246fa:	48 89 c3             	mov    %rax,%rbx
   246fd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24701:	48 89 c6             	mov    %rax,%rsi
   24704:	48 89 df             	mov    %rbx,%rdi
   24707:	e8 d4 36 fe ff       	call   7de0 <_ZN2vk20LayerNotPresentErrorC1EPKc>
   2470c:	48 8d 05 e1 82 fe ff 	lea    -0x17d1f(%rip),%rax        # c9f4 <_ZN2vk20LayerNotPresentErrorD1Ev>
   24713:	48 89 c2             	mov    %rax,%rdx
   24716:	48 8d 05 53 d5 01 00 	lea    0x1d553(%rip),%rax        # 41c70 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2471d:	48 89 c6             	mov    %rax,%rsi
   24720:	48 89 df             	mov    %rbx,%rdi
   24723:	e8 58 0c fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
   24728:	bf 28 00 00 00       	mov    $0x28,%edi
   2472d:	e8 9e 09 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24732:	48 89 c3             	mov    %rax,%rbx
   24735:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24739:	48 89 c6             	mov    %rax,%rsi
   2473c:	48 89 df             	mov    %rbx,%rdi
   2473f:	e8 6e 37 fe ff       	call   7eb2 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
   24744:	48 8d 05 39 82 fe ff 	lea    -0x17dc7(%rip),%rax        # c984 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
   2474b:	48 89 c2             	mov    %rax,%rdx
   2474e:	48 8d 05 03 d5 01 00 	lea    0x1d503(%rip),%rax        # 41c58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24755:	48 89 c6             	mov    %rax,%rsi
   24758:	48 89 df             	mov    %rbx,%rdi
   2475b:	e8 20 0c fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
   24760:	bf 28 00 00 00       	mov    $0x28,%edi
   24765:	e8 66 09 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   2476a:	48 89 c3             	mov    %rax,%rbx
   2476d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24771:	48 89 c6             	mov    %rax,%rsi
   24774:	48 89 df             	mov    %rbx,%rdi
   24777:	e8 08 38 fe ff       	call   7f84 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
   2477c:	48 8d 05 91 81 fe ff 	lea    -0x17e6f(%rip),%rax        # c914 <_ZN2vk22FeatureNotPresentErrorD1Ev>
   24783:	48 89 c2             	mov    %rax,%rdx
   24786:	48 8d 05 b3 d4 01 00 	lea    0x1d4b3(%rip),%rax        # 41c40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2478d:	48 89 c6             	mov    %rax,%rsi
   24790:	48 89 df             	mov    %rbx,%rdi
   24793:	e8 e8 0b fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
   24798:	bf 28 00 00 00       	mov    $0x28,%edi
   2479d:	e8 2e 09 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   247a2:	48 89 c3             	mov    %rax,%rbx
   247a5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   247a9:	48 89 c6             	mov    %rax,%rsi
   247ac:	48 89 df             	mov    %rbx,%rdi
   247af:	e8 a2 38 fe ff       	call   8056 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
   247b4:	48 8d 05 e9 80 fe ff 	lea    -0x17f17(%rip),%rax        # c8a4 <_ZN2vk23IncompatibleDriverErrorD1Ev>
   247bb:	48 89 c2             	mov    %rax,%rdx
   247be:	48 8d 05 63 d4 01 00 	lea    0x1d463(%rip),%rax        # 41c28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   247c5:	48 89 c6             	mov    %rax,%rsi
   247c8:	48 89 df             	mov    %rbx,%rdi
   247cb:	e8 b0 0b fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
   247d0:	bf 28 00 00 00       	mov    $0x28,%edi
   247d5:	e8 f6 08 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   247da:	48 89 c3             	mov    %rax,%rbx
   247dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   247e1:	48 89 c6             	mov    %rax,%rsi
   247e4:	48 89 df             	mov    %rbx,%rdi
   247e7:	e8 3c 39 fe ff       	call   8128 <_ZN2vk19TooManyObjectsErrorC1EPKc>
   247ec:	48 8d 05 41 80 fe ff 	lea    -0x17fbf(%rip),%rax        # c834 <_ZN2vk19TooManyObjectsErrorD1Ev>
   247f3:	48 89 c2             	mov    %rax,%rdx
   247f6:	48 8d 05 13 d4 01 00 	lea    0x1d413(%rip),%rax        # 41c10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   247fd:	48 89 c6             	mov    %rax,%rsi
   24800:	48 89 df             	mov    %rbx,%rdi
   24803:	e8 78 0b fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
   24808:	bf 28 00 00 00       	mov    $0x28,%edi
   2480d:	e8 be 08 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24812:	48 89 c3             	mov    %rax,%rbx
   24815:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24819:	48 89 c6             	mov    %rax,%rsi
   2481c:	48 89 df             	mov    %rbx,%rdi
   2481f:	e8 d6 39 fe ff       	call   81fa <_ZN2vk23FormatNotSupportedErrorC1EPKc>
   24824:	48 8d 05 99 7f fe ff 	lea    -0x18067(%rip),%rax        # c7c4 <_ZN2vk23FormatNotSupportedErrorD1Ev>
   2482b:	48 89 c2             	mov    %rax,%rdx
   2482e:	48 8d 05 c3 d3 01 00 	lea    0x1d3c3(%rip),%rax        # 41bf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24835:	48 89 c6             	mov    %rax,%rsi
   24838:	48 89 df             	mov    %rbx,%rdi
   2483b:	e8 40 0b fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
   24840:	bf 28 00 00 00       	mov    $0x28,%edi
   24845:	e8 86 08 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   2484a:	48 89 c3             	mov    %rax,%rbx
   2484d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24851:	48 89 c6             	mov    %rax,%rsi
   24854:	48 89 df             	mov    %rbx,%rdi
   24857:	e8 70 3a fe ff       	call   82cc <_ZN2vk19FragmentedPoolErrorC1EPKc>
   2485c:	48 8d 05 f1 7e fe ff 	lea    -0x1810f(%rip),%rax        # c754 <_ZN2vk19FragmentedPoolErrorD1Ev>
   24863:	48 89 c2             	mov    %rax,%rdx
   24866:	48 8d 05 73 d3 01 00 	lea    0x1d373(%rip),%rax        # 41be0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2486d:	48 89 c6             	mov    %rax,%rsi
   24870:	48 89 df             	mov    %rbx,%rdi
   24873:	e8 08 0b fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
   24878:	bf 28 00 00 00       	mov    $0x28,%edi
   2487d:	e8 4e 08 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24882:	48 89 c3             	mov    %rax,%rbx
   24885:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24889:	48 89 c6             	mov    %rax,%rsi
   2488c:	48 89 df             	mov    %rbx,%rdi
   2488f:	e8 0a 3b fe ff       	call   839e <_ZN2vk12UnknownErrorC1EPKc>
   24894:	48 8d 05 49 7e fe ff 	lea    -0x181b7(%rip),%rax        # c6e4 <_ZN2vk12UnknownErrorD1Ev>
   2489b:	48 89 c2             	mov    %rax,%rdx
   2489e:	48 8d 05 23 d3 01 00 	lea    0x1d323(%rip),%rax        # 41bc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   248a5:	48 89 c6             	mov    %rax,%rsi
   248a8:	48 89 df             	mov    %rbx,%rdi
   248ab:	e8 d0 0a fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
   248b0:	bf 28 00 00 00       	mov    $0x28,%edi
   248b5:	e8 16 08 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   248ba:	48 89 c3             	mov    %rax,%rbx
   248bd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   248c1:	48 89 c6             	mov    %rax,%rsi
   248c4:	48 89 df             	mov    %rbx,%rdi
   248c7:	e8 a4 3b fe ff       	call   8470 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
   248cc:	48 8d 05 a1 7d fe ff 	lea    -0x1825f(%rip),%rax        # c674 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
   248d3:	48 89 c2             	mov    %rax,%rdx
   248d6:	48 8d 05 d3 d2 01 00 	lea    0x1d2d3(%rip),%rax        # 41bb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   248dd:	48 89 c6             	mov    %rax,%rsi
   248e0:	48 89 df             	mov    %rbx,%rdi
   248e3:	e8 98 0a fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
   248e8:	bf 28 00 00 00       	mov    $0x28,%edi
   248ed:	e8 de 07 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   248f2:	48 89 c3             	mov    %rax,%rbx
   248f5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   248f9:	48 89 c6             	mov    %rax,%rsi
   248fc:	48 89 df             	mov    %rbx,%rdi
   248ff:	e8 3e 3c fe ff       	call   8542 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
   24904:	48 8d 05 f9 7c fe ff 	lea    -0x18307(%rip),%rax        # c604 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
   2490b:	48 89 c2             	mov    %rax,%rdx
   2490e:	48 8d 05 83 d2 01 00 	lea    0x1d283(%rip),%rax        # 41b98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24915:	48 89 c6             	mov    %rax,%rsi
   24918:	48 89 df             	mov    %rbx,%rdi
   2491b:	e8 60 0a fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
   24920:	bf 28 00 00 00       	mov    $0x28,%edi
   24925:	e8 a6 07 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   2492a:	48 89 c3             	mov    %rax,%rbx
   2492d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24931:	48 89 c6             	mov    %rax,%rsi
   24934:	48 89 df             	mov    %rbx,%rdi
   24937:	e8 d8 3c fe ff       	call   8614 <_ZN2vk18FragmentationErrorC1EPKc>
   2493c:	48 8d 05 51 7c fe ff 	lea    -0x183af(%rip),%rax        # c594 <_ZN2vk18FragmentationErrorD1Ev>
   24943:	48 89 c2             	mov    %rax,%rdx
   24946:	48 8d 05 33 d2 01 00 	lea    0x1d233(%rip),%rax        # 41b80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   2494d:	48 89 c6             	mov    %rax,%rsi
   24950:	48 89 df             	mov    %rbx,%rdi
   24953:	e8 28 0a fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
   24958:	bf 28 00 00 00       	mov    $0x28,%edi
   2495d:	e8 6e 07 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24962:	48 89 c3             	mov    %rax,%rbx
   24965:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24969:	48 89 c6             	mov    %rax,%rsi
   2496c:	48 89 df             	mov    %rbx,%rdi
   2496f:	e8 72 3d fe ff       	call   86e6 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
   24974:	48 8d 05 a9 7b fe ff 	lea    -0x18457(%rip),%rax        # c524 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
   2497b:	48 89 c2             	mov    %rax,%rdx
   2497e:	48 8d 05 e3 d1 01 00 	lea    0x1d1e3(%rip),%rax        # 41b68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24985:	48 89 c6             	mov    %rax,%rsi
   24988:	48 89 df             	mov    %rbx,%rdi
   2498b:	e8 f0 09 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
   24990:	bf 28 00 00 00       	mov    $0x28,%edi
   24995:	e8 36 07 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   2499a:	48 89 c3             	mov    %rax,%rbx
   2499d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   249a1:	48 89 c6             	mov    %rax,%rsi
   249a4:	48 89 df             	mov    %rbx,%rdi
   249a7:	e8 0c 3e fe ff       	call   87b8 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
   249ac:	48 8d 05 01 7b fe ff 	lea    -0x184ff(%rip),%rax        # c4b4 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
   249b3:	48 89 c2             	mov    %rax,%rdx
   249b6:	48 8d 05 93 d1 01 00 	lea    0x1d193(%rip),%rax        # 41b50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   249bd:	48 89 c6             	mov    %rax,%rsi
   249c0:	48 89 df             	mov    %rbx,%rdi
   249c3:	e8 b8 09 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
   249c8:	bf 28 00 00 00       	mov    $0x28,%edi
   249cd:	e8 fe 06 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   249d2:	48 89 c3             	mov    %rax,%rbx
   249d5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   249d9:	48 89 c6             	mov    %rax,%rsi
   249dc:	48 89 df             	mov    %rbx,%rdi
   249df:	e8 a6 3e fe ff       	call   888a <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
   249e4:	48 8d 05 59 7a fe ff 	lea    -0x185a7(%rip),%rax        # c444 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
   249eb:	48 89 c2             	mov    %rax,%rdx
   249ee:	48 8d 05 43 d1 01 00 	lea    0x1d143(%rip),%rax        # 41b38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   249f5:	48 89 c6             	mov    %rax,%rsi
   249f8:	48 89 df             	mov    %rbx,%rdi
   249fb:	e8 80 09 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
   24a00:	bf 28 00 00 00       	mov    $0x28,%edi
   24a05:	e8 c6 06 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24a0a:	48 89 c3             	mov    %rax,%rbx
   24a0d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24a11:	48 89 c6             	mov    %rax,%rsi
   24a14:	48 89 df             	mov    %rbx,%rdi
   24a17:	e8 40 3f fe ff       	call   895c <_ZN2vk17OutOfDateKHRErrorC1EPKc>
   24a1c:	48 8d 05 b1 79 fe ff 	lea    -0x1864f(%rip),%rax        # c3d4 <_ZN2vk17OutOfDateKHRErrorD1Ev>
   24a23:	48 89 c2             	mov    %rax,%rdx
   24a26:	48 8d 05 f3 d0 01 00 	lea    0x1d0f3(%rip),%rax        # 41b20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24a2d:	48 89 c6             	mov    %rax,%rsi
   24a30:	48 89 df             	mov    %rbx,%rdi
   24a33:	e8 48 09 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
   24a38:	bf 28 00 00 00       	mov    $0x28,%edi
   24a3d:	e8 8e 06 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24a42:	48 89 c3             	mov    %rax,%rbx
   24a45:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24a49:	48 89 c6             	mov    %rax,%rsi
   24a4c:	48 89 df             	mov    %rbx,%rdi
   24a4f:	e8 da 3f fe ff       	call   8a2e <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
   24a54:	48 8d 05 09 79 fe ff 	lea    -0x186f7(%rip),%rax        # c364 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
   24a5b:	48 89 c2             	mov    %rax,%rdx
   24a5e:	48 8d 05 a3 d0 01 00 	lea    0x1d0a3(%rip),%rax        # 41b08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24a65:	48 89 c6             	mov    %rax,%rsi
   24a68:	48 89 df             	mov    %rbx,%rdi
   24a6b:	e8 10 09 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
   24a70:	bf 28 00 00 00       	mov    $0x28,%edi
   24a75:	e8 56 06 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24a7a:	48 89 c3             	mov    %rax,%rbx
   24a7d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24a81:	48 89 c6             	mov    %rax,%rsi
   24a84:	48 89 df             	mov    %rbx,%rdi
   24a87:	e8 74 40 fe ff       	call   8b00 <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
   24a8c:	48 8d 05 61 78 fe ff 	lea    -0x1879f(%rip),%rax        # c2f4 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
   24a93:	48 89 c2             	mov    %rax,%rdx
   24a96:	48 8d 05 53 d0 01 00 	lea    0x1d053(%rip),%rax        # 41af0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24a9d:	48 89 c6             	mov    %rax,%rsi
   24aa0:	48 89 df             	mov    %rbx,%rdi
   24aa3:	e8 d8 08 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
   24aa8:	bf 28 00 00 00       	mov    $0x28,%edi
   24aad:	e8 1e 06 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24ab2:	48 89 c3             	mov    %rax,%rbx
   24ab5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24ab9:	48 89 c6             	mov    %rax,%rsi
   24abc:	48 89 df             	mov    %rbx,%rdi
   24abf:	e8 0e 41 fe ff       	call   8bd2 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
   24ac4:	48 8d 05 b9 77 fe ff 	lea    -0x18847(%rip),%rax        # c284 <_ZN2vk20InvalidShaderNVErrorD1Ev>
   24acb:	48 89 c2             	mov    %rax,%rdx
   24ace:	48 8d 05 03 d0 01 00 	lea    0x1d003(%rip),%rax        # 41ad8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24ad5:	48 89 c6             	mov    %rax,%rsi
   24ad8:	48 89 df             	mov    %rbx,%rdi
   24adb:	e8 a0 08 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
   24ae0:	bf 28 00 00 00       	mov    $0x28,%edi
   24ae5:	e8 e6 05 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24aea:	48 89 c3             	mov    %rax,%rbx
   24aed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24af1:	48 89 c6             	mov    %rax,%rsi
   24af4:	48 89 df             	mov    %rbx,%rdi
   24af7:	e8 a8 41 fe ff       	call   8ca4 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
   24afc:	48 8d 05 11 77 fe ff 	lea    -0x188ef(%rip),%rax        # c214 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
   24b03:	48 89 c2             	mov    %rax,%rdx
   24b06:	48 8d 05 b3 cf 01 00 	lea    0x1cfb3(%rip),%rax        # 41ac0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24b0d:	48 89 c6             	mov    %rax,%rsi
   24b10:	48 89 df             	mov    %rbx,%rdi
   24b13:	e8 68 08 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
   24b18:	bf 28 00 00 00       	mov    $0x28,%edi
   24b1d:	e8 ae 05 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24b22:	48 89 c3             	mov    %rax,%rbx
   24b25:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24b29:	48 89 c6             	mov    %rax,%rsi
   24b2c:	48 89 df             	mov    %rbx,%rdi
   24b2f:	e8 42 42 fe ff       	call   8d76 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
   24b34:	48 8d 05 69 76 fe ff 	lea    -0x18997(%rip),%rax        # c1a4 <_ZN2vk20NotPermittedKHRErrorD1Ev>
   24b3b:	48 89 c2             	mov    %rax,%rdx
   24b3e:	48 8d 05 63 cf 01 00 	lea    0x1cf63(%rip),%rax        # 41aa8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24b45:	48 89 c6             	mov    %rax,%rsi
   24b48:	48 89 df             	mov    %rbx,%rdi
   24b4b:	e8 30 08 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
   24b50:	bf 28 00 00 00       	mov    $0x28,%edi
   24b55:	e8 76 05 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24b5a:	48 89 c3             	mov    %rax,%rbx
   24b5d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   24b61:	48 89 c6             	mov    %rax,%rsi
   24b64:	48 89 df             	mov    %rbx,%rdi
   24b67:	e8 dc 42 fe ff       	call   8e48 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
   24b6c:	48 8d 05 c1 75 fe ff 	lea    -0x18a3f(%rip),%rax        # c134 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
   24b73:	48 89 c2             	mov    %rax,%rdx
   24b76:	48 8d 05 13 cf 01 00 	lea    0x1cf13(%rip),%rax        # 41a90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   24b7d:	48 89 c6             	mov    %rax,%rsi
   24b80:	48 89 df             	mov    %rbx,%rdi
   24b83:	e8 f8 07 fe ff       	call   5380 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
   24b88:	bf 28 00 00 00       	mov    $0x28,%edi
   24b8d:	e8 3e 05 fe ff       	call   50d0 <__cxa_allocate_exception@plt>
   24b92:	48 89 c3             	mov    %rax,%rbx
   24b95:	8b 45 cc             	mov    -0x34(%rbp),%eax
   24b98:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
   24b9b:	0f b6 05 b6 d7 01 00 	movzbl 0x1d7b6(%rip),%eax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   24ba2:	84 c0                	test   %al,%al
   24ba4:	0f 94 c0             	sete   %al
   24ba7:	84 c0                	test   %al,%al
   24ba9:	74 4a                	je     24bf5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
   24bab:	48 8d 05 a6 d7 01 00 	lea    0x1d7a6(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   24bb2:	48 89 c7             	mov    %rax,%rdi
   24bb5:	e8 06 08 fe ff       	call   53c0 <__cxa_guard_acquire@plt>
   24bba:	85 c0                	test   %eax,%eax
   24bbc:	0f 95 c0             	setne  %al
   24bbf:	84 c0                	test   %al,%al
   24bc1:	74 32                	je     24bf5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
   24bc3:	48 8d 05 2e d6 01 00 	lea    0x1d62e(%rip),%rax        # 421f8 <__dso_handle>
   24bca:	48 89 c2             	mov    %rax,%rdx
   24bcd:	48 8d 05 2c d6 01 00 	lea    0x1d62c(%rip),%rax        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
   24bd4:	48 89 c6             	mov    %rax,%rsi
   24bd7:	48 8d 05 b6 80 fe ff 	lea    -0x17f4a(%rip),%rax        # cc94 <_ZN2vk17ErrorCategoryImplD1Ev>
   24bde:	48 89 c7             	mov    %rax,%rdi
   24be1:	e8 ea 05 fe ff       	call   51d0 <__cxa_atexit@plt>
   24be6:	48 8d 05 6b d7 01 00 	lea    0x1d76b(%rip),%rax        # 42358 <_ZGVZN2vk13errorCategoryEvE8instance>
   24bed:	48 89 c7             	mov    %rax,%rdi
   24bf0:	e8 0b 05 fe ff       	call   5100 <__cxa_guard_release@plt>
    return instance;
   24bf5:	48 8d 15 04 d6 01 00 	lea    0x1d604(%rip),%rdx        # 42200 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
   24bfc:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   24bff:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   24c03:	89 ce                	mov    %ecx,%esi
   24c05:	48 89 c7             	mov    %rax,%rdi
   24c08:	e8 fb 16 fe ff       	call   6308 <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
   24c0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   24c11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
   24c15:	48 89 c6             	mov    %rax,%rsi
   24c18:	48 89 d7             	mov    %rdx,%rdi
   24c1b:	89 f1                	mov    %esi,%ecx
   24c1d:	48 89 d0             	mov    %rdx,%rax
   24c20:	89 ce                	mov    %ecx,%esi
   24c22:	48 89 c2             	mov    %rax,%rdx
   24c25:	48 89 df             	mov    %rbx,%rdi
   24c28:	e8 e3 2b fe ff       	call   7810 <_ZN2vk11SystemErrorC1ESt10error_code>
   24c2d:	48 8d 05 12 2d fe ff 	lea    -0x1d2ee(%rip),%rax        # 7946 <_ZN2vk11SystemErrorD1Ev>
   24c34:	48 89 c2             	mov    %rax,%rdx
   24c37:	48 8d 05 c2 d0 01 00 	lea    0x1d0c2(%rip),%rax        # 41d00 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
   24c3e:	48 89 c6             	mov    %rax,%rsi
   24c41:	48 89 df             	mov    %rbx,%rdi
   24c44:	e8 37 07 fe ff       	call   5380 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
   24c49:	49 89 c4             	mov    %rax,%r12
   24c4c:	48 89 df             	mov    %rbx,%rdi
   24c4f:	e8 fc 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24c54:	4c 89 e0             	mov    %r12,%rax
   24c57:	48 89 c7             	mov    %rax,%rdi
   24c5a:	e8 41 07 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
   24c5f:	49 89 c4             	mov    %rax,%r12
   24c62:	48 89 df             	mov    %rbx,%rdi
   24c65:	e8 e6 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24c6a:	4c 89 e0             	mov    %r12,%rax
   24c6d:	48 89 c7             	mov    %rax,%rdi
   24c70:	e8 2b 07 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
   24c75:	49 89 c4             	mov    %rax,%r12
   24c78:	48 89 df             	mov    %rbx,%rdi
   24c7b:	e8 d0 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24c80:	4c 89 e0             	mov    %r12,%rax
   24c83:	48 89 c7             	mov    %rax,%rdi
   24c86:	e8 15 07 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
   24c8b:	49 89 c4             	mov    %rax,%r12
   24c8e:	48 89 df             	mov    %rbx,%rdi
   24c91:	e8 ba 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24c96:	4c 89 e0             	mov    %r12,%rax
   24c99:	48 89 c7             	mov    %rax,%rdi
   24c9c:	e8 ff 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
   24ca1:	49 89 c4             	mov    %rax,%r12
   24ca4:	48 89 df             	mov    %rbx,%rdi
   24ca7:	e8 a4 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24cac:	4c 89 e0             	mov    %r12,%rax
   24caf:	48 89 c7             	mov    %rax,%rdi
   24cb2:	e8 e9 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
   24cb7:	49 89 c4             	mov    %rax,%r12
   24cba:	48 89 df             	mov    %rbx,%rdi
   24cbd:	e8 8e 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24cc2:	4c 89 e0             	mov    %r12,%rax
   24cc5:	48 89 c7             	mov    %rax,%rdi
   24cc8:	e8 d3 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
   24ccd:	49 89 c4             	mov    %rax,%r12
   24cd0:	48 89 df             	mov    %rbx,%rdi
   24cd3:	e8 78 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24cd8:	4c 89 e0             	mov    %r12,%rax
   24cdb:	48 89 c7             	mov    %rax,%rdi
   24cde:	e8 bd 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
   24ce3:	49 89 c4             	mov    %rax,%r12
   24ce6:	48 89 df             	mov    %rbx,%rdi
   24ce9:	e8 62 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24cee:	4c 89 e0             	mov    %r12,%rax
   24cf1:	48 89 c7             	mov    %rax,%rdi
   24cf4:	e8 a7 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
   24cf9:	49 89 c4             	mov    %rax,%r12
   24cfc:	48 89 df             	mov    %rbx,%rdi
   24cff:	e8 4c 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d04:	4c 89 e0             	mov    %r12,%rax
   24d07:	48 89 c7             	mov    %rax,%rdi
   24d0a:	e8 91 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
   24d0f:	49 89 c4             	mov    %rax,%r12
   24d12:	48 89 df             	mov    %rbx,%rdi
   24d15:	e8 36 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d1a:	4c 89 e0             	mov    %r12,%rax
   24d1d:	48 89 c7             	mov    %rax,%rdi
   24d20:	e8 7b 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
   24d25:	49 89 c4             	mov    %rax,%r12
   24d28:	48 89 df             	mov    %rbx,%rdi
   24d2b:	e8 20 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d30:	4c 89 e0             	mov    %r12,%rax
   24d33:	48 89 c7             	mov    %rax,%rdi
   24d36:	e8 65 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
   24d3b:	49 89 c4             	mov    %rax,%r12
   24d3e:	48 89 df             	mov    %rbx,%rdi
   24d41:	e8 0a 04 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d46:	4c 89 e0             	mov    %r12,%rax
   24d49:	48 89 c7             	mov    %rax,%rdi
   24d4c:	e8 4f 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
   24d51:	49 89 c4             	mov    %rax,%r12
   24d54:	48 89 df             	mov    %rbx,%rdi
   24d57:	e8 f4 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d5c:	4c 89 e0             	mov    %r12,%rax
   24d5f:	48 89 c7             	mov    %rax,%rdi
   24d62:	e8 39 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
   24d67:	49 89 c4             	mov    %rax,%r12
   24d6a:	48 89 df             	mov    %rbx,%rdi
   24d6d:	e8 de 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d72:	4c 89 e0             	mov    %r12,%rax
   24d75:	48 89 c7             	mov    %rax,%rdi
   24d78:	e8 23 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
   24d7d:	49 89 c4             	mov    %rax,%r12
   24d80:	48 89 df             	mov    %rbx,%rdi
   24d83:	e8 c8 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d88:	4c 89 e0             	mov    %r12,%rax
   24d8b:	48 89 c7             	mov    %rax,%rdi
   24d8e:	e8 0d 06 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
   24d93:	49 89 c4             	mov    %rax,%r12
   24d96:	48 89 df             	mov    %rbx,%rdi
   24d99:	e8 b2 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24d9e:	4c 89 e0             	mov    %r12,%rax
   24da1:	48 89 c7             	mov    %rax,%rdi
   24da4:	e8 f7 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
   24da9:	49 89 c4             	mov    %rax,%r12
   24dac:	48 89 df             	mov    %rbx,%rdi
   24daf:	e8 9c 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24db4:	4c 89 e0             	mov    %r12,%rax
   24db7:	48 89 c7             	mov    %rax,%rdi
   24dba:	e8 e1 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
   24dbf:	49 89 c4             	mov    %rax,%r12
   24dc2:	48 89 df             	mov    %rbx,%rdi
   24dc5:	e8 86 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24dca:	4c 89 e0             	mov    %r12,%rax
   24dcd:	48 89 c7             	mov    %rax,%rdi
   24dd0:	e8 cb 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
   24dd5:	49 89 c4             	mov    %rax,%r12
   24dd8:	48 89 df             	mov    %rbx,%rdi
   24ddb:	e8 70 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24de0:	4c 89 e0             	mov    %r12,%rax
   24de3:	48 89 c7             	mov    %rax,%rdi
   24de6:	e8 b5 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
   24deb:	49 89 c4             	mov    %rax,%r12
   24dee:	48 89 df             	mov    %rbx,%rdi
   24df1:	e8 5a 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24df6:	4c 89 e0             	mov    %r12,%rax
   24df9:	48 89 c7             	mov    %rax,%rdi
   24dfc:	e8 9f 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
   24e01:	49 89 c4             	mov    %rax,%r12
   24e04:	48 89 df             	mov    %rbx,%rdi
   24e07:	e8 44 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e0c:	4c 89 e0             	mov    %r12,%rax
   24e0f:	48 89 c7             	mov    %rax,%rdi
   24e12:	e8 89 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
   24e17:	49 89 c4             	mov    %rax,%r12
   24e1a:	48 89 df             	mov    %rbx,%rdi
   24e1d:	e8 2e 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e22:	4c 89 e0             	mov    %r12,%rax
   24e25:	48 89 c7             	mov    %rax,%rdi
   24e28:	e8 73 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
   24e2d:	49 89 c4             	mov    %rax,%r12
   24e30:	48 89 df             	mov    %rbx,%rdi
   24e33:	e8 18 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e38:	4c 89 e0             	mov    %r12,%rax
   24e3b:	48 89 c7             	mov    %rax,%rdi
   24e3e:	e8 5d 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
   24e43:	49 89 c4             	mov    %rax,%r12
   24e46:	48 89 df             	mov    %rbx,%rdi
   24e49:	e8 02 03 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e4e:	4c 89 e0             	mov    %r12,%rax
   24e51:	48 89 c7             	mov    %rax,%rdi
   24e54:	e8 47 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
   24e59:	49 89 c4             	mov    %rax,%r12
   24e5c:	48 89 df             	mov    %rbx,%rdi
   24e5f:	e8 ec 02 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e64:	4c 89 e0             	mov    %r12,%rax
   24e67:	48 89 c7             	mov    %rax,%rdi
   24e6a:	e8 31 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
   24e6f:	49 89 c4             	mov    %rax,%r12
   24e72:	48 89 df             	mov    %rbx,%rdi
   24e75:	e8 d6 02 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e7a:	4c 89 e0             	mov    %r12,%rax
   24e7d:	48 89 c7             	mov    %rax,%rdi
   24e80:	e8 1b 05 fe ff       	call   53a0 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
   24e85:	49 89 c4             	mov    %rax,%r12
   24e88:	48 89 df             	mov    %rbx,%rdi
   24e8b:	e8 c0 02 fe ff       	call   5150 <__cxa_free_exception@plt>
   24e90:	4c 89 e0             	mov    %r12,%rax
   24e93:	48 89 c7             	mov    %rax,%rdi
   24e96:	e8 05 05 fe ff       	call   53a0 <_Unwind_Resume@plt>

0000000000024e9b <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
   24e9b:	55                   	push   %rbp
   24e9c:	48 89 e5             	mov    %rsp,%rbp
   24e9f:	48 83 ec 20          	sub    $0x20,%rsp
   24ea3:	89 7d fc             	mov    %edi,-0x4(%rbp)
   24ea6:	89 75 f8             	mov    %esi,-0x8(%rbp)
   24ea9:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   24ead:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
   24eb1:	8b 45 fc             	mov    -0x4(%rbp),%eax
   24eb4:	83 f8 01             	cmp    $0x1,%eax
   24eb7:	7e 3c                	jle    24ef5 <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
   24eb9:	be 0a 00 00 00       	mov    $0xa,%esi
   24ebe:	48 8d 05 7b d3 01 00 	lea    0x1d37b(%rip),%rax        # 42240 <_ZSt4cerr@GLIBCXX_3.4>
   24ec5:	48 89 c7             	mov    %rax,%rdi
   24ec8:	e8 d3 03 fe ff       	call   52a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   24ecd:	48 89 c2             	mov    %rax,%rdx
   24ed0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   24ed4:	48 8b 40 28          	mov    0x28(%rax),%rax
   24ed8:	48 89 c6             	mov    %rax,%rsi
   24edb:	48 89 d7             	mov    %rdx,%rdi
   24ede:	e8 2d 03 fe ff       	call   5210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   24ee3:	48 8b 15 b6 d0 01 00 	mov    0x1d0b6(%rip),%rdx        # 41fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
   24eea:	48 89 d6             	mov    %rdx,%rsi
   24eed:	48 89 c7             	mov    %rax,%rdi
   24ef0:	e8 6b 03 fe ff       	call   5260 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
   24ef5:	b8 00 00 00 00       	mov    $0x0,%eax
}
   24efa:	c9                   	leave
   24efb:	c3                   	ret

0000000000024efc <_ZN4rtvc24validationLayerSupportedEv>:

bool validationLayerSupported() {
   24efc:	55                   	push   %rbp
   24efd:	48 89 e5             	mov    %rsp,%rbp
   24f00:	41 54                	push   %r12
   24f02:	53                   	push   %rbx
   24f03:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  auto supportedLayers = vk::enumerateInstanceLayerProperties();
   24f07:	e8 2b f5 ff ff       	call   24437 <_ZN2vkL23getDispatchLoaderStaticEv>
   24f0c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   24f10:	48 8d 5d b0          	lea    -0x50(%rbp),%rbx
#ifndef VULKAN_HPP_DISABLE_ENHANCED_MODE
  template <typename LayerPropertiesAllocator, typename Dispatch>
  VULKAN_HPP_NODISCARD VULKAN_HPP_INLINE typename ResultValueType<std::vector<VULKAN_HPP_NAMESPACE::LayerProperties, LayerPropertiesAllocator>>::type
                       enumerateInstanceLayerProperties( Dispatch const & d )
  {
    VULKAN_HPP_ASSERT( d.getVkHeaderVersion() == VK_HEADER_VERSION );
   24f14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24f18:	48 89 c7             	mov    %rax,%rdi
   24f1b:	e8 32 16 fe ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
   24f20:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
   24f26:	74 28                	je     24f50 <_ZN4rtvc24validationLayerSupportedEv+0x54>
   24f28:	48 8d 05 79 e2 00 00 	lea    0xe279(%rip),%rax        # 331a8 <_ZNSt8__detailL19__atomic_spin_countE+0xd2c>
   24f2f:	48 89 c1             	mov    %rax,%rcx
   24f32:	ba 68 02 00 00       	mov    $0x268,%edx
   24f37:	48 8d 05 e2 e3 00 00 	lea    0xe3e2(%rip),%rax        # 33320 <_ZNSt8__detailL19__atomic_spin_countE+0xea4>
   24f3e:	48 89 c6             	mov    %rax,%rsi
   24f41:	48 8d 05 00 e4 00 00 	lea    0xe400(%rip),%rax        # 33348 <_ZNSt8__detailL19__atomic_spin_countE+0xecc>
   24f48:	48 89 c7             	mov    %rax,%rdi
   24f4b:	e8 c0 01 fe ff       	call   5110 <__assert_fail@plt>

    std::vector<VULKAN_HPP_NAMESPACE::LayerProperties, LayerPropertiesAllocator> properties;
   24f50:	66 0f ef c0          	pxor   %xmm0,%xmm0
   24f54:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
   24f58:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
    uint32_t                                                                     propertyCount;
    VkResult                                                                     result;
    do
    {
      result = d.vkEnumerateInstanceLayerProperties( &propertyCount, nullptr );
   24f5d:	48 8d 4d 8c          	lea    -0x74(%rbp),%rcx
   24f61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24f65:	ba 00 00 00 00       	mov    $0x0,%edx
   24f6a:	48 89 ce             	mov    %rcx,%rsi
   24f6d:	48 89 c7             	mov    %rax,%rdi
   24f70:	e8 5d 07 00 00       	call   256d2 <_ZNK2vk20DispatchLoaderStatic34vkEnumerateInstanceLayerPropertiesEPjP17VkLayerProperties>
   24f75:	89 45 d4             	mov    %eax,-0x2c(%rbp)
      if ( ( result == VK_SUCCESS ) && propertyCount )
   24f78:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   24f7c:	75 40                	jne    24fbe <_ZN4rtvc24validationLayerSupportedEv+0xc2>
   24f7e:	8b 45 8c             	mov    -0x74(%rbp),%eax
   24f81:	85 c0                	test   %eax,%eax
   24f83:	74 39                	je     24fbe <_ZN4rtvc24validationLayerSupportedEv+0xc2>
      {
        properties.resize( propertyCount );
   24f85:	8b 45 8c             	mov    -0x74(%rbp),%eax
   24f88:	89 c2                	mov    %eax,%edx
   24f8a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24f8e:	48 89 d6             	mov    %rdx,%rsi
   24f91:	48 89 c7             	mov    %rax,%rdi
   24f94:	e8 e1 3e ff ff       	call   18e7a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm>
        result = d.vkEnumerateInstanceLayerProperties( &propertyCount, reinterpret_cast<VkLayerProperties *>( properties.data() ) );
   24f99:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24f9d:	48 89 c7             	mov    %rax,%rdi
   24fa0:	e8 67 3f ff ff       	call   18f0c <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE4dataEv>
   24fa5:	48 89 c2             	mov    %rax,%rdx
   24fa8:	48 8d 4d 8c          	lea    -0x74(%rbp),%rcx
   24fac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   24fb0:	48 89 ce             	mov    %rcx,%rsi
   24fb3:	48 89 c7             	mov    %rax,%rdi
   24fb6:	e8 17 07 00 00       	call   256d2 <_ZNK2vk20DispatchLoaderStatic34vkEnumerateInstanceLayerPropertiesEPjP17VkLayerProperties>
   24fbb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
      }
    } while ( result == VK_INCOMPLETE );
   24fbe:	83 7d d4 05          	cmpl   $0x5,-0x2c(%rbp)
   24fc2:	74 99                	je     24f5d <_ZN4rtvc24validationLayerSupportedEv+0x61>
   24fc4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   24fc7:	89 45 d0             	mov    %eax,-0x30(%rbp)
   24fca:	48 8d 05 a7 e3 00 00 	lea    0xe3a7(%rip),%rax        # 33378 <_ZNSt8__detailL19__atomic_spin_countE+0xefc>
   24fd1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    if ( result != Result::eSuccess )
   24fd5:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
   24fd9:	74 11                	je     24fec <_ZN4rtvc24validationLayerSupportedEv+0xf0>
      throwResultException( result, message );
   24fdb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   24fdf:	8b 45 d0             	mov    -0x30(%rbp),%eax
   24fe2:	48 89 d6             	mov    %rdx,%rsi
   24fe5:	89 c7                	mov    %eax,%edi
   24fe7:	e8 58 f4 ff ff       	call   24444 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
  }
   24fec:	90                   	nop
    resultCheck( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), VULKAN_HPP_NAMESPACE_STRING "::enumerateInstanceLayerProperties" );
    VULKAN_HPP_ASSERT( propertyCount <= properties.size() );
   24fed:	8b 45 8c             	mov    -0x74(%rbp),%eax
   24ff0:	41 89 c4             	mov    %eax,%r12d
   24ff3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   24ff7:	48 89 c7             	mov    %rax,%rdi
   24ffa:	e8 31 3f ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   24fff:	4c 39 e0             	cmp    %r12,%rax
   25002:	73 28                	jae    2502c <_ZN4rtvc24validationLayerSupportedEv+0x130>
   25004:	48 8d 05 9d e1 00 00 	lea    0xe19d(%rip),%rax        # 331a8 <_ZNSt8__detailL19__atomic_spin_countE+0xd2c>
   2500b:	48 89 c1             	mov    %rax,%rcx
   2500e:	ba 77 02 00 00       	mov    $0x277,%edx
   25013:	48 8d 05 06 e3 00 00 	lea    0xe306(%rip),%rax        # 33320 <_ZNSt8__detailL19__atomic_spin_countE+0xea4>
   2501a:	48 89 c6             	mov    %rax,%rsi
   2501d:	48 8d 05 7c e3 00 00 	lea    0xe37c(%rip),%rax        # 333a0 <_ZNSt8__detailL19__atomic_spin_countE+0xf24>
   25024:	48 89 c7             	mov    %rax,%rdi
   25027:	e8 e4 00 fe ff       	call   5110 <__assert_fail@plt>
    if ( propertyCount < properties.size() )
   2502c:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2502f:	41 89 c4             	mov    %eax,%r12d
   25032:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   25036:	48 89 c7             	mov    %rax,%rdi
   25039:	e8 f2 3e ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   2503e:	49 39 c4             	cmp    %rax,%r12
   25041:	0f 92 c0             	setb   %al
   25044:	84 c0                	test   %al,%al
   25046:	74 14                	je     2505c <_ZN4rtvc24validationLayerSupportedEv+0x160>
    {
      properties.resize( propertyCount );
   25048:	8b 45 8c             	mov    -0x74(%rbp),%eax
   2504b:	89 c2                	mov    %eax,%edx
   2504d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   25051:	48 89 d6             	mov    %rdx,%rsi
   25054:	48 89 c7             	mov    %rax,%rdi
   25057:	e8 1e 3e ff ff       	call   18e7a <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE6resizeEm>
   2505c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   2505f:	89 45 88             	mov    %eax,-0x78(%rbp)
    ignore( result );
   25062:	48 8d 45 88          	lea    -0x78(%rbp),%rax
   25066:	48 89 c7             	mov    %rax,%rdi
   25069:	e8 5e 1d 00 00       	call   26dcc <_ZN2vk6ignoreINS_6ResultEEEvRKT_>
    return data;
   2506e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   25072:	48 89 c6             	mov    %rax,%rsi
   25075:	48 89 df             	mov    %rbx,%rdi
   25078:	e8 2b 22 00 00       	call   272a8 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EEC1ERKS3_>
   2507d:	90                   	nop
    }
    return createResultValueType( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), properties );
  }
   2507e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   25082:	48 89 c7             	mov    %rax,%rdi
   25085:	e8 ac 3d ff ff       	call   18e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>
    return createResultValueType( static_cast<VULKAN_HPP_NAMESPACE::Result>( result ), properties );
   2508a:	90                   	nop
  for (const auto &supportedLayer : supportedLayers) {
   2508b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   2508f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   25093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25097:	48 89 c7             	mov    %rax,%rdi
   2509a:	e8 3d 43 ff ff       	call   193dc <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE5beginEv>
   2509f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   250a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   250a7:	48 89 c7             	mov    %rax,%rdi
   250aa:	e8 53 43 ff ff       	call   19402 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EE3endEv>
   250af:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   250b6:	eb 66                	jmp    2511e <_ZN4rtvc24validationLayerSupportedEv+0x222>
  }
   250b8:	48 89 c3             	mov    %rax,%rbx
   250bb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   250bf:	48 89 c7             	mov    %rax,%rdi
   250c2:	e8 6f 3d ff ff       	call   18e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>
   250c7:	48 89 d8             	mov    %rbx,%rax
   250ca:	48 89 c7             	mov    %rax,%rdi
   250cd:	e8 ce 02 fe ff       	call   53a0 <_Unwind_Resume@plt>
   250d2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   250d6:	48 89 c7             	mov    %rax,%rdi
   250d9:	e8 24 33 ff ff       	call   18402 <_ZNK9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEdeEv>
   250de:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (supportedLayer.layerName == validationLayerName) {
   250e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   250e6:	48 89 c7             	mov    %rax,%rdi
   250e9:	e8 ba 1d 00 00       	call   26ea8 <_ZNK2vk14ArrayWrapper1DIcLm256EEcvSt17basic_string_viewIcSt11char_traitsIcEEIcLi0EEEv>
   250ee:	48 8b 3d 8b c8 01 00 	mov    0x1c88b(%rip),%rdi        # 41980 <_ZN4rtvc19validationLayerNameE>
   250f5:	48 8b 35 8c c8 01 00 	mov    0x1c88c(%rip),%rsi        # 41988 <_ZN4rtvc19validationLayerNameE+0x8>
   250fc:	48 89 d1             	mov    %rdx,%rcx
   250ff:	48 89 c2             	mov    %rax,%rdx
   25102:	e8 e6 1d 00 00       	call   26eed <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
   25107:	84 c0                	test   %al,%al
   25109:	74 07                	je     25112 <_ZN4rtvc24validationLayerSupportedEv+0x216>
      return true;
   2510b:	bb 01 00 00 00       	mov    $0x1,%ebx
   25110:	eb 2e                	jmp    25140 <_ZN4rtvc24validationLayerSupportedEv+0x244>
  for (const auto &supportedLayer : supportedLayers) {
   25112:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   25116:	48 89 c7             	mov    %rax,%rdi
   25119:	e8 0e 43 ff ff       	call   1942c <_ZN9__gnu_cxx17__normal_iteratorIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEppEv>
   2511e:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
   25125:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   25129:	48 89 d6             	mov    %rdx,%rsi
   2512c:	48 89 c7             	mov    %rax,%rdi
   2512f:	e8 85 32 ff ff       	call   183b9 <_ZN9__gnu_cxxeqIPN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   25134:	83 f0 01             	xor    $0x1,%eax
   25137:	84 c0                	test   %al,%al
   25139:	75 97                	jne    250d2 <_ZN4rtvc24validationLayerSupportedEv+0x1d6>
    }
  }
  return false;
   2513b:	bb 00 00 00 00       	mov    $0x0,%ebx
}
   25140:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   25144:	48 89 c7             	mov    %rax,%rdi
   25147:	e8 ea 3c ff ff       	call   18e36 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EED1Ev>
   2514c:	89 d8                	mov    %ebx,%eax
   2514e:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   25152:	5b                   	pop    %rbx
   25153:	41 5c                	pop    %r12
   25155:	5d                   	pop    %rbp
   25156:	c3                   	ret

0000000000025157 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE>:

vk::raii::Instance makeInstance(const vk::raii::Context &context) {
   25157:	55                   	push   %rbp
   25158:	48 89 e5             	mov    %rsp,%rbp
   2515b:	41 55                	push   %r13
   2515d:	41 54                	push   %r12
   2515f:	53                   	push   %rbx
   25160:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
   25167:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   2516e:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
  vk::ApplicationInfo applicationInfo{
   25175:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
   2517c:	00 00 00 
   2517f:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   25186:	00 00 00 00 
   2518a:	48 8d 05 68 e2 00 00 	lea    0xe268(%rip),%rax        # 333f9 <_ZNSt8__detailL19__atomic_spin_countE+0xf7d>
   25191:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   25198:	c7 85 78 ff ff ff 00 	movl   $0x400000,-0x88(%rbp)
   2519f:	00 40 00 
   251a2:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
   251a9:	00 
   251aa:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
   251b1:	c7 45 8c 00 00 40 00 	movl   $0x400000,-0x74(%rbp)
      .applicationVersion{VK_MAKE_VERSION(1, 0, 0)},
      .apiVersion{VK_API_VERSION_1_0},
  };

  // Required extensions
  uint32_t requiredExtensionCount = 0;
   251b8:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   251bf:	00 00 00 
  auto ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
   251c2:	48 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%rax
   251c9:	48 89 c7             	mov    %rax,%rdi
   251cc:	e8 9f ff fd ff       	call   5170 <glfwGetRequiredInstanceExtensions@plt>
   251d1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
   251d5:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   251db:	89 c3                	mov    %eax,%ebx
   251dd:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   251e1:	48 89 c7             	mov    %rax,%rdi
   251e4:	e8 2f 2a ff ff       	call   17c18 <_ZNSaIPKcEC1Ev>
   251e9:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
   251ed:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   251f4:	48 89 de             	mov    %rbx,%rsi
   251f7:	48 89 c7             	mov    %rax,%rdi
   251fa:	e8 63 1d 00 00       	call   26f62 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
   251ff:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   25203:	48 89 c7             	mov    %rax,%rdi
   25206:	e8 35 2a ff ff       	call   17c40 <_ZNSaIPKcED1Ev>
  for (size_t i = 0; i < requiredExtensionCount; ++i) {
   2520b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   25212:	00 
   25213:	eb 34                	jmp    25249 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0xf2>
    requiredExtensions[i] = ppRequiredExtensions[i];
   25215:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25219:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   25220:	00 
   25221:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   25225:	48 01 d0             	add    %rdx,%rax
   25228:	48 8b 18             	mov    (%rax),%rbx
   2522b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2522f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   25236:	48 89 d6             	mov    %rdx,%rsi
   25239:	48 89 c7             	mov    %rax,%rdi
   2523c:	e8 97 1d 00 00       	call   26fd8 <_ZNSt6vectorIPKcSaIS1_EEixEm>
   25241:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < requiredExtensionCount; ++i) {
   25244:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
   25249:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   2524f:	89 c0                	mov    %eax,%eax
   25251:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   25255:	72 be                	jb     25215 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0xbe>
  }

  // Requested layers
  std::vector<const char *> requestedLayers = {
      mangohudLayerName.data(),
  };
   25257:	48 8d 05 ae e1 00 00 	lea    0xe1ae(%rip),%rax        # 3340c <_ZNSt8__detailL19__atomic_spin_countE+0xf90>
   2525e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   25262:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   25266:	49 89 c4             	mov    %rax,%r12
   25269:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   2526f:	48 8d 45 af          	lea    -0x51(%rbp),%rax
   25273:	48 89 c7             	mov    %rax,%rdi
   25276:	e8 9d 29 ff ff       	call   17c18 <_ZNSaIPKcEC1Ev>
   2527b:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
   2527f:	4c 89 e6             	mov    %r12,%rsi
   25282:	4c 89 ef             	mov    %r13,%rdi
   25285:	4c 89 e1             	mov    %r12,%rcx
   25288:	4c 89 eb             	mov    %r13,%rbx
   2528b:	48 89 df             	mov    %rbx,%rdi
   2528e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   25295:	48 89 d1             	mov    %rdx,%rcx
   25298:	48 89 fa             	mov    %rdi,%rdx
   2529b:	48 89 c7             	mov    %rax,%rdi
   2529e:	e8 ed 28 ff ff       	call   17b90 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
   252a3:	48 8d 45 af          	lea    -0x51(%rbp),%rax
   252a7:	48 89 c7             	mov    %rax,%rdi
   252aa:	e8 91 29 ff ff       	call   17c40 <_ZNSaIPKcED1Ev>

  // Enable validation layers if the application is running in debug mode
  vk::DebugUtilsMessengerCreateInfoEXT *pDebugInfo = nullptr;
   252af:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
   252b6:	00 
  vk::DebugUtilsMessengerCreateInfoEXT debugInfo{};
   252b7:	c7 85 f0 fe ff ff 04 	movl   $0x3b9cbe04,-0x110(%rbp)
   252be:	be 9c 3b 
   252c1:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
   252c8:	00 00 00 00 
   252cc:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%rbp)
   252d3:	00 00 00 
   252d6:	c7 85 04 ff ff ff 00 	movl   $0x0,-0xfc(%rbp)
   252dd:	00 00 00 
   252e0:	c7 85 08 ff ff ff 00 	movl   $0x0,-0xf8(%rbp)
   252e7:	00 00 00 
   252ea:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
   252f1:	00 00 00 00 
   252f5:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
   252fc:	00 00 00 00 
  if constexpr (debugMode) {
    if (validationLayerSupported()) {
   25300:	e8 f7 fb ff ff       	call   24efc <_ZN4rtvc24validationLayerSupportedEv>
   25305:	84 c0                	test   %al,%al
   25307:	0f 84 b8 00 00 00    	je     253c5 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0x26e>
      requiredExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
   2530d:	48 8d 05 12 e1 00 00 	lea    0xe112(%rip),%rax        # 33426 <_ZNSt8__detailL19__atomic_spin_countE+0xfaa>
   25314:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   25318:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
   2531c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   25323:	48 89 d6             	mov    %rdx,%rsi
   25326:	48 89 c7             	mov    %rax,%rdi
   25329:	e8 ca 1c 00 00       	call   26ff8 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
      requestedLayers.push_back(validationLayerName.data());
   2532e:	48 8d 05 4b c6 01 00 	lea    0x1c64b(%rip),%rax        # 41980 <_ZN4rtvc19validationLayerNameE>
   25335:	48 89 c7             	mov    %rax,%rdi
   25338:	e8 43 1a 00 00       	call   26d80 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4dataEv>
   2533d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   25341:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   25345:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   2534c:	48 89 d6             	mov    %rdx,%rsi
   2534f:	48 89 c7             	mov    %rax,%rdi
   25352:	e8 a1 1c 00 00       	call   26ff8 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>

      debugInfo = makeDebugMessengerInfo();
   25357:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
   2535e:	48 89 c7             	mov    %rax,%rdi
   25361:	e8 c9 01 00 00       	call   2552f <_ZN4rtvc22makeDebugMessengerInfoEv>
   25366:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   2536d:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
   25374:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   2537b:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   25382:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
   25389:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
   25390:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   25397:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
   2539e:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
   253a5:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
   253ac:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   253b3:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
      pDebugInfo = &debugInfo;
   253ba:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   253c1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    }
  }

  vk::InstanceCreateInfo instanceInfo{
   253c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   253c9:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
   253d0:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
   253d7:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
   253de:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
   253e5:	c7 85 b0 fe ff ff 01 	movl   $0x1,-0x150(%rbp)
   253ec:	00 00 00 
      .pApplicationInfo{&applicationInfo},
      .enabledLayerCount{static_cast<uint32_t>(requestedLayers.size())},
      .ppEnabledLayerNames{requestedLayers.data()},
      .enabledExtensionCount{static_cast<uint32_t>(requiredExtensions.size())},
      .ppEnabledExtensionNames{requiredExtensions.data()},
  };
   253ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   253f3:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
   253fa:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   25401:	48 83 c0 10          	add    $0x10,%rax
   25405:	48 89 c7             	mov    %rax,%rdi
   25408:	e8 cb 19 00 00       	call   26dd8 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ev>
   2540d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
   25414:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
      .enabledLayerCount{static_cast<uint32_t>(requestedLayers.size())},
   2541b:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   25422:	48 89 c7             	mov    %rax,%rdi
   25425:	e8 5e 30 ff ff       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  };
   2542a:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
      .ppEnabledLayerNames{requestedLayers.data()},
   25430:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   25437:	48 89 c7             	mov    %rax,%rdi
   2543a:	e8 69 19 00 00       	call   26da8 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
  };
   2543f:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
      .enabledExtensionCount{static_cast<uint32_t>(requiredExtensions.size())},
   25446:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   2544d:	48 89 c7             	mov    %rax,%rdi
   25450:	e8 33 30 ff ff       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  };
   25455:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%rbp)
      .ppEnabledExtensionNames{requiredExtensions.data()},
   2545b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   25462:	48 89 c7             	mov    %rax,%rdi
   25465:	e8 3e 19 00 00       	call   26da8 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
  };
   2546a:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  return {context, instanceInfo};
   25471:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   25475:	be 00 00 00 00       	mov    $0x0,%esi
   2547a:	48 89 c7             	mov    %rax,%rdi
   2547d:	e8 82 40 ff ff       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   25482:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   25486:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
   2548d:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
   25494:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   2549b:	48 89 c7             	mov    %rax,%rdi
   2549e:	e8 d5 15 00 00       	call   26a78 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>
}
   254a3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   254aa:	48 89 c7             	mov    %rax,%rdi
   254ad:	e8 d4 3b ff ff       	call   19086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   254b2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   254b9:	48 89 c7             	mov    %rax,%rdi
   254bc:	e8 c5 3b ff ff       	call   19086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
  return {context, instanceInfo};
   254c1:	eb 57                	jmp    2551a <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0x3c3>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
   254c3:	48 89 c3             	mov    %rax,%rbx
   254c6:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
   254ca:	48 89 c7             	mov    %rax,%rdi
   254cd:	e8 6e 27 ff ff       	call   17c40 <_ZNSaIPKcED1Ev>
   254d2:	48 89 d8             	mov    %rbx,%rax
   254d5:	48 89 c7             	mov    %rax,%rdi
   254d8:	e8 c3 fe fd ff       	call   53a0 <_Unwind_Resume@plt>
  };
   254dd:	48 89 c3             	mov    %rax,%rbx
   254e0:	48 8d 45 af          	lea    -0x51(%rbp),%rax
   254e4:	48 89 c7             	mov    %rax,%rdi
   254e7:	e8 54 27 ff ff       	call   17c40 <_ZNSaIPKcED1Ev>
   254ec:	eb 12                	jmp    25500 <_ZN4rtvc12makeInstanceERKN2vk4raii7ContextE+0x3a9>
}
   254ee:	48 89 c3             	mov    %rax,%rbx
   254f1:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   254f8:	48 89 c7             	mov    %rax,%rdi
   254fb:	e8 86 3b ff ff       	call   19086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   25500:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   25507:	48 89 c7             	mov    %rax,%rdi
   2550a:	e8 77 3b ff ff       	call   19086 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
   2550f:	48 89 d8             	mov    %rbx,%rax
   25512:	48 89 c7             	mov    %rax,%rdi
   25515:	e8 86 fe fd ff       	call   53a0 <_Unwind_Resume@plt>
   2551a:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   25521:	48 81 c4 78 01 00 00 	add    $0x178,%rsp
   25528:	5b                   	pop    %rbx
   25529:	41 5c                	pop    %r12
   2552b:	41 5d                	pop    %r13
   2552d:	5d                   	pop    %rbp
   2552e:	c3                   	ret

000000000002552f <_ZN4rtvc22makeDebugMessengerInfoEv>:

[[nodiscard]] vk::DebugUtilsMessengerCreateInfoEXT makeDebugMessengerInfo() {
   2552f:	55                   	push   %rbp
   25530:	48 89 e5             	mov    %rsp,%rbp
   25533:	48 83 ec 10          	sub    $0x10,%rsp
   25537:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
          vk::DebugUtilsMessageTypeFlagBitsEXT::eGeneral |
          vk::DebugUtilsMessageTypeFlagBitsEXT::eValidation |
          vk::DebugUtilsMessageTypeFlagBitsEXT::ePerformance |
          vk::DebugUtilsMessageTypeFlagBitsEXT::eDeviceAddressBinding,
      .pfnUserCallback = debugCallback,
  };
   2553b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2553f:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
   25545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25549:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   25550:	00 
   25551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25555:	48 83 c0 10          	add    $0x10,%rax
   25559:	48 89 c7             	mov    %rax,%rdi
   2555c:	e8 31 18 00 00       	call   26d92 <_ZN2vk5FlagsINS_36DebugUtilsMessengerCreateFlagBitsEXTEEC1Ev>
   25561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25565:	c7 40 14 11 11 00 00 	movl   $0x1111,0x14(%rax)
   2556c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25570:	c7 40 18 0f 00 00 00 	movl   $0xf,0x18(%rax)
   25577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2557b:	48 8d 15 19 f9 ff ff 	lea    -0x6e7(%rip),%rdx        # 24e9b <_ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
   25582:	48 89 50 20          	mov    %rdx,0x20(%rax)
   25586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2558a:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   25591:	00 
}
   25592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25596:	c9                   	leave
   25597:	c3                   	ret

0000000000025598 <_ZN4rtvc18makeDebugMessengerERKN2vk4raii8InstanceE>:

vk::raii::DebugUtilsMessengerEXT
makeDebugMessenger(const vk::raii::Instance &instance) {
   25598:	55                   	push   %rbp
   25599:	48 89 e5             	mov    %rsp,%rbp
   2559c:	48 83 ec 50          	sub    $0x50,%rsp
   255a0:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   255a4:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  if constexpr (debugMode) {
    return {instance, makeDebugMessengerInfo()};
   255a8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   255ac:	48 89 c7             	mov    %rax,%rdi
   255af:	e8 7b ff ff ff       	call   2552f <_ZN4rtvc22makeDebugMessengerInfoEv>
   255b4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   255b8:	be 00 00 00 00       	mov    $0x0,%esi
   255bd:	48 89 c7             	mov    %rax,%rdi
   255c0:	e8 3f 3f ff ff       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   255c5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   255c9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   255cd:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   255d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   255d5:	48 89 c7             	mov    %rax,%rdi
   255d8:	e8 e9 15 00 00       	call   26bc6 <_ZN2vk4raii22DebugUtilsMessengerEXTC1ERKNS0_8InstanceERKNS_32DebugUtilsMessengerCreateInfoEXTENS_8OptionalIKNS_19AllocationCallbacksEEE>
  }
  return {VK_NULL_HANDLE};
}
   255dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   255e1:	c9                   	leave
   255e2:	c3                   	ret

00000000000255e3 <_ZN4rtvc11makeSurfaceERKN2vk4raii8InstanceERKNS_6WindowE>:

vk::raii::SurfaceKHR makeSurface(const vk::raii::Instance &instance,
                                 const Window &window) {
   255e3:	55                   	push   %rbp
   255e4:	48 89 e5             	mov    %rsp,%rbp
   255e7:	53                   	push   %rbx
   255e8:	48 83 ec 38          	sub    $0x38,%rsp
   255ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   255f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   255f4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  glfwCreateWindowSurface(static_cast<VkInstance>(*instance), *window, nullptr,
   255f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   255fc:	48 89 c7             	mov    %rax,%rdi
   255ff:	e8 a6 47 fe ff       	call   9daa <_ZNK4rtvc6WindowdeEv>
   25604:	48 89 c3             	mov    %rax,%rbx
   25607:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2560b:	48 89 c7             	mov    %rax,%rdi
   2560e:	e8 3d 1d ff ff       	call   17350 <_ZNK2vk4raii8InstancedeEv>
   25613:	48 89 c7             	mov    %rax,%rdi
   25616:	e8 f7 3a fe ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
   2561b:	48 89 c7             	mov    %rax,%rdi
   2561e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   25622:	48 89 c1             	mov    %rax,%rcx
   25625:	ba 00 00 00 00       	mov    $0x0,%edx
   2562a:	48 89 de             	mov    %rbx,%rsi
   2562d:	e8 0e fd fd ff       	call   5340 <glfwCreateWindowSurface@plt>
                          &surface);
  return {instance, surface};
   25632:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
   25636:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   2563a:	be 00 00 00 00       	mov    $0x0,%esi
   2563f:	48 89 c7             	mov    %rax,%rdi
   25642:	e8 bd 3e ff ff       	call   19504 <_ZN2vk8OptionalIKNS_19AllocationCallbacksEEC1EDn>
   25647:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2564b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   2564f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25653:	48 89 d1             	mov    %rdx,%rcx
   25656:	48 89 da             	mov    %rbx,%rdx
   25659:	48 89 c7             	mov    %rax,%rdi
   2565c:	e8 4f 16 00 00       	call   26cb0 <_ZN2vk4raii10SurfaceKHRC1ERKNS0_8InstanceEP14VkSurfaceKHR_TNS_8OptionalIKNS_19AllocationCallbacksEEE>
}
   25661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   25665:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   25669:	c9                   	leave
   2566a:	c3                   	ret

000000000002566b <_Z41__static_initialization_and_destruction_0ii>:

   2566b:	55                   	push   %rbp
   2566c:	48 89 e5             	mov    %rsp,%rbp
   2566f:	48 83 ec 10          	sub    $0x10,%rsp
   25673:	89 7d fc             	mov    %edi,-0x4(%rbp)
   25676:	89 75 f8             	mov    %esi,-0x8(%rbp)
   25679:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   2567d:	75 3b                	jne    256ba <_Z41__static_initialization_and_destruction_0ii+0x4f>
   2567f:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   25686:	75 32                	jne    256ba <_Z41__static_initialization_and_destruction_0ii+0x4f>
   25688:	48 8d 05 11 cd 01 00 	lea    0x1cd11(%rip),%rax        # 423a0 <_ZStL8__ioinit>
   2568f:	48 89 c7             	mov    %rax,%rdi
   25692:	e8 99 fc fd ff       	call   5330 <_ZNSt8ios_base4InitC1Ev@plt>
   25697:	48 8d 05 5a cb 01 00 	lea    0x1cb5a(%rip),%rax        # 421f8 <__dso_handle>
   2569e:	48 89 c2             	mov    %rax,%rdx
   256a1:	48 8d 05 f8 cc 01 00 	lea    0x1ccf8(%rip),%rax        # 423a0 <_ZStL8__ioinit>
   256a8:	48 89 c6             	mov    %rax,%rsi
   256ab:	48 8b 05 1e c9 01 00 	mov    0x1c91e(%rip),%rax        # 41fd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   256b2:	48 89 c7             	mov    %rax,%rdi
   256b5:	e8 16 fb fd ff       	call   51d0 <__cxa_atexit@plt>
   256ba:	90                   	nop
   256bb:	c9                   	leave
   256bc:	c3                   	ret

00000000000256bd <_GLOBAL__sub_I__ZN4rtvc13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
   256bd:	55                   	push   %rbp
   256be:	48 89 e5             	mov    %rsp,%rbp
   256c1:	be ff ff 00 00       	mov    $0xffff,%esi
   256c6:	bf 01 00 00 00       	mov    $0x1,%edi
   256cb:	e8 9b ff ff ff       	call   2566b <_Z41__static_initialization_and_destruction_0ii>
   256d0:	5d                   	pop    %rbp
   256d1:	c3                   	ret

00000000000256d2 <_ZNK2vk20DispatchLoaderStatic34vkEnumerateInstanceLayerPropertiesEPjP17VkLayerProperties>:
    VkResult vkEnumerateInstanceLayerProperties( uint32_t * pPropertyCount, VkLayerProperties * pProperties ) const VULKAN_HPP_NOEXCEPT
   256d2:	55                   	push   %rbp
   256d3:	48 89 e5             	mov    %rsp,%rbp
   256d6:	48 83 ec 20          	sub    $0x20,%rsp
   256da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   256de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   256e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      return ::vkEnumerateInstanceLayerProperties( pPropertyCount, pProperties );
   256e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   256ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   256ee:	48 89 d6             	mov    %rdx,%rsi
   256f1:	48 89 c7             	mov    %rax,%rdi
   256f4:	e8 87 fb fd ff       	call   5280 <vkEnumerateInstanceLayerProperties@plt>
    }
   256f9:	c9                   	leave
   256fa:	c3                   	ret
   256fb:	90                   	nop

00000000000256fc <_ZN2vk10SurfaceKHRC1EP14VkSurfaceKHR_T>:
    VULKAN_HPP_TYPESAFE_EXPLICIT SurfaceKHR( VkSurfaceKHR surfaceKHR ) VULKAN_HPP_NOEXCEPT : m_surfaceKHR( surfaceKHR ) {}
   256fc:	55                   	push   %rbp
   256fd:	48 89 e5             	mov    %rsp,%rbp
   25700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25704:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   25708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2570c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   25710:	48 89 10             	mov    %rdx,(%rax)
   25713:	90                   	nop
   25714:	5d                   	pop    %rbp
   25715:	c3                   	ret

0000000000025716 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_>:
      InstanceDispatcher( PFN_vkGetInstanceProcAddr getProcAddr, VkInstance instance ) : vkGetInstanceProcAddr( getProcAddr )
   25716:	55                   	push   %rbp
   25717:	48 89 e5             	mov    %rsp,%rbp
   2571a:	48 83 ec 20          	sub    $0x20,%rsp
   2571e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   25722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   25726:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   2572a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2572e:	48 89 c7             	mov    %rax,%rdi
   25731:	e8 66 0e fe ff       	call   659c <_ZN2vk18DispatchLoaderBaseC1Ev>
   25736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2573a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   25741:	00 
   25742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25746:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   2574d:	00 
   2574e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25752:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   25759:	00 
   2575a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2575e:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   25765:	00 
   25766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2576a:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   25771:	00 
   25772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25776:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   2577d:	00 
   2577e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25782:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
   25789:	00 
   2578a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2578e:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   25795:	00 
   25796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2579a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2579e:	48 89 50 50          	mov    %rdx,0x50(%rax)
   257a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257a6:	48 c7 40 58 00 00 00 	movq   $0x0,0x58(%rax)
   257ad:	00 
   257ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257b2:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
   257b9:	00 
   257ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257be:	48 c7 40 68 00 00 00 	movq   $0x0,0x68(%rax)
   257c5:	00 
   257c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257ca:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)
   257d1:	00 
   257d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257d6:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
   257dd:	00 
   257de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257e2:	48 c7 80 80 00 00 00 	movq   $0x0,0x80(%rax)
   257e9:	00 00 00 00 
   257ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   257f1:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
   257f8:	00 00 00 00 
   257fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25800:	48 c7 80 90 00 00 00 	movq   $0x0,0x90(%rax)
   25807:	00 00 00 00 
   2580b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2580f:	48 c7 80 98 00 00 00 	movq   $0x0,0x98(%rax)
   25816:	00 00 00 00 
   2581a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2581e:	48 c7 80 a0 00 00 00 	movq   $0x0,0xa0(%rax)
   25825:	00 00 00 00 
   25829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2582d:	48 c7 80 a8 00 00 00 	movq   $0x0,0xa8(%rax)
   25834:	00 00 00 00 
   25838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2583c:	48 c7 80 b0 00 00 00 	movq   $0x0,0xb0(%rax)
   25843:	00 00 00 00 
   25847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2584b:	48 c7 80 b8 00 00 00 	movq   $0x0,0xb8(%rax)
   25852:	00 00 00 00 
   25856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2585a:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)
   25861:	00 00 00 00 
   25865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25869:	48 c7 80 c8 00 00 00 	movq   $0x0,0xc8(%rax)
   25870:	00 00 00 00 
   25874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25878:	48 c7 80 d0 00 00 00 	movq   $0x0,0xd0(%rax)
   2587f:	00 00 00 00 
   25883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25887:	48 c7 80 d8 00 00 00 	movq   $0x0,0xd8(%rax)
   2588e:	00 00 00 00 
   25892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25896:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)
   2589d:	00 00 00 00 
   258a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258a5:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)
   258ac:	00 00 00 00 
   258b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258b4:	48 c7 80 f0 00 00 00 	movq   $0x0,0xf0(%rax)
   258bb:	00 00 00 00 
   258bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258c3:	48 c7 80 f8 00 00 00 	movq   $0x0,0xf8(%rax)
   258ca:	00 00 00 00 
   258ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258d2:	48 c7 80 00 01 00 00 	movq   $0x0,0x100(%rax)
   258d9:	00 00 00 00 
   258dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258e1:	48 c7 80 08 01 00 00 	movq   $0x0,0x108(%rax)
   258e8:	00 00 00 00 
   258ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258f0:	48 c7 80 10 01 00 00 	movq   $0x0,0x110(%rax)
   258f7:	00 00 00 00 
   258fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   258ff:	48 c7 80 18 01 00 00 	movq   $0x0,0x118(%rax)
   25906:	00 00 00 00 
   2590a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2590e:	48 c7 80 20 01 00 00 	movq   $0x0,0x120(%rax)
   25915:	00 00 00 00 
   25919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2591d:	48 c7 80 28 01 00 00 	movq   $0x0,0x128(%rax)
   25924:	00 00 00 00 
   25928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2592c:	48 c7 80 30 01 00 00 	movq   $0x0,0x130(%rax)
   25933:	00 00 00 00 
   25937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2593b:	48 c7 80 38 01 00 00 	movq   $0x0,0x138(%rax)
   25942:	00 00 00 00 
   25946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2594a:	48 c7 80 40 01 00 00 	movq   $0x0,0x140(%rax)
   25951:	00 00 00 00 
   25955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25959:	48 c7 80 48 01 00 00 	movq   $0x0,0x148(%rax)
   25960:	00 00 00 00 
   25964:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25968:	48 c7 80 50 01 00 00 	movq   $0x0,0x150(%rax)
   2596f:	00 00 00 00 
   25973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25977:	48 c7 80 58 01 00 00 	movq   $0x0,0x158(%rax)
   2597e:	00 00 00 00 
   25982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25986:	48 c7 80 60 01 00 00 	movq   $0x0,0x160(%rax)
   2598d:	00 00 00 00 
   25991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25995:	48 c7 80 68 01 00 00 	movq   $0x0,0x168(%rax)
   2599c:	00 00 00 00 
   259a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259a4:	48 c7 80 70 01 00 00 	movq   $0x0,0x170(%rax)
   259ab:	00 00 00 00 
   259af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259b3:	48 c7 80 78 01 00 00 	movq   $0x0,0x178(%rax)
   259ba:	00 00 00 00 
   259be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259c2:	48 c7 80 80 01 00 00 	movq   $0x0,0x180(%rax)
   259c9:	00 00 00 00 
   259cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259d1:	48 c7 80 88 01 00 00 	movq   $0x0,0x188(%rax)
   259d8:	00 00 00 00 
   259dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259e0:	48 c7 80 90 01 00 00 	movq   $0x0,0x190(%rax)
   259e7:	00 00 00 00 
   259eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259ef:	48 c7 80 98 01 00 00 	movq   $0x0,0x198(%rax)
   259f6:	00 00 00 00 
   259fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   259fe:	48 c7 80 a0 01 00 00 	movq   $0x0,0x1a0(%rax)
   25a05:	00 00 00 00 
   25a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a0d:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
   25a14:	00 00 00 00 
   25a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a1c:	48 c7 80 b0 01 00 00 	movq   $0x0,0x1b0(%rax)
   25a23:	00 00 00 00 
   25a27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a2b:	48 c7 80 b8 01 00 00 	movq   $0x0,0x1b8(%rax)
   25a32:	00 00 00 00 
   25a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a3a:	48 c7 80 c0 01 00 00 	movq   $0x0,0x1c0(%rax)
   25a41:	00 00 00 00 
   25a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a49:	48 c7 80 c8 01 00 00 	movq   $0x0,0x1c8(%rax)
   25a50:	00 00 00 00 
   25a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a58:	48 c7 80 d0 01 00 00 	movq   $0x0,0x1d0(%rax)
   25a5f:	00 00 00 00 
   25a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a67:	48 c7 80 d8 01 00 00 	movq   $0x0,0x1d8(%rax)
   25a6e:	00 00 00 00 
   25a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a76:	48 c7 80 e0 01 00 00 	movq   $0x0,0x1e0(%rax)
   25a7d:	00 00 00 00 
   25a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a85:	48 c7 80 e8 01 00 00 	movq   $0x0,0x1e8(%rax)
   25a8c:	00 00 00 00 
   25a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25a94:	48 c7 80 f0 01 00 00 	movq   $0x0,0x1f0(%rax)
   25a9b:	00 00 00 00 
   25a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25aa3:	48 c7 80 f8 01 00 00 	movq   $0x0,0x1f8(%rax)
   25aaa:	00 00 00 00 
   25aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ab2:	48 c7 80 00 02 00 00 	movq   $0x0,0x200(%rax)
   25ab9:	00 00 00 00 
   25abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ac1:	48 c7 80 08 02 00 00 	movq   $0x0,0x208(%rax)
   25ac8:	00 00 00 00 
   25acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ad0:	48 c7 80 10 02 00 00 	movq   $0x0,0x210(%rax)
   25ad7:	00 00 00 00 
   25adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25adf:	48 c7 80 18 02 00 00 	movq   $0x0,0x218(%rax)
   25ae6:	00 00 00 00 
   25aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25aee:	48 c7 80 20 02 00 00 	movq   $0x0,0x220(%rax)
   25af5:	00 00 00 00 
   25af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25afd:	48 c7 80 28 02 00 00 	movq   $0x0,0x228(%rax)
   25b04:	00 00 00 00 
   25b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b0c:	48 c7 80 30 02 00 00 	movq   $0x0,0x230(%rax)
   25b13:	00 00 00 00 
   25b17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b1b:	48 c7 80 38 02 00 00 	movq   $0x0,0x238(%rax)
   25b22:	00 00 00 00 
   25b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b2a:	48 c7 80 40 02 00 00 	movq   $0x0,0x240(%rax)
   25b31:	00 00 00 00 
   25b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b39:	48 c7 80 48 02 00 00 	movq   $0x0,0x248(%rax)
   25b40:	00 00 00 00 
   25b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b48:	48 c7 80 50 02 00 00 	movq   $0x0,0x250(%rax)
   25b4f:	00 00 00 00 
   25b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b57:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
   25b5e:	00 00 00 00 
   25b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b66:	48 c7 80 60 02 00 00 	movq   $0x0,0x260(%rax)
   25b6d:	00 00 00 00 
   25b71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b75:	48 c7 80 68 02 00 00 	movq   $0x0,0x268(%rax)
   25b7c:	00 00 00 00 
   25b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b84:	48 c7 80 70 02 00 00 	movq   $0x0,0x270(%rax)
   25b8b:	00 00 00 00 
   25b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25b93:	48 c7 80 78 02 00 00 	movq   $0x0,0x278(%rax)
   25b9a:	00 00 00 00 
   25b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ba2:	48 c7 80 80 02 00 00 	movq   $0x0,0x280(%rax)
   25ba9:	00 00 00 00 
   25bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25bb1:	48 c7 80 88 02 00 00 	movq   $0x0,0x288(%rax)
   25bb8:	00 00 00 00 
   25bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25bc0:	48 c7 80 90 02 00 00 	movq   $0x0,0x290(%rax)
   25bc7:	00 00 00 00 
   25bcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25bcf:	48 c7 80 98 02 00 00 	movq   $0x0,0x298(%rax)
   25bd6:	00 00 00 00 
   25bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25bde:	48 c7 80 a0 02 00 00 	movq   $0x0,0x2a0(%rax)
   25be5:	00 00 00 00 
   25be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25bed:	48 c7 80 a8 02 00 00 	movq   $0x0,0x2a8(%rax)
   25bf4:	00 00 00 00 
   25bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25bfc:	48 c7 80 b0 02 00 00 	movq   $0x0,0x2b0(%rax)
   25c03:	00 00 00 00 
   25c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c0b:	48 c7 80 b8 02 00 00 	movq   $0x0,0x2b8(%rax)
   25c12:	00 00 00 00 
   25c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c1a:	48 c7 80 c0 02 00 00 	movq   $0x0,0x2c0(%rax)
   25c21:	00 00 00 00 
   25c25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c29:	48 c7 80 c8 02 00 00 	movq   $0x0,0x2c8(%rax)
   25c30:	00 00 00 00 
   25c34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c38:	48 c7 80 d0 02 00 00 	movq   $0x0,0x2d0(%rax)
   25c3f:	00 00 00 00 
   25c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c47:	48 c7 80 d8 02 00 00 	movq   $0x0,0x2d8(%rax)
   25c4e:	00 00 00 00 
   25c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c56:	48 c7 80 e0 02 00 00 	movq   $0x0,0x2e0(%rax)
   25c5d:	00 00 00 00 
   25c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c65:	48 c7 80 e8 02 00 00 	movq   $0x0,0x2e8(%rax)
   25c6c:	00 00 00 00 
   25c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c74:	48 c7 80 f0 02 00 00 	movq   $0x0,0x2f0(%rax)
   25c7b:	00 00 00 00 
   25c7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c83:	48 c7 80 f8 02 00 00 	movq   $0x0,0x2f8(%rax)
   25c8a:	00 00 00 00 
   25c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25c92:	48 c7 80 00 03 00 00 	movq   $0x0,0x300(%rax)
   25c99:	00 00 00 00 
   25c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ca1:	48 c7 80 08 03 00 00 	movq   $0x0,0x308(%rax)
   25ca8:	00 00 00 00 
   25cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25cb0:	48 c7 80 10 03 00 00 	movq   $0x0,0x310(%rax)
   25cb7:	00 00 00 00 
   25cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25cbf:	48 c7 80 18 03 00 00 	movq   $0x0,0x318(%rax)
   25cc6:	00 00 00 00 
   25cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25cce:	48 c7 80 20 03 00 00 	movq   $0x0,0x320(%rax)
   25cd5:	00 00 00 00 
   25cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25cdd:	48 c7 80 28 03 00 00 	movq   $0x0,0x328(%rax)
   25ce4:	00 00 00 00 
   25ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25cec:	48 c7 80 30 03 00 00 	movq   $0x0,0x330(%rax)
   25cf3:	00 00 00 00 
   25cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25cfb:	48 c7 80 38 03 00 00 	movq   $0x0,0x338(%rax)
   25d02:	00 00 00 00 
   25d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25d0a:	48 c7 80 40 03 00 00 	movq   $0x0,0x340(%rax)
   25d11:	00 00 00 00 
        vkDestroyInstance           = PFN_vkDestroyInstance( vkGetInstanceProcAddr( instance, "vkDestroyInstance" ) );
   25d15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25d19:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25d1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25d21:	48 8d 0d 58 c7 00 00 	lea    0xc758(%rip),%rcx        # 32480 <_ZNSt8__detailL19__atomic_spin_countE+0x4>
   25d28:	48 89 ce             	mov    %rcx,%rsi
   25d2b:	48 89 c7             	mov    %rax,%rdi
   25d2e:	ff d2                	call   *%rdx
   25d30:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25d34:	48 89 42 10          	mov    %rax,0x10(%rdx)
        vkEnumeratePhysicalDevices  = PFN_vkEnumeratePhysicalDevices( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDevices" ) );
   25d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25d3c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25d40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25d44:	48 8d 0d 47 c7 00 00 	lea    0xc747(%rip),%rcx        # 32492 <_ZNSt8__detailL19__atomic_spin_countE+0x16>
   25d4b:	48 89 ce             	mov    %rcx,%rsi
   25d4e:	48 89 c7             	mov    %rax,%rdi
   25d51:	ff d2                	call   *%rdx
   25d53:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25d57:	48 89 42 18          	mov    %rax,0x18(%rdx)
        vkGetPhysicalDeviceFeatures = PFN_vkGetPhysicalDeviceFeatures( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures" ) );
   25d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25d5f:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25d63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25d67:	48 8d 0d 3f c7 00 00 	lea    0xc73f(%rip),%rcx        # 324ad <_ZNSt8__detailL19__atomic_spin_countE+0x31>
   25d6e:	48 89 ce             	mov    %rcx,%rsi
   25d71:	48 89 c7             	mov    %rax,%rdi
   25d74:	ff d2                	call   *%rdx
   25d76:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25d7a:	48 89 42 20          	mov    %rax,0x20(%rdx)
          PFN_vkGetPhysicalDeviceFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties" ) );
   25d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25d82:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25d86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25d8a:	48 8d 0d 3f c7 00 00 	lea    0xc73f(%rip),%rcx        # 324d0 <_ZNSt8__detailL19__atomic_spin_countE+0x54>
   25d91:	48 89 ce             	mov    %rcx,%rsi
   25d94:	48 89 c7             	mov    %rax,%rdi
   25d97:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties =
   25d99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25d9d:	48 89 42 28          	mov    %rax,0x28(%rdx)
          PFN_vkGetPhysicalDeviceImageFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties" ) );
   25da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25da5:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25dad:	48 8d 0d 44 c7 00 00 	lea    0xc744(%rip),%rcx        # 324f8 <_ZNSt8__detailL19__atomic_spin_countE+0x7c>
   25db4:	48 89 ce             	mov    %rcx,%rsi
   25db7:	48 89 c7             	mov    %rax,%rdi
   25dba:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties =
   25dbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25dc0:	48 89 42 30          	mov    %rax,0x30(%rdx)
        vkGetPhysicalDeviceProperties = PFN_vkGetPhysicalDeviceProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties" ) );
   25dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25dc8:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25dcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25dd0:	48 8d 0d 4a c7 00 00 	lea    0xc74a(%rip),%rcx        # 32521 <_ZNSt8__detailL19__atomic_spin_countE+0xa5>
   25dd7:	48 89 ce             	mov    %rcx,%rsi
   25dda:	48 89 c7             	mov    %rax,%rdi
   25ddd:	ff d2                	call   *%rdx
   25ddf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25de3:	48 89 42 38          	mov    %rax,0x38(%rdx)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties" ) );
   25de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25deb:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25def:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25df3:	48 8d 0d 46 c7 00 00 	lea    0xc746(%rip),%rcx        # 32540 <_ZNSt8__detailL19__atomic_spin_countE+0xc4>
   25dfa:	48 89 ce             	mov    %rcx,%rsi
   25dfd:	48 89 c7             	mov    %rax,%rdi
   25e00:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties =
   25e02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25e06:	48 89 42 40          	mov    %rax,0x40(%rdx)
          PFN_vkGetPhysicalDeviceMemoryProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties" ) );
   25e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25e0e:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25e12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25e16:	48 8d 0d 53 c7 00 00 	lea    0xc753(%rip),%rcx        # 32570 <_ZNSt8__detailL19__atomic_spin_countE+0xf4>
   25e1d:	48 89 ce             	mov    %rcx,%rsi
   25e20:	48 89 c7             	mov    %rax,%rdi
   25e23:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties =
   25e25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25e29:	48 89 42 48          	mov    %rax,0x48(%rdx)
        vkCreateDevice = PFN_vkCreateDevice( vkGetInstanceProcAddr( instance, "vkCreateDevice" ) );
   25e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25e31:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25e35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25e39:	48 8d 0d 54 c7 00 00 	lea    0xc754(%rip),%rcx        # 32594 <_ZNSt8__detailL19__atomic_spin_countE+0x118>
   25e40:	48 89 ce             	mov    %rcx,%rsi
   25e43:	48 89 c7             	mov    %rax,%rdi
   25e46:	ff d2                	call   *%rdx
   25e48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25e4c:	48 89 42 58          	mov    %rax,0x58(%rdx)
          PFN_vkEnumerateDeviceExtensionProperties( vkGetInstanceProcAddr( instance, "vkEnumerateDeviceExtensionProperties" ) );
   25e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25e54:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25e58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25e5c:	48 8d 0d 45 c7 00 00 	lea    0xc745(%rip),%rcx        # 325a8 <_ZNSt8__detailL19__atomic_spin_countE+0x12c>
   25e63:	48 89 ce             	mov    %rcx,%rsi
   25e66:	48 89 c7             	mov    %rax,%rdi
   25e69:	ff d2                	call   *%rdx
        vkEnumerateDeviceExtensionProperties =
   25e6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25e6f:	48 89 42 60          	mov    %rax,0x60(%rdx)
        vkEnumerateDeviceLayerProperties = PFN_vkEnumerateDeviceLayerProperties( vkGetInstanceProcAddr( instance, "vkEnumerateDeviceLayerProperties" ) );
   25e73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25e77:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25e7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25e7f:	48 8d 0d 4a c7 00 00 	lea    0xc74a(%rip),%rcx        # 325d0 <_ZNSt8__detailL19__atomic_spin_countE+0x154>
   25e86:	48 89 ce             	mov    %rcx,%rsi
   25e89:	48 89 c7             	mov    %rax,%rdi
   25e8c:	ff d2                	call   *%rdx
   25e8e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25e92:	48 89 42 68          	mov    %rax,0x68(%rdx)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties" ) );
   25e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25e9a:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25e9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25ea2:	48 8d 0d 4f c7 00 00 	lea    0xc74f(%rip),%rcx        # 325f8 <_ZNSt8__detailL19__atomic_spin_countE+0x17c>
   25ea9:	48 89 ce             	mov    %rcx,%rsi
   25eac:	48 89 c7             	mov    %rax,%rdi
   25eaf:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties =
   25eb1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25eb5:	48 89 42 70          	mov    %rax,0x70(%rdx)
        vkEnumeratePhysicalDeviceGroups = PFN_vkEnumeratePhysicalDeviceGroups( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceGroups" ) );
   25eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ebd:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25ec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25ec5:	48 8d 0d 5c c7 00 00 	lea    0xc75c(%rip),%rcx        # 32628 <_ZNSt8__detailL19__atomic_spin_countE+0x1ac>
   25ecc:	48 89 ce             	mov    %rcx,%rsi
   25ecf:	48 89 c7             	mov    %rax,%rdi
   25ed2:	ff d2                	call   *%rdx
   25ed4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25ed8:	48 89 42 78          	mov    %rax,0x78(%rdx)
        vkGetPhysicalDeviceFeatures2    = PFN_vkGetPhysicalDeviceFeatures2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures2" ) );
   25edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25ee0:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25ee4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25ee8:	48 8d 0d 59 c7 00 00 	lea    0xc759(%rip),%rcx        # 32648 <_ZNSt8__detailL19__atomic_spin_countE+0x1cc>
   25eef:	48 89 ce             	mov    %rcx,%rsi
   25ef2:	48 89 c7             	mov    %rax,%rdi
   25ef5:	ff d2                	call   *%rdx
   25ef7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25efb:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
        vkGetPhysicalDeviceProperties2  = PFN_vkGetPhysicalDeviceProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties2" ) );
   25f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25f06:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25f0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25f0e:	48 8d 0d 53 c7 00 00 	lea    0xc753(%rip),%rcx        # 32668 <_ZNSt8__detailL19__atomic_spin_countE+0x1ec>
   25f15:	48 89 ce             	mov    %rcx,%rsi
   25f18:	48 89 c7             	mov    %rax,%rdi
   25f1b:	ff d2                	call   *%rdx
   25f1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25f21:	48 89 82 88 00 00 00 	mov    %rax,0x88(%rdx)
          PFN_vkGetPhysicalDeviceFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties2" ) );
   25f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25f2c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25f30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25f34:	48 8d 0d 4d c7 00 00 	lea    0xc74d(%rip),%rcx        # 32688 <_ZNSt8__detailL19__atomic_spin_countE+0x20c>
   25f3b:	48 89 ce             	mov    %rcx,%rsi
   25f3e:	48 89 c7             	mov    %rax,%rdi
   25f41:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties2 =
   25f43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25f47:	48 89 82 90 00 00 00 	mov    %rax,0x90(%rdx)
          PFN_vkGetPhysicalDeviceImageFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties2" ) );
   25f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25f52:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25f5a:	48 8d 0d 4f c7 00 00 	lea    0xc74f(%rip),%rcx        # 326b0 <_ZNSt8__detailL19__atomic_spin_countE+0x234>
   25f61:	48 89 ce             	mov    %rcx,%rsi
   25f64:	48 89 c7             	mov    %rax,%rdi
   25f67:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties2 =
   25f69:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25f6d:	48 89 82 98 00 00 00 	mov    %rax,0x98(%rdx)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties2" ) );
   25f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25f78:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25f7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25f80:	48 8d 0d 59 c7 00 00 	lea    0xc759(%rip),%rcx        # 326e0 <_ZNSt8__detailL19__atomic_spin_countE+0x264>
   25f87:	48 89 ce             	mov    %rcx,%rsi
   25f8a:	48 89 c7             	mov    %rax,%rdi
   25f8d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties2 =
   25f8f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25f93:	48 89 82 a0 00 00 00 	mov    %rax,0xa0(%rdx)
          PFN_vkGetPhysicalDeviceMemoryProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties2" ) );
   25f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25f9e:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25fa6:	48 8d 0d 63 c7 00 00 	lea    0xc763(%rip),%rcx        # 32710 <_ZNSt8__detailL19__atomic_spin_countE+0x294>
   25fad:	48 89 ce             	mov    %rcx,%rsi
   25fb0:	48 89 c7             	mov    %rax,%rdi
   25fb3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties2 =
   25fb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25fb9:	48 89 82 a8 00 00 00 	mov    %rax,0xa8(%rdx)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties2( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties2" ) );
   25fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25fc4:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25fcc:	48 8d 0d 65 c7 00 00 	lea    0xc765(%rip),%rcx        # 32738 <_ZNSt8__detailL19__atomic_spin_countE+0x2bc>
   25fd3:	48 89 ce             	mov    %rcx,%rsi
   25fd6:	48 89 c7             	mov    %rax,%rdi
   25fd9:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties2 =
   25fdb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25fdf:	48 89 82 b0 00 00 00 	mov    %rax,0xb0(%rdx)
          PFN_vkGetPhysicalDeviceExternalBufferProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalBufferProperties" ) );
   25fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   25fea:	48 8b 50 50          	mov    0x50(%rax),%rdx
   25fee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25ff2:	48 8d 0d 6f c7 00 00 	lea    0xc76f(%rip),%rcx        # 32768 <_ZNSt8__detailL19__atomic_spin_countE+0x2ec>
   25ff9:	48 89 ce             	mov    %rcx,%rsi
   25ffc:	48 89 c7             	mov    %rax,%rdi
   25fff:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalBufferProperties =
   26001:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26005:	48 89 82 b8 00 00 00 	mov    %rax,0xb8(%rdx)
          PFN_vkGetPhysicalDeviceExternalFenceProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalFenceProperties" ) );
   2600c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26010:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26014:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26018:	48 8d 0d 79 c7 00 00 	lea    0xc779(%rip),%rcx        # 32798 <_ZNSt8__detailL19__atomic_spin_countE+0x31c>
   2601f:	48 89 ce             	mov    %rcx,%rsi
   26022:	48 89 c7             	mov    %rax,%rdi
   26025:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalFenceProperties =
   26027:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2602b:	48 89 82 c0 00 00 00 	mov    %rax,0xc0(%rdx)
          PFN_vkGetPhysicalDeviceExternalSemaphoreProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalSemaphoreProperties" ) );
   26032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26036:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2603a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2603e:	48 8d 0d 83 c7 00 00 	lea    0xc783(%rip),%rcx        # 327c8 <_ZNSt8__detailL19__atomic_spin_countE+0x34c>
   26045:	48 89 ce             	mov    %rcx,%rsi
   26048:	48 89 c7             	mov    %rax,%rdi
   2604b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalSemaphoreProperties =
   2604d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26051:	48 89 82 c8 00 00 00 	mov    %rax,0xc8(%rdx)
        vkGetPhysicalDeviceToolProperties = PFN_vkGetPhysicalDeviceToolProperties( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceToolProperties" ) );
   26058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2605c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26064:	48 8d 0d 8d c7 00 00 	lea    0xc78d(%rip),%rcx        # 327f8 <_ZNSt8__detailL19__atomic_spin_countE+0x37c>
   2606b:	48 89 ce             	mov    %rcx,%rsi
   2606e:	48 89 c7             	mov    %rax,%rdi
   26071:	ff d2                	call   *%rdx
   26073:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26077:	48 89 82 d0 00 00 00 	mov    %rax,0xd0(%rdx)
        vkAcquireDrmDisplayEXT = PFN_vkAcquireDrmDisplayEXT( vkGetInstanceProcAddr( instance, "vkAcquireDrmDisplayEXT" ) );
   2607e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26082:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2608a:	48 8d 0d 89 c7 00 00 	lea    0xc789(%rip),%rcx        # 3281a <_ZNSt8__detailL19__atomic_spin_countE+0x39e>
   26091:	48 89 ce             	mov    %rcx,%rsi
   26094:	48 89 c7             	mov    %rax,%rdi
   26097:	ff d2                	call   *%rdx
   26099:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2609d:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)
        vkGetDrmDisplayEXT     = PFN_vkGetDrmDisplayEXT( vkGetInstanceProcAddr( instance, "vkGetDrmDisplayEXT" ) );
   260a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   260a8:	48 8b 50 50          	mov    0x50(%rax),%rdx
   260ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   260b0:	48 8d 0d 7a c7 00 00 	lea    0xc77a(%rip),%rcx        # 32831 <_ZNSt8__detailL19__atomic_spin_countE+0x3b5>
   260b7:	48 89 ce             	mov    %rcx,%rsi
   260ba:	48 89 c7             	mov    %rax,%rdi
   260bd:	ff d2                	call   *%rdx
   260bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   260c3:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)
          PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT" ) );
   260ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   260ce:	48 8b 50 50          	mov    0x50(%rax),%rdx
   260d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   260d6:	48 8d 0d 6b c7 00 00 	lea    0xc76b(%rip),%rcx        # 32848 <_ZNSt8__detailL19__atomic_spin_countE+0x3cc>
   260dd:	48 89 ce             	mov    %rcx,%rsi
   260e0:	48 89 c7             	mov    %rax,%rdi
   260e3:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceCalibrateableTimeDomainsEXT =
   260e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   260e9:	48 89 82 f8 00 00 00 	mov    %rax,0xf8(%rdx)
        vkCreateDebugReportCallbackEXT  = PFN_vkCreateDebugReportCallbackEXT( vkGetInstanceProcAddr( instance, "vkCreateDebugReportCallbackEXT" ) );
   260f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   260f4:	48 8b 50 50          	mov    0x50(%rax),%rdx
   260f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   260fc:	48 8d 0d 75 c7 00 00 	lea    0xc775(%rip),%rcx        # 32878 <_ZNSt8__detailL19__atomic_spin_countE+0x3fc>
   26103:	48 89 ce             	mov    %rcx,%rsi
   26106:	48 89 c7             	mov    %rax,%rdi
   26109:	ff d2                	call   *%rdx
   2610b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2610f:	48 89 82 00 01 00 00 	mov    %rax,0x100(%rdx)
        vkDestroyDebugReportCallbackEXT = PFN_vkDestroyDebugReportCallbackEXT( vkGetInstanceProcAddr( instance, "vkDestroyDebugReportCallbackEXT" ) );
   26116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2611a:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2611e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26122:	48 8d 0d 6f c7 00 00 	lea    0xc76f(%rip),%rcx        # 32898 <_ZNSt8__detailL19__atomic_spin_countE+0x41c>
   26129:	48 89 ce             	mov    %rcx,%rsi
   2612c:	48 89 c7             	mov    %rax,%rdi
   2612f:	ff d2                	call   *%rdx
   26131:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26135:	48 89 82 08 01 00 00 	mov    %rax,0x108(%rdx)
        vkDebugReportMessageEXT         = PFN_vkDebugReportMessageEXT( vkGetInstanceProcAddr( instance, "vkDebugReportMessageEXT" ) );
   2613c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26140:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26148:	48 8d 0d 69 c7 00 00 	lea    0xc769(%rip),%rcx        # 328b8 <_ZNSt8__detailL19__atomic_spin_countE+0x43c>
   2614f:	48 89 ce             	mov    %rcx,%rsi
   26152:	48 89 c7             	mov    %rax,%rdi
   26155:	ff d2                	call   *%rdx
   26157:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2615b:	48 89 82 10 01 00 00 	mov    %rax,0x110(%rdx)
        vkCreateDebugUtilsMessengerEXT  = PFN_vkCreateDebugUtilsMessengerEXT( vkGetInstanceProcAddr( instance, "vkCreateDebugUtilsMessengerEXT" ) );
   26162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26166:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2616a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2616e:	48 8d 0d 5b c7 00 00 	lea    0xc75b(%rip),%rcx        # 328d0 <_ZNSt8__detailL19__atomic_spin_countE+0x454>
   26175:	48 89 ce             	mov    %rcx,%rsi
   26178:	48 89 c7             	mov    %rax,%rdi
   2617b:	ff d2                	call   *%rdx
   2617d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26181:	48 89 82 18 01 00 00 	mov    %rax,0x118(%rdx)
        vkDestroyDebugUtilsMessengerEXT = PFN_vkDestroyDebugUtilsMessengerEXT( vkGetInstanceProcAddr( instance, "vkDestroyDebugUtilsMessengerEXT" ) );
   26188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2618c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26194:	48 8d 0d 55 c7 00 00 	lea    0xc755(%rip),%rcx        # 328f0 <_ZNSt8__detailL19__atomic_spin_countE+0x474>
   2619b:	48 89 ce             	mov    %rcx,%rsi
   2619e:	48 89 c7             	mov    %rax,%rdi
   261a1:	ff d2                	call   *%rdx
   261a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   261a7:	48 89 82 20 01 00 00 	mov    %rax,0x120(%rdx)
        vkSubmitDebugUtilsMessageEXT    = PFN_vkSubmitDebugUtilsMessageEXT( vkGetInstanceProcAddr( instance, "vkSubmitDebugUtilsMessageEXT" ) );
   261ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   261b2:	48 8b 50 50          	mov    0x50(%rax),%rdx
   261b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   261ba:	48 8d 0d 4f c7 00 00 	lea    0xc74f(%rip),%rcx        # 32910 <_ZNSt8__detailL19__atomic_spin_countE+0x494>
   261c1:	48 89 ce             	mov    %rcx,%rsi
   261c4:	48 89 c7             	mov    %rax,%rdi
   261c7:	ff d2                	call   *%rdx
   261c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   261cd:	48 89 82 28 01 00 00 	mov    %rax,0x128(%rdx)
        vkReleaseDisplayEXT = PFN_vkReleaseDisplayEXT( vkGetInstanceProcAddr( instance, "vkReleaseDisplayEXT" ) );
   261d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   261d8:	48 8b 50 50          	mov    0x50(%rax),%rdx
   261dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   261e0:	48 8d 0d 46 c7 00 00 	lea    0xc746(%rip),%rcx        # 3292d <_ZNSt8__detailL19__atomic_spin_countE+0x4b1>
   261e7:	48 89 ce             	mov    %rcx,%rsi
   261ea:	48 89 c7             	mov    %rax,%rdi
   261ed:	ff d2                	call   *%rdx
   261ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   261f3:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT" ) );
   261fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   261fe:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26206:	48 8d 0d 3b c7 00 00 	lea    0xc73b(%rip),%rcx        # 32948 <_ZNSt8__detailL19__atomic_spin_countE+0x4cc>
   2620d:	48 89 ce             	mov    %rcx,%rsi
   26210:	48 89 c7             	mov    %rax,%rdi
   26213:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilities2EXT =
   26215:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26219:	48 89 82 48 01 00 00 	mov    %rax,0x148(%rdx)
        vkCreateHeadlessSurfaceEXT = PFN_vkCreateHeadlessSurfaceEXT( vkGetInstanceProcAddr( instance, "vkCreateHeadlessSurfaceEXT" ) );
   26220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26224:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26228:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2622c:	48 8d 0d 40 c7 00 00 	lea    0xc740(%rip),%rcx        # 32973 <_ZNSt8__detailL19__atomic_spin_countE+0x4f7>
   26233:	48 89 ce             	mov    %rcx,%rsi
   26236:	48 89 c7             	mov    %rax,%rdi
   26239:	ff d2                	call   *%rdx
   2623b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2623f:	48 89 82 58 01 00 00 	mov    %rax,0x158(%rdx)
          PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMultisamplePropertiesEXT" ) );
   26246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2624a:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2624e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26252:	48 8d 0d 37 c7 00 00 	lea    0xc737(%rip),%rcx        # 32990 <_ZNSt8__detailL19__atomic_spin_countE+0x514>
   26259:	48 89 ce             	mov    %rcx,%rsi
   2625c:	48 89 c7             	mov    %rax,%rdi
   2625f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMultisamplePropertiesEXT =
   26261:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26265:	48 89 82 68 01 00 00 	mov    %rax,0x168(%rdx)
          PFN_vkGetPhysicalDeviceToolPropertiesEXT( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceToolPropertiesEXT" ) );
   2626c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26270:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26274:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26278:	48 8d 0d 41 c7 00 00 	lea    0xc741(%rip),%rcx        # 329c0 <_ZNSt8__detailL19__atomic_spin_countE+0x544>
   2627f:	48 89 ce             	mov    %rcx,%rsi
   26282:	48 89 c7             	mov    %rax,%rdi
   26285:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceToolPropertiesEXT =
   26287:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2628b:	48 89 82 70 01 00 00 	mov    %rax,0x170(%rdx)
        if ( !vkGetPhysicalDeviceToolProperties )
   26292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26296:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
   2629d:	48 85 c0             	test   %rax,%rax
   262a0:	75 16                	jne    262b8 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xba2>
          vkGetPhysicalDeviceToolProperties = vkGetPhysicalDeviceToolPropertiesEXT;
   262a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   262a6:	48 8b 90 70 01 00 00 	mov    0x170(%rax),%rdx
   262ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   262b1:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
          PFN_vkGetPhysicalDevicePresentRectanglesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDevicePresentRectanglesKHR" ) );
   262b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   262bc:	48 8b 50 50          	mov    0x50(%rax),%rdx
   262c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   262c4:	48 8d 0d 1d c7 00 00 	lea    0xc71d(%rip),%rcx        # 329e8 <_ZNSt8__detailL19__atomic_spin_countE+0x56c>
   262cb:	48 89 ce             	mov    %rcx,%rsi
   262ce:	48 89 c7             	mov    %rax,%rdi
   262d1:	ff d2                	call   *%rdx
        vkGetPhysicalDevicePresentRectanglesKHR =
   262d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   262d7:	48 89 82 90 01 00 00 	mov    %rax,0x190(%rdx)
        vkEnumeratePhysicalDeviceGroupsKHR = PFN_vkEnumeratePhysicalDeviceGroupsKHR( vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceGroupsKHR" ) );
   262de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   262e2:	48 8b 50 50          	mov    0x50(%rax),%rdx
   262e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   262ea:	48 8d 0d 1f c7 00 00 	lea    0xc71f(%rip),%rcx        # 32a10 <_ZNSt8__detailL19__atomic_spin_countE+0x594>
   262f1:	48 89 ce             	mov    %rcx,%rsi
   262f4:	48 89 c7             	mov    %rax,%rdi
   262f7:	ff d2                	call   *%rdx
   262f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   262fd:	48 89 82 98 01 00 00 	mov    %rax,0x198(%rdx)
        if ( !vkEnumeratePhysicalDeviceGroups )
   26304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26308:	48 8b 40 78          	mov    0x78(%rax),%rax
   2630c:	48 85 c0             	test   %rax,%rax
   2630f:	75 13                	jne    26324 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xc0e>
          vkEnumeratePhysicalDeviceGroups = vkEnumeratePhysicalDeviceGroupsKHR;
   26311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26315:	48 8b 90 98 01 00 00 	mov    0x198(%rax),%rdx
   2631c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26320:	48 89 50 78          	mov    %rdx,0x78(%rax)
          PFN_vkGetPhysicalDeviceDisplayPropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPropertiesKHR" ) );
   26324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26328:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2632c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26330:	48 8d 0d 01 c7 00 00 	lea    0xc701(%rip),%rcx        # 32a38 <_ZNSt8__detailL19__atomic_spin_countE+0x5bc>
   26337:	48 89 ce             	mov    %rcx,%rsi
   2633a:	48 89 c7             	mov    %rax,%rdi
   2633d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPropertiesKHR =
   2633f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26343:	48 89 82 a0 01 00 00 	mov    %rax,0x1a0(%rdx)
          PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR" ) );
   2634a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2634e:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26352:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26356:	48 8d 0d 03 c7 00 00 	lea    0xc703(%rip),%rcx        # 32a60 <_ZNSt8__detailL19__atomic_spin_countE+0x5e4>
   2635d:	48 89 ce             	mov    %rcx,%rsi
   26360:	48 89 c7             	mov    %rax,%rdi
   26363:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPlanePropertiesKHR =
   26365:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26369:	48 89 82 a8 01 00 00 	mov    %rax,0x1a8(%rdx)
          PFN_vkGetDisplayPlaneSupportedDisplaysKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneSupportedDisplaysKHR" ) );
   26370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26374:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2637c:	48 8d 0d 0d c7 00 00 	lea    0xc70d(%rip),%rcx        # 32a90 <_ZNSt8__detailL19__atomic_spin_countE+0x614>
   26383:	48 89 ce             	mov    %rcx,%rsi
   26386:	48 89 c7             	mov    %rax,%rdi
   26389:	ff d2                	call   *%rdx
        vkGetDisplayPlaneSupportedDisplaysKHR =
   2638b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2638f:	48 89 82 b0 01 00 00 	mov    %rax,0x1b0(%rdx)
        vkGetDisplayModePropertiesKHR    = PFN_vkGetDisplayModePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayModePropertiesKHR" ) );
   26396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2639a:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2639e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   263a2:	48 8d 0d 0d c7 00 00 	lea    0xc70d(%rip),%rcx        # 32ab6 <_ZNSt8__detailL19__atomic_spin_countE+0x63a>
   263a9:	48 89 ce             	mov    %rcx,%rsi
   263ac:	48 89 c7             	mov    %rax,%rdi
   263af:	ff d2                	call   *%rdx
   263b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   263b5:	48 89 82 b8 01 00 00 	mov    %rax,0x1b8(%rdx)
        vkCreateDisplayModeKHR           = PFN_vkCreateDisplayModeKHR( vkGetInstanceProcAddr( instance, "vkCreateDisplayModeKHR" ) );
   263bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   263c0:	48 8b 50 50          	mov    0x50(%rax),%rdx
   263c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   263c8:	48 8d 0d 05 c7 00 00 	lea    0xc705(%rip),%rcx        # 32ad4 <_ZNSt8__detailL19__atomic_spin_countE+0x658>
   263cf:	48 89 ce             	mov    %rcx,%rsi
   263d2:	48 89 c7             	mov    %rax,%rdi
   263d5:	ff d2                	call   *%rdx
   263d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   263db:	48 89 82 c0 01 00 00 	mov    %rax,0x1c0(%rdx)
        vkGetDisplayPlaneCapabilitiesKHR = PFN_vkGetDisplayPlaneCapabilitiesKHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneCapabilitiesKHR" ) );
   263e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   263e6:	48 8b 50 50          	mov    0x50(%rax),%rdx
   263ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   263ee:	48 8d 0d fb c6 00 00 	lea    0xc6fb(%rip),%rcx        # 32af0 <_ZNSt8__detailL19__atomic_spin_countE+0x674>
   263f5:	48 89 ce             	mov    %rcx,%rsi
   263f8:	48 89 c7             	mov    %rax,%rdi
   263fb:	ff d2                	call   *%rdx
   263fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26401:	48 89 82 c8 01 00 00 	mov    %rax,0x1c8(%rdx)
        vkCreateDisplayPlaneSurfaceKHR   = PFN_vkCreateDisplayPlaneSurfaceKHR( vkGetInstanceProcAddr( instance, "vkCreateDisplayPlaneSurfaceKHR" ) );
   26408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2640c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26414:	48 8d 0d fd c6 00 00 	lea    0xc6fd(%rip),%rcx        # 32b18 <_ZNSt8__detailL19__atomic_spin_countE+0x69c>
   2641b:	48 89 ce             	mov    %rcx,%rsi
   2641e:	48 89 c7             	mov    %rax,%rdi
   26421:	ff d2                	call   *%rdx
   26423:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26427:	48 89 82 d0 01 00 00 	mov    %rax,0x1d0(%rdx)
          PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalFencePropertiesKHR" ) );
   2642e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26432:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2643a:	48 8d 0d f7 c6 00 00 	lea    0xc6f7(%rip),%rcx        # 32b38 <_ZNSt8__detailL19__atomic_spin_countE+0x6bc>
   26441:	48 89 ce             	mov    %rcx,%rsi
   26444:	48 89 c7             	mov    %rax,%rdi
   26447:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalFencePropertiesKHR =
   26449:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2644d:	48 89 82 d8 01 00 00 	mov    %rax,0x1d8(%rdx)
        if ( !vkGetPhysicalDeviceExternalFenceProperties )
   26454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26458:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
   2645f:	48 85 c0             	test   %rax,%rax
   26462:	75 16                	jne    2647a <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xd64>
          vkGetPhysicalDeviceExternalFenceProperties = vkGetPhysicalDeviceExternalFencePropertiesKHR;
   26464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26468:	48 8b 90 d8 01 00 00 	mov    0x1d8(%rax),%rdx
   2646f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26473:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
          PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalBufferPropertiesKHR" ) );
   2647a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2647e:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26486:	48 8d 0d db c6 00 00 	lea    0xc6db(%rip),%rcx        # 32b68 <_ZNSt8__detailL19__atomic_spin_countE+0x6ec>
   2648d:	48 89 ce             	mov    %rcx,%rsi
   26490:	48 89 c7             	mov    %rax,%rdi
   26493:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalBufferPropertiesKHR =
   26495:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26499:	48 89 82 e0 01 00 00 	mov    %rax,0x1e0(%rdx)
        if ( !vkGetPhysicalDeviceExternalBufferProperties )
   264a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   264a4:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
   264ab:	48 85 c0             	test   %rax,%rax
   264ae:	75 16                	jne    264c6 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xdb0>
          vkGetPhysicalDeviceExternalBufferProperties = vkGetPhysicalDeviceExternalBufferPropertiesKHR;
   264b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   264b4:	48 8b 90 e0 01 00 00 	mov    0x1e0(%rax),%rdx
   264bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   264bf:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
          PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR" ) );
   264c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   264ca:	48 8b 50 50          	mov    0x50(%rax),%rdx
   264ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   264d2:	48 8d 0d bf c6 00 00 	lea    0xc6bf(%rip),%rcx        # 32b98 <_ZNSt8__detailL19__atomic_spin_countE+0x71c>
   264d9:	48 89 ce             	mov    %rcx,%rsi
   264dc:	48 89 c7             	mov    %rax,%rdi
   264df:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalSemaphorePropertiesKHR =
   264e1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   264e5:	48 89 82 e8 01 00 00 	mov    %rax,0x1e8(%rdx)
        if ( !vkGetPhysicalDeviceExternalSemaphoreProperties )
   264ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   264f0:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   264f7:	48 85 c0             	test   %rax,%rax
   264fa:	75 16                	jne    26512 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xdfc>
          vkGetPhysicalDeviceExternalSemaphoreProperties = vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
   264fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26500:	48 8b 90 e8 01 00 00 	mov    0x1e8(%rax),%rdx
   26507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2650b:	48 89 90 c8 00 00 00 	mov    %rdx,0xc8(%rax)
          PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFragmentShadingRatesKHR" ) );
   26512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26516:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2651a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2651e:	48 8d 0d ab c6 00 00 	lea    0xc6ab(%rip),%rcx        # 32bd0 <_ZNSt8__detailL19__atomic_spin_countE+0x754>
   26525:	48 89 ce             	mov    %rcx,%rsi
   26528:	48 89 c7             	mov    %rax,%rdi
   2652b:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFragmentShadingRatesKHR =
   2652d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26531:	48 89 82 f0 01 00 00 	mov    %rax,0x1f0(%rdx)
          PFN_vkGetPhysicalDeviceDisplayProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayProperties2KHR" ) );
   26538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2653c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26544:	48 8d 0d b5 c6 00 00 	lea    0xc6b5(%rip),%rcx        # 32c00 <_ZNSt8__detailL19__atomic_spin_countE+0x784>
   2654b:	48 89 ce             	mov    %rcx,%rsi
   2654e:	48 89 c7             	mov    %rax,%rdi
   26551:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayProperties2KHR =
   26553:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26557:	48 89 82 f8 01 00 00 	mov    %rax,0x1f8(%rdx)
          PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR" ) );
   2655e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26562:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26566:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2656a:	48 8d 0d bf c6 00 00 	lea    0xc6bf(%rip),%rcx        # 32c30 <_ZNSt8__detailL19__atomic_spin_countE+0x7b4>
   26571:	48 89 ce             	mov    %rcx,%rsi
   26574:	48 89 c7             	mov    %rax,%rdi
   26577:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceDisplayPlaneProperties2KHR =
   26579:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2657d:	48 89 82 00 02 00 00 	mov    %rax,0x200(%rdx)
        vkGetDisplayModeProperties2KHR    = PFN_vkGetDisplayModeProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetDisplayModeProperties2KHR" ) );
   26584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26588:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2658c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26590:	48 8d 0d c9 c6 00 00 	lea    0xc6c9(%rip),%rcx        # 32c60 <_ZNSt8__detailL19__atomic_spin_countE+0x7e4>
   26597:	48 89 ce             	mov    %rcx,%rsi
   2659a:	48 89 c7             	mov    %rax,%rdi
   2659d:	ff d2                	call   *%rdx
   2659f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   265a3:	48 89 82 08 02 00 00 	mov    %rax,0x208(%rdx)
        vkGetDisplayPlaneCapabilities2KHR = PFN_vkGetDisplayPlaneCapabilities2KHR( vkGetInstanceProcAddr( instance, "vkGetDisplayPlaneCapabilities2KHR" ) );
   265aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   265ae:	48 8b 50 50          	mov    0x50(%rax),%rdx
   265b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   265b6:	48 8d 0d c3 c6 00 00 	lea    0xc6c3(%rip),%rcx        # 32c80 <_ZNSt8__detailL19__atomic_spin_countE+0x804>
   265bd:	48 89 ce             	mov    %rcx,%rsi
   265c0:	48 89 c7             	mov    %rax,%rdi
   265c3:	ff d2                	call   *%rdx
   265c5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   265c9:	48 89 82 10 02 00 00 	mov    %rax,0x210(%rdx)
        vkGetPhysicalDeviceFeatures2KHR = PFN_vkGetPhysicalDeviceFeatures2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFeatures2KHR" ) );
   265d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   265d4:	48 8b 50 50          	mov    0x50(%rax),%rdx
   265d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   265dc:	48 8d 0d c5 c6 00 00 	lea    0xc6c5(%rip),%rcx        # 32ca8 <_ZNSt8__detailL19__atomic_spin_countE+0x82c>
   265e3:	48 89 ce             	mov    %rcx,%rsi
   265e6:	48 89 c7             	mov    %rax,%rdi
   265e9:	ff d2                	call   *%rdx
   265eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   265ef:	48 89 82 18 02 00 00 	mov    %rax,0x218(%rdx)
        if ( !vkGetPhysicalDeviceFeatures2 )
   265f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   265fa:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   26601:	48 85 c0             	test   %rax,%rax
   26604:	75 16                	jne    2661c <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf06>
          vkGetPhysicalDeviceFeatures2 = vkGetPhysicalDeviceFeatures2KHR;
   26606:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2660a:	48 8b 90 18 02 00 00 	mov    0x218(%rax),%rdx
   26611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26615:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
        vkGetPhysicalDeviceProperties2KHR = PFN_vkGetPhysicalDeviceProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceProperties2KHR" ) );
   2661c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26620:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26628:	48 8d 0d 99 c6 00 00 	lea    0xc699(%rip),%rcx        # 32cc8 <_ZNSt8__detailL19__atomic_spin_countE+0x84c>
   2662f:	48 89 ce             	mov    %rcx,%rsi
   26632:	48 89 c7             	mov    %rax,%rdi
   26635:	ff d2                	call   *%rdx
   26637:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2663b:	48 89 82 20 02 00 00 	mov    %rax,0x220(%rdx)
        if ( !vkGetPhysicalDeviceProperties2 )
   26642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26646:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   2664d:	48 85 c0             	test   %rax,%rax
   26650:	75 16                	jne    26668 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf52>
          vkGetPhysicalDeviceProperties2 = vkGetPhysicalDeviceProperties2KHR;
   26652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26656:	48 8b 90 20 02 00 00 	mov    0x220(%rax),%rdx
   2665d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26661:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
          PFN_vkGetPhysicalDeviceFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceFormatProperties2KHR" ) );
   26668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2666c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26674:	48 8d 0d 75 c6 00 00 	lea    0xc675(%rip),%rcx        # 32cf0 <_ZNSt8__detailL19__atomic_spin_countE+0x874>
   2667b:	48 89 ce             	mov    %rcx,%rsi
   2667e:	48 89 c7             	mov    %rax,%rdi
   26681:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceFormatProperties2KHR =
   26683:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26687:	48 89 82 28 02 00 00 	mov    %rax,0x228(%rdx)
        if ( !vkGetPhysicalDeviceFormatProperties2 )
   2668e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26692:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   26699:	48 85 c0             	test   %rax,%rax
   2669c:	75 16                	jne    266b4 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xf9e>
          vkGetPhysicalDeviceFormatProperties2 = vkGetPhysicalDeviceFormatProperties2KHR;
   2669e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   266a2:	48 8b 90 28 02 00 00 	mov    0x228(%rax),%rdx
   266a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   266ad:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
          PFN_vkGetPhysicalDeviceImageFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceImageFormatProperties2KHR" ) );
   266b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   266b8:	48 8b 50 50          	mov    0x50(%rax),%rdx
   266bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   266c0:	48 8d 0d 51 c6 00 00 	lea    0xc651(%rip),%rcx        # 32d18 <_ZNSt8__detailL19__atomic_spin_countE+0x89c>
   266c7:	48 89 ce             	mov    %rcx,%rsi
   266ca:	48 89 c7             	mov    %rax,%rdi
   266cd:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceImageFormatProperties2KHR =
   266cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   266d3:	48 89 82 30 02 00 00 	mov    %rax,0x230(%rdx)
        if ( !vkGetPhysicalDeviceImageFormatProperties2 )
   266da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   266de:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
   266e5:	48 85 c0             	test   %rax,%rax
   266e8:	75 16                	jne    26700 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0xfea>
          vkGetPhysicalDeviceImageFormatProperties2 = vkGetPhysicalDeviceImageFormatProperties2KHR;
   266ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   266ee:	48 8b 90 30 02 00 00 	mov    0x230(%rax),%rdx
   266f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   266f9:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)
          PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyProperties2KHR" ) );
   26700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26704:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26708:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2670c:	48 8d 0d 35 c6 00 00 	lea    0xc635(%rip),%rcx        # 32d48 <_ZNSt8__detailL19__atomic_spin_countE+0x8cc>
   26713:	48 89 ce             	mov    %rcx,%rsi
   26716:	48 89 c7             	mov    %rax,%rdi
   26719:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyProperties2KHR =
   2671b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2671f:	48 89 82 38 02 00 00 	mov    %rax,0x238(%rdx)
        if ( !vkGetPhysicalDeviceQueueFamilyProperties2 )
   26726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2672a:	48 8b 80 a0 00 00 00 	mov    0xa0(%rax),%rax
   26731:	48 85 c0             	test   %rax,%rax
   26734:	75 16                	jne    2674c <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x1036>
          vkGetPhysicalDeviceQueueFamilyProperties2 = vkGetPhysicalDeviceQueueFamilyProperties2KHR;
   26736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2673a:	48 8b 90 38 02 00 00 	mov    0x238(%rax),%rdx
   26741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26745:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
          PFN_vkGetPhysicalDeviceMemoryProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceMemoryProperties2KHR" ) );
   2674c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26750:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26758:	48 8d 0d 19 c6 00 00 	lea    0xc619(%rip),%rcx        # 32d78 <_ZNSt8__detailL19__atomic_spin_countE+0x8fc>
   2675f:	48 89 ce             	mov    %rcx,%rsi
   26762:	48 89 c7             	mov    %rax,%rdi
   26765:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceMemoryProperties2KHR =
   26767:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2676b:	48 89 82 40 02 00 00 	mov    %rax,0x240(%rdx)
        if ( !vkGetPhysicalDeviceMemoryProperties2 )
   26772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26776:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
   2677d:	48 85 c0             	test   %rax,%rax
   26780:	75 16                	jne    26798 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x1082>
          vkGetPhysicalDeviceMemoryProperties2 = vkGetPhysicalDeviceMemoryProperties2KHR;
   26782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26786:	48 8b 90 40 02 00 00 	mov    0x240(%rax),%rdx
   2678d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26791:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
          PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSparseImageFormatProperties2KHR" ) );
   26798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2679c:	48 8b 50 50          	mov    0x50(%rax),%rdx
   267a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   267a4:	48 8d 0d f5 c5 00 00 	lea    0xc5f5(%rip),%rcx        # 32da0 <_ZNSt8__detailL19__atomic_spin_countE+0x924>
   267ab:	48 89 ce             	mov    %rcx,%rsi
   267ae:	48 89 c7             	mov    %rax,%rdi
   267b1:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSparseImageFormatProperties2KHR =
   267b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   267b7:	48 89 82 48 02 00 00 	mov    %rax,0x248(%rdx)
        if ( !vkGetPhysicalDeviceSparseImageFormatProperties2 )
   267be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   267c2:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
   267c9:	48 85 c0             	test   %rax,%rax
   267cc:	75 16                	jne    267e4 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_+0x10ce>
          vkGetPhysicalDeviceSparseImageFormatProperties2 = vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
   267ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   267d2:	48 8b 90 48 02 00 00 	mov    0x248(%rax),%rdx
   267d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   267dd:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
          PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR" ) );
   267e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   267e8:	48 8b 50 50          	mov    0x50(%rax),%rdx
   267ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   267f0:	48 8d 0d e1 c5 00 00 	lea    0xc5e1(%rip),%rcx        # 32dd8 <_ZNSt8__detailL19__atomic_spin_countE+0x95c>
   267f7:	48 89 ce             	mov    %rcx,%rsi
   267fa:	48 89 c7             	mov    %rax,%rdi
   267fd:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilities2KHR =
   267ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26803:	48 89 82 50 02 00 00 	mov    %rax,0x250(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceFormats2KHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceFormats2KHR" ) );
   2680a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2680e:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26812:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26816:	48 8d 0d eb c5 00 00 	lea    0xc5eb(%rip),%rcx        # 32e08 <_ZNSt8__detailL19__atomic_spin_countE+0x98c>
   2681d:	48 89 ce             	mov    %rcx,%rsi
   26820:	48 89 c7             	mov    %rax,%rdi
   26823:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceFormats2KHR =
   26825:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26829:	48 89 82 58 02 00 00 	mov    %rax,0x258(%rdx)
          vkGetInstanceProcAddr( instance, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR" ) );
   26830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26834:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2683c:	48 8d 0d ed c5 00 00 	lea    0xc5ed(%rip),%rcx        # 32e30 <_ZNSt8__detailL19__atomic_spin_countE+0x9b4>
   26843:	48 89 ce             	mov    %rcx,%rsi
   26846:	48 89 c7             	mov    %rax,%rdi
   26849:	ff d2                	call   *%rdx
        vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(
   2684b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2684f:	48 89 82 60 02 00 00 	mov    %rax,0x260(%rdx)
          vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR" ) );
   26856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2685a:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2685e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26862:	48 8d 0d 07 c6 00 00 	lea    0xc607(%rip),%rcx        # 32e70 <_ZNSt8__detailL19__atomic_spin_countE+0x9f4>
   26869:	48 89 ce             	mov    %rcx,%rsi
   2686c:	48 89 c7             	mov    %rax,%rdi
   2686f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(
   26871:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26875:	48 89 82 68 02 00 00 	mov    %rax,0x268(%rdx)
        vkDestroySurfaceKHR = PFN_vkDestroySurfaceKHR( vkGetInstanceProcAddr( instance, "vkDestroySurfaceKHR" ) );
   2687c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26880:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26888:	48 8d 0d 19 c6 00 00 	lea    0xc619(%rip),%rcx        # 32ea8 <_ZNSt8__detailL19__atomic_spin_countE+0xa2c>
   2688f:	48 89 ce             	mov    %rcx,%rsi
   26892:	48 89 c7             	mov    %rax,%rdi
   26895:	ff d2                	call   *%rdx
   26897:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2689b:	48 89 82 70 02 00 00 	mov    %rax,0x270(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceSupportKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceSupportKHR" ) );
   268a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   268a6:	48 8b 50 50          	mov    0x50(%rax),%rdx
   268aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   268ae:	48 8d 0d 0b c6 00 00 	lea    0xc60b(%rip),%rcx        # 32ec0 <_ZNSt8__detailL19__atomic_spin_countE+0xa44>
   268b5:	48 89 ce             	mov    %rcx,%rsi
   268b8:	48 89 c7             	mov    %rax,%rdi
   268bb:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceSupportKHR =
   268bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   268c1:	48 89 82 78 02 00 00 	mov    %rax,0x278(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR" ) );
   268c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   268cc:	48 8b 50 50          	mov    0x50(%rax),%rdx
   268d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   268d4:	48 8d 0d 0d c6 00 00 	lea    0xc60d(%rip),%rcx        # 32ee8 <_ZNSt8__detailL19__atomic_spin_countE+0xa6c>
   268db:	48 89 ce             	mov    %rcx,%rsi
   268de:	48 89 c7             	mov    %rax,%rdi
   268e1:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceCapabilitiesKHR =
   268e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   268e7:	48 89 82 80 02 00 00 	mov    %rax,0x280(%rdx)
          PFN_vkGetPhysicalDeviceSurfaceFormatsKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfaceFormatsKHR" ) );
   268ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   268f2:	48 8b 50 50          	mov    0x50(%rax),%rdx
   268f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   268fa:	48 8d 0d 17 c6 00 00 	lea    0xc617(%rip),%rcx        # 32f18 <_ZNSt8__detailL19__atomic_spin_countE+0xa9c>
   26901:	48 89 ce             	mov    %rcx,%rsi
   26904:	48 89 c7             	mov    %rax,%rdi
   26907:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfaceFormatsKHR =
   26909:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2690d:	48 89 82 88 02 00 00 	mov    %rax,0x288(%rdx)
          PFN_vkGetPhysicalDeviceSurfacePresentModesKHR( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSurfacePresentModesKHR" ) );
   26914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26918:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2691c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26920:	48 8d 0d 19 c6 00 00 	lea    0xc619(%rip),%rcx        # 32f40 <_ZNSt8__detailL19__atomic_spin_countE+0xac4>
   26927:	48 89 ce             	mov    %rcx,%rsi
   2692a:	48 89 c7             	mov    %rax,%rdi
   2692d:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSurfacePresentModesKHR =
   2692f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26933:	48 89 82 90 02 00 00 	mov    %rax,0x290(%rdx)
          PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV" ) );
   2693a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2693e:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26946:	48 8d 0d 23 c6 00 00 	lea    0xc623(%rip),%rcx        # 32f70 <_ZNSt8__detailL19__atomic_spin_countE+0xaf4>
   2694d:	48 89 ce             	mov    %rcx,%rsi
   26950:	48 89 c7             	mov    %rax,%rdi
   26953:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceCooperativeMatrixPropertiesNV =
   26955:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26959:	48 89 82 10 03 00 00 	mov    %rax,0x310(%rdx)
          vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV" ) );
   26960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26964:	48 8b 50 50          	mov    0x50(%rax),%rdx
   26968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2696c:	48 8d 0d 35 c6 00 00 	lea    0xc635(%rip),%rcx        # 32fa8 <_ZNSt8__detailL19__atomic_spin_countE+0xb2c>
   26973:	48 89 ce             	mov    %rcx,%rsi
   26976:	48 89 c7             	mov    %rax,%rdi
   26979:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(
   2697b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   2697f:	48 89 82 18 03 00 00 	mov    %rax,0x318(%rdx)
          PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV" ) );
   26986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2698a:	48 8b 50 50          	mov    0x50(%rax),%rdx
   2698e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26992:	48 8d 0d 57 c6 00 00 	lea    0xc657(%rip),%rcx        # 32ff0 <_ZNSt8__detailL19__atomic_spin_countE+0xb74>
   26999:	48 89 ce             	mov    %rcx,%rsi
   2699c:	48 89 c7             	mov    %rax,%rdi
   2699f:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceExternalImageFormatPropertiesNV =
   269a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   269a5:	48 89 82 20 03 00 00 	mov    %rax,0x320(%rdx)
          PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV( vkGetInstanceProcAddr( instance, "vkGetPhysicalDeviceOpticalFlowImageFormatsNV" ) );
   269ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   269b0:	48 8b 50 50          	mov    0x50(%rax),%rdx
   269b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   269b8:	48 8d 0d 69 c6 00 00 	lea    0xc669(%rip),%rcx        # 33028 <_ZNSt8__detailL19__atomic_spin_countE+0xbac>
   269bf:	48 89 ce             	mov    %rcx,%rsi
   269c2:	48 89 c7             	mov    %rax,%rdi
   269c5:	ff d2                	call   *%rdx
        vkGetPhysicalDeviceOpticalFlowImageFormatsNV =
   269c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   269cb:	48 89 82 28 03 00 00 	mov    %rax,0x328(%rdx)
        vkGetDeviceProcAddr = PFN_vkGetDeviceProcAddr( vkGetInstanceProcAddr( instance, "vkGetDeviceProcAddr" ) );
   269d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   269d6:	48 8b 50 50          	mov    0x50(%rax),%rdx
   269da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   269de:	48 8d 0d 70 c6 00 00 	lea    0xc670(%rip),%rcx        # 33055 <_ZNSt8__detailL19__atomic_spin_countE+0xbd9>
   269e5:	48 89 ce             	mov    %rcx,%rsi
   269e8:	48 89 c7             	mov    %rax,%rdi
   269eb:	ff d2                	call   *%rdx
   269ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   269f1:	48 89 82 40 03 00 00 	mov    %rax,0x340(%rdx)
      }
   269f8:	90                   	nop
   269f9:	c9                   	leave
   269fa:	c3                   	ret
   269fb:	90                   	nop

00000000000269fc <_ZNK2vk4raii7Context13getDispatcherEv>:
      VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::ContextDispatcher const * getDispatcher() const
   269fc:	55                   	push   %rbp
   269fd:	48 89 e5             	mov    %rsp,%rbp
   26a00:	48 83 ec 10          	sub    $0x10,%rsp
   26a04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
        VULKAN_HPP_ASSERT( m_dispatcher->getVkHeaderVersion() == VK_HEADER_VERSION );
   26a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26a0c:	48 83 c0 08          	add    $0x8,%rax
   26a10:	48 89 c7             	mov    %rax,%rdi
   26a13:	e8 d6 03 00 00       	call   26dee <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEptEv>
   26a18:	48 89 c7             	mov    %rax,%rdi
   26a1b:	e8 32 fb fd ff       	call   6552 <_ZNK2vk18DispatchLoaderBase18getVkHeaderVersionEv>
   26a20:	48 3d e7 00 00 00    	cmp    $0xe7,%rax
   26a26:	74 28                	je     26a50 <_ZNK2vk4raii7Context13getDispatcherEv+0x54>
   26a28:	48 8d 05 41 c6 00 00 	lea    0xc641(%rip),%rax        # 33070 <_ZNSt8__detailL19__atomic_spin_countE+0xbf4>
   26a2f:	48 89 c1             	mov    %rax,%rcx
   26a32:	ba b1 09 00 00       	mov    $0x9b1,%edx
   26a37:	48 8d 05 82 c6 00 00 	lea    0xc682(%rip),%rax        # 330c0 <_ZNSt8__detailL19__atomic_spin_countE+0xc44>
   26a3e:	48 89 c6             	mov    %rax,%rsi
   26a41:	48 8d 05 a0 c6 00 00 	lea    0xc6a0(%rip),%rax        # 330e8 <_ZNSt8__detailL19__atomic_spin_countE+0xc6c>
   26a48:	48 89 c7             	mov    %rax,%rdi
   26a4b:	e8 c0 e6 fd ff       	call   5110 <__assert_fail@plt>
        return &*m_dispatcher;
   26a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26a54:	48 83 c0 08          	add    $0x8,%rax
   26a58:	48 89 c7             	mov    %rax,%rdi
   26a5b:	e8 a8 03 00 00       	call   26e08 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv>
      }
   26a60:	c9                   	leave
   26a61:	c3                   	ret

0000000000026a62 <_ZN2vk8InstanceC1Ev>:
    VULKAN_HPP_CONSTEXPR Instance() = default;
   26a62:	55                   	push   %rbp
   26a63:	48 89 e5             	mov    %rsp,%rbp
   26a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26a6e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   26a75:	90                   	nop
   26a76:	5d                   	pop    %rbp
   26a77:	c3                   	ret

0000000000026a78 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      Instance( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Context const &                context,
   26a78:	55                   	push   %rbp
   26a79:	48 89 e5             	mov    %rsp,%rbp
   26a7c:	41 55                	push   %r13
   26a7e:	41 54                	push   %r12
   26a80:	53                   	push   %rbx
   26a81:	48 83 ec 48          	sub    $0x48,%rsp
   26a85:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   26a89:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   26a8d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   26a91:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
   26a95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26a99:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   26aa0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26aa4:	48 89 c7             	mov    %rax,%rdi
   26aa7:	e8 b6 ff ff ff       	call   26a62 <_ZN2vk8InstanceC1Ev>
   26aac:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   26ab0:	48 89 c7             	mov    %rax,%rdi
   26ab3:	e8 be 1a ff ff       	call   18576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
   26ab8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   26abc:	48 89 42 08          	mov    %rax,0x8(%rdx)
   26ac0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26ac4:	48 83 c0 10          	add    $0x10,%rax
   26ac8:	48 89 c7             	mov    %rax,%rdi
   26acb:	e8 b2 03 00 00       	call   26e82 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>
          static_cast<VULKAN_HPP_NAMESPACE::Result>( context.getDispatcher()->vkCreateInstance( reinterpret_cast<const VkInstanceCreateInfo *>( &createInfo ),
   26ad0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26ad4:	48 89 c7             	mov    %rax,%rdi
   26ad7:	e8 20 ff ff ff       	call   269fc <_ZNK2vk4raii7Context13getDispatcherEv>
   26adc:	4c 8b 40 18          	mov    0x18(%rax),%r8
                                                                                                reinterpret_cast<VkInstance *>( &m_instance ) ) );
   26ae0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
                                                                                                reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
   26ae4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26ae8:	48 8b 48 08          	mov    0x8(%rax),%rcx
          static_cast<VULKAN_HPP_NAMESPACE::Result>( context.getDispatcher()->vkCreateInstance( reinterpret_cast<const VkInstanceCreateInfo *>( &createInfo ),
   26aec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   26af0:	48 89 ce             	mov    %rcx,%rsi
   26af3:	48 89 c7             	mov    %rax,%rdi
   26af6:	41 ff d0             	call   *%r8
   26af9:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
   26afc:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   26b00:	74 14                	je     26b16 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x9e>
          throwResultException( result, "vkCreateInstance" );
   26b02:	8b 45 dc             	mov    -0x24(%rbp),%eax
   26b05:	48 8d 15 14 c6 00 00 	lea    0xc614(%rip),%rdx        # 33120 <_ZNSt8__detailL19__atomic_spin_countE+0xca4>
   26b0c:	48 89 d6             	mov    %rdx,%rsi
   26b0f:	89 c7                	mov    %eax,%edi
   26b11:	e8 2e d9 ff ff       	call   24444 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
   26b16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26b1a:	48 8d 58 10          	lea    0x10(%rax),%rbx
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
   26b1e:	bf 48 03 00 00       	mov    $0x348,%edi
   26b23:	e8 f8 e6 fd ff       	call   5220 <_Znwm@plt>
   26b28:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
   26b2c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
   26b32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26b36:	48 89 c7             	mov    %rax,%rdi
   26b39:	e8 d4 25 fe ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
   26b3e:	49 89 c4             	mov    %rax,%r12
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
   26b41:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26b45:	48 89 c7             	mov    %rax,%rdi
   26b48:	e8 af fe ff ff       	call   269fc <_ZNK2vk4raii7Context13getDispatcherEv>
   26b4d:	48 8b 40 10          	mov    0x10(%rax),%rax
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
   26b51:	4c 89 e2             	mov    %r12,%rdx
   26b54:	48 89 c6             	mov    %rax,%rsi
   26b57:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   26b5b:	e8 b6 eb ff ff       	call   25716 <_ZN2vk4raii18InstanceDispatcherC1EPFPFvvEP12VkInstance_TPKcES5_>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
   26b60:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
   26b64:	48 89 df             	mov    %rbx,%rdi
   26b67:	e8 a8 3b fe ff       	call   a714 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EE5resetEPS2_>
      }
   26b6c:	eb 36                	jmp    26ba4 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x12c>
        m_dispatcher.reset( new VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::InstanceDispatcher( context.getDispatcher()->vkGetInstanceProcAddr,
   26b6e:	48 89 c3             	mov    %rax,%rbx
   26b71:	45 84 ed             	test   %r13b,%r13b
   26b74:	74 13                	je     26b89 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x111>
                                                                                                     static_cast<VkInstance>( m_instance ) ) );
   26b76:	be 48 03 00 00       	mov    $0x348,%esi
   26b7b:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   26b7f:	e8 ac e6 fd ff       	call   5230 <_ZdlPvm@plt>
   26b84:	eb 03                	jmp    26b89 <_ZN2vk4raii8InstanceC1ERKNS0_7ContextERKNS_18InstanceCreateInfoENS_8OptionalIKNS_19AllocationCallbacksEEE+0x111>
      }
   26b86:	48 89 c3             	mov    %rax,%rbx
   26b89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26b8d:	48 83 c0 10          	add    $0x10,%rax
   26b91:	48 89 c7             	mov    %rax,%rdi
   26b94:	e8 17 3b fe ff       	call   a6b0 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EED1Ev>
   26b99:	48 89 d8             	mov    %rbx,%rax
   26b9c:	48 89 c7             	mov    %rax,%rdi
   26b9f:	e8 fc e7 fd ff       	call   53a0 <_Unwind_Resume@plt>
   26ba4:	48 83 c4 48          	add    $0x48,%rsp
   26ba8:	5b                   	pop    %rbx
   26ba9:	41 5c                	pop    %r12
   26bab:	41 5d                	pop    %r13
   26bad:	5d                   	pop    %rbp
   26bae:	c3                   	ret
   26baf:	90                   	nop

0000000000026bb0 <_ZN2vk22DebugUtilsMessengerEXTC1Ev>:
    VULKAN_HPP_CONSTEXPR         DebugUtilsMessengerEXT() = default;
   26bb0:	55                   	push   %rbp
   26bb1:	48 89 e5             	mov    %rsp,%rbp
   26bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26bbc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   26bc3:	90                   	nop
   26bc4:	5d                   	pop    %rbp
   26bc5:	c3                   	ret

0000000000026bc6 <_ZN2vk4raii22DebugUtilsMessengerEXTC1ERKNS0_8InstanceERKNS_32DebugUtilsMessengerCreateInfoEXTENS_8OptionalIKNS_19AllocationCallbacksEEE>:
      DebugUtilsMessengerEXT( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Instance const &               instance,
   26bc6:	55                   	push   %rbp
   26bc7:	48 89 e5             	mov    %rsp,%rbp
   26bca:	41 55                	push   %r13
   26bcc:	41 54                	push   %r12
   26bce:	53                   	push   %rbx
   26bcf:	48 83 ec 38          	sub    $0x38,%rsp
   26bd3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   26bd7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   26bdb:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   26bdf:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
        : m_instance( *instance )
   26be3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26be7:	48 89 c7             	mov    %rax,%rdi
   26bea:	e8 61 07 ff ff       	call   17350 <_ZNK2vk4raii8InstancedeEv>
   26bef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   26bf3:	48 8b 00             	mov    (%rax),%rax
   26bf6:	48 89 02             	mov    %rax,(%rdx)
        , m_dispatcher( instance.getDispatcher() )
   26bf9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26bfd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   26c04:	00 
   26c05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26c09:	48 83 c0 08          	add    $0x8,%rax
   26c0d:	48 89 c7             	mov    %rax,%rdi
   26c10:	e8 9b ff ff ff       	call   26bb0 <_ZN2vk22DebugUtilsMessengerEXTC1Ev>
        , m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
   26c15:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   26c19:	48 89 c7             	mov    %rax,%rdi
   26c1c:	e8 55 19 ff ff       	call   18576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
   26c21:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   26c25:	48 89 42 10          	mov    %rax,0x10(%rdx)
        , m_dispatcher( instance.getDispatcher() )
   26c29:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26c2d:	48 89 c7             	mov    %rax,%rdi
   26c30:	e8 53 28 fe ff       	call   9488 <_ZNK2vk4raii8Instance13getDispatcherEv>
   26c35:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   26c39:	48 89 42 18          	mov    %rax,0x18(%rdx)
          instance.getDispatcher()->vkCreateDebugUtilsMessengerEXT( static_cast<VkInstance>( *instance ),
   26c3d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26c41:	48 89 c7             	mov    %rax,%rdi
   26c44:	e8 3f 28 fe ff       	call   9488 <_ZNK2vk4raii8Instance13getDispatcherEv>
   26c49:	4c 8b a0 18 01 00 00 	mov    0x118(%rax),%r12
                                                                    reinterpret_cast<VkDebugUtilsMessengerEXT *>( &m_messenger ) ) );
   26c50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26c54:	4c 8d 68 08          	lea    0x8(%rax),%r13
                                                                    reinterpret_cast<const VkAllocationCallbacks *>( m_allocator ),
   26c58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   26c5c:	48 8b 58 10          	mov    0x10(%rax),%rbx
          instance.getDispatcher()->vkCreateDebugUtilsMessengerEXT( static_cast<VkInstance>( *instance ),
   26c60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   26c64:	48 89 c7             	mov    %rax,%rdi
   26c67:	e8 e4 06 ff ff       	call   17350 <_ZNK2vk4raii8InstancedeEv>
   26c6c:	48 89 c7             	mov    %rax,%rdi
   26c6f:	e8 9e 24 fe ff       	call   9112 <_ZNK2vk8InstancecvP12VkInstance_TEv>
   26c74:	48 89 c7             	mov    %rax,%rdi
   26c77:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   26c7b:	4c 89 e9             	mov    %r13,%rcx
   26c7e:	48 89 da             	mov    %rbx,%rdx
   26c81:	48 89 c6             	mov    %rax,%rsi
   26c84:	41 ff d4             	call   *%r12
   26c87:	89 45 dc             	mov    %eax,-0x24(%rbp)
        if ( result != VULKAN_HPP_NAMESPACE::Result::eSuccess )
   26c8a:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   26c8e:	74 14                	je     26ca4 <_ZN2vk4raii22DebugUtilsMessengerEXTC1ERKNS0_8InstanceERKNS_32DebugUtilsMessengerCreateInfoEXTENS_8OptionalIKNS_19AllocationCallbacksEEE+0xde>
          throwResultException( result, "vkCreateDebugUtilsMessengerEXT" );
   26c90:	8b 45 dc             	mov    -0x24(%rbp),%eax
   26c93:	48 8d 15 36 bc 00 00 	lea    0xbc36(%rip),%rdx        # 328d0 <_ZNSt8__detailL19__atomic_spin_countE+0x454>
   26c9a:	48 89 d6             	mov    %rdx,%rsi
   26c9d:	89 c7                	mov    %eax,%edi
   26c9f:	e8 a0 d7 ff ff       	call   24444 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>
      }
   26ca4:	90                   	nop
   26ca5:	48 83 c4 38          	add    $0x38,%rsp
   26ca9:	5b                   	pop    %rbx
   26caa:	41 5c                	pop    %r12
   26cac:	41 5d                	pop    %r13
   26cae:	5d                   	pop    %rbp
   26caf:	c3                   	ret

0000000000026cb0 <_ZN2vk4raii10SurfaceKHRC1ERKNS0_8InstanceEP14VkSurfaceKHR_TNS_8OptionalIKNS_19AllocationCallbacksEEE>:
      SurfaceKHR( VULKAN_HPP_NAMESPACE::VULKAN_HPP_RAII_NAMESPACE::Instance const &               instance,
   26cb0:	55                   	push   %rbp
   26cb1:	48 89 e5             	mov    %rsp,%rbp
   26cb4:	48 83 ec 20          	sub    $0x20,%rsp
   26cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   26cc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   26cc4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
        : m_instance( *instance )
   26cc8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26ccc:	48 89 c7             	mov    %rax,%rdi
   26ccf:	e8 7c 06 ff ff       	call   17350 <_ZNK2vk4raii8InstancedeEv>
   26cd4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26cd8:	48 8b 00             	mov    (%rax),%rax
   26cdb:	48 89 02             	mov    %rax,(%rdx)
        , m_surface( surface )
   26cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26ce2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   26ce6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26cea:	48 89 c6             	mov    %rax,%rsi
   26ced:	48 89 d7             	mov    %rdx,%rdi
   26cf0:	e8 07 ea ff ff       	call   256fc <_ZN2vk10SurfaceKHRC1EP14VkSurfaceKHR_T>
        , m_allocator( static_cast<const VULKAN_HPP_NAMESPACE::AllocationCallbacks *>( allocator ) )
   26cf5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   26cf9:	48 89 c7             	mov    %rax,%rdi
   26cfc:	e8 75 18 ff ff       	call   18576 <_ZNK2vk8OptionalIKNS_19AllocationCallbacksEEcvPS2_Ev>
   26d01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26d05:	48 89 42 10          	mov    %rax,0x10(%rdx)
        , m_dispatcher( instance.getDispatcher() )
   26d09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26d0d:	48 89 c7             	mov    %rax,%rdi
   26d10:	e8 73 27 fe ff       	call   9488 <_ZNK2vk4raii8Instance13getDispatcherEv>
   26d15:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26d19:	48 89 42 18          	mov    %rax,0x18(%rdx)
      }
   26d1d:	90                   	nop
   26d1e:	c9                   	leave
   26d1f:	c3                   	ret

0000000000026d20 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE17_Vector_impl_dataC2Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   26d20:	55                   	push   %rbp
   26d21:	48 89 e5             	mov    %rsp,%rbp
   26d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   26d28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d2c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   26d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d37:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   26d3e:	00 
   26d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d43:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   26d4a:	00 
	{ }
   26d4b:	90                   	nop
   26d4c:	5d                   	pop    %rbp
   26d4d:	c3                   	ret

0000000000026d4e <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
   26d4e:	55                   	push   %rbp
   26d4f:	48 89 e5             	mov    %rsp,%rbp
   26d52:	48 83 ec 10          	sub    $0x10,%rsp
   26d56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26d5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
   26d5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26d62:	48 89 c7             	mov    %rax,%rdi
   26d65:	e8 9a f4 fd ff       	call   6204 <_ZNSt11char_traitsIcE6lengthEPKc>
   26d6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   26d6e:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
   26d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   26d79:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
   26d7d:	90                   	nop
   26d7e:	c9                   	leave
   26d7f:	c3                   	ret

0000000000026d80 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4dataEv>:
	__glibcxx_assert(this->_M_len > 0);
	return *(this->_M_str + this->_M_len - 1);
      }

      constexpr const_pointer
      data() const noexcept
   26d80:	55                   	push   %rbp
   26d81:	48 89 e5             	mov    %rsp,%rbp
   26d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_str; }
   26d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d8c:	48 8b 40 08          	mov    0x8(%rax),%rax
   26d90:	5d                   	pop    %rbp
   26d91:	c3                   	ret

0000000000026d92 <_ZN2vk5FlagsINS_36DebugUtilsMessengerCreateFlagBitsEXTEEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
   26d92:	55                   	push   %rbp
   26d93:	48 89 e5             	mov    %rsp,%rbp
   26d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26d9e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   26da4:	90                   	nop
   26da5:	5d                   	pop    %rbp
   26da6:	c3                   	ret
   26da7:	90                   	nop

0000000000026da8 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   26da8:	55                   	push   %rbp
   26da9:	48 89 e5             	mov    %rsp,%rbp
   26dac:	48 83 ec 10          	sub    $0x10,%rsp
   26db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   26db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26db8:	48 8b 10             	mov    (%rax),%rdx
   26dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26dbf:	48 89 d6             	mov    %rdx,%rsi
   26dc2:	48 89 c7             	mov    %rax,%rdi
   26dc5:	e8 28 27 ff ff       	call   194f2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   26dca:	c9                   	leave
   26dcb:	c3                   	ret

0000000000026dcc <_ZN2vk6ignoreINS_6ResultEEEvRKT_>:
  void ignore( T const & ) VULKAN_HPP_NOEXCEPT
   26dcc:	55                   	push   %rbp
   26dcd:	48 89 e5             	mov    %rsp,%rbp
   26dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  }
   26dd4:	90                   	nop
   26dd5:	5d                   	pop    %rbp
   26dd6:	c3                   	ret
   26dd7:	90                   	nop

0000000000026dd8 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ev>:
    VULKAN_HPP_CONSTEXPR Flags() VULKAN_HPP_NOEXCEPT : m_mask( 0 ) {}
   26dd8:	55                   	push   %rbp
   26dd9:	48 89 e5             	mov    %rsp,%rbp
   26ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26de4:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   26dea:	90                   	nop
   26deb:	5d                   	pop    %rbp
   26dec:	c3                   	ret
   26ded:	90                   	nop

0000000000026dee <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEptEv>:
      operator->() const noexcept
   26dee:	55                   	push   %rbp
   26def:	48 89 e5             	mov    %rsp,%rbp
   26df2:	48 83 ec 10          	sub    $0x10,%rsp
   26df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
   26dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26dfe:	48 89 c7             	mov    %rax,%rdi
   26e01:	e8 24 02 00 00       	call   2702a <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
      }
   26e06:	c9                   	leave
   26e07:	c3                   	ret

0000000000026e08 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
   26e08:	55                   	push   %rbp
   26e09:	48 89 e5             	mov    %rsp,%rbp
   26e0c:	48 83 ec 10          	sub    $0x10,%rsp
   26e10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
   26e14:	e8 85 f3 fd ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   26e19:	84 c0                	test   %al,%al
   26e1b:	74 18                	je     26e35 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
   26e1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26e21:	48 89 c7             	mov    %rax,%rdi
   26e24:	e8 01 02 00 00       	call   2702a <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
   26e29:	48 85 c0             	test   %rax,%rax
   26e2c:	75 07                	jne    26e35 <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x2d>
   26e2e:	b8 01 00 00 00       	mov    $0x1,%eax
   26e33:	eb 05                	jmp    26e3a <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEdeEv+0x32>
   26e35:	b8 00 00 00 00       	mov    $0x0,%eax
   26e3a:	84 c0                	test   %al,%al
	return *get();
   26e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26e40:	48 89 c7             	mov    %rax,%rdi
   26e43:	e8 e2 01 00 00       	call   2702a <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>
      }
   26e48:	c9                   	leave
   26e49:	c3                   	ret

0000000000026e4a <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1Ev>:
      __uniq_ptr_impl() = default;
   26e4a:	55                   	push   %rbp
   26e4b:	48 89 e5             	mov    %rsp,%rbp
   26e4e:	48 83 ec 10          	sub    $0x10,%rsp
   26e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26e5a:	48 89 c7             	mov    %rax,%rdi
   26e5d:	e8 e2 01 00 00       	call   27044 <_ZNSt5tupleIJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>
   26e62:	90                   	nop
   26e63:	c9                   	leave
   26e64:	c3                   	ret
   26e65:	90                   	nop

0000000000026e66 <_ZNSt15__uniq_ptr_dataIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
   26e66:	55                   	push   %rbp
   26e67:	48 89 e5             	mov    %rsp,%rbp
   26e6a:	48 83 ec 10          	sub    $0x10,%rsp
   26e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26e76:	48 89 c7             	mov    %rax,%rdi
   26e79:	e8 cc ff ff ff       	call   26e4a <_ZNSt15__uniq_ptr_implIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1Ev>
   26e7e:	90                   	nop
   26e7f:	c9                   	leave
   26e80:	c3                   	ret
   26e81:	90                   	nop

0000000000026e82 <_ZNSt10unique_ptrIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEC1IS4_vEEv>:
	constexpr unique_ptr() noexcept
   26e82:	55                   	push   %rbp
   26e83:	48 89 e5             	mov    %rsp,%rbp
   26e86:	48 83 ec 10          	sub    $0x10,%rsp
   26e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
   26e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26e92:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   26e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26e9d:	48 89 c7             	mov    %rax,%rdi
   26ea0:	e8 c1 ff ff ff       	call   26e66 <_ZNSt15__uniq_ptr_dataIN2vk4raii18InstanceDispatcherESt14default_deleteIS2_ELb1ELb1EECI1St15__uniq_ptr_implIS2_S4_EEv>
	{ }
   26ea5:	90                   	nop
   26ea6:	c9                   	leave
   26ea7:	c3                   	ret

0000000000026ea8 <_ZNK2vk14ArrayWrapper1DIcLm256EEcvSt17basic_string_viewIcSt11char_traitsIcEEIcLi0EEEv>:
    operator std::string_view() const
   26ea8:	55                   	push   %rbp
   26ea9:	48 89 e5             	mov    %rsp,%rbp
   26eac:	48 83 ec 20          	sub    $0x20,%rsp
   26eb0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      return std::string_view( this->data() );
   26eb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26eb8:	48 89 c7             	mov    %rax,%rdi
   26ebb:	e8 aa 3d ff ff       	call   1ac6a <_ZNKSt5arrayIcLm256EE4dataEv>
   26ec0:	48 89 c2             	mov    %rax,%rdx
   26ec3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   26ec7:	48 89 d6             	mov    %rdx,%rsi
   26eca:	48 89 c7             	mov    %rax,%rdi
   26ecd:	e8 7c fe ff ff       	call   26d4e <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
   26ed2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   26ed6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    }
   26eda:	c9                   	leave
   26edb:	c3                   	ret

0000000000026edc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      size() const noexcept
   26edc:	55                   	push   %rbp
   26edd:	48 89 e5             	mov    %rsp,%rbp
   26ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
   26ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26ee8:	48 8b 00             	mov    (%rax),%rax
   26eeb:	5d                   	pop    %rbp
   26eec:	c3                   	ret

0000000000026eed <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
   26eed:	55                   	push   %rbp
   26eee:	48 89 e5             	mov    %rsp,%rbp
   26ef1:	53                   	push   %rbx
   26ef2:	48 83 ec 28          	sub    $0x28,%rsp
   26ef6:	48 89 f0             	mov    %rsi,%rax
   26ef9:	49 89 f8             	mov    %rdi,%r8
   26efc:	4c 89 c6             	mov    %r8,%rsi
   26eff:	4c 89 cf             	mov    %r9,%rdi
   26f02:	48 89 c7             	mov    %rax,%rdi
   26f05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   26f09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   26f0d:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   26f11:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
   26f15:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   26f19:	48 89 c7             	mov    %rax,%rdi
   26f1c:	e8 bb ff ff ff       	call   26edc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
   26f21:	48 89 c3             	mov    %rax,%rbx
   26f24:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   26f28:	48 89 c7             	mov    %rax,%rdi
   26f2b:	e8 ac ff ff ff       	call   26edc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
   26f30:	48 39 c3             	cmp    %rax,%rbx
   26f33:	75 22                	jne    26f57 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
   26f35:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   26f39:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   26f3d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   26f41:	48 89 ce             	mov    %rcx,%rsi
   26f44:	48 89 c7             	mov    %rax,%rdi
   26f47:	e8 3a 01 00 00       	call   27086 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
   26f4c:	85 c0                	test   %eax,%eax
   26f4e:	75 07                	jne    26f57 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
   26f50:	b8 01 00 00 00       	mov    $0x1,%eax
   26f55:	eb 05                	jmp    26f5c <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
   26f57:	b8 00 00 00 00       	mov    $0x0,%eax
   26f5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   26f60:	c9                   	leave
   26f61:	c3                   	ret

0000000000026f62 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   26f62:	55                   	push   %rbp
   26f63:	48 89 e5             	mov    %rsp,%rbp
   26f66:	53                   	push   %rbx
   26f67:	48 83 ec 28          	sub    $0x28,%rsp
   26f6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   26f6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   26f73:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   26f77:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   26f7b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   26f7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   26f83:	48 89 d6             	mov    %rdx,%rsi
   26f86:	48 89 c7             	mov    %rax,%rdi
   26f89:	e8 36 0f ff ff       	call   17ec4 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   26f8e:	48 89 c1             	mov    %rax,%rcx
   26f91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   26f95:	48 89 c2             	mov    %rax,%rdx
   26f98:	48 89 ce             	mov    %rcx,%rsi
   26f9b:	48 89 df             	mov    %rbx,%rdi
   26f9e:	e8 5f 01 00 00       	call   27102 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   26fa3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   26fa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26fab:	48 89 d6             	mov    %rdx,%rsi
   26fae:	48 89 c7             	mov    %rax,%rdi
   26fb1:	e8 aa 01 00 00       	call   27160 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
   26fb6:	eb 1a                	jmp    26fd2 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
   26fb8:	48 89 c3             	mov    %rax,%rbx
   26fbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   26fbf:	48 89 c7             	mov    %rax,%rdi
   26fc2:	e8 97 1f ff ff       	call   18f5e <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   26fc7:	48 89 d8             	mov    %rbx,%rax
   26fca:	48 89 c7             	mov    %rax,%rdi
   26fcd:	e8 ce e3 fd ff       	call   53a0 <_Unwind_Resume@plt>
   26fd2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   26fd6:	c9                   	leave
   26fd7:	c3                   	ret

0000000000026fd8 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   26fd8:	55                   	push   %rbp
   26fd9:	48 89 e5             	mov    %rsp,%rbp
   26fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   26fe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   26fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   26fe8:	48 8b 00             	mov    (%rax),%rax
   26feb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   26fef:	48 c1 e2 03          	shl    $0x3,%rdx
   26ff3:	48 01 d0             	add    %rdx,%rax
      }
   26ff6:	5d                   	pop    %rbp
   26ff7:	c3                   	ret

0000000000026ff8 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
   26ff8:	55                   	push   %rbp
   26ff9:	48 89 e5             	mov    %rsp,%rbp
   26ffc:	48 83 ec 10          	sub    $0x10,%rsp
   27000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
   27008:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   2700c:	48 89 c7             	mov    %rax,%rdi
   2700f:	e8 8c 01 00 00       	call   271a0 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
   27014:	48 89 c2             	mov    %rax,%rdx
   27017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2701b:	48 89 d6             	mov    %rdx,%rsi
   2701e:	48 89 c7             	mov    %rax,%rdi
   27021:	e8 88 01 00 00       	call   271ae <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
   27026:	90                   	nop
   27027:	c9                   	leave
   27028:	c3                   	ret
   27029:	90                   	nop

000000000002702a <_ZNKSt10unique_ptrIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE3getEv>:
      get() const noexcept
   2702a:	55                   	push   %rbp
   2702b:	48 89 e5             	mov    %rsp,%rbp
   2702e:	48 83 ec 10          	sub    $0x10,%rsp
   27032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
   27036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2703a:	48 89 c7             	mov    %rax,%rdi
   2703d:	e8 10 02 00 00       	call   27252 <_ZNKSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>
   27042:	c9                   	leave
   27043:	c3                   	ret

0000000000027044 <_ZNSt5tupleIJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1ILb1ELb1EEEv>:
	tuple()
   27044:	55                   	push   %rbp
   27045:	48 89 e5             	mov    %rsp,%rbp
   27048:	48 83 ec 10          	sub    $0x10,%rsp
   2704c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
   27050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27054:	48 89 c7             	mov    %rax,%rdi
   27057:	e8 14 02 00 00       	call   27270 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1Ev>
   2705c:	90                   	nop
   2705d:	c9                   	leave
   2705e:	c3                   	ret
   2705f:	90                   	nop

0000000000027060 <_ZNSaIN2vk15LayerPropertiesEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   27060:	55                   	push   %rbp
   27061:	48 89 e5             	mov    %rsp,%rbp
   27064:	48 83 ec 10          	sub    $0x10,%rsp
   27068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2706c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   27070:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27078:	48 89 d6             	mov    %rdx,%rsi
   2707b:	48 89 c7             	mov    %rax,%rdi
   2707e:	e8 15 02 00 00       	call   27298 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEEC1ERKS2_>
   27083:	90                   	nop
   27084:	c9                   	leave
   27085:	c3                   	ret

0000000000027086 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
   27086:	55                   	push   %rbp
   27087:	48 89 e5             	mov    %rsp,%rbp
   2708a:	48 83 ec 30          	sub    $0x30,%rsp
   2708e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27092:	48 89 d1             	mov    %rdx,%rcx
   27095:	48 89 f0             	mov    %rsi,%rax
   27098:	48 89 fa             	mov    %rdi,%rdx
   2709b:	48 89 ca             	mov    %rcx,%rdx
   2709e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   270a2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
   270a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   270aa:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   270ae:	48 89 d6             	mov    %rdx,%rsi
   270b1:	48 89 c7             	mov    %rax,%rdi
   270b4:	e8 c1 0e ff ff       	call   17f7a <_ZSt3minImERKT_S2_S2_>
   270b9:	48 8b 00             	mov    (%rax),%rax
   270bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
   270c0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   270c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   270c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   270cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   270d0:	48 89 ce             	mov    %rcx,%rsi
   270d3:	48 89 c7             	mov    %rax,%rdi
   270d6:	e8 06 95 fe ff       	call   105e1 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
   270db:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
   270de:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   270e2:	75 19                	jne    270fd <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
   270e4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   270e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   270ec:	48 8b 00             	mov    (%rax),%rax
   270ef:	48 89 d6             	mov    %rdx,%rsi
   270f2:	48 89 c7             	mov    %rax,%rdi
   270f5:	e8 9d 02 00 00       	call   27397 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
   270fa:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
   270fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
   27100:	c9                   	leave
   27101:	c3                   	ret

0000000000027102 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   27102:	55                   	push   %rbp
   27103:	48 89 e5             	mov    %rsp,%rbp
   27106:	53                   	push   %rbx
   27107:	48 83 ec 28          	sub    $0x28,%rsp
   2710b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2710f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27113:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   27117:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2711b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2711f:	48 89 d6             	mov    %rdx,%rsi
   27122:	48 89 c7             	mov    %rax,%rdi
   27125:	e8 70 0b ff ff       	call   17c9a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   2712a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2712e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27132:	48 89 d6             	mov    %rdx,%rsi
   27135:	48 89 c7             	mov    %rax,%rdi
   27138:	e8 a1 02 00 00       	call   273de <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
   2713d:	eb 1a                	jmp    27159 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
   2713f:	48 89 c3             	mov    %rax,%rbx
   27142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27146:	48 89 c7             	mov    %rax,%rdi
   27149:	e8 0a 0b ff ff       	call   17c58 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
   2714e:	48 89 d8             	mov    %rbx,%rax
   27151:	48 89 c7             	mov    %rax,%rdi
   27154:	e8 47 e2 fd ff       	call   53a0 <_Unwind_Resume@plt>
   27159:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2715d:	c9                   	leave
   2715e:	c3                   	ret
   2715f:	90                   	nop

0000000000027160 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   27160:	55                   	push   %rbp
   27161:	48 89 e5             	mov    %rsp,%rbp
   27164:	48 83 ec 10          	sub    $0x10,%rsp
   27168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2716c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   27170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27174:	48 89 c7             	mov    %rax,%rdi
   27177:	e8 3a 0d ff ff       	call   17eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   2717c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   2717f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27183:	48 8b 00             	mov    (%rax),%rax
   27186:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   2718a:	48 89 ce             	mov    %rcx,%rsi
   2718d:	48 89 c7             	mov    %rax,%rdi
   27190:	e8 9f 02 00 00       	call   27434 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   27195:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27199:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   2719d:	90                   	nop
   2719e:	c9                   	leave
   2719f:	c3                   	ret

00000000000271a0 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   271a0:	55                   	push   %rbp
   271a1:	48 89 e5             	mov    %rsp,%rbp
   271a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   271a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   271ac:	5d                   	pop    %rbp
   271ad:	c3                   	ret

00000000000271ae <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   271ae:	55                   	push   %rbp
   271af:	48 89 e5             	mov    %rsp,%rbp
   271b2:	53                   	push   %rbx
   271b3:	48 83 ec 18          	sub    $0x18,%rsp
   271b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   271bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   271bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   271c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   271c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   271cb:	48 8b 40 10          	mov    0x10(%rax),%rax
   271cf:	48 39 c2             	cmp    %rax,%rdx
   271d2:	74 3c                	je     27210 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   271d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   271d8:	48 89 c7             	mov    %rax,%rdi
   271db:	e8 7d 02 00 00       	call   2745d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   271e0:	48 89 c2             	mov    %rax,%rdx
   271e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   271e7:	48 8b 48 08          	mov    0x8(%rax),%rcx
   271eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   271ef:	48 89 ce             	mov    %rcx,%rsi
   271f2:	48 89 c7             	mov    %rax,%rdi
   271f5:	e8 71 02 00 00       	call   2746b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   271fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   271fe:	48 8b 40 08          	mov    0x8(%rax),%rax
   27202:	48 8d 50 08          	lea    0x8(%rax),%rdx
   27206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2720a:	48 89 50 08          	mov    %rdx,0x8(%rax)
   2720e:	eb 30                	jmp    27240 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   27210:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27214:	48 89 c7             	mov    %rax,%rdi
   27217:	e8 41 02 00 00       	call   2745d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   2721c:	48 89 c3             	mov    %rax,%rbx
   2721f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27223:	48 89 c7             	mov    %rax,%rdi
   27226:	e8 75 02 00 00       	call   274a0 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   2722b:	48 89 c1             	mov    %rax,%rcx
   2722e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27232:	48 89 da             	mov    %rbx,%rdx
   27235:	48 89 ce             	mov    %rcx,%rsi
   27238:	48 89 c7             	mov    %rax,%rdi
   2723b:	e8 ba 03 00 00       	call   275fa <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   27240:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27244:	48 89 c7             	mov    %rax,%rdi
   27247:	e8 40 05 00 00       	call   2778c <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   2724c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   27250:	c9                   	leave
   27251:	c3                   	ret

0000000000027252 <_ZNKSt15__uniq_ptr_implIN2vk4raii17ContextDispatcherESt14default_deleteIS2_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
   27252:	55                   	push   %rbp
   27253:	48 89 e5             	mov    %rsp,%rbp
   27256:	48 83 ec 10          	sub    $0x10,%rsp
   2725a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   2725e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27262:	48 89 c7             	mov    %rax,%rdi
   27265:	e8 61 05 00 00       	call   277cb <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>
   2726a:	48 8b 00             	mov    (%rax),%rax
   2726d:	c9                   	leave
   2726e:	c3                   	ret
   2726f:	90                   	nop

0000000000027270 <_ZNSt11_Tuple_implILm0EJPN2vk4raii18InstanceDispatcherESt14default_deleteIS2_EEEC1Ev>:
      constexpr _Tuple_impl()
   27270:	55                   	push   %rbp
   27271:	48 89 e5             	mov    %rsp,%rbp
   27274:	48 83 ec 10          	sub    $0x10,%rsp
   27278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
   2727c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27280:	48 89 c7             	mov    %rax,%rdi
   27283:	e8 5e 05 00 00       	call   277e6 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEEC1Ev>
   27288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2728c:	48 89 c7             	mov    %rax,%rdi
   2728f:	e8 6e 05 00 00       	call   27802 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EEC1Ev>
   27294:	90                   	nop
   27295:	c9                   	leave
   27296:	c3                   	ret
   27297:	90                   	nop

0000000000027298 <_ZNSt15__new_allocatorIN2vk15LayerPropertiesEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   27298:	55                   	push   %rbp
   27299:	48 89 e5             	mov    %rsp,%rbp
   2729c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   272a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   272a4:	90                   	nop
   272a5:	5d                   	pop    %rbp
   272a6:	c3                   	ret
   272a7:	90                   	nop

00000000000272a8 <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
   272a8:	55                   	push   %rbp
   272a9:	48 89 e5             	mov    %rsp,%rbp
   272ac:	41 55                	push   %r13
   272ae:	41 54                	push   %r12
   272b0:	53                   	push   %rbx
   272b1:	48 83 ec 28          	sub    $0x28,%rsp
   272b5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   272b9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
   272bd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   272c1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   272c5:	48 89 c7             	mov    %rax,%rdi
   272c8:	e8 5d 54 ff ff       	call   1c72a <_ZNKSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   272cd:	48 89 c2             	mov    %rax,%rdx
   272d0:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   272d4:	48 89 d6             	mov    %rdx,%rsi
   272d7:	48 89 c7             	mov    %rax,%rdi
   272da:	e8 39 05 00 00       	call   27818 <_ZN9__gnu_cxx14__alloc_traitsISaIN2vk15LayerPropertiesEES2_E17_S_select_on_copyERKS3_>
   272df:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   272e3:	48 89 c7             	mov    %rax,%rdi
   272e6:	e8 45 1c ff ff       	call   18f30 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE4sizeEv>
   272eb:	48 89 c1             	mov    %rax,%rcx
   272ee:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   272f2:	48 89 c2             	mov    %rax,%rdx
   272f5:	48 89 ce             	mov    %rcx,%rsi
   272f8:	48 89 df             	mov    %rbx,%rdi
   272fb:	e8 42 05 00 00       	call   27842 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EEC1EmRKS2_>
   27300:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   27304:	48 89 c7             	mov    %rax,%rdi
   27307:	e8 c6 1a ff ff       	call   18dd2 <_ZNSaIN2vk15LayerPropertiesEED1Ev>
				      _M_get_Tp_allocator());
   2730c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   27310:	48 89 c7             	mov    %rax,%rdi
   27313:	e8 b2 33 ff ff       	call   1a6ca <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE19_M_get_Tp_allocatorEv>
   27318:	49 89 c5             	mov    %rax,%r13
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
   2731b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2731f:	48 8b 18             	mov    (%rax),%rbx
   27322:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   27326:	48 89 c7             	mov    %rax,%rdi
   27329:	e8 98 05 00 00       	call   278c6 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE3endEv>
   2732e:	49 89 c4             	mov    %rax,%r12
   27331:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   27335:	48 89 c7             	mov    %rax,%rdi
   27338:	e8 63 05 00 00       	call   278a0 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE5beginEv>
   2733d:	4c 89 e9             	mov    %r13,%rcx
   27340:	48 89 da             	mov    %rbx,%rdx
   27343:	4c 89 e6             	mov    %r12,%rsi
   27346:	48 89 c7             	mov    %rax,%rdi
   27349:	e8 a1 05 00 00       	call   278ef <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
	this->_M_impl._M_finish =
   2734e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   27352:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   27356:	eb 34                	jmp    2738c <_ZNSt6vectorIN2vk15LayerPropertiesESaIS1_EEC1ERKS3_+0xe4>
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
   27358:	48 89 c3             	mov    %rax,%rbx
   2735b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   2735f:	48 89 c7             	mov    %rax,%rdi
   27362:	e8 6b 1a ff ff       	call   18dd2 <_ZNSaIN2vk15LayerPropertiesEED1Ev>
   27367:	48 89 d8             	mov    %rbx,%rax
   2736a:	48 89 c7             	mov    %rax,%rdi
   2736d:	e8 2e e0 fd ff       	call   53a0 <_Unwind_Resume@plt>
      }
   27372:	48 89 c3             	mov    %rax,%rbx
   27375:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   27379:	48 89 c7             	mov    %rax,%rdi
   2737c:	e8 5d 1a ff ff       	call   18dde <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EED1Ev>
   27381:	48 89 d8             	mov    %rbx,%rax
   27384:	48 89 c7             	mov    %rax,%rdi
   27387:	e8 14 e0 fd ff       	call   53a0 <_Unwind_Resume@plt>
   2738c:	48 83 c4 28          	add    $0x28,%rsp
   27390:	5b                   	pop    %rbx
   27391:	41 5c                	pop    %r12
   27393:	41 5d                	pop    %r13
   27395:	5d                   	pop    %rbp
   27396:	c3                   	ret

0000000000027397 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
   27397:	55                   	push   %rbp
   27398:	48 89 e5             	mov    %rsp,%rbp
   2739b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2739f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
   273a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   273a7:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   273ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
   273af:	b8 00 00 00 80       	mov    $0x80000000,%eax
   273b4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   273b8:	7c 07                	jl     273c1 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
   273ba:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   273bf:	eb 1b                	jmp    273dc <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
   273c1:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
   273c8:	ff ff ff 
   273cb:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   273cf:	7f 07                	jg     273d8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
   273d1:	b8 00 00 00 80       	mov    $0x80000000,%eax
   273d6:	eb 04                	jmp    273dc <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
   273d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   273dc:	5d                   	pop    %rbp
   273dd:	c3                   	ret

00000000000273de <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   273de:	55                   	push   %rbp
   273df:	48 89 e5             	mov    %rsp,%rbp
   273e2:	48 83 ec 10          	sub    $0x10,%rsp
   273e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   273ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   273ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   273f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   273f6:	48 89 d6             	mov    %rdx,%rsi
   273f9:	48 89 c7             	mov    %rax,%rdi
   273fc:	e8 a5 0b ff ff       	call   17fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   27401:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27405:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   27408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2740c:	48 8b 10             	mov    (%rax),%rdx
   2740f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27413:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   27417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2741b:	48 8b 00             	mov    (%rax),%rax
   2741e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27422:	48 c1 e2 03          	shl    $0x3,%rdx
   27426:	48 01 c2             	add    %rax,%rdx
   27429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2742d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   27431:	90                   	nop
   27432:	c9                   	leave
   27433:	c3                   	ret

0000000000027434 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   27434:	55                   	push   %rbp
   27435:	48 89 e5             	mov    %rsp,%rbp
   27438:	48 83 ec 20          	sub    $0x20,%rsp
   2743c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27440:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27444:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   27448:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   2744c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27450:	48 89 d6             	mov    %rdx,%rsi
   27453:	48 89 c7             	mov    %rax,%rdi
   27456:	e8 e8 04 00 00       	call   27943 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
   2745b:	c9                   	leave
   2745c:	c3                   	ret

000000000002745d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   2745d:	55                   	push   %rbp
   2745e:	48 89 e5             	mov    %rsp,%rbp
   27461:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   27465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27469:	5d                   	pop    %rbp
   2746a:	c3                   	ret

000000000002746b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   2746b:	55                   	push   %rbp
   2746c:	48 89 e5             	mov    %rsp,%rbp
   2746f:	48 83 ec 20          	sub    $0x20,%rsp
   27473:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27477:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2747b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   2747f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27483:	48 89 c7             	mov    %rax,%rdi
   27486:	e8 d2 ff ff ff       	call   2745d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   2748b:	48 89 c2             	mov    %rax,%rdx
   2748e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27492:	48 89 d6             	mov    %rdx,%rsi
   27495:	48 89 c7             	mov    %rax,%rdi
   27498:	e8 cf 04 00 00       	call   2796c <_ZSt12construct_atIPKcJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	}
   2749d:	90                   	nop
   2749e:	c9                   	leave
   2749f:	c3                   	ret

00000000000274a0 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   274a0:	55                   	push   %rbp
   274a1:	48 89 e5             	mov    %rsp,%rbp
   274a4:	48 83 ec 20          	sub    $0x20,%rsp
   274a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   274ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   274b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   274b4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   274b8:	48 89 d6             	mov    %rdx,%rsi
   274bb:	48 89 c7             	mov    %rax,%rdi
   274be:	e8 e9 04 00 00       	call   279ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   274c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   274c7:	c9                   	leave
   274c8:	c3                   	ret
   274c9:	90                   	nop

00000000000274ca <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   274ca:	55                   	push   %rbp
   274cb:	48 89 e5             	mov    %rsp,%rbp
   274ce:	53                   	push   %rbx
   274cf:	48 83 ec 38          	sub    $0x38,%rsp
   274d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   274d7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   274db:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   274df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   274e3:	48 89 c7             	mov    %rax,%rdi
   274e6:	e8 df 04 00 00       	call   279ca <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   274eb:	48 89 c3             	mov    %rax,%rbx
   274ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   274f2:	48 89 c7             	mov    %rax,%rdi
   274f5:	e8 8e 0f ff ff       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   274fa:	48 29 c3             	sub    %rax,%rbx
   274fd:	48 89 da             	mov    %rbx,%rdx
   27500:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27504:	48 39 c2             	cmp    %rax,%rdx
   27507:	0f 92 c0             	setb   %al
   2750a:	84 c0                	test   %al,%al
   2750c:	74 0c                	je     2751a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   2750e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   27512:	48 89 c7             	mov    %rax,%rdi
   27515:	e8 c6 db fd ff       	call   50e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   2751a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2751e:	48 89 c7             	mov    %rax,%rdi
   27521:	e8 62 0f ff ff       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   27526:	48 89 c3             	mov    %rax,%rbx
   27529:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2752d:	48 89 c7             	mov    %rax,%rdi
   27530:	e8 53 0f ff ff       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   27535:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   27539:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   2753d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   27541:	48 89 d6             	mov    %rdx,%rsi
   27544:	48 89 c7             	mov    %rax,%rdi
   27547:	e8 a8 21 ff ff       	call   196f4 <_ZSt3maxImERKT_S2_S2_>
   2754c:	48 8b 00             	mov    (%rax),%rax
   2754f:	48 01 d8             	add    %rbx,%rax
   27552:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   27556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2755a:	48 89 c7             	mov    %rax,%rdi
   2755d:	e8 26 0f ff ff       	call   18488 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   27562:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   27566:	72 12                	jb     2757a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   27568:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2756c:	48 89 c7             	mov    %rax,%rdi
   2756f:	e8 56 04 00 00       	call   279ca <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   27574:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   27578:	73 0e                	jae    27588 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   2757a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2757e:	48 89 c7             	mov    %rax,%rdi
   27581:	e8 44 04 00 00       	call   279ca <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   27586:	eb 04                	jmp    2758c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   27588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   2758c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   27590:	c9                   	leave
   27591:	c3                   	ret

0000000000027592 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   27592:	55                   	push   %rbp
   27593:	48 89 e5             	mov    %rsp,%rbp
   27596:	53                   	push   %rbx
   27597:	48 83 ec 18          	sub    $0x18,%rsp
   2759b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2759f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
   275a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   275a7:	48 89 c7             	mov    %rax,%rdi
   275aa:	e8 3d 04 00 00       	call   279ec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   275af:	48 8b 18             	mov    (%rax),%rbx
   275b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   275b6:	48 89 c7             	mov    %rax,%rdi
   275b9:	e8 2e 04 00 00       	call   279ec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   275be:	48 8b 00             	mov    (%rax),%rax
   275c1:	48 89 da             	mov    %rbx,%rdx
   275c4:	48 29 c2             	sub    %rax,%rdx
   275c7:	48 89 d0             	mov    %rdx,%rax
   275ca:	48 c1 f8 03          	sar    $0x3,%rax
   275ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   275d2:	c9                   	leave
   275d3:	c3                   	ret

00000000000275d4 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   275d4:	55                   	push   %rbp
   275d5:	48 89 e5             	mov    %rsp,%rbp
   275d8:	48 83 ec 20          	sub    $0x20,%rsp
   275dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   275e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   275e4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   275e8:	48 89 d6             	mov    %rdx,%rsi
   275eb:	48 89 c7             	mov    %rax,%rdi
   275ee:	e8 b9 03 00 00       	call   279ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   275f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   275f7:	c9                   	leave
   275f8:	c3                   	ret
   275f9:	90                   	nop

00000000000275fa <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   275fa:	55                   	push   %rbp
   275fb:	48 89 e5             	mov    %rsp,%rbp
   275fe:	53                   	push   %rbx
   275ff:	48 83 ec 68          	sub    $0x68,%rsp
   27603:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   27607:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   2760b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   2760f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   27613:	48 8d 15 ed be 00 00 	lea    0xbeed(%rip),%rdx        # 33507 <_ZNSt8__detailL19__atomic_spin_countE+0x108b>
   2761a:	be 01 00 00 00       	mov    $0x1,%esi
   2761f:	48 89 c7             	mov    %rax,%rdi
   27622:	e8 a3 fe ff ff       	call   274ca <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   27627:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   2762b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2762f:	48 8b 00             	mov    (%rax),%rax
   27632:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   27636:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2763a:	48 8b 40 08          	mov    0x8(%rax),%rax
   2763e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   27642:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   27646:	48 89 c7             	mov    %rax,%rdi
   27649:	e8 86 ff ff ff       	call   275d4 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   2764e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   27652:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   27656:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   2765a:	48 89 d6             	mov    %rdx,%rsi
   2765d:	48 89 c7             	mov    %rax,%rdi
   27660:	e8 2d ff ff ff       	call   27592 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   27665:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   27669:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   2766d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27671:	48 89 d6             	mov    %rdx,%rsi
   27674:	48 89 c7             	mov    %rax,%rdi
   27677:	e8 2a 09 ff ff       	call   17fa6 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   2767c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   27680:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   27684:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   27688:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   2768c:	48 89 c7             	mov    %rax,%rdi
   2768f:	e8 c9 fd ff ff       	call   2745d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   27694:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   27697:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   2769b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   276a2:	00 
	  _Alloc_traits::construct(this->_M_impl,
   276a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   276a7:	48 01 c1             	add    %rax,%rcx
   276aa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   276ae:	48 89 ce             	mov    %rcx,%rsi
   276b1:	48 89 c7             	mov    %rax,%rdi
   276b4:	e8 b2 fd ff ff       	call   2746b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   276b9:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   276c0:	00 
					 __new_start, _M_get_Tp_allocator());
   276c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   276c5:	48 89 c7             	mov    %rax,%rdi
   276c8:	e8 e9 07 ff ff       	call   17eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   276cd:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   276d0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   276d4:	48 89 c7             	mov    %rax,%rdi
   276d7:	e8 10 03 00 00       	call   279ec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   276dc:	48 8b 30             	mov    (%rax),%rsi
   276df:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   276e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   276e7:	48 89 d9             	mov    %rbx,%rcx
   276ea:	48 89 c7             	mov    %rax,%rdi
   276ed:	e8 08 03 00 00       	call   279fa <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   276f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   276f6:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   276fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   276ff:	48 89 c7             	mov    %rax,%rdi
   27702:	e8 af 07 ff ff       	call   17eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   27707:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   2770a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   2770e:	48 89 c7             	mov    %rax,%rdi
   27711:	e8 d6 02 00 00       	call   279ec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   27716:	48 8b 00             	mov    (%rax),%rax
   27719:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   2771d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   27721:	48 89 d9             	mov    %rbx,%rcx
   27724:	48 89 c7             	mov    %rax,%rdi
   27727:	e8 ce 02 00 00       	call   279fa <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   2772c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   27730:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   27734:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   27738:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   2773c:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   27740:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   27744:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   27748:	48 89 ce             	mov    %rcx,%rsi
   2774b:	48 89 c7             	mov    %rax,%rdi
   2774e:	e8 49 33 ff ff       	call   1aa9c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   27753:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   27757:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   2775b:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   2775e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   27762:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   27766:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   2776a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2776e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   27775:	00 
   27776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2777a:	48 01 c2             	add    %rax,%rdx
   2777d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   27781:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   27785:	90                   	nop
   27786:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2778a:	c9                   	leave
   2778b:	c3                   	ret

000000000002778c <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   2778c:	55                   	push   %rbp
   2778d:	48 89 e5             	mov    %rsp,%rbp
   27790:	48 83 ec 20          	sub    $0x20,%rsp
   27794:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   27798:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2779c:	48 89 c7             	mov    %rax,%rdi
   2779f:	e8 fc fc ff ff       	call   274a0 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   277a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   277a8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   277ac:	be 01 00 00 00       	mov    $0x1,%esi
   277b1:	48 89 c7             	mov    %rax,%rdi
   277b4:	e8 93 02 00 00       	call   27a4c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   277b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   277bd:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   277c1:	48 89 c7             	mov    %rax,%rdi
   277c4:	e8 c5 02 00 00       	call   27a8e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   277c9:	c9                   	leave
   277ca:	c3                   	ret

00000000000277cb <_ZSt3getILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_>:
    get(const tuple<_Elements...>& __t) noexcept
   277cb:	55                   	push   %rbp
   277cc:	48 89 e5             	mov    %rsp,%rbp
   277cf:	48 83 ec 10          	sub    $0x10,%rsp
   277d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   277d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   277db:	48 89 c7             	mov    %rax,%rdi
   277de:	e8 bc 02 00 00       	call   27a9f <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>
   277e3:	c9                   	leave
   277e4:	c3                   	ret
   277e5:	90                   	nop

00000000000277e6 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN2vk4raii18InstanceDispatcherEEEEC1Ev>:
      _Tuple_impl()
   277e6:	55                   	push   %rbp
   277e7:	48 89 e5             	mov    %rsp,%rbp
   277ea:	48 83 ec 10          	sub    $0x10,%rsp
   277ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
   277f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   277f6:	48 89 c7             	mov    %rax,%rdi
   277f9:	e8 bc 02 00 00       	call   27aba <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EEC1Ev>
   277fe:	90                   	nop
   277ff:	c9                   	leave
   27800:	c3                   	ret
   27801:	90                   	nop

0000000000027802 <_ZNSt10_Head_baseILm0EPN2vk4raii18InstanceDispatcherELb0EEC1Ev>:
      constexpr _Head_base()
   27802:	55                   	push   %rbp
   27803:	48 89 e5             	mov    %rsp,%rbp
   27806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
   2780a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2780e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   27815:	90                   	nop
   27816:	5d                   	pop    %rbp
   27817:	c3                   	ret

0000000000027818 <_ZN9__gnu_cxx14__alloc_traitsISaIN2vk15LayerPropertiesEES2_E17_S_select_on_copyERKS3_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
   27818:	55                   	push   %rbp
   27819:	48 89 e5             	mov    %rsp,%rbp
   2781c:	48 83 ec 10          	sub    $0x10,%rsp
   27820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27824:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
   27828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2782c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27830:	48 89 d6             	mov    %rdx,%rsi
   27833:	48 89 c7             	mov    %rax,%rdi
   27836:	e8 8a 02 00 00       	call   27ac5 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE37select_on_container_copy_constructionERKS2_>
   2783b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2783f:	c9                   	leave
   27840:	c3                   	ret
   27841:	90                   	nop

0000000000027842 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   27842:	55                   	push   %rbp
   27843:	48 89 e5             	mov    %rsp,%rbp
   27846:	53                   	push   %rbx
   27847:	48 83 ec 28          	sub    $0x28,%rsp
   2784b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2784f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27853:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   27857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2785b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   2785f:	48 89 d6             	mov    %rdx,%rsi
   27862:	48 89 c7             	mov    %rax,%rdi
   27865:	e8 84 02 00 00       	call   27aee <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   2786a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2786e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27872:	48 89 d6             	mov    %rdx,%rsi
   27875:	48 89 c7             	mov    %rax,%rdi
   27878:	e8 a3 02 00 00       	call   27b20 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE17_M_create_storageEm>
   2787d:	eb 1a                	jmp    27899 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EEC1EmRKS2_+0x57>
   2787f:	48 89 c3             	mov    %rax,%rbx
   27882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27886:	48 89 c7             	mov    %rax,%rdi
   27889:	e8 08 02 ff ff       	call   17a96 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE12_Vector_implD1Ev>
   2788e:	48 89 d8             	mov    %rbx,%rax
   27891:	48 89 c7             	mov    %rax,%rdi
   27894:	e8 07 db fd ff       	call   53a0 <_Unwind_Resume@plt>
   27899:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2789d:	c9                   	leave
   2789e:	c3                   	ret
   2789f:	90                   	nop

00000000000278a0 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   278a0:	55                   	push   %rbp
   278a1:	48 89 e5             	mov    %rsp,%rbp
   278a4:	48 83 ec 20          	sub    $0x20,%rsp
   278a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   278ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   278b0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   278b4:	48 89 d6             	mov    %rdx,%rsi
   278b7:	48 89 c7             	mov    %rax,%rdi
   278ba:	e8 c3 02 00 00       	call   27b82 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS4_>
   278bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278c3:	c9                   	leave
   278c4:	c3                   	ret
   278c5:	90                   	nop

00000000000278c6 <_ZNKSt6vectorIN2vk15LayerPropertiesESaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   278c6:	55                   	push   %rbp
   278c7:	48 89 e5             	mov    %rsp,%rbp
   278ca:	48 83 ec 20          	sub    $0x20,%rsp
   278ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   278d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   278d6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   278da:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   278de:	48 89 d6             	mov    %rdx,%rsi
   278e1:	48 89 c7             	mov    %rax,%rdi
   278e4:	e8 99 02 00 00       	call   27b82 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS4_>
   278e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   278ed:	c9                   	leave
   278ee:	c3                   	ret

00000000000278ef <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   278ef:	55                   	push   %rbp
   278f0:	48 89 e5             	mov    %rsp,%rbp
   278f3:	48 83 ec 20          	sub    $0x20,%rsp
   278f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   278fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   278ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   27903:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      if (std::is_constant_evaluated())
   27907:	e8 9d e8 fd ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
   2790c:	84 c0                	test   %al,%al
   2790e:	74 19                	je     27929 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E+0x3a>
	return std::__do_uninit_copy(__first, __last, __result);
   27910:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27914:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   27918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2791c:	48 89 ce             	mov    %rcx,%rsi
   2791f:	48 89 c7             	mov    %rax,%rdi
   27922:	e8 c1 02 00 00       	call   27be8 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
   27927:	eb 18                	jmp    27941 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E+0x52>
      return std::uninitialized_copy(__first, __last, __result);
   27929:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   2792d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   27931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27935:	48 89 ce             	mov    %rcx,%rsi
   27938:	48 89 c7             	mov    %rax,%rdi
   2793b:	e8 25 03 00 00       	call   27c65 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
   27940:	90                   	nop
    }
   27941:	c9                   	leave
   27942:	c3                   	ret

0000000000027943 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   27943:	55                   	push   %rbp
   27944:	48 89 e5             	mov    %rsp,%rbp
   27947:	48 83 ec 20          	sub    $0x20,%rsp
   2794b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2794f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   27953:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   27957:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   2795b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2795f:	48 89 d6             	mov    %rdx,%rsi
   27962:	48 89 c7             	mov    %rax,%rdi
   27965:	e8 30 03 00 00       	call   27c9a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
   2796a:	c9                   	leave
   2796b:	c3                   	ret

000000000002796c <_ZSt12construct_atIPKcJS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   2796c:	55                   	push   %rbp
   2796d:	48 89 e5             	mov    %rsp,%rbp
   27970:	53                   	push   %rbx
   27971:	48 83 ec 18          	sub    $0x18,%rsp
   27975:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27979:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   2797d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27981:	48 89 c6             	mov    %rax,%rsi
   27984:	bf 08 00 00 00       	mov    $0x8,%edi
   27989:	e8 26 e8 fd ff       	call   61b4 <_ZnwmPv>
   2798e:	48 89 c3             	mov    %rax,%rbx
   27991:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27995:	48 89 c7             	mov    %rax,%rdi
   27998:	e8 c0 fa ff ff       	call   2745d <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   2799d:	48 8b 00             	mov    (%rax),%rax
   279a0:	48 89 03             	mov    %rax,(%rbx)
   279a3:	48 89 d8             	mov    %rbx,%rax
   279a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   279aa:	c9                   	leave
   279ab:	c3                   	ret

00000000000279ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   279ac:	55                   	push   %rbp
   279ad:	48 89 e5             	mov    %rsp,%rbp
   279b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   279b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   279b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   279bc:	48 8b 10             	mov    (%rax),%rdx
   279bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279c3:	48 89 10             	mov    %rdx,(%rax)
   279c6:	90                   	nop
   279c7:	5d                   	pop    %rbp
   279c8:	c3                   	ret
   279c9:	90                   	nop

00000000000279ca <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   279ca:	55                   	push   %rbp
   279cb:	48 89 e5             	mov    %rsp,%rbp
   279ce:	48 83 ec 10          	sub    $0x10,%rsp
   279d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   279d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279da:	48 89 c7             	mov    %rax,%rdi
   279dd:	e8 16 03 00 00       	call   27cf8 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   279e2:	48 89 c7             	mov    %rax,%rdi
   279e5:	e8 4e 05 ff ff       	call   17f38 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   279ea:	c9                   	leave
   279eb:	c3                   	ret

00000000000279ec <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   279ec:	55                   	push   %rbp
   279ed:	48 89 e5             	mov    %rsp,%rbp
   279f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   279f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   279f8:	5d                   	pop    %rbp
   279f9:	c3                   	ret

00000000000279fa <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   279fa:	55                   	push   %rbp
   279fb:	48 89 e5             	mov    %rsp,%rbp
   279fe:	48 83 ec 20          	sub    $0x20,%rsp
   27a02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27a06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27a0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   27a0e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   27a12:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   27a16:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27a1a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   27a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27a22:	48 89 c7             	mov    %rax,%rdi
   27a25:	e8 dc 02 00 00       	call   27d06 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   27a2a:	c9                   	leave
   27a2b:	c3                   	ret

0000000000027a2c <_ZNSt16allocator_traitsISaIPKcEE7destroyIS1_EEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   27a2c:	55                   	push   %rbp
   27a2d:	48 89 e5             	mov    %rsp,%rbp
   27a30:	48 83 ec 10          	sub    $0x10,%rsp
   27a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27a38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  std::destroy_at(__p);
   27a3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27a40:	48 89 c7             	mov    %rax,%rdi
   27a43:	e8 71 4e ff ff       	call   1c8b9 <_ZSt10destroy_atIPKcEvPT_>
	}
   27a48:	90                   	nop
   27a49:	c9                   	leave
   27a4a:	c3                   	ret
   27a4b:	90                   	nop

0000000000027a4c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   27a4c:	55                   	push   %rbp
   27a4d:	48 89 e5             	mov    %rsp,%rbp
   27a50:	48 83 ec 20          	sub    $0x20,%rsp
   27a54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27a58:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   27a5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27a60:	48 8b 00             	mov    (%rax),%rax
   27a63:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   27a67:	48 c1 e2 03          	shl    $0x3,%rdx
   27a6b:	48 f7 da             	neg    %rdx
   27a6e:	48 01 d0             	add    %rdx,%rax
   27a71:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   27a75:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   27a79:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   27a7d:	48 89 d6             	mov    %rdx,%rsi
   27a80:	48 89 c7             	mov    %rax,%rdi
   27a83:	e8 24 ff ff ff       	call   279ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   27a88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27a8c:	c9                   	leave
   27a8d:	c3                   	ret

0000000000027a8e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   27a8e:	55                   	push   %rbp
   27a8f:	48 89 e5             	mov    %rsp,%rbp
   27a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   27a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27a9a:	48 8b 00             	mov    (%rax),%rax
   27a9d:	5d                   	pop    %rbp
   27a9e:	c3                   	ret

0000000000027a9f <_ZSt12__get_helperILm0EPN2vk4raii17ContextDispatcherEJSt14default_deleteIS2_EEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   27a9f:	55                   	push   %rbp
   27aa0:	48 89 e5             	mov    %rsp,%rbp
   27aa3:	48 83 ec 10          	sub    $0x10,%rsp
   27aa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   27aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27aaf:	48 89 c7             	mov    %rax,%rdi
   27ab2:	e8 b2 02 00 00       	call   27d69 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>
   27ab7:	c9                   	leave
   27ab8:	c3                   	ret
   27ab9:	90                   	nop

0000000000027aba <_ZNSt10_Head_baseILm1ESt14default_deleteIN2vk4raii18InstanceDispatcherEELb1EEC1Ev>:
      constexpr _Head_base()
   27aba:	55                   	push   %rbp
   27abb:	48 89 e5             	mov    %rsp,%rbp
   27abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
   27ac2:	90                   	nop
   27ac3:	5d                   	pop    %rbp
   27ac4:	c3                   	ret

0000000000027ac5 <_ZNSt16allocator_traitsISaIN2vk15LayerPropertiesEEE37select_on_container_copy_constructionERKS2_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
   27ac5:	55                   	push   %rbp
   27ac6:	48 89 e5             	mov    %rsp,%rbp
   27ac9:	48 83 ec 10          	sub    $0x10,%rsp
   27acd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27ad1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
   27ad5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27ad9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27add:	48 89 d6             	mov    %rdx,%rsi
   27ae0:	48 89 c7             	mov    %rax,%rdi
   27ae3:	e8 78 f5 ff ff       	call   27060 <_ZNSaIN2vk15LayerPropertiesEEC1ERKS1_>
   27ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27aec:	c9                   	leave
   27aed:	c3                   	ret

0000000000027aee <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   27aee:	55                   	push   %rbp
   27aef:	48 89 e5             	mov    %rsp,%rbp
   27af2:	48 83 ec 10          	sub    $0x10,%rsp
   27af6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27afa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   27afe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b06:	48 89 d6             	mov    %rdx,%rsi
   27b09:	48 89 c7             	mov    %rax,%rdi
   27b0c:	e8 4f f5 ff ff       	call   27060 <_ZNSaIN2vk15LayerPropertiesEEC1ERKS1_>
   27b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b15:	48 89 c7             	mov    %rax,%rdi
   27b18:	e8 03 f2 ff ff       	call   26d20 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE17_Vector_impl_dataC2Ev>
	{ }
   27b1d:	90                   	nop
   27b1e:	c9                   	leave
   27b1f:	c3                   	ret

0000000000027b20 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   27b20:	55                   	push   %rbp
   27b21:	48 89 e5             	mov    %rsp,%rbp
   27b24:	48 83 ec 10          	sub    $0x10,%rsp
   27b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27b2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   27b30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b38:	48 89 d6             	mov    %rdx,%rsi
   27b3b:	48 89 c7             	mov    %rax,%rdi
   27b3e:	e8 5f 3c ff ff       	call   1b7a2 <_ZNSt12_Vector_baseIN2vk15LayerPropertiesESaIS1_EE11_M_allocateEm>
   27b43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27b47:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   27b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b4e:	48 8b 10             	mov    (%rax),%rdx
   27b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b55:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   27b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b5d:	48 8b 08             	mov    (%rax),%rcx
   27b60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27b64:	48 89 d0             	mov    %rdx,%rax
   27b67:	48 c1 e0 06          	shl    $0x6,%rax
   27b6b:	48 01 d0             	add    %rdx,%rax
   27b6e:	48 c1 e0 03          	shl    $0x3,%rax
   27b72:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   27b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b7a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   27b7e:	90                   	nop
   27b7f:	c9                   	leave
   27b80:	c3                   	ret
   27b81:	90                   	nop

0000000000027b82 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   27b82:	55                   	push   %rbp
   27b83:	48 89 e5             	mov    %rsp,%rbp
   27b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   27b8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27b92:	48 8b 10             	mov    (%rax),%rdx
   27b95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27b99:	48 89 10             	mov    %rdx,(%rax)
   27b9c:	90                   	nop
   27b9d:	5d                   	pop    %rbp
   27b9e:	c3                   	ret

0000000000027b9f <_ZN9__gnu_cxxeqIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   27b9f:	55                   	push   %rbp
   27ba0:	48 89 e5             	mov    %rsp,%rbp
   27ba3:	53                   	push   %rbx
   27ba4:	48 83 ec 18          	sub    $0x18,%rsp
   27ba8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27bac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   27bb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27bb4:	48 89 c7             	mov    %rax,%rdi
   27bb7:	e8 1e 00 00 00       	call   27bda <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>
   27bbc:	48 8b 18             	mov    (%rax),%rbx
   27bbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27bc3:	48 89 c7             	mov    %rax,%rdi
   27bc6:	e8 0f 00 00 00       	call   27bda <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>
   27bcb:	48 8b 00             	mov    (%rax),%rax
   27bce:	48 39 c3             	cmp    %rax,%rbx
   27bd1:	0f 94 c0             	sete   %al
   27bd4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   27bd8:	c9                   	leave
   27bd9:	c3                   	ret

0000000000027bda <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   27bda:	55                   	push   %rbp
   27bdb:	48 89 e5             	mov    %rsp,%rbp
   27bde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   27be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27be6:	5d                   	pop    %rbp
   27be7:	c3                   	ret

0000000000027be8 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    __do_uninit_copy(_InputIterator __first, _InputIterator __last,
   27be8:	55                   	push   %rbp
   27be9:	48 89 e5             	mov    %rsp,%rbp
   27bec:	53                   	push   %rbx
   27bed:	48 83 ec 38          	sub    $0x38,%rsp
   27bf1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   27bf5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   27bf9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      _ForwardIterator __cur = __result;
   27bfd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   27c01:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  for (; __first != __last; ++__first, (void)++__cur)
   27c05:	eb 3a                	jmp    27c41 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_+0x59>
	    std::_Construct(std::__addressof(*__cur), *__first);
   27c07:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   27c0b:	48 89 c7             	mov    %rax,%rdi
   27c0e:	e8 95 01 00 00       	call   27da8 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEdeEv>
   27c13:	48 89 c3             	mov    %rax,%rbx
   27c16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27c1a:	48 89 c7             	mov    %rax,%rdi
   27c1d:	e8 30 58 ff ff       	call   1d452 <_ZSt11__addressofIN2vk15LayerPropertiesEEPT_RS2_>
   27c22:	48 89 de             	mov    %rbx,%rsi
   27c25:	48 89 c7             	mov    %rax,%rdi
   27c28:	e8 8c 01 00 00       	call   27db9 <_ZSt10_ConstructIN2vk15LayerPropertiesEJRKS1_EEvPT_DpOT0_>
	  for (; __first != __last; ++__first, (void)++__cur)
   27c2d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   27c31:	48 89 c7             	mov    %rax,%rdi
   27c34:	e8 4b 01 00 00       	call   27d84 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEppEv>
   27c39:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
   27c40:	00 
   27c41:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   27c45:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   27c49:	48 89 d6             	mov    %rdx,%rsi
   27c4c:	48 89 c7             	mov    %rax,%rdi
   27c4f:	e8 4b ff ff ff       	call   27b9f <_ZN9__gnu_cxxeqIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   27c54:	83 f0 01             	xor    $0x1,%eax
   27c57:	84 c0                	test   %al,%al
   27c59:	75 ac                	jne    27c07 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_+0x1f>
	  return __cur;
   27c5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   27c5f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   27c63:	c9                   	leave
   27c64:	c3                   	ret

0000000000027c65 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   27c65:	55                   	push   %rbp
   27c66:	48 89 e5             	mov    %rsp,%rbp
   27c69:	48 83 ec 30          	sub    $0x30,%rsp
   27c6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27c71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27c75:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   27c79:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
      const bool __assignable
   27c7d:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   27c81:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   27c85:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   27c89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27c8d:	48 89 ce             	mov    %rcx,%rsi
   27c90:	48 89 c7             	mov    %rax,%rdi
   27c93:	e8 cf 01 00 00       	call   27e67 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
    }
   27c98:	c9                   	leave
   27c99:	c3                   	ret

0000000000027c9a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   27c9a:	55                   	push   %rbp
   27c9b:	48 89 e5             	mov    %rsp,%rbp
   27c9e:	48 83 ec 20          	sub    $0x20,%rsp
   27ca2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27ca6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   27caa:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   27caf:	74 40                	je     27cf1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   27cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27cb5:	48 89 c7             	mov    %rax,%rdi
   27cb8:	e8 4d 04 ff ff       	call   1810a <_ZSt11__addressofIPKcEPT_RS2_>
   27cbd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   27cc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27cc5:	48 89 c7             	mov    %rax,%rdi
   27cc8:	e8 c7 01 00 00       	call   27e94 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
   27ccd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   27cd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27cd6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   27cda:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27cde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27ce2:	48 89 ce             	mov    %rcx,%rsi
   27ce5:	48 89 c7             	mov    %rax,%rdi
   27ce8:	e8 e4 01 00 00       	call   27ed1 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
   27ced:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   27cf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   27cf5:	c9                   	leave
   27cf6:	c3                   	ret
   27cf7:	90                   	nop

0000000000027cf8 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   27cf8:	55                   	push   %rbp
   27cf9:	48 89 e5             	mov    %rsp,%rbp
   27cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   27d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27d04:	5d                   	pop    %rbp
   27d05:	c3                   	ret

0000000000027d06 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   27d06:	55                   	push   %rbp
   27d07:	48 89 e5             	mov    %rsp,%rbp
   27d0a:	41 54                	push   %r12
   27d0c:	53                   	push   %rbx
   27d0d:	48 83 ec 20          	sub    $0x20,%rsp
   27d11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27d15:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27d19:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   27d1d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   27d21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27d25:	48 89 c7             	mov    %rax,%rdi
   27d28:	e8 5a 58 ff ff       	call   1d587 <_ZSt12__niter_baseIPPKcET_S3_>
   27d2d:	49 89 c4             	mov    %rax,%r12
   27d30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27d34:	48 89 c7             	mov    %rax,%rdi
   27d37:	e8 4b 58 ff ff       	call   1d587 <_ZSt12__niter_baseIPPKcET_S3_>
   27d3c:	48 89 c3             	mov    %rax,%rbx
   27d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27d43:	48 89 c7             	mov    %rax,%rdi
   27d46:	e8 3c 58 ff ff       	call   1d587 <_ZSt12__niter_baseIPPKcET_S3_>
   27d4b:	48 89 c7             	mov    %rax,%rdi
   27d4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   27d52:	48 89 c1             	mov    %rax,%rcx
   27d55:	4c 89 e2             	mov    %r12,%rdx
   27d58:	48 89 de             	mov    %rbx,%rsi
   27d5b:	e8 d3 01 00 00       	call   27f33 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   27d60:	48 83 c4 20          	add    $0x20,%rsp
   27d64:	5b                   	pop    %rbx
   27d65:	41 5c                	pop    %r12
   27d67:	5d                   	pop    %rbp
   27d68:	c3                   	ret

0000000000027d69 <_ZNSt11_Tuple_implILm0EJPN2vk4raii17ContextDispatcherESt14default_deleteIS2_EEE7_M_headERKS6_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   27d69:	55                   	push   %rbp
   27d6a:	48 89 e5             	mov    %rsp,%rbp
   27d6d:	48 83 ec 10          	sub    $0x10,%rsp
   27d71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27d79:	48 89 c7             	mov    %rax,%rdi
   27d7c:	e8 5a 02 00 00       	call   27fdb <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERKS4_>
   27d81:	c9                   	leave
   27d82:	c3                   	ret
   27d83:	90                   	nop

0000000000027d84 <_ZN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   27d84:	55                   	push   %rbp
   27d85:	48 89 e5             	mov    %rsp,%rbp
   27d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   27d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27d90:	48 8b 00             	mov    (%rax),%rax
   27d93:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
   27d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27d9e:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   27da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   27da5:	5d                   	pop    %rbp
   27da6:	c3                   	ret
   27da7:	90                   	nop

0000000000027da8 <_ZNK9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   27da8:	55                   	push   %rbp
   27da9:	48 89 e5             	mov    %rsp,%rbp
   27dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   27db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27db4:	48 8b 00             	mov    (%rax),%rax
   27db7:	5d                   	pop    %rbp
   27db8:	c3                   	ret

0000000000027db9 <_ZSt10_ConstructIN2vk15LayerPropertiesEJRKS1_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   27db9:	55                   	push   %rbp
   27dba:	48 89 e5             	mov    %rsp,%rbp
   27dbd:	53                   	push   %rbx
   27dbe:	48 83 ec 18          	sub    $0x18,%rsp
   27dc2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27dc6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      if (std::__is_constant_evaluated())
   27dca:	e8 cf e3 fd ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   27dcf:	84 c0                	test   %al,%al
   27dd1:	74 20                	je     27df3 <_ZSt10_ConstructIN2vk15LayerPropertiesEJRKS1_EEvPT_DpOT0_+0x3a>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   27dd3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27dd7:	48 89 c7             	mov    %rax,%rdi
   27dda:	e8 0a 02 00 00       	call   27fe9 <_ZSt7forwardIRKN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS4_E4typeE>
   27ddf:	48 89 c2             	mov    %rax,%rdx
   27de2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27de6:	48 89 d6             	mov    %rdx,%rsi
   27de9:	48 89 c7             	mov    %rax,%rdi
   27dec:	e8 06 02 00 00       	call   27ff7 <_ZSt12construct_atIN2vk15LayerPropertiesEJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>
	  return;
   27df1:	eb 6e                	jmp    27e61 <_ZSt10_ConstructIN2vk15LayerPropertiesEJRKS1_EEvPT_DpOT0_+0xa8>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   27df3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27df7:	48 89 c6             	mov    %rax,%rsi
   27dfa:	bf 08 02 00 00       	mov    $0x208,%edi
   27dff:	e8 b0 e3 fd ff       	call   61b4 <_ZnwmPv>
   27e04:	48 89 c3             	mov    %rax,%rbx
   27e07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27e0b:	48 89 c7             	mov    %rax,%rdi
   27e0e:	e8 d6 01 00 00       	call   27fe9 <_ZSt7forwardIRKN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS4_E4typeE>
   27e13:	48 89 c2             	mov    %rax,%rdx
   27e16:	48 89 d8             	mov    %rbx,%rax
   27e19:	b9 08 02 00 00       	mov    $0x208,%ecx
   27e1e:	48 8b 32             	mov    (%rdx),%rsi
   27e21:	48 89 30             	mov    %rsi,(%rax)
   27e24:	89 ce                	mov    %ecx,%esi
   27e26:	48 01 c6             	add    %rax,%rsi
   27e29:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   27e2d:	89 ce                	mov    %ecx,%esi
   27e2f:	48 01 d6             	add    %rdx,%rsi
   27e32:	48 83 c6 08          	add    $0x8,%rsi
   27e36:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   27e3a:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   27e3e:	48 8d 78 08          	lea    0x8(%rax),%rdi
   27e42:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   27e46:	48 29 f8             	sub    %rdi,%rax
   27e49:	48 29 c2             	sub    %rax,%rdx
   27e4c:	01 c1                	add    %eax,%ecx
   27e4e:	83 e1 f8             	and    $0xfffffff8,%ecx
   27e51:	89 c8                	mov    %ecx,%eax
   27e53:	c1 e8 03             	shr    $0x3,%eax
   27e56:	89 c0                	mov    %eax,%eax
   27e58:	48 89 d6             	mov    %rdx,%rsi
   27e5b:	48 89 c1             	mov    %rax,%rcx
   27e5e:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    }
   27e61:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   27e65:	c9                   	leave
   27e66:	c3                   	ret

0000000000027e67 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   27e67:	55                   	push   %rbp
   27e68:	48 89 e5             	mov    %rsp,%rbp
   27e6b:	48 83 ec 20          	sub    $0x20,%rsp
   27e6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27e73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27e77:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	{ return std::__do_uninit_copy(__first, __last, __result); }
   27e7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27e7f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   27e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27e87:	48 89 ce             	mov    %rcx,%rsi
   27e8a:	48 89 c7             	mov    %rax,%rdi
   27e8d:	e8 56 fd ff ff       	call   27be8 <_ZSt16__do_uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2vk15LayerPropertiesESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
   27e92:	c9                   	leave
   27e93:	c3                   	ret

0000000000027e94 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   27e94:	55                   	push   %rbp
   27e95:	48 89 e5             	mov    %rsp,%rbp
   27e98:	48 83 ec 10          	sub    $0x10,%rsp
   27e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (std::__is_constant_evaluated())
   27ea0:	e8 f9 e2 fd ff       	call   619e <_ZSt23__is_constant_evaluatedv>
   27ea5:	84 c0                	test   %al,%al
   27ea7:	74 0e                	je     27eb7 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_+0x23>
	  std::construct_at(__p, std::forward<_Args>(__args)...);
   27ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27ead:	48 89 c7             	mov    %rax,%rdi
   27eb0:	e8 ca 01 00 00       	call   2807f <_ZSt12construct_atIPKcJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  return;
   27eb5:	eb 18                	jmp    27ecf <_ZSt10_ConstructIPKcJEEvPT_DpOT0_+0x3b>
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   27eb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27ebb:	48 89 c6             	mov    %rax,%rsi
   27ebe:	bf 08 00 00 00       	mov    $0x8,%edi
   27ec3:	e8 ec e2 fd ff       	call   61b4 <_ZnwmPv>
   27ec8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   27ecf:	c9                   	leave
   27ed0:	c3                   	ret

0000000000027ed1 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   27ed1:	55                   	push   %rbp
   27ed2:	48 89 e5             	mov    %rsp,%rbp
   27ed5:	48 83 ec 20          	sub    $0x20,%rsp
   27ed9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27edd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   27ee1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   27ee5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   27ee9:	48 89 c7             	mov    %rax,%rdi
   27eec:	e8 b4 01 00 00       	call   280a5 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   27ef1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27ef5:	48 89 c7             	mov    %rax,%rdi
   27ef8:	e8 b3 86 fe ff       	call   105b0 <_ZSt17__size_to_integerm>
   27efd:	48 89 c1             	mov    %rax,%rcx
   27f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27f04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   27f08:	48 89 ce             	mov    %rcx,%rsi
   27f0b:	48 89 c7             	mov    %rax,%rdi
   27f0e:	e8 9d 01 00 00       	call   280b0 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   27f13:	c9                   	leave
   27f14:	c3                   	ret
   27f15:	90                   	nop

0000000000027f16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   27f16:	55                   	push   %rbp
   27f17:	48 89 e5             	mov    %rsp,%rbp
   27f1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27f1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   27f22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   27f26:	48 8b 10             	mov    (%rax),%rdx
   27f29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27f2d:	48 89 10             	mov    %rdx,(%rax)
   27f30:	90                   	nop
   27f31:	5d                   	pop    %rbp
   27f32:	c3                   	ret

0000000000027f33 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   27f33:	55                   	push   %rbp
   27f34:	48 89 e5             	mov    %rsp,%rbp
   27f37:	48 83 ec 30          	sub    $0x30,%rsp
   27f3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   27f3f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   27f43:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   27f47:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   27f4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   27f4f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   27f53:	48 c1 f8 03          	sar    $0x3,%rax
   27f57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   27f5b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   27f60:	7e 68                	jle    27fca <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x97>
	  if (std::is_constant_evaluated())
   27f62:	e8 42 e2 fd ff       	call   61a9 <_ZSt21is_constant_evaluatedv>
   27f67:	84 c0                	test   %al,%al
   27f69:	74 40                	je     27fab <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x78>
	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
   27f6b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   27f6f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   27f73:	48 89 d6             	mov    %rdx,%rsi
   27f76:	48 89 c7             	mov    %rax,%rdi
   27f79:	e8 98 ff ff ff       	call   27f16 <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEC1ERKS3_>
	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
   27f7e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   27f82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   27f86:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   27f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   27f8e:	48 89 c7             	mov    %rax,%rdi
   27f91:	e8 77 01 00 00       	call   2810d <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>
   27f96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	      return __out.base();
   27f9a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   27f9e:	48 89 c7             	mov    %rax,%rdi
   27fa1:	e8 e8 01 00 00       	call   2818e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvE4baseEv>
   27fa6:	48 8b 00             	mov    (%rax),%rax
   27fa9:	eb 2e                	jmp    27fd9 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0xa6>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   27fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27faf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   27fb6:	00 
   27fb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27fbb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   27fbf:	48 89 ce             	mov    %rcx,%rsi
   27fc2:	48 89 c7             	mov    %rax,%rdi
   27fc5:	e8 96 d3 fd ff       	call   5360 <memmove@plt>
      return __result + __count;
   27fca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   27fce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   27fd2:	48 c1 e2 03          	shl    $0x3,%rdx
   27fd6:	48 01 d0             	add    %rdx,%rax
    }
   27fd9:	c9                   	leave
   27fda:	c3                   	ret

0000000000027fdb <_ZNSt10_Head_baseILm0EPN2vk4raii17ContextDispatcherELb0EE7_M_headERKS4_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
   27fdb:	55                   	push   %rbp
   27fdc:	48 89 e5             	mov    %rsp,%rbp
   27fdf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   27fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27fe7:	5d                   	pop    %rbp
   27fe8:	c3                   	ret

0000000000027fe9 <_ZSt7forwardIRKN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   27fe9:	55                   	push   %rbp
   27fea:	48 89 e5             	mov    %rsp,%rbp
   27fed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   27ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   27ff5:	5d                   	pop    %rbp
   27ff6:	c3                   	ret

0000000000027ff7 <_ZSt12construct_atIN2vk15LayerPropertiesEJRKS1_EEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS5_DpOS6_>:
    construct_at(_Tp* __location, _Args&&... __args)
   27ff7:	55                   	push   %rbp
   27ff8:	48 89 e5             	mov    %rsp,%rbp
   27ffb:	53                   	push   %rbx
   27ffc:	48 83 ec 18          	sub    $0x18,%rsp
   28000:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   28004:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   28008:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   2800c:	48 89 c6             	mov    %rax,%rsi
   2800f:	bf 08 02 00 00       	mov    $0x208,%edi
   28014:	e8 9b e1 fd ff       	call   61b4 <_ZnwmPv>
   28019:	48 89 c3             	mov    %rax,%rbx
   2801c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   28020:	48 89 c7             	mov    %rax,%rdi
   28023:	e8 c1 ff ff ff       	call   27fe9 <_ZSt7forwardIRKN2vk15LayerPropertiesEEOT_RNSt16remove_referenceIS4_E4typeE>
   28028:	48 89 c2             	mov    %rax,%rdx
   2802b:	48 89 d8             	mov    %rbx,%rax
   2802e:	b9 08 02 00 00       	mov    $0x208,%ecx
   28033:	48 8b 32             	mov    (%rdx),%rsi
   28036:	48 89 30             	mov    %rsi,(%rax)
   28039:	89 ce                	mov    %ecx,%esi
   2803b:	48 01 c6             	add    %rax,%rsi
   2803e:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   28042:	89 ce                	mov    %ecx,%esi
   28044:	48 01 d6             	add    %rdx,%rsi
   28047:	48 83 c6 08          	add    $0x8,%rsi
   2804b:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   2804f:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   28053:	48 8d 78 08          	lea    0x8(%rax),%rdi
   28057:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   2805b:	48 29 f8             	sub    %rdi,%rax
   2805e:	48 29 c2             	sub    %rax,%rdx
   28061:	01 c1                	add    %eax,%ecx
   28063:	83 e1 f8             	and    $0xfffffff8,%ecx
   28066:	89 c8                	mov    %ecx,%eax
   28068:	c1 e8 03             	shr    $0x3,%eax
   2806b:	89 c0                	mov    %eax,%eax
   2806d:	48 89 d6             	mov    %rdx,%rsi
   28070:	48 89 c1             	mov    %rax,%rcx
   28073:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   28076:	48 89 d8             	mov    %rbx,%rax
   28079:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2807d:	c9                   	leave
   2807e:	c3                   	ret

000000000002807f <_ZSt12construct_atIPKcJEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    construct_at(_Tp* __location, _Args&&... __args)
   2807f:	55                   	push   %rbp
   28080:	48 89 e5             	mov    %rsp,%rbp
   28083:	48 83 ec 10          	sub    $0x10,%rsp
   28087:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
   2808b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2808f:	48 89 c6             	mov    %rax,%rsi
   28092:	bf 08 00 00 00       	mov    $0x8,%edi
   28097:	e8 18 e1 fd ff       	call   61b4 <_ZnwmPv>
   2809c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   280a3:	c9                   	leave
   280a4:	c3                   	ret

00000000000280a5 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   280a5:	55                   	push   %rbp
   280a6:	48 89 e5             	mov    %rsp,%rbp
   280a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   280ad:	90                   	nop
   280ae:	5d                   	pop    %rbp
   280af:	c3                   	ret

00000000000280b0 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   280b0:	55                   	push   %rbp
   280b1:	48 89 e5             	mov    %rsp,%rbp
   280b4:	48 83 ec 20          	sub    $0x20,%rsp
   280b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   280bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   280c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   280c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   280c9:	75 06                	jne    280d1 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   280cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   280cf:	eb 3a                	jmp    2810b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   280d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   280d5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   280dc:	00 
   280dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   280e1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   280e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   280e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   280ed:	48 89 ce             	mov    %rcx,%rsi
   280f0:	48 89 c7             	mov    %rax,%rdi
   280f3:	e8 a4 00 00 00       	call   2819c <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
   280f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   280fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   28103:	00 
   28104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   28108:	48 01 d0             	add    %rdx,%rax
    }
   2810b:	c9                   	leave
   2810c:	c3                   	ret

000000000002810d <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
   2810d:	55                   	push   %rbp
   2810e:	48 89 e5             	mov    %rsp,%rbp
   28111:	53                   	push   %rbx
   28112:	48 83 ec 38          	sub    $0x38,%rsp
   28116:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   2811a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   2811e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   28122:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
   28126:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   2812a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
   2812e:	eb 49                	jmp    28179 <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x6c>
	std::__relocate_object_a(std::__addressof(*__cur),
   28130:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28134:	48 89 c7             	mov    %rax,%rdi
   28137:	e8 ce ff fe ff       	call   1810a <_ZSt11__addressofIPKcEPT_RS2_>
   2813c:	48 89 c3             	mov    %rax,%rbx
   2813f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   28143:	48 89 c7             	mov    %rax,%rdi
   28146:	e8 9f 00 00 00       	call   281ea <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvEdeEv>
   2814b:	48 89 c7             	mov    %rax,%rdi
   2814e:	e8 b7 ff fe ff       	call   1810a <_ZSt11__addressofIPKcEPT_RS2_>
   28153:	48 89 c1             	mov    %rax,%rcx
   28156:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   2815a:	48 89 c2             	mov    %rax,%rdx
   2815d:	48 89 de             	mov    %rbx,%rsi
   28160:	48 89 cf             	mov    %rcx,%rdi
   28163:	e8 93 00 00 00       	call   281fb <_ZSt19__relocate_object_aIPKcS1_SaIS1_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
   28168:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
   2816d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   28171:	48 89 c7             	mov    %rax,%rdi
   28174:	e8 51 00 00 00       	call   281ca <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEppEv>
   28179:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   2817d:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   28181:	75 ad                	jne    28130 <_ZSt14__relocate_a_1IPPKcN9__gnu_cxx17__normal_iteratorIS2_vEESaIS1_EET0_T_S8_S7_RT1_+0x23>
      return __cur;
   28183:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   28187:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   2818b:	c9                   	leave
   2818c:	c3                   	ret
   2818d:	90                   	nop

000000000002818e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   2818e:	55                   	push   %rbp
   2818f:	48 89 e5             	mov    %rsp,%rbp
   28192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   28196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   2819a:	5d                   	pop    %rbp
   2819b:	c3                   	ret

000000000002819c <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   2819c:	55                   	push   %rbp
   2819d:	48 89 e5             	mov    %rsp,%rbp
   281a0:	48 83 ec 20          	sub    $0x20,%rsp
   281a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   281a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   281ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   281b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   281b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   281b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   281bc:	48 89 ce             	mov    %rcx,%rsi
   281bf:	48 89 c7             	mov    %rax,%rdi
   281c2:	e8 8b 00 00 00       	call   28252 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   281c7:	90                   	nop
   281c8:	c9                   	leave
   281c9:	c3                   	ret

00000000000281ca <_ZN9__gnu_cxx17__normal_iteratorIPPKcvEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   281ca:	55                   	push   %rbp
   281cb:	48 89 e5             	mov    %rsp,%rbp
   281ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   281d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   281d6:	48 8b 00             	mov    (%rax),%rax
   281d9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   281dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   281e1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   281e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   281e8:	5d                   	pop    %rbp
   281e9:	c3                   	ret

00000000000281ea <_ZNK9__gnu_cxx17__normal_iteratorIPPKcvEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   281ea:	55                   	push   %rbp
   281eb:	48 89 e5             	mov    %rsp,%rbp
   281ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   281f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   281f6:	48 8b 00             	mov    (%rax),%rax
   281f9:	5d                   	pop    %rbp
   281fa:	c3                   	ret

00000000000281fb <_ZSt19__relocate_object_aIPKcS1_SaIS1_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
   281fb:	55                   	push   %rbp
   281fc:	48 89 e5             	mov    %rsp,%rbp
   281ff:	48 83 ec 20          	sub    $0x20,%rsp
   28203:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   28207:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   2820b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
   2820f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28213:	48 89 c7             	mov    %rax,%rdi
   28216:	e8 85 ef ff ff       	call   271a0 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
   2821b:	48 89 c2             	mov    %rax,%rdx
   2821e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   28222:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28226:	48 89 ce             	mov    %rcx,%rsi
   28229:	48 89 c7             	mov    %rax,%rdi
   2822c:	e8 3a f2 ff ff       	call   2746b <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
   28231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   28235:	48 89 c7             	mov    %rax,%rdi
   28238:	e8 cd fe fe ff       	call   1810a <_ZSt11__addressofIPKcEPT_RS2_>
   2823d:	48 89 c2             	mov    %rax,%rdx
   28240:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28244:	48 89 d6             	mov    %rdx,%rsi
   28247:	48 89 c7             	mov    %rax,%rdi
   2824a:	e8 dd f7 ff ff       	call   27a2c <_ZNSt16allocator_traitsISaIPKcEE7destroyIS1_EEvRS2_PT_>
    }
   2824f:	90                   	nop
   28250:	c9                   	leave
   28251:	c3                   	ret

0000000000028252 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   28252:	55                   	push   %rbp
   28253:	48 89 e5             	mov    %rsp,%rbp
   28256:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   2825a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   2825e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   28262:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   28266:	48 8b 00             	mov    (%rax),%rax
   28269:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   2826d:	eb 10                	jmp    2827f <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   2826f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28273:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   28277:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   2827a:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   2827f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   28283:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   28287:	75 e6                	jne    2826f <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   28289:	90                   	nop
   2828a:	90                   	nop
   2828b:	5d                   	pop    %rbp
   2828c:	c3                   	ret

Disassembly of section .fini:

0000000000028290 <_fini>:
   28290:	48 83 ec 08          	sub    $0x8,%rsp
   28294:	48 83 c4 08          	add    $0x8,%rsp
   28298:	c3                   	ret
