
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 3f 02 00 	mov    0x23fad(%rip),%rax        # 27fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 3f 02 00    	push   0x23fca(%rip)        # 27ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 3f 02 00    	jmp    *0x23fcc(%rip)        # 27ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 3f 02 00    	jmp    *0x23fca(%rip)        # 28000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 3f 02 00    	jmp    *0x23fc2(%rip)        # 28008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba 3f 02 00    	jmp    *0x23fba(%rip)        # 28010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 3f 02 00    	jmp    *0x23fb2(%rip)        # 28018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa 3f 02 00    	jmp    *0x23faa(%rip)        # 28020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4080:	ff 25 a2 3f 02 00    	jmp    *0x23fa2(%rip)        # 28028 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a 3f 02 00    	jmp    *0x23f9a(%rip)        # 28030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 3f 02 00    	jmp    *0x23f92(%rip)        # 28038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a 3f 02 00    	jmp    *0x23f8a(%rip)        # 28040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 3f 02 00    	jmp    *0x23f82(%rip)        # 28048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <glfwDestroyWindow@plt>:
    40d0:	ff 25 7a 3f 02 00    	jmp    *0x23f7a(%rip)        # 28050 <glfwDestroyWindow@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <_ZSt17__throw_bad_allocv@plt>:
    40e0:	ff 25 72 3f 02 00    	jmp    *0x23f72(%rip)        # 28058 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    40f0:	ff 25 6a 3f 02 00    	jmp    *0x23f6a(%rip)        # 28060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 3f 02 00    	jmp    *0x23f62(%rip)        # 28068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a 3f 02 00    	jmp    *0x23f5a(%rip)        # 28070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <__cxa_begin_catch@plt>:
    4120:	ff 25 52 3f 02 00    	jmp    *0x23f52(%rip)        # 28078 <__cxa_begin_catch@CXXABI_1.3>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkCreateCommandPool@plt>:
    4130:	ff 25 4a 3f 02 00    	jmp    *0x23f4a(%rip)        # 28080 <vkCreateCommandPool@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <strlen@plt>:
    4140:	ff 25 42 3f 02 00    	jmp    *0x23f42(%rip)        # 28088 <strlen@GLIBC_2.2.5>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <memcmp@plt>:
    4150:	ff 25 3a 3f 02 00    	jmp    *0x23f3a(%rip)        # 28090 <memcmp@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkCreateGraphicsPipelines@plt>:
    4160:	ff 25 32 3f 02 00    	jmp    *0x23f32(%rip)        # 28098 <vkCreateGraphicsPipelines@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <__cxa_allocate_exception@plt>:
    4170:	ff 25 2a 3f 02 00    	jmp    *0x23f2a(%rip)        # 280a0 <__cxa_allocate_exception@CXXABI_1.3>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <_ZSt20__throw_length_errorPKc@plt>:
    4180:	ff 25 22 3f 02 00    	jmp    *0x23f22(%rip)        # 280a8 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkEnumeratePhysicalDevices@plt>:
    4190:	ff 25 1a 3f 02 00    	jmp    *0x23f1a(%rip)        # 280b0 <vkEnumeratePhysicalDevices@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <memset@plt>:
    41a0:	ff 25 12 3f 02 00    	jmp    *0x23f12(%rip)        # 280b8 <memset@GLIBC_2.2.5>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <_ZNSaIcEC1ERKS_@plt>:
    41b0:	ff 25 0a 3f 02 00    	jmp    *0x23f0a(%rip)        # 280c0 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkGetSwapchainImagesKHR@plt>:
    41c0:	ff 25 02 3f 02 00    	jmp    *0x23f02(%rip)        # 280c8 <vkGetSwapchainImagesKHR@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41d0:	ff 25 fa 3e 02 00    	jmp    *0x23efa(%rip)        # 280d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41e0:	ff 25 f2 3e 02 00    	jmp    *0x23ef2(%rip)        # 280d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkCreateRenderPass@plt>:
    41f0:	ff 25 ea 3e 02 00    	jmp    *0x23eea(%rip)        # 280e0 <vkCreateRenderPass@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4200:	ff 25 e2 3e 02 00    	jmp    *0x23ee2(%rip)        # 280e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4210:	ff 25 da 3e 02 00    	jmp    *0x23eda(%rip)        # 280f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4220:	ff 25 d2 3e 02 00    	jmp    *0x23ed2(%rip)        # 280f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZSt19__throw_logic_errorPKc@plt>:
    4230:	ff 25 ca 3e 02 00    	jmp    *0x23eca(%rip)        # 28100 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <__cxa_free_exception@plt>:
    4240:	ff 25 c2 3e 02 00    	jmp    *0x23ec2(%rip)        # 28108 <__cxa_free_exception@CXXABI_1.3>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4250:	ff 25 ba 3e 02 00    	jmp    *0x23eba(%rip)        # 28110 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <glfwGetRequiredInstanceExtensions@plt>:
    4260:	ff 25 b2 3e 02 00    	jmp    *0x23eb2(%rip)        # 28118 <glfwGetRequiredInstanceExtensions@Base>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4270:	ff 25 aa 3e 02 00    	jmp    *0x23eaa(%rip)        # 28120 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <vkCreateShaderModule@plt>:
    4280:	ff 25 a2 3e 02 00    	jmp    *0x23ea2(%rip)        # 28128 <vkCreateShaderModule@Base>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4290:	ff 25 9a 3e 02 00    	jmp    *0x23e9a(%rip)        # 28130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkDestroyDevice@plt>:
    42a0:	ff 25 92 3e 02 00    	jmp    *0x23e92(%rip)        # 28138 <vkDestroyDevice@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkCreatePipelineLayout@plt>:
    42b0:	ff 25 8a 3e 02 00    	jmp    *0x23e8a(%rip)        # 28140 <vkCreatePipelineLayout@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkEnumerateInstanceExtensionProperties@plt>:
    42c0:	ff 25 82 3e 02 00    	jmp    *0x23e82(%rip)        # 28148 <vkEnumerateInstanceExtensionProperties@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42d0:	ff 25 7a 3e 02 00    	jmp    *0x23e7a(%rip)        # 28150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <glfwWindowHint@plt>:
    42e0:	ff 25 72 3e 02 00    	jmp    *0x23e72(%rip)        # 28158 <glfwWindowHint@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    42f0:	ff 25 6a 3e 02 00    	jmp    *0x23e6a(%rip)        # 28160 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <__cxa_atexit@plt>:
    4300:	ff 25 62 3e 02 00    	jmp    *0x23e62(%rip)        # 28168 <__cxa_atexit@GLIBC_2.2.5>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4310:	ff 25 5a 3e 02 00    	jmp    *0x23e5a(%rip)        # 28170 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkAllocateCommandBuffers@plt>:
    4320:	ff 25 52 3e 02 00    	jmp    *0x23e52(%rip)        # 28178 <vkAllocateCommandBuffers@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkGetPhysicalDeviceProperties2@plt>:
    4330:	ff 25 4a 3e 02 00    	jmp    *0x23e4a(%rip)        # 28180 <vkGetPhysicalDeviceProperties2@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkGetInstanceProcAddr@plt>:
    4340:	ff 25 42 3e 02 00    	jmp    *0x23e42(%rip)        # 28188 <vkGetInstanceProcAddr@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <glfwPollEvents@plt>:
    4350:	ff 25 3a 3e 02 00    	jmp    *0x23e3a(%rip)        # 28190 <glfwPollEvents@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkDestroyRenderPass@plt>:
    4360:	ff 25 32 3e 02 00    	jmp    *0x23e32(%rip)        # 28198 <vkDestroyRenderPass@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4370:	ff 25 2a 3e 02 00    	jmp    *0x23e2a(%rip)        # 281a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <_Znwm@plt>:
    4380:	ff 25 22 3e 02 00    	jmp    *0x23e22(%rip)        # 281a8 <_Znwm@GLIBCXX_3.4>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZdlPvm@plt>:
    4390:	ff 25 1a 3e 02 00    	jmp    *0x23e1a(%rip)        # 281b0 <_ZdlPvm@CXXABI_1.3.9>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkDestroyInstance@plt>:
    43a0:	ff 25 12 3e 02 00    	jmp    *0x23e12(%rip)        # 281b8 <vkDestroyInstance@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <glfwTerminate@plt>:
    43b0:	ff 25 0a 3e 02 00    	jmp    *0x23e0a(%rip)        # 281c0 <glfwTerminate@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkCreateImageView@plt>:
    43c0:	ff 25 02 3e 02 00    	jmp    *0x23e02(%rip)        # 281c8 <vkCreateImageView@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    43d0:	ff 25 fa 3d 02 00    	jmp    *0x23dfa(%rip)        # 281d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZNSolsEPFRSoS_E@plt>:
    43e0:	ff 25 f2 3d 02 00    	jmp    *0x23df2(%rip)        # 281d8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    43f0:	ff 25 ea 3d 02 00    	jmp    *0x23dea(%rip)        # 281e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4400:	ff 25 e2 3d 02 00    	jmp    *0x23de2(%rip)        # 281e8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4410:	ff 25 da 3d 02 00    	jmp    *0x23dda(%rip)        # 281f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <_ZNSaIcED1Ev@plt>:
    4420:	ff 25 d2 3d 02 00    	jmp    *0x23dd2(%rip)        # 281f8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkDestroyPipeline@plt>:
    4430:	ff 25 ca 3d 02 00    	jmp    *0x23dca(%rip)        # 28200 <vkDestroyPipeline@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4440:	ff 25 c2 3d 02 00    	jmp    *0x23dc2(%rip)        # 28208 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4450:	ff 25 ba 3d 02 00    	jmp    *0x23dba(%rip)        # 28210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkEnumerateInstanceLayerProperties@plt>:
    4460:	ff 25 b2 3d 02 00    	jmp    *0x23db2(%rip)        # 28218 <vkEnumerateInstanceLayerProperties@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <glfwInit@plt>:
    4470:	ff 25 aa 3d 02 00    	jmp    *0x23daa(%rip)        # 28220 <glfwInit@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4480:	ff 25 a2 3d 02 00    	jmp    *0x23da2(%rip)        # 28228 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkCreateSwapchainKHR@plt>:
    4490:	ff 25 9a 3d 02 00    	jmp    *0x23d9a(%rip)        # 28230 <vkCreateSwapchainKHR@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    44a0:	ff 25 92 3d 02 00    	jmp    *0x23d92(%rip)        # 28238 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkDestroyShaderModule@plt>:
    44b0:	ff 25 8a 3d 02 00    	jmp    *0x23d8a(%rip)        # 28240 <vkDestroyShaderModule@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkCreateInstance@plt>:
    44c0:	ff 25 82 3d 02 00    	jmp    *0x23d82(%rip)        # 28248 <vkCreateInstance@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    44d0:	ff 25 7a 3d 02 00    	jmp    *0x23d7a(%rip)        # 28250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <vkDestroyPipelineLayout@plt>:
    44e0:	ff 25 72 3d 02 00    	jmp    *0x23d72(%rip)        # 28258 <vkDestroyPipelineLayout@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSi4readEPcl@plt>:
    44f0:	ff 25 6a 3d 02 00    	jmp    *0x23d6a(%rip)        # 28260 <_ZNSi4readEPcl@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4500:	ff 25 62 3d 02 00    	jmp    *0x23d62(%rip)        # 28268 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4510:	ff 25 5a 3d 02 00    	jmp    *0x23d5a(%rip)        # 28270 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4520:	ff 25 52 3d 02 00    	jmp    *0x23d52(%rip)        # 28278 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4530:	ff 25 4a 3d 02 00    	jmp    *0x23d4a(%rip)        # 28280 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkGetDeviceQueue@plt>:
    4540:	ff 25 42 3d 02 00    	jmp    *0x23d42(%rip)        # 28288 <vkGetDeviceQueue@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSolsEj@plt>:
    4550:	ff 25 3a 3d 02 00    	jmp    *0x23d3a(%rip)        # 28290 <_ZNSolsEj@GLIBCXX_3.4>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkCreateFramebuffer@plt>:
    4560:	ff 25 32 3d 02 00    	jmp    *0x23d32(%rip)        # 28298 <vkCreateFramebuffer@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4570:	ff 25 2a 3d 02 00    	jmp    *0x23d2a(%rip)        # 282a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4580:	ff 25 22 3d 02 00    	jmp    *0x23d22(%rip)        # 282a8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkEnumerateDeviceExtensionProperties@plt>:
    4590:	ff 25 1a 3d 02 00    	jmp    *0x23d1a(%rip)        # 282b0 <vkEnumerateDeviceExtensionProperties@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    45a0:	ff 25 12 3d 02 00    	jmp    *0x23d12(%rip)        # 282b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkDestroyCommandPool@plt>:
    45b0:	ff 25 0a 3d 02 00    	jmp    *0x23d0a(%rip)        # 282c0 <vkDestroyCommandPool@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <_ZNSaIcEC2ERKS_@plt>:
    45c0:	ff 25 02 3d 02 00    	jmp    *0x23d02(%rip)        # 282c8 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <__cxa_rethrow@plt>:
    45d0:	ff 25 fa 3c 02 00    	jmp    *0x23cfa(%rip)        # 282d0 <__cxa_rethrow@CXXABI_1.3>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkCreateDevice@plt>:
    45e0:	ff 25 f2 3c 02 00    	jmp    *0x23cf2(%rip)        # 282d8 <vkCreateDevice@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <_ZNSt8ios_base4InitC1Ev@plt>:
    45f0:	ff 25 ea 3c 02 00    	jmp    *0x23cea(%rip)        # 282e0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <glfwCreateWindowSurface@plt>:
    4600:	ff 25 e2 3c 02 00    	jmp    *0x23ce2(%rip)        # 282e8 <glfwCreateWindowSurface@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <glfwCreateWindow@plt>:
    4610:	ff 25 da 3c 02 00    	jmp    *0x23cda(%rip)        # 282f0 <glfwCreateWindow@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4620:	ff 25 d2 3c 02 00    	jmp    *0x23cd2(%rip)        # 282f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4630:	ff 25 ca 3c 02 00    	jmp    *0x23cca(%rip)        # 28300 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4640:	ff 25 c2 3c 02 00    	jmp    *0x23cc2(%rip)        # 28308 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4650:	ff 25 ba 3c 02 00    	jmp    *0x23cba(%rip)        # 28310 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <memmove@plt>:
    4660:	ff 25 b2 3c 02 00    	jmp    *0x23cb2(%rip)        # 28318 <memmove@GLIBC_2.2.5>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <__cxa_end_catch@plt>:
    4670:	ff 25 aa 3c 02 00    	jmp    *0x23caa(%rip)        # 28320 <__cxa_end_catch@CXXABI_1.3>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkDestroyFramebuffer@plt>:
    4680:	ff 25 a2 3c 02 00    	jmp    *0x23ca2(%rip)        # 28328 <vkDestroyFramebuffer@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <__cxa_throw@plt>:
    4690:	ff 25 9a 3c 02 00    	jmp    *0x23c9a(%rip)        # 28330 <__cxa_throw@CXXABI_1.3>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    46a0:	ff 25 92 3c 02 00    	jmp    *0x23c92(%rip)        # 28338 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    46b0:	ff 25 8a 3c 02 00    	jmp    *0x23c8a(%rip)        # 28340 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <_ZNSolsEi@plt>:
    46c0:	ff 25 82 3c 02 00    	jmp    *0x23c82(%rip)        # 28348 <_ZNSolsEi@GLIBCXX_3.4>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSi5tellgEv@plt>:
    46d0:	ff 25 7a 3c 02 00    	jmp    *0x23c7a(%rip)        # 28350 <_ZNSi5tellgEv@GLIBCXX_3.4>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkDestroySurfaceKHR@plt>:
    46e0:	ff 25 72 3c 02 00    	jmp    *0x23c72(%rip)        # 28358 <vkDestroySurfaceKHR@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_Unwind_Resume@plt>:
    46f0:	ff 25 6a 3c 02 00    	jmp    *0x23c6a(%rip)        # 28360 <_Unwind_Resume@GCC_3.0>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSaIcEC1Ev@plt>:
    4700:	ff 25 62 3c 02 00    	jmp    *0x23c62(%rip)        # 28368 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkDestroyImageView@plt>:
    4710:	ff 25 5a 3c 02 00    	jmp    *0x23c5a(%rip)        # 28370 <vkDestroyImageView@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4720:	ff 25 52 3c 02 00    	jmp    *0x23c52(%rip)        # 28378 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_ZNSt9exceptionD2Ev@plt>:
    4730:	ff 25 4a 3c 02 00    	jmp    *0x23c4a(%rip)        # 28380 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <glfwWindowShouldClose@plt>:
    4740:	ff 25 42 3c 02 00    	jmp    *0x23c42(%rip)        # 28388 <glfwWindowShouldClose@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSolsEd@plt>:
    4750:	ff 25 3a 3c 02 00    	jmp    *0x23c3a(%rip)        # 28390 <_ZNSolsEd@GLIBCXX_3.4>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4760:	ff 25 32 3c 02 00    	jmp    *0x23c32(%rip)        # 28398 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4770:	ff 25 2a 3c 02 00    	jmp    *0x23c2a(%rip)        # 283a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004780 <__cxa_finalize@plt>:
    4780:	ff 25 0a 38 02 00    	jmp    *0x2380a(%rip)        # 27f90 <__cxa_finalize@GLIBC_2.2.5>
    4786:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004790 <_start>:
    4790:	31 ed                	xor    %ebp,%ebp
    4792:	49 89 d1             	mov    %rdx,%r9
    4795:	5e                   	pop    %rsi
    4796:	48 89 e2             	mov    %rsp,%rdx
    4799:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    479d:	50                   	push   %rax
    479e:	54                   	push   %rsp
    479f:	45 31 c0             	xor    %r8d,%r8d
    47a2:	31 c9                	xor    %ecx,%ecx
    47a4:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4954 <main>
    47ab:	ff 15 ef 37 02 00    	call   *0x237ef(%rip)        # 27fa0 <__libc_start_main@GLIBC_2.34>
    47b1:	f4                   	hlt
    47b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    47b9:	00 00 00 
    47bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000047c0 <deregister_tm_clones>:
    47c0:	48 8d 3d 01 3c 02 00 	lea    0x23c01(%rip),%rdi        # 283c8 <__TMC_END__>
    47c7:	48 8d 05 fa 3b 02 00 	lea    0x23bfa(%rip),%rax        # 283c8 <__TMC_END__>
    47ce:	48 39 f8             	cmp    %rdi,%rax
    47d1:	74 15                	je     47e8 <deregister_tm_clones+0x28>
    47d3:	48 8b 05 d6 37 02 00 	mov    0x237d6(%rip),%rax        # 27fb0 <_ITM_deregisterTMCloneTable@Base>
    47da:	48 85 c0             	test   %rax,%rax
    47dd:	74 09                	je     47e8 <deregister_tm_clones+0x28>
    47df:	ff e0                	jmp    *%rax
    47e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    47e8:	c3                   	ret
    47e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047f0 <register_tm_clones>:
    47f0:	48 8d 3d d1 3b 02 00 	lea    0x23bd1(%rip),%rdi        # 283c8 <__TMC_END__>
    47f7:	48 8d 35 ca 3b 02 00 	lea    0x23bca(%rip),%rsi        # 283c8 <__TMC_END__>
    47fe:	48 29 fe             	sub    %rdi,%rsi
    4801:	48 89 f0             	mov    %rsi,%rax
    4804:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4808:	48 c1 f8 03          	sar    $0x3,%rax
    480c:	48 01 c6             	add    %rax,%rsi
    480f:	48 d1 fe             	sar    %rsi
    4812:	74 14                	je     4828 <register_tm_clones+0x38>
    4814:	48 8b 05 a5 37 02 00 	mov    0x237a5(%rip),%rax        # 27fc0 <_ITM_registerTMCloneTable@Base>
    481b:	48 85 c0             	test   %rax,%rax
    481e:	74 08                	je     4828 <register_tm_clones+0x38>
    4820:	ff e0                	jmp    *%rax
    4822:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4828:	c3                   	ret
    4829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004830 <__do_global_dtors_aux>:
    4830:	f3 0f 1e fa          	endbr64
    4834:	80 3d f5 3d 02 00 00 	cmpb   $0x0,0x23df5(%rip)        # 28630 <completed.0>
    483b:	75 2b                	jne    4868 <__do_global_dtors_aux+0x38>
    483d:	55                   	push   %rbp
    483e:	48 83 3d 4a 37 02 00 	cmpq   $0x0,0x2374a(%rip)        # 27f90 <__cxa_finalize@GLIBC_2.2.5>
    4845:	00 
    4846:	48 89 e5             	mov    %rsp,%rbp
    4849:	74 0c                	je     4857 <__do_global_dtors_aux+0x27>
    484b:	48 8b 3d 5e 3b 02 00 	mov    0x23b5e(%rip),%rdi        # 283b0 <__dso_handle>
    4852:	e8 29 ff ff ff       	call   4780 <__cxa_finalize@plt>
    4857:	e8 64 ff ff ff       	call   47c0 <deregister_tm_clones>
    485c:	c6 05 cd 3d 02 00 01 	movb   $0x1,0x23dcd(%rip)        # 28630 <completed.0>
    4863:	5d                   	pop    %rbp
    4864:	c3                   	ret
    4865:	0f 1f 00             	nopl   (%rax)
    4868:	c3                   	ret
    4869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004870 <frame_dummy>:
    4870:	f3 0f 1e fa          	endbr64
    4874:	e9 77 ff ff ff       	jmp    47f0 <register_tm_clones>

0000000000004879 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4879:	55                   	push   %rbp
    487a:	48 89 e5             	mov    %rsp,%rbp
    487d:	53                   	push   %rbx
    487e:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
  VulkanApp app;
    4885:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    488c:	48 89 c7             	mov    %rax,%rdi
    488f:	e8 9c a6 00 00       	call   ef30 <_ZN9VulkanAppC1Ev>
  app.run();
    4894:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    489b:	48 89 c7             	mov    %rax,%rdi
    489e:	e8 cb ab 00 00       	call   f46e <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    48a3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48a7:	48 89 c7             	mov    %rax,%rdi
    48aa:	e8 51 fe ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    48af:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    48b3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48b7:	48 8d 0d 26 2d 01 00 	lea    0x12d26(%rip),%rcx        # 175e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    48be:	48 89 ce             	mov    %rcx,%rsi
    48c1:	48 89 c7             	mov    %rax,%rdi
    48c4:	e8 77 02 00 00       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    48c9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    48cd:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    48d4:	48 89 d6             	mov    %rdx,%rsi
    48d7:	48 89 c7             	mov    %rax,%rdi
    48da:	e8 d3 ac 00 00       	call   f5b2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    48df:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48e3:	48 89 c7             	mov    %rax,%rdi
    48e6:	e8 f5 f8 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48eb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48ef:	48 89 c7             	mov    %rax,%rdi
    48f2:	e8 29 fb ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    48f7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    48fc:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    4903:	48 89 c7             	mov    %rax,%rdi
    4906:	e8 bd a8 00 00       	call   f1c8 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    490b:	89 d8                	mov    %ebx,%eax
    490d:	eb 3f                	jmp    494e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    490f:	48 89 c3             	mov    %rax,%rbx
    4912:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4916:	48 89 c7             	mov    %rax,%rdi
    4919:	e8 c2 f8 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    491e:	eb 03                	jmp    4923 <_Z14protected_mainv+0xaa>
    4920:	48 89 c3             	mov    %rax,%rbx
    4923:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4927:	48 89 c7             	mov    %rax,%rdi
    492a:	e8 f1 fa ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    492f:	eb 03                	jmp    4934 <_Z14protected_mainv+0xbb>
}
    4931:	48 89 c3             	mov    %rax,%rbx
    4934:	48 8d 85 a0 fe ff ff 	lea    -0x160(%rbp),%rax
    493b:	48 89 c7             	mov    %rax,%rdi
    493e:	e8 85 a8 00 00       	call   f1c8 <_ZN9VulkanAppD1Ev>
    4943:	48 89 d8             	mov    %rbx,%rax
    4946:	48 89 c7             	mov    %rax,%rdi
    4949:	e8 a2 fd ff ff       	call   46f0 <_Unwind_Resume@plt>
    494e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4952:	c9                   	leave
    4953:	c3                   	ret

0000000000004954 <main>:

int main() {
    4954:	55                   	push   %rbp
    4955:	48 89 e5             	mov    %rsp,%rbp
    4958:	53                   	push   %rbx
    4959:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    495d:	e8 17 ff ff ff       	call   4879 <_Z14protected_mainv>
    4962:	e9 aa 00 00 00       	jmp    4a11 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4967:	b8 01 00 00 00       	mov    $0x1,%eax
    496c:	e9 a0 00 00 00       	jmp    4a11 <main+0xbd>
  } catch (const std::exception &e) {
    4971:	48 83 fa 01          	cmp    $0x1,%rdx
    4975:	75 49                	jne    49c0 <main+0x6c>
    4977:	48 89 c7             	mov    %rax,%rdi
    497a:	e8 a1 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    497f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4987:	48 8b 00             	mov    (%rax),%rax
    498a:	48 83 c0 10          	add    $0x10,%rax
    498e:	48 8b 10             	mov    (%rax),%rdx
    4991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4995:	48 89 c7             	mov    %rax,%rdi
    4998:	ff d2                	call   *%rdx
    499a:	48 89 c6             	mov    %rax,%rsi
    499d:	48 8d 05 7c 3b 02 00 	lea    0x23b7c(%rip),%rax        # 28520 <_ZSt4cerr@GLIBCXX_3.4>
    49a4:	48 89 c7             	mov    %rax,%rdi
    49a7:	e8 c4 f9 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    49ac:	be 0a 00 00 00       	mov    $0xa,%esi
    49b1:	48 89 c7             	mov    %rax,%rdi
    49b4:	e8 c7 fa ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    49b9:	e8 b2 fc ff ff       	call   4670 <__cxa_end_catch@plt>
    49be:	eb a7                	jmp    4967 <main+0x13>
    49c0:	48 89 c7             	mov    %rax,%rdi
    49c3:	e8 58 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    49c8:	48 8d 05 1e 2c 01 00 	lea    0x12c1e(%rip),%rax        # 175ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    49cf:	48 89 c6             	mov    %rax,%rsi
    49d2:	48 8d 05 47 3b 02 00 	lea    0x23b47(%rip),%rax        # 28520 <_ZSt4cerr@GLIBCXX_3.4>
    49d9:	48 89 c7             	mov    %rax,%rdi
    49dc:	e8 8f f9 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    49e1:	e8 8a fc ff ff       	call   4670 <__cxa_end_catch@plt>
    49e6:	e9 7c ff ff ff       	jmp    4967 <main+0x13>
  } catch (...) {
    49eb:	48 89 c3             	mov    %rax,%rbx
    49ee:	e8 7d fc ff ff       	call   4670 <__cxa_end_catch@plt>
    49f3:	48 89 d8             	mov    %rbx,%rax
    49f6:	48 89 c7             	mov    %rax,%rdi
    49f9:	e8 f2 fc ff ff       	call   46f0 <_Unwind_Resume@plt>
  }
    49fe:	48 89 c3             	mov    %rax,%rbx
    4a01:	e8 6a fc ff ff       	call   4670 <__cxa_end_catch@plt>
    4a06:	48 89 d8             	mov    %rbx,%rax
    4a09:	48 89 c7             	mov    %rax,%rdi
    4a0c:	e8 df fc ff ff       	call   46f0 <_Unwind_Resume@plt>
    4a11:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a15:	c9                   	leave
    4a16:	c3                   	ret

0000000000004a17 <_Z41__static_initialization_and_destruction_0ii>:
    4a17:	55                   	push   %rbp
    4a18:	48 89 e5             	mov    %rsp,%rbp
    4a1b:	48 83 ec 10          	sub    $0x10,%rsp
    4a1f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4a22:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4a25:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    4a29:	75 3b                	jne    4a66 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    4a2b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4a32:	75 32                	jne    4a66 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4a34:	48 8d 05 f6 3b 02 00 	lea    0x23bf6(%rip),%rax        # 28631 <_ZStL8__ioinit>
    4a3b:	48 89 c7             	mov    %rax,%rdi
    4a3e:	e8 ad fb ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
    4a43:	48 8d 05 66 39 02 00 	lea    0x23966(%rip),%rax        # 283b0 <__dso_handle>
    4a4a:	48 89 c2             	mov    %rax,%rdx
    4a4d:	48 8d 05 dd 3b 02 00 	lea    0x23bdd(%rip),%rax        # 28631 <_ZStL8__ioinit>
    4a54:	48 89 c6             	mov    %rax,%rsi
    4a57:	48 8b 05 6a 35 02 00 	mov    0x2356a(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4a5e:	48 89 c7             	mov    %rax,%rdi
    4a61:	e8 9a f8 ff ff       	call   4300 <__cxa_atexit@plt>
    4a66:	90                   	nop
    4a67:	c9                   	leave
    4a68:	c3                   	ret

0000000000004a69 <_GLOBAL__sub_I__Z14protected_mainv>:
    4a69:	55                   	push   %rbp
    4a6a:	48 89 e5             	mov    %rsp,%rbp
    4a6d:	be ff ff 00 00       	mov    $0xffff,%esi
    4a72:	bf 01 00 00 00       	mov    $0x1,%edi
    4a77:	e8 9b ff ff ff       	call   4a17 <_Z41__static_initialization_and_destruction_0ii>
    4a7c:	5d                   	pop    %rbp
    4a7d:	c3                   	ret

0000000000004a7e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4a7e:	55                   	push   %rbp
    4a7f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4a82:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4a87:	5d                   	pop    %rbp
    4a88:	c3                   	ret

0000000000004a89 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4a89:	55                   	push   %rbp
    4a8a:	48 89 e5             	mov    %rsp,%rbp
    4a8d:	48 83 ec 10          	sub    $0x10,%rsp
    4a91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4a95:	e8 e4 ff ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
    4a9a:	84 c0                	test   %al,%al
    4a9c:	74 0e                	je     4aac <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa2:	48 89 c7             	mov    %rax,%rdi
    4aa5:	e8 12 00 00 00       	call   4abc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4aaa:	eb 0d                	jmp    4ab9 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab0:	48 89 c7             	mov    %rax,%rdi
    4ab3:	e8 88 f6 ff ff       	call   4140 <strlen@plt>
    4ab8:	90                   	nop
      }
    4ab9:	c9                   	leave
    4aba:	c3                   	ret
    4abb:	90                   	nop

0000000000004abc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4abc:	55                   	push   %rbp
    4abd:	48 89 e5             	mov    %rsp,%rbp
    4ac0:	48 83 ec 20          	sub    $0x20,%rsp
    4ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4ac8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4acf:	00 
      while (!eq(__p[__i], char_type()))
    4ad0:	eb 05                	jmp    4ad7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4ad2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4ad7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4adb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae3:	48 01 c2             	add    %rax,%rdx
    4ae6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4aea:	48 89 c6             	mov    %rax,%rsi
    4aed:	48 89 d7             	mov    %rdx,%rdi
    4af0:	e8 0d 00 00 00       	call   4b02 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4af5:	83 f0 01             	xor    $0x1,%eax
    4af8:	84 c0                	test   %al,%al
    4afa:	75 d6                	jne    4ad2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4b00:	c9                   	leave
    4b01:	c3                   	ret

0000000000004b02 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4b02:	55                   	push   %rbp
    4b03:	48 89 e5             	mov    %rsp,%rbp
    4b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b12:	0f b6 10             	movzbl (%rax),%edx
    4b15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b19:	0f b6 00             	movzbl (%rax),%eax
    4b1c:	38 c2                	cmp    %al,%dl
    4b1e:	0f 94 c0             	sete   %al
    4b21:	5d                   	pop    %rbp
    4b22:	c3                   	ret
    4b23:	90                   	nop

0000000000004b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4b24:	55                   	push   %rbp
    4b25:	48 89 e5             	mov    %rsp,%rbp
    4b28:	48 83 ec 10          	sub    $0x10,%rsp
    4b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b34:	48 89 c7             	mov    %rax,%rdi
    4b37:	e8 24 f5 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    4b3c:	90                   	nop
    4b3d:	c9                   	leave
    4b3e:	c3                   	ret
    4b3f:	90                   	nop

0000000000004b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4b40:	55                   	push   %rbp
    4b41:	48 89 e5             	mov    %rsp,%rbp
    4b44:	53                   	push   %rbx
    4b45:	48 83 ec 38          	sub    $0x38,%rsp
    4b49:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b4d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b51:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4b55:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4b59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b5d:	48 89 c7             	mov    %rax,%rdi
    4b60:	e8 2b f7 ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4b65:	48 89 c1             	mov    %rax,%rcx
    4b68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b6c:	48 89 c2             	mov    %rax,%rdx
    4b6f:	48 89 ce             	mov    %rcx,%rsi
    4b72:	48 89 df             	mov    %rbx,%rdi
    4b75:	e8 76 f8 ff ff       	call   43f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4b7a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4b7f:	75 0f                	jne    4b90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4b81:	48 8d 05 80 2a 01 00 	lea    0x12a80(%rip),%rax        # 17608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4b88:	48 89 c7             	mov    %rax,%rdi
    4b8b:	e8 a0 f6 ff ff       	call   4230 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4b90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b94:	48 89 c7             	mov    %rax,%rdi
    4b97:	e8 ed fe ff ff       	call   4a89 <_ZNSt11char_traitsIcE6lengthEPKc>
    4b9c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4ba0:	48 01 d0             	add    %rdx,%rax
    4ba3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4ba7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4bab:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4baf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bb3:	48 89 ce             	mov    %rcx,%rsi
    4bb6:	48 89 c7             	mov    %rax,%rdi
    4bb9:	e8 66 00 00 00       	call   4c24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4bbe:	eb 1a                	jmp    4bda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4bc0:	48 89 c3             	mov    %rax,%rbx
    4bc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bc7:	48 89 c7             	mov    %rax,%rdi
    4bca:	e8 55 ff ff ff       	call   4b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4bcf:	48 89 d8             	mov    %rbx,%rax
    4bd2:	48 89 c7             	mov    %rax,%rdi
    4bd5:	e8 16 fb ff ff       	call   46f0 <_Unwind_Resume@plt>
    4bda:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bde:	c9                   	leave
    4bdf:	c3                   	ret

0000000000004be0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4be0:	55                   	push   %rbp
    4be1:	48 89 e5             	mov    %rsp,%rbp
    4be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4be8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4bf4:	48 89 10             	mov    %rdx,(%rax)
    4bf7:	90                   	nop
    4bf8:	5d                   	pop    %rbp
    4bf9:	c3                   	ret

0000000000004bfa <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4bfa:	55                   	push   %rbp
    4bfb:	48 89 e5             	mov    %rsp,%rbp
    4bfe:	48 83 ec 10          	sub    $0x10,%rsp
    4c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c0a:	48 8b 00             	mov    (%rax),%rax
    4c0d:	48 85 c0             	test   %rax,%rax
    4c10:	74 0f                	je     4c21 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c16:	48 8b 00             	mov    (%rax),%rax
    4c19:	48 89 c7             	mov    %rax,%rdi
    4c1c:	e8 af f8 ff ff       	call   44d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4c21:	90                   	nop
    4c22:	c9                   	leave
    4c23:	c3                   	ret

0000000000004c24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4c24:	55                   	push   %rbp
    4c25:	48 89 e5             	mov    %rsp,%rbp
    4c28:	48 83 ec 40          	sub    $0x40,%rsp
    4c2c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c30:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c34:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4c38:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c40:	48 89 d6             	mov    %rdx,%rsi
    4c43:	48 89 c7             	mov    %rax,%rdi
    4c46:	e8 c0 00 00 00       	call   4d0b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4c4b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4c4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c53:	48 83 f8 0f          	cmp    $0xf,%rax
    4c57:	76 3f                	jbe    4c98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4c59:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4c5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c61:	ba 00 00 00 00       	mov    $0x0,%edx
    4c66:	48 89 ce             	mov    %rcx,%rsi
    4c69:	48 89 c7             	mov    %rax,%rdi
    4c6c:	e8 af fa ff ff       	call   4720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4c71:	48 89 c2             	mov    %rax,%rdx
    4c74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c78:	48 89 d6             	mov    %rdx,%rsi
    4c7b:	48 89 c7             	mov    %rax,%rdi
    4c7e:	e8 4d f6 ff ff       	call   42d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4c83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c8b:	48 89 d6             	mov    %rdx,%rsi
    4c8e:	48 89 c7             	mov    %rax,%rdi
    4c91:	e8 da fa ff ff       	call   4770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4c96:	eb 15                	jmp    4cad <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4c98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ca4:	48 89 c7             	mov    %rax,%rdi
    4ca7:	e8 e4 f5 ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4cac:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4cad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4cb1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4cb5:	48 89 d6             	mov    %rdx,%rsi
    4cb8:	48 89 c7             	mov    %rax,%rdi
    4cbb:	e8 20 ff ff ff       	call   4be0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4cc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cc4:	48 89 c7             	mov    %rax,%rdi
    4cc7:	e8 74 f7 ff ff       	call   4440 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4ccc:	48 89 c1             	mov    %rax,%rcx
    4ccf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4cd3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4cd7:	48 89 c6             	mov    %rax,%rsi
    4cda:	48 89 cf             	mov    %rcx,%rdi
    4cdd:	e8 6e f7 ff ff       	call   4450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4ce2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4ce9:	00 

	_M_set_length(__dnew);
    4cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cf2:	48 89 d6             	mov    %rdx,%rsi
    4cf5:	48 89 c7             	mov    %rax,%rdi
    4cf8:	e8 03 f5 ff ff       	call   4200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4cfd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4d01:	48 89 c7             	mov    %rax,%rdi
    4d04:	e8 f1 fe ff ff       	call   4bfa <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4d09:	c9                   	leave
    4d0a:	c3                   	ret

0000000000004d0b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4d0b:	55                   	push   %rbp
    4d0c:	48 89 e5             	mov    %rsp,%rbp
    4d0f:	48 83 ec 10          	sub    $0x10,%rsp
    4d13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4d1b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4d1f:	48 89 c7             	mov    %rax,%rdi
    4d22:	e8 15 00 00 00       	call   4d3c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d2f:	48 89 d6             	mov    %rdx,%rsi
    4d32:	48 89 c7             	mov    %rax,%rdi
    4d35:	e8 0d 00 00 00       	call   4d47 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4d3a:	c9                   	leave
    4d3b:	c3                   	ret

0000000000004d3c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4d3c:	55                   	push   %rbp
    4d3d:	48 89 e5             	mov    %rsp,%rbp
    4d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4d44:	90                   	nop
    4d45:	5d                   	pop    %rbp
    4d46:	c3                   	ret

0000000000004d47 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4d47:	55                   	push   %rbp
    4d48:	48 89 e5             	mov    %rsp,%rbp
    4d4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4d53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d57:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4d5b:	5d                   	pop    %rbp
    4d5c:	c3                   	ret

0000000000004d5d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4d5d:	55                   	push   %rbp
    4d5e:	48 89 e5             	mov    %rsp,%rbp
    4d61:	41 54                	push   %r12
    4d63:	53                   	push   %rbx
    4d64:	48 83 ec 30          	sub    $0x30,%rsp
    4d68:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d6c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d70:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4d74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d78:	8b 40 1c             	mov    0x1c(%rax),%eax
    4d7b:	89 c3                	mov    %eax,%ebx
    4d7d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d81:	48 89 c7             	mov    %rax,%rdi
    4d84:	e8 13 01 00 00       	call   4e9c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4d89:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d91:	48 89 de             	mov    %rbx,%rsi
    4d94:	48 89 c7             	mov    %rax,%rdi
    4d97:	e8 38 01 00 00       	call   4ed4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4d9c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4da0:	48 89 c7             	mov    %rax,%rdi
    4da3:	e8 10 01 00 00       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4da8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dac:	48 89 c7             	mov    %rax,%rdi
    4daf:	e8 da 01 00 00       	call   4f8e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4db4:	48 89 c2             	mov    %rax,%rdx
    4db7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4dbb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4dbf:	48 89 ce             	mov    %rcx,%rsi
    4dc2:	48 89 c7             	mov    %rax,%rdi
    4dc5:	e8 56 f5 ff ff       	call   4320 <vkAllocateCommandBuffers@plt>
    4dca:	85 c0                	test   %eax,%eax
    4dcc:	0f 95 c0             	setne  %al
    4dcf:	84 c0                	test   %al,%al
    4dd1:	74 7f                	je     4e52 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4dd3:	bf 10 00 00 00       	mov    $0x10,%edi
    4dd8:	e8 93 f3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    4ddd:	48 89 c3             	mov    %rax,%rbx
    4de0:	48 8d 05 31 2e 01 00 	lea    0x12e31(%rip),%rax        # 17c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4de7:	48 89 c6             	mov    %rax,%rsi
    4dea:	48 89 df             	mov    %rbx,%rdi
    4ded:	e8 0e f3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4df2:	48 8b 05 af 31 02 00 	mov    0x231af(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4df9:	48 89 c2             	mov    %rax,%rdx
    4dfc:	48 8d 05 3d 2f 02 00 	lea    0x22f3d(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4e03:	48 89 c6             	mov    %rax,%rsi
    4e06:	48 89 df             	mov    %rbx,%rdi
    4e09:	e8 82 f8 ff ff       	call   4690 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4e0e:	48 89 c3             	mov    %rax,%rbx
    4e11:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e15:	48 89 c7             	mov    %rax,%rdi
    4e18:	e8 9b 00 00 00       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e1d:	48 89 d8             	mov    %rbx,%rax
    4e20:	48 89 c7             	mov    %rax,%rdi
    4e23:	e8 c8 f8 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4e28:	49 89 c4             	mov    %rax,%r12
    4e2b:	48 89 df             	mov    %rbx,%rdi
    4e2e:	e8 0d f4 ff ff       	call   4240 <__cxa_free_exception@plt>
    4e33:	4c 89 e3             	mov    %r12,%rbx
    4e36:	eb 03                	jmp    4e3b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4e38:	48 89 c3             	mov    %rax,%rbx
    4e3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e3f:	48 89 c7             	mov    %rax,%rdi
    4e42:	e8 03 01 00 00       	call   4f4a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4e47:	48 89 d8             	mov    %rbx,%rax
    4e4a:	48 89 c7             	mov    %rax,%rdi
    4e4d:	e8 9e f8 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return commandBuffers;
    4e52:	90                   	nop
}
    4e53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e57:	48 83 c4 30          	add    $0x30,%rsp
    4e5b:	5b                   	pop    %rbx
    4e5c:	41 5c                	pop    %r12
    4e5e:	5d                   	pop    %rbp
    4e5f:	c3                   	ret

0000000000004e60 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4e60:	55                   	push   %rbp
    4e61:	48 89 e5             	mov    %rsp,%rbp
    4e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e70:	5d                   	pop    %rbp
    4e71:	c3                   	ret

0000000000004e72 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e72:	55                   	push   %rbp
    4e73:	48 89 e5             	mov    %rsp,%rbp
    4e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7e:	5d                   	pop    %rbp
    4e7f:	c3                   	ret

0000000000004e80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e80:	55                   	push   %rbp
    4e81:	48 89 e5             	mov    %rsp,%rbp
    4e84:	48 83 ec 10          	sub    $0x10,%rsp
    4e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e90:	48 89 c7             	mov    %rax,%rdi
    4e93:	e8 20 00 00 00       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e98:	90                   	nop
    4e99:	c9                   	leave
    4e9a:	c3                   	ret
    4e9b:	90                   	nop

0000000000004e9c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e9c:	55                   	push   %rbp
    4e9d:	48 89 e5             	mov    %rsp,%rbp
    4ea0:	48 83 ec 10          	sub    $0x10,%rsp
    4ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eac:	48 89 c7             	mov    %rax,%rdi
    4eaf:	e8 4c 01 00 00       	call   5000 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    4eb4:	90                   	nop
    4eb5:	c9                   	leave
    4eb6:	c3                   	ret
    4eb7:	90                   	nop

0000000000004eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4eb8:	55                   	push   %rbp
    4eb9:	48 89 e5             	mov    %rsp,%rbp
    4ebc:	48 83 ec 10          	sub    $0x10,%rsp
    4ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ec8:	48 89 c7             	mov    %rax,%rdi
    4ecb:	e8 3c 01 00 00       	call   500c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    4ed0:	90                   	nop
    4ed1:	c9                   	leave
    4ed2:	c3                   	ret
    4ed3:	90                   	nop

0000000000004ed4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4ed4:	55                   	push   %rbp
    4ed5:	48 89 e5             	mov    %rsp,%rbp
    4ed8:	53                   	push   %rbx
    4ed9:	48 83 ec 28          	sub    $0x28,%rsp
    4edd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ee1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ee5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4ee9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4eed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ef1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ef5:	48 89 d6             	mov    %rdx,%rsi
    4ef8:	48 89 c7             	mov    %rax,%rdi
    4efb:	e8 17 01 00 00       	call   5017 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4f00:	48 89 c1             	mov    %rax,%rcx
    4f03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f07:	48 89 c2             	mov    %rax,%rdx
    4f0a:	48 89 ce             	mov    %rcx,%rsi
    4f0d:	48 89 df             	mov    %rbx,%rdi
    4f10:	e8 63 01 00 00       	call   5078 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4f15:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4f19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f1d:	48 89 d6             	mov    %rdx,%rsi
    4f20:	48 89 c7             	mov    %rax,%rdi
    4f23:	e8 ae 01 00 00       	call   50d6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    4f28:	eb 1a                	jmp    4f44 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    4f2a:	48 89 c3             	mov    %rax,%rbx
    4f2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f31:	48 89 c7             	mov    %rax,%rdi
    4f34:	e8 79 00 00 00       	call   4fb2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f39:	48 89 d8             	mov    %rbx,%rax
    4f3c:	48 89 c7             	mov    %rax,%rdi
    4f3f:	e8 ac f7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    4f44:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f48:	c9                   	leave
    4f49:	c3                   	ret

0000000000004f4a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	48 83 ec 10          	sub    $0x10,%rsp
    4f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5a:	48 89 c7             	mov    %rax,%rdi
    4f5d:	e8 b4 01 00 00       	call   5116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f62:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f69:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f71:	48 8b 00             	mov    (%rax),%rax
    4f74:	48 89 ce             	mov    %rcx,%rsi
    4f77:	48 89 c7             	mov    %rax,%rdi
    4f7a:	e8 a5 01 00 00       	call   5124 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f83:	48 89 c7             	mov    %rax,%rdi
    4f86:	e8 27 00 00 00       	call   4fb2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f8b:	90                   	nop
    4f8c:	c9                   	leave
    4f8d:	c3                   	ret

0000000000004f8e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4f8e:	55                   	push   %rbp
    4f8f:	48 89 e5             	mov    %rsp,%rbp
    4f92:	48 83 ec 10          	sub    $0x10,%rsp
    4f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f9e:	48 8b 10             	mov    (%rax),%rdx
    4fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa5:	48 89 d6             	mov    %rdx,%rsi
    4fa8:	48 89 c7             	mov    %rax,%rdi
    4fab:	e8 9e 01 00 00       	call   514e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4fb0:	c9                   	leave
    4fb1:	c3                   	ret

0000000000004fb2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4fb2:	55                   	push   %rbp
    4fb3:	48 89 e5             	mov    %rsp,%rbp
    4fb6:	48 83 ec 10          	sub    $0x10,%rsp
    4fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fca:	48 8b 00             	mov    (%rax),%rax
    4fcd:	48 29 c2             	sub    %rax,%rdx
    4fd0:	48 89 d0             	mov    %rdx,%rax
    4fd3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4fd7:	48 89 c2             	mov    %rax,%rdx
    4fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fde:	48 8b 08             	mov    (%rax),%rcx
    4fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe5:	48 89 ce             	mov    %rcx,%rsi
    4fe8:	48 89 c7             	mov    %rax,%rdi
    4feb:	e8 96 01 00 00       	call   5186 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ff4:	48 89 c7             	mov    %rax,%rdi
    4ff7:	e8 84 fe ff ff       	call   4e80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    4ffc:	90                   	nop
    4ffd:	c9                   	leave
    4ffe:	c3                   	ret
    4fff:	90                   	nop

0000000000005000 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5000:	55                   	push   %rbp
    5001:	48 89 e5             	mov    %rsp,%rbp
    5004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5008:	90                   	nop
    5009:	5d                   	pop    %rbp
    500a:	c3                   	ret
    500b:	90                   	nop

000000000000500c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    500c:	55                   	push   %rbp
    500d:	48 89 e5             	mov    %rsp,%rbp
    5010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5014:	90                   	nop
    5015:	5d                   	pop    %rbp
    5016:	c3                   	ret

0000000000005017 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5017:	55                   	push   %rbp
    5018:	48 89 e5             	mov    %rsp,%rbp
    501b:	53                   	push   %rbx
    501c:	48 83 ec 28          	sub    $0x28,%rsp
    5020:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5024:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5028:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    502c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5030:	48 89 d6             	mov    %rdx,%rsi
    5033:	48 89 c7             	mov    %rax,%rdi
    5036:	e8 25 01 00 00       	call   5160 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    503b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    503f:	48 89 c7             	mov    %rax,%rdi
    5042:	e8 74 01 00 00       	call   51bb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5047:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    504b:	0f 92 c3             	setb   %bl
    504e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5052:	48 89 c7             	mov    %rax,%rdi
    5055:	e8 5e fe ff ff       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    505a:	84 db                	test   %bl,%bl
    505c:	74 0f                	je     506d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    505e:	48 8d 05 db 2b 01 00 	lea    0x12bdb(%rip),%rax        # 17c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    5065:	48 89 c7             	mov    %rax,%rdi
    5068:	e8 13 f1 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    506d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5071:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5075:	c9                   	leave
    5076:	c3                   	ret
    5077:	90                   	nop

0000000000005078 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5078:	55                   	push   %rbp
    5079:	48 89 e5             	mov    %rsp,%rbp
    507c:	53                   	push   %rbx
    507d:	48 83 ec 28          	sub    $0x28,%rsp
    5081:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5085:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5089:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    508d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5091:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5095:	48 89 d6             	mov    %rdx,%rsi
    5098:	48 89 c7             	mov    %rax,%rdi
    509b:	e8 5e 01 00 00       	call   51fe <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    50a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    50a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50a8:	48 89 d6             	mov    %rdx,%rsi
    50ab:	48 89 c7             	mov    %rax,%rdi
    50ae:	e8 7d 01 00 00       	call   5230 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    50b3:	eb 1a                	jmp    50cf <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    50b5:	48 89 c3             	mov    %rax,%rbx
    50b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50bc:	48 89 c7             	mov    %rax,%rdi
    50bf:	e8 bc fd ff ff       	call   4e80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    50c4:	48 89 d8             	mov    %rbx,%rax
    50c7:	48 89 c7             	mov    %rax,%rdi
    50ca:	e8 21 f6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    50cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50d3:	c9                   	leave
    50d4:	c3                   	ret
    50d5:	90                   	nop

00000000000050d6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    50d6:	55                   	push   %rbp
    50d7:	48 89 e5             	mov    %rsp,%rbp
    50da:	48 83 ec 10          	sub    $0x10,%rsp
    50de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    50e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ea:	48 89 c7             	mov    %rax,%rdi
    50ed:	e8 24 00 00 00       	call   5116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    50f2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    50f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f9:	48 8b 00             	mov    (%rax),%rax
    50fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5100:	48 89 ce             	mov    %rcx,%rsi
    5103:	48 89 c7             	mov    %rax,%rdi
    5106:	e8 7b 01 00 00       	call   5286 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    510b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    510f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5113:	90                   	nop
    5114:	c9                   	leave
    5115:	c3                   	ret

0000000000005116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5116:	55                   	push   %rbp
    5117:	48 89 e5             	mov    %rsp,%rbp
    511a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    511e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5122:	5d                   	pop    %rbp
    5123:	c3                   	ret

0000000000005124 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5124:	55                   	push   %rbp
    5125:	48 89 e5             	mov    %rsp,%rbp
    5128:	48 83 ec 20          	sub    $0x20,%rsp
    512c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5130:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5134:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5138:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    513c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5140:	48 89 d6             	mov    %rdx,%rsi
    5143:	48 89 c7             	mov    %rax,%rdi
    5146:	e8 64 01 00 00       	call   52af <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    514b:	90                   	nop
    514c:	c9                   	leave
    514d:	c3                   	ret

000000000000514e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    514e:	55                   	push   %rbp
    514f:	48 89 e5             	mov    %rsp,%rbp
    5152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5156:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    515a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    515e:	5d                   	pop    %rbp
    515f:	c3                   	ret

0000000000005160 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5160:	55                   	push   %rbp
    5161:	48 89 e5             	mov    %rsp,%rbp
    5164:	48 83 ec 10          	sub    $0x10,%rsp
    5168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    516c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5170:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5178:	48 89 d6             	mov    %rdx,%rsi
    517b:	48 89 c7             	mov    %rax,%rdi
    517e:	e8 53 01 00 00       	call   52d6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5183:	90                   	nop
    5184:	c9                   	leave
    5185:	c3                   	ret

0000000000005186 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5186:	55                   	push   %rbp
    5187:	48 89 e5             	mov    %rsp,%rbp
    518a:	48 83 ec 20          	sub    $0x20,%rsp
    518e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5196:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    519a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    519f:	74 17                	je     51b8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    51a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    51ad:	48 89 ce             	mov    %rcx,%rsi
    51b0:	48 89 c7             	mov    %rax,%rdi
    51b3:	e8 2d 01 00 00       	call   52e5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    51b8:	90                   	nop
    51b9:	c9                   	leave
    51ba:	c3                   	ret

00000000000051bb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    51bb:	55                   	push   %rbp
    51bc:	48 89 e5             	mov    %rsp,%rbp
    51bf:	48 83 ec 20          	sub    $0x20,%rsp
    51c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    51c7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    51ce:	ff ff 0f 
    51d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    51d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51d9:	48 89 c7             	mov    %rax,%rdi
    51dc:	e8 32 01 00 00       	call   5313 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    51e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    51e5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    51e9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    51ed:	48 89 d6             	mov    %rdx,%rsi
    51f0:	48 89 c7             	mov    %rax,%rdi
    51f3:	e8 35 01 00 00       	call   532d <_ZSt3minImERKT_S2_S2_>
    51f8:	48 8b 00             	mov    (%rax),%rax
      }
    51fb:	c9                   	leave
    51fc:	c3                   	ret
    51fd:	90                   	nop

00000000000051fe <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    51fe:	55                   	push   %rbp
    51ff:	48 89 e5             	mov    %rsp,%rbp
    5202:	48 83 ec 10          	sub    $0x10,%rsp
    5206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    520a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    520e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5216:	48 89 d6             	mov    %rdx,%rsi
    5219:	48 89 c7             	mov    %rax,%rdi
    521c:	e8 3f ff ff ff       	call   5160 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5225:	48 89 c7             	mov    %rax,%rdi
    5228:	e8 2b 01 00 00       	call   5358 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    522d:	90                   	nop
    522e:	c9                   	leave
    522f:	c3                   	ret

0000000000005230 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5230:	55                   	push   %rbp
    5231:	48 89 e5             	mov    %rsp,%rbp
    5234:	48 83 ec 10          	sub    $0x10,%rsp
    5238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    523c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5248:	48 89 d6             	mov    %rdx,%rsi
    524b:	48 89 c7             	mov    %rax,%rdi
    524e:	e8 33 01 00 00       	call   5386 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5253:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5257:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    525a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    525e:	48 8b 10             	mov    (%rax),%rdx
    5261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5265:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    526d:	48 8b 00             	mov    (%rax),%rax
    5270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5274:	48 c1 e2 03          	shl    $0x3,%rdx
    5278:	48 01 c2             	add    %rax,%rdx
    527b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    527f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5283:	90                   	nop
    5284:	c9                   	leave
    5285:	c3                   	ret

0000000000005286 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5286:	55                   	push   %rbp
    5287:	48 89 e5             	mov    %rsp,%rbp
    528a:	48 83 ec 20          	sub    $0x20,%rsp
    528e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    529a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    529e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a2:	48 89 d6             	mov    %rdx,%rsi
    52a5:	48 89 c7             	mov    %rax,%rdi
    52a8:	e8 0c 01 00 00       	call   53b9 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    52ad:	c9                   	leave
    52ae:	c3                   	ret

00000000000052af <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    52af:	55                   	push   %rbp
    52b0:	48 89 e5             	mov    %rsp,%rbp
    52b3:	48 83 ec 10          	sub    $0x10,%rsp
    52b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    52bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c7:	48 89 d6             	mov    %rdx,%rsi
    52ca:	48 89 c7             	mov    %rax,%rdi
    52cd:	e8 10 01 00 00       	call   53e2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    52d2:	90                   	nop
    52d3:	c9                   	leave
    52d4:	c3                   	ret
    52d5:	90                   	nop

00000000000052d6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    52d6:	55                   	push   %rbp
    52d7:	48 89 e5             	mov    %rsp,%rbp
    52da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52e2:	90                   	nop
    52e3:	5d                   	pop    %rbp
    52e4:	c3                   	ret

00000000000052e5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    52e5:	55                   	push   %rbp
    52e6:	48 89 e5             	mov    %rsp,%rbp
    52e9:	48 83 ec 20          	sub    $0x20,%rsp
    52ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    52f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5305:	48 89 ce             	mov    %rcx,%rsi
    5308:	48 89 c7             	mov    %rax,%rdi
    530b:	e8 e2 00 00 00       	call   53f2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    5310:	90                   	nop
    5311:	c9                   	leave
    5312:	c3                   	ret

0000000000005313 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5313:	55                   	push   %rbp
    5314:	48 89 e5             	mov    %rsp,%rbp
    5317:	48 83 ec 10          	sub    $0x10,%rsp
    531b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    531f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5323:	48 89 c7             	mov    %rax,%rdi
    5326:	e8 f9 00 00 00       	call   5424 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    532b:	c9                   	leave
    532c:	c3                   	ret

000000000000532d <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    532d:	55                   	push   %rbp
    532e:	48 89 e5             	mov    %rsp,%rbp
    5331:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5335:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    5339:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    533d:	48 8b 10             	mov    (%rax),%rdx
    5340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5344:	48 8b 00             	mov    (%rax),%rax
    5347:	48 39 c2             	cmp    %rax,%rdx
    534a:	73 06                	jae    5352 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    534c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5350:	eb 04                	jmp    5356 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5356:	5d                   	pop    %rbp
    5357:	c3                   	ret

0000000000005358 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5358:	55                   	push   %rbp
    5359:	48 89 e5             	mov    %rsp,%rbp
    535c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5364:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    536b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    536f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5376:	00 
    5377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    537b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5382:	00 
	{ }
    5383:	90                   	nop
    5384:	5d                   	pop    %rbp
    5385:	c3                   	ret

0000000000005386 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5386:	55                   	push   %rbp
    5387:	48 89 e5             	mov    %rsp,%rbp
    538a:	48 83 ec 10          	sub    $0x10,%rsp
    538e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5392:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5396:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    539b:	74 15                	je     53b2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    539d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53a5:	48 89 d6             	mov    %rdx,%rsi
    53a8:	48 89 c7             	mov    %rax,%rdi
    53ab:	e8 8e 00 00 00       	call   543e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    53b0:	eb 05                	jmp    53b7 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    53b2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    53b7:	c9                   	leave
    53b8:	c3                   	ret

00000000000053b9 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    53b9:	55                   	push   %rbp
    53ba:	48 89 e5             	mov    %rsp,%rbp
    53bd:	48 83 ec 20          	sub    $0x20,%rsp
    53c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    53c9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    53cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    53d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53d5:	48 89 d6             	mov    %rdx,%rsi
    53d8:	48 89 c7             	mov    %rax,%rdi
    53db:	e8 88 00 00 00       	call   5468 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    53e0:	c9                   	leave
    53e1:	c3                   	ret

00000000000053e2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    53e2:	55                   	push   %rbp
    53e3:	48 89 e5             	mov    %rsp,%rbp
    53e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53ee:	90                   	nop
    53ef:	5d                   	pop    %rbp
    53f0:	c3                   	ret
    53f1:	90                   	nop

00000000000053f2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    53f2:	55                   	push   %rbp
    53f3:	48 89 e5             	mov    %rsp,%rbp
    53f6:	48 83 ec 20          	sub    $0x20,%rsp
    53fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5402:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5406:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    540a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5411:	00 
    5412:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5416:	48 89 d6             	mov    %rdx,%rsi
    5419:	48 89 c7             	mov    %rax,%rdi
    541c:	e8 6f ef ff ff       	call   4390 <_ZdlPvm@plt>
      }
    5421:	c9                   	leave
    5422:	c3                   	ret
    5423:	90                   	nop

0000000000005424 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5424:	55                   	push   %rbp
    5425:	48 89 e5             	mov    %rsp,%rbp
    5428:	48 83 ec 10          	sub    $0x10,%rsp
    542c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5434:	48 89 c7             	mov    %rax,%rdi
    5437:	e8 8a 00 00 00       	call   54c6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    543c:	c9                   	leave
    543d:	c3                   	ret

000000000000543e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    543e:	55                   	push   %rbp
    543f:	48 89 e5             	mov    %rsp,%rbp
    5442:	48 83 ec 10          	sub    $0x10,%rsp
    5446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    544a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    544e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5456:	ba 00 00 00 00       	mov    $0x0,%edx
    545b:	48 89 ce             	mov    %rcx,%rsi
    545e:	48 89 c7             	mov    %rax,%rdi
    5461:	e8 74 00 00 00       	call   54da <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5466:	c9                   	leave
    5467:	c3                   	ret

0000000000005468 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5468:	55                   	push   %rbp
    5469:	48 89 e5             	mov    %rsp,%rbp
    546c:	48 83 ec 20          	sub    $0x20,%rsp
    5470:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5474:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5478:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    547d:	74 40                	je     54bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    547f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5483:	48 89 c7             	mov    %rax,%rdi
    5486:	e8 b0 00 00 00       	call   553b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    548b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    548f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5493:	48 89 c7             	mov    %rax,%rdi
    5496:	e8 ae 00 00 00       	call   5549 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    549b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    54a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    54a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    54a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    54ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54b0:	48 89 ce             	mov    %rcx,%rsi
    54b3:	48 89 c7             	mov    %rax,%rdi
    54b6:	e8 b5 00 00 00       	call   5570 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    54bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    54bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    54c3:	c9                   	leave
    54c4:	c3                   	ret
    54c5:	90                   	nop

00000000000054c6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    54c6:	55                   	push   %rbp
    54c7:	48 89 e5             	mov    %rsp,%rbp
    54ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    54ce:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    54d5:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    54d8:	5d                   	pop    %rbp
    54d9:	c3                   	ret

00000000000054da <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    54da:	55                   	push   %rbp
    54db:	48 89 e5             	mov    %rsp,%rbp
    54de:	48 83 ec 20          	sub    $0x20,%rsp
    54e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    54ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f2:	48 89 c7             	mov    %rax,%rdi
    54f5:	e8 cc ff ff ff       	call   54c6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    54fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54fe:	0f 92 c0             	setb   %al
    5501:	0f b6 c0             	movzbl %al,%eax
    5504:	48 85 c0             	test   %rax,%rax
    5507:	0f 95 c0             	setne  %al
    550a:	84 c0                	test   %al,%al
    550c:	74 1a                	je     5528 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    550e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    5515:	ff ff 1f 
    5518:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    551c:	73 05                	jae    5523 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    551e:	e8 4d ed ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5523:	e8 b8 eb ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5528:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    552c:	48 c1 e0 03          	shl    $0x3,%rax
    5530:	48 89 c7             	mov    %rax,%rdi
    5533:	e8 48 ee ff ff       	call   4380 <_Znwm@plt>
    5538:	90                   	nop
      }
    5539:	c9                   	leave
    553a:	c3                   	ret

000000000000553b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    553b:	55                   	push   %rbp
    553c:	48 89 e5             	mov    %rsp,%rbp
    553f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5547:	5d                   	pop    %rbp
    5548:	c3                   	ret

0000000000005549 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5549:	55                   	push   %rbp
    554a:	48 89 e5             	mov    %rsp,%rbp
    554d:	48 83 ec 10          	sub    $0x10,%rsp
    5551:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5559:	48 89 c6             	mov    %rax,%rsi
    555c:	bf 08 00 00 00       	mov    $0x8,%edi
    5561:	e8 fa f8 ff ff       	call   4e60 <_ZnwmPv>
    5566:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    556d:	90                   	nop
    556e:	c9                   	leave
    556f:	c3                   	ret

0000000000005570 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5570:	55                   	push   %rbp
    5571:	48 89 e5             	mov    %rsp,%rbp
    5574:	48 83 ec 20          	sub    $0x20,%rsp
    5578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    557c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5580:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5584:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5588:	48 89 c7             	mov    %rax,%rdi
    558b:	e8 24 00 00 00       	call   55b4 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5590:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5594:	48 89 c7             	mov    %rax,%rdi
    5597:	e8 d6 f8 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    559c:	48 89 c1             	mov    %rax,%rcx
    559f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55a7:	48 89 ce             	mov    %rcx,%rsi
    55aa:	48 89 c7             	mov    %rax,%rdi
    55ad:	e8 0d 00 00 00       	call   55bf <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    55b2:	c9                   	leave
    55b3:	c3                   	ret

00000000000055b4 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    55b4:	55                   	push   %rbp
    55b5:	48 89 e5             	mov    %rsp,%rbp
    55b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    55bc:	90                   	nop
    55bd:	5d                   	pop    %rbp
    55be:	c3                   	ret

00000000000055bf <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    55bf:	55                   	push   %rbp
    55c0:	48 89 e5             	mov    %rsp,%rbp
    55c3:	48 83 ec 20          	sub    $0x20,%rsp
    55c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    55d3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    55d8:	75 06                	jne    55e0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    55da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55de:	eb 3a                	jmp    561a <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    55e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55eb:	00 
    55ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55f0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    55f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fc:	48 89 ce             	mov    %rcx,%rsi
    55ff:	48 89 c7             	mov    %rax,%rdi
    5602:	e8 15 00 00 00       	call   561c <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5607:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    560b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5612:	00 
    5613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5617:	48 01 d0             	add    %rdx,%rax
    }
    561a:	c9                   	leave
    561b:	c3                   	ret

000000000000561c <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    561c:	55                   	push   %rbp
    561d:	48 89 e5             	mov    %rsp,%rbp
    5620:	48 83 ec 20          	sub    $0x20,%rsp
    5624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    562c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5630:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5634:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    563c:	48 89 ce             	mov    %rcx,%rsi
    563f:	48 89 c7             	mov    %rax,%rdi
    5642:	e8 03 00 00 00       	call   564a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5647:	90                   	nop
    5648:	c9                   	leave
    5649:	c3                   	ret

000000000000564a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    564a:	55                   	push   %rbp
    564b:	48 89 e5             	mov    %rsp,%rbp
    564e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5652:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5656:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    565a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    565e:	48 8b 00             	mov    (%rax),%rax
    5661:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5665:	eb 10                	jmp    5677 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5667:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    566b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    566f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5672:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    567b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    567f:	75 e6                	jne    5667 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5681:	90                   	nop
    5682:	90                   	nop
    5683:	5d                   	pop    %rbp
    5684:	c3                   	ret

0000000000005685 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    5685:	55                   	push   %rbp
    5686:	48 89 e5             	mov    %rsp,%rbp
    5689:	48 83 ec 20          	sub    $0x20,%rsp
    568d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5690:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5693:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5697:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    569b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    569f:	be 00 00 00 00       	mov    $0x0,%esi
    56a4:	bf 01 20 02 00       	mov    $0x22001,%edi
    56a9:	e8 32 ec ff ff       	call   42e0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    56ae:	be 00 00 00 00       	mov    $0x0,%esi
    56b3:	bf 03 00 02 00       	mov    $0x20003,%edi
    56b8:	e8 23 ec ff ff       	call   42e0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    56bd:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    56c1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    56c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56c9:	8b 75 f8             	mov    -0x8(%rbp),%esi
    56cc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    56cf:	49 89 f8             	mov    %rdi,%r8
    56d2:	89 c7                	mov    %eax,%edi
    56d4:	e8 37 ef ff ff       	call   4610 <glfwCreateWindow@plt>
}
    56d9:	c9                   	leave
    56da:	c3                   	ret

00000000000056db <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    56db:	55                   	push   %rbp
    56dc:	48 89 e5             	mov    %rsp,%rbp
    56df:	41 54                	push   %r12
    56e1:	53                   	push   %rbx
    56e2:	48 83 ec 20          	sub    $0x20,%rsp
    56e6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    56ea:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    56ee:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    56f2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    56f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56fa:	48 89 ce             	mov    %rcx,%rsi
    56fd:	48 89 c7             	mov    %rax,%rdi
    5700:	e8 bb ed ff ff       	call   44c0 <vkCreateInstance@plt>
    5705:	85 c0                	test   %eax,%eax
    5707:	0f 95 c0             	setne  %al
    570a:	84 c0                	test   %al,%al
    570c:	74 3b                	je     5749 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    570e:	bf 10 00 00 00       	mov    $0x10,%edi
    5713:	e8 58 ea ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5718:	48 89 c3             	mov    %rax,%rbx
    571b:	48 8d 05 2e 2b 01 00 	lea    0x12b2e(%rip),%rax        # 18250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    5722:	48 89 c6             	mov    %rax,%rsi
    5725:	48 89 df             	mov    %rbx,%rdi
    5728:	e8 d3 e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    572d:	48 8b 05 74 28 02 00 	mov    0x22874(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5734:	48 89 c2             	mov    %rax,%rdx
    5737:	48 8d 05 02 26 02 00 	lea    0x22602(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    573e:	48 89 c6             	mov    %rax,%rsi
    5741:	48 89 df             	mov    %rbx,%rdi
    5744:	e8 47 ef ff ff       	call   4690 <__cxa_throw@plt>
  }
  return instance;
    5749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    574d:	eb 16                	jmp    5765 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    574f:	49 89 c4             	mov    %rax,%r12
    5752:	48 89 df             	mov    %rbx,%rdi
    5755:	e8 e6 ea ff ff       	call   4240 <__cxa_free_exception@plt>
    575a:	4c 89 e0             	mov    %r12,%rax
    575d:	48 89 c7             	mov    %rax,%rdi
    5760:	e8 8b ef ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5765:	48 83 c4 20          	add    $0x20,%rsp
    5769:	5b                   	pop    %rbx
    576a:	41 5c                	pop    %r12
    576c:	5d                   	pop    %rbp
    576d:	c3                   	ret

000000000000576e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    576e:	55                   	push   %rbp
    576f:	48 89 e5             	mov    %rsp,%rbp
    5772:	41 54                	push   %r12
    5774:	53                   	push   %rbx
    5775:	48 83 ec 30          	sub    $0x30,%rsp
    5779:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    577d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5781:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    5785:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5789:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    578d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5791:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5795:	48 89 c7             	mov    %rax,%rdi
    5798:	e8 43 ee ff ff       	call   45e0 <vkCreateDevice@plt>
    579d:	85 c0                	test   %eax,%eax
    579f:	0f 95 c0             	setne  %al
    57a2:	84 c0                	test   %al,%al
    57a4:	74 3b                	je     57e1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    57a6:	bf 10 00 00 00       	mov    $0x10,%edi
    57ab:	e8 c0 e9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    57b0:	48 89 c3             	mov    %rax,%rbx
    57b3:	48 8d 05 b6 2a 01 00 	lea    0x12ab6(%rip),%rax        # 18270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    57ba:	48 89 c6             	mov    %rax,%rsi
    57bd:	48 89 df             	mov    %rbx,%rdi
    57c0:	e8 3b e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    57c5:	48 8b 05 dc 27 02 00 	mov    0x227dc(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    57cc:	48 89 c2             	mov    %rax,%rdx
    57cf:	48 8d 05 6a 25 02 00 	lea    0x2256a(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    57d6:	48 89 c6             	mov    %rax,%rsi
    57d9:	48 89 df             	mov    %rbx,%rdi
    57dc:	e8 af ee ff ff       	call   4690 <__cxa_throw@plt>
  }
  return device;
    57e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57e5:	eb 16                	jmp    57fd <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    57e7:	49 89 c4             	mov    %rax,%r12
    57ea:	48 89 df             	mov    %rbx,%rdi
    57ed:	e8 4e ea ff ff       	call   4240 <__cxa_free_exception@plt>
    57f2:	4c 89 e0             	mov    %r12,%rax
    57f5:	48 89 c7             	mov    %rax,%rdi
    57f8:	e8 f3 ee ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    57fd:	48 83 c4 30          	add    $0x30,%rsp
    5801:	5b                   	pop    %rbx
    5802:	41 5c                	pop    %r12
    5804:	5d                   	pop    %rbp
    5805:	c3                   	ret

0000000000005806 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    5806:	55                   	push   %rbp
    5807:	48 89 e5             	mov    %rsp,%rbp
    580a:	41 54                	push   %r12
    580c:	53                   	push   %rbx
    580d:	48 83 ec 30          	sub    $0x30,%rsp
    5811:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5815:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5819:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    581d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5821:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5825:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5829:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    582d:	48 89 c7             	mov    %rax,%rdi
    5830:	e8 cb ed ff ff       	call   4600 <glfwCreateWindowSurface@plt>
    5835:	85 c0                	test   %eax,%eax
    5837:	0f 95 c0             	setne  %al
    583a:	84 c0                	test   %al,%al
    583c:	74 3b                	je     5879 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    583e:	bf 10 00 00 00       	mov    $0x10,%edi
    5843:	e8 28 e9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5848:	48 89 c3             	mov    %rax,%rbx
    584b:	48 8d 05 46 2a 01 00 	lea    0x12a46(%rip),%rax        # 18298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5852:	48 89 c6             	mov    %rax,%rsi
    5855:	48 89 df             	mov    %rbx,%rdi
    5858:	e8 a3 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    585d:	48 8b 05 44 27 02 00 	mov    0x22744(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5864:	48 89 c2             	mov    %rax,%rdx
    5867:	48 8d 05 d2 24 02 00 	lea    0x224d2(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    586e:	48 89 c6             	mov    %rax,%rsi
    5871:	48 89 df             	mov    %rbx,%rdi
    5874:	e8 17 ee ff ff       	call   4690 <__cxa_throw@plt>
  }
  return surface;
    5879:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    587d:	eb 16                	jmp    5895 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    587f:	49 89 c4             	mov    %rax,%r12
    5882:	48 89 df             	mov    %rbx,%rdi
    5885:	e8 b6 e9 ff ff       	call   4240 <__cxa_free_exception@plt>
    588a:	4c 89 e0             	mov    %r12,%rax
    588d:	48 89 c7             	mov    %rax,%rdi
    5890:	e8 5b ee ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5895:	48 83 c4 30          	add    $0x30,%rsp
    5899:	5b                   	pop    %rbx
    589a:	41 5c                	pop    %r12
    589c:	5d                   	pop    %rbp
    589d:	c3                   	ret

000000000000589e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    589e:	55                   	push   %rbp
    589f:	48 89 e5             	mov    %rsp,%rbp
    58a2:	41 54                	push   %r12
    58a4:	53                   	push   %rbx
    58a5:	48 83 ec 30          	sub    $0x30,%rsp
    58a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    58ad:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    58b1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    58b5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    58bc:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    58bd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    58c1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    58c5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    58c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58cd:	48 89 c7             	mov    %rax,%rdi
    58d0:	e8 bb eb ff ff       	call   4490 <vkCreateSwapchainKHR@plt>
    58d5:	85 c0                	test   %eax,%eax
    58d7:	0f 95 c0             	setne  %al
    58da:	84 c0                	test   %al,%al
    58dc:	74 3b                	je     5919 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    58de:	bf 10 00 00 00       	mov    $0x10,%edi
    58e3:	e8 88 e8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    58e8:	48 89 c3             	mov    %rax,%rbx
    58eb:	48 8d 05 c7 29 01 00 	lea    0x129c7(%rip),%rax        # 182b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    58f2:	48 89 c6             	mov    %rax,%rsi
    58f5:	48 89 df             	mov    %rbx,%rdi
    58f8:	e8 03 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    58fd:	48 8b 05 a4 26 02 00 	mov    0x226a4(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5904:	48 89 c2             	mov    %rax,%rdx
    5907:	48 8d 05 32 24 02 00 	lea    0x22432(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    590e:	48 89 c6             	mov    %rax,%rsi
    5911:	48 89 df             	mov    %rbx,%rdi
    5914:	e8 77 ed ff ff       	call   4690 <__cxa_throw@plt>
  }
  return swapchain;
    5919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    591d:	eb 16                	jmp    5935 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    591f:	49 89 c4             	mov    %rax,%r12
    5922:	48 89 df             	mov    %rbx,%rdi
    5925:	e8 16 e9 ff ff       	call   4240 <__cxa_free_exception@plt>
    592a:	4c 89 e0             	mov    %r12,%rax
    592d:	48 89 c7             	mov    %rax,%rdi
    5930:	e8 bb ed ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5935:	48 83 c4 30          	add    $0x30,%rsp
    5939:	5b                   	pop    %rbx
    593a:	41 5c                	pop    %r12
    593c:	5d                   	pop    %rbp
    593d:	c3                   	ret

000000000000593e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    593e:	55                   	push   %rbp
    593f:	48 89 e5             	mov    %rsp,%rbp
    5942:	41 54                	push   %r12
    5944:	53                   	push   %rbx
    5945:	48 83 ec 30          	sub    $0x30,%rsp
    5949:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    594d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5951:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5955:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5959:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    595d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5961:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5965:	48 89 c7             	mov    %rax,%rdi
    5968:	e8 53 ea ff ff       	call   43c0 <vkCreateImageView@plt>
    596d:	85 c0                	test   %eax,%eax
    596f:	0f 95 c0             	setne  %al
    5972:	84 c0                	test   %al,%al
    5974:	74 3b                	je     59b1 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5976:	bf 10 00 00 00       	mov    $0x10,%edi
    597b:	e8 f0 e7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5980:	48 89 c3             	mov    %rax,%rbx
    5983:	48 8d 05 4e 29 01 00 	lea    0x1294e(%rip),%rax        # 182d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    598a:	48 89 c6             	mov    %rax,%rsi
    598d:	48 89 df             	mov    %rbx,%rdi
    5990:	e8 6b e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5995:	48 8b 05 0c 26 02 00 	mov    0x2260c(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    599c:	48 89 c2             	mov    %rax,%rdx
    599f:	48 8d 05 9a 23 02 00 	lea    0x2239a(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    59a6:	48 89 c6             	mov    %rax,%rsi
    59a9:	48 89 df             	mov    %rbx,%rdi
    59ac:	e8 df ec ff ff       	call   4690 <__cxa_throw@plt>
  }
  return imageView;
    59b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59b5:	eb 16                	jmp    59cd <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    59b7:	49 89 c4             	mov    %rax,%r12
    59ba:	48 89 df             	mov    %rbx,%rdi
    59bd:	e8 7e e8 ff ff       	call   4240 <__cxa_free_exception@plt>
    59c2:	4c 89 e0             	mov    %r12,%rax
    59c5:	48 89 c7             	mov    %rax,%rdi
    59c8:	e8 23 ed ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    59cd:	48 83 c4 30          	add    $0x30,%rsp
    59d1:	5b                   	pop    %rbx
    59d2:	41 5c                	pop    %r12
    59d4:	5d                   	pop    %rbp
    59d5:	c3                   	ret

00000000000059d6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    59d6:	55                   	push   %rbp
    59d7:	48 89 e5             	mov    %rsp,%rbp
    59da:	41 54                	push   %r12
    59dc:	53                   	push   %rbx
    59dd:	48 83 ec 60          	sub    $0x60,%rsp
    59e1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    59e5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    59e9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    59ed:	66 0f ef c0          	pxor   %xmm0,%xmm0
    59f1:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    59f5:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    59f9:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    59fe:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    5a05:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5a09:	48 89 c7             	mov    %rax,%rdi
    5a0c:	e8 4f 05 00 00       	call   5f60 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    5a11:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    5a15:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5a19:	48 89 c7             	mov    %rax,%rdi
    5a1c:	e8 5f 05 00 00       	call   5f80 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    5a21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    5a25:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5a2c:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a2d:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5a31:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5a35:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5a39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5a3d:	48 89 c7             	mov    %rax,%rdi
    5a40:	e8 3b e8 ff ff       	call   4280 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5a45:	85 c0                	test   %eax,%eax
    5a47:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a4a:	84 c0                	test   %al,%al
    5a4c:	74 3b                	je     5a89 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5a4e:	bf 10 00 00 00       	mov    $0x10,%edi
    5a53:	e8 18 e7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5a58:	48 89 c3             	mov    %rax,%rbx
    5a5b:	48 8d 05 96 28 01 00 	lea    0x12896(%rip),%rax        # 182f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5a62:	48 89 c6             	mov    %rax,%rsi
    5a65:	48 89 df             	mov    %rbx,%rdi
    5a68:	e8 93 e6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5a6d:	48 8b 05 34 25 02 00 	mov    0x22534(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a74:	48 89 c2             	mov    %rax,%rdx
    5a77:	48 8d 05 c2 22 02 00 	lea    0x222c2(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a7e:	48 89 c6             	mov    %rax,%rsi
    5a81:	48 89 df             	mov    %rbx,%rdi
    5a84:	e8 07 ec ff ff       	call   4690 <__cxa_throw@plt>
  }
  return shaderModule;
    5a89:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a8d:	eb 16                	jmp    5aa5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5a8f:	49 89 c4             	mov    %rax,%r12
    5a92:	48 89 df             	mov    %rbx,%rdi
    5a95:	e8 a6 e7 ff ff       	call   4240 <__cxa_free_exception@plt>
    5a9a:	4c 89 e0             	mov    %r12,%rax
    5a9d:	48 89 c7             	mov    %rax,%rdi
    5aa0:	e8 4b ec ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5aa5:	48 83 c4 60          	add    $0x60,%rsp
    5aa9:	5b                   	pop    %rbx
    5aaa:	41 5c                	pop    %r12
    5aac:	5d                   	pop    %rbp
    5aad:	c3                   	ret

0000000000005aae <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5aae:	55                   	push   %rbp
    5aaf:	48 89 e5             	mov    %rsp,%rbp
    5ab2:	41 54                	push   %r12
    5ab4:	53                   	push   %rbx
    5ab5:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5abc:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5ac3:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5aca:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5ad1:	be 04 00 00 00       	mov    $0x4,%esi
    5ad6:	bf 02 00 00 00       	mov    $0x2,%edi
    5adb:	e8 6e 04 00 00       	call   5f4e <_ZStorSt13_Ios_OpenmodeS_>
    5ae0:	89 c2                	mov    %eax,%edx
    5ae2:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5ae9:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5af0:	48 89 ce             	mov    %rcx,%rsi
    5af3:	48 89 c7             	mov    %rax,%rdi
    5af6:	e8 45 eb ff ff       	call   4640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5afb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b02:	48 89 c7             	mov    %rax,%rdi
    5b05:	e8 26 eb ff ff       	call   4630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5b0a:	83 f0 01             	xor    $0x1,%eax
    5b0d:	84 c0                	test   %al,%al
    5b0f:	74 61                	je     5b72 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5b11:	bf 10 00 00 00       	mov    $0x10,%edi
    5b16:	e8 55 e6 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5b1b:	48 89 c3             	mov    %rax,%rbx
    5b1e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b22:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5b29:	48 8d 0d e8 27 01 00 	lea    0x127e8(%rip),%rcx        # 18318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5b30:	48 89 ce             	mov    %rcx,%rsi
    5b33:	48 89 c7             	mov    %rax,%rdi
    5b36:	e8 69 04 00 00       	call   5fa4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5b3b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b3f:	48 89 c6             	mov    %rax,%rsi
    5b42:	48 89 df             	mov    %rbx,%rdi
    5b45:	e8 06 eb ff ff       	call   4650 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5b4a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b4e:	48 89 c7             	mov    %rax,%rdi
    5b51:	e8 8a e6 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5b56:	48 8b 05 4b 24 02 00 	mov    0x2244b(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b5d:	48 89 c2             	mov    %rax,%rdx
    5b60:	48 8d 05 d9 21 02 00 	lea    0x221d9(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b67:	48 89 c6             	mov    %rax,%rsi
    5b6a:	48 89 df             	mov    %rbx,%rdi
    5b6d:	e8 1e eb ff ff       	call   4690 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5b72:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b79:	48 89 c7             	mov    %rax,%rdi
    5b7c:	e8 4f eb ff ff       	call   46d0 <_ZNSi5tellgEv@plt>
    5b81:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b85:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5b89:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5b8d:	48 89 c7             	mov    %rax,%rdi
    5b90:	e8 11 05 00 00       	call   60a6 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5b95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5b99:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b9d:	48 89 c7             	mov    %rax,%rdi
    5ba0:	e8 5b eb ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    5ba5:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5ba9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5bad:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5bb4:	48 89 ce             	mov    %rcx,%rsi
    5bb7:	48 89 c7             	mov    %rax,%rdi
    5bba:	e8 f9 04 00 00       	call   60b8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5bbf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5bc3:	48 89 c7             	mov    %rax,%rdi
    5bc6:	e8 55 e8 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5bcb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5bcf:	be 00 00 00 00       	mov    $0x0,%esi
    5bd4:	48 89 c7             	mov    %rax,%rdi
    5bd7:	e8 96 05 00 00       	call   6172 <_ZNSt4fposI11__mbstate_tEC1El>
    5bdc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5be0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5be4:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5beb:	48 89 ce             	mov    %rcx,%rsi
    5bee:	48 89 c7             	mov    %rax,%rdi
    5bf1:	e8 0a e9 ff ff       	call   4500 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5bf6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5bfa:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c01:	48 89 c7             	mov    %rax,%rdi
    5c04:	e8 99 05 00 00       	call   61a2 <_ZNSt6vectorIcSaIcEE4dataEv>
    5c09:	48 89 c1             	mov    %rax,%rcx
    5c0c:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c13:	48 89 da             	mov    %rbx,%rdx
    5c16:	48 89 ce             	mov    %rcx,%rsi
    5c19:	48 89 c7             	mov    %rax,%rdi
    5c1c:	e8 cf e8 ff ff       	call   44f0 <_ZNSi4readEPcl@plt>
  file.close();
    5c21:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c28:	48 89 c7             	mov    %rax,%rdi
    5c2b:	e8 40 e4 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5c30:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5c37:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5c3e:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5c45:	48 89 ce             	mov    %rcx,%rsi
    5c48:	48 89 c7             	mov    %rax,%rdi
    5c4b:	e8 86 fd ff ff       	call   59d6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5c50:	48 89 c3             	mov    %rax,%rbx
    5c53:	90                   	nop
}
    5c54:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c5b:	48 89 c7             	mov    %rax,%rdi
    5c5e:	e8 cb 04 00 00       	call   612e <_ZNSt6vectorIcSaIcEED1Ev>
    5c63:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c6a:	48 89 c7             	mov    %rax,%rdi
    5c6d:	e8 3e e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5c72:	48 89 d8             	mov    %rbx,%rax
    5c75:	eb 63                	jmp    5cda <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c77:	49 89 c4             	mov    %rax,%r12
    5c7a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c7e:	48 89 c7             	mov    %rax,%rdi
    5c81:	e8 5a e5 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c86:	eb 03                	jmp    5c8b <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5c88:	49 89 c4             	mov    %rax,%r12
    5c8b:	48 89 df             	mov    %rbx,%rdi
    5c8e:	e8 ad e5 ff ff       	call   4240 <__cxa_free_exception@plt>
    5c93:	4c 89 e3             	mov    %r12,%rbx
    5c96:	eb 28                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5c98:	48 89 c3             	mov    %rax,%rbx
    5c9b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5c9f:	48 89 c7             	mov    %rax,%rdi
    5ca2:	e8 79 e7 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    5ca7:	eb 17                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5ca9:	48 89 c3             	mov    %rax,%rbx
    5cac:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5cb3:	48 89 c7             	mov    %rax,%rdi
    5cb6:	e8 73 04 00 00       	call   612e <_ZNSt6vectorIcSaIcEED1Ev>
    5cbb:	eb 03                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5cbd:	48 89 c3             	mov    %rax,%rbx
    5cc0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5cc7:	48 89 c7             	mov    %rax,%rdi
    5cca:	e8 e1 e3 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5ccf:	48 89 d8             	mov    %rbx,%rax
    5cd2:	48 89 c7             	mov    %rax,%rdi
    5cd5:	e8 16 ea ff ff       	call   46f0 <_Unwind_Resume@plt>
    5cda:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5ce1:	5b                   	pop    %rbx
    5ce2:	41 5c                	pop    %r12
    5ce4:	5d                   	pop    %rbp
    5ce5:	c3                   	ret

0000000000005ce6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5ce6:	55                   	push   %rbp
    5ce7:	48 89 e5             	mov    %rsp,%rbp
    5cea:	41 54                	push   %r12
    5cec:	53                   	push   %rbx
    5ced:	48 83 ec 30          	sub    $0x30,%rsp
    5cf1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5cf5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5cf9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cfd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d01:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d05:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5d09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d0d:	48 89 c7             	mov    %rax,%rdi
    5d10:	e8 9b e5 ff ff       	call   42b0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5d15:	85 c0                	test   %eax,%eax
    5d17:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5d1a:	84 c0                	test   %al,%al
    5d1c:	74 3b                	je     5d59 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d1e:	bf 10 00 00 00       	mov    $0x10,%edi
    5d23:	e8 48 e4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5d28:	48 89 c3             	mov    %rax,%rbx
    5d2b:	48 8d 05 f6 25 01 00 	lea    0x125f6(%rip),%rax        # 18328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5d32:	48 89 c6             	mov    %rax,%rsi
    5d35:	48 89 df             	mov    %rbx,%rdi
    5d38:	e8 c3 e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5d3d:	48 8b 05 64 22 02 00 	mov    0x22264(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d44:	48 89 c2             	mov    %rax,%rdx
    5d47:	48 8d 05 f2 1f 02 00 	lea    0x21ff2(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d4e:	48 89 c6             	mov    %rax,%rsi
    5d51:	48 89 df             	mov    %rbx,%rdi
    5d54:	e8 37 e9 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d5d:	eb 16                	jmp    5d75 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d5f:	49 89 c4             	mov    %rax,%r12
    5d62:	48 89 df             	mov    %rbx,%rdi
    5d65:	e8 d6 e4 ff ff       	call   4240 <__cxa_free_exception@plt>
    5d6a:	4c 89 e0             	mov    %r12,%rax
    5d6d:	48 89 c7             	mov    %rax,%rdi
    5d70:	e8 7b e9 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5d75:	48 83 c4 30          	add    $0x30,%rsp
    5d79:	5b                   	pop    %rbx
    5d7a:	41 5c                	pop    %r12
    5d7c:	5d                   	pop    %rbp
    5d7d:	c3                   	ret

0000000000005d7e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5d7e:	55                   	push   %rbp
    5d7f:	48 89 e5             	mov    %rsp,%rbp
    5d82:	41 54                	push   %r12
    5d84:	53                   	push   %rbx
    5d85:	48 83 ec 30          	sub    $0x30,%rsp
    5d89:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d8d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5d91:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5d95:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d99:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d9d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5da1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5da5:	48 89 c7             	mov    %rax,%rdi
    5da8:	e8 43 e4 ff ff       	call   41f0 <vkCreateRenderPass@plt>
    5dad:	85 c0                	test   %eax,%eax
    5daf:	0f 95 c0             	setne  %al
    5db2:	84 c0                	test   %al,%al
    5db4:	74 3b                	je     5df1 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5db6:	bf 10 00 00 00       	mov    $0x10,%edi
    5dbb:	e8 b0 e3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5dc0:	48 89 c3             	mov    %rax,%rbx
    5dc3:	48 8d 05 5e 25 01 00 	lea    0x1255e(%rip),%rax        # 18328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5dca:	48 89 c6             	mov    %rax,%rsi
    5dcd:	48 89 df             	mov    %rbx,%rdi
    5dd0:	e8 2b e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5dd5:	48 8b 05 cc 21 02 00 	mov    0x221cc(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5ddc:	48 89 c2             	mov    %rax,%rdx
    5ddf:	48 8d 05 5a 1f 02 00 	lea    0x21f5a(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5de6:	48 89 c6             	mov    %rax,%rsi
    5de9:	48 89 df             	mov    %rbx,%rdi
    5dec:	e8 9f e8 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return renderPass;
    5df1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5df5:	eb 16                	jmp    5e0d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5df7:	49 89 c4             	mov    %rax,%r12
    5dfa:	48 89 df             	mov    %rbx,%rdi
    5dfd:	e8 3e e4 ff ff       	call   4240 <__cxa_free_exception@plt>
    5e02:	4c 89 e0             	mov    %r12,%rax
    5e05:	48 89 c7             	mov    %rax,%rdi
    5e08:	e8 e3 e8 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5e0d:	48 83 c4 30          	add    $0x30,%rsp
    5e11:	5b                   	pop    %rbx
    5e12:	41 5c                	pop    %r12
    5e14:	5d                   	pop    %rbp
    5e15:	c3                   	ret

0000000000005e16 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5e16:	55                   	push   %rbp
    5e17:	48 89 e5             	mov    %rsp,%rbp
    5e1a:	41 54                	push   %r12
    5e1c:	53                   	push   %rbx
    5e1d:	48 83 ec 30          	sub    $0x30,%rsp
    5e21:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5e25:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5e29:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    5e2d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5e31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e35:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5e39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e3d:	48 89 c7             	mov    %rax,%rdi
    5e40:	e8 1b e7 ff ff       	call   4560 <vkCreateFramebuffer@plt>
    5e45:	85 c0                	test   %eax,%eax
    5e47:	0f 95 c0             	setne  %al
    5e4a:	84 c0                	test   %al,%al
    5e4c:	74 3b                	je     5e89 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    5e4e:	bf 10 00 00 00       	mov    $0x10,%edi
    5e53:	e8 18 e3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5e58:	48 89 c3             	mov    %rax,%rbx
    5e5b:	48 8d 05 e8 24 01 00 	lea    0x124e8(%rip),%rax        # 1834a <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x102>
    5e62:	48 89 c6             	mov    %rax,%rsi
    5e65:	48 89 df             	mov    %rbx,%rdi
    5e68:	e8 93 e2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5e6d:	48 8b 05 34 21 02 00 	mov    0x22134(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5e74:	48 89 c2             	mov    %rax,%rdx
    5e77:	48 8d 05 c2 1e 02 00 	lea    0x21ec2(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5e7e:	48 89 c6             	mov    %rax,%rsi
    5e81:	48 89 df             	mov    %rbx,%rdi
    5e84:	e8 07 e8 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return framebuffer;
    5e89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e8d:	eb 16                	jmp    5ea5 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    5e8f:	49 89 c4             	mov    %rax,%r12
    5e92:	48 89 df             	mov    %rbx,%rdi
    5e95:	e8 a6 e3 ff ff       	call   4240 <__cxa_free_exception@plt>
    5e9a:	4c 89 e0             	mov    %r12,%rax
    5e9d:	48 89 c7             	mov    %rax,%rdi
    5ea0:	e8 4b e8 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5ea5:	48 83 c4 30          	add    $0x30,%rsp
    5ea9:	5b                   	pop    %rbx
    5eaa:	41 5c                	pop    %r12
    5eac:	5d                   	pop    %rbp
    5ead:	c3                   	ret

0000000000005eae <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5eae:	55                   	push   %rbp
    5eaf:	48 89 e5             	mov    %rsp,%rbp
    5eb2:	41 54                	push   %r12
    5eb4:	53                   	push   %rbx
    5eb5:	48 83 ec 30          	sub    $0x30,%rsp
    5eb9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ebd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5ec1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    5ec5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5ecc:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    5ecd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5ed1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5ed5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5ed9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5edd:	48 89 c7             	mov    %rax,%rdi
    5ee0:	e8 4b e2 ff ff       	call   4130 <vkCreateCommandPool@plt>
    5ee5:	85 c0                	test   %eax,%eax
    5ee7:	0f 95 c0             	setne  %al
    5eea:	84 c0                	test   %al,%al
    5eec:	74 3b                	je     5f29 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    5eee:	bf 10 00 00 00       	mov    $0x10,%edi
    5ef3:	e8 78 e2 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5ef8:	48 89 c3             	mov    %rax,%rbx
    5efb:	48 8d 05 66 24 01 00 	lea    0x12466(%rip),%rax        # 18368 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x120>
    5f02:	48 89 c6             	mov    %rax,%rsi
    5f05:	48 89 df             	mov    %rbx,%rdi
    5f08:	e8 f3 e1 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5f0d:	48 8b 05 94 20 02 00 	mov    0x22094(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5f14:	48 89 c2             	mov    %rax,%rdx
    5f17:	48 8d 05 22 1e 02 00 	lea    0x21e22(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5f1e:	48 89 c6             	mov    %rax,%rsi
    5f21:	48 89 df             	mov    %rbx,%rdi
    5f24:	e8 67 e7 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return commandPool;
    5f29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f2d:	eb 16                	jmp    5f45 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    5f2f:	49 89 c4             	mov    %rax,%r12
    5f32:	48 89 df             	mov    %rbx,%rdi
    5f35:	e8 06 e3 ff ff       	call   4240 <__cxa_free_exception@plt>
    5f3a:	4c 89 e0             	mov    %r12,%rax
    5f3d:	48 89 c7             	mov    %rax,%rdi
    5f40:	e8 ab e7 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5f45:	48 83 c4 30          	add    $0x30,%rsp
    5f49:	5b                   	pop    %rbx
    5f4a:	41 5c                	pop    %r12
    5f4c:	5d                   	pop    %rbp
    5f4d:	c3                   	ret

0000000000005f4e <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    5f4e:	55                   	push   %rbp
    5f4f:	48 89 e5             	mov    %rsp,%rbp
    5f52:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5f55:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5f58:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5f5b:	0b 45 f8             	or     -0x8(%rbp),%eax
    5f5e:	5d                   	pop    %rbp
    5f5f:	c3                   	ret

0000000000005f60 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5f60:	55                   	push   %rbp
    5f61:	48 89 e5             	mov    %rsp,%rbp
    5f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f6c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f74:	48 8b 00             	mov    (%rax),%rax
    5f77:	48 29 c2             	sub    %rax,%rdx
    5f7a:	48 89 d0             	mov    %rdx,%rax
    5f7d:	5d                   	pop    %rbp
    5f7e:	c3                   	ret
    5f7f:	90                   	nop

0000000000005f80 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    5f80:	55                   	push   %rbp
    5f81:	48 89 e5             	mov    %rsp,%rbp
    5f84:	48 83 ec 10          	sub    $0x10,%rsp
    5f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f90:	48 8b 10             	mov    (%rax),%rdx
    5f93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f97:	48 89 d6             	mov    %rdx,%rsi
    5f9a:	48 89 c7             	mov    %rax,%rdi
    5f9d:	e8 24 02 00 00       	call   61c6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5fa2:	c9                   	leave
    5fa3:	c3                   	ret

0000000000005fa4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    5fa4:	55                   	push   %rbp
    5fa5:	48 89 e5             	mov    %rsp,%rbp
    5fa8:	53                   	push   %rbx
    5fa9:	48 83 ec 38          	sub    $0x38,%rsp
    5fad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fb1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5fb5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    5fb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5fbd:	48 89 c7             	mov    %rax,%rdi
    5fc0:	e8 c4 ea ff ff       	call   4a89 <_ZNSt11char_traitsIcE6lengthEPKc>
    5fc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5fc9:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5fcd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5fd1:	48 89 d6             	mov    %rdx,%rsi
    5fd4:	48 89 c7             	mov    %rax,%rdi
    5fd7:	e8 14 e1 ff ff       	call   40f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    5fdc:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5fe0:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    5fe4:	48 89 d6             	mov    %rdx,%rsi
    5fe7:	48 89 c7             	mov    %rax,%rdi
    5fea:	e8 e9 01 00 00       	call   61d8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    5fef:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    5ff3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ff7:	48 89 d6             	mov    %rdx,%rsi
    5ffa:	48 89 c7             	mov    %rax,%rdi
    5ffd:	e8 9e e6 ff ff       	call   46a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    6002:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6006:	48 89 c7             	mov    %rax,%rdi
    6009:	e8 12 e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    600e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6012:	48 89 c7             	mov    %rax,%rdi
    6015:	e8 06 e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    601a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    601e:	48 89 c7             	mov    %rax,%rdi
    6021:	e8 fa e1 ff ff       	call   4220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6026:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    602a:	48 01 c2             	add    %rax,%rdx
    602d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6031:	48 89 d6             	mov    %rdx,%rsi
    6034:	48 89 c7             	mov    %rax,%rdi
    6037:	e8 e4 e5 ff ff       	call   4620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    603c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6040:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6044:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6048:	48 89 ce             	mov    %rcx,%rsi
    604b:	48 89 c7             	mov    %rax,%rdi
    604e:	e8 ed df ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    6053:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6057:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    605b:	48 89 d6             	mov    %rdx,%rsi
    605e:	48 89 c7             	mov    %rax,%rdi
    6061:	e8 fa e6 ff ff       	call   4760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    6066:	eb 34                	jmp    609c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6068:	48 89 c3             	mov    %rax,%rbx
    606b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    606f:	48 89 c7             	mov    %rax,%rdi
    6072:	e8 a9 e3 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    6077:	48 89 d8             	mov    %rbx,%rax
    607a:	48 89 c7             	mov    %rax,%rdi
    607d:	e8 6e e6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    }
    6082:	48 89 c3             	mov    %rax,%rbx
    6085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6089:	48 89 c7             	mov    %rax,%rdi
    608c:	e8 4f e1 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6091:	48 89 d8             	mov    %rbx,%rax
    6094:	48 89 c7             	mov    %rax,%rdi
    6097:	e8 54 e6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    609c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60a4:	c9                   	leave
    60a5:	c3                   	ret

00000000000060a6 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    60a6:	55                   	push   %rbp
    60a7:	48 89 e5             	mov    %rsp,%rbp
    60aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b2:	48 8b 00             	mov    (%rax),%rax
    60b5:	5d                   	pop    %rbp
    60b6:	c3                   	ret
    60b7:	90                   	nop

00000000000060b8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    60b8:	55                   	push   %rbp
    60b9:	48 89 e5             	mov    %rsp,%rbp
    60bc:	53                   	push   %rbx
    60bd:	48 83 ec 28          	sub    $0x28,%rsp
    60c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    60c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    60c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    60cd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    60d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    60d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    60d9:	48 89 d6             	mov    %rdx,%rsi
    60dc:	48 89 c7             	mov    %rax,%rdi
    60df:	e8 1d 01 00 00       	call   6201 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    60e4:	48 89 c1             	mov    %rax,%rcx
    60e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60eb:	48 89 c2             	mov    %rax,%rdx
    60ee:	48 89 ce             	mov    %rcx,%rsi
    60f1:	48 89 df             	mov    %rbx,%rdi
    60f4:	e8 85 01 00 00       	call   627e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    60f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    60fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6101:	48 89 d6             	mov    %rdx,%rsi
    6104:	48 89 c7             	mov    %rax,%rdi
    6107:	e8 14 02 00 00       	call   6320 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    610c:	eb 1a                	jmp    6128 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    610e:	48 89 c3             	mov    %rax,%rbx
    6111:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6115:	48 89 c7             	mov    %rax,%rdi
    6118:	e8 bf 01 00 00       	call   62dc <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    611d:	48 89 d8             	mov    %rbx,%rax
    6120:	48 89 c7             	mov    %rax,%rdi
    6123:	e8 c8 e5 ff ff       	call   46f0 <_Unwind_Resume@plt>
    6128:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    612c:	c9                   	leave
    612d:	c3                   	ret

000000000000612e <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    612e:	55                   	push   %rbp
    612f:	48 89 e5             	mov    %rsp,%rbp
    6132:	48 83 ec 10          	sub    $0x10,%rsp
    6136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    613a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    613e:	48 89 c7             	mov    %rax,%rdi
    6141:	e8 1a 02 00 00       	call   6360 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6146:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6155:	48 8b 00             	mov    (%rax),%rax
    6158:	48 89 ce             	mov    %rcx,%rsi
    615b:	48 89 c7             	mov    %rax,%rdi
    615e:	e8 0b 02 00 00       	call   636e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    6163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6167:	48 89 c7             	mov    %rax,%rdi
    616a:	e8 6d 01 00 00       	call   62dc <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    616f:	90                   	nop
    6170:	c9                   	leave
    6171:	c3                   	ret

0000000000006172 <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    6172:	55                   	push   %rbp
    6173:	48 89 e5             	mov    %rsp,%rbp
    6176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    617a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    617e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6182:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6186:	48 89 10             	mov    %rdx,(%rax)
    6189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    6194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6198:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    619f:	90                   	nop
    61a0:	5d                   	pop    %rbp
    61a1:	c3                   	ret

00000000000061a2 <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    61a2:	55                   	push   %rbp
    61a3:	48 89 e5             	mov    %rsp,%rbp
    61a6:	48 83 ec 10          	sub    $0x10,%rsp
    61aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    61ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b2:	48 8b 10             	mov    (%rax),%rdx
    61b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b9:	48 89 d6             	mov    %rdx,%rsi
    61bc:	48 89 c7             	mov    %rax,%rdi
    61bf:	e8 02 00 00 00       	call   61c6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    61c4:	c9                   	leave
    61c5:	c3                   	ret

00000000000061c6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    61c6:	55                   	push   %rbp
    61c7:	48 89 e5             	mov    %rsp,%rbp
    61ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    61d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61d6:	5d                   	pop    %rbp
    61d7:	c3                   	ret

00000000000061d8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    61d8:	55                   	push   %rbp
    61d9:	48 89 e5             	mov    %rsp,%rbp
    61dc:	48 83 ec 10          	sub    $0x10,%rsp
    61e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    61e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f0:	48 89 d6             	mov    %rdx,%rsi
    61f3:	48 89 c7             	mov    %rax,%rdi
    61f6:	e8 a8 01 00 00       	call   63a3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    61fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ff:	c9                   	leave
    6200:	c3                   	ret

0000000000006201 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6201:	55                   	push   %rbp
    6202:	48 89 e5             	mov    %rsp,%rbp
    6205:	53                   	push   %rbx
    6206:	48 83 ec 28          	sub    $0x28,%rsp
    620a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    620e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6212:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6216:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    621a:	48 89 d6             	mov    %rdx,%rsi
    621d:	48 89 c7             	mov    %rax,%rdi
    6220:	e8 8b df ff ff       	call   41b0 <_ZNSaIcEC1ERKS_@plt>
    6225:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6229:	48 89 c7             	mov    %rax,%rdi
    622c:	e8 9b 01 00 00       	call   63cc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    6231:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6235:	0f 92 c3             	setb   %bl
    6238:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    623c:	48 89 c7             	mov    %rax,%rdi
    623f:	e8 dc e1 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    6244:	84 db                	test   %bl,%bl
    6246:	74 0f                	je     6257 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6248:	48 8d 05 39 21 01 00 	lea    0x12139(%rip),%rax        # 18388 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x140>
    624f:	48 89 c7             	mov    %rax,%rdi
    6252:	e8 29 df ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6257:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    625b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    625f:	c9                   	leave
    6260:	c3                   	ret
    6261:	90                   	nop

0000000000006262 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    6262:	55                   	push   %rbp
    6263:	48 89 e5             	mov    %rsp,%rbp
    6266:	48 83 ec 10          	sub    $0x10,%rsp
    626a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    626e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6272:	48 89 c7             	mov    %rax,%rdi
    6275:	e8 e6 dd ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    627a:	90                   	nop
    627b:	c9                   	leave
    627c:	c3                   	ret
    627d:	90                   	nop

000000000000627e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    627e:	55                   	push   %rbp
    627f:	48 89 e5             	mov    %rsp,%rbp
    6282:	53                   	push   %rbx
    6283:	48 83 ec 28          	sub    $0x28,%rsp
    6287:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    628b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    628f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6297:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    629b:	48 89 d6             	mov    %rdx,%rsi
    629e:	48 89 c7             	mov    %rax,%rdi
    62a1:	e8 68 01 00 00       	call   640e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    62a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    62aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62ae:	48 89 d6             	mov    %rdx,%rsi
    62b1:	48 89 c7             	mov    %rax,%rdi
    62b4:	e8 87 01 00 00       	call   6440 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    62b9:	eb 1a                	jmp    62d5 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    62bb:	48 89 c3             	mov    %rax,%rbx
    62be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62c2:	48 89 c7             	mov    %rax,%rdi
    62c5:	e8 98 ff ff ff       	call   6262 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    62ca:	48 89 d8             	mov    %rbx,%rax
    62cd:	48 89 c7             	mov    %rax,%rdi
    62d0:	e8 1b e4 ff ff       	call   46f0 <_Unwind_Resume@plt>
    62d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    62d9:	c9                   	leave
    62da:	c3                   	ret
    62db:	90                   	nop

00000000000062dc <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    62dc:	55                   	push   %rbp
    62dd:	48 89 e5             	mov    %rsp,%rbp
    62e0:	48 83 ec 10          	sub    $0x10,%rsp
    62e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    62e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ec:	48 8b 50 10          	mov    0x10(%rax),%rdx
    62f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f4:	48 8b 00             	mov    (%rax),%rax
    62f7:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    62fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62fe:	48 8b 08             	mov    (%rax),%rcx
    6301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6305:	48 89 ce             	mov    %rcx,%rsi
    6308:	48 89 c7             	mov    %rax,%rdi
    630b:	e8 82 01 00 00       	call   6492 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    6310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6314:	48 89 c7             	mov    %rax,%rdi
    6317:	e8 46 ff ff ff       	call   6262 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    631c:	90                   	nop
    631d:	c9                   	leave
    631e:	c3                   	ret
    631f:	90                   	nop

0000000000006320 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6320:	55                   	push   %rbp
    6321:	48 89 e5             	mov    %rsp,%rbp
    6324:	48 83 ec 10          	sub    $0x10,%rsp
    6328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    632c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6334:	48 89 c7             	mov    %rax,%rdi
    6337:	e8 24 00 00 00       	call   6360 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    633c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    633f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6343:	48 8b 00             	mov    (%rax),%rax
    6346:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    634a:	48 89 ce             	mov    %rcx,%rsi
    634d:	48 89 c7             	mov    %rax,%rdi
    6350:	e8 72 01 00 00       	call   64c7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6355:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6359:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    635d:	90                   	nop
    635e:	c9                   	leave
    635f:	c3                   	ret

0000000000006360 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6360:	55                   	push   %rbp
    6361:	48 89 e5             	mov    %rsp,%rbp
    6364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636c:	5d                   	pop    %rbp
    636d:	c3                   	ret

000000000000636e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    636e:	55                   	push   %rbp
    636f:	48 89 e5             	mov    %rsp,%rbp
    6372:	48 83 ec 20          	sub    $0x20,%rsp
    6376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    637a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    637e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6382:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    638a:	48 89 d6             	mov    %rdx,%rsi
    638d:	48 89 c7             	mov    %rax,%rdi
    6390:	e8 5b 01 00 00       	call   64f0 <_ZSt8_DestroyIPcEvT_S1_>
    }
    6395:	90                   	nop
    6396:	c9                   	leave
    6397:	c3                   	ret

0000000000006398 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    6398:	55                   	push   %rbp
    6399:	48 89 e5             	mov    %rsp,%rbp
    639c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    63a0:	90                   	nop
    63a1:	5d                   	pop    %rbp
    63a2:	c3                   	ret

00000000000063a3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    63a3:	55                   	push   %rbp
    63a4:	48 89 e5             	mov    %rsp,%rbp
    63a7:	48 83 ec 10          	sub    $0x10,%rsp
    63ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    63b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63bb:	48 89 d6             	mov    %rdx,%rsi
    63be:	48 89 c7             	mov    %rax,%rdi
    63c1:	e8 ea dd ff ff       	call   41b0 <_ZNSaIcEC1ERKS_@plt>
    63c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ca:	c9                   	leave
    63cb:	c3                   	ret

00000000000063cc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    63cc:	55                   	push   %rbp
    63cd:	48 89 e5             	mov    %rsp,%rbp
    63d0:	48 83 ec 20          	sub    $0x20,%rsp
    63d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    63d8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    63df:	ff ff 7f 
    63e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    63e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63ea:	48 89 c7             	mov    %rax,%rdi
    63ed:	e8 52 01 00 00       	call   6544 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    63f2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    63f6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    63fa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    63fe:	48 89 d6             	mov    %rdx,%rsi
    6401:	48 89 c7             	mov    %rax,%rdi
    6404:	e8 24 ef ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    6409:	48 8b 00             	mov    (%rax),%rax
      }
    640c:	c9                   	leave
    640d:	c3                   	ret

000000000000640e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    640e:	55                   	push   %rbp
    640f:	48 89 e5             	mov    %rsp,%rbp
    6412:	48 83 ec 10          	sub    $0x10,%rsp
    6416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    641a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    641e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6426:	48 89 d6             	mov    %rdx,%rsi
    6429:	48 89 c7             	mov    %rax,%rdi
    642c:	e8 8f e1 ff ff       	call   45c0 <_ZNSaIcEC2ERKS_@plt>
    6431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6435:	48 89 c7             	mov    %rax,%rdi
    6438:	e8 21 01 00 00       	call   655e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    643d:	90                   	nop
    643e:	c9                   	leave
    643f:	c3                   	ret

0000000000006440 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6440:	55                   	push   %rbp
    6441:	48 89 e5             	mov    %rsp,%rbp
    6444:	48 83 ec 10          	sub    $0x10,%rsp
    6448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    644c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6458:	48 89 d6             	mov    %rdx,%rsi
    645b:	48 89 c7             	mov    %rax,%rdi
    645e:	e8 29 01 00 00       	call   658c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    6463:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6467:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    646a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646e:	48 8b 10             	mov    (%rax),%rdx
    6471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6475:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6479:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    647d:	48 8b 10             	mov    (%rax),%rdx
    6480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6484:	48 01 c2             	add    %rax,%rdx
    6487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    648b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    648f:	90                   	nop
    6490:	c9                   	leave
    6491:	c3                   	ret

0000000000006492 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    6492:	55                   	push   %rbp
    6493:	48 89 e5             	mov    %rsp,%rbp
    6496:	48 83 ec 20          	sub    $0x20,%rsp
    649a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    649e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    64a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    64ab:	74 17                	je     64c4 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    64ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    64b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    64b9:	48 89 ce             	mov    %rcx,%rsi
    64bc:	48 89 c7             	mov    %rax,%rdi
    64bf:	e8 52 00 00 00       	call   6516 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    64c4:	90                   	nop
    64c5:	c9                   	leave
    64c6:	c3                   	ret

00000000000064c7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    64c7:	55                   	push   %rbp
    64c8:	48 89 e5             	mov    %rsp,%rbp
    64cb:	48 83 ec 20          	sub    $0x20,%rsp
    64cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    64db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e3:	48 89 d6             	mov    %rdx,%rsi
    64e6:	48 89 c7             	mov    %rax,%rdi
    64e9:	e8 d1 00 00 00       	call   65bf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    64ee:	c9                   	leave
    64ef:	c3                   	ret

00000000000064f0 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    64f0:	55                   	push   %rbp
    64f1:	48 89 e5             	mov    %rsp,%rbp
    64f4:	48 83 ec 10          	sub    $0x10,%rsp
    64f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6500:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6508:	48 89 d6             	mov    %rdx,%rsi
    650b:	48 89 c7             	mov    %rax,%rdi
    650e:	e8 d5 00 00 00       	call   65e8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    6513:	90                   	nop
    6514:	c9                   	leave
    6515:	c3                   	ret

0000000000006516 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6516:	55                   	push   %rbp
    6517:	48 89 e5             	mov    %rsp,%rbp
    651a:	48 83 ec 20          	sub    $0x20,%rsp
    651e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6526:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    652a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    652e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6536:	48 89 ce             	mov    %rcx,%rsi
    6539:	48 89 c7             	mov    %rax,%rdi
    653c:	e8 c5 00 00 00       	call   6606 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    6541:	90                   	nop
    6542:	c9                   	leave
    6543:	c3                   	ret

0000000000006544 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6544:	55                   	push   %rbp
    6545:	48 89 e5             	mov    %rsp,%rbp
    6548:	48 83 ec 10          	sub    $0x10,%rsp
    654c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6554:	48 89 c7             	mov    %rax,%rdi
    6557:	e8 d4 00 00 00       	call   6630 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    655c:	c9                   	leave
    655d:	c3                   	ret

000000000000655e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    655e:	55                   	push   %rbp
    655f:	48 89 e5             	mov    %rsp,%rbp
    6562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6575:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    657c:	00 
    657d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6581:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6588:	00 
	{ }
    6589:	90                   	nop
    658a:	5d                   	pop    %rbp
    658b:	c3                   	ret

000000000000658c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    658c:	55                   	push   %rbp
    658d:	48 89 e5             	mov    %rsp,%rbp
    6590:	48 83 ec 10          	sub    $0x10,%rsp
    6594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6598:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    659c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    65a1:	74 15                	je     65b8 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    65a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65ab:	48 89 d6             	mov    %rdx,%rsi
    65ae:	48 89 c7             	mov    %rax,%rdi
    65b1:	e8 94 00 00 00       	call   664a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    65b6:	eb 05                	jmp    65bd <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    65b8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    65bd:	c9                   	leave
    65be:	c3                   	ret

00000000000065bf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    65bf:	55                   	push   %rbp
    65c0:	48 89 e5             	mov    %rsp,%rbp
    65c3:	48 83 ec 20          	sub    $0x20,%rsp
    65c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    65cf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    65d3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    65d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65db:	48 89 d6             	mov    %rdx,%rsi
    65de:	48 89 c7             	mov    %rax,%rdi
    65e1:	e8 8e 00 00 00       	call   6674 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    65e6:	c9                   	leave
    65e7:	c3                   	ret

00000000000065e8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    65e8:	55                   	push   %rbp
    65e9:	48 89 e5             	mov    %rsp,%rbp
    65ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65f4:	90                   	nop
    65f5:	5d                   	pop    %rbp
    65f6:	c3                   	ret

00000000000065f7 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    65f7:	55                   	push   %rbp
    65f8:	48 89 e5             	mov    %rsp,%rbp
    65fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    65ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6603:	5d                   	pop    %rbp
    6604:	c3                   	ret
    6605:	90                   	nop

0000000000006606 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6606:	55                   	push   %rbp
    6607:	48 89 e5             	mov    %rsp,%rbp
    660a:	48 83 ec 20          	sub    $0x20,%rsp
    660e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6616:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    661a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    661e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6622:	48 89 d6             	mov    %rdx,%rsi
    6625:	48 89 c7             	mov    %rax,%rdi
    6628:	e8 63 dd ff ff       	call   4390 <_ZdlPvm@plt>
      }
    662d:	c9                   	leave
    662e:	c3                   	ret
    662f:	90                   	nop

0000000000006630 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6630:	55                   	push   %rbp
    6631:	48 89 e5             	mov    %rsp,%rbp
    6634:	48 83 ec 10          	sub    $0x10,%rsp
    6638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    663c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6640:	48 89 c7             	mov    %rax,%rdi
    6643:	e8 8a 00 00 00       	call   66d2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6648:	c9                   	leave
    6649:	c3                   	ret

000000000000664a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    664a:	55                   	push   %rbp
    664b:	48 89 e5             	mov    %rsp,%rbp
    664e:	48 83 ec 10          	sub    $0x10,%rsp
    6652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6656:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    665a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    665e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6662:	ba 00 00 00 00       	mov    $0x0,%edx
    6667:	48 89 ce             	mov    %rcx,%rsi
    666a:	48 89 c7             	mov    %rax,%rdi
    666d:	e8 74 00 00 00       	call   66e6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    6672:	c9                   	leave
    6673:	c3                   	ret

0000000000006674 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    6674:	55                   	push   %rbp
    6675:	48 89 e5             	mov    %rsp,%rbp
    6678:	48 83 ec 20          	sub    $0x20,%rsp
    667c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6680:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    6684:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6689:	74 40                	je     66cb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    668b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    668f:	48 89 c7             	mov    %rax,%rdi
    6692:	e8 60 ff ff ff       	call   65f7 <_ZSt11__addressofIcEPT_RS0_>
    6697:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    669b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    669f:	48 89 c7             	mov    %rax,%rdi
    66a2:	e8 87 00 00 00       	call   672e <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    66a7:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    66ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66b0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    66b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    66b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66bc:	48 89 ce             	mov    %rcx,%rsi
    66bf:	48 89 c7             	mov    %rax,%rdi
    66c2:	e8 8a 00 00 00       	call   6751 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    66c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    66cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    66cf:	c9                   	leave
    66d0:	c3                   	ret
    66d1:	90                   	nop

00000000000066d2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    66d2:	55                   	push   %rbp
    66d3:	48 89 e5             	mov    %rsp,%rbp
    66d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    66da:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    66e1:	ff ff 7f 
      }
    66e4:	5d                   	pop    %rbp
    66e5:	c3                   	ret

00000000000066e6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    66e6:	55                   	push   %rbp
    66e7:	48 89 e5             	mov    %rsp,%rbp
    66ea:	48 83 ec 20          	sub    $0x20,%rsp
    66ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    66fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66fe:	48 89 c7             	mov    %rax,%rdi
    6701:	e8 cc ff ff ff       	call   66d2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6706:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    670a:	0f 92 c0             	setb   %al
    670d:	0f b6 c0             	movzbl %al,%eax
    6710:	48 85 c0             	test   %rax,%rax
    6713:	0f 95 c0             	setne  %al
    6716:	84 c0                	test   %al,%al
    6718:	74 05                	je     671f <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    671a:	e8 c1 d9 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    671f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6723:	48 89 c7             	mov    %rax,%rdi
    6726:	e8 55 dc ff ff       	call   4380 <_Znwm@plt>
    672b:	90                   	nop
      }
    672c:	c9                   	leave
    672d:	c3                   	ret

000000000000672e <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    672e:	55                   	push   %rbp
    672f:	48 89 e5             	mov    %rsp,%rbp
    6732:	48 83 ec 10          	sub    $0x10,%rsp
    6736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    673a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    673e:	48 89 c6             	mov    %rax,%rsi
    6741:	bf 01 00 00 00       	mov    $0x1,%edi
    6746:	e8 15 e7 ff ff       	call   4e60 <_ZnwmPv>
    674b:	c6 00 00             	movb   $0x0,(%rax)
    }
    674e:	90                   	nop
    674f:	c9                   	leave
    6750:	c3                   	ret

0000000000006751 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6751:	55                   	push   %rbp
    6752:	48 89 e5             	mov    %rsp,%rbp
    6755:	48 83 ec 20          	sub    $0x20,%rsp
    6759:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    675d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6761:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6765:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6769:	48 89 c7             	mov    %rax,%rdi
    676c:	e8 27 fc ff ff       	call   6398 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6775:	48 89 c7             	mov    %rax,%rdi
    6778:	e8 f5 e6 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    677d:	48 89 c1             	mov    %rax,%rcx
    6780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6784:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6788:	48 89 ce             	mov    %rcx,%rsi
    678b:	48 89 c7             	mov    %rax,%rdi
    678e:	e8 02 00 00 00       	call   6795 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    6793:	c9                   	leave
    6794:	c3                   	ret

0000000000006795 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6795:	55                   	push   %rbp
    6796:	48 89 e5             	mov    %rsp,%rbp
    6799:	48 83 ec 20          	sub    $0x20,%rsp
    679d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    67a9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    67ae:	75 06                	jne    67b6 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    67b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b4:	eb 2a                	jmp    67e0 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    67b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67be:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    67c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ca:	48 89 ce             	mov    %rcx,%rsi
    67cd:	48 89 c7             	mov    %rax,%rdi
    67d0:	e8 0d 00 00 00       	call   67e2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    67d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67dd:	48 01 d0             	add    %rdx,%rax
    }
    67e0:	c9                   	leave
    67e1:	c3                   	ret

00000000000067e2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    67e2:	55                   	push   %rbp
    67e3:	48 89 e5             	mov    %rsp,%rbp
    67e6:	48 83 ec 20          	sub    $0x20,%rsp
    67ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    67f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    67fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6802:	48 89 ce             	mov    %rcx,%rsi
    6805:	48 89 c7             	mov    %rax,%rdi
    6808:	e8 03 00 00 00       	call   6810 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    680d:	90                   	nop
    680e:	c9                   	leave
    680f:	c3                   	ret

0000000000006810 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6810:	55                   	push   %rbp
    6811:	48 89 e5             	mov    %rsp,%rbp
    6814:	48 83 ec 30          	sub    $0x30,%rsp
    6818:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    681c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6820:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    6824:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6828:	0f b6 00             	movzbl (%rax),%eax
    682b:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    682e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6832:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6836:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    683a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    683f:	74 19                	je     685a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6841:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    6845:	0f b6 c8             	movzbl %al,%ecx
    6848:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    684c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6850:	89 ce                	mov    %ecx,%esi
    6852:	48 89 c7             	mov    %rax,%rdi
    6855:	e8 46 d9 ff ff       	call   41a0 <memset@plt>
    }
    685a:	90                   	nop
    685b:	c9                   	leave
    685c:	c3                   	ret

000000000000685d <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    685d:	55                   	push   %rbp
    685e:	48 89 e5             	mov    %rsp,%rbp
    6861:	48 83 ec 10          	sub    $0x10,%rsp
    6865:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    686d:	48 89 c7             	mov    %rax,%rdi
    6870:	e8 5b d8 ff ff       	call   40d0 <glfwDestroyWindow@plt>
    6875:	90                   	nop
    6876:	c9                   	leave
    6877:	c3                   	ret

0000000000006878 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    6878:	55                   	push   %rbp
    6879:	48 89 e5             	mov    %rsp,%rbp
    687c:	48 83 ec 10          	sub    $0x10,%rsp
    6880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6884:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    6888:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    688c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6890:	48 89 d6             	mov    %rdx,%rsi
    6893:	48 89 c7             	mov    %rax,%rdi
    6896:	e8 05 db ff ff       	call   43a0 <vkDestroyInstance@plt>
}
    689b:	90                   	nop
    689c:	c9                   	leave
    689d:	c3                   	ret

000000000000689e <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    689e:	55                   	push   %rbp
    689f:	48 89 e5             	mov    %rsp,%rbp
    68a2:	48 83 ec 10          	sub    $0x10,%rsp
    68a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    68ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b6:	48 89 d6             	mov    %rdx,%rsi
    68b9:	48 89 c7             	mov    %rax,%rdi
    68bc:	e8 df d9 ff ff       	call   42a0 <vkDestroyDevice@plt>
}
    68c1:	90                   	nop
    68c2:	c9                   	leave
    68c3:	c3                   	ret

00000000000068c4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    68c4:	55                   	push   %rbp
    68c5:	48 89 e5             	mov    %rsp,%rbp
    68c8:	48 83 ec 20          	sub    $0x20,%rsp
    68cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    68d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e4:	48 89 ce             	mov    %rcx,%rsi
    68e7:	48 89 c7             	mov    %rax,%rdi
    68ea:	e8 f1 dd ff ff       	call   46e0 <vkDestroySurfaceKHR@plt>
}
    68ef:	90                   	nop
    68f0:	c9                   	leave
    68f1:	c3                   	ret

00000000000068f2 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    68f2:	55                   	push   %rbp
    68f3:	48 89 e5             	mov    %rsp,%rbp
    68f6:	48 83 ec 20          	sub    $0x20,%rsp
    68fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6902:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    6906:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    690a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    690e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6912:	48 89 ce             	mov    %rcx,%rsi
    6915:	48 89 c7             	mov    %rax,%rdi
    6918:	e8 a3 d7 ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    691d:	90                   	nop
    691e:	c9                   	leave
    691f:	c3                   	ret

0000000000006920 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6920:	55                   	push   %rbp
    6921:	48 89 e5             	mov    %rsp,%rbp
    6924:	48 83 ec 20          	sub    $0x20,%rsp
    6928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    692c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    6934:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6938:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    693c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6940:	48 89 ce             	mov    %rcx,%rsi
    6943:	48 89 c7             	mov    %rax,%rdi
    6946:	e8 c5 dd ff ff       	call   4710 <vkDestroyImageView@plt>
}
    694b:	90                   	nop
    694c:	c9                   	leave
    694d:	c3                   	ret

000000000000694e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    694e:	55                   	push   %rbp
    694f:	48 89 e5             	mov    %rsp,%rbp
    6952:	48 83 ec 20          	sub    $0x20,%rsp
    6956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    695a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    695e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    6962:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6966:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696e:	48 89 ce             	mov    %rcx,%rsi
    6971:	48 89 c7             	mov    %rax,%rdi
    6974:	e8 37 db ff ff       	call   44b0 <vkDestroyShaderModule@plt>
}
    6979:	90                   	nop
    697a:	c9                   	leave
    697b:	c3                   	ret

000000000000697c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    697c:	55                   	push   %rbp
    697d:	48 89 e5             	mov    %rsp,%rbp
    6980:	48 83 ec 20          	sub    $0x20,%rsp
    6984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6988:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    698c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    6990:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6994:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    699c:	48 89 ce             	mov    %rcx,%rsi
    699f:	48 89 c7             	mov    %rax,%rdi
    69a2:	e8 39 db ff ff       	call   44e0 <vkDestroyPipelineLayout@plt>
}
    69a7:	90                   	nop
    69a8:	c9                   	leave
    69a9:	c3                   	ret

00000000000069aa <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    69aa:	55                   	push   %rbp
    69ab:	48 89 e5             	mov    %rsp,%rbp
    69ae:	48 83 ec 20          	sub    $0x20,%rsp
    69b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    69be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ca:	48 89 ce             	mov    %rcx,%rsi
    69cd:	48 89 c7             	mov    %rax,%rdi
    69d0:	e8 8b d9 ff ff       	call   4360 <vkDestroyRenderPass@plt>
}
    69d5:	90                   	nop
    69d6:	c9                   	leave
    69d7:	c3                   	ret

00000000000069d8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    69d8:	55                   	push   %rbp
    69d9:	48 89 e5             	mov    %rsp,%rbp
    69dc:	48 83 ec 20          	sub    $0x20,%rsp
    69e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    69ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69f8:	48 89 ce             	mov    %rcx,%rsi
    69fb:	48 89 c7             	mov    %rax,%rdi
    69fe:	e8 2d da ff ff       	call   4430 <vkDestroyPipeline@plt>
}
    6a03:	90                   	nop
    6a04:	c9                   	leave
    6a05:	c3                   	ret

0000000000006a06 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    6a06:	55                   	push   %rbp
    6a07:	48 89 e5             	mov    %rsp,%rbp
    6a0a:	48 83 ec 40          	sub    $0x40,%rsp
    6a0e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6a12:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6a16:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6a1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a26:	48 89 c7             	mov    %rax,%rdi
    6a29:	e8 c4 00 00 00       	call   6af2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6a2e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a36:	48 89 c7             	mov    %rax,%rdi
    6a39:	e8 da 00 00 00       	call   6b18 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6a3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6a42:	eb 36                	jmp    6a7a <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    6a44:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a48:	48 89 c7             	mov    %rax,%rdi
    6a4b:	e8 4c 01 00 00       	call   6b9c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6a50:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    6a54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a58:	48 8b 08             	mov    (%rax),%rcx
    6a5b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a63:	48 89 ce             	mov    %rcx,%rsi
    6a66:	48 89 c7             	mov    %rax,%rdi
    6a69:	e8 c2 d9 ff ff       	call   4430 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    6a6e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a72:	48 89 c7             	mov    %rax,%rdi
    6a75:	e8 02 01 00 00       	call   6b7c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    6a7a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6a7e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a82:	48 89 d6             	mov    %rdx,%rsi
    6a85:	48 89 c7             	mov    %rax,%rdi
    6a88:	e8 b4 00 00 00       	call   6b41 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6a8d:	84 c0                	test   %al,%al
    6a8f:	75 b3                	jne    6a44 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    6a91:	90                   	nop
    6a92:	90                   	nop
    6a93:	c9                   	leave
    6a94:	c3                   	ret

0000000000006a95 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    6a95:	55                   	push   %rbp
    6a96:	48 89 e5             	mov    %rsp,%rbp
    6a99:	48 83 ec 20          	sub    $0x20,%rsp
    6a9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aa1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aa5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    6aa9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6aad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ab1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ab5:	48 89 ce             	mov    %rcx,%rsi
    6ab8:	48 89 c7             	mov    %rax,%rdi
    6abb:	e8 c0 db ff ff       	call   4680 <vkDestroyFramebuffer@plt>
}
    6ac0:	90                   	nop
    6ac1:	c9                   	leave
    6ac2:	c3                   	ret

0000000000006ac3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6ac3:	55                   	push   %rbp
    6ac4:	48 89 e5             	mov    %rsp,%rbp
    6ac7:	48 83 ec 20          	sub    $0x20,%rsp
    6acb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6acf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ad3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6ad7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6adb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ae3:	48 89 ce             	mov    %rcx,%rsi
    6ae6:	48 89 c7             	mov    %rax,%rdi
    6ae9:	e8 c2 da ff ff       	call   45b0 <vkDestroyCommandPool@plt>
}
    6aee:	90                   	nop
    6aef:	c9                   	leave
    6af0:	c3                   	ret
    6af1:	90                   	nop

0000000000006af2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6af2:	55                   	push   %rbp
    6af3:	48 89 e5             	mov    %rsp,%rbp
    6af6:	48 83 ec 20          	sub    $0x20,%rsp
    6afa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6afe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b02:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6b06:	48 89 d6             	mov    %rdx,%rsi
    6b09:	48 89 c7             	mov    %rax,%rdi
    6b0c:	e8 9d 00 00 00       	call   6bae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b15:	c9                   	leave
    6b16:	c3                   	ret
    6b17:	90                   	nop

0000000000006b18 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6b18:	55                   	push   %rbp
    6b19:	48 89 e5             	mov    %rsp,%rbp
    6b1c:	48 83 ec 20          	sub    $0x20,%rsp
    6b20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b28:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6b2c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6b30:	48 89 d6             	mov    %rdx,%rsi
    6b33:	48 89 c7             	mov    %rax,%rdi
    6b36:	e8 73 00 00 00       	call   6bae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b3f:	c9                   	leave
    6b40:	c3                   	ret

0000000000006b41 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6b41:	55                   	push   %rbp
    6b42:	48 89 e5             	mov    %rsp,%rbp
    6b45:	53                   	push   %rbx
    6b46:	48 83 ec 18          	sub    $0x18,%rsp
    6b4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b4e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6b52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b56:	48 89 c7             	mov    %rax,%rdi
    6b59:	e8 6e 00 00 00       	call   6bcc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6b5e:	48 8b 18             	mov    (%rax),%rbx
    6b61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6b65:	48 89 c7             	mov    %rax,%rdi
    6b68:	e8 5f 00 00 00       	call   6bcc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6b6d:	48 8b 00             	mov    (%rax),%rax
    6b70:	48 39 c3             	cmp    %rax,%rbx
    6b73:	0f 95 c0             	setne  %al
    6b76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b7a:	c9                   	leave
    6b7b:	c3                   	ret

0000000000006b7c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6b7c:	55                   	push   %rbp
    6b7d:	48 89 e5             	mov    %rsp,%rbp
    6b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b88:	48 8b 00             	mov    (%rax),%rax
    6b8b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b93:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6b9a:	5d                   	pop    %rbp
    6b9b:	c3                   	ret

0000000000006b9c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6b9c:	55                   	push   %rbp
    6b9d:	48 89 e5             	mov    %rsp,%rbp
    6ba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6ba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ba8:	48 8b 00             	mov    (%rax),%rax
    6bab:	5d                   	pop    %rbp
    6bac:	c3                   	ret
    6bad:	90                   	nop

0000000000006bae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6bae:	55                   	push   %rbp
    6baf:	48 89 e5             	mov    %rsp,%rbp
    6bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6bba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6bbe:	48 8b 10             	mov    (%rax),%rdx
    6bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bc5:	48 89 10             	mov    %rdx,(%rax)
    6bc8:	90                   	nop
    6bc9:	5d                   	pop    %rbp
    6bca:	c3                   	ret
    6bcb:	90                   	nop

0000000000006bcc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6bcc:	55                   	push   %rbp
    6bcd:	48 89 e5             	mov    %rsp,%rbp
    6bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bd8:	5d                   	pop    %rbp
    6bd9:	c3                   	ret

0000000000006bda <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6bda:	55                   	push   %rbp
    6bdb:	48 89 e5             	mov    %rsp,%rbp
    6bde:	53                   	push   %rbx
    6bdf:	48 83 ec 28          	sub    $0x28,%rsp
    6be3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6be7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6beb:	be 00 00 00 00       	mov    $0x0,%esi
    6bf0:	48 89 c7             	mov    %rax,%rdi
    6bf3:	e8 68 d8 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6bf8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6bfb:	89 c3                	mov    %eax,%ebx
    6bfd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c01:	48 89 c7             	mov    %rax,%rdi
    6c04:	e8 47 11 00 00       	call   7d50 <_ZNSaI17VkLayerPropertiesEC1Ev>
    6c09:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c11:	48 89 de             	mov    %rbx,%rsi
    6c14:	48 89 c7             	mov    %rax,%rdi
    6c17:	e8 6c 11 00 00       	call   7d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6c1c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c20:	48 89 c7             	mov    %rax,%rdi
    6c23:	e8 44 11 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c2c:	48 89 c7             	mov    %rax,%rdi
    6c2f:	e8 0e 12 00 00       	call   7e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6c34:	48 89 c2             	mov    %rax,%rdx
    6c37:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6c3b:	48 89 d6             	mov    %rdx,%rsi
    6c3e:	48 89 c7             	mov    %rax,%rdi
    6c41:	e8 1a d8 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6c46:	eb 34                	jmp    6c7c <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6c48:	48 89 c3             	mov    %rax,%rbx
    6c4b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c4f:	48 89 c7             	mov    %rax,%rdi
    6c52:	e8 15 11 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    6c57:	48 89 d8             	mov    %rbx,%rax
    6c5a:	48 89 c7             	mov    %rax,%rdi
    6c5d:	e8 8e da ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    6c62:	48 89 c3             	mov    %rax,%rbx
    6c65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c69:	48 89 c7             	mov    %rax,%rdi
    6c6c:	e8 8d 11 00 00       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6c71:	48 89 d8             	mov    %rbx,%rax
    6c74:	48 89 c7             	mov    %rax,%rdi
    6c77:	e8 74 da ff ff       	call   46f0 <_Unwind_Resume@plt>
    6c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6c84:	c9                   	leave
    6c85:	c3                   	ret

0000000000006c86 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6c86:	55                   	push   %rbp
    6c87:	48 89 e5             	mov    %rsp,%rbp
    6c8a:	41 54                	push   %r12
    6c8c:	53                   	push   %rbx
    6c8d:	48 83 ec 20          	sub    $0x20,%rsp
    6c91:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6c95:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6c99:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6c9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6ca1:	ba 00 00 00 00       	mov    $0x0,%edx
    6ca6:	48 89 ce             	mov    %rcx,%rsi
    6ca9:	48 89 c7             	mov    %rax,%rdi
    6cac:	e8 0f d6 ff ff       	call   42c0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    6cb1:	85 c0                	test   %eax,%eax
    6cb3:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6cb6:	84 c0                	test   %al,%al
    6cb8:	74 3b                	je     6cf5 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    6cba:	bf 10 00 00 00       	mov    $0x10,%edi
    6cbf:	e8 ac d4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6cc4:	48 89 c3             	mov    %rax,%rbx
    6cc7:	48 8d 05 a2 22 01 00 	lea    0x122a2(%rip),%rax        # 18f70 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6cce:	48 89 c6             	mov    %rax,%rsi
    6cd1:	48 89 df             	mov    %rbx,%rdi
    6cd4:	e8 27 d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6cd9:	48 8b 05 c8 12 02 00 	mov    0x212c8(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ce0:	48 89 c2             	mov    %rax,%rdx
    6ce3:	48 8d 05 56 10 02 00 	lea    0x21056(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cea:	48 89 c6             	mov    %rax,%rsi
    6ced:	48 89 df             	mov    %rbx,%rdi
    6cf0:	e8 9b d9 ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6cf5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6cf8:	89 c3                	mov    %eax,%ebx
    6cfa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6cfe:	48 89 c7             	mov    %rax,%rdi
    6d01:	e8 b8 11 00 00       	call   7ebe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6d06:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d0e:	48 89 de             	mov    %rbx,%rsi
    6d11:	48 89 c7             	mov    %rax,%rdi
    6d14:	e8 dd 11 00 00       	call   7ef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6d19:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d1d:	48 89 c7             	mov    %rax,%rdi
    6d20:	e8 b5 11 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6d25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d29:	48 89 c7             	mov    %rax,%rdi
    6d2c:	e8 7f 12 00 00       	call   7fb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6d31:	48 89 c2             	mov    %rax,%rdx
    6d34:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6d38:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d3c:	48 89 ce             	mov    %rcx,%rsi
    6d3f:	48 89 c7             	mov    %rax,%rdi
    6d42:	e8 79 d5 ff ff       	call   42c0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6d47:	85 c0                	test   %eax,%eax
    6d49:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6d4c:	84 c0                	test   %al,%al
    6d4e:	0f 84 95 00 00 00    	je     6de9 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6d54:	bf 10 00 00 00       	mov    $0x10,%edi
    6d59:	e8 12 d4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6d5e:	48 89 c3             	mov    %rax,%rbx
    6d61:	48 8d 05 08 22 01 00 	lea    0x12208(%rip),%rax        # 18f70 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6d68:	48 89 c6             	mov    %rax,%rsi
    6d6b:	48 89 df             	mov    %rbx,%rdi
    6d6e:	e8 8d d3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6d73:	48 8b 05 2e 12 02 00 	mov    0x2122e(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6d7a:	48 89 c2             	mov    %rax,%rdx
    6d7d:	48 8d 05 bc 0f 02 00 	lea    0x20fbc(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6d84:	48 89 c6             	mov    %rax,%rsi
    6d87:	48 89 df             	mov    %rbx,%rdi
    6d8a:	e8 01 d9 ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6d8f:	49 89 c4             	mov    %rax,%r12
    6d92:	48 89 df             	mov    %rbx,%rdi
    6d95:	e8 a6 d4 ff ff       	call   4240 <__cxa_free_exception@plt>
    6d9a:	4c 89 e0             	mov    %r12,%rax
    6d9d:	48 89 c7             	mov    %rax,%rdi
    6da0:	e8 4b d9 ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6da5:	48 89 c3             	mov    %rax,%rbx
    6da8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6dac:	48 89 c7             	mov    %rax,%rdi
    6daf:	e8 26 11 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    6db4:	48 89 d8             	mov    %rbx,%rax
    6db7:	48 89 c7             	mov    %rax,%rdi
    6dba:	e8 31 d9 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6dbf:	49 89 c4             	mov    %rax,%r12
    6dc2:	48 89 df             	mov    %rbx,%rdi
    6dc5:	e8 76 d4 ff ff       	call   4240 <__cxa_free_exception@plt>
    6dca:	4c 89 e3             	mov    %r12,%rbx
    6dcd:	eb 03                	jmp    6dd2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6dcf:	48 89 c3             	mov    %rax,%rbx
    6dd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dd6:	48 89 c7             	mov    %rax,%rdi
    6dd9:	e8 8e 11 00 00       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6dde:	48 89 d8             	mov    %rbx,%rax
    6de1:	48 89 c7             	mov    %rax,%rdi
    6de4:	e8 07 d9 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return instanceExtensions;
    6de9:	90                   	nop
}
    6dea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dee:	48 83 c4 20          	add    $0x20,%rsp
    6df2:	5b                   	pop    %rbx
    6df3:	41 5c                	pop    %r12
    6df5:	5d                   	pop    %rbp
    6df6:	c3                   	ret

0000000000006df7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6df7:	55                   	push   %rbp
    6df8:	48 89 e5             	mov    %rsp,%rbp
    6dfb:	41 54                	push   %r12
    6dfd:	53                   	push   %rbx
    6dfe:	48 83 ec 30          	sub    $0x30,%rsp
    6e02:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6e06:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6e0a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6e0e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6e12:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6e16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6e1a:	b9 00 00 00 00       	mov    $0x0,%ecx
    6e1f:	48 89 c7             	mov    %rax,%rdi
    6e22:	e8 69 d7 ff ff       	call   4590 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6e27:	85 c0                	test   %eax,%eax
    6e29:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6e2c:	84 c0                	test   %al,%al
    6e2e:	74 3b                	je     6e6b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6e30:	bf 10 00 00 00       	mov    $0x10,%edi
    6e35:	e8 36 d3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6e3a:	48 89 c3             	mov    %rax,%rbx
    6e3d:	48 8d 05 54 21 01 00 	lea    0x12154(%rip),%rax        # 18f98 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6e44:	48 89 c6             	mov    %rax,%rsi
    6e47:	48 89 df             	mov    %rbx,%rdi
    6e4a:	e8 b1 d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6e4f:	48 8b 05 52 11 02 00 	mov    0x21152(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6e56:	48 89 c2             	mov    %rax,%rdx
    6e59:	48 8d 05 e0 0e 02 00 	lea    0x20ee0(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6e60:	48 89 c6             	mov    %rax,%rsi
    6e63:	48 89 df             	mov    %rbx,%rdi
    6e66:	e8 25 d8 ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6e6b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6e6e:	89 c3                	mov    %eax,%ebx
    6e70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e74:	48 89 c7             	mov    %rax,%rdi
    6e77:	e8 42 10 00 00       	call   7ebe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6e7c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6e80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e84:	48 89 de             	mov    %rbx,%rsi
    6e87:	48 89 c7             	mov    %rax,%rdi
    6e8a:	e8 67 10 00 00       	call   7ef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6e8f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e93:	48 89 c7             	mov    %rax,%rdi
    6e96:	e8 3f 10 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    6e9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e9f:	48 89 c7             	mov    %rax,%rdi
    6ea2:	e8 09 11 00 00       	call   7fb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6ea7:	48 89 c1             	mov    %rax,%rcx
    6eaa:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6eae:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6eb2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6eb6:	48 89 c7             	mov    %rax,%rdi
    6eb9:	e8 d2 d6 ff ff       	call   4590 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    6ebe:	85 c0                	test   %eax,%eax
    6ec0:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6ec3:	84 c0                	test   %al,%al
    6ec5:	0f 84 95 00 00 00    	je     6f60 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    6ecb:	bf 10 00 00 00       	mov    $0x10,%edi
    6ed0:	e8 9b d2 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6ed5:	48 89 c3             	mov    %rax,%rbx
    6ed8:	48 8d 05 b9 20 01 00 	lea    0x120b9(%rip),%rax        # 18f98 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6edf:	48 89 c6             	mov    %rax,%rsi
    6ee2:	48 89 df             	mov    %rbx,%rdi
    6ee5:	e8 16 d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6eea:	48 8b 05 b7 10 02 00 	mov    0x210b7(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ef1:	48 89 c2             	mov    %rax,%rdx
    6ef4:	48 8d 05 45 0e 02 00 	lea    0x20e45(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6efb:	48 89 c6             	mov    %rax,%rsi
    6efe:	48 89 df             	mov    %rbx,%rdi
    6f01:	e8 8a d7 ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6f06:	49 89 c4             	mov    %rax,%r12
    6f09:	48 89 df             	mov    %rbx,%rdi
    6f0c:	e8 2f d3 ff ff       	call   4240 <__cxa_free_exception@plt>
    6f11:	4c 89 e0             	mov    %r12,%rax
    6f14:	48 89 c7             	mov    %rax,%rdi
    6f17:	e8 d4 d7 ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6f1c:	48 89 c3             	mov    %rax,%rbx
    6f1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f23:	48 89 c7             	mov    %rax,%rdi
    6f26:	e8 af 0f 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    6f2b:	48 89 d8             	mov    %rbx,%rax
    6f2e:	48 89 c7             	mov    %rax,%rdi
    6f31:	e8 ba d7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6f36:	49 89 c4             	mov    %rax,%r12
    6f39:	48 89 df             	mov    %rbx,%rdi
    6f3c:	e8 ff d2 ff ff       	call   4240 <__cxa_free_exception@plt>
    6f41:	4c 89 e3             	mov    %r12,%rbx
    6f44:	eb 03                	jmp    6f49 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    6f46:	48 89 c3             	mov    %rax,%rbx
    6f49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f4d:	48 89 c7             	mov    %rax,%rdi
    6f50:	e8 17 10 00 00       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6f55:	48 89 d8             	mov    %rbx,%rax
    6f58:	48 89 c7             	mov    %rax,%rdi
    6f5b:	e8 90 d7 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return deviceExtensions;
    6f60:	90                   	nop
}
    6f61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f65:	48 83 c4 30          	add    $0x30,%rsp
    6f69:	5b                   	pop    %rbx
    6f6a:	41 5c                	pop    %r12
    6f6c:	5d                   	pop    %rbp
    6f6d:	c3                   	ret

0000000000006f6e <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    6f6e:	55                   	push   %rbp
    6f6f:	48 89 e5             	mov    %rsp,%rbp
    6f72:	53                   	push   %rbx
    6f73:	48 83 ec 38          	sub    $0x38,%rsp
    6f77:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    6f7b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6f7f:	48 89 c7             	mov    %rax,%rdi
    6f82:	e8 d9 d2 ff ff       	call   4260 <glfwGetRequiredInstanceExtensions@plt>
    6f87:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6f8b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6f8e:	89 c3                	mov    %eax,%ebx
    6f90:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6f94:	48 89 c7             	mov    %rax,%rdi
    6f97:	e8 90 10 00 00       	call   802c <_ZNSaIPKcEC1Ev>
    6f9c:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    6fa0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6fa4:	48 89 de             	mov    %rbx,%rsi
    6fa7:	48 89 c7             	mov    %rax,%rdi
    6faa:	e8 b5 10 00 00       	call   8064 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    6faf:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6fb3:	48 89 c7             	mov    %rax,%rdi
    6fb6:	e8 8d 10 00 00       	call   8048 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6fbb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6fc2:	eb 2e                	jmp    6ff2 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    6fc4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6fc7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6fce:	00 
    6fcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6fd3:	48 01 d0             	add    %rdx,%rax
    6fd6:	48 8b 18             	mov    (%rax),%rbx
    6fd9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6fdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6fe0:	48 89 d6             	mov    %rdx,%rsi
    6fe3:	48 89 c7             	mov    %rax,%rdi
    6fe6:	e8 ef 10 00 00       	call   80da <_ZNSt6vectorIPKcSaIS1_EEixEm>
    6feb:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6fee:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6ff2:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6ff5:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6ff8:	72 ca                	jb     6fc4 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    6ffa:	eb 1a                	jmp    7016 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6ffc:	48 89 c3             	mov    %rax,%rbx
    6fff:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7003:	48 89 c7             	mov    %rax,%rdi
    7006:	e8 3d 10 00 00       	call   8048 <_ZNSaIPKcED1Ev>
    700b:	48 89 d8             	mov    %rbx,%rax
    700e:	48 89 c7             	mov    %rax,%rdi
    7011:	e8 da d6 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    7016:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    701a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    701e:	c9                   	leave
    701f:	c3                   	ret

0000000000007020 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    7020:	55                   	push   %rbp
    7021:	48 89 e5             	mov    %rsp,%rbp
    7024:	53                   	push   %rbx
    7025:	48 83 ec 28          	sub    $0x28,%rsp
    7029:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    702d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7031:	be 00 00 00 00       	mov    $0x0,%esi
    7036:	48 89 c7             	mov    %rax,%rdi
    7039:	e8 22 d4 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    703e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7041:	89 c3                	mov    %eax,%ebx
    7043:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7047:	48 89 c7             	mov    %rax,%rdi
    704a:	e8 01 0d 00 00       	call   7d50 <_ZNSaI17VkLayerPropertiesEC1Ev>
    704f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7053:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7057:	48 89 de             	mov    %rbx,%rsi
    705a:	48 89 c7             	mov    %rax,%rdi
    705d:	e8 26 0d 00 00       	call   7d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    7062:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7066:	48 89 c7             	mov    %rax,%rdi
    7069:	e8 fe 0c 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    706e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7072:	48 89 c7             	mov    %rax,%rdi
    7075:	e8 c8 0d 00 00       	call   7e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    707a:	48 89 c2             	mov    %rax,%rdx
    707d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7081:	48 89 d6             	mov    %rdx,%rsi
    7084:	48 89 c7             	mov    %rax,%rdi
    7087:	e8 d4 d3 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    708c:	eb 34                	jmp    70c2 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    708e:	48 89 c3             	mov    %rax,%rbx
    7091:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7095:	48 89 c7             	mov    %rax,%rdi
    7098:	e8 cf 0c 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    709d:	48 89 d8             	mov    %rbx,%rax
    70a0:	48 89 c7             	mov    %rax,%rdi
    70a3:	e8 48 d6 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    70a8:	48 89 c3             	mov    %rax,%rbx
    70ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70af:	48 89 c7             	mov    %rax,%rdi
    70b2:	e8 47 0d 00 00       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    70b7:	48 89 d8             	mov    %rbx,%rax
    70ba:	48 89 c7             	mov    %rax,%rdi
    70bd:	e8 2e d6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    70c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70ca:	c9                   	leave
    70cb:	c3                   	ret

00000000000070cc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    70cc:	55                   	push   %rbp
    70cd:	48 89 e5             	mov    %rsp,%rbp
    70d0:	41 54                	push   %r12
    70d2:	53                   	push   %rbx
    70d3:	48 83 ec 20          	sub    $0x20,%rsp
    70d7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    70db:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    70df:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    70e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    70e7:	ba 00 00 00 00       	mov    $0x0,%edx
    70ec:	48 89 ce             	mov    %rcx,%rsi
    70ef:	48 89 c7             	mov    %rax,%rdi
    70f2:	e8 99 d0 ff ff       	call   4190 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    70f7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    70fa:	85 c0                	test   %eax,%eax
    70fc:	75 3b                	jne    7139 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    70fe:	bf 10 00 00 00       	mov    $0x10,%edi
    7103:	e8 68 d0 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7108:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    710b:	48 8d 05 ae 1e 01 00 	lea    0x11eae(%rip),%rax        # 18fc0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    7112:	48 89 c6             	mov    %rax,%rsi
    7115:	48 89 df             	mov    %rbx,%rdi
    7118:	e8 e3 cf ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    711d:	48 8b 05 84 0e 02 00 	mov    0x20e84(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7124:	48 89 c2             	mov    %rax,%rdx
    7127:	48 8d 05 12 0c 02 00 	lea    0x20c12(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    712e:	48 89 c6             	mov    %rax,%rsi
    7131:	48 89 df             	mov    %rbx,%rdi
    7134:	e8 57 d5 ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7139:	8b 45 e8             	mov    -0x18(%rbp),%eax
    713c:	89 c3                	mov    %eax,%ebx
    713e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7142:	48 89 c7             	mov    %rax,%rdi
    7145:	e8 fe 0f 00 00       	call   8148 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    714a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    714e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7152:	48 89 de             	mov    %rbx,%rsi
    7155:	48 89 c7             	mov    %rax,%rdi
    7158:	e8 23 10 00 00       	call   8180 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    715d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7161:	48 89 c7             	mov    %rax,%rdi
    7164:	e8 fb 0f 00 00       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7169:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    716d:	48 89 c7             	mov    %rax,%rdi
    7170:	e8 c5 10 00 00       	call   823a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    7175:	48 89 c2             	mov    %rax,%rdx
    7178:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    717c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7180:	48 89 ce             	mov    %rcx,%rsi
    7183:	48 89 c7             	mov    %rax,%rdi
    7186:	e8 05 d0 ff ff       	call   4190 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    718b:	85 c0                	test   %eax,%eax
    718d:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7190:	84 c0                	test   %al,%al
    7192:	0f 84 95 00 00 00    	je     722d <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    7198:	bf 10 00 00 00       	mov    $0x10,%edi
    719d:	e8 ce cf ff ff       	call   4170 <__cxa_allocate_exception@plt>
    71a2:	48 89 c3             	mov    %rax,%rbx
    71a5:	48 8d 05 4c 1e 01 00 	lea    0x11e4c(%rip),%rax        # 18ff8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    71ac:	48 89 c6             	mov    %rax,%rsi
    71af:	48 89 df             	mov    %rbx,%rdi
    71b2:	e8 49 cf ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    71b7:	48 8b 05 ea 0d 02 00 	mov    0x20dea(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    71be:	48 89 c2             	mov    %rax,%rdx
    71c1:	48 8d 05 78 0b 02 00 	lea    0x20b78(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    71c8:	48 89 c6             	mov    %rax,%rsi
    71cb:	48 89 df             	mov    %rbx,%rdi
    71ce:	e8 bd d4 ff ff       	call   4690 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    71d3:	49 89 c4             	mov    %rax,%r12
    71d6:	48 89 df             	mov    %rbx,%rdi
    71d9:	e8 62 d0 ff ff       	call   4240 <__cxa_free_exception@plt>
    71de:	4c 89 e0             	mov    %r12,%rax
    71e1:	48 89 c7             	mov    %rax,%rdi
    71e4:	e8 07 d5 ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    71e9:	48 89 c3             	mov    %rax,%rbx
    71ec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71f0:	48 89 c7             	mov    %rax,%rdi
    71f3:	e8 6c 0f 00 00       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    71f8:	48 89 d8             	mov    %rbx,%rax
    71fb:	48 89 c7             	mov    %rax,%rdi
    71fe:	e8 ed d4 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    7203:	49 89 c4             	mov    %rax,%r12
    7206:	48 89 df             	mov    %rbx,%rdi
    7209:	e8 32 d0 ff ff       	call   4240 <__cxa_free_exception@plt>
    720e:	4c 89 e3             	mov    %r12,%rbx
    7211:	eb 03                	jmp    7216 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    7213:	48 89 c3             	mov    %rax,%rbx
    7216:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    721a:	48 89 c7             	mov    %rax,%rdi
    721d:	e8 d4 0f 00 00       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7222:	48 89 d8             	mov    %rbx,%rax
    7225:	48 89 c7             	mov    %rax,%rdi
    7228:	e8 c3 d4 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return physicalDevices;
    722d:	90                   	nop
}
    722e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7232:	48 83 c4 20          	add    $0x20,%rsp
    7236:	5b                   	pop    %rbx
    7237:	41 5c                	pop    %r12
    7239:	5d                   	pop    %rbp
    723a:	c3                   	ret

000000000000723b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    723b:	55                   	push   %rbp
    723c:	48 89 e5             	mov    %rsp,%rbp
    723f:	48 83 ec 10          	sub    $0x10,%rsp
    7243:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7247:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    724b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    724f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7253:	48 89 d6             	mov    %rdx,%rsi
    7256:	48 89 c7             	mov    %rax,%rdi
    7259:	e8 b2 ce ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    725e:	90                   	nop
}
    725f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7263:	c9                   	leave
    7264:	c3                   	ret

0000000000007265 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    7265:	55                   	push   %rbp
    7266:	48 89 e5             	mov    %rsp,%rbp
    7269:	48 83 ec 20          	sub    $0x20,%rsp
    726d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7271:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7275:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    7279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    727d:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    7283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7287:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    728b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    728f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7293:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7297:	48 89 d6             	mov    %rdx,%rsi
    729a:	48 89 c7             	mov    %rax,%rdi
    729d:	e8 8e d0 ff ff       	call   4330 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    72a2:	90                   	nop
}
    72a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72a7:	c9                   	leave
    72a8:	c3                   	ret

00000000000072a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    72a9:	55                   	push   %rbp
    72aa:	48 89 e5             	mov    %rsp,%rbp
    72ad:	53                   	push   %rbx
    72ae:	48 83 ec 28          	sub    $0x28,%rsp
    72b2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    72b6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    72ba:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    72be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72c2:	ba 00 00 00 00       	mov    $0x0,%edx
    72c7:	48 89 ce             	mov    %rcx,%rsi
    72ca:	48 89 c7             	mov    %rax,%rdi
    72cd:	e8 7e cf ff ff       	call   4250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    72d2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    72d5:	89 c3                	mov    %eax,%ebx
    72d7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72db:	48 89 c7             	mov    %rax,%rdi
    72de:	e8 c9 0f 00 00       	call   82ac <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    72e3:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    72e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72eb:	48 89 de             	mov    %rbx,%rsi
    72ee:	48 89 c7             	mov    %rax,%rdi
    72f1:	e8 ee 0f 00 00       	call   82e4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    72f6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72fa:	48 89 c7             	mov    %rax,%rdi
    72fd:	e8 c6 0f 00 00       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    7302:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7306:	48 89 c7             	mov    %rax,%rdi
    7309:	e8 90 10 00 00       	call   839e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    730e:	48 89 c2             	mov    %rax,%rdx
    7311:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7315:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7319:	48 89 ce             	mov    %rcx,%rsi
    731c:	48 89 c7             	mov    %rax,%rdi
    731f:	e8 2c cf ff ff       	call   4250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    7324:	eb 34                	jmp    735a <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    7326:	48 89 c3             	mov    %rax,%rbx
    7329:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    732d:	48 89 c7             	mov    %rax,%rdi
    7330:	e8 93 0f 00 00       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7335:	48 89 d8             	mov    %rbx,%rax
    7338:	48 89 c7             	mov    %rax,%rdi
    733b:	e8 b0 d3 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    7340:	48 89 c3             	mov    %rax,%rbx
    7343:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7347:	48 89 c7             	mov    %rax,%rdi
    734a:	e8 0b 10 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    734f:	48 89 d8             	mov    %rbx,%rax
    7352:	48 89 c7             	mov    %rax,%rdi
    7355:	e8 96 d3 ff ff       	call   46f0 <_Unwind_Resume@plt>
    735a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    735e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7362:	c9                   	leave
    7363:	c3                   	ret

0000000000007364 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7364:	55                   	push   %rbp
    7365:	48 89 e5             	mov    %rsp,%rbp
    7368:	53                   	push   %rbx
    7369:	48 83 ec 68          	sub    $0x68,%rsp
    736d:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    7371:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7375:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7379:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    737d:	48 89 d6             	mov    %rdx,%rsi
    7380:	48 89 c7             	mov    %rax,%rdi
    7383:	e8 21 ff ff ff       	call   72a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    7388:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    738c:	48 89 c7             	mov    %rax,%rdi
    738f:	e8 86 10 00 00       	call   841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7394:	48 89 c3             	mov    %rax,%rbx
    7397:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    739b:	48 89 c7             	mov    %rax,%rdi
    739e:	e8 a5 10 00 00       	call   8448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    73a3:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    73a7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73ab:	48 89 de             	mov    %rbx,%rsi
    73ae:	48 89 c7             	mov    %rax,%rdi
    73b1:	e8 ca 10 00 00       	call   8480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    73b6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    73ba:	48 89 c7             	mov    %rax,%rdi
    73bd:	e8 a2 10 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    73c2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    73c9:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    73ca:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    73d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73d6:	48 89 c7             	mov    %rax,%rdi
    73d9:	e8 5c 11 00 00       	call   853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    73de:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    73e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73e6:	48 89 c7             	mov    %rax,%rdi
    73e9:	e8 72 11 00 00       	call   8560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    73ee:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    73f2:	eb 4e                	jmp    7442 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    73f4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    73f8:	48 89 c7             	mov    %rax,%rdi
    73fb:	e8 e4 11 00 00       	call   85e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7400:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    7404:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7408:	8b 00                	mov    (%rax),%eax
    740a:	83 e0 01             	and    $0x1,%eax
    740d:	85 c0                	test   %eax,%eax
    740f:	74 25                	je     7436 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    7411:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7415:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7419:	48 89 d6             	mov    %rdx,%rsi
    741c:	48 89 c7             	mov    %rax,%rdi
    741f:	e8 d2 11 00 00       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7424:	48 89 c2             	mov    %rax,%rdx
    7427:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    742b:	48 89 c6             	mov    %rax,%rsi
    742e:	48 89 d7             	mov    %rdx,%rdi
    7431:	e8 ea 11 00 00       	call   8620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7436:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    743a:	48 89 c7             	mov    %rax,%rdi
    743d:	e8 82 11 00 00       	call   85c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7442:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7446:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    744a:	48 89 d6             	mov    %rdx,%rsi
    744d:	48 89 c7             	mov    %rax,%rdi
    7450:	e8 34 11 00 00       	call   8589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7455:	84 c0                	test   %al,%al
    7457:	75 9b                	jne    73f4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    7459:	90                   	nop
}
    745a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    745e:	48 89 c7             	mov    %rax,%rdi
    7461:	e8 f4 0e 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    7466:	eb 26                	jmp    748e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    7468:	48 89 c3             	mov    %rax,%rbx
    746b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    746f:	48 89 c7             	mov    %rax,%rdi
    7472:	e8 ed 0f 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7477:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    747b:	48 89 c7             	mov    %rax,%rdi
    747e:	e8 d7 0e 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7483:	48 89 d8             	mov    %rbx,%rax
    7486:	48 89 c7             	mov    %rax,%rdi
    7489:	e8 62 d2 ff ff       	call   46f0 <_Unwind_Resume@plt>
    748e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7492:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7496:	c9                   	leave
    7497:	c3                   	ret

0000000000007498 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7498:	55                   	push   %rbp
    7499:	48 89 e5             	mov    %rsp,%rbp
    749c:	53                   	push   %rbx
    749d:	48 83 ec 68          	sub    $0x68,%rsp
    74a1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    74a5:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    74a9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74ad:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    74b1:	48 89 d6             	mov    %rdx,%rsi
    74b4:	48 89 c7             	mov    %rax,%rdi
    74b7:	e8 ed fd ff ff       	call   72a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    74bc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74c0:	48 89 c7             	mov    %rax,%rdi
    74c3:	e8 52 0f 00 00       	call   841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    74c8:	48 89 c3             	mov    %rax,%rbx
    74cb:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74cf:	48 89 c7             	mov    %rax,%rdi
    74d2:	e8 71 0f 00 00       	call   8448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    74d7:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    74db:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    74df:	48 89 de             	mov    %rbx,%rsi
    74e2:	48 89 c7             	mov    %rax,%rdi
    74e5:	e8 96 0f 00 00       	call   8480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    74ea:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74ee:	48 89 c7             	mov    %rax,%rdi
    74f1:	e8 6e 0f 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    74f6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    74fd:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    74fe:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7502:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7506:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    750a:	48 89 c7             	mov    %rax,%rdi
    750d:	e8 28 10 00 00       	call   853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7512:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7516:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    751a:	48 89 c7             	mov    %rax,%rdi
    751d:	e8 3e 10 00 00       	call   8560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7522:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7526:	eb 53                	jmp    757b <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    7528:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    752c:	48 89 c7             	mov    %rax,%rdi
    752f:	e8 b0 10 00 00       	call   85e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7534:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    7538:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    753c:	8b 00                	mov    (%rax),%eax
    753e:	83 e0 02             	and    $0x2,%eax
    7541:	85 c0                	test   %eax,%eax
    7543:	74 25                	je     756a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    7545:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7549:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    754d:	48 89 d6             	mov    %rdx,%rsi
    7550:	48 89 c7             	mov    %rax,%rdi
    7553:	e8 9e 10 00 00       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7558:	48 89 c2             	mov    %rax,%rdx
    755b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    755f:	48 89 c6             	mov    %rax,%rsi
    7562:	48 89 d7             	mov    %rdx,%rdi
    7565:	e8 b6 10 00 00       	call   8620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    756a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    756f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7573:	48 89 c7             	mov    %rax,%rdi
    7576:	e8 49 10 00 00       	call   85c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    757b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    757f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7583:	48 89 d6             	mov    %rdx,%rsi
    7586:	48 89 c7             	mov    %rax,%rdi
    7589:	e8 fb 0f 00 00       	call   8589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    758e:	84 c0                	test   %al,%al
    7590:	75 96                	jne    7528 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    7592:	90                   	nop
}
    7593:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7597:	48 89 c7             	mov    %rax,%rdi
    759a:	e8 bb 0d 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    759f:	eb 26                	jmp    75c7 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    75a1:	48 89 c3             	mov    %rax,%rbx
    75a4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    75a8:	48 89 c7             	mov    %rax,%rdi
    75ab:	e8 b4 0e 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    75b0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75b4:	48 89 c7             	mov    %rax,%rdi
    75b7:	e8 9e 0d 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    75bc:	48 89 d8             	mov    %rbx,%rax
    75bf:	48 89 c7             	mov    %rax,%rdi
    75c2:	e8 29 d1 ff ff       	call   46f0 <_Unwind_Resume@plt>
    75c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    75cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75cf:	c9                   	leave
    75d0:	c3                   	ret

00000000000075d1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    75d1:	55                   	push   %rbp
    75d2:	48 89 e5             	mov    %rsp,%rbp
    75d5:	53                   	push   %rbx
    75d6:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    75dd:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    75e1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    75e5:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    75ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75f0:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    75f4:	48 89 d6             	mov    %rdx,%rsi
    75f7:	48 89 c7             	mov    %rax,%rdi
    75fa:	e8 aa fc ff ff       	call   72a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    75ff:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7603:	48 89 c7             	mov    %rax,%rdi
    7606:	e8 0f 0e 00 00       	call   841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    760b:	48 89 c3             	mov    %rax,%rbx
    760e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7612:	48 89 c7             	mov    %rax,%rdi
    7615:	e8 2e 0e 00 00       	call   8448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    761a:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    761e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7622:	48 89 de             	mov    %rbx,%rsi
    7625:	48 89 c7             	mov    %rax,%rdi
    7628:	e8 53 0e 00 00       	call   8480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    762d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7631:	48 89 c7             	mov    %rax,%rdi
    7634:	e8 2b 0e 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    7639:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7640:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7644:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7648:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    764c:	48 89 c7             	mov    %rax,%rdi
    764f:	e8 e6 0e 00 00       	call   853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7654:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7658:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    765c:	48 89 c7             	mov    %rax,%rdi
    765f:	e8 fc 0e 00 00       	call   8560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7664:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7668:	eb 6c                	jmp    76d6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    766a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    766e:	48 89 c7             	mov    %rax,%rdi
    7671:	e8 6e 0f 00 00       	call   85e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7676:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    767a:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    7681:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    7685:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    768c:	8b 75 ec             	mov    -0x14(%rbp),%esi
    768f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7693:	48 89 c7             	mov    %rax,%rdi
    7696:	e8 65 cd ff ff       	call   4400 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    769b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    769e:	85 c0                	test   %eax,%eax
    76a0:	74 24                	je     76c6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    76a2:	8b 55 ec             	mov    -0x14(%rbp),%edx
    76a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    76a9:	48 89 d6             	mov    %rdx,%rsi
    76ac:	48 89 c7             	mov    %rax,%rdi
    76af:	e8 42 0f 00 00       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    76b4:	48 89 c2             	mov    %rax,%rdx
    76b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76bb:	48 89 c6             	mov    %rax,%rsi
    76be:	48 89 d7             	mov    %rdx,%rdi
    76c1:	e8 5a 0f 00 00       	call   8620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    76c6:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    76ca:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    76ce:	48 89 c7             	mov    %rax,%rdi
    76d1:	e8 ee 0e 00 00       	call   85c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    76d6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    76da:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    76de:	48 89 d6             	mov    %rdx,%rsi
    76e1:	48 89 c7             	mov    %rax,%rdi
    76e4:	e8 a0 0e 00 00       	call   8589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    76e9:	84 c0                	test   %al,%al
    76eb:	0f 85 79 ff ff ff    	jne    766a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    76f1:	90                   	nop
}
    76f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    76f6:	48 89 c7             	mov    %rax,%rdi
    76f9:	e8 5c 0c 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    76fe:	eb 37                	jmp    7737 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    7700:	48 89 c3             	mov    %rax,%rbx
    7703:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7707:	48 89 c7             	mov    %rax,%rdi
    770a:	e8 55 0d 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    770f:	eb 0f                	jmp    7720 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    7711:	48 89 c3             	mov    %rax,%rbx
    7714:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7718:	48 89 c7             	mov    %rax,%rdi
    771b:	e8 d6 0d 00 00       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7720:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7724:	48 89 c7             	mov    %rax,%rdi
    7727:	e8 2e 0c 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    772c:	48 89 d8             	mov    %rbx,%rax
    772f:	48 89 c7             	mov    %rax,%rdi
    7732:	e8 b9 cf ff ff       	call   46f0 <_Unwind_Resume@plt>
    7737:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    773b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    773f:	c9                   	leave
    7740:	c3                   	ret

0000000000007741 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    7741:	55                   	push   %rbp
    7742:	48 89 e5             	mov    %rsp,%rbp
    7745:	41 54                	push   %r12
    7747:	53                   	push   %rbx
    7748:	48 83 ec 20          	sub    $0x20,%rsp
    774c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7750:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7754:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    775c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7760:	0f 11 00             	movups %xmm0,(%rax)
    7763:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7767:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    776b:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7770:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7774:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7778:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    777c:	48 89 ce             	mov    %rcx,%rsi
    777f:	48 89 c7             	mov    %rax,%rdi
    7782:	e8 69 cb ff ff       	call   42f0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    7787:	85 c0                	test   %eax,%eax
    7789:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    778c:	84 c0                	test   %al,%al
    778e:	74 51                	je     77e1 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    7790:	bf 10 00 00 00       	mov    $0x10,%edi
    7795:	e8 d6 c9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    779a:	48 89 c3             	mov    %rax,%rbx
    779d:	48 8d 05 7c 18 01 00 	lea    0x1187c(%rip),%rax        # 19020 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    77a4:	48 89 c6             	mov    %rax,%rsi
    77a7:	48 89 df             	mov    %rbx,%rdi
    77aa:	e8 51 c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    77af:	48 8b 05 f2 07 02 00 	mov    0x207f2(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    77b6:	48 89 c2             	mov    %rax,%rdx
    77b9:	48 8d 05 80 05 02 00 	lea    0x20580(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77c0:	48 89 c6             	mov    %rax,%rsi
    77c3:	48 89 df             	mov    %rbx,%rdi
    77c6:	e8 c5 ce ff ff       	call   4690 <__cxa_throw@plt>
    77cb:	49 89 c4             	mov    %rax,%r12
    77ce:	48 89 df             	mov    %rbx,%rdi
    77d1:	e8 6a ca ff ff       	call   4240 <__cxa_free_exception@plt>
    77d6:	4c 89 e0             	mov    %r12,%rax
    77d9:	48 89 c7             	mov    %rax,%rdi
    77dc:	e8 0f cf ff ff       	call   46f0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    77e1:	90                   	nop
}
    77e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77e6:	48 83 c4 20          	add    $0x20,%rsp
    77ea:	5b                   	pop    %rbx
    77eb:	41 5c                	pop    %r12
    77ed:	5d                   	pop    %rbp
    77ee:	c3                   	ret

00000000000077ef <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    77ef:	55                   	push   %rbp
    77f0:	48 89 e5             	mov    %rsp,%rbp
    77f3:	41 54                	push   %r12
    77f5:	53                   	push   %rbx
    77f6:	48 83 ec 30          	sub    $0x30,%rsp
    77fa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    77fe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7802:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7806:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    780a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    780e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7812:	b9 00 00 00 00       	mov    $0x0,%ecx
    7817:	48 89 c7             	mov    %rax,%rdi
    781a:	e8 f1 cc ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    781f:	85 c0                	test   %eax,%eax
    7821:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7824:	84 c0                	test   %al,%al
    7826:	74 3b                	je     7863 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7828:	bf 10 00 00 00       	mov    $0x10,%edi
    782d:	e8 3e c9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7832:	48 89 c3             	mov    %rax,%rbx
    7835:	48 8d 05 0c 18 01 00 	lea    0x1180c(%rip),%rax        # 19048 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    783c:	48 89 c6             	mov    %rax,%rsi
    783f:	48 89 df             	mov    %rbx,%rdi
    7842:	e8 b9 c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7847:	48 8b 05 5a 07 02 00 	mov    0x2075a(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    784e:	48 89 c2             	mov    %rax,%rdx
    7851:	48 8d 05 e8 04 02 00 	lea    0x204e8(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7858:	48 89 c6             	mov    %rax,%rsi
    785b:	48 89 df             	mov    %rbx,%rdi
    785e:	e8 2d ce ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7863:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7866:	89 c3                	mov    %eax,%ebx
    7868:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    786c:	48 89 c7             	mov    %rax,%rdi
    786f:	e8 84 0e 00 00       	call   86f8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    7874:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7878:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    787c:	48 89 de             	mov    %rbx,%rsi
    787f:	48 89 c7             	mov    %rax,%rdi
    7882:	e8 a9 0e 00 00       	call   8730 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    7887:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    788b:	48 89 c7             	mov    %rax,%rdi
    788e:	e8 81 0e 00 00       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7893:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7897:	48 89 c7             	mov    %rax,%rdi
    789a:	e8 4b 0f 00 00       	call   87ea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    789f:	48 89 c1             	mov    %rax,%rcx
    78a2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    78a6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    78aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78ae:	48 89 c7             	mov    %rax,%rdi
    78b1:	e8 5a cc ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    78b6:	85 c0                	test   %eax,%eax
    78b8:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    78bb:	84 c0                	test   %al,%al
    78bd:	0f 84 95 00 00 00    	je     7958 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    78c3:	bf 10 00 00 00       	mov    $0x10,%edi
    78c8:	e8 a3 c8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    78cd:	48 89 c3             	mov    %rax,%rbx
    78d0:	48 8d 05 71 17 01 00 	lea    0x11771(%rip),%rax        # 19048 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    78d7:	48 89 c6             	mov    %rax,%rsi
    78da:	48 89 df             	mov    %rbx,%rdi
    78dd:	e8 1e c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    78e2:	48 8b 05 bf 06 02 00 	mov    0x206bf(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    78e9:	48 89 c2             	mov    %rax,%rdx
    78ec:	48 8d 05 4d 04 02 00 	lea    0x2044d(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    78f3:	48 89 c6             	mov    %rax,%rsi
    78f6:	48 89 df             	mov    %rbx,%rdi
    78f9:	e8 92 cd ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    78fe:	49 89 c4             	mov    %rax,%r12
    7901:	48 89 df             	mov    %rbx,%rdi
    7904:	e8 37 c9 ff ff       	call   4240 <__cxa_free_exception@plt>
    7909:	4c 89 e0             	mov    %r12,%rax
    790c:	48 89 c7             	mov    %rax,%rdi
    790f:	e8 dc cd ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7914:	48 89 c3             	mov    %rax,%rbx
    7917:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    791b:	48 89 c7             	mov    %rax,%rdi
    791e:	e8 f1 0d 00 00       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7923:	48 89 d8             	mov    %rbx,%rax
    7926:	48 89 c7             	mov    %rax,%rdi
    7929:	e8 c2 cd ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    792e:	49 89 c4             	mov    %rax,%r12
    7931:	48 89 df             	mov    %rbx,%rdi
    7934:	e8 07 c9 ff ff       	call   4240 <__cxa_free_exception@plt>
    7939:	4c 89 e3             	mov    %r12,%rbx
    793c:	eb 03                	jmp    7941 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    793e:	48 89 c3             	mov    %rax,%rbx
    7941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7945:	48 89 c7             	mov    %rax,%rdi
    7948:	e8 59 0e 00 00       	call   87a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    794d:	48 89 d8             	mov    %rbx,%rax
    7950:	48 89 c7             	mov    %rax,%rdi
    7953:	e8 98 cd ff ff       	call   46f0 <_Unwind_Resume@plt>
  return surfaceFormats;
    7958:	90                   	nop
}
    7959:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    795d:	48 83 c4 30          	add    $0x30,%rsp
    7961:	5b                   	pop    %rbx
    7962:	41 5c                	pop    %r12
    7964:	5d                   	pop    %rbp
    7965:	c3                   	ret

0000000000007966 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7966:	55                   	push   %rbp
    7967:	48 89 e5             	mov    %rsp,%rbp
    796a:	41 54                	push   %r12
    796c:	53                   	push   %rbx
    796d:	48 83 ec 30          	sub    $0x30,%rsp
    7971:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7975:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7979:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    797d:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7981:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7985:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7989:	b9 00 00 00 00       	mov    $0x0,%ecx
    798e:	48 89 c7             	mov    %rax,%rdi
    7991:	e8 8a cb ff ff       	call   4520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7996:	85 c0                	test   %eax,%eax
    7998:	0f 95 c0             	setne  %al
    799b:	84 c0                	test   %al,%al
    799d:	74 3b                	je     79da <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    799f:	bf 10 00 00 00       	mov    $0x10,%edi
    79a4:	e8 c7 c7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    79a9:	48 89 c3             	mov    %rax,%rbx
    79ac:	48 8d 05 bd 16 01 00 	lea    0x116bd(%rip),%rax        # 19070 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    79b3:	48 89 c6             	mov    %rax,%rsi
    79b6:	48 89 df             	mov    %rbx,%rdi
    79b9:	e8 42 c7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    79be:	48 8b 05 e3 05 02 00 	mov    0x205e3(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    79c5:	48 89 c2             	mov    %rax,%rdx
    79c8:	48 8d 05 71 03 02 00 	lea    0x20371(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    79cf:	48 89 c6             	mov    %rax,%rsi
    79d2:	48 89 df             	mov    %rbx,%rdi
    79d5:	e8 b6 cc ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    79da:	8b 45 e8             	mov    -0x18(%rbp),%eax
    79dd:	89 c3                	mov    %eax,%ebx
    79df:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79e3:	48 89 c7             	mov    %rax,%rdi
    79e6:	e8 71 0e 00 00       	call   885c <_ZNSaI16VkPresentModeKHREC1Ev>
    79eb:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    79ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79f3:	48 89 de             	mov    %rbx,%rsi
    79f6:	48 89 c7             	mov    %rax,%rdi
    79f9:	e8 96 0e 00 00       	call   8894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    79fe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a02:	48 89 c7             	mov    %rax,%rdi
    7a05:	e8 6e 0e 00 00       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7a0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a0e:	48 89 c7             	mov    %rax,%rdi
    7a11:	e8 38 0f 00 00       	call   894e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7a16:	48 89 c1             	mov    %rax,%rcx
    7a19:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a1d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7a21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 f3 ca ff ff       	call   4520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7a2d:	85 c0                	test   %eax,%eax
    7a2f:	0f 95 c0             	setne  %al
    7a32:	84 c0                	test   %al,%al
    7a34:	0f 84 95 00 00 00    	je     7acf <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7a3a:	bf 10 00 00 00       	mov    $0x10,%edi
    7a3f:	e8 2c c7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7a44:	48 89 c3             	mov    %rax,%rbx
    7a47:	48 8d 05 22 16 01 00 	lea    0x11622(%rip),%rax        # 19070 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7a4e:	48 89 c6             	mov    %rax,%rsi
    7a51:	48 89 df             	mov    %rbx,%rdi
    7a54:	e8 a7 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7a59:	48 8b 05 48 05 02 00 	mov    0x20548(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a60:	48 89 c2             	mov    %rax,%rdx
    7a63:	48 8d 05 d6 02 02 00 	lea    0x202d6(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a6a:	48 89 c6             	mov    %rax,%rsi
    7a6d:	48 89 df             	mov    %rbx,%rdi
    7a70:	e8 1b cc ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7a75:	49 89 c4             	mov    %rax,%r12
    7a78:	48 89 df             	mov    %rbx,%rdi
    7a7b:	e8 c0 c7 ff ff       	call   4240 <__cxa_free_exception@plt>
    7a80:	4c 89 e0             	mov    %r12,%rax
    7a83:	48 89 c7             	mov    %rax,%rdi
    7a86:	e8 65 cc ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7a8b:	48 89 c3             	mov    %rax,%rbx
    7a8e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a92:	48 89 c7             	mov    %rax,%rdi
    7a95:	e8 de 0d 00 00       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
    7a9a:	48 89 d8             	mov    %rbx,%rax
    7a9d:	48 89 c7             	mov    %rax,%rdi
    7aa0:	e8 4b cc ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7aa5:	49 89 c4             	mov    %rax,%r12
    7aa8:	48 89 df             	mov    %rbx,%rdi
    7aab:	e8 90 c7 ff ff       	call   4240 <__cxa_free_exception@plt>
    7ab0:	4c 89 e3             	mov    %r12,%rbx
    7ab3:	eb 03                	jmp    7ab8 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    7ab5:	48 89 c3             	mov    %rax,%rbx
    7ab8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7abc:	48 89 c7             	mov    %rax,%rdi
    7abf:	e8 46 0e 00 00       	call   890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7ac4:	48 89 d8             	mov    %rbx,%rax
    7ac7:	48 89 c7             	mov    %rax,%rdi
    7aca:	e8 21 cc ff ff       	call   46f0 <_Unwind_Resume@plt>
  return presentModes;
    7acf:	90                   	nop
}
    7ad0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ad4:	48 83 c4 30          	add    $0x30,%rsp
    7ad8:	5b                   	pop    %rbx
    7ad9:	41 5c                	pop    %r12
    7adb:	5d                   	pop    %rbp
    7adc:	c3                   	ret

0000000000007add <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    7add:	55                   	push   %rbp
    7ade:	48 89 e5             	mov    %rsp,%rbp
    7ae1:	41 54                	push   %r12
    7ae3:	53                   	push   %rbx
    7ae4:	48 83 ec 30          	sub    $0x30,%rsp
    7ae8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7aec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7af0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7af4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7af8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7afc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b00:	b9 00 00 00 00       	mov    $0x0,%ecx
    7b05:	48 89 c7             	mov    %rax,%rdi
    7b08:	e8 b3 c6 ff ff       	call   41c0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7b0d:	85 c0                	test   %eax,%eax
    7b0f:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7b12:	84 c0                	test   %al,%al
    7b14:	74 3b                	je     7b51 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7b16:	bf 10 00 00 00       	mov    $0x10,%edi
    7b1b:	e8 50 c6 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7b20:	48 89 c3             	mov    %rax,%rbx
    7b23:	48 8d 05 76 15 01 00 	lea    0x11576(%rip),%rax        # 190a0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7b2a:	48 89 c6             	mov    %rax,%rsi
    7b2d:	48 89 df             	mov    %rbx,%rdi
    7b30:	e8 cb c5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7b35:	48 8b 05 6c 04 02 00 	mov    0x2046c(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b3c:	48 89 c2             	mov    %rax,%rdx
    7b3f:	48 8d 05 fa 01 02 00 	lea    0x201fa(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b46:	48 89 c6             	mov    %rax,%rsi
    7b49:	48 89 df             	mov    %rbx,%rdi
    7b4c:	e8 3f cb ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7b51:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7b54:	89 c3                	mov    %eax,%ebx
    7b56:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b5a:	48 89 c7             	mov    %rax,%rdi
    7b5d:	e8 5e 0e 00 00       	call   89c0 <_ZNSaIP9VkImage_TEC1Ev>
    7b62:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7b66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b6a:	48 89 de             	mov    %rbx,%rsi
    7b6d:	48 89 c7             	mov    %rax,%rdi
    7b70:	e8 83 0e 00 00       	call   89f8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7b75:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b79:	48 89 c7             	mov    %rax,%rdi
    7b7c:	e8 5b 0e 00 00       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7b81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b85:	48 89 c7             	mov    %rax,%rdi
    7b88:	e8 25 0f 00 00       	call   8ab2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7b8d:	48 89 c1             	mov    %rax,%rcx
    7b90:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7b94:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7b98:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b9c:	48 89 c7             	mov    %rax,%rdi
    7b9f:	e8 1c c6 ff ff       	call   41c0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7ba4:	85 c0                	test   %eax,%eax
    7ba6:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7ba9:	84 c0                	test   %al,%al
    7bab:	0f 84 95 00 00 00    	je     7c46 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7bb1:	bf 10 00 00 00       	mov    $0x10,%edi
    7bb6:	e8 b5 c5 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7bbb:	48 89 c3             	mov    %rax,%rbx
    7bbe:	48 8d 05 db 14 01 00 	lea    0x114db(%rip),%rax        # 190a0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7bc5:	48 89 c6             	mov    %rax,%rsi
    7bc8:	48 89 df             	mov    %rbx,%rdi
    7bcb:	e8 30 c5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7bd0:	48 8b 05 d1 03 02 00 	mov    0x203d1(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7bd7:	48 89 c2             	mov    %rax,%rdx
    7bda:	48 8d 05 5f 01 02 00 	lea    0x2015f(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7be1:	48 89 c6             	mov    %rax,%rsi
    7be4:	48 89 df             	mov    %rbx,%rdi
    7be7:	e8 a4 ca ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7bec:	49 89 c4             	mov    %rax,%r12
    7bef:	48 89 df             	mov    %rbx,%rdi
    7bf2:	e8 49 c6 ff ff       	call   4240 <__cxa_free_exception@plt>
    7bf7:	4c 89 e0             	mov    %r12,%rax
    7bfa:	48 89 c7             	mov    %rax,%rdi
    7bfd:	e8 ee ca ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7c02:	48 89 c3             	mov    %rax,%rbx
    7c05:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c09:	48 89 c7             	mov    %rax,%rdi
    7c0c:	e8 cb 0d 00 00       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
    7c11:	48 89 d8             	mov    %rbx,%rax
    7c14:	48 89 c7             	mov    %rax,%rdi
    7c17:	e8 d4 ca ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7c1c:	49 89 c4             	mov    %rax,%r12
    7c1f:	48 89 df             	mov    %rbx,%rdi
    7c22:	e8 19 c6 ff ff       	call   4240 <__cxa_free_exception@plt>
    7c27:	4c 89 e3             	mov    %r12,%rbx
    7c2a:	eb 03                	jmp    7c2f <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7c2c:	48 89 c3             	mov    %rax,%rbx
    7c2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c33:	48 89 c7             	mov    %rax,%rdi
    7c36:	e8 33 0e 00 00       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7c3b:	48 89 d8             	mov    %rbx,%rax
    7c3e:	48 89 c7             	mov    %rax,%rdi
    7c41:	e8 aa ca ff ff       	call   46f0 <_Unwind_Resume@plt>
  return swapchainImages;
    7c46:	90                   	nop
}
    7c47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c4b:	48 83 c4 30          	add    $0x30,%rsp
    7c4f:	5b                   	pop    %rbx
    7c50:	41 5c                	pop    %r12
    7c52:	5d                   	pop    %rbp
    7c53:	c3                   	ret

0000000000007c54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7c54:	55                   	push   %rbp
    7c55:	48 89 e5             	mov    %rsp,%rbp
    7c58:	48 83 ec 10          	sub    $0x10,%rsp
    7c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c64:	48 89 c7             	mov    %rax,%rdi
    7c67:	e8 00 01 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    7c6c:	90                   	nop
    7c6d:	c9                   	leave
    7c6e:	c3                   	ret
    7c6f:	90                   	nop

0000000000007c70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7c70:	55                   	push   %rbp
    7c71:	48 89 e5             	mov    %rsp,%rbp
    7c74:	48 83 ec 10          	sub    $0x10,%rsp
    7c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c80:	48 89 c7             	mov    %rax,%rdi
    7c83:	e8 52 02 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    7c88:	90                   	nop
    7c89:	c9                   	leave
    7c8a:	c3                   	ret
    7c8b:	90                   	nop

0000000000007c8c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7c8c:	55                   	push   %rbp
    7c8d:	48 89 e5             	mov    %rsp,%rbp
    7c90:	48 83 ec 10          	sub    $0x10,%rsp
    7c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c9c:	48 89 c7             	mov    %rax,%rdi
    7c9f:	e8 a4 03 00 00       	call   8048 <_ZNSaIPKcED1Ev>
    7ca4:	90                   	nop
    7ca5:	c9                   	leave
    7ca6:	c3                   	ret
    7ca7:	90                   	nop

0000000000007ca8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    7ca8:	55                   	push   %rbp
    7ca9:	48 89 e5             	mov    %rsp,%rbp
    7cac:	48 83 ec 10          	sub    $0x10,%rsp
    7cb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cb8:	48 89 c7             	mov    %rax,%rdi
    7cbb:	e8 a4 04 00 00       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7cc0:	90                   	nop
    7cc1:	c9                   	leave
    7cc2:	c3                   	ret
    7cc3:	90                   	nop

0000000000007cc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7cc4:	55                   	push   %rbp
    7cc5:	48 89 e5             	mov    %rsp,%rbp
    7cc8:	48 83 ec 10          	sub    $0x10,%rsp
    7ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cd4:	48 89 c7             	mov    %rax,%rdi
    7cd7:	e8 ec 05 00 00       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7cdc:	90                   	nop
    7cdd:	c9                   	leave
    7cde:	c3                   	ret
    7cdf:	90                   	nop

0000000000007ce0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7ce0:	55                   	push   %rbp
    7ce1:	48 89 e5             	mov    %rsp,%rbp
    7ce4:	48 83 ec 10          	sub    $0x10,%rsp
    7ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cf0:	48 89 c7             	mov    %rax,%rdi
    7cf3:	e8 6c 07 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7cf8:	90                   	nop
    7cf9:	c9                   	leave
    7cfa:	c3                   	ret
    7cfb:	90                   	nop

0000000000007cfc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7cfc:	55                   	push   %rbp
    7cfd:	48 89 e5             	mov    %rsp,%rbp
    7d00:	48 83 ec 10          	sub    $0x10,%rsp
    7d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d0c:	48 89 c7             	mov    %rax,%rdi
    7d0f:	e8 00 0a 00 00       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7d14:	90                   	nop
    7d15:	c9                   	leave
    7d16:	c3                   	ret
    7d17:	90                   	nop

0000000000007d18 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7d18:	55                   	push   %rbp
    7d19:	48 89 e5             	mov    %rsp,%rbp
    7d1c:	48 83 ec 10          	sub    $0x10,%rsp
    7d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d28:	48 89 c7             	mov    %rax,%rdi
    7d2b:	e8 48 0b 00 00       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
    7d30:	90                   	nop
    7d31:	c9                   	leave
    7d32:	c3                   	ret
    7d33:	90                   	nop

0000000000007d34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7d34:	55                   	push   %rbp
    7d35:	48 89 e5             	mov    %rsp,%rbp
    7d38:	48 83 ec 10          	sub    $0x10,%rsp
    7d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d44:	48 89 c7             	mov    %rax,%rdi
    7d47:	e8 90 0c 00 00       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
    7d4c:	90                   	nop
    7d4d:	c9                   	leave
    7d4e:	c3                   	ret
    7d4f:	90                   	nop

0000000000007d50 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	48 83 ec 10          	sub    $0x10,%rsp
    7d58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d60:	48 89 c7             	mov    %rax,%rdi
    7d63:	e8 bc 0d 00 00       	call   8b24 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7d68:	90                   	nop
    7d69:	c9                   	leave
    7d6a:	c3                   	ret
    7d6b:	90                   	nop

0000000000007d6c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7d6c:	55                   	push   %rbp
    7d6d:	48 89 e5             	mov    %rsp,%rbp
    7d70:	48 83 ec 10          	sub    $0x10,%rsp
    7d74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7c:	48 89 c7             	mov    %rax,%rdi
    7d7f:	e8 ac 0d 00 00       	call   8b30 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7d84:	90                   	nop
    7d85:	c9                   	leave
    7d86:	c3                   	ret
    7d87:	90                   	nop

0000000000007d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7d88:	55                   	push   %rbp
    7d89:	48 89 e5             	mov    %rsp,%rbp
    7d8c:	53                   	push   %rbx
    7d8d:	48 83 ec 28          	sub    $0x28,%rsp
    7d91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7d95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7d99:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7d9d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7da1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7da5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7da9:	48 89 d6             	mov    %rdx,%rsi
    7dac:	48 89 c7             	mov    %rax,%rdi
    7daf:	e8 87 0d 00 00       	call   8b3b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7db4:	48 89 c1             	mov    %rax,%rcx
    7db7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dbb:	48 89 c2             	mov    %rax,%rdx
    7dbe:	48 89 ce             	mov    %rcx,%rsi
    7dc1:	48 89 df             	mov    %rbx,%rdi
    7dc4:	e8 d3 0d 00 00       	call   8b9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7dc9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7dcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dd1:	48 89 d6             	mov    %rdx,%rsi
    7dd4:	48 89 c7             	mov    %rax,%rdi
    7dd7:	e8 1e 0e 00 00       	call   8bfa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7ddc:	eb 1a                	jmp    7df8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7dde:	48 89 c3             	mov    %rax,%rbx
    7de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7de5:	48 89 c7             	mov    %rax,%rdi
    7de8:	e8 79 00 00 00       	call   7e66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7ded:	48 89 d8             	mov    %rbx,%rax
    7df0:	48 89 c7             	mov    %rax,%rdi
    7df3:	e8 f8 c8 ff ff       	call   46f0 <_Unwind_Resume@plt>
    7df8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7dfc:	c9                   	leave
    7dfd:	c3                   	ret

0000000000007dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7dfe:	55                   	push   %rbp
    7dff:	48 89 e5             	mov    %rsp,%rbp
    7e02:	48 83 ec 10          	sub    $0x10,%rsp
    7e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e0e:	48 89 c7             	mov    %rax,%rdi
    7e11:	e8 24 0e 00 00       	call   8c3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7e16:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7e19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e1d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e25:	48 8b 00             	mov    (%rax),%rax
    7e28:	48 89 ce             	mov    %rcx,%rsi
    7e2b:	48 89 c7             	mov    %rax,%rdi
    7e2e:	e8 15 0e 00 00       	call   8c48 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7e33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e37:	48 89 c7             	mov    %rax,%rdi
    7e3a:	e8 27 00 00 00       	call   7e66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7e3f:	90                   	nop
    7e40:	c9                   	leave
    7e41:	c3                   	ret

0000000000007e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7e42:	55                   	push   %rbp
    7e43:	48 89 e5             	mov    %rsp,%rbp
    7e46:	48 83 ec 10          	sub    $0x10,%rsp
    7e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e52:	48 8b 10             	mov    (%rax),%rdx
    7e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e59:	48 89 d6             	mov    %rdx,%rsi
    7e5c:	48 89 c7             	mov    %rax,%rdi
    7e5f:	e8 0e 0e 00 00       	call   8c72 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7e64:	c9                   	leave
    7e65:	c3                   	ret

0000000000007e66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7e66:	55                   	push   %rbp
    7e67:	48 89 e5             	mov    %rsp,%rbp
    7e6a:	48 83 ec 10          	sub    $0x10,%rsp
    7e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e76:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e7e:	48 8b 00             	mov    (%rax),%rax
    7e81:	48 29 c2             	sub    %rax,%rdx
    7e84:	48 c1 fa 03          	sar    $0x3,%rdx
    7e88:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7e8f:	fc c0 0f 
    7e92:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7e96:	48 89 c2             	mov    %rax,%rdx
    7e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e9d:	48 8b 08             	mov    (%rax),%rcx
    7ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea4:	48 89 ce             	mov    %rcx,%rsi
    7ea7:	48 89 c7             	mov    %rax,%rdi
    7eaa:	e8 fb 0d 00 00       	call   8caa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb3:	48 89 c7             	mov    %rax,%rdi
    7eb6:	e8 99 fd ff ff       	call   7c54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    7ebb:	90                   	nop
    7ebc:	c9                   	leave
    7ebd:	c3                   	ret

0000000000007ebe <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7ebe:	55                   	push   %rbp
    7ebf:	48 89 e5             	mov    %rsp,%rbp
    7ec2:	48 83 ec 10          	sub    $0x10,%rsp
    7ec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ece:	48 89 c7             	mov    %rax,%rdi
    7ed1:	e8 0a 0e 00 00       	call   8ce0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    7ed6:	90                   	nop
    7ed7:	c9                   	leave
    7ed8:	c3                   	ret
    7ed9:	90                   	nop

0000000000007eda <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7eda:	55                   	push   %rbp
    7edb:	48 89 e5             	mov    %rsp,%rbp
    7ede:	48 83 ec 10          	sub    $0x10,%rsp
    7ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eea:	48 89 c7             	mov    %rax,%rdi
    7eed:	e8 fa 0d 00 00       	call   8cec <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    7ef2:	90                   	nop
    7ef3:	c9                   	leave
    7ef4:	c3                   	ret
    7ef5:	90                   	nop

0000000000007ef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ef6:	55                   	push   %rbp
    7ef7:	48 89 e5             	mov    %rsp,%rbp
    7efa:	53                   	push   %rbx
    7efb:	48 83 ec 28          	sub    $0x28,%rsp
    7eff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7f07:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7f0b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7f0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f17:	48 89 d6             	mov    %rdx,%rsi
    7f1a:	48 89 c7             	mov    %rax,%rdi
    7f1d:	e8 d5 0d 00 00       	call   8cf7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7f22:	48 89 c1             	mov    %rax,%rcx
    7f25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f29:	48 89 c2             	mov    %rax,%rdx
    7f2c:	48 89 ce             	mov    %rcx,%rsi
    7f2f:	48 89 df             	mov    %rbx,%rdi
    7f32:	e8 21 0e 00 00       	call   8d58 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7f37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f3f:	48 89 d6             	mov    %rdx,%rsi
    7f42:	48 89 c7             	mov    %rax,%rdi
    7f45:	e8 6c 0e 00 00       	call   8db6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    7f4a:	eb 1a                	jmp    7f66 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7f4c:	48 89 c3             	mov    %rax,%rbx
    7f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f53:	48 89 c7             	mov    %rax,%rdi
    7f56:	e8 79 00 00 00       	call   7fd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7f5b:	48 89 d8             	mov    %rbx,%rax
    7f5e:	48 89 c7             	mov    %rax,%rdi
    7f61:	e8 8a c7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    7f66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f6a:	c9                   	leave
    7f6b:	c3                   	ret

0000000000007f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7f6c:	55                   	push   %rbp
    7f6d:	48 89 e5             	mov    %rsp,%rbp
    7f70:	48 83 ec 10          	sub    $0x10,%rsp
    7f74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f7c:	48 89 c7             	mov    %rax,%rdi
    7f7f:	e8 72 0e 00 00       	call   8df6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7f84:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f93:	48 8b 00             	mov    (%rax),%rax
    7f96:	48 89 ce             	mov    %rcx,%rsi
    7f99:	48 89 c7             	mov    %rax,%rdi
    7f9c:	e8 63 0e 00 00       	call   8e04 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa5:	48 89 c7             	mov    %rax,%rdi
    7fa8:	e8 27 00 00 00       	call   7fd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7fad:	90                   	nop
    7fae:	c9                   	leave
    7faf:	c3                   	ret

0000000000007fb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7fb0:	55                   	push   %rbp
    7fb1:	48 89 e5             	mov    %rsp,%rbp
    7fb4:	48 83 ec 10          	sub    $0x10,%rsp
    7fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc0:	48 8b 10             	mov    (%rax),%rdx
    7fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc7:	48 89 d6             	mov    %rdx,%rsi
    7fca:	48 89 c7             	mov    %rax,%rdi
    7fcd:	e8 5c 0e 00 00       	call   8e2e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7fd2:	c9                   	leave
    7fd3:	c3                   	ret

0000000000007fd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7fd4:	55                   	push   %rbp
    7fd5:	48 89 e5             	mov    %rsp,%rbp
    7fd8:	48 83 ec 10          	sub    $0x10,%rsp
    7fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fec:	48 8b 00             	mov    (%rax),%rax
    7fef:	48 29 c2             	sub    %rax,%rdx
    7ff2:	48 c1 fa 02          	sar    $0x2,%rdx
    7ff6:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7ffd:	fc c0 0f 
    8000:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8004:	48 89 c2             	mov    %rax,%rdx
    8007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800b:	48 8b 08             	mov    (%rax),%rcx
    800e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8012:	48 89 ce             	mov    %rcx,%rsi
    8015:	48 89 c7             	mov    %rax,%rdi
    8018:	e8 49 0e 00 00       	call   8e66 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    801d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8021:	48 89 c7             	mov    %rax,%rdi
    8024:	e8 47 fc ff ff       	call   7c70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8029:	90                   	nop
    802a:	c9                   	leave
    802b:	c3                   	ret

000000000000802c <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    802c:	55                   	push   %rbp
    802d:	48 89 e5             	mov    %rsp,%rbp
    8030:	48 83 ec 10          	sub    $0x10,%rsp
    8034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    803c:	48 89 c7             	mov    %rax,%rdi
    803f:	e8 58 0e 00 00       	call   8e9c <_ZNSt15__new_allocatorIPKcEC1Ev>
    8044:	90                   	nop
    8045:	c9                   	leave
    8046:	c3                   	ret
    8047:	90                   	nop

0000000000008048 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8048:	55                   	push   %rbp
    8049:	48 89 e5             	mov    %rsp,%rbp
    804c:	48 83 ec 10          	sub    $0x10,%rsp
    8050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8058:	48 89 c7             	mov    %rax,%rdi
    805b:	e8 48 0e 00 00       	call   8ea8 <_ZNSt15__new_allocatorIPKcED1Ev>
    8060:	90                   	nop
    8061:	c9                   	leave
    8062:	c3                   	ret
    8063:	90                   	nop

0000000000008064 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8064:	55                   	push   %rbp
    8065:	48 89 e5             	mov    %rsp,%rbp
    8068:	53                   	push   %rbx
    8069:	48 83 ec 28          	sub    $0x28,%rsp
    806d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8071:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8075:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8079:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    807d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8081:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8085:	48 89 d6             	mov    %rdx,%rsi
    8088:	48 89 c7             	mov    %rax,%rdi
    808b:	e8 23 0e 00 00       	call   8eb3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8090:	48 89 c1             	mov    %rax,%rcx
    8093:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8097:	48 89 c2             	mov    %rax,%rdx
    809a:	48 89 ce             	mov    %rcx,%rsi
    809d:	48 89 df             	mov    %rbx,%rdi
    80a0:	e8 6f 0e 00 00       	call   8f14 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    80a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    80a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80ad:	48 89 d6             	mov    %rdx,%rsi
    80b0:	48 89 c7             	mov    %rax,%rdi
    80b3:	e8 ba 0e 00 00       	call   8f72 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    80b8:	eb 1a                	jmp    80d4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    80ba:	48 89 c3             	mov    %rax,%rbx
    80bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80c1:	48 89 c7             	mov    %rax,%rdi
    80c4:	e8 31 00 00 00       	call   80fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    80c9:	48 89 d8             	mov    %rbx,%rax
    80cc:	48 89 c7             	mov    %rax,%rdi
    80cf:	e8 1c c6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    80d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    80d8:	c9                   	leave
    80d9:	c3                   	ret

00000000000080da <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    80da:	55                   	push   %rbp
    80db:	48 89 e5             	mov    %rsp,%rbp
    80de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    80e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ea:	48 8b 00             	mov    (%rax),%rax
    80ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    80f1:	48 c1 e2 03          	shl    $0x3,%rdx
    80f5:	48 01 d0             	add    %rdx,%rax
      }
    80f8:	5d                   	pop    %rbp
    80f9:	c3                   	ret

00000000000080fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    80fa:	55                   	push   %rbp
    80fb:	48 89 e5             	mov    %rsp,%rbp
    80fe:	48 83 ec 10          	sub    $0x10,%rsp
    8102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    810a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    810e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8112:	48 8b 00             	mov    (%rax),%rax
    8115:	48 29 c2             	sub    %rax,%rdx
    8118:	48 89 d0             	mov    %rdx,%rax
    811b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    811f:	48 89 c2             	mov    %rax,%rdx
    8122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8126:	48 8b 08             	mov    (%rax),%rcx
    8129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    812d:	48 89 ce             	mov    %rcx,%rsi
    8130:	48 89 c7             	mov    %rax,%rdi
    8133:	e8 ae 0e 00 00       	call   8fe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    8138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    813c:	48 89 c7             	mov    %rax,%rdi
    813f:	e8 48 fb ff ff       	call   7c8c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8144:	90                   	nop
    8145:	c9                   	leave
    8146:	c3                   	ret
    8147:	90                   	nop

0000000000008148 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8148:	55                   	push   %rbp
    8149:	48 89 e5             	mov    %rsp,%rbp
    814c:	48 83 ec 10          	sub    $0x10,%rsp
    8150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8158:	48 89 c7             	mov    %rax,%rdi
    815b:	e8 bc 0e 00 00       	call   901c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    8160:	90                   	nop
    8161:	c9                   	leave
    8162:	c3                   	ret
    8163:	90                   	nop

0000000000008164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8164:	55                   	push   %rbp
    8165:	48 89 e5             	mov    %rsp,%rbp
    8168:	48 83 ec 10          	sub    $0x10,%rsp
    816c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8174:	48 89 c7             	mov    %rax,%rdi
    8177:	e8 ac 0e 00 00       	call   9028 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    817c:	90                   	nop
    817d:	c9                   	leave
    817e:	c3                   	ret
    817f:	90                   	nop

0000000000008180 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8180:	55                   	push   %rbp
    8181:	48 89 e5             	mov    %rsp,%rbp
    8184:	53                   	push   %rbx
    8185:	48 83 ec 28          	sub    $0x28,%rsp
    8189:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    818d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8191:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8195:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8199:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    819d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81a1:	48 89 d6             	mov    %rdx,%rsi
    81a4:	48 89 c7             	mov    %rax,%rdi
    81a7:	e8 87 0e 00 00       	call   9033 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    81ac:	48 89 c1             	mov    %rax,%rcx
    81af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81b3:	48 89 c2             	mov    %rax,%rdx
    81b6:	48 89 ce             	mov    %rcx,%rsi
    81b9:	48 89 df             	mov    %rbx,%rdi
    81bc:	e8 d3 0e 00 00       	call   9094 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    81c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    81c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81c9:	48 89 d6             	mov    %rdx,%rsi
    81cc:	48 89 c7             	mov    %rax,%rdi
    81cf:	e8 1e 0f 00 00       	call   90f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    81d4:	eb 1a                	jmp    81f0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    81d6:	48 89 c3             	mov    %rax,%rbx
    81d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81dd:	48 89 c7             	mov    %rax,%rdi
    81e0:	e8 79 00 00 00       	call   825e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    81e5:	48 89 d8             	mov    %rbx,%rax
    81e8:	48 89 c7             	mov    %rax,%rdi
    81eb:	e8 00 c5 ff ff       	call   46f0 <_Unwind_Resume@plt>
    81f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81f4:	c9                   	leave
    81f5:	c3                   	ret

00000000000081f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    81f6:	55                   	push   %rbp
    81f7:	48 89 e5             	mov    %rsp,%rbp
    81fa:	48 83 ec 10          	sub    $0x10,%rsp
    81fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8206:	48 89 c7             	mov    %rax,%rdi
    8209:	e8 24 0f 00 00       	call   9132 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    820e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8211:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8215:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    821d:	48 8b 00             	mov    (%rax),%rax
    8220:	48 89 ce             	mov    %rcx,%rsi
    8223:	48 89 c7             	mov    %rax,%rdi
    8226:	e8 15 0f 00 00       	call   9140 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    822b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    822f:	48 89 c7             	mov    %rax,%rdi
    8232:	e8 27 00 00 00       	call   825e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8237:	90                   	nop
    8238:	c9                   	leave
    8239:	c3                   	ret

000000000000823a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    823a:	55                   	push   %rbp
    823b:	48 89 e5             	mov    %rsp,%rbp
    823e:	48 83 ec 10          	sub    $0x10,%rsp
    8242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    824a:	48 8b 10             	mov    (%rax),%rdx
    824d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8251:	48 89 d6             	mov    %rdx,%rsi
    8254:	48 89 c7             	mov    %rax,%rdi
    8257:	e8 0e 0f 00 00       	call   916a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    825c:	c9                   	leave
    825d:	c3                   	ret

000000000000825e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    825e:	55                   	push   %rbp
    825f:	48 89 e5             	mov    %rsp,%rbp
    8262:	48 83 ec 10          	sub    $0x10,%rsp
    8266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    826a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    826e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8276:	48 8b 00             	mov    (%rax),%rax
    8279:	48 29 c2             	sub    %rax,%rdx
    827c:	48 89 d0             	mov    %rdx,%rax
    827f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8283:	48 89 c2             	mov    %rax,%rdx
    8286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828a:	48 8b 08             	mov    (%rax),%rcx
    828d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8291:	48 89 ce             	mov    %rcx,%rsi
    8294:	48 89 c7             	mov    %rax,%rdi
    8297:	e8 06 0f 00 00       	call   91a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    829c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82a0:	48 89 c7             	mov    %rax,%rdi
    82a3:	e8 00 fa ff ff       	call   7ca8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    82a8:	90                   	nop
    82a9:	c9                   	leave
    82aa:	c3                   	ret
    82ab:	90                   	nop

00000000000082ac <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    82ac:	55                   	push   %rbp
    82ad:	48 89 e5             	mov    %rsp,%rbp
    82b0:	48 83 ec 10          	sub    $0x10,%rsp
    82b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82bc:	48 89 c7             	mov    %rax,%rdi
    82bf:	e8 14 0f 00 00       	call   91d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    82c4:	90                   	nop
    82c5:	c9                   	leave
    82c6:	c3                   	ret
    82c7:	90                   	nop

00000000000082c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    82c8:	55                   	push   %rbp
    82c9:	48 89 e5             	mov    %rsp,%rbp
    82cc:	48 83 ec 10          	sub    $0x10,%rsp
    82d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82d8:	48 89 c7             	mov    %rax,%rdi
    82db:	e8 04 0f 00 00       	call   91e4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    82e0:	90                   	nop
    82e1:	c9                   	leave
    82e2:	c3                   	ret
    82e3:	90                   	nop

00000000000082e4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    82e4:	55                   	push   %rbp
    82e5:	48 89 e5             	mov    %rsp,%rbp
    82e8:	53                   	push   %rbx
    82e9:	48 83 ec 28          	sub    $0x28,%rsp
    82ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    82f9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    82fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8301:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8305:	48 89 d6             	mov    %rdx,%rsi
    8308:	48 89 c7             	mov    %rax,%rdi
    830b:	e8 df 0e 00 00       	call   91ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8310:	48 89 c1             	mov    %rax,%rcx
    8313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8317:	48 89 c2             	mov    %rax,%rdx
    831a:	48 89 ce             	mov    %rcx,%rsi
    831d:	48 89 df             	mov    %rbx,%rdi
    8320:	e8 2b 0f 00 00       	call   9250 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8325:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8329:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    832d:	48 89 d6             	mov    %rdx,%rsi
    8330:	48 89 c7             	mov    %rax,%rdi
    8333:	e8 76 0f 00 00       	call   92ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    8338:	eb 1a                	jmp    8354 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    833a:	48 89 c3             	mov    %rax,%rbx
    833d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8341:	48 89 c7             	mov    %rax,%rdi
    8344:	e8 79 00 00 00       	call   83c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8349:	48 89 d8             	mov    %rbx,%rax
    834c:	48 89 c7             	mov    %rax,%rdi
    834f:	e8 9c c3 ff ff       	call   46f0 <_Unwind_Resume@plt>
    8354:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8358:	c9                   	leave
    8359:	c3                   	ret

000000000000835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    835a:	55                   	push   %rbp
    835b:	48 89 e5             	mov    %rsp,%rbp
    835e:	48 83 ec 10          	sub    $0x10,%rsp
    8362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    836a:	48 89 c7             	mov    %rax,%rdi
    836d:	e8 7c 0f 00 00       	call   92ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8372:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8379:	48 8b 48 08          	mov    0x8(%rax),%rcx
    837d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8381:	48 8b 00             	mov    (%rax),%rax
    8384:	48 89 ce             	mov    %rcx,%rsi
    8387:	48 89 c7             	mov    %rax,%rdi
    838a:	e8 6d 0f 00 00       	call   92fc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    838f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8393:	48 89 c7             	mov    %rax,%rdi
    8396:	e8 27 00 00 00       	call   83c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    839b:	90                   	nop
    839c:	c9                   	leave
    839d:	c3                   	ret

000000000000839e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    839e:	55                   	push   %rbp
    839f:	48 89 e5             	mov    %rsp,%rbp
    83a2:	48 83 ec 10          	sub    $0x10,%rsp
    83a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    83aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ae:	48 8b 10             	mov    (%rax),%rdx
    83b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b5:	48 89 d6             	mov    %rdx,%rsi
    83b8:	48 89 c7             	mov    %rax,%rdi
    83bb:	e8 66 0f 00 00       	call   9326 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    83c0:	c9                   	leave
    83c1:	c3                   	ret

00000000000083c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    83c2:	55                   	push   %rbp
    83c3:	48 89 e5             	mov    %rsp,%rbp
    83c6:	48 83 ec 10          	sub    $0x10,%rsp
    83ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    83ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    83d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83da:	48 8b 00             	mov    (%rax),%rax
    83dd:	48 29 c2             	sub    %rax,%rdx
    83e0:	48 c1 fa 03          	sar    $0x3,%rdx
    83e4:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    83eb:	aa aa aa 
    83ee:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    83f2:	48 89 c2             	mov    %rax,%rdx
    83f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f9:	48 8b 08             	mov    (%rax),%rcx
    83fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8400:	48 89 ce             	mov    %rcx,%rsi
    8403:	48 89 c7             	mov    %rax,%rdi
    8406:	e8 53 0f 00 00       	call   935e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    840b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    840f:	48 89 c7             	mov    %rax,%rdi
    8412:	e8 ad f8 ff ff       	call   7cc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8417:	90                   	nop
    8418:	c9                   	leave
    8419:	c3                   	ret

000000000000841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    841a:	55                   	push   %rbp
    841b:	48 89 e5             	mov    %rsp,%rbp
    841e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8426:	48 8b 50 08          	mov    0x8(%rax),%rdx
    842a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    842e:	48 8b 00             	mov    (%rax),%rax
    8431:	48 29 c2             	sub    %rax,%rdx
    8434:	48 c1 fa 03          	sar    $0x3,%rdx
    8438:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    843f:	aa aa aa 
    8442:	48 0f af c2          	imul   %rdx,%rax
    8446:	5d                   	pop    %rbp
    8447:	c3                   	ret

0000000000008448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8448:	55                   	push   %rbp
    8449:	48 89 e5             	mov    %rsp,%rbp
    844c:	48 83 ec 10          	sub    $0x10,%rsp
    8450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8458:	48 89 c7             	mov    %rax,%rdi
    845b:	e8 34 0f 00 00       	call   9394 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8460:	90                   	nop
    8461:	c9                   	leave
    8462:	c3                   	ret
    8463:	90                   	nop

0000000000008464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8464:	55                   	push   %rbp
    8465:	48 89 e5             	mov    %rsp,%rbp
    8468:	48 83 ec 10          	sub    $0x10,%rsp
    846c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8474:	48 89 c7             	mov    %rax,%rdi
    8477:	e8 24 0f 00 00       	call   93a0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    847c:	90                   	nop
    847d:	c9                   	leave
    847e:	c3                   	ret
    847f:	90                   	nop

0000000000008480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8480:	55                   	push   %rbp
    8481:	48 89 e5             	mov    %rsp,%rbp
    8484:	53                   	push   %rbx
    8485:	48 83 ec 28          	sub    $0x28,%rsp
    8489:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    848d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8491:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8495:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8499:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    849d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84a1:	48 89 d6             	mov    %rdx,%rsi
    84a4:	48 89 c7             	mov    %rax,%rdi
    84a7:	e8 ff 0e 00 00       	call   93ab <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    84ac:	48 89 c1             	mov    %rax,%rcx
    84af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    84b3:	48 89 c2             	mov    %rax,%rdx
    84b6:	48 89 ce             	mov    %rcx,%rsi
    84b9:	48 89 df             	mov    %rbx,%rdi
    84bc:	e8 4b 0f 00 00       	call   940c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    84c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    84c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c9:	48 89 d6             	mov    %rdx,%rsi
    84cc:	48 89 c7             	mov    %rax,%rdi
    84cf:	e8 96 0f 00 00       	call   946a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    84d4:	eb 1a                	jmp    84f0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    84d6:	48 89 c3             	mov    %rax,%rbx
    84d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84dd:	48 89 c7             	mov    %rax,%rdi
    84e0:	e8 bb 01 00 00       	call   86a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    84e5:	48 89 d8             	mov    %rbx,%rax
    84e8:	48 89 c7             	mov    %rax,%rdi
    84eb:	e8 00 c2 ff ff       	call   46f0 <_Unwind_Resume@plt>
    84f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84f4:	c9                   	leave
    84f5:	c3                   	ret

00000000000084f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    84f6:	55                   	push   %rbp
    84f7:	48 89 e5             	mov    %rsp,%rbp
    84fa:	48 83 ec 10          	sub    $0x10,%rsp
    84fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8506:	48 89 c7             	mov    %rax,%rdi
    8509:	e8 9c 0f 00 00       	call   94aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    850e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8515:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851d:	48 8b 00             	mov    (%rax),%rax
    8520:	48 89 ce             	mov    %rcx,%rsi
    8523:	48 89 c7             	mov    %rax,%rdi
    8526:	e8 8d 0f 00 00       	call   94b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    852b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852f:	48 89 c7             	mov    %rax,%rdi
    8532:	e8 69 01 00 00       	call   86a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8537:	90                   	nop
    8538:	c9                   	leave
    8539:	c3                   	ret

000000000000853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    853a:	55                   	push   %rbp
    853b:	48 89 e5             	mov    %rsp,%rbp
    853e:	48 83 ec 20          	sub    $0x20,%rsp
    8542:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8546:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    854a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    854e:	48 89 d6             	mov    %rdx,%rsi
    8551:	48 89 c7             	mov    %rax,%rdi
    8554:	e8 89 0f 00 00       	call   94e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    855d:	c9                   	leave
    855e:	c3                   	ret
    855f:	90                   	nop

0000000000008560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8560:	55                   	push   %rbp
    8561:	48 89 e5             	mov    %rsp,%rbp
    8564:	48 83 ec 20          	sub    $0x20,%rsp
    8568:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    856c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8570:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8574:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8578:	48 89 d6             	mov    %rdx,%rsi
    857b:	48 89 c7             	mov    %rax,%rdi
    857e:	e8 5f 0f 00 00       	call   94e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8587:	c9                   	leave
    8588:	c3                   	ret

0000000000008589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8589:	55                   	push   %rbp
    858a:	48 89 e5             	mov    %rsp,%rbp
    858d:	53                   	push   %rbx
    858e:	48 83 ec 18          	sub    $0x18,%rsp
    8592:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8596:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    859a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    859e:	48 89 c7             	mov    %rax,%rdi
    85a1:	e8 5a 0f 00 00       	call   9500 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    85a6:	48 8b 18             	mov    (%rax),%rbx
    85a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85ad:	48 89 c7             	mov    %rax,%rdi
    85b0:	e8 4b 0f 00 00       	call   9500 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    85b5:	48 8b 00             	mov    (%rax),%rax
    85b8:	48 39 c3             	cmp    %rax,%rbx
    85bb:	0f 95 c0             	setne  %al
    85be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85c2:	c9                   	leave
    85c3:	c3                   	ret

00000000000085c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    85c4:	55                   	push   %rbp
    85c5:	48 89 e5             	mov    %rsp,%rbp
    85c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    85cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85d0:	48 8b 00             	mov    (%rax),%rax
    85d3:	48 8d 50 18          	lea    0x18(%rax),%rdx
    85d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85db:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    85de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    85e2:	5d                   	pop    %rbp
    85e3:	c3                   	ret

00000000000085e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    85e4:	55                   	push   %rbp
    85e5:	48 89 e5             	mov    %rsp,%rbp
    85e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    85ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f0:	48 8b 00             	mov    (%rax),%rax
    85f3:	5d                   	pop    %rbp
    85f4:	c3                   	ret
    85f5:	90                   	nop

00000000000085f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    85f6:	55                   	push   %rbp
    85f7:	48 89 e5             	mov    %rsp,%rbp
    85fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8606:	48 8b 08             	mov    (%rax),%rcx
    8609:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    860d:	48 89 d0             	mov    %rdx,%rax
    8610:	48 c1 e0 03          	shl    $0x3,%rax
    8614:	48 29 d0             	sub    %rdx,%rax
    8617:	48 c1 e0 02          	shl    $0x2,%rax
    861b:	48 01 c8             	add    %rcx,%rax
      }
    861e:	5d                   	pop    %rbp
    861f:	c3                   	ret

0000000000008620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    8620:	55                   	push   %rbp
    8621:	48 89 e5             	mov    %rsp,%rbp
    8624:	53                   	push   %rbx
    8625:	48 83 ec 18          	sub    $0x18,%rsp
    8629:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    862d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    8631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8635:	48 89 c7             	mov    %rax,%rdi
    8638:	e8 d1 0e 00 00       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    863d:	84 c0                	test   %al,%al
    863f:	74 36                	je     8677 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    8641:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8645:	48 89 c7             	mov    %rax,%rdi
    8648:	e8 17 0f 00 00       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    864d:	48 89 c3             	mov    %rax,%rbx
    8650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8654:	48 89 c7             	mov    %rax,%rdi
    8657:	e8 c4 0e 00 00       	call   9520 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    865c:	48 89 c1             	mov    %rax,%rcx
    865f:	48 8b 03             	mov    (%rbx),%rax
    8662:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    8666:	48 89 01             	mov    %rax,(%rcx)
    8669:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    866d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8671:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8675:	eb 1e                	jmp    8695 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    8677:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    867b:	48 89 c7             	mov    %rax,%rdi
    867e:	e8 e1 0e 00 00       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8683:	48 89 c2             	mov    %rax,%rdx
    8686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    868a:	48 89 d6             	mov    %rdx,%rsi
    868d:	48 89 c7             	mov    %rax,%rdi
    8690:	e8 dd 0e 00 00       	call   9572 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    8695:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8699:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    869d:	c9                   	leave
    869e:	c3                   	ret
    869f:	90                   	nop

00000000000086a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    86a0:	55                   	push   %rbp
    86a1:	48 89 e5             	mov    %rsp,%rbp
    86a4:	48 83 ec 10          	sub    $0x10,%rsp
    86a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    86ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86b0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    86b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86b8:	48 8b 00             	mov    (%rax),%rax
    86bb:	48 29 c2             	sub    %rax,%rdx
    86be:	48 c1 fa 02          	sar    $0x2,%rdx
    86c2:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    86c9:	db b6 6d 
    86cc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    86d0:	48 89 c2             	mov    %rax,%rdx
    86d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d7:	48 8b 08             	mov    (%rax),%rcx
    86da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86de:	48 89 ce             	mov    %rcx,%rsi
    86e1:	48 89 c7             	mov    %rax,%rdi
    86e4:	e8 e3 0e 00 00       	call   95cc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    86e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ed:	48 89 c7             	mov    %rax,%rdi
    86f0:	e8 eb f5 ff ff       	call   7ce0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    86f5:	90                   	nop
    86f6:	c9                   	leave
    86f7:	c3                   	ret

00000000000086f8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    86f8:	55                   	push   %rbp
    86f9:	48 89 e5             	mov    %rsp,%rbp
    86fc:	48 83 ec 10          	sub    $0x10,%rsp
    8700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8708:	48 89 c7             	mov    %rax,%rdi
    870b:	e8 f2 0e 00 00       	call   9602 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    8710:	90                   	nop
    8711:	c9                   	leave
    8712:	c3                   	ret
    8713:	90                   	nop

0000000000008714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8714:	55                   	push   %rbp
    8715:	48 89 e5             	mov    %rsp,%rbp
    8718:	48 83 ec 10          	sub    $0x10,%rsp
    871c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8724:	48 89 c7             	mov    %rax,%rdi
    8727:	e8 e2 0e 00 00       	call   960e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    872c:	90                   	nop
    872d:	c9                   	leave
    872e:	c3                   	ret
    872f:	90                   	nop

0000000000008730 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8730:	55                   	push   %rbp
    8731:	48 89 e5             	mov    %rsp,%rbp
    8734:	53                   	push   %rbx
    8735:	48 83 ec 28          	sub    $0x28,%rsp
    8739:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    873d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8741:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8745:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8749:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    874d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8751:	48 89 d6             	mov    %rdx,%rsi
    8754:	48 89 c7             	mov    %rax,%rdi
    8757:	e8 bd 0e 00 00       	call   9619 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    875c:	48 89 c1             	mov    %rax,%rcx
    875f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8763:	48 89 c2             	mov    %rax,%rdx
    8766:	48 89 ce             	mov    %rcx,%rsi
    8769:	48 89 df             	mov    %rbx,%rdi
    876c:	e8 09 0f 00 00       	call   967a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8771:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8779:	48 89 d6             	mov    %rdx,%rsi
    877c:	48 89 c7             	mov    %rax,%rdi
    877f:	e8 54 0f 00 00       	call   96d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    8784:	eb 1a                	jmp    87a0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    8786:	48 89 c3             	mov    %rax,%rbx
    8789:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    878d:	48 89 c7             	mov    %rax,%rdi
    8790:	e8 79 00 00 00       	call   880e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8795:	48 89 d8             	mov    %rbx,%rax
    8798:	48 89 c7             	mov    %rax,%rdi
    879b:	e8 50 bf ff ff       	call   46f0 <_Unwind_Resume@plt>
    87a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87a4:	c9                   	leave
    87a5:	c3                   	ret

00000000000087a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    87a6:	55                   	push   %rbp
    87a7:	48 89 e5             	mov    %rsp,%rbp
    87aa:	48 83 ec 10          	sub    $0x10,%rsp
    87ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    87b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87b6:	48 89 c7             	mov    %rax,%rdi
    87b9:	e8 5a 0f 00 00       	call   9718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    87be:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    87c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87cd:	48 8b 00             	mov    (%rax),%rax
    87d0:	48 89 ce             	mov    %rcx,%rsi
    87d3:	48 89 c7             	mov    %rax,%rdi
    87d6:	e8 4b 0f 00 00       	call   9726 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    87db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87df:	48 89 c7             	mov    %rax,%rdi
    87e2:	e8 27 00 00 00       	call   880e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    87e7:	90                   	nop
    87e8:	c9                   	leave
    87e9:	c3                   	ret

00000000000087ea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    87ea:	55                   	push   %rbp
    87eb:	48 89 e5             	mov    %rsp,%rbp
    87ee:	48 83 ec 10          	sub    $0x10,%rsp
    87f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    87f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87fa:	48 8b 10             	mov    (%rax),%rdx
    87fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8801:	48 89 d6             	mov    %rdx,%rsi
    8804:	48 89 c7             	mov    %rax,%rdi
    8807:	e8 44 0f 00 00       	call   9750 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    880c:	c9                   	leave
    880d:	c3                   	ret

000000000000880e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    880e:	55                   	push   %rbp
    880f:	48 89 e5             	mov    %rsp,%rbp
    8812:	48 83 ec 10          	sub    $0x10,%rsp
    8816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    881a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    881e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8826:	48 8b 00             	mov    (%rax),%rax
    8829:	48 29 c2             	sub    %rax,%rdx
    882c:	48 89 d0             	mov    %rdx,%rax
    882f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8833:	48 89 c2             	mov    %rax,%rdx
    8836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    883a:	48 8b 08             	mov    (%rax),%rcx
    883d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8841:	48 89 ce             	mov    %rcx,%rsi
    8844:	48 89 c7             	mov    %rax,%rdi
    8847:	e8 3c 0f 00 00       	call   9788 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    884c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8850:	48 89 c7             	mov    %rax,%rdi
    8853:	e8 a4 f4 ff ff       	call   7cfc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8858:	90                   	nop
    8859:	c9                   	leave
    885a:	c3                   	ret
    885b:	90                   	nop

000000000000885c <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    885c:	55                   	push   %rbp
    885d:	48 89 e5             	mov    %rsp,%rbp
    8860:	48 83 ec 10          	sub    $0x10,%rsp
    8864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886c:	48 89 c7             	mov    %rax,%rdi
    886f:	e8 4a 0f 00 00       	call   97be <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    8874:	90                   	nop
    8875:	c9                   	leave
    8876:	c3                   	ret
    8877:	90                   	nop

0000000000008878 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8878:	55                   	push   %rbp
    8879:	48 89 e5             	mov    %rsp,%rbp
    887c:	48 83 ec 10          	sub    $0x10,%rsp
    8880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8888:	48 89 c7             	mov    %rax,%rdi
    888b:	e8 3a 0f 00 00       	call   97ca <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    8890:	90                   	nop
    8891:	c9                   	leave
    8892:	c3                   	ret
    8893:	90                   	nop

0000000000008894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8894:	55                   	push   %rbp
    8895:	48 89 e5             	mov    %rsp,%rbp
    8898:	53                   	push   %rbx
    8899:	48 83 ec 28          	sub    $0x28,%rsp
    889d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    88a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    88a9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    88ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    88b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88b5:	48 89 d6             	mov    %rdx,%rsi
    88b8:	48 89 c7             	mov    %rax,%rdi
    88bb:	e8 15 0f 00 00       	call   97d5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    88c0:	48 89 c1             	mov    %rax,%rcx
    88c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88c7:	48 89 c2             	mov    %rax,%rdx
    88ca:	48 89 ce             	mov    %rcx,%rsi
    88cd:	48 89 df             	mov    %rbx,%rdi
    88d0:	e8 61 0f 00 00       	call   9836 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    88d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    88d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88dd:	48 89 d6             	mov    %rdx,%rsi
    88e0:	48 89 c7             	mov    %rax,%rdi
    88e3:	e8 ac 0f 00 00       	call   9894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    88e8:	eb 1a                	jmp    8904 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    88ea:	48 89 c3             	mov    %rax,%rbx
    88ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88f1:	48 89 c7             	mov    %rax,%rdi
    88f4:	e8 79 00 00 00       	call   8972 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    88f9:	48 89 d8             	mov    %rbx,%rax
    88fc:	48 89 c7             	mov    %rax,%rdi
    88ff:	e8 ec bd ff ff       	call   46f0 <_Unwind_Resume@plt>
    8904:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8908:	c9                   	leave
    8909:	c3                   	ret

000000000000890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    890a:	55                   	push   %rbp
    890b:	48 89 e5             	mov    %rsp,%rbp
    890e:	48 83 ec 10          	sub    $0x10,%rsp
    8912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    891a:	48 89 c7             	mov    %rax,%rdi
    891d:	e8 b2 0f 00 00       	call   98d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8922:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8929:	48 8b 48 08          	mov    0x8(%rax),%rcx
    892d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8931:	48 8b 00             	mov    (%rax),%rax
    8934:	48 89 ce             	mov    %rcx,%rsi
    8937:	48 89 c7             	mov    %rax,%rdi
    893a:	e8 a3 0f 00 00       	call   98e2 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    893f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8943:	48 89 c7             	mov    %rax,%rdi
    8946:	e8 27 00 00 00       	call   8972 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    894b:	90                   	nop
    894c:	c9                   	leave
    894d:	c3                   	ret

000000000000894e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    894e:	55                   	push   %rbp
    894f:	48 89 e5             	mov    %rsp,%rbp
    8952:	48 83 ec 10          	sub    $0x10,%rsp
    8956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    895a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    895e:	48 8b 10             	mov    (%rax),%rdx
    8961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8965:	48 89 d6             	mov    %rdx,%rsi
    8968:	48 89 c7             	mov    %rax,%rdi
    896b:	e8 9c 0f 00 00       	call   990c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8970:	c9                   	leave
    8971:	c3                   	ret

0000000000008972 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8972:	55                   	push   %rbp
    8973:	48 89 e5             	mov    %rsp,%rbp
    8976:	48 83 ec 10          	sub    $0x10,%rsp
    897a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    897e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8982:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    898a:	48 8b 00             	mov    (%rax),%rax
    898d:	48 29 c2             	sub    %rax,%rdx
    8990:	48 89 d0             	mov    %rdx,%rax
    8993:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    8997:	48 89 c2             	mov    %rax,%rdx
    899a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899e:	48 8b 08             	mov    (%rax),%rcx
    89a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a5:	48 89 ce             	mov    %rcx,%rsi
    89a8:	48 89 c7             	mov    %rax,%rdi
    89ab:	e8 94 0f 00 00       	call   9944 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    89b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89b4:	48 89 c7             	mov    %rax,%rdi
    89b7:	e8 5c f3 ff ff       	call   7d18 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    89bc:	90                   	nop
    89bd:	c9                   	leave
    89be:	c3                   	ret
    89bf:	90                   	nop

00000000000089c0 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    89c0:	55                   	push   %rbp
    89c1:	48 89 e5             	mov    %rsp,%rbp
    89c4:	48 83 ec 10          	sub    $0x10,%rsp
    89c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d0:	48 89 c7             	mov    %rax,%rdi
    89d3:	e8 a2 0f 00 00       	call   997a <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    89d8:	90                   	nop
    89d9:	c9                   	leave
    89da:	c3                   	ret
    89db:	90                   	nop

00000000000089dc <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    89dc:	55                   	push   %rbp
    89dd:	48 89 e5             	mov    %rsp,%rbp
    89e0:	48 83 ec 10          	sub    $0x10,%rsp
    89e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ec:	48 89 c7             	mov    %rax,%rdi
    89ef:	e8 92 0f 00 00       	call   9986 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    89f4:	90                   	nop
    89f5:	c9                   	leave
    89f6:	c3                   	ret
    89f7:	90                   	nop

00000000000089f8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    89f8:	55                   	push   %rbp
    89f9:	48 89 e5             	mov    %rsp,%rbp
    89fc:	53                   	push   %rbx
    89fd:	48 83 ec 28          	sub    $0x28,%rsp
    8a01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8a0d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8a11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a19:	48 89 d6             	mov    %rdx,%rsi
    8a1c:	48 89 c7             	mov    %rax,%rdi
    8a1f:	e8 6d 0f 00 00       	call   9991 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8a24:	48 89 c1             	mov    %rax,%rcx
    8a27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a2b:	48 89 c2             	mov    %rax,%rdx
    8a2e:	48 89 ce             	mov    %rcx,%rsi
    8a31:	48 89 df             	mov    %rbx,%rdi
    8a34:	e8 b9 0f 00 00       	call   99f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8a39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a41:	48 89 d6             	mov    %rdx,%rsi
    8a44:	48 89 c7             	mov    %rax,%rdi
    8a47:	e8 04 10 00 00       	call   9a50 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8a4c:	eb 1a                	jmp    8a68 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8a4e:	48 89 c3             	mov    %rax,%rbx
    8a51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a55:	48 89 c7             	mov    %rax,%rdi
    8a58:	e8 79 00 00 00       	call   8ad6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8a5d:	48 89 d8             	mov    %rbx,%rax
    8a60:	48 89 c7             	mov    %rax,%rdi
    8a63:	e8 88 bc ff ff       	call   46f0 <_Unwind_Resume@plt>
    8a68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a6c:	c9                   	leave
    8a6d:	c3                   	ret

0000000000008a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8a6e:	55                   	push   %rbp
    8a6f:	48 89 e5             	mov    %rsp,%rbp
    8a72:	48 83 ec 10          	sub    $0x10,%rsp
    8a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a7e:	48 89 c7             	mov    %rax,%rdi
    8a81:	e8 0a 10 00 00       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8a86:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a8d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a95:	48 8b 00             	mov    (%rax),%rax
    8a98:	48 89 ce             	mov    %rcx,%rsi
    8a9b:	48 89 c7             	mov    %rax,%rdi
    8a9e:	e8 fb 0f 00 00       	call   9a9e <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    8aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aa7:	48 89 c7             	mov    %rax,%rdi
    8aaa:	e8 27 00 00 00       	call   8ad6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8aaf:	90                   	nop
    8ab0:	c9                   	leave
    8ab1:	c3                   	ret

0000000000008ab2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8ab2:	55                   	push   %rbp
    8ab3:	48 89 e5             	mov    %rsp,%rbp
    8ab6:	48 83 ec 10          	sub    $0x10,%rsp
    8aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac2:	48 8b 10             	mov    (%rax),%rdx
    8ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac9:	48 89 d6             	mov    %rdx,%rsi
    8acc:	48 89 c7             	mov    %rax,%rdi
    8acf:	e8 f4 0f 00 00       	call   9ac8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8ad4:	c9                   	leave
    8ad5:	c3                   	ret

0000000000008ad6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8ad6:	55                   	push   %rbp
    8ad7:	48 89 e5             	mov    %rsp,%rbp
    8ada:	48 83 ec 10          	sub    $0x10,%rsp
    8ade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ae6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aee:	48 8b 00             	mov    (%rax),%rax
    8af1:	48 29 c2             	sub    %rax,%rdx
    8af4:	48 89 d0             	mov    %rdx,%rax
    8af7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8afb:	48 89 c2             	mov    %rax,%rdx
    8afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b02:	48 8b 08             	mov    (%rax),%rcx
    8b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b09:	48 89 ce             	mov    %rcx,%rsi
    8b0c:	48 89 c7             	mov    %rax,%rdi
    8b0f:	e8 ec 0f 00 00       	call   9b00 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b18:	48 89 c7             	mov    %rax,%rdi
    8b1b:	e8 14 f2 ff ff       	call   7d34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8b20:	90                   	nop
    8b21:	c9                   	leave
    8b22:	c3                   	ret
    8b23:	90                   	nop

0000000000008b24 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8b24:	55                   	push   %rbp
    8b25:	48 89 e5             	mov    %rsp,%rbp
    8b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b2c:	90                   	nop
    8b2d:	5d                   	pop    %rbp
    8b2e:	c3                   	ret
    8b2f:	90                   	nop

0000000000008b30 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8b30:	55                   	push   %rbp
    8b31:	48 89 e5             	mov    %rsp,%rbp
    8b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b38:	90                   	nop
    8b39:	5d                   	pop    %rbp
    8b3a:	c3                   	ret

0000000000008b3b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8b3b:	55                   	push   %rbp
    8b3c:	48 89 e5             	mov    %rsp,%rbp
    8b3f:	53                   	push   %rbx
    8b40:	48 83 ec 28          	sub    $0x28,%rsp
    8b44:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8b48:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8b4c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8b50:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b54:	48 89 d6             	mov    %rdx,%rsi
    8b57:	48 89 c7             	mov    %rax,%rdi
    8b5a:	e8 25 01 00 00       	call   8c84 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8b5f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b63:	48 89 c7             	mov    %rax,%rdi
    8b66:	e8 ca 0f 00 00       	call   9b35 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8b6b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8b6f:	0f 92 c3             	setb   %bl
    8b72:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b76:	48 89 c7             	mov    %rax,%rdi
    8b79:	e8 ee f1 ff ff       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    8b7e:	84 db                	test   %bl,%bl
    8b80:	74 0f                	je     8b91 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8b82:	48 8d 05 37 05 01 00 	lea    0x10537(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8b89:	48 89 c7             	mov    %rax,%rdi
    8b8c:	e8 ef b5 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8b91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8b95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b99:	c9                   	leave
    8b9a:	c3                   	ret
    8b9b:	90                   	nop

0000000000008b9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8b9c:	55                   	push   %rbp
    8b9d:	48 89 e5             	mov    %rsp,%rbp
    8ba0:	53                   	push   %rbx
    8ba1:	48 83 ec 28          	sub    $0x28,%rsp
    8ba5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ba9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8bad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8bb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bb5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8bb9:	48 89 d6             	mov    %rdx,%rsi
    8bbc:	48 89 c7             	mov    %rax,%rdi
    8bbf:	e8 b4 0f 00 00       	call   9b78 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8bc4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bcc:	48 89 d6             	mov    %rdx,%rsi
    8bcf:	48 89 c7             	mov    %rax,%rdi
    8bd2:	e8 d3 0f 00 00       	call   9baa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8bd7:	eb 1a                	jmp    8bf3 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8bd9:	48 89 c3             	mov    %rax,%rbx
    8bdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8be0:	48 89 c7             	mov    %rax,%rdi
    8be3:	e8 6c f0 ff ff       	call   7c54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8be8:	48 89 d8             	mov    %rbx,%rax
    8beb:	48 89 c7             	mov    %rax,%rdi
    8bee:	e8 fd ba ff ff       	call   46f0 <_Unwind_Resume@plt>
    8bf3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8bf7:	c9                   	leave
    8bf8:	c3                   	ret
    8bf9:	90                   	nop

0000000000008bfa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8bfa:	55                   	push   %rbp
    8bfb:	48 89 e5             	mov    %rsp,%rbp
    8bfe:	48 83 ec 10          	sub    $0x10,%rsp
    8c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c0e:	48 89 c7             	mov    %rax,%rdi
    8c11:	e8 24 00 00 00       	call   8c3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8c16:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8c19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c1d:	48 8b 00             	mov    (%rax),%rax
    8c20:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c24:	48 89 ce             	mov    %rcx,%rsi
    8c27:	48 89 c7             	mov    %rax,%rdi
    8c2a:	e8 dc 0f 00 00       	call   9c0b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8c2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8c33:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8c37:	90                   	nop
    8c38:	c9                   	leave
    8c39:	c3                   	ret

0000000000008c3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8c3a:	55                   	push   %rbp
    8c3b:	48 89 e5             	mov    %rsp,%rbp
    8c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c46:	5d                   	pop    %rbp
    8c47:	c3                   	ret

0000000000008c48 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8c48:	55                   	push   %rbp
    8c49:	48 89 e5             	mov    %rsp,%rbp
    8c4c:	48 83 ec 20          	sub    $0x20,%rsp
    8c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8c5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c64:	48 89 d6             	mov    %rdx,%rsi
    8c67:	48 89 c7             	mov    %rax,%rdi
    8c6a:	e8 c5 0f 00 00       	call   9c34 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8c6f:	90                   	nop
    8c70:	c9                   	leave
    8c71:	c3                   	ret

0000000000008c72 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8c72:	55                   	push   %rbp
    8c73:	48 89 e5             	mov    %rsp,%rbp
    8c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c82:	5d                   	pop    %rbp
    8c83:	c3                   	ret

0000000000008c84 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8c84:	55                   	push   %rbp
    8c85:	48 89 e5             	mov    %rsp,%rbp
    8c88:	48 83 ec 10          	sub    $0x10,%rsp
    8c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8c94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c9c:	48 89 d6             	mov    %rdx,%rsi
    8c9f:	48 89 c7             	mov    %rax,%rdi
    8ca2:	e8 b3 0f 00 00       	call   9c5a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    8ca7:	90                   	nop
    8ca8:	c9                   	leave
    8ca9:	c3                   	ret

0000000000008caa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8caa:	55                   	push   %rbp
    8cab:	48 89 e5             	mov    %rsp,%rbp
    8cae:	48 83 ec 20          	sub    $0x20,%rsp
    8cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8cbe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8cc3:	74 17                	je     8cdc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ccd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8cd1:	48 89 ce             	mov    %rcx,%rsi
    8cd4:	48 89 c7             	mov    %rax,%rdi
    8cd7:	e8 8d 0f 00 00       	call   9c69 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8cdc:	90                   	nop
    8cdd:	c9                   	leave
    8cde:	c3                   	ret
    8cdf:	90                   	nop

0000000000008ce0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ce0:	55                   	push   %rbp
    8ce1:	48 89 e5             	mov    %rsp,%rbp
    8ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ce8:	90                   	nop
    8ce9:	5d                   	pop    %rbp
    8cea:	c3                   	ret
    8ceb:	90                   	nop

0000000000008cec <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8cec:	55                   	push   %rbp
    8ced:	48 89 e5             	mov    %rsp,%rbp
    8cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cf4:	90                   	nop
    8cf5:	5d                   	pop    %rbp
    8cf6:	c3                   	ret

0000000000008cf7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8cf7:	55                   	push   %rbp
    8cf8:	48 89 e5             	mov    %rsp,%rbp
    8cfb:	53                   	push   %rbx
    8cfc:	48 83 ec 28          	sub    $0x28,%rsp
    8d00:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8d04:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8d08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8d0c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d10:	48 89 d6             	mov    %rdx,%rsi
    8d13:	48 89 c7             	mov    %rax,%rdi
    8d16:	e8 25 01 00 00       	call   8e40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8d1b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d1f:	48 89 c7             	mov    %rax,%rdi
    8d22:	e8 70 0f 00 00       	call   9c97 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8d27:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8d2b:	0f 92 c3             	setb   %bl
    8d2e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d32:	48 89 c7             	mov    %rax,%rdi
    8d35:	e8 a0 f1 ff ff       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    8d3a:	84 db                	test   %bl,%bl
    8d3c:	74 0f                	je     8d4d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8d3e:	48 8d 05 7b 03 01 00 	lea    0x1037b(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8d45:	48 89 c7             	mov    %rax,%rdi
    8d48:	e8 33 b4 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8d4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8d51:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d55:	c9                   	leave
    8d56:	c3                   	ret
    8d57:	90                   	nop

0000000000008d58 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8d58:	55                   	push   %rbp
    8d59:	48 89 e5             	mov    %rsp,%rbp
    8d5c:	53                   	push   %rbx
    8d5d:	48 83 ec 28          	sub    $0x28,%rsp
    8d61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8d6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d75:	48 89 d6             	mov    %rdx,%rsi
    8d78:	48 89 c7             	mov    %rax,%rdi
    8d7b:	e8 5a 0f 00 00       	call   9cda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8d80:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d88:	48 89 d6             	mov    %rdx,%rsi
    8d8b:	48 89 c7             	mov    %rax,%rdi
    8d8e:	e8 79 0f 00 00       	call   9d0c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8d93:	eb 1a                	jmp    8daf <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8d95:	48 89 c3             	mov    %rax,%rbx
    8d98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d9c:	48 89 c7             	mov    %rax,%rdi
    8d9f:	e8 cc ee ff ff       	call   7c70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8da4:	48 89 d8             	mov    %rbx,%rax
    8da7:	48 89 c7             	mov    %rax,%rdi
    8daa:	e8 41 b9 ff ff       	call   46f0 <_Unwind_Resume@plt>
    8daf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8db3:	c9                   	leave
    8db4:	c3                   	ret
    8db5:	90                   	nop

0000000000008db6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8db6:	55                   	push   %rbp
    8db7:	48 89 e5             	mov    %rsp,%rbp
    8dba:	48 83 ec 10          	sub    $0x10,%rsp
    8dbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dca:	48 89 c7             	mov    %rax,%rdi
    8dcd:	e8 24 00 00 00       	call   8df6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8dd2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dd9:	48 8b 00             	mov    (%rax),%rax
    8ddc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8de0:	48 89 ce             	mov    %rcx,%rsi
    8de3:	48 89 c7             	mov    %rax,%rdi
    8de6:	e8 82 0f 00 00       	call   9d6d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8deb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8def:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8df3:	90                   	nop
    8df4:	c9                   	leave
    8df5:	c3                   	ret

0000000000008df6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8df6:	55                   	push   %rbp
    8df7:	48 89 e5             	mov    %rsp,%rbp
    8dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e02:	5d                   	pop    %rbp
    8e03:	c3                   	ret

0000000000008e04 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8e04:	55                   	push   %rbp
    8e05:	48 89 e5             	mov    %rsp,%rbp
    8e08:	48 83 ec 20          	sub    $0x20,%rsp
    8e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8e18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e20:	48 89 d6             	mov    %rdx,%rsi
    8e23:	48 89 c7             	mov    %rax,%rdi
    8e26:	e8 6b 0f 00 00       	call   9d96 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8e2b:	90                   	nop
    8e2c:	c9                   	leave
    8e2d:	c3                   	ret

0000000000008e2e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8e2e:	55                   	push   %rbp
    8e2f:	48 89 e5             	mov    %rsp,%rbp
    8e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8e3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e3e:	5d                   	pop    %rbp
    8e3f:	c3                   	ret

0000000000008e40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8e40:	55                   	push   %rbp
    8e41:	48 89 e5             	mov    %rsp,%rbp
    8e44:	48 83 ec 10          	sub    $0x10,%rsp
    8e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8e50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e58:	48 89 d6             	mov    %rdx,%rsi
    8e5b:	48 89 c7             	mov    %rax,%rdi
    8e5e:	e8 59 0f 00 00       	call   9dbc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8e63:	90                   	nop
    8e64:	c9                   	leave
    8e65:	c3                   	ret

0000000000008e66 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8e66:	55                   	push   %rbp
    8e67:	48 89 e5             	mov    %rsp,%rbp
    8e6a:	48 83 ec 20          	sub    $0x20,%rsp
    8e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8e7a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e7f:	74 17                	je     8e98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e8d:	48 89 ce             	mov    %rcx,%rsi
    8e90:	48 89 c7             	mov    %rax,%rdi
    8e93:	e8 33 0f 00 00       	call   9dcb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8e98:	90                   	nop
    8e99:	c9                   	leave
    8e9a:	c3                   	ret
    8e9b:	90                   	nop

0000000000008e9c <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e9c:	55                   	push   %rbp
    8e9d:	48 89 e5             	mov    %rsp,%rbp
    8ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ea4:	90                   	nop
    8ea5:	5d                   	pop    %rbp
    8ea6:	c3                   	ret
    8ea7:	90                   	nop

0000000000008ea8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ea8:	55                   	push   %rbp
    8ea9:	48 89 e5             	mov    %rsp,%rbp
    8eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8eb0:	90                   	nop
    8eb1:	5d                   	pop    %rbp
    8eb2:	c3                   	ret

0000000000008eb3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8eb3:	55                   	push   %rbp
    8eb4:	48 89 e5             	mov    %rsp,%rbp
    8eb7:	53                   	push   %rbx
    8eb8:	48 83 ec 28          	sub    $0x28,%rsp
    8ebc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8ec0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8ec4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8ec8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8ecc:	48 89 d6             	mov    %rdx,%rsi
    8ecf:	48 89 c7             	mov    %rax,%rdi
    8ed2:	e8 e9 00 00 00       	call   8fc0 <_ZNSaIPKcEC1ERKS1_>
    8ed7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8edb:	48 89 c7             	mov    %rax,%rdi
    8ede:	e8 16 0f 00 00       	call   9df9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    8ee3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8ee7:	0f 92 c3             	setb   %bl
    8eea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8eee:	48 89 c7             	mov    %rax,%rdi
    8ef1:	e8 52 f1 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    8ef6:	84 db                	test   %bl,%bl
    8ef8:	74 0f                	je     8f09 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8efa:	48 8d 05 bf 01 01 00 	lea    0x101bf(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f01:	48 89 c7             	mov    %rax,%rdi
    8f04:	e8 77 b2 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8f09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8f0d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f11:	c9                   	leave
    8f12:	c3                   	ret
    8f13:	90                   	nop

0000000000008f14 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f14:	55                   	push   %rbp
    8f15:	48 89 e5             	mov    %rsp,%rbp
    8f18:	53                   	push   %rbx
    8f19:	48 83 ec 28          	sub    $0x28,%rsp
    8f1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8f29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f31:	48 89 d6             	mov    %rdx,%rsi
    8f34:	48 89 c7             	mov    %rax,%rdi
    8f37:	e8 00 0f 00 00       	call   9e3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8f3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f44:	48 89 d6             	mov    %rdx,%rsi
    8f47:	48 89 c7             	mov    %rax,%rdi
    8f4a:	e8 1f 0f 00 00       	call   9e6e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    8f4f:	eb 1a                	jmp    8f6b <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    8f51:	48 89 c3             	mov    %rax,%rbx
    8f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f58:	48 89 c7             	mov    %rax,%rdi
    8f5b:	e8 2c ed ff ff       	call   7c8c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8f60:	48 89 d8             	mov    %rbx,%rax
    8f63:	48 89 c7             	mov    %rax,%rdi
    8f66:	e8 85 b7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    8f6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f6f:	c9                   	leave
    8f70:	c3                   	ret
    8f71:	90                   	nop

0000000000008f72 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8f72:	55                   	push   %rbp
    8f73:	48 89 e5             	mov    %rsp,%rbp
    8f76:	48 83 ec 10          	sub    $0x10,%rsp
    8f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f86:	48 89 c7             	mov    %rax,%rdi
    8f89:	e8 24 00 00 00       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8f8e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f95:	48 8b 00             	mov    (%rax),%rax
    8f98:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f9c:	48 89 ce             	mov    %rcx,%rsi
    8f9f:	48 89 c7             	mov    %rax,%rdi
    8fa2:	e8 1d 0f 00 00       	call   9ec4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8fa7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8fab:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8faf:	90                   	nop
    8fb0:	c9                   	leave
    8fb1:	c3                   	ret

0000000000008fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8fb2:	55                   	push   %rbp
    8fb3:	48 89 e5             	mov    %rsp,%rbp
    8fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fbe:	5d                   	pop    %rbp
    8fbf:	c3                   	ret

0000000000008fc0 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8fc0:	55                   	push   %rbp
    8fc1:	48 89 e5             	mov    %rsp,%rbp
    8fc4:	48 83 ec 10          	sub    $0x10,%rsp
    8fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8fd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd8:	48 89 d6             	mov    %rdx,%rsi
    8fdb:	48 89 c7             	mov    %rax,%rdi
    8fde:	e8 0b 0f 00 00       	call   9eee <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    8fe3:	90                   	nop
    8fe4:	c9                   	leave
    8fe5:	c3                   	ret

0000000000008fe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8fe6:	55                   	push   %rbp
    8fe7:	48 89 e5             	mov    %rsp,%rbp
    8fea:	48 83 ec 20          	sub    $0x20,%rsp
    8fee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ff2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ff6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8ffa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8fff:	74 17                	je     9018 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9005:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9009:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    900d:	48 89 ce             	mov    %rcx,%rsi
    9010:	48 89 c7             	mov    %rax,%rdi
    9013:	e8 e5 0e 00 00       	call   9efd <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    9018:	90                   	nop
    9019:	c9                   	leave
    901a:	c3                   	ret
    901b:	90                   	nop

000000000000901c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    901c:	55                   	push   %rbp
    901d:	48 89 e5             	mov    %rsp,%rbp
    9020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9024:	90                   	nop
    9025:	5d                   	pop    %rbp
    9026:	c3                   	ret
    9027:	90                   	nop

0000000000009028 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9028:	55                   	push   %rbp
    9029:	48 89 e5             	mov    %rsp,%rbp
    902c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9030:	90                   	nop
    9031:	5d                   	pop    %rbp
    9032:	c3                   	ret

0000000000009033 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9033:	55                   	push   %rbp
    9034:	48 89 e5             	mov    %rsp,%rbp
    9037:	53                   	push   %rbx
    9038:	48 83 ec 28          	sub    $0x28,%rsp
    903c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9040:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9044:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9048:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    904c:	48 89 d6             	mov    %rdx,%rsi
    904f:	48 89 c7             	mov    %rax,%rdi
    9052:	e8 25 01 00 00       	call   917c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9057:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    905b:	48 89 c7             	mov    %rax,%rdi
    905e:	e8 c8 0e 00 00       	call   9f2b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    9063:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9067:	0f 92 c3             	setb   %bl
    906a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    906e:	48 89 c7             	mov    %rax,%rdi
    9071:	e8 ee f0 ff ff       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9076:	84 db                	test   %bl,%bl
    9078:	74 0f                	je     9089 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    907a:	48 8d 05 3f 00 01 00 	lea    0x1003f(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9081:	48 89 c7             	mov    %rax,%rdi
    9084:	e8 f7 b0 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9089:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    908d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9091:	c9                   	leave
    9092:	c3                   	ret
    9093:	90                   	nop

0000000000009094 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9094:	55                   	push   %rbp
    9095:	48 89 e5             	mov    %rsp,%rbp
    9098:	53                   	push   %rbx
    9099:	48 83 ec 28          	sub    $0x28,%rsp
    909d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    90a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    90b1:	48 89 d6             	mov    %rdx,%rsi
    90b4:	48 89 c7             	mov    %rax,%rdi
    90b7:	e8 b2 0e 00 00       	call   9f6e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    90bc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    90c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90c4:	48 89 d6             	mov    %rdx,%rsi
    90c7:	48 89 c7             	mov    %rax,%rdi
    90ca:	e8 d1 0e 00 00       	call   9fa0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    90cf:	eb 1a                	jmp    90eb <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    90d1:	48 89 c3             	mov    %rax,%rbx
    90d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90d8:	48 89 c7             	mov    %rax,%rdi
    90db:	e8 c8 eb ff ff       	call   7ca8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    90e0:	48 89 d8             	mov    %rbx,%rax
    90e3:	48 89 c7             	mov    %rax,%rdi
    90e6:	e8 05 b6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    90eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90ef:	c9                   	leave
    90f0:	c3                   	ret
    90f1:	90                   	nop

00000000000090f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    90f2:	55                   	push   %rbp
    90f3:	48 89 e5             	mov    %rsp,%rbp
    90f6:	48 83 ec 10          	sub    $0x10,%rsp
    90fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9106:	48 89 c7             	mov    %rax,%rdi
    9109:	e8 24 00 00 00       	call   9132 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    910e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9115:	48 8b 00             	mov    (%rax),%rax
    9118:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    911c:	48 89 ce             	mov    %rcx,%rsi
    911f:	48 89 c7             	mov    %rax,%rdi
    9122:	e8 cf 0e 00 00       	call   9ff6 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9127:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    912b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    912f:	90                   	nop
    9130:	c9                   	leave
    9131:	c3                   	ret

0000000000009132 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9132:	55                   	push   %rbp
    9133:	48 89 e5             	mov    %rsp,%rbp
    9136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    913a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    913e:	5d                   	pop    %rbp
    913f:	c3                   	ret

0000000000009140 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9140:	55                   	push   %rbp
    9141:	48 89 e5             	mov    %rsp,%rbp
    9144:	48 83 ec 20          	sub    $0x20,%rsp
    9148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    914c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9150:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9154:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    915c:	48 89 d6             	mov    %rdx,%rsi
    915f:	48 89 c7             	mov    %rax,%rdi
    9162:	e8 b8 0e 00 00       	call   a01f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9167:	90                   	nop
    9168:	c9                   	leave
    9169:	c3                   	ret

000000000000916a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    916a:	55                   	push   %rbp
    916b:	48 89 e5             	mov    %rsp,%rbp
    916e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9176:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    917a:	5d                   	pop    %rbp
    917b:	c3                   	ret

000000000000917c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    917c:	55                   	push   %rbp
    917d:	48 89 e5             	mov    %rsp,%rbp
    9180:	48 83 ec 10          	sub    $0x10,%rsp
    9184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9188:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    918c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9194:	48 89 d6             	mov    %rdx,%rsi
    9197:	48 89 c7             	mov    %rax,%rdi
    919a:	e8 a7 0e 00 00       	call   a046 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    919f:	90                   	nop
    91a0:	c9                   	leave
    91a1:	c3                   	ret

00000000000091a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    91a2:	55                   	push   %rbp
    91a3:	48 89 e5             	mov    %rsp,%rbp
    91a6:	48 83 ec 20          	sub    $0x20,%rsp
    91aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    91b6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    91bb:	74 17                	je     91d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    91bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91c9:	48 89 ce             	mov    %rcx,%rsi
    91cc:	48 89 c7             	mov    %rax,%rdi
    91cf:	e8 81 0e 00 00       	call   a055 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    91d4:	90                   	nop
    91d5:	c9                   	leave
    91d6:	c3                   	ret
    91d7:	90                   	nop

00000000000091d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    91d8:	55                   	push   %rbp
    91d9:	48 89 e5             	mov    %rsp,%rbp
    91dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91e0:	90                   	nop
    91e1:	5d                   	pop    %rbp
    91e2:	c3                   	ret
    91e3:	90                   	nop

00000000000091e4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    91e4:	55                   	push   %rbp
    91e5:	48 89 e5             	mov    %rsp,%rbp
    91e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91ec:	90                   	nop
    91ed:	5d                   	pop    %rbp
    91ee:	c3                   	ret

00000000000091ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    91ef:	55                   	push   %rbp
    91f0:	48 89 e5             	mov    %rsp,%rbp
    91f3:	53                   	push   %rbx
    91f4:	48 83 ec 28          	sub    $0x28,%rsp
    91f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    91fc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9200:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9204:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9208:	48 89 d6             	mov    %rdx,%rsi
    920b:	48 89 c7             	mov    %rax,%rdi
    920e:	e8 25 01 00 00       	call   9338 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9213:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9217:	48 89 c7             	mov    %rax,%rdi
    921a:	e8 64 0e 00 00       	call   a083 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    921f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9223:	0f 92 c3             	setb   %bl
    9226:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    922a:	48 89 c7             	mov    %rax,%rdi
    922d:	e8 96 f0 ff ff       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9232:	84 db                	test   %bl,%bl
    9234:	74 0f                	je     9245 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9236:	48 8d 05 83 fe 00 00 	lea    0xfe83(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    923d:	48 89 c7             	mov    %rax,%rdi
    9240:	e8 3b af ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9245:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9249:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    924d:	c9                   	leave
    924e:	c3                   	ret
    924f:	90                   	nop

0000000000009250 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9250:	55                   	push   %rbp
    9251:	48 89 e5             	mov    %rsp,%rbp
    9254:	53                   	push   %rbx
    9255:	48 83 ec 28          	sub    $0x28,%rsp
    9259:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    925d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9261:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9269:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    926d:	48 89 d6             	mov    %rdx,%rsi
    9270:	48 89 c7             	mov    %rax,%rdi
    9273:	e8 4e 0e 00 00       	call   a0c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9278:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    927c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9280:	48 89 d6             	mov    %rdx,%rsi
    9283:	48 89 c7             	mov    %rax,%rdi
    9286:	e8 6d 0e 00 00       	call   a0f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    928b:	eb 1a                	jmp    92a7 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    928d:	48 89 c3             	mov    %rax,%rbx
    9290:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9294:	48 89 c7             	mov    %rax,%rdi
    9297:	e8 28 ea ff ff       	call   7cc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    929c:	48 89 d8             	mov    %rbx,%rax
    929f:	48 89 c7             	mov    %rax,%rdi
    92a2:	e8 49 b4 ff ff       	call   46f0 <_Unwind_Resume@plt>
    92a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92ab:	c9                   	leave
    92ac:	c3                   	ret
    92ad:	90                   	nop

00000000000092ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    92ae:	55                   	push   %rbp
    92af:	48 89 e5             	mov    %rsp,%rbp
    92b2:	48 83 ec 10          	sub    $0x10,%rsp
    92b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    92be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92c2:	48 89 c7             	mov    %rax,%rdi
    92c5:	e8 24 00 00 00       	call   92ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    92ca:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    92cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d1:	48 8b 00             	mov    (%rax),%rax
    92d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    92d8:	48 89 ce             	mov    %rcx,%rsi
    92db:	48 89 c7             	mov    %rax,%rdi
    92de:	e8 75 0e 00 00       	call   a158 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    92e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92e7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    92eb:	90                   	nop
    92ec:	c9                   	leave
    92ed:	c3                   	ret

00000000000092ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    92ee:	55                   	push   %rbp
    92ef:	48 89 e5             	mov    %rsp,%rbp
    92f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    92f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92fa:	5d                   	pop    %rbp
    92fb:	c3                   	ret

00000000000092fc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    92fc:	55                   	push   %rbp
    92fd:	48 89 e5             	mov    %rsp,%rbp
    9300:	48 83 ec 20          	sub    $0x20,%rsp
    9304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    930c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9310:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9318:	48 89 d6             	mov    %rdx,%rsi
    931b:	48 89 c7             	mov    %rax,%rdi
    931e:	e8 5e 0e 00 00       	call   a181 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    9323:	90                   	nop
    9324:	c9                   	leave
    9325:	c3                   	ret

0000000000009326 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9326:	55                   	push   %rbp
    9327:	48 89 e5             	mov    %rsp,%rbp
    932a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    932e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9332:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9336:	5d                   	pop    %rbp
    9337:	c3                   	ret

0000000000009338 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9338:	55                   	push   %rbp
    9339:	48 89 e5             	mov    %rsp,%rbp
    933c:	48 83 ec 10          	sub    $0x10,%rsp
    9340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9348:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    934c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9350:	48 89 d6             	mov    %rdx,%rsi
    9353:	48 89 c7             	mov    %rax,%rdi
    9356:	e8 4d 0e 00 00       	call   a1a8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    935b:	90                   	nop
    935c:	c9                   	leave
    935d:	c3                   	ret

000000000000935e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    935e:	55                   	push   %rbp
    935f:	48 89 e5             	mov    %rsp,%rbp
    9362:	48 83 ec 20          	sub    $0x20,%rsp
    9366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    936a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    936e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9372:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9377:	74 17                	je     9390 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    937d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9381:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9385:	48 89 ce             	mov    %rcx,%rsi
    9388:	48 89 c7             	mov    %rax,%rdi
    938b:	e8 27 0e 00 00       	call   a1b7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    9390:	90                   	nop
    9391:	c9                   	leave
    9392:	c3                   	ret
    9393:	90                   	nop

0000000000009394 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9394:	55                   	push   %rbp
    9395:	48 89 e5             	mov    %rsp,%rbp
    9398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    939c:	90                   	nop
    939d:	5d                   	pop    %rbp
    939e:	c3                   	ret
    939f:	90                   	nop

00000000000093a0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    93a0:	55                   	push   %rbp
    93a1:	48 89 e5             	mov    %rsp,%rbp
    93a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93a8:	90                   	nop
    93a9:	5d                   	pop    %rbp
    93aa:	c3                   	ret

00000000000093ab <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    93ab:	55                   	push   %rbp
    93ac:	48 89 e5             	mov    %rsp,%rbp
    93af:	53                   	push   %rbx
    93b0:	48 83 ec 28          	sub    $0x28,%rsp
    93b4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    93b8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    93bc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    93c0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93c4:	48 89 d6             	mov    %rdx,%rsi
    93c7:	48 89 c7             	mov    %rax,%rdi
    93ca:	e8 d7 01 00 00       	call   95a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    93cf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93d3:	48 89 c7             	mov    %rax,%rdi
    93d6:	e8 0a 0e 00 00       	call   a1e5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    93db:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    93df:	0f 92 c3             	setb   %bl
    93e2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93e6:	48 89 c7             	mov    %rax,%rdi
    93e9:	e8 76 f0 ff ff       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    93ee:	84 db                	test   %bl,%bl
    93f0:	74 0f                	je     9401 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    93f2:	48 8d 05 c7 fc 00 00 	lea    0xfcc7(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    93f9:	48 89 c7             	mov    %rax,%rdi
    93fc:	e8 7f ad ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9401:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9405:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9409:	c9                   	leave
    940a:	c3                   	ret
    940b:	90                   	nop

000000000000940c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    940c:	55                   	push   %rbp
    940d:	48 89 e5             	mov    %rsp,%rbp
    9410:	53                   	push   %rbx
    9411:	48 83 ec 28          	sub    $0x28,%rsp
    9415:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9419:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    941d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9425:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9429:	48 89 d6             	mov    %rdx,%rsi
    942c:	48 89 c7             	mov    %rax,%rdi
    942f:	e8 f4 0d 00 00       	call   a228 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    9434:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    943c:	48 89 d6             	mov    %rdx,%rsi
    943f:	48 89 c7             	mov    %rax,%rdi
    9442:	e8 13 0e 00 00       	call   a25a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    9447:	eb 1a                	jmp    9463 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    9449:	48 89 c3             	mov    %rax,%rbx
    944c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9450:	48 89 c7             	mov    %rax,%rdi
    9453:	e8 88 e8 ff ff       	call   7ce0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9458:	48 89 d8             	mov    %rbx,%rax
    945b:	48 89 c7             	mov    %rax,%rdi
    945e:	e8 8d b2 ff ff       	call   46f0 <_Unwind_Resume@plt>
    9463:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9467:	c9                   	leave
    9468:	c3                   	ret
    9469:	90                   	nop

000000000000946a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    946a:	55                   	push   %rbp
    946b:	48 89 e5             	mov    %rsp,%rbp
    946e:	48 83 ec 10          	sub    $0x10,%rsp
    9472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    947a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947e:	48 89 c7             	mov    %rax,%rdi
    9481:	e8 24 00 00 00       	call   94aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9486:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948d:	48 8b 00             	mov    (%rax),%rax
    9490:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9494:	48 89 ce             	mov    %rcx,%rsi
    9497:	48 89 c7             	mov    %rax,%rdi
    949a:	e8 1c 0e 00 00       	call   a2bb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    949f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    94a3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    94a7:	90                   	nop
    94a8:	c9                   	leave
    94a9:	c3                   	ret

00000000000094aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    94aa:	55                   	push   %rbp
    94ab:	48 89 e5             	mov    %rsp,%rbp
    94ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    94b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b6:	5d                   	pop    %rbp
    94b7:	c3                   	ret

00000000000094b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    94b8:	55                   	push   %rbp
    94b9:	48 89 e5             	mov    %rsp,%rbp
    94bc:	48 83 ec 20          	sub    $0x20,%rsp
    94c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    94cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d4:	48 89 d6             	mov    %rdx,%rsi
    94d7:	48 89 c7             	mov    %rax,%rdi
    94da:	e8 05 0e 00 00       	call   a2e4 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    94df:	90                   	nop
    94e0:	c9                   	leave
    94e1:	c3                   	ret

00000000000094e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    94e2:	55                   	push   %rbp
    94e3:	48 89 e5             	mov    %rsp,%rbp
    94e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    94ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94f2:	48 8b 10             	mov    (%rax),%rdx
    94f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f9:	48 89 10             	mov    %rdx,(%rax)
    94fc:	90                   	nop
    94fd:	5d                   	pop    %rbp
    94fe:	c3                   	ret
    94ff:	90                   	nop

0000000000009500 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    9500:	55                   	push   %rbp
    9501:	48 89 e5             	mov    %rsp,%rbp
    9504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    950c:	5d                   	pop    %rbp
    950d:	c3                   	ret

000000000000950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    950e:	55                   	push   %rbp
    950f:	48 89 e5             	mov    %rsp,%rbp
    9512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    951a:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    951e:	5d                   	pop    %rbp
    951f:	c3                   	ret

0000000000009520 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    9520:	55                   	push   %rbp
    9521:	48 89 e5             	mov    %rsp,%rbp
    9524:	48 83 ec 10          	sub    $0x10,%rsp
    9528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    952c:	e8 4d b5 ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
    9531:	84 c0                	test   %al,%al
    9533:	74 1a                	je     954f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9539:	48 89 c7             	mov    %rax,%rdi
    953c:	e8 cd ff ff ff       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    9541:	83 f0 01             	xor    $0x1,%eax
    9544:	84 c0                	test   %al,%al
    9546:	74 07                	je     954f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9548:	b8 01 00 00 00       	mov    $0x1,%eax
    954d:	eb 05                	jmp    9554 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    954f:	b8 00 00 00 00       	mov    $0x0,%eax
    9554:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    9556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    955a:	48 89 c7             	mov    %rax,%rdi
    955d:	e8 a8 0d 00 00       	call   a30a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    9562:	c9                   	leave
    9563:	c3                   	ret

0000000000009564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9564:	55                   	push   %rbp
    9565:	48 89 e5             	mov    %rsp,%rbp
    9568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    956c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9570:	5d                   	pop    %rbp
    9571:	c3                   	ret

0000000000009572 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    9572:	55                   	push   %rbp
    9573:	48 89 e5             	mov    %rsp,%rbp
    9576:	53                   	push   %rbx
    9577:	48 83 ec 18          	sub    $0x18,%rsp
    957b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    957f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    9583:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9587:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    958b:	48 89 c7             	mov    %rax,%rdi
    958e:	e8 d1 ff ff ff       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9593:	48 89 c6             	mov    %rax,%rsi
    9596:	48 89 df             	mov    %rbx,%rdi
    9599:	e8 7a 0d 00 00       	call   a318 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    959e:	90                   	nop
    959f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95a3:	c9                   	leave
    95a4:	c3                   	ret
    95a5:	90                   	nop

00000000000095a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    95a6:	55                   	push   %rbp
    95a7:	48 89 e5             	mov    %rsp,%rbp
    95aa:	48 83 ec 10          	sub    $0x10,%rsp
    95ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    95b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    95ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95be:	48 89 d6             	mov    %rdx,%rsi
    95c1:	48 89 c7             	mov    %rax,%rdi
    95c4:	e8 95 0d 00 00       	call   a35e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    95c9:	90                   	nop
    95ca:	c9                   	leave
    95cb:	c3                   	ret

00000000000095cc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    95cc:	55                   	push   %rbp
    95cd:	48 89 e5             	mov    %rsp,%rbp
    95d0:	48 83 ec 20          	sub    $0x20,%rsp
    95d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    95dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    95e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    95e5:	74 17                	je     95fe <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    95e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    95ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95f3:	48 89 ce             	mov    %rcx,%rsi
    95f6:	48 89 c7             	mov    %rax,%rdi
    95f9:	e8 6f 0d 00 00       	call   a36d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    95fe:	90                   	nop
    95ff:	c9                   	leave
    9600:	c3                   	ret
    9601:	90                   	nop

0000000000009602 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9602:	55                   	push   %rbp
    9603:	48 89 e5             	mov    %rsp,%rbp
    9606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    960a:	90                   	nop
    960b:	5d                   	pop    %rbp
    960c:	c3                   	ret
    960d:	90                   	nop

000000000000960e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    960e:	55                   	push   %rbp
    960f:	48 89 e5             	mov    %rsp,%rbp
    9612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9616:	90                   	nop
    9617:	5d                   	pop    %rbp
    9618:	c3                   	ret

0000000000009619 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9619:	55                   	push   %rbp
    961a:	48 89 e5             	mov    %rsp,%rbp
    961d:	53                   	push   %rbx
    961e:	48 83 ec 28          	sub    $0x28,%rsp
    9622:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9626:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    962a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    962e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9632:	48 89 d6             	mov    %rdx,%rsi
    9635:	48 89 c7             	mov    %rax,%rdi
    9638:	e8 25 01 00 00       	call   9762 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    963d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9641:	48 89 c7             	mov    %rax,%rdi
    9644:	e8 52 0d 00 00       	call   a39b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    9649:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    964d:	0f 92 c3             	setb   %bl
    9650:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9654:	48 89 c7             	mov    %rax,%rdi
    9657:	e8 b8 f0 ff ff       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    965c:	84 db                	test   %bl,%bl
    965e:	74 0f                	je     966f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9660:	48 8d 05 59 fa 00 00 	lea    0xfa59(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9667:	48 89 c7             	mov    %rax,%rdi
    966a:	e8 11 ab ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    966f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9673:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9677:	c9                   	leave
    9678:	c3                   	ret
    9679:	90                   	nop

000000000000967a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    967a:	55                   	push   %rbp
    967b:	48 89 e5             	mov    %rsp,%rbp
    967e:	53                   	push   %rbx
    967f:	48 83 ec 28          	sub    $0x28,%rsp
    9683:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9687:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    968b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    968f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9693:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9697:	48 89 d6             	mov    %rdx,%rsi
    969a:	48 89 c7             	mov    %rax,%rdi
    969d:	e8 3c 0d 00 00       	call   a3de <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    96a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    96a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96aa:	48 89 d6             	mov    %rdx,%rsi
    96ad:	48 89 c7             	mov    %rax,%rdi
    96b0:	e8 5b 0d 00 00       	call   a410 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    96b5:	eb 1a                	jmp    96d1 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    96b7:	48 89 c3             	mov    %rax,%rbx
    96ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96be:	48 89 c7             	mov    %rax,%rdi
    96c1:	e8 36 e6 ff ff       	call   7cfc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    96c6:	48 89 d8             	mov    %rbx,%rax
    96c9:	48 89 c7             	mov    %rax,%rdi
    96cc:	e8 1f b0 ff ff       	call   46f0 <_Unwind_Resume@plt>
    96d1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    96d5:	c9                   	leave
    96d6:	c3                   	ret
    96d7:	90                   	nop

00000000000096d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    96d8:	55                   	push   %rbp
    96d9:	48 89 e5             	mov    %rsp,%rbp
    96dc:	48 83 ec 10          	sub    $0x10,%rsp
    96e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    96e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ec:	48 89 c7             	mov    %rax,%rdi
    96ef:	e8 24 00 00 00       	call   9718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    96f4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    96f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96fb:	48 8b 00             	mov    (%rax),%rax
    96fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9702:	48 89 ce             	mov    %rcx,%rsi
    9705:	48 89 c7             	mov    %rax,%rdi
    9708:	e8 59 0d 00 00       	call   a466 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    970d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9711:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9715:	90                   	nop
    9716:	c9                   	leave
    9717:	c3                   	ret

0000000000009718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9718:	55                   	push   %rbp
    9719:	48 89 e5             	mov    %rsp,%rbp
    971c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9724:	5d                   	pop    %rbp
    9725:	c3                   	ret

0000000000009726 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9726:	55                   	push   %rbp
    9727:	48 89 e5             	mov    %rsp,%rbp
    972a:	48 83 ec 20          	sub    $0x20,%rsp
    972e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9732:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9736:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    973a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    973e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9742:	48 89 d6             	mov    %rdx,%rsi
    9745:	48 89 c7             	mov    %rax,%rdi
    9748:	e8 42 0d 00 00       	call   a48f <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    974d:	90                   	nop
    974e:	c9                   	leave
    974f:	c3                   	ret

0000000000009750 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9750:	55                   	push   %rbp
    9751:	48 89 e5             	mov    %rsp,%rbp
    9754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    975c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9760:	5d                   	pop    %rbp
    9761:	c3                   	ret

0000000000009762 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9762:	55                   	push   %rbp
    9763:	48 89 e5             	mov    %rsp,%rbp
    9766:	48 83 ec 10          	sub    $0x10,%rsp
    976a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    976e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9772:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    977a:	48 89 d6             	mov    %rdx,%rsi
    977d:	48 89 c7             	mov    %rax,%rdi
    9780:	e8 31 0d 00 00       	call   a4b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    9785:	90                   	nop
    9786:	c9                   	leave
    9787:	c3                   	ret

0000000000009788 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9788:	55                   	push   %rbp
    9789:	48 89 e5             	mov    %rsp,%rbp
    978c:	48 83 ec 20          	sub    $0x20,%rsp
    9790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9794:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9798:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    979c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    97a1:	74 17                	je     97ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    97a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    97ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    97af:	48 89 ce             	mov    %rcx,%rsi
    97b2:	48 89 c7             	mov    %rax,%rdi
    97b5:	e8 0b 0d 00 00       	call   a4c5 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    97ba:	90                   	nop
    97bb:	c9                   	leave
    97bc:	c3                   	ret
    97bd:	90                   	nop

00000000000097be <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    97be:	55                   	push   %rbp
    97bf:	48 89 e5             	mov    %rsp,%rbp
    97c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97c6:	90                   	nop
    97c7:	5d                   	pop    %rbp
    97c8:	c3                   	ret
    97c9:	90                   	nop

00000000000097ca <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    97ca:	55                   	push   %rbp
    97cb:	48 89 e5             	mov    %rsp,%rbp
    97ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97d2:	90                   	nop
    97d3:	5d                   	pop    %rbp
    97d4:	c3                   	ret

00000000000097d5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    97d5:	55                   	push   %rbp
    97d6:	48 89 e5             	mov    %rsp,%rbp
    97d9:	53                   	push   %rbx
    97da:	48 83 ec 28          	sub    $0x28,%rsp
    97de:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    97e2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    97e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    97ea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    97ee:	48 89 d6             	mov    %rdx,%rsi
    97f1:	48 89 c7             	mov    %rax,%rdi
    97f4:	e8 25 01 00 00       	call   991e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    97f9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    97fd:	48 89 c7             	mov    %rax,%rdi
    9800:	e8 ee 0c 00 00       	call   a4f3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    9805:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9809:	0f 92 c3             	setb   %bl
    980c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9810:	48 89 c7             	mov    %rax,%rdi
    9813:	e8 60 f0 ff ff       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
    9818:	84 db                	test   %bl,%bl
    981a:	74 0f                	je     982b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    981c:	48 8d 05 9d f8 00 00 	lea    0xf89d(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9823:	48 89 c7             	mov    %rax,%rdi
    9826:	e8 55 a9 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    982b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    982f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9833:	c9                   	leave
    9834:	c3                   	ret
    9835:	90                   	nop

0000000000009836 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9836:	55                   	push   %rbp
    9837:	48 89 e5             	mov    %rsp,%rbp
    983a:	53                   	push   %rbx
    983b:	48 83 ec 28          	sub    $0x28,%rsp
    983f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9843:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9847:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    984b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    984f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9853:	48 89 d6             	mov    %rdx,%rsi
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 d8 0c 00 00       	call   a536 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    985e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9862:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9866:	48 89 d6             	mov    %rdx,%rsi
    9869:	48 89 c7             	mov    %rax,%rdi
    986c:	e8 f7 0c 00 00       	call   a568 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    9871:	eb 1a                	jmp    988d <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    9873:	48 89 c3             	mov    %rax,%rbx
    9876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    987a:	48 89 c7             	mov    %rax,%rdi
    987d:	e8 96 e4 ff ff       	call   7d18 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    9882:	48 89 d8             	mov    %rbx,%rax
    9885:	48 89 c7             	mov    %rax,%rdi
    9888:	e8 63 ae ff ff       	call   46f0 <_Unwind_Resume@plt>
    988d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9891:	c9                   	leave
    9892:	c3                   	ret
    9893:	90                   	nop

0000000000009894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9894:	55                   	push   %rbp
    9895:	48 89 e5             	mov    %rsp,%rbp
    9898:	48 83 ec 10          	sub    $0x10,%rsp
    989c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    98a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98a8:	48 89 c7             	mov    %rax,%rdi
    98ab:	e8 24 00 00 00       	call   98d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    98b0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    98b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98b7:	48 8b 00             	mov    (%rax),%rax
    98ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    98be:	48 89 ce             	mov    %rcx,%rsi
    98c1:	48 89 c7             	mov    %rax,%rdi
    98c4:	e8 f5 0c 00 00       	call   a5be <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    98c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    98cd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    98d1:	90                   	nop
    98d2:	c9                   	leave
    98d3:	c3                   	ret

00000000000098d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    98d4:	55                   	push   %rbp
    98d5:	48 89 e5             	mov    %rsp,%rbp
    98d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    98dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e0:	5d                   	pop    %rbp
    98e1:	c3                   	ret

00000000000098e2 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    98e2:	55                   	push   %rbp
    98e3:	48 89 e5             	mov    %rsp,%rbp
    98e6:	48 83 ec 20          	sub    $0x20,%rsp
    98ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    98f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    98f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98fe:	48 89 d6             	mov    %rdx,%rsi
    9901:	48 89 c7             	mov    %rax,%rdi
    9904:	e8 de 0c 00 00       	call   a5e7 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9909:	90                   	nop
    990a:	c9                   	leave
    990b:	c3                   	ret

000000000000990c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    990c:	55                   	push   %rbp
    990d:	48 89 e5             	mov    %rsp,%rbp
    9910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9918:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    991c:	5d                   	pop    %rbp
    991d:	c3                   	ret

000000000000991e <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    991e:	55                   	push   %rbp
    991f:	48 89 e5             	mov    %rsp,%rbp
    9922:	48 83 ec 10          	sub    $0x10,%rsp
    9926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    992a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    992e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9936:	48 89 d6             	mov    %rdx,%rsi
    9939:	48 89 c7             	mov    %rax,%rdi
    993c:	e8 cd 0c 00 00       	call   a60e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    9941:	90                   	nop
    9942:	c9                   	leave
    9943:	c3                   	ret

0000000000009944 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9944:	55                   	push   %rbp
    9945:	48 89 e5             	mov    %rsp,%rbp
    9948:	48 83 ec 20          	sub    $0x20,%rsp
    994c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9950:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9954:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9958:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    995d:	74 17                	je     9976 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    995f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9963:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9967:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    996b:	48 89 ce             	mov    %rcx,%rsi
    996e:	48 89 c7             	mov    %rax,%rdi
    9971:	e8 a7 0c 00 00       	call   a61d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9976:	90                   	nop
    9977:	c9                   	leave
    9978:	c3                   	ret
    9979:	90                   	nop

000000000000997a <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    997a:	55                   	push   %rbp
    997b:	48 89 e5             	mov    %rsp,%rbp
    997e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9982:	90                   	nop
    9983:	5d                   	pop    %rbp
    9984:	c3                   	ret
    9985:	90                   	nop

0000000000009986 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9986:	55                   	push   %rbp
    9987:	48 89 e5             	mov    %rsp,%rbp
    998a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    998e:	90                   	nop
    998f:	5d                   	pop    %rbp
    9990:	c3                   	ret

0000000000009991 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9991:	55                   	push   %rbp
    9992:	48 89 e5             	mov    %rsp,%rbp
    9995:	53                   	push   %rbx
    9996:	48 83 ec 28          	sub    $0x28,%rsp
    999a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    999e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    99a2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    99a6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99aa:	48 89 d6             	mov    %rdx,%rsi
    99ad:	48 89 c7             	mov    %rax,%rdi
    99b0:	e8 25 01 00 00       	call   9ada <_ZNSaIP9VkImage_TEC1ERKS1_>
    99b5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99b9:	48 89 c7             	mov    %rax,%rdi
    99bc:	e8 8a 0c 00 00       	call   a64b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    99c1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    99c5:	0f 92 c3             	setb   %bl
    99c8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99cc:	48 89 c7             	mov    %rax,%rdi
    99cf:	e8 08 f0 ff ff       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
    99d4:	84 db                	test   %bl,%bl
    99d6:	74 0f                	je     99e7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    99d8:	48 8d 05 e1 f6 00 00 	lea    0xf6e1(%rip),%rax        # 190c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    99df:	48 89 c7             	mov    %rax,%rdi
    99e2:	e8 99 a7 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    99e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    99eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99ef:	c9                   	leave
    99f0:	c3                   	ret
    99f1:	90                   	nop

00000000000099f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    99f2:	55                   	push   %rbp
    99f3:	48 89 e5             	mov    %rsp,%rbp
    99f6:	53                   	push   %rbx
    99f7:	48 83 ec 28          	sub    $0x28,%rsp
    99fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9a07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9a0f:	48 89 d6             	mov    %rdx,%rsi
    9a12:	48 89 c7             	mov    %rax,%rdi
    9a15:	e8 74 0c 00 00       	call   a68e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9a1a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a22:	48 89 d6             	mov    %rdx,%rsi
    9a25:	48 89 c7             	mov    %rax,%rdi
    9a28:	e8 93 0c 00 00       	call   a6c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9a2d:	eb 1a                	jmp    9a49 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9a2f:	48 89 c3             	mov    %rax,%rbx
    9a32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a36:	48 89 c7             	mov    %rax,%rdi
    9a39:	e8 f6 e2 ff ff       	call   7d34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9a3e:	48 89 d8             	mov    %rbx,%rax
    9a41:	48 89 c7             	mov    %rax,%rdi
    9a44:	e8 a7 ac ff ff       	call   46f0 <_Unwind_Resume@plt>
    9a49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a4d:	c9                   	leave
    9a4e:	c3                   	ret
    9a4f:	90                   	nop

0000000000009a50 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9a50:	55                   	push   %rbp
    9a51:	48 89 e5             	mov    %rsp,%rbp
    9a54:	48 83 ec 10          	sub    $0x10,%rsp
    9a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a64:	48 89 c7             	mov    %rax,%rdi
    9a67:	e8 24 00 00 00       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9a6c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a73:	48 8b 00             	mov    (%rax),%rax
    9a76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a7a:	48 89 ce             	mov    %rcx,%rsi
    9a7d:	48 89 c7             	mov    %rax,%rdi
    9a80:	e8 91 0c 00 00       	call   a716 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9a85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a89:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9a8d:	90                   	nop
    9a8e:	c9                   	leave
    9a8f:	c3                   	ret

0000000000009a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9a90:	55                   	push   %rbp
    9a91:	48 89 e5             	mov    %rsp,%rbp
    9a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9c:	5d                   	pop    %rbp
    9a9d:	c3                   	ret

0000000000009a9e <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9a9e:	55                   	push   %rbp
    9a9f:	48 89 e5             	mov    %rsp,%rbp
    9aa2:	48 83 ec 20          	sub    $0x20,%rsp
    9aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9aae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9ab2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aba:	48 89 d6             	mov    %rdx,%rsi
    9abd:	48 89 c7             	mov    %rax,%rdi
    9ac0:	e8 7a 0c 00 00       	call   a73f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9ac5:	90                   	nop
    9ac6:	c9                   	leave
    9ac7:	c3                   	ret

0000000000009ac8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9ac8:	55                   	push   %rbp
    9ac9:	48 89 e5             	mov    %rsp,%rbp
    9acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9ad4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ad8:	5d                   	pop    %rbp
    9ad9:	c3                   	ret

0000000000009ada <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9ada:	55                   	push   %rbp
    9adb:	48 89 e5             	mov    %rsp,%rbp
    9ade:	48 83 ec 10          	sub    $0x10,%rsp
    9ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9aea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af2:	48 89 d6             	mov    %rdx,%rsi
    9af5:	48 89 c7             	mov    %rax,%rdi
    9af8:	e8 69 0c 00 00       	call   a766 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9afd:	90                   	nop
    9afe:	c9                   	leave
    9aff:	c3                   	ret

0000000000009b00 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9b00:	55                   	push   %rbp
    9b01:	48 89 e5             	mov    %rsp,%rbp
    9b04:	48 83 ec 20          	sub    $0x20,%rsp
    9b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9b14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9b19:	74 17                	je     9b32 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b27:	48 89 ce             	mov    %rcx,%rsi
    9b2a:	48 89 c7             	mov    %rax,%rdi
    9b2d:	e8 43 0c 00 00       	call   a775 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9b32:	90                   	nop
    9b33:	c9                   	leave
    9b34:	c3                   	ret

0000000000009b35 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9b35:	55                   	push   %rbp
    9b36:	48 89 e5             	mov    %rsp,%rbp
    9b39:	48 83 ec 20          	sub    $0x20,%rsp
    9b3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9b41:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9b48:	03 3f 00 
    9b4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b53:	48 89 c7             	mov    %rax,%rdi
    9b56:	e8 48 0c 00 00       	call   a7a3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9b5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9b5f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9b63:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9b67:	48 89 d6             	mov    %rdx,%rsi
    9b6a:	48 89 c7             	mov    %rax,%rdi
    9b6d:	e8 bb b7 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9b72:	48 8b 00             	mov    (%rax),%rax
      }
    9b75:	c9                   	leave
    9b76:	c3                   	ret
    9b77:	90                   	nop

0000000000009b78 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9b78:	55                   	push   %rbp
    9b79:	48 89 e5             	mov    %rsp,%rbp
    9b7c:	48 83 ec 10          	sub    $0x10,%rsp
    9b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9b88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b90:	48 89 d6             	mov    %rdx,%rsi
    9b93:	48 89 c7             	mov    %rax,%rdi
    9b96:	e8 e9 f0 ff ff       	call   8c84 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b9f:	48 89 c7             	mov    %rax,%rdi
    9ba2:	e8 17 0c 00 00       	call   a7be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9ba7:	90                   	nop
    9ba8:	c9                   	leave
    9ba9:	c3                   	ret

0000000000009baa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9baa:	55                   	push   %rbp
    9bab:	48 89 e5             	mov    %rsp,%rbp
    9bae:	48 83 ec 10          	sub    $0x10,%rsp
    9bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9bba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc2:	48 89 d6             	mov    %rdx,%rsi
    9bc5:	48 89 c7             	mov    %rax,%rdi
    9bc8:	e8 1f 0c 00 00       	call   a7ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9bcd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9bd1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd8:	48 8b 10             	mov    (%rax),%rdx
    9bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9be3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be7:	48 8b 08             	mov    (%rax),%rcx
    9bea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bee:	48 89 d0             	mov    %rdx,%rax
    9bf1:	48 c1 e0 06          	shl    $0x6,%rax
    9bf5:	48 01 d0             	add    %rdx,%rax
    9bf8:	48 c1 e0 03          	shl    $0x3,%rax
    9bfc:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c04:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9c08:	90                   	nop
    9c09:	c9                   	leave
    9c0a:	c3                   	ret

0000000000009c0b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9c0b:	55                   	push   %rbp
    9c0c:	48 89 e5             	mov    %rsp,%rbp
    9c0f:	48 83 ec 20          	sub    $0x20,%rsp
    9c13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9c1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c27:	48 89 d6             	mov    %rdx,%rsi
    9c2a:	48 89 c7             	mov    %rax,%rdi
    9c2d:	e8 ed 0b 00 00       	call   a81f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9c32:	c9                   	leave
    9c33:	c3                   	ret

0000000000009c34 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9c34:	55                   	push   %rbp
    9c35:	48 89 e5             	mov    %rsp,%rbp
    9c38:	48 83 ec 10          	sub    $0x10,%rsp
    9c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9c44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4c:	48 89 d6             	mov    %rdx,%rsi
    9c4f:	48 89 c7             	mov    %rax,%rdi
    9c52:	e8 f1 0b 00 00       	call   a848 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9c57:	90                   	nop
    9c58:	c9                   	leave
    9c59:	c3                   	ret

0000000000009c5a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9c5a:	55                   	push   %rbp
    9c5b:	48 89 e5             	mov    %rsp,%rbp
    9c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c66:	90                   	nop
    9c67:	5d                   	pop    %rbp
    9c68:	c3                   	ret

0000000000009c69 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9c69:	55                   	push   %rbp
    9c6a:	48 89 e5             	mov    %rsp,%rbp
    9c6d:	48 83 ec 20          	sub    $0x20,%rsp
    9c71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9c7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c89:	48 89 ce             	mov    %rcx,%rsi
    9c8c:	48 89 c7             	mov    %rax,%rdi
    9c8f:	e8 c4 0b 00 00       	call   a858 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9c94:	90                   	nop
    9c95:	c9                   	leave
    9c96:	c3                   	ret

0000000000009c97 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9c97:	55                   	push   %rbp
    9c98:	48 89 e5             	mov    %rsp,%rbp
    9c9b:	48 83 ec 20          	sub    $0x20,%rsp
    9c9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9ca3:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9caa:	07 7e 00 
    9cad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cb5:	48 89 c7             	mov    %rax,%rdi
    9cb8:	e8 d5 0b 00 00       	call   a892 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    9cbd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9cc1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9cc5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9cc9:	48 89 d6             	mov    %rdx,%rsi
    9ccc:	48 89 c7             	mov    %rax,%rdi
    9ccf:	e8 59 b6 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9cd4:	48 8b 00             	mov    (%rax),%rax
      }
    9cd7:	c9                   	leave
    9cd8:	c3                   	ret
    9cd9:	90                   	nop

0000000000009cda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9cda:	55                   	push   %rbp
    9cdb:	48 89 e5             	mov    %rsp,%rbp
    9cde:	48 83 ec 10          	sub    $0x10,%rsp
    9ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ce6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf2:	48 89 d6             	mov    %rdx,%rsi
    9cf5:	48 89 c7             	mov    %rax,%rdi
    9cf8:	e8 43 f1 ff ff       	call   8e40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d01:	48 89 c7             	mov    %rax,%rdi
    9d04:	e8 a3 0b 00 00       	call   a8ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9d09:	90                   	nop
    9d0a:	c9                   	leave
    9d0b:	c3                   	ret

0000000000009d0c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9d0c:	55                   	push   %rbp
    9d0d:	48 89 e5             	mov    %rsp,%rbp
    9d10:	48 83 ec 10          	sub    $0x10,%rsp
    9d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9d1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d24:	48 89 d6             	mov    %rdx,%rsi
    9d27:	48 89 c7             	mov    %rax,%rdi
    9d2a:	e8 ab 0b 00 00       	call   a8da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9d2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d33:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3a:	48 8b 10             	mov    (%rax),%rdx
    9d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d41:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d49:	48 8b 08             	mov    (%rax),%rcx
    9d4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d50:	48 89 d0             	mov    %rdx,%rax
    9d53:	48 c1 e0 06          	shl    $0x6,%rax
    9d57:	48 01 d0             	add    %rdx,%rax
    9d5a:	48 c1 e0 02          	shl    $0x2,%rax
    9d5e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d66:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9d6a:	90                   	nop
    9d6b:	c9                   	leave
    9d6c:	c3                   	ret

0000000000009d6d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9d6d:	55                   	push   %rbp
    9d6e:	48 89 e5             	mov    %rsp,%rbp
    9d71:	48 83 ec 20          	sub    $0x20,%rsp
    9d75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9d81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d89:	48 89 d6             	mov    %rdx,%rsi
    9d8c:	48 89 c7             	mov    %rax,%rdi
    9d8f:	e8 79 0b 00 00       	call   a90d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9d94:	c9                   	leave
    9d95:	c3                   	ret

0000000000009d96 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9d96:	55                   	push   %rbp
    9d97:	48 89 e5             	mov    %rsp,%rbp
    9d9a:	48 83 ec 10          	sub    $0x10,%rsp
    9d9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9da2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9da6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dae:	48 89 d6             	mov    %rdx,%rsi
    9db1:	48 89 c7             	mov    %rax,%rdi
    9db4:	e8 7d 0b 00 00       	call   a936 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9db9:	90                   	nop
    9dba:	c9                   	leave
    9dbb:	c3                   	ret

0000000000009dbc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9dbc:	55                   	push   %rbp
    9dbd:	48 89 e5             	mov    %rsp,%rbp
    9dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dc8:	90                   	nop
    9dc9:	5d                   	pop    %rbp
    9dca:	c3                   	ret

0000000000009dcb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9dcb:	55                   	push   %rbp
    9dcc:	48 89 e5             	mov    %rsp,%rbp
    9dcf:	48 83 ec 20          	sub    $0x20,%rsp
    9dd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ddb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9ddf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9de3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9deb:	48 89 ce             	mov    %rcx,%rsi
    9dee:	48 89 c7             	mov    %rax,%rdi
    9df1:	e8 50 0b 00 00       	call   a946 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9df6:	90                   	nop
    9df7:	c9                   	leave
    9df8:	c3                   	ret

0000000000009df9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9df9:	55                   	push   %rbp
    9dfa:	48 89 e5             	mov    %rsp,%rbp
    9dfd:	48 83 ec 20          	sub    $0x20,%rsp
    9e01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9e05:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9e0c:	ff ff 0f 
    9e0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9e13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e17:	48 89 c7             	mov    %rax,%rdi
    9e1a:	e8 61 0b 00 00       	call   a980 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9e1f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9e23:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9e27:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9e2b:	48 89 d6             	mov    %rdx,%rsi
    9e2e:	48 89 c7             	mov    %rax,%rdi
    9e31:	e8 f7 b4 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9e36:	48 8b 00             	mov    (%rax),%rax
      }
    9e39:	c9                   	leave
    9e3a:	c3                   	ret
    9e3b:	90                   	nop

0000000000009e3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e3c:	55                   	push   %rbp
    9e3d:	48 89 e5             	mov    %rsp,%rbp
    9e40:	48 83 ec 10          	sub    $0x10,%rsp
    9e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e54:	48 89 d6             	mov    %rdx,%rsi
    9e57:	48 89 c7             	mov    %rax,%rdi
    9e5a:	e8 61 f1 ff ff       	call   8fc0 <_ZNSaIPKcEC1ERKS1_>
    9e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e63:	48 89 c7             	mov    %rax,%rdi
    9e66:	e8 2f 0b 00 00       	call   a99a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9e6b:	90                   	nop
    9e6c:	c9                   	leave
    9e6d:	c3                   	ret

0000000000009e6e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9e6e:	55                   	push   %rbp
    9e6f:	48 89 e5             	mov    %rsp,%rbp
    9e72:	48 83 ec 10          	sub    $0x10,%rsp
    9e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9e7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e86:	48 89 d6             	mov    %rdx,%rsi
    9e89:	48 89 c7             	mov    %rax,%rdi
    9e8c:	e8 37 0b 00 00       	call   a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9e91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e95:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9c:	48 8b 10             	mov    (%rax),%rdx
    9e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eab:	48 8b 00             	mov    (%rax),%rax
    9eae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eb2:	48 c1 e2 03          	shl    $0x3,%rdx
    9eb6:	48 01 c2             	add    %rax,%rdx
    9eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ebd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ec1:	90                   	nop
    9ec2:	c9                   	leave
    9ec3:	c3                   	ret

0000000000009ec4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ec4:	55                   	push   %rbp
    9ec5:	48 89 e5             	mov    %rsp,%rbp
    9ec8:	48 83 ec 20          	sub    $0x20,%rsp
    9ecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ed0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ed4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9ed8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee0:	48 89 d6             	mov    %rdx,%rsi
    9ee3:	48 89 c7             	mov    %rax,%rdi
    9ee6:	e8 10 0b 00 00       	call   a9fb <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9eeb:	c9                   	leave
    9eec:	c3                   	ret
    9eed:	90                   	nop

0000000000009eee <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    9eee:	55                   	push   %rbp
    9eef:	48 89 e5             	mov    %rsp,%rbp
    9ef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ef6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9efa:	90                   	nop
    9efb:	5d                   	pop    %rbp
    9efc:	c3                   	ret

0000000000009efd <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9efd:	55                   	push   %rbp
    9efe:	48 89 e5             	mov    %rsp,%rbp
    9f01:	48 83 ec 20          	sub    $0x20,%rsp
    9f05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1d:	48 89 ce             	mov    %rcx,%rsi
    9f20:	48 89 c7             	mov    %rax,%rdi
    9f23:	e8 fc 0a 00 00       	call   aa24 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    9f28:	90                   	nop
    9f29:	c9                   	leave
    9f2a:	c3                   	ret

0000000000009f2b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f2b:	55                   	push   %rbp
    9f2c:	48 89 e5             	mov    %rsp,%rbp
    9f2f:	48 83 ec 20          	sub    $0x20,%rsp
    9f33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9f37:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9f3e:	ff ff 0f 
    9f41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f49:	48 89 c7             	mov    %rax,%rdi
    9f4c:	e8 04 0b 00 00       	call   aa55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    9f51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9f55:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9f59:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f5d:	48 89 d6             	mov    %rdx,%rsi
    9f60:	48 89 c7             	mov    %rax,%rdi
    9f63:	e8 c5 b3 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9f68:	48 8b 00             	mov    (%rax),%rax
      }
    9f6b:	c9                   	leave
    9f6c:	c3                   	ret
    9f6d:	90                   	nop

0000000000009f6e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9f6e:	55                   	push   %rbp
    9f6f:	48 89 e5             	mov    %rsp,%rbp
    9f72:	48 83 ec 10          	sub    $0x10,%rsp
    9f76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9f7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f86:	48 89 d6             	mov    %rdx,%rsi
    9f89:	48 89 c7             	mov    %rax,%rdi
    9f8c:	e8 eb f1 ff ff       	call   917c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f95:	48 89 c7             	mov    %rax,%rdi
    9f98:	e8 d3 0a 00 00       	call   aa70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9f9d:	90                   	nop
    9f9e:	c9                   	leave
    9f9f:	c3                   	ret

0000000000009fa0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9fa0:	55                   	push   %rbp
    9fa1:	48 89 e5             	mov    %rsp,%rbp
    9fa4:	48 83 ec 10          	sub    $0x10,%rsp
    9fa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9fb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb8:	48 89 d6             	mov    %rdx,%rsi
    9fbb:	48 89 c7             	mov    %rax,%rdi
    9fbe:	e8 db 0a 00 00       	call   aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    9fc3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fc7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fce:	48 8b 10             	mov    (%rax),%rdx
    9fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9fd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fdd:	48 8b 00             	mov    (%rax),%rax
    9fe0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fe4:	48 c1 e2 03          	shl    $0x3,%rdx
    9fe8:	48 01 c2             	add    %rax,%rdx
    9feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fef:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ff3:	90                   	nop
    9ff4:	c9                   	leave
    9ff5:	c3                   	ret

0000000000009ff6 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ff6:	55                   	push   %rbp
    9ff7:	48 89 e5             	mov    %rsp,%rbp
    9ffa:	48 83 ec 20          	sub    $0x20,%rsp
    9ffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a00a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a012:	48 89 d6             	mov    %rdx,%rsi
    a015:	48 89 c7             	mov    %rax,%rdi
    a018:	e8 b4 0a 00 00       	call   aad1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    a01d:	c9                   	leave
    a01e:	c3                   	ret

000000000000a01f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a01f:	55                   	push   %rbp
    a020:	48 89 e5             	mov    %rsp,%rbp
    a023:	48 83 ec 10          	sub    $0x10,%rsp
    a027:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a02b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a02f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a037:	48 89 d6             	mov    %rdx,%rsi
    a03a:	48 89 c7             	mov    %rax,%rdi
    a03d:	e8 b8 0a 00 00       	call   aafa <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    a042:	90                   	nop
    a043:	c9                   	leave
    a044:	c3                   	ret
    a045:	90                   	nop

000000000000a046 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    a046:	55                   	push   %rbp
    a047:	48 89 e5             	mov    %rsp,%rbp
    a04a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a04e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a052:	90                   	nop
    a053:	5d                   	pop    %rbp
    a054:	c3                   	ret

000000000000a055 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a055:	55                   	push   %rbp
    a056:	48 89 e5             	mov    %rsp,%rbp
    a059:	48 83 ec 20          	sub    $0x20,%rsp
    a05d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a061:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a065:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a069:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a06d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a075:	48 89 ce             	mov    %rcx,%rsi
    a078:	48 89 c7             	mov    %rax,%rdi
    a07b:	e8 8a 0a 00 00       	call   ab0a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    a080:	90                   	nop
    a081:	c9                   	leave
    a082:	c3                   	ret

000000000000a083 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a083:	55                   	push   %rbp
    a084:	48 89 e5             	mov    %rsp,%rbp
    a087:	48 83 ec 20          	sub    $0x20,%rsp
    a08b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a08f:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a096:	55 55 05 
    a099:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a09d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0a1:	48 89 c7             	mov    %rax,%rdi
    a0a4:	e8 92 0a 00 00       	call   ab3b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    a0a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a0ad:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a0b1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a0b5:	48 89 d6             	mov    %rdx,%rsi
    a0b8:	48 89 c7             	mov    %rax,%rdi
    a0bb:	e8 6d b2 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a0c0:	48 8b 00             	mov    (%rax),%rax
      }
    a0c3:	c9                   	leave
    a0c4:	c3                   	ret
    a0c5:	90                   	nop

000000000000a0c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a0c6:	55                   	push   %rbp
    a0c7:	48 89 e5             	mov    %rsp,%rbp
    a0ca:	48 83 ec 10          	sub    $0x10,%rsp
    a0ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a0d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0de:	48 89 d6             	mov    %rdx,%rsi
    a0e1:	48 89 c7             	mov    %rax,%rdi
    a0e4:	e8 4f f2 ff ff       	call   9338 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a0e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ed:	48 89 c7             	mov    %rax,%rdi
    a0f0:	e8 61 0a 00 00       	call   ab56 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a0f5:	90                   	nop
    a0f6:	c9                   	leave
    a0f7:	c3                   	ret

000000000000a0f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a0f8:	55                   	push   %rbp
    a0f9:	48 89 e5             	mov    %rsp,%rbp
    a0fc:	48 83 ec 10          	sub    $0x10,%rsp
    a100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a104:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a108:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a110:	48 89 d6             	mov    %rdx,%rsi
    a113:	48 89 c7             	mov    %rax,%rdi
    a116:	e8 69 0a 00 00       	call   ab84 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a11b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a11f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a126:	48 8b 10             	mov    (%rax),%rdx
    a129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a12d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a135:	48 8b 08             	mov    (%rax),%rcx
    a138:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a13c:	48 89 d0             	mov    %rdx,%rax
    a13f:	48 01 c0             	add    %rax,%rax
    a142:	48 01 d0             	add    %rdx,%rax
    a145:	48 c1 e0 03          	shl    $0x3,%rax
    a149:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a14d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a151:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a155:	90                   	nop
    a156:	c9                   	leave
    a157:	c3                   	ret

000000000000a158 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a158:	55                   	push   %rbp
    a159:	48 89 e5             	mov    %rsp,%rbp
    a15c:	48 83 ec 20          	sub    $0x20,%rsp
    a160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a168:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a16c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a174:	48 89 d6             	mov    %rdx,%rsi
    a177:	48 89 c7             	mov    %rax,%rdi
    a17a:	e8 38 0a 00 00       	call   abb7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a17f:	c9                   	leave
    a180:	c3                   	ret

000000000000a181 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a181:	55                   	push   %rbp
    a182:	48 89 e5             	mov    %rsp,%rbp
    a185:	48 83 ec 10          	sub    $0x10,%rsp
    a189:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a18d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a191:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a199:	48 89 d6             	mov    %rdx,%rsi
    a19c:	48 89 c7             	mov    %rax,%rdi
    a19f:	e8 3c 0a 00 00       	call   abe0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a1a4:	90                   	nop
    a1a5:	c9                   	leave
    a1a6:	c3                   	ret
    a1a7:	90                   	nop

000000000000a1a8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a1a8:	55                   	push   %rbp
    a1a9:	48 89 e5             	mov    %rsp,%rbp
    a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1b4:	90                   	nop
    a1b5:	5d                   	pop    %rbp
    a1b6:	c3                   	ret

000000000000a1b7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a1b7:	55                   	push   %rbp
    a1b8:	48 89 e5             	mov    %rsp,%rbp
    a1bb:	48 83 ec 20          	sub    $0x20,%rsp
    a1bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a1cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a1cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a1d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1d7:	48 89 ce             	mov    %rcx,%rsi
    a1da:	48 89 c7             	mov    %rax,%rdi
    a1dd:	e8 0e 0a 00 00       	call   abf0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a1e2:	90                   	nop
    a1e3:	c9                   	leave
    a1e4:	c3                   	ret

000000000000a1e5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a1e5:	55                   	push   %rbp
    a1e6:	48 89 e5             	mov    %rsp,%rbp
    a1e9:	48 83 ec 20          	sub    $0x20,%rsp
    a1ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a1f1:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a1f8:	49 92 04 
    a1fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a1ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a203:	48 89 c7             	mov    %rax,%rdi
    a206:	e8 1e 0a 00 00       	call   ac29 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a20b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a20f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a213:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a217:	48 89 d6             	mov    %rdx,%rsi
    a21a:	48 89 c7             	mov    %rax,%rdi
    a21d:	e8 0b b1 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a222:	48 8b 00             	mov    (%rax),%rax
      }
    a225:	c9                   	leave
    a226:	c3                   	ret
    a227:	90                   	nop

000000000000a228 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a228:	55                   	push   %rbp
    a229:	48 89 e5             	mov    %rsp,%rbp
    a22c:	48 83 ec 10          	sub    $0x10,%rsp
    a230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a238:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a240:	48 89 d6             	mov    %rdx,%rsi
    a243:	48 89 c7             	mov    %rax,%rdi
    a246:	e8 5b f3 ff ff       	call   95a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a24b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24f:	48 89 c7             	mov    %rax,%rdi
    a252:	e8 ed 09 00 00       	call   ac44 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a257:	90                   	nop
    a258:	c9                   	leave
    a259:	c3                   	ret

000000000000a25a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a25a:	55                   	push   %rbp
    a25b:	48 89 e5             	mov    %rsp,%rbp
    a25e:	48 83 ec 10          	sub    $0x10,%rsp
    a262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a266:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a26a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a272:	48 89 d6             	mov    %rdx,%rsi
    a275:	48 89 c7             	mov    %rax,%rdi
    a278:	e8 f5 09 00 00       	call   ac72 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a27d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a281:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a288:	48 8b 10             	mov    (%rax),%rdx
    a28b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a297:	48 8b 08             	mov    (%rax),%rcx
    a29a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a29e:	48 89 d0             	mov    %rdx,%rax
    a2a1:	48 c1 e0 03          	shl    $0x3,%rax
    a2a5:	48 29 d0             	sub    %rdx,%rax
    a2a8:	48 c1 e0 02          	shl    $0x2,%rax
    a2ac:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b4:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a2b8:	90                   	nop
    a2b9:	c9                   	leave
    a2ba:	c3                   	ret

000000000000a2bb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a2bb:	55                   	push   %rbp
    a2bc:	48 89 e5             	mov    %rsp,%rbp
    a2bf:	48 83 ec 20          	sub    $0x20,%rsp
    a2c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a2cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d7:	48 89 d6             	mov    %rdx,%rsi
    a2da:	48 89 c7             	mov    %rax,%rdi
    a2dd:	e8 c3 09 00 00       	call   aca5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a2e2:	c9                   	leave
    a2e3:	c3                   	ret

000000000000a2e4 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a2e4:	55                   	push   %rbp
    a2e5:	48 89 e5             	mov    %rsp,%rbp
    a2e8:	48 83 ec 10          	sub    $0x10,%rsp
    a2ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a2f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fc:	48 89 d6             	mov    %rdx,%rsi
    a2ff:	48 89 c7             	mov    %rax,%rdi
    a302:	e8 c7 09 00 00       	call   acce <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a307:	90                   	nop
    a308:	c9                   	leave
    a309:	c3                   	ret

000000000000a30a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a30a:	55                   	push   %rbp
    a30b:	48 89 e5             	mov    %rsp,%rbp
    a30e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a316:	5d                   	pop    %rbp
    a317:	c3                   	ret

000000000000a318 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a318:	55                   	push   %rbp
    a319:	48 89 e5             	mov    %rsp,%rbp
    a31c:	53                   	push   %rbx
    a31d:	48 83 ec 18          	sub    $0x18,%rsp
    a321:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a325:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a329:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a32d:	48 89 c7             	mov    %rax,%rdi
    a330:	e8 2f f2 ff ff       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a335:	48 89 c3             	mov    %rax,%rbx
    a338:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a33c:	48 89 c7             	mov    %rax,%rdi
    a33f:	e8 99 09 00 00       	call   acdd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a344:	48 89 de             	mov    %rbx,%rsi
    a347:	48 89 c7             	mov    %rax,%rdi
    a34a:	e8 9c 09 00 00       	call   aceb <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a34f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a353:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a357:	90                   	nop
    a358:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a35c:	c9                   	leave
    a35d:	c3                   	ret

000000000000a35e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a35e:	55                   	push   %rbp
    a35f:	48 89 e5             	mov    %rsp,%rbp
    a362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a36a:	90                   	nop
    a36b:	5d                   	pop    %rbp
    a36c:	c3                   	ret

000000000000a36d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a36d:	55                   	push   %rbp
    a36e:	48 89 e5             	mov    %rsp,%rbp
    a371:	48 83 ec 20          	sub    $0x20,%rsp
    a375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a379:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a37d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a381:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a385:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38d:	48 89 ce             	mov    %rcx,%rsi
    a390:	48 89 c7             	mov    %rax,%rdi
    a393:	e8 a4 09 00 00       	call   ad3c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a398:	90                   	nop
    a399:	c9                   	leave
    a39a:	c3                   	ret

000000000000a39b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a39b:	55                   	push   %rbp
    a39c:	48 89 e5             	mov    %rsp,%rbp
    a39f:	48 83 ec 20          	sub    $0x20,%rsp
    a3a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a3a7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a3ae:	ff ff 0f 
    a3b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a3b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3b9:	48 89 c7             	mov    %rax,%rdi
    a3bc:	e8 b5 09 00 00       	call   ad76 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a3c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a3c5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a3c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3cd:	48 89 d6             	mov    %rdx,%rsi
    a3d0:	48 89 c7             	mov    %rax,%rdi
    a3d3:	e8 55 af ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a3d8:	48 8b 00             	mov    (%rax),%rax
      }
    a3db:	c9                   	leave
    a3dc:	c3                   	ret
    a3dd:	90                   	nop

000000000000a3de <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a3de:	55                   	push   %rbp
    a3df:	48 89 e5             	mov    %rsp,%rbp
    a3e2:	48 83 ec 10          	sub    $0x10,%rsp
    a3e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a3ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f6:	48 89 d6             	mov    %rdx,%rsi
    a3f9:	48 89 c7             	mov    %rax,%rdi
    a3fc:	e8 61 f3 ff ff       	call   9762 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a405:	48 89 c7             	mov    %rax,%rdi
    a408:	e8 83 09 00 00       	call   ad90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a40d:	90                   	nop
    a40e:	c9                   	leave
    a40f:	c3                   	ret

000000000000a410 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a410:	55                   	push   %rbp
    a411:	48 89 e5             	mov    %rsp,%rbp
    a414:	48 83 ec 10          	sub    $0x10,%rsp
    a418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a41c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a420:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a428:	48 89 d6             	mov    %rdx,%rsi
    a42b:	48 89 c7             	mov    %rax,%rdi
    a42e:	e8 8b 09 00 00       	call   adbe <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a433:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a437:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a43e:	48 8b 10             	mov    (%rax),%rdx
    a441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a445:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a44d:	48 8b 00             	mov    (%rax),%rax
    a450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a454:	48 c1 e2 03          	shl    $0x3,%rdx
    a458:	48 01 c2             	add    %rax,%rdx
    a45b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a45f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a463:	90                   	nop
    a464:	c9                   	leave
    a465:	c3                   	ret

000000000000a466 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a466:	55                   	push   %rbp
    a467:	48 89 e5             	mov    %rsp,%rbp
    a46a:	48 83 ec 20          	sub    $0x20,%rsp
    a46e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a472:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a476:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a47a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a482:	48 89 d6             	mov    %rdx,%rsi
    a485:	48 89 c7             	mov    %rax,%rdi
    a488:	e8 64 09 00 00       	call   adf1 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a48d:	c9                   	leave
    a48e:	c3                   	ret

000000000000a48f <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a48f:	55                   	push   %rbp
    a490:	48 89 e5             	mov    %rsp,%rbp
    a493:	48 83 ec 10          	sub    $0x10,%rsp
    a497:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a49b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a49f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a7:	48 89 d6             	mov    %rdx,%rsi
    a4aa:	48 89 c7             	mov    %rax,%rdi
    a4ad:	e8 68 09 00 00       	call   ae1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a4b2:	90                   	nop
    a4b3:	c9                   	leave
    a4b4:	c3                   	ret
    a4b5:	90                   	nop

000000000000a4b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a4b6:	55                   	push   %rbp
    a4b7:	48 89 e5             	mov    %rsp,%rbp
    a4ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4c2:	90                   	nop
    a4c3:	5d                   	pop    %rbp
    a4c4:	c3                   	ret

000000000000a4c5 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a4c5:	55                   	push   %rbp
    a4c6:	48 89 e5             	mov    %rsp,%rbp
    a4c9:	48 83 ec 20          	sub    $0x20,%rsp
    a4cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a4d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e5:	48 89 ce             	mov    %rcx,%rsi
    a4e8:	48 89 c7             	mov    %rax,%rdi
    a4eb:	e8 3a 09 00 00       	call   ae2a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a4f0:	90                   	nop
    a4f1:	c9                   	leave
    a4f2:	c3                   	ret

000000000000a4f3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a4f3:	55                   	push   %rbp
    a4f4:	48 89 e5             	mov    %rsp,%rbp
    a4f7:	48 83 ec 20          	sub    $0x20,%rsp
    a4fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a4ff:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a506:	ff ff 1f 
    a509:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a50d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a511:	48 89 c7             	mov    %rax,%rdi
    a514:	e8 42 09 00 00       	call   ae5b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a519:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a51d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a521:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a525:	48 89 d6             	mov    %rdx,%rsi
    a528:	48 89 c7             	mov    %rax,%rdi
    a52b:	e8 fd ad ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a530:	48 8b 00             	mov    (%rax),%rax
      }
    a533:	c9                   	leave
    a534:	c3                   	ret
    a535:	90                   	nop

000000000000a536 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a536:	55                   	push   %rbp
    a537:	48 89 e5             	mov    %rsp,%rbp
    a53a:	48 83 ec 10          	sub    $0x10,%rsp
    a53e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a542:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a546:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a54a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a54e:	48 89 d6             	mov    %rdx,%rsi
    a551:	48 89 c7             	mov    %rax,%rdi
    a554:	e8 c5 f3 ff ff       	call   991e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a55d:	48 89 c7             	mov    %rax,%rdi
    a560:	e8 11 09 00 00       	call   ae76 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a565:	90                   	nop
    a566:	c9                   	leave
    a567:	c3                   	ret

000000000000a568 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a568:	55                   	push   %rbp
    a569:	48 89 e5             	mov    %rsp,%rbp
    a56c:	48 83 ec 10          	sub    $0x10,%rsp
    a570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a574:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a578:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a580:	48 89 d6             	mov    %rdx,%rsi
    a583:	48 89 c7             	mov    %rax,%rdi
    a586:	e8 19 09 00 00       	call   aea4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a58b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a58f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a596:	48 8b 10             	mov    (%rax),%rdx
    a599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a59d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a5:	48 8b 00             	mov    (%rax),%rax
    a5a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5ac:	48 c1 e2 02          	shl    $0x2,%rdx
    a5b0:	48 01 c2             	add    %rax,%rdx
    a5b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a5bb:	90                   	nop
    a5bc:	c9                   	leave
    a5bd:	c3                   	ret

000000000000a5be <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a5be:	55                   	push   %rbp
    a5bf:	48 89 e5             	mov    %rsp,%rbp
    a5c2:	48 83 ec 20          	sub    $0x20,%rsp
    a5c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a5d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5da:	48 89 d6             	mov    %rdx,%rsi
    a5dd:	48 89 c7             	mov    %rax,%rdi
    a5e0:	e8 f2 08 00 00       	call   aed7 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a5e5:	c9                   	leave
    a5e6:	c3                   	ret

000000000000a5e7 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a5e7:	55                   	push   %rbp
    a5e8:	48 89 e5             	mov    %rsp,%rbp
    a5eb:	48 83 ec 10          	sub    $0x10,%rsp
    a5ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a5f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ff:	48 89 d6             	mov    %rdx,%rsi
    a602:	48 89 c7             	mov    %rax,%rdi
    a605:	e8 f6 08 00 00       	call   af00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a60a:	90                   	nop
    a60b:	c9                   	leave
    a60c:	c3                   	ret
    a60d:	90                   	nop

000000000000a60e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a60e:	55                   	push   %rbp
    a60f:	48 89 e5             	mov    %rsp,%rbp
    a612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a616:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a61a:	90                   	nop
    a61b:	5d                   	pop    %rbp
    a61c:	c3                   	ret

000000000000a61d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a61d:	55                   	push   %rbp
    a61e:	48 89 e5             	mov    %rsp,%rbp
    a621:	48 83 ec 20          	sub    $0x20,%rsp
    a625:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a629:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a62d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a631:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a635:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63d:	48 89 ce             	mov    %rcx,%rsi
    a640:	48 89 c7             	mov    %rax,%rdi
    a643:	e8 c8 08 00 00       	call   af10 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a648:	90                   	nop
    a649:	c9                   	leave
    a64a:	c3                   	ret

000000000000a64b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a64b:	55                   	push   %rbp
    a64c:	48 89 e5             	mov    %rsp,%rbp
    a64f:	48 83 ec 20          	sub    $0x20,%rsp
    a653:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a657:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a65e:	ff ff 0f 
    a661:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a665:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a669:	48 89 c7             	mov    %rax,%rdi
    a66c:	e8 d0 08 00 00       	call   af41 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a671:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a675:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a679:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a67d:	48 89 d6             	mov    %rdx,%rsi
    a680:	48 89 c7             	mov    %rax,%rdi
    a683:	e8 a5 ac ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a688:	48 8b 00             	mov    (%rax),%rax
      }
    a68b:	c9                   	leave
    a68c:	c3                   	ret
    a68d:	90                   	nop

000000000000a68e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a68e:	55                   	push   %rbp
    a68f:	48 89 e5             	mov    %rsp,%rbp
    a692:	48 83 ec 10          	sub    $0x10,%rsp
    a696:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a69a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a69e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a6:	48 89 d6             	mov    %rdx,%rsi
    a6a9:	48 89 c7             	mov    %rax,%rdi
    a6ac:	e8 29 f4 ff ff       	call   9ada <_ZNSaIP9VkImage_TEC1ERKS1_>
    a6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b5:	48 89 c7             	mov    %rax,%rdi
    a6b8:	e8 9f 08 00 00       	call   af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a6bd:	90                   	nop
    a6be:	c9                   	leave
    a6bf:	c3                   	ret

000000000000a6c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a6c0:	55                   	push   %rbp
    a6c1:	48 89 e5             	mov    %rsp,%rbp
    a6c4:	48 83 ec 10          	sub    $0x10,%rsp
    a6c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a6d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6d8:	48 89 d6             	mov    %rdx,%rsi
    a6db:	48 89 c7             	mov    %rax,%rdi
    a6de:	e8 a7 08 00 00       	call   af8a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a6e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a6e7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ee:	48 8b 10             	mov    (%rax),%rdx
    a6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a6f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6fd:	48 8b 00             	mov    (%rax),%rax
    a700:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a704:	48 c1 e2 03          	shl    $0x3,%rdx
    a708:	48 01 c2             	add    %rax,%rdx
    a70b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a70f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a713:	90                   	nop
    a714:	c9                   	leave
    a715:	c3                   	ret

000000000000a716 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a716:	55                   	push   %rbp
    a717:	48 89 e5             	mov    %rsp,%rbp
    a71a:	48 83 ec 20          	sub    $0x20,%rsp
    a71e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a726:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a72a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a732:	48 89 d6             	mov    %rdx,%rsi
    a735:	48 89 c7             	mov    %rax,%rdi
    a738:	e8 80 08 00 00       	call   afbd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a73d:	c9                   	leave
    a73e:	c3                   	ret

000000000000a73f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a73f:	55                   	push   %rbp
    a740:	48 89 e5             	mov    %rsp,%rbp
    a743:	48 83 ec 10          	sub    $0x10,%rsp
    a747:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a74b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a74f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a757:	48 89 d6             	mov    %rdx,%rsi
    a75a:	48 89 c7             	mov    %rax,%rdi
    a75d:	e8 84 08 00 00       	call   afe6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a762:	90                   	nop
    a763:	c9                   	leave
    a764:	c3                   	ret
    a765:	90                   	nop

000000000000a766 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a766:	55                   	push   %rbp
    a767:	48 89 e5             	mov    %rsp,%rbp
    a76a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a76e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a772:	90                   	nop
    a773:	5d                   	pop    %rbp
    a774:	c3                   	ret

000000000000a775 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a775:	55                   	push   %rbp
    a776:	48 89 e5             	mov    %rsp,%rbp
    a779:	48 83 ec 20          	sub    $0x20,%rsp
    a77d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a781:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a785:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a789:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a78d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a795:	48 89 ce             	mov    %rcx,%rsi
    a798:	48 89 c7             	mov    %rax,%rdi
    a79b:	e8 56 08 00 00       	call   aff6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a7a0:	90                   	nop
    a7a1:	c9                   	leave
    a7a2:	c3                   	ret

000000000000a7a3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a7a3:	55                   	push   %rbp
    a7a4:	48 89 e5             	mov    %rsp,%rbp
    a7a7:	48 83 ec 10          	sub    $0x10,%rsp
    a7ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a7af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7b3:	48 89 c7             	mov    %rax,%rdi
    a7b6:	e8 6d 08 00 00       	call   b028 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a7bb:	c9                   	leave
    a7bc:	c3                   	ret
    a7bd:	90                   	nop

000000000000a7be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a7be:	55                   	push   %rbp
    a7bf:	48 89 e5             	mov    %rsp,%rbp
    a7c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a7c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a7d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a7dc:	00 
    a7dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a7e8:	00 
	{ }
    a7e9:	90                   	nop
    a7ea:	5d                   	pop    %rbp
    a7eb:	c3                   	ret

000000000000a7ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a7ec:	55                   	push   %rbp
    a7ed:	48 89 e5             	mov    %rsp,%rbp
    a7f0:	48 83 ec 10          	sub    $0x10,%rsp
    a7f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a7fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a801:	74 15                	je     a818 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a807:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a80b:	48 89 d6             	mov    %rdx,%rsi
    a80e:	48 89 c7             	mov    %rax,%rdi
    a811:	e8 2c 08 00 00       	call   b042 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a816:	eb 05                	jmp    a81d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a818:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a81d:	c9                   	leave
    a81e:	c3                   	ret

000000000000a81f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a81f:	55                   	push   %rbp
    a820:	48 89 e5             	mov    %rsp,%rbp
    a823:	48 83 ec 20          	sub    $0x20,%rsp
    a827:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a82b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a82f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a833:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a83b:	48 89 d6             	mov    %rdx,%rsi
    a83e:	48 89 c7             	mov    %rax,%rdi
    a841:	e8 26 08 00 00       	call   b06c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a846:	c9                   	leave
    a847:	c3                   	ret

000000000000a848 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a848:	55                   	push   %rbp
    a849:	48 89 e5             	mov    %rsp,%rbp
    a84c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a854:	90                   	nop
    a855:	5d                   	pop    %rbp
    a856:	c3                   	ret
    a857:	90                   	nop

000000000000a858 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a858:	55                   	push   %rbp
    a859:	48 89 e5             	mov    %rsp,%rbp
    a85c:	48 83 ec 20          	sub    $0x20,%rsp
    a860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a864:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a868:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a86c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a870:	48 89 d0             	mov    %rdx,%rax
    a873:	48 c1 e0 06          	shl    $0x6,%rax
    a877:	48 01 d0             	add    %rdx,%rax
    a87a:	48 c1 e0 03          	shl    $0x3,%rax
    a87e:	48 89 c2             	mov    %rax,%rdx
    a881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a885:	48 89 d6             	mov    %rdx,%rsi
    a888:	48 89 c7             	mov    %rax,%rdi
    a88b:	e8 00 9b ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a890:	c9                   	leave
    a891:	c3                   	ret

000000000000a892 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a892:	55                   	push   %rbp
    a893:	48 89 e5             	mov    %rsp,%rbp
    a896:	48 83 ec 10          	sub    $0x10,%rsp
    a89a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a89e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a2:	48 89 c7             	mov    %rax,%rdi
    a8a5:	e8 22 08 00 00       	call   b0cc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    a8aa:	c9                   	leave
    a8ab:	c3                   	ret

000000000000a8ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a8ac:	55                   	push   %rbp
    a8ad:	48 89 e5             	mov    %rsp,%rbp
    a8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a8ca:	00 
    a8cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8cf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a8d6:	00 
	{ }
    a8d7:	90                   	nop
    a8d8:	5d                   	pop    %rbp
    a8d9:	c3                   	ret

000000000000a8da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a8da:	55                   	push   %rbp
    a8db:	48 89 e5             	mov    %rsp,%rbp
    a8de:	48 83 ec 10          	sub    $0x10,%rsp
    a8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a8ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8ef:	74 15                	je     a906 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a8f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8f9:	48 89 d6             	mov    %rdx,%rsi
    a8fc:	48 89 c7             	mov    %rax,%rdi
    a8ff:	e8 e2 07 00 00       	call   b0e6 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    a904:	eb 05                	jmp    a90b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a906:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a90b:	c9                   	leave
    a90c:	c3                   	ret

000000000000a90d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a90d:	55                   	push   %rbp
    a90e:	48 89 e5             	mov    %rsp,%rbp
    a911:	48 83 ec 20          	sub    $0x20,%rsp
    a915:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a919:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a91d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a921:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a929:	48 89 d6             	mov    %rdx,%rsi
    a92c:	48 89 c7             	mov    %rax,%rdi
    a92f:	e8 dc 07 00 00       	call   b110 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    a934:	c9                   	leave
    a935:	c3                   	ret

000000000000a936 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    a936:	55                   	push   %rbp
    a937:	48 89 e5             	mov    %rsp,%rbp
    a93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a93e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a942:	90                   	nop
    a943:	5d                   	pop    %rbp
    a944:	c3                   	ret
    a945:	90                   	nop

000000000000a946 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a946:	55                   	push   %rbp
    a947:	48 89 e5             	mov    %rsp,%rbp
    a94a:	48 83 ec 20          	sub    $0x20,%rsp
    a94e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a952:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a956:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a95a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a95e:	48 89 d0             	mov    %rdx,%rax
    a961:	48 c1 e0 06          	shl    $0x6,%rax
    a965:	48 01 d0             	add    %rdx,%rax
    a968:	48 c1 e0 02          	shl    $0x2,%rax
    a96c:	48 89 c2             	mov    %rax,%rdx
    a96f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a973:	48 89 d6             	mov    %rdx,%rsi
    a976:	48 89 c7             	mov    %rax,%rdi
    a979:	e8 12 9a ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a97e:	c9                   	leave
    a97f:	c3                   	ret

000000000000a980 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a980:	55                   	push   %rbp
    a981:	48 89 e5             	mov    %rsp,%rbp
    a984:	48 83 ec 10          	sub    $0x10,%rsp
    a988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a990:	48 89 c7             	mov    %rax,%rdi
    a993:	e8 d8 07 00 00       	call   b170 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    a998:	c9                   	leave
    a999:	c3                   	ret

000000000000a99a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a99a:	55                   	push   %rbp
    a99b:	48 89 e5             	mov    %rsp,%rbp
    a99e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a9a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a9ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9b1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a9b8:	00 
    a9b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9bd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a9c4:	00 
	{ }
    a9c5:	90                   	nop
    a9c6:	5d                   	pop    %rbp
    a9c7:	c3                   	ret

000000000000a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a9c8:	55                   	push   %rbp
    a9c9:	48 89 e5             	mov    %rsp,%rbp
    a9cc:	48 83 ec 10          	sub    $0x10,%rsp
    a9d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a9d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a9dd:	74 15                	je     a9f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    a9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9e7:	48 89 d6             	mov    %rdx,%rsi
    a9ea:	48 89 c7             	mov    %rax,%rdi
    a9ed:	e8 98 07 00 00       	call   b18a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    a9f2:	eb 05                	jmp    a9f9 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    a9f4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a9f9:	c9                   	leave
    a9fa:	c3                   	ret

000000000000a9fb <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a9fb:	55                   	push   %rbp
    a9fc:	48 89 e5             	mov    %rsp,%rbp
    a9ff:	48 83 ec 20          	sub    $0x20,%rsp
    aa03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aa0b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aa0f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa17:	48 89 d6             	mov    %rdx,%rsi
    aa1a:	48 89 c7             	mov    %rax,%rdi
    aa1d:	e8 92 07 00 00       	call   b1b4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    aa22:	c9                   	leave
    aa23:	c3                   	ret

000000000000aa24 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aa24:	55                   	push   %rbp
    aa25:	48 89 e5             	mov    %rsp,%rbp
    aa28:	48 83 ec 20          	sub    $0x20,%rsp
    aa2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aa38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa3c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aa43:	00 
    aa44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa48:	48 89 d6             	mov    %rdx,%rsi
    aa4b:	48 89 c7             	mov    %rax,%rdi
    aa4e:	e8 3d 99 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    aa53:	c9                   	leave
    aa54:	c3                   	ret

000000000000aa55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aa55:	55                   	push   %rbp
    aa56:	48 89 e5             	mov    %rsp,%rbp
    aa59:	48 83 ec 10          	sub    $0x10,%rsp
    aa5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aa61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa65:	48 89 c7             	mov    %rax,%rdi
    aa68:	e8 a5 07 00 00       	call   b212 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    aa6d:	c9                   	leave
    aa6e:	c3                   	ret
    aa6f:	90                   	nop

000000000000aa70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aa70:	55                   	push   %rbp
    aa71:	48 89 e5             	mov    %rsp,%rbp
    aa74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aa78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aa83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa87:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa8e:	00 
    aa8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa93:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aa9a:	00 
	{ }
    aa9b:	90                   	nop
    aa9c:	5d                   	pop    %rbp
    aa9d:	c3                   	ret

000000000000aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aa9e:	55                   	push   %rbp
    aa9f:	48 89 e5             	mov    %rsp,%rbp
    aaa2:	48 83 ec 10          	sub    $0x10,%rsp
    aaa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aaae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aab3:	74 15                	je     aaca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    aab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aab9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aabd:	48 89 d6             	mov    %rdx,%rsi
    aac0:	48 89 c7             	mov    %rax,%rdi
    aac3:	e8 64 07 00 00       	call   b22c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    aac8:	eb 05                	jmp    aacf <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    aaca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aacf:	c9                   	leave
    aad0:	c3                   	ret

000000000000aad1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aad1:	55                   	push   %rbp
    aad2:	48 89 e5             	mov    %rsp,%rbp
    aad5:	48 83 ec 20          	sub    $0x20,%rsp
    aad9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aadd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aae1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aae5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaed:	48 89 d6             	mov    %rdx,%rsi
    aaf0:	48 89 c7             	mov    %rax,%rdi
    aaf3:	e8 5e 07 00 00       	call   b256 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    aaf8:	c9                   	leave
    aaf9:	c3                   	ret

000000000000aafa <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    aafa:	55                   	push   %rbp
    aafb:	48 89 e5             	mov    %rsp,%rbp
    aafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab06:	90                   	nop
    ab07:	5d                   	pop    %rbp
    ab08:	c3                   	ret
    ab09:	90                   	nop

000000000000ab0a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ab0a:	55                   	push   %rbp
    ab0b:	48 89 e5             	mov    %rsp,%rbp
    ab0e:	48 83 ec 20          	sub    $0x20,%rsp
    ab12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ab1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ab29:	00 
    ab2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab2e:	48 89 d6             	mov    %rdx,%rsi
    ab31:	48 89 c7             	mov    %rax,%rdi
    ab34:	e8 57 98 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ab39:	c9                   	leave
    ab3a:	c3                   	ret

000000000000ab3b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab3b:	55                   	push   %rbp
    ab3c:	48 89 e5             	mov    %rsp,%rbp
    ab3f:	48 83 ec 10          	sub    $0x10,%rsp
    ab43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ab47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab4b:	48 89 c7             	mov    %rax,%rdi
    ab4e:	e8 61 07 00 00       	call   b2b4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    ab53:	c9                   	leave
    ab54:	c3                   	ret
    ab55:	90                   	nop

000000000000ab56 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab56:	55                   	push   %rbp
    ab57:	48 89 e5             	mov    %rsp,%rbp
    ab5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab62:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab6d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab74:	00 
    ab75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab79:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab80:	00 
	{ }
    ab81:	90                   	nop
    ab82:	5d                   	pop    %rbp
    ab83:	c3                   	ret

000000000000ab84 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab84:	55                   	push   %rbp
    ab85:	48 89 e5             	mov    %rsp,%rbp
    ab88:	48 83 ec 10          	sub    $0x10,%rsp
    ab8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab94:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab99:	74 15                	je     abb0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ab9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aba3:	48 89 d6             	mov    %rdx,%rsi
    aba6:	48 89 c7             	mov    %rax,%rdi
    aba9:	e8 20 07 00 00       	call   b2ce <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    abae:	eb 05                	jmp    abb5 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    abb0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    abb5:	c9                   	leave
    abb6:	c3                   	ret

000000000000abb7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    abb7:	55                   	push   %rbp
    abb8:	48 89 e5             	mov    %rsp,%rbp
    abbb:	48 83 ec 20          	sub    $0x20,%rsp
    abbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abc3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    abc7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    abcb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abd3:	48 89 d6             	mov    %rdx,%rsi
    abd6:	48 89 c7             	mov    %rax,%rdi
    abd9:	e8 1a 07 00 00       	call   b2f8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    abde:	c9                   	leave
    abdf:	c3                   	ret

000000000000abe0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    abe0:	55                   	push   %rbp
    abe1:	48 89 e5             	mov    %rsp,%rbp
    abe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abe8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abec:	90                   	nop
    abed:	5d                   	pop    %rbp
    abee:	c3                   	ret
    abef:	90                   	nop

000000000000abf0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    abf0:	55                   	push   %rbp
    abf1:	48 89 e5             	mov    %rsp,%rbp
    abf4:	48 83 ec 20          	sub    $0x20,%rsp
    abf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac08:	48 89 d0             	mov    %rdx,%rax
    ac0b:	48 01 c0             	add    %rax,%rax
    ac0e:	48 01 d0             	add    %rdx,%rax
    ac11:	48 c1 e0 03          	shl    $0x3,%rax
    ac15:	48 89 c2             	mov    %rax,%rdx
    ac18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac1c:	48 89 d6             	mov    %rdx,%rsi
    ac1f:	48 89 c7             	mov    %rax,%rdi
    ac22:	e8 69 97 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ac27:	c9                   	leave
    ac28:	c3                   	ret

000000000000ac29 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac29:	55                   	push   %rbp
    ac2a:	48 89 e5             	mov    %rsp,%rbp
    ac2d:	48 83 ec 10          	sub    $0x10,%rsp
    ac31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac39:	48 89 c7             	mov    %rax,%rdi
    ac3c:	e8 15 07 00 00       	call   b356 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    ac41:	c9                   	leave
    ac42:	c3                   	ret
    ac43:	90                   	nop

000000000000ac44 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac44:	55                   	push   %rbp
    ac45:	48 89 e5             	mov    %rsp,%rbp
    ac48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ac4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac50:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ac57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac5b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ac62:	00 
    ac63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac67:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ac6e:	00 
	{ }
    ac6f:	90                   	nop
    ac70:	5d                   	pop    %rbp
    ac71:	c3                   	ret

000000000000ac72 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ac72:	55                   	push   %rbp
    ac73:	48 89 e5             	mov    %rsp,%rbp
    ac76:	48 83 ec 10          	sub    $0x10,%rsp
    ac7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ac82:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ac87:	74 15                	je     ac9e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    ac89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac91:	48 89 d6             	mov    %rdx,%rsi
    ac94:	48 89 c7             	mov    %rax,%rdi
    ac97:	e8 d4 06 00 00       	call   b370 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    ac9c:	eb 05                	jmp    aca3 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    ac9e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aca3:	c9                   	leave
    aca4:	c3                   	ret

000000000000aca5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aca5:	55                   	push   %rbp
    aca6:	48 89 e5             	mov    %rsp,%rbp
    aca9:	48 83 ec 20          	sub    $0x20,%rsp
    acad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acb1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    acb5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    acb9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    acbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acc1:	48 89 d6             	mov    %rdx,%rsi
    acc4:	48 89 c7             	mov    %rax,%rdi
    acc7:	e8 ce 06 00 00       	call   b39a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    accc:	c9                   	leave
    accd:	c3                   	ret

000000000000acce <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    acce:	55                   	push   %rbp
    accf:	48 89 e5             	mov    %rsp,%rbp
    acd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acda:	90                   	nop
    acdb:	5d                   	pop    %rbp
    acdc:	c3                   	ret

000000000000acdd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    acdd:	55                   	push   %rbp
    acde:	48 89 e5             	mov    %rsp,%rbp
    ace1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ace5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace9:	5d                   	pop    %rbp
    acea:	c3                   	ret

000000000000aceb <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    aceb:	55                   	push   %rbp
    acec:	48 89 e5             	mov    %rsp,%rbp
    acef:	53                   	push   %rbx
    acf0:	48 83 ec 18          	sub    $0x18,%rsp
    acf4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acf8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    acfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad00:	48 89 c6             	mov    %rax,%rsi
    ad03:	bf 18 00 00 00       	mov    $0x18,%edi
    ad08:	e8 53 a1 ff ff       	call   4e60 <_ZnwmPv>
    ad0d:	48 89 c3             	mov    %rax,%rbx
    ad10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad14:	48 89 c7             	mov    %rax,%rdi
    ad17:	e8 48 e8 ff ff       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    ad1c:	48 89 c1             	mov    %rax,%rcx
    ad1f:	48 8b 01             	mov    (%rcx),%rax
    ad22:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    ad26:	48 89 03             	mov    %rax,(%rbx)
    ad29:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ad2d:	48 8b 41 10          	mov    0x10(%rcx),%rax
    ad31:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    ad35:	90                   	nop
    ad36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad3a:	c9                   	leave
    ad3b:	c3                   	ret

000000000000ad3c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad3c:	55                   	push   %rbp
    ad3d:	48 89 e5             	mov    %rsp,%rbp
    ad40:	48 83 ec 20          	sub    $0x20,%rsp
    ad44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad54:	48 89 d0             	mov    %rdx,%rax
    ad57:	48 c1 e0 03          	shl    $0x3,%rax
    ad5b:	48 29 d0             	sub    %rdx,%rax
    ad5e:	48 c1 e0 02          	shl    $0x2,%rax
    ad62:	48 89 c2             	mov    %rax,%rdx
    ad65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad69:	48 89 d6             	mov    %rdx,%rsi
    ad6c:	48 89 c7             	mov    %rax,%rdi
    ad6f:	e8 1c 96 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ad74:	c9                   	leave
    ad75:	c3                   	ret

000000000000ad76 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ad76:	55                   	push   %rbp
    ad77:	48 89 e5             	mov    %rsp,%rbp
    ad7a:	48 83 ec 10          	sub    $0x10,%rsp
    ad7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad86:	48 89 c7             	mov    %rax,%rdi
    ad89:	e8 52 06 00 00       	call   b3e0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    ad8e:	c9                   	leave
    ad8f:	c3                   	ret

000000000000ad90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad90:	55                   	push   %rbp
    ad91:	48 89 e5             	mov    %rsp,%rbp
    ad94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad9c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ada3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    adae:	00 
    adaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adb3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    adba:	00 
	{ }
    adbb:	90                   	nop
    adbc:	5d                   	pop    %rbp
    adbd:	c3                   	ret

000000000000adbe <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    adbe:	55                   	push   %rbp
    adbf:	48 89 e5             	mov    %rsp,%rbp
    adc2:	48 83 ec 10          	sub    $0x10,%rsp
    adc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    adce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    add3:	74 15                	je     adea <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    add5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    addd:	48 89 d6             	mov    %rdx,%rsi
    ade0:	48 89 c7             	mov    %rax,%rdi
    ade3:	e8 12 06 00 00       	call   b3fa <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    ade8:	eb 05                	jmp    adef <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    adea:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    adef:	c9                   	leave
    adf0:	c3                   	ret

000000000000adf1 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    adf1:	55                   	push   %rbp
    adf2:	48 89 e5             	mov    %rsp,%rbp
    adf5:	48 83 ec 20          	sub    $0x20,%rsp
    adf9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adfd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae01:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae05:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae0d:	48 89 d6             	mov    %rdx,%rsi
    ae10:	48 89 c7             	mov    %rax,%rdi
    ae13:	e8 0c 06 00 00       	call   b424 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    ae18:	c9                   	leave
    ae19:	c3                   	ret

000000000000ae1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ae1a:	55                   	push   %rbp
    ae1b:	48 89 e5             	mov    %rsp,%rbp
    ae1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae26:	90                   	nop
    ae27:	5d                   	pop    %rbp
    ae28:	c3                   	ret
    ae29:	90                   	nop

000000000000ae2a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ae2a:	55                   	push   %rbp
    ae2b:	48 89 e5             	mov    %rsp,%rbp
    ae2e:	48 83 ec 20          	sub    $0x20,%rsp
    ae32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ae3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae42:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ae49:	00 
    ae4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae4e:	48 89 d6             	mov    %rdx,%rsi
    ae51:	48 89 c7             	mov    %rax,%rdi
    ae54:	e8 37 95 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ae59:	c9                   	leave
    ae5a:	c3                   	ret

000000000000ae5b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ae5b:	55                   	push   %rbp
    ae5c:	48 89 e5             	mov    %rsp,%rbp
    ae5f:	48 83 ec 10          	sub    $0x10,%rsp
    ae63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ae67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6b:	48 89 c7             	mov    %rax,%rdi
    ae6e:	e8 0f 06 00 00       	call   b482 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    ae73:	c9                   	leave
    ae74:	c3                   	ret
    ae75:	90                   	nop

000000000000ae76 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ae76:	55                   	push   %rbp
    ae77:	48 89 e5             	mov    %rsp,%rbp
    ae7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ae7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae82:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ae89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae8d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ae94:	00 
    ae95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae99:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aea0:	00 
	{ }
    aea1:	90                   	nop
    aea2:	5d                   	pop    %rbp
    aea3:	c3                   	ret

000000000000aea4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aea4:	55                   	push   %rbp
    aea5:	48 89 e5             	mov    %rsp,%rbp
    aea8:	48 83 ec 10          	sub    $0x10,%rsp
    aeac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aeb4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aeb9:	74 15                	je     aed0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    aebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aec3:	48 89 d6             	mov    %rdx,%rsi
    aec6:	48 89 c7             	mov    %rax,%rdi
    aec9:	e8 ce 05 00 00       	call   b49c <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    aece:	eb 05                	jmp    aed5 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    aed0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aed5:	c9                   	leave
    aed6:	c3                   	ret

000000000000aed7 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aed7:	55                   	push   %rbp
    aed8:	48 89 e5             	mov    %rsp,%rbp
    aedb:	48 83 ec 20          	sub    $0x20,%rsp
    aedf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aee3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aee7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aeeb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aeef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aef3:	48 89 d6             	mov    %rdx,%rsi
    aef6:	48 89 c7             	mov    %rax,%rdi
    aef9:	e8 c8 05 00 00       	call   b4c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    aefe:	c9                   	leave
    aeff:	c3                   	ret

000000000000af00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    af00:	55                   	push   %rbp
    af01:	48 89 e5             	mov    %rsp,%rbp
    af04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af0c:	90                   	nop
    af0d:	5d                   	pop    %rbp
    af0e:	c3                   	ret
    af0f:	90                   	nop

000000000000af10 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af10:	55                   	push   %rbp
    af11:	48 89 e5             	mov    %rsp,%rbp
    af14:	48 83 ec 20          	sub    $0x20,%rsp
    af18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    af24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af28:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    af2f:	00 
    af30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af34:	48 89 d6             	mov    %rdx,%rsi
    af37:	48 89 c7             	mov    %rax,%rdi
    af3a:	e8 51 94 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    af3f:	c9                   	leave
    af40:	c3                   	ret

000000000000af41 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    af41:	55                   	push   %rbp
    af42:	48 89 e5             	mov    %rsp,%rbp
    af45:	48 83 ec 10          	sub    $0x10,%rsp
    af49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    af4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af51:	48 89 c7             	mov    %rax,%rdi
    af54:	e8 cb 05 00 00       	call   b524 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    af59:	c9                   	leave
    af5a:	c3                   	ret
    af5b:	90                   	nop

000000000000af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    af5c:	55                   	push   %rbp
    af5d:	48 89 e5             	mov    %rsp,%rbp
    af60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    af64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    af6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af73:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    af7a:	00 
    af7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af7f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    af86:	00 
	{ }
    af87:	90                   	nop
    af88:	5d                   	pop    %rbp
    af89:	c3                   	ret

000000000000af8a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    af8a:	55                   	push   %rbp
    af8b:	48 89 e5             	mov    %rsp,%rbp
    af8e:	48 83 ec 10          	sub    $0x10,%rsp
    af92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    af9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af9f:	74 15                	je     afb6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    afa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afa9:	48 89 d6             	mov    %rdx,%rsi
    afac:	48 89 c7             	mov    %rax,%rdi
    afaf:	e8 8a 05 00 00       	call   b53e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    afb4:	eb 05                	jmp    afbb <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    afb6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    afbb:	c9                   	leave
    afbc:	c3                   	ret

000000000000afbd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    afbd:	55                   	push   %rbp
    afbe:	48 89 e5             	mov    %rsp,%rbp
    afc1:	48 83 ec 20          	sub    $0x20,%rsp
    afc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    afc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    afcd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    afd1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    afd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afd9:	48 89 d6             	mov    %rdx,%rsi
    afdc:	48 89 c7             	mov    %rax,%rdi
    afdf:	e8 84 05 00 00       	call   b568 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    afe4:	c9                   	leave
    afe5:	c3                   	ret

000000000000afe6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    afe6:	55                   	push   %rbp
    afe7:	48 89 e5             	mov    %rsp,%rbp
    afea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aff2:	90                   	nop
    aff3:	5d                   	pop    %rbp
    aff4:	c3                   	ret
    aff5:	90                   	nop

000000000000aff6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aff6:	55                   	push   %rbp
    aff7:	48 89 e5             	mov    %rsp,%rbp
    affa:	48 83 ec 20          	sub    $0x20,%rsp
    affe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b00a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b00e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b015:	00 
    b016:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b01a:	48 89 d6             	mov    %rdx,%rsi
    b01d:	48 89 c7             	mov    %rax,%rdi
    b020:	e8 6b 93 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    b025:	c9                   	leave
    b026:	c3                   	ret
    b027:	90                   	nop

000000000000b028 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b028:	55                   	push   %rbp
    b029:	48 89 e5             	mov    %rsp,%rbp
    b02c:	48 83 ec 10          	sub    $0x10,%rsp
    b030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b038:	48 89 c7             	mov    %rax,%rdi
    b03b:	e8 86 05 00 00       	call   b5c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b040:	c9                   	leave
    b041:	c3                   	ret

000000000000b042 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b042:	55                   	push   %rbp
    b043:	48 89 e5             	mov    %rsp,%rbp
    b046:	48 83 ec 10          	sub    $0x10,%rsp
    b04a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b04e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b052:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b05a:	ba 00 00 00 00       	mov    $0x0,%edx
    b05f:	48 89 ce             	mov    %rcx,%rsi
    b062:	48 89 c7             	mov    %rax,%rdi
    b065:	e8 70 05 00 00       	call   b5da <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    b06a:	c9                   	leave
    b06b:	c3                   	ret

000000000000b06c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b06c:	55                   	push   %rbp
    b06d:	48 89 e5             	mov    %rsp,%rbp
    b070:	48 83 ec 20          	sub    $0x20,%rsp
    b074:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b078:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b07c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b081:	74 43                	je     b0c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b087:	48 89 c7             	mov    %rax,%rdi
    b08a:	e8 b6 05 00 00       	call   b645 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    b08f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b093:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b097:	48 89 c7             	mov    %rax,%rdi
    b09a:	e8 b4 05 00 00       	call   b653 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b09f:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    b0a6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b0a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0ab:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b0af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b0b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0b7:	48 89 ce             	mov    %rcx,%rsi
    b0ba:	48 89 c7             	mov    %rax,%rdi
    b0bd:	e8 eb 05 00 00       	call   b6ad <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    b0c2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b0c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b0ca:	c9                   	leave
    b0cb:	c3                   	ret

000000000000b0cc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b0cc:	55                   	push   %rbp
    b0cd:	48 89 e5             	mov    %rsp,%rbp
    b0d0:	48 83 ec 10          	sub    $0x10,%rsp
    b0d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0dc:	48 89 c7             	mov    %rax,%rdi
    b0df:	e8 0e 06 00 00       	call   b6f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b0e4:	c9                   	leave
    b0e5:	c3                   	ret

000000000000b0e6 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b0e6:	55                   	push   %rbp
    b0e7:	48 89 e5             	mov    %rsp,%rbp
    b0ea:	48 83 ec 10          	sub    $0x10,%rsp
    b0ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b0f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b0fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0fe:	ba 00 00 00 00       	mov    $0x0,%edx
    b103:	48 89 ce             	mov    %rcx,%rsi
    b106:	48 89 c7             	mov    %rax,%rdi
    b109:	e8 f8 05 00 00       	call   b706 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b10e:	c9                   	leave
    b10f:	c3                   	ret

000000000000b110 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b110:	55                   	push   %rbp
    b111:	48 89 e5             	mov    %rsp,%rbp
    b114:	48 83 ec 20          	sub    $0x20,%rsp
    b118:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b11c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b120:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b125:	74 43                	je     b16a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b12b:	48 89 c7             	mov    %rax,%rdi
    b12e:	e8 3e 06 00 00       	call   b771 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b133:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b13b:	48 89 c7             	mov    %rax,%rdi
    b13e:	e8 3c 06 00 00       	call   b77f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b143:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b14a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b14b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b14f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b153:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b157:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b15b:	48 89 ce             	mov    %rcx,%rsi
    b15e:	48 89 c7             	mov    %rax,%rdi
    b161:	e8 73 06 00 00       	call   b7d9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b166:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b16a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b16e:	c9                   	leave
    b16f:	c3                   	ret

000000000000b170 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b170:	55                   	push   %rbp
    b171:	48 89 e5             	mov    %rsp,%rbp
    b174:	48 83 ec 10          	sub    $0x10,%rsp
    b178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b17c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b180:	48 89 c7             	mov    %rax,%rdi
    b183:	e8 96 06 00 00       	call   b81e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b188:	c9                   	leave
    b189:	c3                   	ret

000000000000b18a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b18a:	55                   	push   %rbp
    b18b:	48 89 e5             	mov    %rsp,%rbp
    b18e:	48 83 ec 10          	sub    $0x10,%rsp
    b192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b196:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b19a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1a2:	ba 00 00 00 00       	mov    $0x0,%edx
    b1a7:	48 89 ce             	mov    %rcx,%rsi
    b1aa:	48 89 c7             	mov    %rax,%rdi
    b1ad:	e8 80 06 00 00       	call   b832 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b1b2:	c9                   	leave
    b1b3:	c3                   	ret

000000000000b1b4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b1b4:	55                   	push   %rbp
    b1b5:	48 89 e5             	mov    %rsp,%rbp
    b1b8:	48 83 ec 20          	sub    $0x20,%rsp
    b1bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b1c4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b1c9:	74 40                	je     b20b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b1cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1cf:	48 89 c7             	mov    %rax,%rdi
    b1d2:	e8 bc 06 00 00       	call   b893 <_ZSt11__addressofIPKcEPT_RS2_>
    b1d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b1db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1df:	48 89 c7             	mov    %rax,%rdi
    b1e2:	e8 ba 06 00 00       	call   b8a1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b1e7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b1ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b1f0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b1f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1fc:	48 89 ce             	mov    %rcx,%rsi
    b1ff:	48 89 c7             	mov    %rax,%rdi
    b202:	e8 c1 06 00 00       	call   b8c8 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b207:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b20b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b20f:	c9                   	leave
    b210:	c3                   	ret
    b211:	90                   	nop

000000000000b212 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b212:	55                   	push   %rbp
    b213:	48 89 e5             	mov    %rsp,%rbp
    b216:	48 83 ec 10          	sub    $0x10,%rsp
    b21a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b222:	48 89 c7             	mov    %rax,%rdi
    b225:	e8 e2 06 00 00       	call   b90c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b22a:	c9                   	leave
    b22b:	c3                   	ret

000000000000b22c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b22c:	55                   	push   %rbp
    b22d:	48 89 e5             	mov    %rsp,%rbp
    b230:	48 83 ec 10          	sub    $0x10,%rsp
    b234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b238:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b23c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b244:	ba 00 00 00 00       	mov    $0x0,%edx
    b249:	48 89 ce             	mov    %rcx,%rsi
    b24c:	48 89 c7             	mov    %rax,%rdi
    b24f:	e8 cc 06 00 00       	call   b920 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b254:	c9                   	leave
    b255:	c3                   	ret

000000000000b256 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b256:	55                   	push   %rbp
    b257:	48 89 e5             	mov    %rsp,%rbp
    b25a:	48 83 ec 20          	sub    $0x20,%rsp
    b25e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b262:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b266:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b26b:	74 40                	je     b2ad <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b26d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b271:	48 89 c7             	mov    %rax,%rdi
    b274:	e8 08 07 00 00       	call   b981 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b279:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b27d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b281:	48 89 c7             	mov    %rax,%rdi
    b284:	e8 06 07 00 00       	call   b98f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b289:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b28e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b292:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b296:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b29a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b29e:	48 89 ce             	mov    %rcx,%rsi
    b2a1:	48 89 c7             	mov    %rax,%rdi
    b2a4:	e8 0d 07 00 00       	call   b9b6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b2a9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b2ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b2b1:	c9                   	leave
    b2b2:	c3                   	ret
    b2b3:	90                   	nop

000000000000b2b4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b2b4:	55                   	push   %rbp
    b2b5:	48 89 e5             	mov    %rsp,%rbp
    b2b8:	48 83 ec 10          	sub    $0x10,%rsp
    b2bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b2c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c4:	48 89 c7             	mov    %rax,%rdi
    b2c7:	e8 2e 07 00 00       	call   b9fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b2cc:	c9                   	leave
    b2cd:	c3                   	ret

000000000000b2ce <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b2ce:	55                   	push   %rbp
    b2cf:	48 89 e5             	mov    %rsp,%rbp
    b2d2:	48 83 ec 10          	sub    $0x10,%rsp
    b2d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b2de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e6:	ba 00 00 00 00       	mov    $0x0,%edx
    b2eb:	48 89 ce             	mov    %rcx,%rsi
    b2ee:	48 89 c7             	mov    %rax,%rdi
    b2f1:	e8 18 07 00 00       	call   ba0e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b2f6:	c9                   	leave
    b2f7:	c3                   	ret

000000000000b2f8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b2f8:	55                   	push   %rbp
    b2f9:	48 89 e5             	mov    %rsp,%rbp
    b2fc:	48 83 ec 20          	sub    $0x20,%rsp
    b300:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b304:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b308:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b30d:	74 40                	je     b34f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b30f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b313:	48 89 c7             	mov    %rax,%rdi
    b316:	e8 c2 f9 ff ff       	call   acdd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b31b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b31f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b323:	48 89 c7             	mov    %rax,%rdi
    b326:	e8 4d 07 00 00       	call   ba78 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b32b:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b330:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b334:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b338:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b33c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b340:	48 89 ce             	mov    %rcx,%rsi
    b343:	48 89 c7             	mov    %rax,%rdi
    b346:	e8 76 07 00 00       	call   bac1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b34b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b34f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b353:	c9                   	leave
    b354:	c3                   	ret
    b355:	90                   	nop

000000000000b356 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b356:	55                   	push   %rbp
    b357:	48 89 e5             	mov    %rsp,%rbp
    b35a:	48 83 ec 10          	sub    $0x10,%rsp
    b35e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b366:	48 89 c7             	mov    %rax,%rdi
    b369:	e8 98 07 00 00       	call   bb06 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b36e:	c9                   	leave
    b36f:	c3                   	ret

000000000000b370 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b370:	55                   	push   %rbp
    b371:	48 89 e5             	mov    %rsp,%rbp
    b374:	48 83 ec 10          	sub    $0x10,%rsp
    b378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b37c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b380:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b388:	ba 00 00 00 00       	mov    $0x0,%edx
    b38d:	48 89 ce             	mov    %rcx,%rsi
    b390:	48 89 c7             	mov    %rax,%rdi
    b393:	e8 82 07 00 00       	call   bb1a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b398:	c9                   	leave
    b399:	c3                   	ret

000000000000b39a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b39a:	55                   	push   %rbp
    b39b:	48 89 e5             	mov    %rsp,%rbp
    b39e:	48 83 ec 20          	sub    $0x20,%rsp
    b3a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b3aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b3b2:	eb 1e                	jmp    b3d2 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b3b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3b8:	48 89 c7             	mov    %rax,%rdi
    b3bb:	e8 c5 07 00 00       	call   bb85 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b3c0:	48 89 c7             	mov    %rax,%rdi
    b3c3:	e8 cb 07 00 00       	call   bb93 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b3c8:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b3cd:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b3d2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b3d7:	75 db                	jne    b3b4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b3d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b3dd:	c9                   	leave
    b3de:	c3                   	ret
    b3df:	90                   	nop

000000000000b3e0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b3e0:	55                   	push   %rbp
    b3e1:	48 89 e5             	mov    %rsp,%rbp
    b3e4:	48 83 ec 10          	sub    $0x10,%rsp
    b3e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b3ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f0:	48 89 c7             	mov    %rax,%rdi
    b3f3:	e8 c4 07 00 00       	call   bbbc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b3f8:	c9                   	leave
    b3f9:	c3                   	ret

000000000000b3fa <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b3fa:	55                   	push   %rbp
    b3fb:	48 89 e5             	mov    %rsp,%rbp
    b3fe:	48 83 ec 10          	sub    $0x10,%rsp
    b402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b406:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b40a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b412:	ba 00 00 00 00       	mov    $0x0,%edx
    b417:	48 89 ce             	mov    %rcx,%rsi
    b41a:	48 89 c7             	mov    %rax,%rdi
    b41d:	e8 ae 07 00 00       	call   bbd0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b422:	c9                   	leave
    b423:	c3                   	ret

000000000000b424 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b424:	55                   	push   %rbp
    b425:	48 89 e5             	mov    %rsp,%rbp
    b428:	48 83 ec 20          	sub    $0x20,%rsp
    b42c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b430:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b434:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b439:	74 40                	je     b47b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b43b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b43f:	48 89 c7             	mov    %rax,%rdi
    b442:	e8 ea 07 00 00       	call   bc31 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b447:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b44b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44f:	48 89 c7             	mov    %rax,%rdi
    b452:	e8 e8 07 00 00       	call   bc3f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b457:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b45c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b460:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b464:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b46c:	48 89 ce             	mov    %rcx,%rsi
    b46f:	48 89 c7             	mov    %rax,%rdi
    b472:	e8 f5 07 00 00       	call   bc6c <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b477:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b47b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b47f:	c9                   	leave
    b480:	c3                   	ret
    b481:	90                   	nop

000000000000b482 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b482:	55                   	push   %rbp
    b483:	48 89 e5             	mov    %rsp,%rbp
    b486:	48 83 ec 10          	sub    $0x10,%rsp
    b48a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b48e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b492:	48 89 c7             	mov    %rax,%rdi
    b495:	e8 16 08 00 00       	call   bcb0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b49a:	c9                   	leave
    b49b:	c3                   	ret

000000000000b49c <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b49c:	55                   	push   %rbp
    b49d:	48 89 e5             	mov    %rsp,%rbp
    b4a0:	48 83 ec 10          	sub    $0x10,%rsp
    b4a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b4ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b4b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4b4:	ba 00 00 00 00       	mov    $0x0,%edx
    b4b9:	48 89 ce             	mov    %rcx,%rsi
    b4bc:	48 89 c7             	mov    %rax,%rdi
    b4bf:	e8 00 08 00 00       	call   bcc4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b4c4:	c9                   	leave
    b4c5:	c3                   	ret

000000000000b4c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b4c6:	55                   	push   %rbp
    b4c7:	48 89 e5             	mov    %rsp,%rbp
    b4ca:	48 83 ec 20          	sub    $0x20,%rsp
    b4ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b4d6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b4db:	74 40                	je     b51d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b4dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4e1:	48 89 c7             	mov    %rax,%rdi
    b4e4:	e8 3c 08 00 00       	call   bd25 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b4e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b4ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f1:	48 89 c7             	mov    %rax,%rdi
    b4f4:	e8 3a 08 00 00       	call   bd33 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b4f9:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b4fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b502:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b506:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b50a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b50e:	48 89 ce             	mov    %rcx,%rsi
    b511:	48 89 c7             	mov    %rax,%rdi
    b514:	e8 40 08 00 00       	call   bd59 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b519:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b51d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b521:	c9                   	leave
    b522:	c3                   	ret
    b523:	90                   	nop

000000000000b524 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b524:	55                   	push   %rbp
    b525:	48 89 e5             	mov    %rsp,%rbp
    b528:	48 83 ec 10          	sub    $0x10,%rsp
    b52c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b534:	48 89 c7             	mov    %rax,%rdi
    b537:	e8 62 08 00 00       	call   bd9e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b53c:	c9                   	leave
    b53d:	c3                   	ret

000000000000b53e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b53e:	55                   	push   %rbp
    b53f:	48 89 e5             	mov    %rsp,%rbp
    b542:	48 83 ec 10          	sub    $0x10,%rsp
    b546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b54a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b54e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b556:	ba 00 00 00 00       	mov    $0x0,%edx
    b55b:	48 89 ce             	mov    %rcx,%rsi
    b55e:	48 89 c7             	mov    %rax,%rdi
    b561:	e8 4c 08 00 00       	call   bdb2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b566:	c9                   	leave
    b567:	c3                   	ret

000000000000b568 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b568:	55                   	push   %rbp
    b569:	48 89 e5             	mov    %rsp,%rbp
    b56c:	48 83 ec 20          	sub    $0x20,%rsp
    b570:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b574:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b578:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b57d:	74 40                	je     b5bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b583:	48 89 c7             	mov    %rax,%rdi
    b586:	e8 88 08 00 00       	call   be13 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b58b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b593:	48 89 c7             	mov    %rax,%rdi
    b596:	e8 86 08 00 00       	call   be21 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b59b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b5a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b5a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b5a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b5ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5b0:	48 89 ce             	mov    %rcx,%rsi
    b5b3:	48 89 c7             	mov    %rax,%rdi
    b5b6:	e8 8d 08 00 00       	call   be48 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b5bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b5bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b5c3:	c9                   	leave
    b5c4:	c3                   	ret
    b5c5:	90                   	nop

000000000000b5c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b5c6:	55                   	push   %rbp
    b5c7:	48 89 e5             	mov    %rsp,%rbp
    b5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b5ce:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b5d5:	03 3f 00 
      }
    b5d8:	5d                   	pop    %rbp
    b5d9:	c3                   	ret

000000000000b5da <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b5da:	55                   	push   %rbp
    b5db:	48 89 e5             	mov    %rsp,%rbp
    b5de:	48 83 ec 20          	sub    $0x20,%rsp
    b5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5f2:	48 89 c7             	mov    %rax,%rdi
    b5f5:	e8 cc ff ff ff       	call   b5c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b5fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b5fe:	0f 92 c0             	setb   %al
    b601:	0f b6 c0             	movzbl %al,%eax
    b604:	48 85 c0             	test   %rax,%rax
    b607:	0f 95 c0             	setne  %al
    b60a:	84 c0                	test   %al,%al
    b60c:	74 1a                	je     b628 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b60e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b615:	07 7e 00 
    b618:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b61c:	73 05                	jae    b623 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b61e:	e8 4d 8c ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b623:	e8 b8 8a ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b628:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b62c:	48 89 d0             	mov    %rdx,%rax
    b62f:	48 c1 e0 06          	shl    $0x6,%rax
    b633:	48 01 d0             	add    %rdx,%rax
    b636:	48 c1 e0 03          	shl    $0x3,%rax
    b63a:	48 89 c7             	mov    %rax,%rdi
    b63d:	e8 3e 8d ff ff       	call   4380 <_Znwm@plt>
    b642:	90                   	nop
      }
    b643:	c9                   	leave
    b644:	c3                   	ret

000000000000b645 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b645:	55                   	push   %rbp
    b646:	48 89 e5             	mov    %rsp,%rbp
    b649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b651:	5d                   	pop    %rbp
    b652:	c3                   	ret

000000000000b653 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b653:	55                   	push   %rbp
    b654:	48 89 e5             	mov    %rsp,%rbp
    b657:	48 83 ec 10          	sub    $0x10,%rsp
    b65b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b65f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b663:	48 89 c6             	mov    %rax,%rsi
    b666:	bf 08 02 00 00       	mov    $0x208,%edi
    b66b:	e8 f0 97 ff ff       	call   4e60 <_ZnwmPv>
    b670:	b9 08 02 00 00       	mov    $0x208,%ecx
    b675:	be 00 00 00 00       	mov    $0x0,%esi
    b67a:	48 89 30             	mov    %rsi,(%rax)
    b67d:	89 ca                	mov    %ecx,%edx
    b67f:	48 01 c2             	add    %rax,%rdx
    b682:	48 83 c2 08          	add    $0x8,%rdx
    b686:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b68a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b68e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b692:	48 29 d0             	sub    %rdx,%rax
    b695:	01 c1                	add    %eax,%ecx
    b697:	83 e1 f8             	and    $0xfffffff8,%ecx
    b69a:	89 c8                	mov    %ecx,%eax
    b69c:	c1 e8 03             	shr    $0x3,%eax
    b69f:	89 c1                	mov    %eax,%ecx
    b6a1:	48 89 d7             	mov    %rdx,%rdi
    b6a4:	48 89 f0             	mov    %rsi,%rax
    b6a7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b6aa:	90                   	nop
    b6ab:	c9                   	leave
    b6ac:	c3                   	ret

000000000000b6ad <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b6ad:	55                   	push   %rbp
    b6ae:	48 89 e5             	mov    %rsp,%rbp
    b6b1:	48 83 ec 20          	sub    $0x20,%rsp
    b6b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b6c1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b6c5:	48 89 c7             	mov    %rax,%rdi
    b6c8:	e8 bf 07 00 00       	call   be8c <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b6cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b6d1:	48 89 c7             	mov    %rax,%rdi
    b6d4:	e8 99 97 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b6d9:	48 89 c1             	mov    %rax,%rcx
    b6dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b6e4:	48 89 ce             	mov    %rcx,%rsi
    b6e7:	48 89 c7             	mov    %rax,%rdi
    b6ea:	e8 a8 07 00 00       	call   be97 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b6ef:	c9                   	leave
    b6f0:	c3                   	ret
    b6f1:	90                   	nop

000000000000b6f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b6f2:	55                   	push   %rbp
    b6f3:	48 89 e5             	mov    %rsp,%rbp
    b6f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b6fa:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b701:	07 7e 00 
      }
    b704:	5d                   	pop    %rbp
    b705:	c3                   	ret

000000000000b706 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b706:	55                   	push   %rbp
    b707:	48 89 e5             	mov    %rsp,%rbp
    b70a:	48 83 ec 20          	sub    $0x20,%rsp
    b70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b712:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b716:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b71e:	48 89 c7             	mov    %rax,%rdi
    b721:	e8 cc ff ff ff       	call   b6f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b726:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b72a:	0f 92 c0             	setb   %al
    b72d:	0f b6 c0             	movzbl %al,%eax
    b730:	48 85 c0             	test   %rax,%rax
    b733:	0f 95 c0             	setne  %al
    b736:	84 c0                	test   %al,%al
    b738:	74 1a                	je     b754 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b73a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b741:	0f fc 00 
    b744:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b748:	73 05                	jae    b74f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b74a:	e8 21 8b ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b74f:	e8 8c 89 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b754:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b758:	48 89 d0             	mov    %rdx,%rax
    b75b:	48 c1 e0 06          	shl    $0x6,%rax
    b75f:	48 01 d0             	add    %rdx,%rax
    b762:	48 c1 e0 02          	shl    $0x2,%rax
    b766:	48 89 c7             	mov    %rax,%rdi
    b769:	e8 12 8c ff ff       	call   4380 <_Znwm@plt>
    b76e:	90                   	nop
      }
    b76f:	c9                   	leave
    b770:	c3                   	ret

000000000000b771 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b771:	55                   	push   %rbp
    b772:	48 89 e5             	mov    %rsp,%rbp
    b775:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b77d:	5d                   	pop    %rbp
    b77e:	c3                   	ret

000000000000b77f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b77f:	55                   	push   %rbp
    b780:	48 89 e5             	mov    %rsp,%rbp
    b783:	48 83 ec 10          	sub    $0x10,%rsp
    b787:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b78b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b78f:	48 89 c6             	mov    %rax,%rsi
    b792:	bf 04 01 00 00       	mov    $0x104,%edi
    b797:	e8 c4 96 ff ff       	call   4e60 <_ZnwmPv>
    b79c:	b9 04 01 00 00       	mov    $0x104,%ecx
    b7a1:	be 00 00 00 00       	mov    $0x0,%esi
    b7a6:	48 89 30             	mov    %rsi,(%rax)
    b7a9:	89 ca                	mov    %ecx,%edx
    b7ab:	48 01 c2             	add    %rax,%rdx
    b7ae:	48 83 c2 08          	add    $0x8,%rdx
    b7b2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b7b6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b7ba:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b7be:	48 29 d0             	sub    %rdx,%rax
    b7c1:	01 c1                	add    %eax,%ecx
    b7c3:	83 e1 f8             	and    $0xfffffff8,%ecx
    b7c6:	89 c8                	mov    %ecx,%eax
    b7c8:	c1 e8 03             	shr    $0x3,%eax
    b7cb:	89 c1                	mov    %eax,%ecx
    b7cd:	48 89 d7             	mov    %rdx,%rdi
    b7d0:	48 89 f0             	mov    %rsi,%rax
    b7d3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b7d6:	90                   	nop
    b7d7:	c9                   	leave
    b7d8:	c3                   	ret

000000000000b7d9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b7d9:	55                   	push   %rbp
    b7da:	48 89 e5             	mov    %rsp,%rbp
    b7dd:	48 83 ec 20          	sub    $0x20,%rsp
    b7e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b7ed:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b7f1:	48 89 c7             	mov    %rax,%rdi
    b7f4:	e8 0d 07 00 00       	call   bf06 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b7f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7fd:	48 89 c7             	mov    %rax,%rdi
    b800:	e8 6d 96 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b805:	48 89 c1             	mov    %rax,%rcx
    b808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b810:	48 89 ce             	mov    %rcx,%rsi
    b813:	48 89 c7             	mov    %rax,%rdi
    b816:	e8 f6 06 00 00       	call   bf11 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b81b:	c9                   	leave
    b81c:	c3                   	ret
    b81d:	90                   	nop

000000000000b81e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b81e:	55                   	push   %rbp
    b81f:	48 89 e5             	mov    %rsp,%rbp
    b822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b826:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b82d:	ff ff 0f 
      }
    b830:	5d                   	pop    %rbp
    b831:	c3                   	ret

000000000000b832 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b832:	55                   	push   %rbp
    b833:	48 89 e5             	mov    %rsp,%rbp
    b836:	48 83 ec 20          	sub    $0x20,%rsp
    b83a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b83e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b842:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84a:	48 89 c7             	mov    %rax,%rdi
    b84d:	e8 cc ff ff ff       	call   b81e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b852:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b856:	0f 92 c0             	setb   %al
    b859:	0f b6 c0             	movzbl %al,%eax
    b85c:	48 85 c0             	test   %rax,%rax
    b85f:	0f 95 c0             	setne  %al
    b862:	84 c0                	test   %al,%al
    b864:	74 1a                	je     b880 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b866:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b86d:	ff ff 1f 
    b870:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b874:	73 05                	jae    b87b <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b876:	e8 f5 89 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b87b:	e8 60 88 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b880:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b884:	48 c1 e0 03          	shl    $0x3,%rax
    b888:	48 89 c7             	mov    %rax,%rdi
    b88b:	e8 f0 8a ff ff       	call   4380 <_Znwm@plt>
    b890:	90                   	nop
      }
    b891:	c9                   	leave
    b892:	c3                   	ret

000000000000b893 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b893:	55                   	push   %rbp
    b894:	48 89 e5             	mov    %rsp,%rbp
    b897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b89b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b89f:	5d                   	pop    %rbp
    b8a0:	c3                   	ret

000000000000b8a1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b8a1:	55                   	push   %rbp
    b8a2:	48 89 e5             	mov    %rsp,%rbp
    b8a5:	48 83 ec 10          	sub    $0x10,%rsp
    b8a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8b1:	48 89 c6             	mov    %rax,%rsi
    b8b4:	bf 08 00 00 00       	mov    $0x8,%edi
    b8b9:	e8 a2 95 ff ff       	call   4e60 <_ZnwmPv>
    b8be:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b8c5:	90                   	nop
    b8c6:	c9                   	leave
    b8c7:	c3                   	ret

000000000000b8c8 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b8c8:	55                   	push   %rbp
    b8c9:	48 89 e5             	mov    %rsp,%rbp
    b8cc:	48 83 ec 20          	sub    $0x20,%rsp
    b8d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b8dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8e0:	48 89 c7             	mov    %rax,%rdi
    b8e3:	e8 98 06 00 00       	call   bf80 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b8e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8ec:	48 89 c7             	mov    %rax,%rdi
    b8ef:	e8 7e 95 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b8f4:	48 89 c1             	mov    %rax,%rcx
    b8f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b8ff:	48 89 ce             	mov    %rcx,%rsi
    b902:	48 89 c7             	mov    %rax,%rdi
    b905:	e8 81 06 00 00       	call   bf8b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b90a:	c9                   	leave
    b90b:	c3                   	ret

000000000000b90c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b90c:	55                   	push   %rbp
    b90d:	48 89 e5             	mov    %rsp,%rbp
    b910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b914:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b91b:	ff ff 0f 
      }
    b91e:	5d                   	pop    %rbp
    b91f:	c3                   	ret

000000000000b920 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b920:	55                   	push   %rbp
    b921:	48 89 e5             	mov    %rsp,%rbp
    b924:	48 83 ec 20          	sub    $0x20,%rsp
    b928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b92c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b938:	48 89 c7             	mov    %rax,%rdi
    b93b:	e8 cc ff ff ff       	call   b90c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b940:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b944:	0f 92 c0             	setb   %al
    b947:	0f b6 c0             	movzbl %al,%eax
    b94a:	48 85 c0             	test   %rax,%rax
    b94d:	0f 95 c0             	setne  %al
    b950:	84 c0                	test   %al,%al
    b952:	74 1a                	je     b96e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b954:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b95b:	ff ff 1f 
    b95e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b962:	73 05                	jae    b969 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b964:	e8 07 89 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b969:	e8 72 87 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b96e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b972:	48 c1 e0 03          	shl    $0x3,%rax
    b976:	48 89 c7             	mov    %rax,%rdi
    b979:	e8 02 8a ff ff       	call   4380 <_Znwm@plt>
    b97e:	90                   	nop
      }
    b97f:	c9                   	leave
    b980:	c3                   	ret

000000000000b981 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b981:	55                   	push   %rbp
    b982:	48 89 e5             	mov    %rsp,%rbp
    b985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b98d:	5d                   	pop    %rbp
    b98e:	c3                   	ret

000000000000b98f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b98f:	55                   	push   %rbp
    b990:	48 89 e5             	mov    %rsp,%rbp
    b993:	48 83 ec 10          	sub    $0x10,%rsp
    b997:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b99f:	48 89 c6             	mov    %rax,%rsi
    b9a2:	bf 08 00 00 00       	mov    $0x8,%edi
    b9a7:	e8 b4 94 ff ff       	call   4e60 <_ZnwmPv>
    b9ac:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b9b3:	90                   	nop
    b9b4:	c9                   	leave
    b9b5:	c3                   	ret

000000000000b9b6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b9b6:	55                   	push   %rbp
    b9b7:	48 89 e5             	mov    %rsp,%rbp
    b9ba:	48 83 ec 20          	sub    $0x20,%rsp
    b9be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b9ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b9ce:	48 89 c7             	mov    %rax,%rdi
    b9d1:	e8 12 06 00 00       	call   bfe8 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b9d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9da:	48 89 c7             	mov    %rax,%rdi
    b9dd:	e8 90 94 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b9e2:	48 89 c1             	mov    %rax,%rcx
    b9e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b9ed:	48 89 ce             	mov    %rcx,%rsi
    b9f0:	48 89 c7             	mov    %rax,%rdi
    b9f3:	e8 fb 05 00 00       	call   bff3 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b9f8:	c9                   	leave
    b9f9:	c3                   	ret

000000000000b9fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b9fa:	55                   	push   %rbp
    b9fb:	48 89 e5             	mov    %rsp,%rbp
    b9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba02:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ba09:	55 55 05 
      }
    ba0c:	5d                   	pop    %rbp
    ba0d:	c3                   	ret

000000000000ba0e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba0e:	55                   	push   %rbp
    ba0f:	48 89 e5             	mov    %rsp,%rbp
    ba12:	48 83 ec 20          	sub    $0x20,%rsp
    ba16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba26:	48 89 c7             	mov    %rax,%rdi
    ba29:	e8 cc ff ff ff       	call   b9fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    ba2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba32:	0f 92 c0             	setb   %al
    ba35:	0f b6 c0             	movzbl %al,%eax
    ba38:	48 85 c0             	test   %rax,%rax
    ba3b:	0f 95 c0             	setne  %al
    ba3e:	84 c0                	test   %al,%al
    ba40:	74 1a                	je     ba5c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ba42:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    ba49:	aa aa 0a 
    ba4c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba50:	73 05                	jae    ba57 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ba52:	e8 19 88 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ba57:	e8 84 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ba5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba60:	48 89 d0             	mov    %rdx,%rax
    ba63:	48 01 c0             	add    %rax,%rax
    ba66:	48 01 d0             	add    %rdx,%rax
    ba69:	48 c1 e0 03          	shl    $0x3,%rax
    ba6d:	48 89 c7             	mov    %rax,%rdi
    ba70:	e8 0b 89 ff ff       	call   4380 <_Znwm@plt>
    ba75:	90                   	nop
      }
    ba76:	c9                   	leave
    ba77:	c3                   	ret

000000000000ba78 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ba78:	55                   	push   %rbp
    ba79:	48 89 e5             	mov    %rsp,%rbp
    ba7c:	48 83 ec 10          	sub    $0x10,%rsp
    ba80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ba84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba88:	48 89 c6             	mov    %rax,%rsi
    ba8b:	bf 18 00 00 00       	mov    $0x18,%edi
    ba90:	e8 cb 93 ff ff       	call   4e60 <_ZnwmPv>
    ba95:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ba9b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    baa2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    baa9:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    bab0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    bab7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    babe:	90                   	nop
    babf:	c9                   	leave
    bac0:	c3                   	ret

000000000000bac1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bac1:	55                   	push   %rbp
    bac2:	48 89 e5             	mov    %rsp,%rbp
    bac5:	48 83 ec 20          	sub    $0x20,%rsp
    bac9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bacd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bad1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bad5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bad9:	48 89 c7             	mov    %rax,%rdi
    badc:	e8 6f 05 00 00       	call   c050 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bae1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bae5:	48 89 c7             	mov    %rax,%rdi
    bae8:	e8 85 93 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    baed:	48 89 c1             	mov    %rax,%rcx
    baf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    baf8:	48 89 ce             	mov    %rcx,%rsi
    bafb:	48 89 c7             	mov    %rax,%rdi
    bafe:	e8 58 05 00 00       	call   c05b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bb03:	c9                   	leave
    bb04:	c3                   	ret
    bb05:	90                   	nop

000000000000bb06 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bb06:	55                   	push   %rbp
    bb07:	48 89 e5             	mov    %rsp,%rbp
    bb0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bb0e:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    bb15:	49 92 04 
      }
    bb18:	5d                   	pop    %rbp
    bb19:	c3                   	ret

000000000000bb1a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bb1a:	55                   	push   %rbp
    bb1b:	48 89 e5             	mov    %rsp,%rbp
    bb1e:	48 83 ec 20          	sub    $0x20,%rsp
    bb22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bb2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb32:	48 89 c7             	mov    %rax,%rdi
    bb35:	e8 cc ff ff ff       	call   bb06 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    bb3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb3e:	0f 92 c0             	setb   %al
    bb41:	0f b6 c0             	movzbl %al,%eax
    bb44:	48 85 c0             	test   %rax,%rax
    bb47:	0f 95 c0             	setne  %al
    bb4a:	84 c0                	test   %al,%al
    bb4c:	74 1a                	je     bb68 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb4e:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    bb55:	92 24 09 
    bb58:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb5c:	73 05                	jae    bb63 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bb5e:	e8 0d 87 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bb63:	e8 78 85 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bb68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb6c:	48 89 d0             	mov    %rdx,%rax
    bb6f:	48 c1 e0 03          	shl    $0x3,%rax
    bb73:	48 29 d0             	sub    %rdx,%rax
    bb76:	48 c1 e0 02          	shl    $0x2,%rax
    bb7a:	48 89 c7             	mov    %rax,%rdi
    bb7d:	e8 fe 87 ff ff       	call   4380 <_Znwm@plt>
    bb82:	90                   	nop
      }
    bb83:	c9                   	leave
    bb84:	c3                   	ret

000000000000bb85 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb85:	55                   	push   %rbp
    bb86:	48 89 e5             	mov    %rsp,%rbp
    bb89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb91:	5d                   	pop    %rbp
    bb92:	c3                   	ret

000000000000bb93 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb93:	55                   	push   %rbp
    bb94:	48 89 e5             	mov    %rsp,%rbp
    bb97:	48 83 ec 10          	sub    $0x10,%rsp
    bb9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba3:	48 89 c6             	mov    %rax,%rsi
    bba6:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bbab:	e8 b0 92 ff ff       	call   4e60 <_ZnwmPv>
    bbb0:	48 89 c7             	mov    %rax,%rdi
    bbb3:	e8 6c 05 00 00       	call   c124 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bbb8:	90                   	nop
    bbb9:	c9                   	leave
    bbba:	c3                   	ret
    bbbb:	90                   	nop

000000000000bbbc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bbbc:	55                   	push   %rbp
    bbbd:	48 89 e5             	mov    %rsp,%rbp
    bbc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bbc4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bbcb:	ff ff 0f 
      }
    bbce:	5d                   	pop    %rbp
    bbcf:	c3                   	ret

000000000000bbd0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bbd0:	55                   	push   %rbp
    bbd1:	48 89 e5             	mov    %rsp,%rbp
    bbd4:	48 83 ec 20          	sub    $0x20,%rsp
    bbd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbe0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bbe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe8:	48 89 c7             	mov    %rax,%rdi
    bbeb:	e8 cc ff ff ff       	call   bbbc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bbf0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbf4:	0f 92 c0             	setb   %al
    bbf7:	0f b6 c0             	movzbl %al,%eax
    bbfa:	48 85 c0             	test   %rax,%rax
    bbfd:	0f 95 c0             	setne  %al
    bc00:	84 c0                	test   %al,%al
    bc02:	74 1a                	je     bc1e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc04:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bc0b:	ff ff 1f 
    bc0e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc12:	73 05                	jae    bc19 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc14:	e8 57 86 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc19:	e8 c2 84 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc22:	48 c1 e0 03          	shl    $0x3,%rax
    bc26:	48 89 c7             	mov    %rax,%rdi
    bc29:	e8 52 87 ff ff       	call   4380 <_Znwm@plt>
    bc2e:	90                   	nop
      }
    bc2f:	c9                   	leave
    bc30:	c3                   	ret

000000000000bc31 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bc31:	55                   	push   %rbp
    bc32:	48 89 e5             	mov    %rsp,%rbp
    bc35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bc39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3d:	5d                   	pop    %rbp
    bc3e:	c3                   	ret

000000000000bc3f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bc3f:	55                   	push   %rbp
    bc40:	48 89 e5             	mov    %rsp,%rbp
    bc43:	48 83 ec 10          	sub    $0x10,%rsp
    bc47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bc4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc4f:	48 89 c6             	mov    %rax,%rsi
    bc52:	bf 08 00 00 00       	mov    $0x8,%edi
    bc57:	e8 04 92 ff ff       	call   4e60 <_ZnwmPv>
    bc5c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bc62:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bc69:	90                   	nop
    bc6a:	c9                   	leave
    bc6b:	c3                   	ret

000000000000bc6c <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc6c:	55                   	push   %rbp
    bc6d:	48 89 e5             	mov    %rsp,%rbp
    bc70:	48 83 ec 20          	sub    $0x20,%rsp
    bc74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc80:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc84:	48 89 c7             	mov    %rax,%rdi
    bc87:	e8 b3 04 00 00       	call   c13f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc90:	48 89 c7             	mov    %rax,%rdi
    bc93:	e8 da 91 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    bc98:	48 89 c1             	mov    %rax,%rcx
    bc9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bca3:	48 89 ce             	mov    %rcx,%rsi
    bca6:	48 89 c7             	mov    %rax,%rdi
    bca9:	e8 9c 04 00 00       	call   c14a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bcae:	c9                   	leave
    bcaf:	c3                   	ret

000000000000bcb0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bcb0:	55                   	push   %rbp
    bcb1:	48 89 e5             	mov    %rsp,%rbp
    bcb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bcb8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bcbf:	ff ff 1f 
      }
    bcc2:	5d                   	pop    %rbp
    bcc3:	c3                   	ret

000000000000bcc4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bcc4:	55                   	push   %rbp
    bcc5:	48 89 e5             	mov    %rsp,%rbp
    bcc8:	48 83 ec 20          	sub    $0x20,%rsp
    bccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcd4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bcd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcdc:	48 89 c7             	mov    %rax,%rdi
    bcdf:	e8 cc ff ff ff       	call   bcb0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    bce4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bce8:	0f 92 c0             	setb   %al
    bceb:	0f b6 c0             	movzbl %al,%eax
    bcee:	48 85 c0             	test   %rax,%rax
    bcf1:	0f 95 c0             	setne  %al
    bcf4:	84 c0                	test   %al,%al
    bcf6:	74 1a                	je     bd12 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bcf8:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    bcff:	ff ff 3f 
    bd02:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd06:	73 05                	jae    bd0d <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bd08:	e8 63 85 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bd0d:	e8 ce 83 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bd12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd16:	48 c1 e0 02          	shl    $0x2,%rax
    bd1a:	48 89 c7             	mov    %rax,%rdi
    bd1d:	e8 5e 86 ff ff       	call   4380 <_Znwm@plt>
    bd22:	90                   	nop
      }
    bd23:	c9                   	leave
    bd24:	c3                   	ret

000000000000bd25 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bd25:	55                   	push   %rbp
    bd26:	48 89 e5             	mov    %rsp,%rbp
    bd29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bd2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd31:	5d                   	pop    %rbp
    bd32:	c3                   	ret

000000000000bd33 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bd33:	55                   	push   %rbp
    bd34:	48 89 e5             	mov    %rsp,%rbp
    bd37:	48 83 ec 10          	sub    $0x10,%rsp
    bd3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd43:	48 89 c6             	mov    %rax,%rsi
    bd46:	bf 04 00 00 00       	mov    $0x4,%edi
    bd4b:	e8 10 91 ff ff       	call   4e60 <_ZnwmPv>
    bd50:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    bd56:	90                   	nop
    bd57:	c9                   	leave
    bd58:	c3                   	ret

000000000000bd59 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bd59:	55                   	push   %rbp
    bd5a:	48 89 e5             	mov    %rsp,%rbp
    bd5d:	48 83 ec 20          	sub    $0x20,%rsp
    bd61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd69:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bd6d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd71:	48 89 c7             	mov    %rax,%rdi
    bd74:	e8 2e 04 00 00       	call   c1a7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd7d:	48 89 c7             	mov    %rax,%rdi
    bd80:	e8 ed 90 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    bd85:	48 89 c1             	mov    %rax,%rcx
    bd88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd90:	48 89 ce             	mov    %rcx,%rsi
    bd93:	48 89 c7             	mov    %rax,%rdi
    bd96:	e8 17 04 00 00       	call   c1b2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bd9b:	c9                   	leave
    bd9c:	c3                   	ret
    bd9d:	90                   	nop

000000000000bd9e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bd9e:	55                   	push   %rbp
    bd9f:	48 89 e5             	mov    %rsp,%rbp
    bda2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bda6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bdad:	ff ff 0f 
      }
    bdb0:	5d                   	pop    %rbp
    bdb1:	c3                   	ret

000000000000bdb2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bdb2:	55                   	push   %rbp
    bdb3:	48 89 e5             	mov    %rsp,%rbp
    bdb6:	48 83 ec 20          	sub    $0x20,%rsp
    bdba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bdc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdca:	48 89 c7             	mov    %rax,%rdi
    bdcd:	e8 cc ff ff ff       	call   bd9e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bdd2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdd6:	0f 92 c0             	setb   %al
    bdd9:	0f b6 c0             	movzbl %al,%eax
    bddc:	48 85 c0             	test   %rax,%rax
    bddf:	0f 95 c0             	setne  %al
    bde2:	84 c0                	test   %al,%al
    bde4:	74 1a                	je     be00 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bde6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bded:	ff ff 1f 
    bdf0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdf4:	73 05                	jae    bdfb <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bdf6:	e8 75 84 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bdfb:	e8 e0 82 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    be00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be04:	48 c1 e0 03          	shl    $0x3,%rax
    be08:	48 89 c7             	mov    %rax,%rdi
    be0b:	e8 70 85 ff ff       	call   4380 <_Znwm@plt>
    be10:	90                   	nop
      }
    be11:	c9                   	leave
    be12:	c3                   	ret

000000000000be13 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    be13:	55                   	push   %rbp
    be14:	48 89 e5             	mov    %rsp,%rbp
    be17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    be1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be1f:	5d                   	pop    %rbp
    be20:	c3                   	ret

000000000000be21 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    be21:	55                   	push   %rbp
    be22:	48 89 e5             	mov    %rsp,%rbp
    be25:	48 83 ec 10          	sub    $0x10,%rsp
    be29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    be2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be31:	48 89 c6             	mov    %rax,%rsi
    be34:	bf 08 00 00 00       	mov    $0x8,%edi
    be39:	e8 22 90 ff ff       	call   4e60 <_ZnwmPv>
    be3e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    be45:	90                   	nop
    be46:	c9                   	leave
    be47:	c3                   	ret

000000000000be48 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    be48:	55                   	push   %rbp
    be49:	48 89 e5             	mov    %rsp,%rbp
    be4c:	48 83 ec 20          	sub    $0x20,%rsp
    be50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    be5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be60:	48 89 c7             	mov    %rax,%rdi
    be63:	e8 a7 03 00 00       	call   c20f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    be68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be6c:	48 89 c7             	mov    %rax,%rdi
    be6f:	e8 fe 8f ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    be74:	48 89 c1             	mov    %rax,%rcx
    be77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be7f:	48 89 ce             	mov    %rcx,%rsi
    be82:	48 89 c7             	mov    %rax,%rdi
    be85:	e8 90 03 00 00       	call   c21a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    be8a:	c9                   	leave
    be8b:	c3                   	ret

000000000000be8c <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    be8c:	55                   	push   %rbp
    be8d:	48 89 e5             	mov    %rsp,%rbp
    be90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be94:	90                   	nop
    be95:	5d                   	pop    %rbp
    be96:	c3                   	ret

000000000000be97 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be97:	55                   	push   %rbp
    be98:	48 89 e5             	mov    %rsp,%rbp
    be9b:	48 83 ec 20          	sub    $0x20,%rsp
    be9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bea3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bea7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    beab:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    beb0:	75 06                	jne    beb8 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    beb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb6:	eb 4c                	jmp    bf04 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    beb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bebc:	48 89 d0             	mov    %rdx,%rax
    bebf:	48 c1 e0 06          	shl    $0x6,%rax
    bec3:	48 01 d0             	add    %rdx,%rax
    bec6:	48 c1 e0 03          	shl    $0x3,%rax
    beca:	48 89 c2             	mov    %rax,%rdx
    becd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bed5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bedd:	48 89 ce             	mov    %rcx,%rsi
    bee0:	48 89 c7             	mov    %rax,%rdi
    bee3:	e8 8f 03 00 00       	call   c277 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bee8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    beec:	48 89 d0             	mov    %rdx,%rax
    beef:	48 c1 e0 06          	shl    $0x6,%rax
    bef3:	48 01 d0             	add    %rdx,%rax
    bef6:	48 c1 e0 03          	shl    $0x3,%rax
    befa:	48 89 c2             	mov    %rax,%rdx
    befd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf01:	48 01 d0             	add    %rdx,%rax
    }
    bf04:	c9                   	leave
    bf05:	c3                   	ret

000000000000bf06 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bf06:	55                   	push   %rbp
    bf07:	48 89 e5             	mov    %rsp,%rbp
    bf0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf0e:	90                   	nop
    bf0f:	5d                   	pop    %rbp
    bf10:	c3                   	ret

000000000000bf11 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf11:	55                   	push   %rbp
    bf12:	48 89 e5             	mov    %rsp,%rbp
    bf15:	48 83 ec 20          	sub    $0x20,%rsp
    bf19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf25:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf2a:	75 06                	jne    bf32 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf30:	eb 4c                	jmp    bf7e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bf32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf36:	48 89 d0             	mov    %rdx,%rax
    bf39:	48 c1 e0 06          	shl    $0x6,%rax
    bf3d:	48 01 d0             	add    %rdx,%rax
    bf40:	48 c1 e0 02          	shl    $0x2,%rax
    bf44:	48 89 c2             	mov    %rax,%rdx
    bf47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf57:	48 89 ce             	mov    %rcx,%rsi
    bf5a:	48 89 c7             	mov    %rax,%rdi
    bf5d:	e8 43 03 00 00       	call   c2a5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bf62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf66:	48 89 d0             	mov    %rdx,%rax
    bf69:	48 c1 e0 06          	shl    $0x6,%rax
    bf6d:	48 01 d0             	add    %rdx,%rax
    bf70:	48 c1 e0 02          	shl    $0x2,%rax
    bf74:	48 89 c2             	mov    %rax,%rdx
    bf77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf7b:	48 01 d0             	add    %rdx,%rax
    }
    bf7e:	c9                   	leave
    bf7f:	c3                   	ret

000000000000bf80 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bf80:	55                   	push   %rbp
    bf81:	48 89 e5             	mov    %rsp,%rbp
    bf84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf88:	90                   	nop
    bf89:	5d                   	pop    %rbp
    bf8a:	c3                   	ret

000000000000bf8b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf8b:	55                   	push   %rbp
    bf8c:	48 89 e5             	mov    %rsp,%rbp
    bf8f:	48 83 ec 20          	sub    $0x20,%rsp
    bf93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf9f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bfa4:	75 06                	jne    bfac <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bfa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfaa:	eb 3a                	jmp    bfe6 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bfac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfb0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bfb7:	00 
    bfb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfbc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bfc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfc8:	48 89 ce             	mov    %rcx,%rsi
    bfcb:	48 89 c7             	mov    %rax,%rdi
    bfce:	e8 00 03 00 00       	call   c2d3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    bfd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfd7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bfde:	00 
    bfdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe3:	48 01 d0             	add    %rdx,%rax
    }
    bfe6:	c9                   	leave
    bfe7:	c3                   	ret

000000000000bfe8 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bfe8:	55                   	push   %rbp
    bfe9:	48 89 e5             	mov    %rsp,%rbp
    bfec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bff0:	90                   	nop
    bff1:	5d                   	pop    %rbp
    bff2:	c3                   	ret

000000000000bff3 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bff3:	55                   	push   %rbp
    bff4:	48 89 e5             	mov    %rsp,%rbp
    bff7:	48 83 ec 20          	sub    $0x20,%rsp
    bffb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c003:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c007:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c00c:	75 06                	jne    c014 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c012:	eb 3a                	jmp    c04e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c014:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c018:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c01f:	00 
    c020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c024:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c028:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c02c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c030:	48 89 ce             	mov    %rcx,%rsi
    c033:	48 89 c7             	mov    %rax,%rdi
    c036:	e8 c6 02 00 00       	call   c301 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c03b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c03f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c046:	00 
    c047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c04b:	48 01 d0             	add    %rdx,%rax
    }
    c04e:	c9                   	leave
    c04f:	c3                   	ret

000000000000c050 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c050:	55                   	push   %rbp
    c051:	48 89 e5             	mov    %rsp,%rbp
    c054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c058:	90                   	nop
    c059:	5d                   	pop    %rbp
    c05a:	c3                   	ret

000000000000c05b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c05b:	55                   	push   %rbp
    c05c:	48 89 e5             	mov    %rsp,%rbp
    c05f:	48 83 ec 20          	sub    $0x20,%rsp
    c063:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c067:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c06b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c06f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c074:	75 06                	jne    c07c <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c07a:	eb 4a                	jmp    c0c6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    c07c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c080:	48 89 d0             	mov    %rdx,%rax
    c083:	48 01 c0             	add    %rax,%rax
    c086:	48 01 d0             	add    %rdx,%rax
    c089:	48 c1 e0 03          	shl    $0x3,%rax
    c08d:	48 89 c2             	mov    %rax,%rdx
    c090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c094:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c098:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c09c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a0:	48 89 ce             	mov    %rcx,%rsi
    c0a3:	48 89 c7             	mov    %rax,%rdi
    c0a6:	e8 84 02 00 00       	call   c32f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c0ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0af:	48 89 d0             	mov    %rdx,%rax
    c0b2:	48 01 c0             	add    %rax,%rax
    c0b5:	48 01 d0             	add    %rdx,%rax
    c0b8:	48 c1 e0 03          	shl    $0x3,%rax
    c0bc:	48 89 c2             	mov    %rax,%rdx
    c0bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c3:	48 01 d0             	add    %rdx,%rax
    }
    c0c6:	c9                   	leave
    c0c7:	c3                   	ret

000000000000c0c8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    c0c8:	55                   	push   %rbp
    c0c9:	48 89 e5             	mov    %rsp,%rbp
    c0cc:	48 83 ec 10          	sub    $0x10,%rsp
    c0d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0d8:	48 89 c7             	mov    %rax,%rdi
    c0db:	e8 7e 02 00 00       	call   c35e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    c0e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0e4:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    c0e8:	90                   	nop
    c0e9:	c9                   	leave
    c0ea:	c3                   	ret
    c0eb:	90                   	nop

000000000000c0ec <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    c0ec:	55                   	push   %rbp
    c0ed:	48 89 e5             	mov    %rsp,%rbp
    c0f0:	48 83 ec 10          	sub    $0x10,%rsp
    c0f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fc:	48 89 c7             	mov    %rax,%rdi
    c0ff:	e8 c4 ff ff ff       	call   c0c8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c104:	90                   	nop
    c105:	c9                   	leave
    c106:	c3                   	ret
    c107:	90                   	nop

000000000000c108 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c108:	55                   	push   %rbp
    c109:	48 89 e5             	mov    %rsp,%rbp
    c10c:	48 83 ec 10          	sub    $0x10,%rsp
    c110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c118:	48 89 c7             	mov    %rax,%rdi
    c11b:	e8 cc ff ff ff       	call   c0ec <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c120:	90                   	nop
    c121:	c9                   	leave
    c122:	c3                   	ret
    c123:	90                   	nop

000000000000c124 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c124:	55                   	push   %rbp
    c125:	48 89 e5             	mov    %rsp,%rbp
    c128:	48 83 ec 10          	sub    $0x10,%rsp
    c12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c134:	48 89 c7             	mov    %rax,%rdi
    c137:	e8 cc ff ff ff       	call   c108 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c13c:	90                   	nop
    c13d:	c9                   	leave
    c13e:	c3                   	ret

000000000000c13f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c13f:	55                   	push   %rbp
    c140:	48 89 e5             	mov    %rsp,%rbp
    c143:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c147:	90                   	nop
    c148:	5d                   	pop    %rbp
    c149:	c3                   	ret

000000000000c14a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c14a:	55                   	push   %rbp
    c14b:	48 89 e5             	mov    %rsp,%rbp
    c14e:	48 83 ec 20          	sub    $0x20,%rsp
    c152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c156:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c15a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c15e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c163:	75 06                	jne    c16b <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c169:	eb 3a                	jmp    c1a5 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c16b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c16f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c176:	00 
    c177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c17b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c17f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c187:	48 89 ce             	mov    %rcx,%rsi
    c18a:	48 89 c7             	mov    %rax,%rdi
    c18d:	e8 d7 01 00 00       	call   c369 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c192:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c196:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c19d:	00 
    c19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1a2:	48 01 d0             	add    %rdx,%rax
    }
    c1a5:	c9                   	leave
    c1a6:	c3                   	ret

000000000000c1a7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c1a7:	55                   	push   %rbp
    c1a8:	48 89 e5             	mov    %rsp,%rbp
    c1ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c1af:	90                   	nop
    c1b0:	5d                   	pop    %rbp
    c1b1:	c3                   	ret

000000000000c1b2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c1b2:	55                   	push   %rbp
    c1b3:	48 89 e5             	mov    %rsp,%rbp
    c1b6:	48 83 ec 20          	sub    $0x20,%rsp
    c1ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c1c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c1cb:	75 06                	jne    c1d3 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c1cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1d1:	eb 3a                	jmp    c20d <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c1d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1d7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c1de:	00 
    c1df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c1e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1ef:	48 89 ce             	mov    %rcx,%rsi
    c1f2:	48 89 c7             	mov    %rax,%rdi
    c1f5:	e8 9d 01 00 00       	call   c397 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c1fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1fe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c205:	00 
    c206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20a:	48 01 d0             	add    %rdx,%rax
    }
    c20d:	c9                   	leave
    c20e:	c3                   	ret

000000000000c20f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c20f:	55                   	push   %rbp
    c210:	48 89 e5             	mov    %rsp,%rbp
    c213:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c217:	90                   	nop
    c218:	5d                   	pop    %rbp
    c219:	c3                   	ret

000000000000c21a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c21a:	55                   	push   %rbp
    c21b:	48 89 e5             	mov    %rsp,%rbp
    c21e:	48 83 ec 20          	sub    $0x20,%rsp
    c222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c226:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c22a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c22e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c233:	75 06                	jne    c23b <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c239:	eb 3a                	jmp    c275 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c23b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c23f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c246:	00 
    c247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c24b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c24f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c257:	48 89 ce             	mov    %rcx,%rsi
    c25a:	48 89 c7             	mov    %rax,%rdi
    c25d:	e8 63 01 00 00       	call   c3c5 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c262:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c266:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c26d:	00 
    c26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c272:	48 01 d0             	add    %rdx,%rax
    }
    c275:	c9                   	leave
    c276:	c3                   	ret

000000000000c277 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c277:	55                   	push   %rbp
    c278:	48 89 e5             	mov    %rsp,%rbp
    c27b:	48 83 ec 20          	sub    $0x20,%rsp
    c27f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c283:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c287:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c28b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c28f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c297:	48 89 ce             	mov    %rcx,%rsi
    c29a:	48 89 c7             	mov    %rax,%rdi
    c29d:	e8 51 01 00 00       	call   c3f3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2a2:	90                   	nop
    c2a3:	c9                   	leave
    c2a4:	c3                   	ret

000000000000c2a5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2a5:	55                   	push   %rbp
    c2a6:	48 89 e5             	mov    %rsp,%rbp
    c2a9:	48 83 ec 20          	sub    $0x20,%rsp
    c2ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2c5:	48 89 ce             	mov    %rcx,%rsi
    c2c8:	48 89 c7             	mov    %rax,%rdi
    c2cb:	e8 9b 01 00 00       	call   c46b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2d0:	90                   	nop
    c2d1:	c9                   	leave
    c2d2:	c3                   	ret

000000000000c2d3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2d3:	55                   	push   %rbp
    c2d4:	48 89 e5             	mov    %rsp,%rbp
    c2d7:	48 83 ec 20          	sub    $0x20,%rsp
    c2db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f3:	48 89 ce             	mov    %rcx,%rsi
    c2f6:	48 89 c7             	mov    %rax,%rdi
    c2f9:	e8 e5 01 00 00       	call   c4e3 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c2fe:	90                   	nop
    c2ff:	c9                   	leave
    c300:	c3                   	ret

000000000000c301 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c301:	55                   	push   %rbp
    c302:	48 89 e5             	mov    %rsp,%rbp
    c305:	48 83 ec 20          	sub    $0x20,%rsp
    c309:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c30d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c311:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c315:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c319:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c31d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c321:	48 89 ce             	mov    %rcx,%rsi
    c324:	48 89 c7             	mov    %rax,%rdi
    c327:	e8 f2 01 00 00       	call   c51e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c32c:	90                   	nop
    c32d:	c9                   	leave
    c32e:	c3                   	ret

000000000000c32f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c32f:	55                   	push   %rbp
    c330:	48 89 e5             	mov    %rsp,%rbp
    c333:	48 83 ec 20          	sub    $0x20,%rsp
    c337:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c33b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c33f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c343:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c347:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c34b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34f:	48 89 ce             	mov    %rcx,%rsi
    c352:	48 89 c7             	mov    %rax,%rdi
    c355:	e8 ff 01 00 00       	call   c559 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c35a:	90                   	nop
    c35b:	c9                   	leave
    c35c:	c3                   	ret
    c35d:	90                   	nop

000000000000c35e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c35e:	55                   	push   %rbp
    c35f:	48 89 e5             	mov    %rsp,%rbp
    c362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c366:	90                   	nop
    c367:	5d                   	pop    %rbp
    c368:	c3                   	ret

000000000000c369 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c369:	55                   	push   %rbp
    c36a:	48 89 e5             	mov    %rsp,%rbp
    c36d:	48 83 ec 20          	sub    $0x20,%rsp
    c371:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c375:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c379:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c37d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c381:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c389:	48 89 ce             	mov    %rcx,%rsi
    c38c:	48 89 c7             	mov    %rax,%rdi
    c38f:	e8 08 02 00 00       	call   c59c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c394:	90                   	nop
    c395:	c9                   	leave
    c396:	c3                   	ret

000000000000c397 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c397:	55                   	push   %rbp
    c398:	48 89 e5             	mov    %rsp,%rbp
    c39b:	48 83 ec 20          	sub    $0x20,%rsp
    c39f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c3ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3b7:	48 89 ce             	mov    %rcx,%rsi
    c3ba:	48 89 c7             	mov    %rax,%rdi
    c3bd:	e8 0d 02 00 00       	call   c5cf <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c3c2:	90                   	nop
    c3c3:	c9                   	leave
    c3c4:	c3                   	ret

000000000000c3c5 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c3c5:	55                   	push   %rbp
    c3c6:	48 89 e5             	mov    %rsp,%rbp
    c3c9:	48 83 ec 20          	sub    $0x20,%rsp
    c3cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c3d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e5:	48 89 ce             	mov    %rcx,%rsi
    c3e8:	48 89 c7             	mov    %rax,%rdi
    c3eb:	e8 10 02 00 00       	call   c600 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c3f0:	90                   	nop
    c3f1:	c9                   	leave
    c3f2:	c3                   	ret

000000000000c3f3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c3f3:	55                   	push   %rbp
    c3f4:	48 89 e5             	mov    %rsp,%rbp
    c3f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c403:	eb 58                	jmp    c45d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c409:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c40d:	b9 08 02 00 00       	mov    $0x208,%ecx
    c412:	48 8b 32             	mov    (%rdx),%rsi
    c415:	48 89 30             	mov    %rsi,(%rax)
    c418:	89 ce                	mov    %ecx,%esi
    c41a:	48 01 c6             	add    %rax,%rsi
    c41d:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c421:	89 ce                	mov    %ecx,%esi
    c423:	48 01 d6             	add    %rdx,%rsi
    c426:	48 83 c6 08          	add    $0x8,%rsi
    c42a:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c42e:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c432:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c436:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c43a:	48 29 f8             	sub    %rdi,%rax
    c43d:	48 29 c2             	sub    %rax,%rdx
    c440:	01 c1                	add    %eax,%ecx
    c442:	83 e1 f8             	and    $0xfffffff8,%ecx
    c445:	89 c8                	mov    %ecx,%eax
    c447:	c1 e8 03             	shr    $0x3,%eax
    c44a:	89 c0                	mov    %eax,%eax
    c44c:	48 89 d6             	mov    %rdx,%rsi
    c44f:	48 89 c1             	mov    %rax,%rcx
    c452:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c455:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c45c:	00 
    c45d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c461:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c465:	75 9e                	jne    c405 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c467:	90                   	nop
    c468:	90                   	nop
    c469:	5d                   	pop    %rbp
    c46a:	c3                   	ret

000000000000c46b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c46b:	55                   	push   %rbp
    c46c:	48 89 e5             	mov    %rsp,%rbp
    c46f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c473:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c477:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c47b:	eb 58                	jmp    c4d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c47d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c481:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c485:	b9 04 01 00 00       	mov    $0x104,%ecx
    c48a:	48 8b 32             	mov    (%rdx),%rsi
    c48d:	48 89 30             	mov    %rsi,(%rax)
    c490:	89 ce                	mov    %ecx,%esi
    c492:	48 01 c6             	add    %rax,%rsi
    c495:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c499:	89 ce                	mov    %ecx,%esi
    c49b:	48 01 d6             	add    %rdx,%rsi
    c49e:	48 83 c6 08          	add    $0x8,%rsi
    c4a2:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c4a6:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c4aa:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c4ae:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c4b2:	48 29 f8             	sub    %rdi,%rax
    c4b5:	48 29 c2             	sub    %rax,%rdx
    c4b8:	01 c1                	add    %eax,%ecx
    c4ba:	83 e1 f8             	and    $0xfffffff8,%ecx
    c4bd:	89 c8                	mov    %ecx,%eax
    c4bf:	c1 e8 03             	shr    $0x3,%eax
    c4c2:	89 c0                	mov    %eax,%eax
    c4c4:	48 89 d6             	mov    %rdx,%rsi
    c4c7:	48 89 c1             	mov    %rax,%rcx
    c4ca:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c4cd:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c4d4:	00 
    c4d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4d9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4dd:	75 9e                	jne    c47d <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c4df:	90                   	nop
    c4e0:	90                   	nop
    c4e1:	5d                   	pop    %rbp
    c4e2:	c3                   	ret

000000000000c4e3 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c4e3:	55                   	push   %rbp
    c4e4:	48 89 e5             	mov    %rsp,%rbp
    c4e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c4eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c4ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c4f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4f7:	48 8b 00             	mov    (%rax),%rax
    c4fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c4fe:	eb 10                	jmp    c510 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c500:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c504:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c508:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c50b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c514:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c518:	75 e6                	jne    c500 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c51a:	90                   	nop
    c51b:	90                   	nop
    c51c:	5d                   	pop    %rbp
    c51d:	c3                   	ret

000000000000c51e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c51e:	55                   	push   %rbp
    c51f:	48 89 e5             	mov    %rsp,%rbp
    c522:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c526:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c52a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c52e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c532:	48 8b 00             	mov    (%rax),%rax
    c535:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c539:	eb 10                	jmp    c54b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c53b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c543:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c546:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c54b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c54f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c553:	75 e6                	jne    c53b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c555:	90                   	nop
    c556:	90                   	nop
    c557:	5d                   	pop    %rbp
    c558:	c3                   	ret

000000000000c559 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c559:	55                   	push   %rbp
    c55a:	48 89 e5             	mov    %rsp,%rbp
    c55d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c561:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c565:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c569:	eb 23                	jmp    c58e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c56b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c56f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c573:	48 8b 06             	mov    (%rsi),%rax
    c576:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c57a:	48 89 01             	mov    %rax,(%rcx)
    c57d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c581:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c585:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c589:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c58e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c592:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c596:	75 d3                	jne    c56b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c598:	90                   	nop
    c599:	90                   	nop
    c59a:	5d                   	pop    %rbp
    c59b:	c3                   	ret

000000000000c59c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c59c:	55                   	push   %rbp
    c59d:	48 89 e5             	mov    %rsp,%rbp
    c5a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c5ac:	eb 13                	jmp    c5c1 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5b6:	48 8b 12             	mov    (%rdx),%rdx
    c5b9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c5bc:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c5c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5c9:	75 e3                	jne    c5ae <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c5cb:	90                   	nop
    c5cc:	90                   	nop
    c5cd:	5d                   	pop    %rbp
    c5ce:	c3                   	ret

000000000000c5cf <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c5cf:	55                   	push   %rbp
    c5d0:	48 89 e5             	mov    %rsp,%rbp
    c5d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c5df:	eb 11                	jmp    c5f2 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c5e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5e5:	8b 10                	mov    (%rax),%edx
    c5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5eb:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c5ed:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5fa:	75 e5                	jne    c5e1 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c5fc:	90                   	nop
    c5fd:	90                   	nop
    c5fe:	5d                   	pop    %rbp
    c5ff:	c3                   	ret

000000000000c600 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c600:	55                   	push   %rbp
    c601:	48 89 e5             	mov    %rsp,%rbp
    c604:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c608:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c60c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c610:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c614:	48 8b 00             	mov    (%rax),%rax
    c617:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c61b:	eb 10                	jmp    c62d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c61d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c621:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c625:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c628:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c62d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c631:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c635:	75 e6                	jne    c61d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c637:	90                   	nop
    c638:	90                   	nop
    c639:	5d                   	pop    %rbp
    c63a:	c3                   	ret

000000000000c63b <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c63b:	55                   	push   %rbp
    c63c:	48 89 e5             	mov    %rsp,%rbp
    c63f:	53                   	push   %rbx
    c640:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c644:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c648:	be 00 00 00 00       	mov    $0x0,%esi
    c64d:	48 89 c7             	mov    %rax,%rdi
    c650:	e8 0b 7e ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c655:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c658:	89 c3                	mov    %eax,%ebx
    c65a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c65e:	48 89 c7             	mov    %rax,%rdi
    c661:	e8 ea b6 ff ff       	call   7d50 <_ZNSaI17VkLayerPropertiesEC1Ev>
    c666:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c66a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c66e:	48 89 de             	mov    %rbx,%rsi
    c671:	48 89 c7             	mov    %rax,%rdi
    c674:	e8 0f b7 ff ff       	call   7d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c679:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c67d:	48 89 c7             	mov    %rax,%rdi
    c680:	e8 e7 b6 ff ff       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c685:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c689:	48 89 c7             	mov    %rax,%rdi
    c68c:	e8 b1 b7 ff ff       	call   7e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c691:	48 89 c2             	mov    %rax,%rdx
    c694:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c698:	48 89 d6             	mov    %rdx,%rsi
    c69b:	48 89 c7             	mov    %rax,%rdi
    c69e:	e8 bd 7d ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c6a3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c6a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c6ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6af:	48 89 c7             	mov    %rax,%rdi
    c6b2:	e8 63 04 00 00       	call   cb1a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c6b7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c6bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6bf:	48 89 c7             	mov    %rax,%rdi
    c6c2:	e8 79 04 00 00       	call   cb40 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c6c7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c6cb:	eb 5b                	jmp    c728 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c6cd:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c6d1:	48 89 c7             	mov    %rax,%rdi
    c6d4:	e8 ef 04 00 00       	call   cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c6d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c6dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c6e1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c6e5:	48 89 d6             	mov    %rdx,%rsi
    c6e8:	48 89 c7             	mov    %rax,%rdi
    c6eb:	e8 f8 03 00 00       	call   cae8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c6f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c6f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c6f8:	48 8b 3d a1 b5 01 00 	mov    0x1b5a1(%rip),%rdi        # 27ca0 <_ZN3vkh19validationLayerNameE>
    c6ff:	48 8b 35 a2 b5 01 00 	mov    0x1b5a2(%rip),%rsi        # 27ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c706:	48 89 d1             	mov    %rdx,%rcx
    c709:	48 89 c2             	mov    %rax,%rdx
    c70c:	e8 da 04 00 00       	call   cbeb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c711:	84 c0                	test   %al,%al
    c713:	74 07                	je     c71c <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c715:	bb 01 00 00 00       	mov    $0x1,%ebx
    c71a:	eb 28                	jmp    c744 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c71c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c720:	48 89 c7             	mov    %rax,%rdi
    c723:	e8 7c 04 00 00       	call   cba4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c728:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c72c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c730:	48 89 d6             	mov    %rdx,%rsi
    c733:	48 89 c7             	mov    %rax,%rdi
    c736:	e8 2e 04 00 00       	call   cb69 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c73b:	84 c0                	test   %al,%al
    c73d:	75 8e                	jne    c6cd <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c73f:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c744:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c748:	48 89 c7             	mov    %rax,%rdi
    c74b:	e8 ae b6 ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c750:	89 d8                	mov    %ebx,%eax
    c752:	eb 34                	jmp    c788 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c754:	48 89 c3             	mov    %rax,%rbx
    c757:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c75b:	48 89 c7             	mov    %rax,%rdi
    c75e:	e8 09 b6 ff ff       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    c763:	48 89 d8             	mov    %rbx,%rax
    c766:	48 89 c7             	mov    %rax,%rdi
    c769:	e8 82 7f ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    c76e:	48 89 c3             	mov    %rax,%rbx
    c771:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c775:	48 89 c7             	mov    %rax,%rdi
    c778:	e8 81 b6 ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c77d:	48 89 d8             	mov    %rbx,%rax
    c780:	48 89 c7             	mov    %rax,%rdi
    c783:	e8 68 7f ff ff       	call   46f0 <_Unwind_Resume@plt>
    c788:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c78c:	c9                   	leave
    c78d:	c3                   	ret

000000000000c78e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c78e:	55                   	push   %rbp
    c78f:	48 89 e5             	mov    %rsp,%rbp
    c792:	48 83 ec 20          	sub    $0x20,%rsp
    c796:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c799:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c79c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c7a0:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c7a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c7a7:	83 f8 01             	cmp    $0x1,%eax
    c7aa:	7e 3c                	jle    c7e8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c7ac:	be 0a 00 00 00       	mov    $0xa,%esi
    c7b1:	48 8d 05 68 bd 01 00 	lea    0x1bd68(%rip),%rax        # 28520 <_ZSt4cerr@GLIBCXX_3.4>
    c7b8:	48 89 c7             	mov    %rax,%rdi
    c7bb:	e8 c0 7c ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c7c0:	48 89 c2             	mov    %rax,%rdx
    c7c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7c7:	48 8b 40 28          	mov    0x28(%rax),%rax
    c7cb:	48 89 c6             	mov    %rax,%rsi
    c7ce:	48 89 d7             	mov    %rdx,%rdi
    c7d1:	e8 9a 7b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c7d6:	48 8b 15 bb b7 01 00 	mov    0x1b7bb(%rip),%rdx        # 27f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c7dd:	48 89 d6             	mov    %rdx,%rsi
    c7e0:	48 89 c7             	mov    %rax,%rdi
    c7e3:	e8 f8 7b ff ff       	call   43e0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c7e8:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c7ed:	c9                   	leave
    c7ee:	c3                   	ret

000000000000c7ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c7ef:	55                   	push   %rbp
    c7f0:	48 89 e5             	mov    %rsp,%rbp
    c7f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c7f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c7ff:	0f 11 00             	movups %xmm0,(%rax)
    c802:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c806:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c80a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c80e:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c818:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c81f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c823:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c82a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82e:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c78e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c835:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c83d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c844:	00 
}
    c845:	90                   	nop
    c846:	5d                   	pop    %rbp
    c847:	c3                   	ret

000000000000c848 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c848:	55                   	push   %rbp
    c849:	48 89 e5             	mov    %rsp,%rbp
    c84c:	48 83 ec 30          	sub    $0x30,%rsp
    c850:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c854:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c858:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c85c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c864:	48 8d 15 85 ce 00 00 	lea    0xce85(%rip),%rdx        # 196f0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c86b:	48 89 d6             	mov    %rdx,%rsi
    c86e:	48 89 c7             	mov    %rax,%rdi
    c871:	e8 ca 7a ff ff       	call   4340 <vkGetInstanceProcAddr@plt>
    c876:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c87a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c87f:	75 07                	jne    c888 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c881:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c886:	eb 1b                	jmp    c8a3 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c888:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c88c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c890:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c894:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c89c:	48 89 c7             	mov    %rax,%rdi
    c89f:	41 ff d0             	call   *%r8
    c8a2:	90                   	nop
}
    c8a3:	c9                   	leave
    c8a4:	c3                   	ret

000000000000c8a5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    c8a5:	55                   	push   %rbp
    c8a6:	48 89 e5             	mov    %rsp,%rbp
    c8a9:	41 54                	push   %r12
    c8ab:	53                   	push   %rbx
    c8ac:	48 83 ec 50          	sub    $0x50,%rsp
    c8b0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    c8b4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c8b8:	48 89 c7             	mov    %rax,%rdi
    c8bb:	e8 2f ff ff ff       	call   c7ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    c8c0:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c8c7:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c8c8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c8cc:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    c8d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c8d4:	48 89 d1             	mov    %rdx,%rcx
    c8d7:	ba 00 00 00 00       	mov    $0x0,%edx
    c8dc:	48 89 c7             	mov    %rax,%rdi
    c8df:	e8 64 ff ff ff       	call   c848 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    c8e4:	85 c0                	test   %eax,%eax
    c8e6:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c8e9:	84 c0                	test   %al,%al
    c8eb:	74 3b                	je     c928 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    c8ed:	bf 10 00 00 00       	mov    $0x10,%edi
    c8f2:	e8 79 78 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    c8f7:	48 89 c3             	mov    %rax,%rbx
    c8fa:	48 8d 05 0f ce 00 00 	lea    0xce0f(%rip),%rax        # 19710 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    c901:	48 89 c6             	mov    %rax,%rsi
    c904:	48 89 df             	mov    %rbx,%rdi
    c907:	e8 f4 77 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    c90c:	48 8b 05 95 b6 01 00 	mov    0x1b695(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c913:	48 89 c2             	mov    %rax,%rdx
    c916:	48 8d 05 23 b4 01 00 	lea    0x1b423(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c91d:	48 89 c6             	mov    %rax,%rsi
    c920:	48 89 df             	mov    %rbx,%rdi
    c923:	e8 68 7d ff ff       	call   4690 <__cxa_throw@plt>
  }
  return debugMessenger;
    c928:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c92c:	eb 16                	jmp    c944 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    c92e:	49 89 c4             	mov    %rax,%r12
    c931:	48 89 df             	mov    %rbx,%rdi
    c934:	e8 07 79 ff ff       	call   4240 <__cxa_free_exception@plt>
    c939:	4c 89 e0             	mov    %r12,%rax
    c93c:	48 89 c7             	mov    %rax,%rdi
    c93f:	e8 ac 7d ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    c944:	48 83 c4 50          	add    $0x50,%rsp
    c948:	5b                   	pop    %rbx
    c949:	41 5c                	pop    %r12
    c94b:	5d                   	pop    %rbp
    c94c:	c3                   	ret

000000000000c94d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    c94d:	55                   	push   %rbp
    c94e:	48 89 e5             	mov    %rsp,%rbp
    c951:	48 83 ec 30          	sub    $0x30,%rsp
    c955:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c959:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c95d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c965:	48 8d 15 c4 cd 00 00 	lea    0xcdc4(%rip),%rdx        # 19730 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    c96c:	48 89 d6             	mov    %rdx,%rsi
    c96f:	48 89 c7             	mov    %rax,%rdi
    c972:	e8 c9 79 ff ff       	call   4340 <vkGetInstanceProcAddr@plt>
    c977:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    c97b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c980:	74 19                	je     c99b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    c982:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c986:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c98a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c98e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c992:	48 89 ce             	mov    %rcx,%rsi
    c995:	48 89 c7             	mov    %rax,%rdi
    c998:	41 ff d0             	call   *%r8
  }
}
    c99b:	90                   	nop
    c99c:	c9                   	leave
    c99d:	c3                   	ret

000000000000c99e <_Z41__static_initialization_and_destruction_0ii>:

    c99e:	55                   	push   %rbp
    c99f:	48 89 e5             	mov    %rsp,%rbp
    c9a2:	48 83 ec 10          	sub    $0x10,%rsp
    c9a6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c9a9:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c9ac:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    c9b0:	75 3b                	jne    c9ed <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c9b2:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    c9b9:	75 32                	jne    c9ed <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c9bb:	48 8d 05 70 bc 01 00 	lea    0x1bc70(%rip),%rax        # 28632 <_ZStL8__ioinit>
    c9c2:	48 89 c7             	mov    %rax,%rdi
    c9c5:	e8 26 7c ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
    c9ca:	48 8d 05 df b9 01 00 	lea    0x1b9df(%rip),%rax        # 283b0 <__dso_handle>
    c9d1:	48 89 c2             	mov    %rax,%rdx
    c9d4:	48 8d 05 57 bc 01 00 	lea    0x1bc57(%rip),%rax        # 28632 <_ZStL8__ioinit>
    c9db:	48 89 c6             	mov    %rax,%rsi
    c9de:	48 8b 05 e3 b5 01 00 	mov    0x1b5e3(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    c9e5:	48 89 c7             	mov    %rax,%rdi
    c9e8:	e8 13 79 ff ff       	call   4300 <__cxa_atexit@plt>
    c9ed:	90                   	nop
    c9ee:	c9                   	leave
    c9ef:	c3                   	ret

000000000000c9f0 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    c9f0:	55                   	push   %rbp
    c9f1:	48 89 e5             	mov    %rsp,%rbp
    c9f4:	be ff ff 00 00       	mov    $0xffff,%esi
    c9f9:	bf 01 00 00 00       	mov    $0x1,%edi
    c9fe:	e8 9b ff ff ff       	call   c99e <_Z41__static_initialization_and_destruction_0ii>
    ca03:	5d                   	pop    %rbp
    ca04:	c3                   	ret

000000000000ca05 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    ca05:	55                   	push   %rbp
    ca06:	48 89 e5             	mov    %rsp,%rbp
    ca09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    ca11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca15:	0f b6 00             	movzbl (%rax),%eax
    ca18:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    ca1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca1e:	0f b6 00             	movzbl (%rax),%eax
    ca21:	38 c2                	cmp    %al,%dl
    ca23:	0f 92 c0             	setb   %al
      }
    ca26:	5d                   	pop    %rbp
    ca27:	c3                   	ret

000000000000ca28 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    ca28:	55                   	push   %rbp
    ca29:	48 89 e5             	mov    %rsp,%rbp
    ca2c:	48 83 ec 30          	sub    $0x30,%rsp
    ca30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca34:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ca38:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    ca3c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    ca41:	75 0a                	jne    ca4d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    ca43:	b8 00 00 00 00       	mov    $0x0,%eax
    ca48:	e9 99 00 00 00       	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    ca4d:	e8 2c 80 ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
    ca52:	84 c0                	test   %al,%al
    ca54:	74 78                	je     cace <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    ca56:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    ca5d:	00 
    ca5e:	eb 5d                	jmp    cabd <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    ca60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca68:	48 01 c2             	add    %rax,%rdx
    ca6b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    ca6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca73:	48 01 c8             	add    %rcx,%rax
    ca76:	48 89 d6             	mov    %rdx,%rsi
    ca79:	48 89 c7             	mov    %rax,%rdi
    ca7c:	e8 84 ff ff ff       	call   ca05 <_ZNSt11char_traitsIcE2ltERKcS2_>
    ca81:	84 c0                	test   %al,%al
    ca83:	74 07                	je     ca8c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    ca85:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ca8a:	eb 5a                	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    ca8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ca90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca94:	48 01 c2             	add    %rax,%rdx
    ca97:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ca9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca9f:	48 01 c8             	add    %rcx,%rax
    caa2:	48 89 d6             	mov    %rdx,%rsi
    caa5:	48 89 c7             	mov    %rax,%rdi
    caa8:	e8 58 ff ff ff       	call   ca05 <_ZNSt11char_traitsIcE2ltERKcS2_>
    caad:	84 c0                	test   %al,%al
    caaf:	74 07                	je     cab8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    cab1:	b8 01 00 00 00       	mov    $0x1,%eax
    cab6:	eb 2e                	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    cab8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    cabd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cac1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    cac5:	72 99                	jb     ca60 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    cac7:	b8 00 00 00 00       	mov    $0x0,%eax
    cacc:	eb 18                	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    cace:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cad2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cada:	48 89 ce             	mov    %rcx,%rsi
    cadd:	48 89 c7             	mov    %rax,%rdi
    cae0:	e8 6b 76 ff ff       	call   4150 <memcmp@plt>
    cae5:	90                   	nop
      }
    cae6:	c9                   	leave
    cae7:	c3                   	ret

000000000000cae8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    cae8:	55                   	push   %rbp
    cae9:	48 89 e5             	mov    %rsp,%rbp
    caec:	48 83 ec 10          	sub    $0x10,%rsp
    caf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    caf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    caf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cafc:	48 89 c7             	mov    %rax,%rdi
    caff:	e8 85 7f ff ff       	call   4a89 <_ZNSt11char_traitsIcE6lengthEPKc>
    cb04:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb08:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    cb0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb0f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb13:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    cb17:	90                   	nop
    cb18:	c9                   	leave
    cb19:	c3                   	ret

000000000000cb1a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cb1a:	55                   	push   %rbp
    cb1b:	48 89 e5             	mov    %rsp,%rbp
    cb1e:	48 83 ec 20          	sub    $0x20,%rsp
    cb22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cb26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb2a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb2e:	48 89 d6             	mov    %rdx,%rsi
    cb31:	48 89 c7             	mov    %rax,%rdi
    cb34:	e8 27 01 00 00       	call   cc60 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cb39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb3d:	c9                   	leave
    cb3e:	c3                   	ret
    cb3f:	90                   	nop

000000000000cb40 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cb40:	55                   	push   %rbp
    cb41:	48 89 e5             	mov    %rsp,%rbp
    cb44:	48 83 ec 20          	sub    $0x20,%rsp
    cb48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cb4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb50:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cb54:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb58:	48 89 d6             	mov    %rdx,%rsi
    cb5b:	48 89 c7             	mov    %rax,%rdi
    cb5e:	e8 fd 00 00 00       	call   cc60 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cb63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb67:	c9                   	leave
    cb68:	c3                   	ret

000000000000cb69 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cb69:	55                   	push   %rbp
    cb6a:	48 89 e5             	mov    %rsp,%rbp
    cb6d:	53                   	push   %rbx
    cb6e:	48 83 ec 18          	sub    $0x18,%rsp
    cb72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cb7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb7e:	48 89 c7             	mov    %rax,%rdi
    cb81:	e8 f8 00 00 00       	call   cc7e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cb86:	48 8b 18             	mov    (%rax),%rbx
    cb89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb8d:	48 89 c7             	mov    %rax,%rdi
    cb90:	e8 e9 00 00 00       	call   cc7e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cb95:	48 8b 00             	mov    (%rax),%rax
    cb98:	48 39 c3             	cmp    %rax,%rbx
    cb9b:	0f 95 c0             	setne  %al
    cb9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cba2:	c9                   	leave
    cba3:	c3                   	ret

000000000000cba4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cba4:	55                   	push   %rbp
    cba5:	48 89 e5             	mov    %rsp,%rbp
    cba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb0:	48 8b 00             	mov    (%rax),%rax
    cbb3:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cbba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbbe:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cbc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cbc5:	5d                   	pop    %rbp
    cbc6:	c3                   	ret
    cbc7:	90                   	nop

000000000000cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cbc8:	55                   	push   %rbp
    cbc9:	48 89 e5             	mov    %rsp,%rbp
    cbcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cbd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd4:	48 8b 00             	mov    (%rax),%rax
    cbd7:	5d                   	pop    %rbp
    cbd8:	c3                   	ret
    cbd9:	90                   	nop

000000000000cbda <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    cbda:	55                   	push   %rbp
    cbdb:	48 89 e5             	mov    %rsp,%rbp
    cbde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    cbe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe6:	48 8b 00             	mov    (%rax),%rax
    cbe9:	5d                   	pop    %rbp
    cbea:	c3                   	ret

000000000000cbeb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    cbeb:	55                   	push   %rbp
    cbec:	48 89 e5             	mov    %rsp,%rbp
    cbef:	53                   	push   %rbx
    cbf0:	48 83 ec 28          	sub    $0x28,%rsp
    cbf4:	48 89 f0             	mov    %rsi,%rax
    cbf7:	49 89 f8             	mov    %rdi,%r8
    cbfa:	4c 89 c6             	mov    %r8,%rsi
    cbfd:	4c 89 cf             	mov    %r9,%rdi
    cc00:	48 89 c7             	mov    %rax,%rdi
    cc03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc0b:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cc0f:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cc13:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cc17:	48 89 c7             	mov    %rax,%rdi
    cc1a:	e8 bb ff ff ff       	call   cbda <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cc1f:	48 89 c3             	mov    %rax,%rbx
    cc22:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cc26:	48 89 c7             	mov    %rax,%rdi
    cc29:	e8 ac ff ff ff       	call   cbda <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cc2e:	48 39 c3             	cmp    %rax,%rbx
    cc31:	75 22                	jne    cc55 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cc33:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cc37:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cc3b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cc3f:	48 89 ce             	mov    %rcx,%rsi
    cc42:	48 89 c7             	mov    %rax,%rdi
    cc45:	e8 42 00 00 00       	call   cc8c <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cc4a:	85 c0                	test   %eax,%eax
    cc4c:	75 07                	jne    cc55 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cc4e:	b8 01 00 00 00       	mov    $0x1,%eax
    cc53:	eb 05                	jmp    cc5a <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cc55:	b8 00 00 00 00       	mov    $0x0,%eax
    cc5a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cc5e:	c9                   	leave
    cc5f:	c3                   	ret

000000000000cc60 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cc60:	55                   	push   %rbp
    cc61:	48 89 e5             	mov    %rsp,%rbp
    cc64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cc6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc70:	48 8b 10             	mov    (%rax),%rdx
    cc73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc77:	48 89 10             	mov    %rdx,(%rax)
    cc7a:	90                   	nop
    cc7b:	5d                   	pop    %rbp
    cc7c:	c3                   	ret
    cc7d:	90                   	nop

000000000000cc7e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cc7e:	55                   	push   %rbp
    cc7f:	48 89 e5             	mov    %rsp,%rbp
    cc82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cc86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc8a:	5d                   	pop    %rbp
    cc8b:	c3                   	ret

000000000000cc8c <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cc8c:	55                   	push   %rbp
    cc8d:	48 89 e5             	mov    %rsp,%rbp
    cc90:	48 83 ec 30          	sub    $0x30,%rsp
    cc94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc98:	48 89 d1             	mov    %rdx,%rcx
    cc9b:	48 89 f0             	mov    %rsi,%rax
    cc9e:	48 89 fa             	mov    %rdi,%rdx
    cca1:	48 89 ca             	mov    %rcx,%rdx
    cca4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cca8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    ccac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccb0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ccb4:	48 89 d6             	mov    %rdx,%rsi
    ccb7:	48 89 c7             	mov    %rax,%rdi
    ccba:	e8 6e 86 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    ccbf:	48 8b 00             	mov    (%rax),%rax
    ccc2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    ccc6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    ccca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccce:	48 8b 40 08          	mov    0x8(%rax),%rax
    ccd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccd6:	48 89 ce             	mov    %rcx,%rsi
    ccd9:	48 89 c7             	mov    %rax,%rdi
    ccdc:	e8 47 fd ff ff       	call   ca28 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    cce1:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    cce4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    cce8:	75 19                	jne    cd03 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    ccea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ccee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccf2:	48 8b 00             	mov    (%rax),%rax
    ccf5:	48 89 d6             	mov    %rdx,%rsi
    ccf8:	48 89 c7             	mov    %rax,%rdi
    ccfb:	e8 08 00 00 00       	call   cd08 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    cd00:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    cd03:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    cd06:	c9                   	leave
    cd07:	c3                   	ret

000000000000cd08 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    cd08:	55                   	push   %rbp
    cd09:	48 89 e5             	mov    %rsp,%rbp
    cd0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    cd14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd18:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    cd1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    cd20:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cd25:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cd29:	7c 07                	jl     cd32 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    cd2b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    cd30:	eb 1b                	jmp    cd4d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    cd32:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    cd39:	ff ff ff 
    cd3c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cd40:	7f 07                	jg     cd49 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    cd42:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cd47:	eb 04                	jmp    cd4d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    cd49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cd4d:	5d                   	pop    %rbp
    cd4e:	c3                   	ret

000000000000cd4f <_Z41__static_initialization_and_destruction_0ii>:
  VkPipeline self = nullptr;
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};
} /* namespace vkh */
    cd4f:	55                   	push   %rbp
    cd50:	48 89 e5             	mov    %rsp,%rbp
    cd53:	48 83 ec 10          	sub    $0x10,%rsp
    cd57:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cd5a:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cd5d:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cd61:	75 3b                	jne    cd9e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd63:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cd6a:	75 32                	jne    cd9e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd6c:	48 8d 05 c0 b8 01 00 	lea    0x1b8c0(%rip),%rax        # 28633 <_ZStL8__ioinit>
    cd73:	48 89 c7             	mov    %rax,%rdi
    cd76:	e8 75 78 ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
    cd7b:	48 8d 05 2e b6 01 00 	lea    0x1b62e(%rip),%rax        # 283b0 <__dso_handle>
    cd82:	48 89 c2             	mov    %rax,%rdx
    cd85:	48 8d 05 a7 b8 01 00 	lea    0x1b8a7(%rip),%rax        # 28633 <_ZStL8__ioinit>
    cd8c:	48 89 c6             	mov    %rax,%rsi
    cd8f:	48 8b 05 32 b2 01 00 	mov    0x1b232(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cd96:	48 89 c7             	mov    %rax,%rdi
    cd99:	e8 62 75 ff ff       	call   4300 <__cxa_atexit@plt>
    cd9e:	90                   	nop
    cd9f:	c9                   	leave
    cda0:	c3                   	ret

000000000000cda1 <_GLOBAL__sub_I_vkh.cpp>:
    cda1:	55                   	push   %rbp
    cda2:	48 89 e5             	mov    %rsp,%rbp
    cda5:	be ff ff 00 00       	mov    $0xffff,%esi
    cdaa:	bf 01 00 00 00       	mov    $0x1,%edi
    cdaf:	e8 9b ff ff ff       	call   cd4f <_Z41__static_initialization_and_destruction_0ii>
    cdb4:	5d                   	pop    %rbp
    cdb5:	c3                   	ret

000000000000cdb6 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    cdb6:	55                   	push   %rbp
    cdb7:	48 89 e5             	mov    %rsp,%rbp
    cdba:	48 83 ec 10          	sub    $0x10,%rsp
    cdbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    cdc2:	e8 a9 76 ff ff       	call   4470 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    cdc7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cdcd:	b9 00 00 00 00       	mov    $0x0,%ecx
    cdd2:	48 8d 05 57 db 00 00 	lea    0xdb57(%rip),%rax        # 1a930 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cdd9:	48 89 c2             	mov    %rax,%rdx
    cddc:	be 58 02 00 00       	mov    $0x258,%esi
    cde1:	bf 20 03 00 00       	mov    $0x320,%edi
    cde6:	e8 9a 88 ff ff       	call   5685 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    cdeb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cdef:	48 89 02             	mov    %rax,(%rdx)
}
    cdf2:	90                   	nop
    cdf3:	c9                   	leave
    cdf4:	c3                   	ret
    cdf5:	90                   	nop

000000000000cdf6 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cdf6:	55                   	push   %rbp
    cdf7:	48 89 e5             	mov    %rsp,%rbp
    cdfa:	53                   	push   %rbx
    cdfb:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    ce02:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    ce09:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ce0d:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    ce11:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    ce15:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    ce19:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    ce20:	48 8d 05 09 db 00 00 	lea    0xdb09(%rip),%rax        # 1a930 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    ce27:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    ce2b:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    ce32:	48 8d 05 0a db 00 00 	lea    0xdb0a(%rip),%rax        # 1a943 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    ce39:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    ce3d:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    ce44:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    ce4b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce4f:	48 89 c7             	mov    %rax,%rdi
    ce52:	e8 17 a1 ff ff       	call   6f6e <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    ce57:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ce5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce63:	48 89 c7             	mov    %rax,%rdi
    ce66:	e8 73 3a 00 00       	call   108de <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    ce6b:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    ce72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce76:	48 89 c7             	mov    %rax,%rdi
    ce79:	e8 86 3a 00 00       	call   10904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    ce7e:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    ce85:	eb 3c                	jmp    cec3 <_ZN9VulkanApp14createInstanceEv+0xcd>
    ce87:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    ce8e:	48 89 c7             	mov    %rax,%rdi
    ce91:	e8 f2 3a 00 00       	call   10988 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    ce96:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    ce9a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cea1:	48 8d 50 10          	lea    0x10(%rax),%rdx
    cea5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cea9:	48 89 c6             	mov    %rax,%rsi
    ceac:	48 89 d7             	mov    %rdx,%rdi
    ceaf:	e8 e6 3a 00 00       	call   1099a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    ceb4:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cebb:	48 89 c7             	mov    %rax,%rdi
    cebe:	e8 a5 3a 00 00       	call   10968 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    cec3:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    ceca:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    ced1:	48 89 d6             	mov    %rdx,%rsi
    ced4:	48 89 c7             	mov    %rax,%rdi
    ced7:	e8 51 3a 00 00       	call   1092d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cedc:	84 c0                	test   %al,%al
    cede:	75 a7                	jne    ce87 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    cee0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cee4:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    ceeb:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    cef2:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    cef6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cefd:	48 89 c7             	mov    %rax,%rdi
    cf00:	e8 ea f8 ff ff       	call   c7ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    cf05:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    cf0c:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    cf0f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cf16:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    cf1d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cf21:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    cf28:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf2f:	48 83 c0 28          	add    $0x28,%rax
    cf33:	48 89 c7             	mov    %rax,%rdi
    cf36:	e8 03 3b 00 00       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    cf3b:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    cf41:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf48:	48 83 c0 28          	add    $0x28,%rax
    cf4c:	48 89 c7             	mov    %rax,%rdi
    cf4f:	e8 0e 3b 00 00       	call   10a62 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    cf54:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    cf5b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf62:	48 83 c0 10          	add    $0x10,%rax
    cf66:	48 89 c7             	mov    %rax,%rdi
    cf69:	e8 d0 3a 00 00       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    cf6e:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    cf74:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf7b:	48 83 c0 10          	add    $0x10,%rax
    cf7f:	48 89 c7             	mov    %rax,%rdi
    cf82:	e8 ff 3a 00 00       	call   10a86 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    cf87:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    cf8e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    cf95:	be 00 00 00 00       	mov    $0x0,%esi
    cf9a:	48 89 c7             	mov    %rax,%rdi
    cf9d:	e8 39 87 ff ff       	call   56db <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    cfa2:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    cfa9:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    cfad:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cfb1:	48 89 c7             	mov    %rax,%rdi
    cfb4:	e8 e1 38 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cfb9:	eb 1a                	jmp    cfd5 <_ZN9VulkanApp14createInstanceEv+0x1df>
    cfbb:	48 89 c3             	mov    %rax,%rbx
    cfbe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cfc2:	48 89 c7             	mov    %rax,%rdi
    cfc5:	e8 d0 38 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cfca:	48 89 d8             	mov    %rbx,%rax
    cfcd:	48 89 c7             	mov    %rax,%rdi
    cfd0:	e8 1b 77 ff ff       	call   46f0 <_Unwind_Resume@plt>
    cfd5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cfd9:	c9                   	leave
    cfda:	c3                   	ret
    cfdb:	90                   	nop

000000000000cfdc <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    cfdc:	55                   	push   %rbp
    cfdd:	48 89 e5             	mov    %rsp,%rbp
    cfe0:	41 54                	push   %r12
    cfe2:	53                   	push   %rbx
    cfe3:	48 83 ec 10          	sub    $0x10,%rsp
    cfe7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    cfeb:	e8 4b f6 ff ff       	call   c63b <_ZN3vkh27checkValidationLayerSupportEv>
    cff0:	0f b6 c0             	movzbl %al,%eax
    cff3:	85 c0                	test   %eax,%eax
    cff5:	0f 94 c0             	sete   %al
    cff8:	84 c0                	test   %al,%al
    cffa:	74 3b                	je     d037 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    cffc:	bf 10 00 00 00       	mov    $0x10,%edi
    d001:	e8 6a 71 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    d006:	48 89 c3             	mov    %rax,%rbx
    d009:	48 8d 05 40 d9 00 00 	lea    0xd940(%rip),%rax        # 1a950 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    d010:	48 89 c6             	mov    %rax,%rsi
    d013:	48 89 df             	mov    %rbx,%rdi
    d016:	e8 e5 70 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d01b:	48 8b 05 86 af 01 00 	mov    0x1af86(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d022:	48 89 c2             	mov    %rax,%rdx
    d025:	48 8d 05 14 ad 01 00 	lea    0x1ad14(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d02c:	48 89 c6             	mov    %rax,%rsi
    d02f:	48 89 df             	mov    %rbx,%rdi
    d032:	e8 59 76 ff ff       	call   4690 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    d037:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d03b:	48 8b 40 08          	mov    0x8(%rax),%rax
    d03f:	48 89 c7             	mov    %rax,%rdi
    d042:	e8 5e f8 ff ff       	call   c8a5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    d047:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d04b:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    d04f:	eb 16                	jmp    d067 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    d051:	49 89 c4             	mov    %rax,%r12
    d054:	48 89 df             	mov    %rbx,%rdi
    d057:	e8 e4 71 ff ff       	call   4240 <__cxa_free_exception@plt>
    d05c:	4c 89 e0             	mov    %r12,%rax
    d05f:	48 89 c7             	mov    %rax,%rdi
    d062:	e8 89 76 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    d067:	48 83 c4 10          	add    $0x10,%rsp
    d06b:	5b                   	pop    %rbx
    d06c:	41 5c                	pop    %r12
    d06e:	5d                   	pop    %rbp
    d06f:	c3                   	ret

000000000000d070 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    d070:	55                   	push   %rbp
    d071:	48 89 e5             	mov    %rsp,%rbp
    d074:	48 83 ec 10          	sub    $0x10,%rsp
    d078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    d07c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d080:	48 8b 08             	mov    (%rax),%rcx
    d083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d087:	48 8b 40 08          	mov    0x8(%rax),%rax
    d08b:	ba 00 00 00 00       	mov    $0x0,%edx
    d090:	48 89 ce             	mov    %rcx,%rsi
    d093:	48 89 c7             	mov    %rax,%rdi
    d096:	e8 6b 87 ff ff       	call   5806 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    d09b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d09f:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    d0a3:	90                   	nop
    d0a4:	c9                   	leave
    d0a5:	c3                   	ret

000000000000d0a6 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    d0a6:	55                   	push   %rbp
    d0a7:	48 89 e5             	mov    %rsp,%rbp
    d0aa:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    d0b1:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    d0b8:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    d0bf:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    d0c6:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    d0cd:	48 89 d6             	mov    %rdx,%rsi
    d0d0:	48 89 c7             	mov    %rax,%rdi
    d0d3:	e8 63 a1 ff ff       	call   723b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    d0d8:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    d0de:	83 f8 02             	cmp    $0x2,%eax
    d0e1:	0f 94 c0             	sete   %al
}
    d0e4:	c9                   	leave
    d0e5:	c3                   	ret

000000000000d0e6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    d0e6:	55                   	push   %rbp
    d0e7:	48 89 e5             	mov    %rsp,%rbp
    d0ea:	53                   	push   %rbx
    d0eb:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    d0f2:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d0f9:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d100:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d107:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d10b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d112:	48 89 d6             	mov    %rdx,%rsi
    d115:	48 89 c7             	mov    %rax,%rdi
    d118:	e8 47 a2 ff ff       	call   7364 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d11d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d121:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d128:	48 89 d6             	mov    %rdx,%rsi
    d12b:	48 89 c7             	mov    %rax,%rdi
    d12e:	e8 65 a3 ff ff       	call   7498 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d133:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d13a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d13e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d145:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d14c:	48 89 ce             	mov    %rcx,%rsi
    d14f:	48 89 c7             	mov    %rax,%rdi
    d152:	e8 7a a4 ff ff       	call   75d1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d157:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d15e:	00 
    d15f:	e9 c5 00 00 00       	jmp    d229 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d164:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d168:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d16c:	48 89 d6             	mov    %rdx,%rsi
    d16f:	48 89 c7             	mov    %rax,%rdi
    d172:	e8 7f b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d177:	48 89 c7             	mov    %rax,%rdi
    d17a:	e8 59 39 00 00       	call   10ad8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d17f:	84 c0                	test   %al,%al
    d181:	74 48                	je     d1cb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d183:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d187:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d18b:	48 89 d6             	mov    %rdx,%rsi
    d18e:	48 89 c7             	mov    %rax,%rdi
    d191:	e8 60 b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d196:	48 89 c7             	mov    %rax,%rdi
    d199:	e8 3a 39 00 00       	call   10ad8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d19e:	84 c0                	test   %al,%al
    d1a0:	74 29                	je     d1cb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d1a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1a6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d1ad:	48 89 d6             	mov    %rdx,%rsi
    d1b0:	48 89 c7             	mov    %rax,%rdi
    d1b3:	e8 3e b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d1b8:	48 89 c7             	mov    %rax,%rdi
    d1bb:	e8 18 39 00 00       	call   10ad8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d1c0:	84 c0                	test   %al,%al
    d1c2:	74 07                	je     d1cb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d1c4:	b8 01 00 00 00       	mov    $0x1,%eax
    d1c9:	eb 05                	jmp    d1d0 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d1cb:	b8 00 00 00 00       	mov    $0x0,%eax
    d1d0:	84 c0                	test   %al,%al
    d1d2:	74 50                	je     d224 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d1d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1d8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d1db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1df:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d1e3:	48 89 d6             	mov    %rdx,%rsi
    d1e6:	48 89 c7             	mov    %rax,%rdi
    d1e9:	e8 08 b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d1ee:	48 89 c7             	mov    %rax,%rdi
    d1f1:	e8 fc 38 00 00       	call   10af2 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d1f6:	48 89 c2             	mov    %rax,%rdx
    d1f9:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d1fd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d201:	48 89 ce             	mov    %rcx,%rsi
    d204:	48 89 c7             	mov    %rax,%rdi
    d207:	e8 18 39 00 00       	call   10b24 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d20c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d210:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d217:	48 89 d6             	mov    %rdx,%rsi
    d21a:	48 89 c7             	mov    %rax,%rdi
    d21d:	e8 58 39 00 00       	call   10b7a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d222:	eb 2f                	jmp    d253 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d224:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d229:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d22d:	48 89 c7             	mov    %rax,%rdi
    d230:	e8 75 38 00 00       	call   10aaa <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d235:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d239:	0f 92 c0             	setb   %al
    d23c:	84 c0                	test   %al,%al
    d23e:	0f 85 20 ff ff ff    	jne    d164 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d244:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d24b:	48 89 c7             	mov    %rax,%rdi
    d24e:	e8 25 33 00 00       	call   10578 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d253:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d25a:	48 89 c7             	mov    %rax,%rdi
    d25d:	e8 94 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d262:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d266:	48 89 c7             	mov    %rax,%rdi
    d269:	e8 88 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d26e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d272:	48 89 c7             	mov    %rax,%rdi
    d275:	e8 7c b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d27a:	eb 3f                	jmp    d2bb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d27c:	48 89 c3             	mov    %rax,%rbx
    d27f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d286:	48 89 c7             	mov    %rax,%rdi
    d289:	e8 68 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d28e:	eb 03                	jmp    d293 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d290:	48 89 c3             	mov    %rax,%rbx
    d293:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d297:	48 89 c7             	mov    %rax,%rdi
    d29a:	e8 57 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d29f:	eb 03                	jmp    d2a4 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d2a1:	48 89 c3             	mov    %rax,%rbx
    d2a4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d2a8:	48 89 c7             	mov    %rax,%rdi
    d2ab:	e8 46 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d2b0:	48 89 d8             	mov    %rbx,%rax
    d2b3:	48 89 c7             	mov    %rax,%rdi
    d2b6:	e8 35 74 ff ff       	call   46f0 <_Unwind_Resume@plt>
    d2bb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d2c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d2c6:	c9                   	leave
    d2c7:	c3                   	ret

000000000000d2c8 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d2c8:	55                   	push   %rbp
    d2c9:	48 89 e5             	mov    %rsp,%rbp
    d2cc:	41 54                	push   %r12
    d2ce:	53                   	push   %rbx
    d2cf:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d2d6:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d2dd:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2e4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d2e8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d2ec:	48 89 d6             	mov    %rdx,%rsi
    d2ef:	48 89 c7             	mov    %rax,%rdi
    d2f2:	e8 d5 9d ff ff       	call   70cc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d2f7:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d2fe:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d2ff:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d303:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d307:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d30b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d30f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d313:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d317:	48 89 c7             	mov    %rax,%rdi
    d31a:	e8 8f 38 00 00       	call   10bae <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d31f:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d326:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d32a:	48 89 c7             	mov    %rax,%rdi
    d32d:	e8 a2 38 00 00       	call   10bd4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d332:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d339:	e9 dd 00 00 00       	jmp    d41b <_ZN9VulkanApp12createDeviceEv+0x153>
    d33e:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d345:	48 89 c7             	mov    %rax,%rdi
    d348:	e8 0b 39 00 00       	call   10c58 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d34d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d351:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d355:	48 8b 10             	mov    (%rax),%rdx
    d358:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d35f:	48 89 d6             	mov    %rdx,%rsi
    d362:	48 89 c7             	mov    %rax,%rdi
    d365:	e8 3c fd ff ff       	call   d0a6 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d36a:	84 c0                	test   %al,%al
    d36c:	74 41                	je     d3af <_ZN9VulkanApp12createDeviceEv+0xe7>
    d36e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d372:	48 8b 10             	mov    (%rax),%rdx
    d375:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d37c:	48 89 d6             	mov    %rdx,%rsi
    d37f:	48 89 c7             	mov    %rax,%rdi
    d382:	e8 f9 02 00 00       	call   d680 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d387:	84 c0                	test   %al,%al
    d389:	74 24                	je     d3af <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d38b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d38f:	48 8b 10             	mov    (%rax),%rdx
    d392:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d399:	48 89 d6             	mov    %rdx,%rsi
    d39c:	48 89 c7             	mov    %rax,%rdi
    d39f:	e8 16 06 00 00       	call   d9ba <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d3a4:	84 c0                	test   %al,%al
    d3a6:	74 07                	je     d3af <_ZN9VulkanApp12createDeviceEv+0xe7>
    d3a8:	b8 01 00 00 00       	mov    $0x1,%eax
    d3ad:	eb 05                	jmp    d3b4 <_ZN9VulkanApp12createDeviceEv+0xec>
    d3af:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d3b4:	84 c0                	test   %al,%al
    d3b6:	74 54                	je     d40c <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d3b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3bc:	48 8b 10             	mov    (%rax),%rdx
    d3bf:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d3c6:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d3cd:	48 89 ce             	mov    %rcx,%rsi
    d3d0:	48 89 c7             	mov    %rax,%rdi
    d3d3:	e8 0e fd ff ff       	call   d0e6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d3d8:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d3df:	48 89 c7             	mov    %rax,%rdi
    d3e2:	e8 83 38 00 00       	call   10c6a <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d3e7:	84 c0                	test   %al,%al
    d3e9:	74 21                	je     d40c <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d3eb:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d3f2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d3f6:	48 89 d6             	mov    %rdx,%rsi
    d3f9:	48 89 c7             	mov    %rax,%rdi
    d3fc:	e8 c9 31 00 00       	call   105ca <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d401:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d405:	48 8b 00             	mov    (%rax),%rax
    d408:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d40c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d413:	48 89 c7             	mov    %rax,%rdi
    d416:	e8 1d 38 00 00       	call   10c38 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d41b:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d422:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d429:	48 89 d6             	mov    %rdx,%rsi
    d42c:	48 89 c7             	mov    %rax,%rdi
    d42f:	e8 c9 37 00 00       	call   10bfd <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d434:	84 c0                	test   %al,%al
    d436:	0f 85 02 ff ff ff    	jne    d33e <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d43c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d441:	75 3b                	jne    d47e <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d443:	bf 10 00 00 00       	mov    $0x10,%edi
    d448:	e8 23 6d ff ff       	call   4170 <__cxa_allocate_exception@plt>
    d44d:	48 89 c3             	mov    %rax,%rbx
    d450:	48 8d 05 21 d5 00 00 	lea    0xd521(%rip),%rax        # 1a978 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d457:	48 89 c6             	mov    %rax,%rsi
    d45a:	48 89 df             	mov    %rbx,%rdi
    d45d:	e8 9e 6c ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d462:	48 8b 05 3f ab 01 00 	mov    0x1ab3f(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d469:	48 89 c2             	mov    %rax,%rdx
    d46c:	48 8d 05 cd a8 01 00 	lea    0x1a8cd(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d473:	48 89 c6             	mov    %rax,%rsi
    d476:	48 89 df             	mov    %rbx,%rdi
    d479:	e8 12 72 ff ff       	call   4690 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d47e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d482:	48 89 c7             	mov    %rax,%rdi
    d485:	e8 6a 31 00 00       	call   105f4 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d48a:	8b 00                	mov    (%rax),%eax
    d48c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d48f:	f3 0f 10 05 f9 d8 00 	movss  0xd8f9(%rip),%xmm0        # 1ad90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    d496:	00 
    d497:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d49c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d4a0:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d4a7:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d4ae:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d4b3:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d4ba:	00 00 00 
  queueInfo.pNext = nullptr;
    d4bd:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d4c4:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d4c8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d4cb:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d4d1:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d4d8:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d4db:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d4df:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d4e3:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d4ea:	b8 00 00 00 00       	mov    $0x0,%eax
    d4ef:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d4f4:	48 89 d7             	mov    %rdx,%rdi
    d4f7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d4fa:	48 89 fa             	mov    %rdi,%rdx
    d4fd:	89 02                	mov    %eax,(%rdx)
    d4ff:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d503:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d507:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d50e:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d515:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d51c:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d523:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d52a:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d52b:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d532:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d535:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d53c:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d540:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d547:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d54a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d551:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d558:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d55f:	48 05 88 00 00 00    	add    $0x88,%rax
    d565:	48 89 c7             	mov    %rax,%rdi
    d568:	e8 d1 34 00 00       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d56d:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d573:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d57a:	48 05 88 00 00 00    	add    $0x88,%rax
    d580:	48 89 c7             	mov    %rax,%rdi
    d583:	e8 fe 34 00 00       	call   10a86 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d588:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d58f:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d596:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d59d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d5a4:	48 83 c0 28          	add    $0x28,%rax
    d5a8:	48 89 c7             	mov    %rax,%rdi
    d5ab:	e8 8e 34 00 00       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d5b0:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d5b6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d5bd:	48 83 c0 28          	add    $0x28,%rax
    d5c1:	48 89 c7             	mov    %rax,%rdi
    d5c4:	e8 99 34 00 00       	call   10a62 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d5c9:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d5d0:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d5d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5db:	ba 00 00 00 00       	mov    $0x0,%edx
    d5e0:	48 89 ce             	mov    %rcx,%rsi
    d5e3:	48 89 c7             	mov    %rax,%rdi
    d5e6:	e8 83 81 ff ff       	call   576e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d5eb:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d5f2:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d5f6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d5fd:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d601:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d608:	48 8b 40 50          	mov    0x50(%rax),%rax
    d60c:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d60f:	48 89 d1             	mov    %rdx,%rcx
    d612:	ba 00 00 00 00       	mov    $0x0,%edx
    d617:	48 89 c7             	mov    %rax,%rdi
    d61a:	e8 21 6f ff ff       	call   4540 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d61f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d626:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d62a:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d62e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d635:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d638:	89 50 68             	mov    %edx,0x68(%rax)
}
    d63b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d63f:	48 89 c7             	mov    %rax,%rdi
    d642:	e8 af ab ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d647:	eb 2a                	jmp    d673 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d649:	49 89 c4             	mov    %rax,%r12
    d64c:	48 89 df             	mov    %rbx,%rdi
    d64f:	e8 ec 6b ff ff       	call   4240 <__cxa_free_exception@plt>
    d654:	4c 89 e3             	mov    %r12,%rbx
    d657:	eb 03                	jmp    d65c <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d659:	48 89 c3             	mov    %rax,%rbx
    d65c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d660:	48 89 c7             	mov    %rax,%rdi
    d663:	e8 8e ab ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d668:	48 89 d8             	mov    %rbx,%rax
    d66b:	48 89 c7             	mov    %rax,%rdi
    d66e:	e8 7d 70 ff ff       	call   46f0 <_Unwind_Resume@plt>
    d673:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d67a:	5b                   	pop    %rbx
    d67b:	41 5c                	pop    %r12
    d67d:	5d                   	pop    %rbp
    d67e:	c3                   	ret
    d67f:	90                   	nop

000000000000d680 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d680:	55                   	push   %rbp
    d681:	48 89 e5             	mov    %rsp,%rbp
    d684:	53                   	push   %rbx
    d685:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d68c:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d693:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d69a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d6a1:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d6a8:	ba 00 00 00 00       	mov    $0x0,%edx
    d6ad:	48 89 ce             	mov    %rcx,%rsi
    d6b0:	48 89 c7             	mov    %rax,%rdi
    d6b3:	e8 3f 97 ff ff       	call   6df7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d6b8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d6bf:	48 89 c7             	mov    %rax,%rdi
    d6c2:	e8 a9 2f 00 00       	call   10670 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d6c7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d6ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d6d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6d6:	48 89 c7             	mov    %rax,%rdi
    d6d9:	e8 a2 36 00 00       	call   10d80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d6de:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d6e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6e9:	48 89 c7             	mov    %rax,%rdi
    d6ec:	e8 b5 36 00 00       	call   10da6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d6f1:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d6f8:	e9 8c 00 00 00       	jmp    d789 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d6fd:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d704:	48 89 c7             	mov    %rax,%rdi
    d707:	e8 22 37 00 00       	call   10e2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d70c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d710:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d717:	48 89 c7             	mov    %rax,%rdi
    d71a:	e8 e1 6f ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    d71f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d723:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d72a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d731:	48 89 ce             	mov    %rcx,%rsi
    d734:	48 89 c7             	mov    %rax,%rdi
    d737:	e8 04 74 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d73c:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d743:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d74a:	48 89 d6             	mov    %rdx,%rsi
    d74d:	48 89 c7             	mov    %rax,%rdi
    d750:	e8 eb 36 00 00       	call   10e40 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d755:	8b 10                	mov    (%rax),%edx
    d757:	83 c2 01             	add    $0x1,%edx
    d75a:	89 10                	mov    %edx,(%rax)
    d75c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d763:	48 89 c7             	mov    %rax,%rdi
    d766:	e8 75 6a ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d76b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d772:	48 89 c7             	mov    %rax,%rdi
    d775:	e8 a6 6c ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d77a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d781:	48 89 c7             	mov    %rax,%rdi
    d784:	e8 81 36 00 00       	call   10e0a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d789:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d790:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d797:	48 89 d6             	mov    %rdx,%rsi
    d79a:	48 89 c7             	mov    %rax,%rdi
    d79d:	e8 2d 36 00 00       	call   10dcf <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d7a2:	84 c0                	test   %al,%al
    d7a4:	0f 85 53 ff ff ff    	jne    d6fd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d7aa:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d7b1:	48 05 88 00 00 00    	add    $0x88,%rax
    d7b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d7bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d7bf:	48 89 c7             	mov    %rax,%rdi
    d7c2:	e8 17 31 00 00       	call   108de <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d7c7:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d7ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d7d2:	48 89 c7             	mov    %rax,%rdi
    d7d5:	e8 2a 31 00 00       	call   10904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d7da:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d7e1:	e9 ed 00 00 00       	jmp    d8d3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d7e6:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d7ed:	48 89 c7             	mov    %rax,%rdi
    d7f0:	e8 93 31 00 00       	call   10988 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d7f5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d7f9:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d7fd:	48 89 c7             	mov    %rax,%rdi
    d800:	e8 fb 6e ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    d805:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d809:	48 8b 08             	mov    (%rax),%rcx
    d80c:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d810:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d817:	48 89 ce             	mov    %rcx,%rsi
    d81a:	48 89 c7             	mov    %rax,%rdi
    d81d:	e8 1e 73 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d822:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d829:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d830:	48 89 d6             	mov    %rdx,%rsi
    d833:	48 89 c7             	mov    %rax,%rdi
    d836:	e8 05 36 00 00       	call   10e40 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d83b:	8b 10                	mov    (%rax),%edx
    d83d:	83 c2 01             	add    $0x1,%edx
    d840:	89 10                	mov    %edx,(%rax)
    d842:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d849:	48 89 c7             	mov    %rax,%rdi
    d84c:	e8 8f 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d851:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d855:	48 89 c7             	mov    %rax,%rdi
    d858:	e8 c3 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d85d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d861:	48 89 c7             	mov    %rax,%rdi
    d864:	e8 97 6e ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    d869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d86d:	48 8b 08             	mov    (%rax),%rcx
    d870:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d874:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d878:	48 89 ce             	mov    %rcx,%rsi
    d87b:	48 89 c7             	mov    %rax,%rdi
    d87e:	e8 bd 72 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d883:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d887:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d88e:	48 89 d6             	mov    %rdx,%rsi
    d891:	48 89 c7             	mov    %rax,%rdi
    d894:	e8 a7 35 00 00       	call   10e40 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d899:	8b 00                	mov    (%rax),%eax
    d89b:	83 f8 01             	cmp    $0x1,%eax
    d89e:	0f 96 c3             	setbe  %bl
    d8a1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d8a5:	48 89 c7             	mov    %rax,%rdi
    d8a8:	e8 33 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d8ad:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d8b1:	48 89 c7             	mov    %rax,%rdi
    d8b4:	e8 67 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d8b9:	84 db                	test   %bl,%bl
    d8bb:	74 07                	je     d8c4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    d8bd:	bb 00 00 00 00       	mov    $0x0,%ebx
    d8c2:	eb 35                	jmp    d8f9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    d8c4:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d8cb:	48 89 c7             	mov    %rax,%rdi
    d8ce:	e8 95 30 00 00       	call   10968 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d8d3:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    d8da:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d8e1:	48 89 d6             	mov    %rdx,%rsi
    d8e4:	48 89 c7             	mov    %rax,%rdi
    d8e7:	e8 41 30 00 00       	call   1092d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d8ec:	84 c0                	test   %al,%al
    d8ee:	0f 85 f2 fe ff ff    	jne    d7e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    d8f4:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d8f9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d900:	48 89 c7             	mov    %rax,%rdi
    d903:	e8 84 2d 00 00       	call   1068c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d908:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d90f:	48 89 c7             	mov    %rax,%rdi
    d912:	e8 55 a6 ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d917:	89 d8                	mov    %ebx,%eax
    d919:	e9 96 00 00 00       	jmp    d9b4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    d91e:	48 89 c3             	mov    %rax,%rbx
    d921:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d928:	48 89 c7             	mov    %rax,%rdi
    d92b:	e8 b0 68 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d930:	eb 03                	jmp    d935 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    d932:	48 89 c3             	mov    %rax,%rbx
    d935:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d93c:	48 89 c7             	mov    %rax,%rdi
    d93f:	e8 dc 6a ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d944:	eb 45                	jmp    d98b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    d946:	48 89 c3             	mov    %rax,%rbx
    d949:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d950:	48 89 c7             	mov    %rax,%rdi
    d953:	e8 88 68 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d958:	eb 03                	jmp    d95d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    d95a:	48 89 c3             	mov    %rax,%rbx
    d95d:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d961:	48 89 c7             	mov    %rax,%rdi
    d964:	e8 b7 6a ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d969:	eb 20                	jmp    d98b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    d96b:	48 89 c3             	mov    %rax,%rbx
    d96e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d972:	48 89 c7             	mov    %rax,%rdi
    d975:	e8 66 68 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d97a:	eb 03                	jmp    d97f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    d97c:	48 89 c3             	mov    %rax,%rbx
    d97f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d983:	48 89 c7             	mov    %rax,%rdi
    d986:	e8 95 6a ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
}
    d98b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d992:	48 89 c7             	mov    %rax,%rdi
    d995:	e8 f2 2c 00 00       	call   1068c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d99a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d9a1:	48 89 c7             	mov    %rax,%rdi
    d9a4:	e8 c3 a5 ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d9a9:	48 89 d8             	mov    %rbx,%rax
    d9ac:	48 89 c7             	mov    %rax,%rdi
    d9af:	e8 3c 6d ff ff       	call   46f0 <_Unwind_Resume@plt>
    d9b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d9b8:	c9                   	leave
    d9b9:	c3                   	ret

000000000000d9ba <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    d9ba:	55                   	push   %rbp
    d9bb:	48 89 e5             	mov    %rsp,%rbp
    d9be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    d9c6:	b8 01 00 00 00       	mov    $0x1,%eax
}
    d9cb:	5d                   	pop    %rbp
    d9cc:	c3                   	ret
    d9cd:	90                   	nop

000000000000d9ce <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    d9ce:	55                   	push   %rbp
    d9cf:	48 89 e5             	mov    %rsp,%rbp
    d9d2:	41 54                	push   %r12
    d9d4:	53                   	push   %rbx
    d9d5:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    d9dc:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d9e3:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    d9ea:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9f1:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d9f5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9fc:	48 8b 48 58          	mov    0x58(%rax),%rcx
    da00:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    da04:	48 89 ce             	mov    %rcx,%rsi
    da07:	48 89 c7             	mov    %rax,%rdi
    da0a:	e8 32 9d ff ff       	call   7741 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    da0f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da16:	48 8b 50 48          	mov    0x48(%rax),%rdx
    da1a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da21:	48 8b 48 58          	mov    0x58(%rax),%rcx
    da25:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da2c:	48 89 ce             	mov    %rcx,%rsi
    da2f:	48 89 c7             	mov    %rax,%rdi
    da32:	e8 b8 9d ff ff       	call   77ef <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    da37:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da3e:	48 8b 50 48          	mov    0x48(%rax),%rdx
    da42:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da49:	48 8b 48 58          	mov    0x58(%rax),%rcx
    da4d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    da54:	48 89 ce             	mov    %rcx,%rsi
    da57:	48 89 c7             	mov    %rax,%rdi
    da5a:	e8 07 9f ff ff       	call   7966 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    da5f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da66:	48 89 c6             	mov    %rax,%rsi
    da69:	b8 00 00 00 00       	mov    $0x0,%eax
    da6e:	ba 0d 00 00 00       	mov    $0xd,%edx
    da73:	48 89 f7             	mov    %rsi,%rdi
    da76:	48 89 d1             	mov    %rdx,%rcx
    da79:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    da7c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da83:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    da89:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da90:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    da97:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    da98:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da9f:	48 8b 50 48          	mov    0x48(%rax),%rdx
    daa3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    daaa:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    daae:	8b 45 80             	mov    -0x80(%rbp),%eax
    dab1:	83 c0 01             	add    $0x1,%eax
    dab4:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    dab7:	8b 45 84             	mov    -0x7c(%rbp),%eax
    daba:	85 c0                	test   %eax,%eax
    dabc:	74 0e                	je     dacc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    dabe:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    dac1:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    dac4:	73 06                	jae    dacc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    dac6:	8b 45 84             	mov    -0x7c(%rbp),%eax
    dac9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    dacc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dad3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    dad6:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    dad9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dae0:	48 89 c7             	mov    %rax,%rdi
    dae3:	e8 5c 34 00 00       	call   10f44 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    dae8:	84 c0                	test   %al,%al
    daea:	74 3b                	je     db27 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    daec:	bf 10 00 00 00       	mov    $0x10,%edi
    daf1:	e8 7a 66 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    daf6:	48 89 c3             	mov    %rax,%rbx
    daf9:	48 8d 05 9c ce 00 00 	lea    0xce9c(%rip),%rax        # 1a99c <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    db00:	48 89 c6             	mov    %rax,%rsi
    db03:	48 89 df             	mov    %rbx,%rdi
    db06:	e8 f5 65 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    db0b:	48 8b 05 96 a4 01 00 	mov    0x1a496(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    db12:	48 89 c2             	mov    %rax,%rdx
    db15:	48 8d 05 24 a2 01 00 	lea    0x1a224(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    db1c:	48 89 c6             	mov    %rax,%rsi
    db1f:	48 89 df             	mov    %rbx,%rdi
    db22:	e8 69 6b ff ff       	call   4690 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    db27:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db2e:	be 00 00 00 00       	mov    $0x0,%esi
    db33:	48 89 c7             	mov    %rax,%rdi
    db36:	e8 4b 34 00 00       	call   10f86 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    db3b:	8b 10                	mov    (%rax),%edx
    db3d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db44:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    db47:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db4e:	be 00 00 00 00       	mov    $0x0,%esi
    db53:	48 89 c7             	mov    %rax,%rdi
    db56:	e8 2b 34 00 00       	call   10f86 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    db5b:	8b 50 04             	mov    0x4(%rax),%edx
    db5e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db65:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    db68:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db6f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    db73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db77:	48 89 c7             	mov    %rax,%rdi
    db7a:	e8 27 34 00 00       	call   10fa6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    db7f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    db86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db8a:	48 89 c7             	mov    %rax,%rdi
    db8d:	e8 3a 34 00 00       	call   10fcc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    db92:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    db99:	eb 5b                	jmp    dbf6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    db9b:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dba2:	48 89 c7             	mov    %rax,%rdi
    dba5:	e8 a6 34 00 00       	call   11050 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dbaa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dbae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbb2:	8b 00                	mov    (%rax),%eax
    dbb4:	83 f8 2b             	cmp    $0x2b,%eax
    dbb7:	75 2e                	jne    dbe7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    dbb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbbd:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dbc0:	85 c0                	test   %eax,%eax
    dbc2:	75 23                	jne    dbe7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    dbc4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbc8:	8b 10                	mov    (%rax),%edx
    dbca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbd1:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    dbd4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbd8:	8b 50 04             	mov    0x4(%rax),%edx
    dbdb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbe2:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    dbe5:	eb 2c                	jmp    dc13 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    dbe7:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dbee:	48 89 c7             	mov    %rax,%rdi
    dbf1:	e8 3a 34 00 00       	call   11030 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    dbf6:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    dbfd:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dc04:	48 89 d6             	mov    %rdx,%rsi
    dc07:	48 89 c7             	mov    %rax,%rdi
    dc0a:	e8 e6 33 00 00       	call   10ff5 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dc0f:	84 c0                	test   %al,%al
    dc11:	75 88                	jne    db9b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    dc13:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc1a:	8b 50 24             	mov    0x24(%rax),%edx
    dc1d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dc24:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    dc27:	8b 45 88             	mov    -0x78(%rbp),%eax
    dc2a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    dc2d:	8b 45 8c             	mov    -0x74(%rbp),%eax
    dc30:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    dc33:	8b 45 98             	mov    -0x68(%rbp),%eax
    dc36:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    dc39:	73 06                	jae    dc41 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    dc3b:	8b 45 98             	mov    -0x68(%rbp),%eax
    dc3e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    dc41:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dc44:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    dc47:	73 06                	jae    dc4f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    dc49:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dc4c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    dc4f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc56:	8b 55 e8             	mov    -0x18(%rbp),%edx
    dc59:	89 50 2c             	mov    %edx,0x2c(%rax)
    dc5c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc63:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    dc66:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    dc69:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dc70:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    dc77:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    dc7b:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    dc7f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc86:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    dc8d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc94:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    dc9b:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    dca2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dca9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dcad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dcb1:	48 89 c7             	mov    %rax,%rdi
    dcb4:	e8 a9 33 00 00       	call   11062 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    dcb9:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    dcc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dcc4:	48 89 c7             	mov    %rax,%rdi
    dcc7:	e8 bc 33 00 00       	call   11088 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    dccc:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    dcd3:	eb 3c                	jmp    dd11 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    dcd5:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dcdc:	48 89 c7             	mov    %rax,%rdi
    dcdf:	e8 28 34 00 00       	call   1110c <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dce4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    dce8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dcec:	8b 00                	mov    (%rax),%eax
    dcee:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    dcf1:	75 0f                	jne    dd02 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    dcf3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dcfa:	8b 55 cc             	mov    -0x34(%rbp),%edx
    dcfd:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    dd00:	eb 2c                	jmp    dd2e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    dd02:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dd09:	48 89 c7             	mov    %rax,%rdi
    dd0c:	e8 db 33 00 00       	call   110ec <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    dd11:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    dd18:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dd1f:	48 89 d6             	mov    %rdx,%rsi
    dd22:	48 89 c7             	mov    %rax,%rdi
    dd25:	e8 87 33 00 00       	call   110b1 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dd2a:	84 c0                	test   %al,%al
    dd2c:	75 a7                	jne    dcd5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    dd2e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd35:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    dd3c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd43:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    dd4a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd51:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    dd58:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd5f:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    dd66:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    dd67:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    dd6a:	83 e0 01             	and    $0x1,%eax
    dd6d:	85 c0                	test   %eax,%eax
    dd6f:	74 1e                	je     dd8f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    dd71:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd78:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dd7f:	8b 45 ac             	mov    -0x54(%rbp),%eax
    dd82:	83 e0 01             	and    $0x1,%eax
    dd85:	85 c0                	test   %eax,%eax
    dd87:	0f 84 9b 00 00 00    	je     de28 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    dd8d:	eb 3b                	jmp    ddca <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dd8f:	bf 10 00 00 00       	mov    $0x10,%edi
    dd94:	e8 d7 63 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    dd99:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dd9c:	48 8d 05 1d cc 00 00 	lea    0xcc1d(%rip),%rax        # 1a9c0 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    dda3:	48 89 c6             	mov    %rax,%rsi
    dda6:	48 89 df             	mov    %rbx,%rdi
    dda9:	e8 52 63 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ddae:	48 8b 05 f3 a1 01 00 	mov    0x1a1f3(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ddb5:	48 89 c2             	mov    %rax,%rdx
    ddb8:	48 8d 05 81 9f 01 00 	lea    0x19f81(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ddbf:	48 89 c6             	mov    %rax,%rsi
    ddc2:	48 89 df             	mov    %rbx,%rdi
    ddc5:	e8 c6 68 ff ff       	call   4690 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    ddca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddd1:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    ddd8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dddf:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    dde6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dded:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ddf4:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    ddf5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddfc:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    de03:	00 

  return swapchainCreateInfo;
    de04:	90                   	nop
}
    de05:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    de0c:	48 89 c7             	mov    %rax,%rdi
    de0f:	e8 f6 aa ff ff       	call   890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    de14:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    de1b:	48 89 c7             	mov    %rax,%rdi
    de1e:	e8 83 a9 ff ff       	call   87a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    de23:	e9 9c 00 00 00       	jmp    dec4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    de28:	bf 10 00 00 00       	mov    $0x10,%edi
    de2d:	e8 3e 63 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    de32:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    de35:	48 8d 05 bc cb 00 00 	lea    0xcbbc(%rip),%rax        # 1a9f8 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    de3c:	48 89 c6             	mov    %rax,%rsi
    de3f:	48 89 df             	mov    %rbx,%rdi
    de42:	e8 b9 62 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    de47:	48 8b 05 5a a1 01 00 	mov    0x1a15a(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    de4e:	48 89 c2             	mov    %rax,%rdx
    de51:	48 8d 05 e8 9e 01 00 	lea    0x19ee8(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    de58:	48 89 c6             	mov    %rax,%rsi
    de5b:	48 89 df             	mov    %rbx,%rdi
    de5e:	e8 2d 68 ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    de63:	49 89 c4             	mov    %rax,%r12
    de66:	48 89 df             	mov    %rbx,%rdi
    de69:	e8 d2 63 ff ff       	call   4240 <__cxa_free_exception@plt>
    de6e:	4c 89 e3             	mov    %r12,%rbx
    de71:	eb 23                	jmp    de96 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    de73:	49 89 c4             	mov    %rax,%r12
    de76:	48 89 df             	mov    %rbx,%rdi
    de79:	e8 c2 63 ff ff       	call   4240 <__cxa_free_exception@plt>
    de7e:	4c 89 e3             	mov    %r12,%rbx
    de81:	eb 13                	jmp    de96 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    de83:	49 89 c4             	mov    %rax,%r12
    de86:	48 89 df             	mov    %rbx,%rdi
    de89:	e8 b2 63 ff ff       	call   4240 <__cxa_free_exception@plt>
    de8e:	4c 89 e3             	mov    %r12,%rbx
    de91:	eb 03                	jmp    de96 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    de93:	48 89 c3             	mov    %rax,%rbx
    de96:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    de9d:	48 89 c7             	mov    %rax,%rdi
    dea0:	e8 65 aa ff ff       	call   890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dea5:	eb 03                	jmp    deaa <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    dea7:	48 89 c3             	mov    %rax,%rbx
    deaa:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    deb1:	48 89 c7             	mov    %rax,%rdi
    deb4:	e8 ed a8 ff ff       	call   87a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    deb9:	48 89 d8             	mov    %rbx,%rax
    debc:	48 89 c7             	mov    %rax,%rdi
    debf:	e8 2c 68 ff ff       	call   46f0 <_Unwind_Resume@plt>
    dec4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    decb:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    ded2:	5b                   	pop    %rbx
    ded3:	41 5c                	pop    %r12
    ded5:	5d                   	pop    %rbp
    ded6:	c3                   	ret
    ded7:	90                   	nop

000000000000ded8 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    ded8:	55                   	push   %rbp
    ded9:	48 89 e5             	mov    %rsp,%rbp
    dedc:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    dee0:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    dee4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dee8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    deec:	48 89 d6             	mov    %rdx,%rsi
    deef:	48 89 c7             	mov    %rax,%rdi
    def2:	e8 d7 fa ff ff       	call   d9ce <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    def7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    defb:	48 8b 40 50          	mov    0x50(%rax),%rax
    deff:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    df03:	ba 00 00 00 00       	mov    $0x0,%edx
    df08:	48 89 ce             	mov    %rcx,%rsi
    df0b:	48 89 c7             	mov    %rax,%rdi
    df0e:	e8 8b 79 ff ff       	call   589e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    df13:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    df17:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    df1b:	90                   	nop
    df1c:	c9                   	leave
    df1d:	c3                   	ret

000000000000df1e <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    df1e:	55                   	push   %rbp
    df1f:	48 89 e5             	mov    %rsp,%rbp
    df22:	53                   	push   %rbx
    df23:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    df2a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    df31:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df38:	48 8b 50 70          	mov    0x70(%rax),%rdx
    df3c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df43:	48 8b 48 50          	mov    0x50(%rax),%rcx
    df47:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df4b:	48 89 ce             	mov    %rcx,%rsi
    df4e:	48 89 c7             	mov    %rax,%rdi
    df51:	e8 87 9b ff ff       	call   7add <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    df56:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df5d:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    df64:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df68:	48 89 c6             	mov    %rax,%rsi
    df6b:	48 89 d7             	mov    %rdx,%rdi
    df6e:	e8 ab 31 00 00       	call   1111e <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    df73:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df77:	48 89 c7             	mov    %rax,%rdi
    df7a:	e8 ef aa ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    df7f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df86:	48 05 b8 00 00 00    	add    $0xb8,%rax
    df8c:	48 89 c7             	mov    %rax,%rdi
    df8f:	e8 c2 31 00 00       	call   11156 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    df94:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    df98:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df9f:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    dfa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dfaa:	48 89 c6             	mov    %rax,%rsi
    dfad:	48 89 d7             	mov    %rdx,%rdi
    dfb0:	e8 c5 31 00 00       	call   1117a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    dfb5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    dfbc:	00 
    dfbd:	e9 f1 00 00 00       	jmp    e0b3 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    dfc2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dfc6:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    dfcd:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    dfd1:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    dfd5:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    dfd9:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    dfdd:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    dfe4:	00 00 00 
    imageViewInfo.pNext = nullptr;
    dfe7:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    dfee:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    dff2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dff9:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    e000:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e004:	48 89 c6             	mov    %rax,%rsi
    e007:	48 89 d7             	mov    %rdx,%rdi
    e00a:	e8 f1 31 00 00       	call   11200 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    e00f:	48 8b 00             	mov    (%rax),%rax
    e012:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    e016:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    e01d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e024:	8b 40 78             	mov    0x78(%rax),%eax
    e027:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    e02a:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    e031:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    e038:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    e03f:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    e046:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    e04d:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    e054:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    e05b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    e062:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    e069:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e070:	48 8b 40 50          	mov    0x50(%rax),%rax
    e074:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    e07b:	ba 00 00 00 00       	mov    $0x0,%edx
    e080:	48 89 ce             	mov    %rcx,%rsi
    e083:	48 89 c7             	mov    %rax,%rdi
    e086:	e8 b3 78 ff ff       	call   593e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    e08b:	48 89 c3             	mov    %rax,%rbx
    e08e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e095:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    e09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0a0:	48 89 c6             	mov    %rax,%rsi
    e0a3:	48 89 d7             	mov    %rdx,%rdi
    e0a6:	e8 75 31 00 00       	call   11220 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    e0ab:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    e0ae:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e0b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0b7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e0bb:	0f 82 01 ff ff ff    	jb     dfc2 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    e0c1:	90                   	nop
    e0c2:	90                   	nop
    e0c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e0c7:	c9                   	leave
    e0c8:	c3                   	ret
    e0c9:	90                   	nop

000000000000e0ca <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    e0ca:	55                   	push   %rbp
    e0cb:	48 89 e5             	mov    %rsp,%rbp
    e0ce:	41 55                	push   %r13
    e0d0:	41 54                	push   %r12
    e0d2:	53                   	push   %rbx
    e0d3:	48 81 ec 28 05 00 00 	sub    $0x528,%rsp
    e0da:	48 89 bd c8 fa ff ff 	mov    %rdi,-0x538(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    e0e1:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    e0e8:	00 00 00 00 
    e0ec:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    e0f3:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    e0f7:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e0fe:	48 89 c7             	mov    %rax,%rdi
    e101:	e8 fa 65 ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    e106:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    e10d:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e114:	48 8d 0d 15 c9 00 00 	lea    0xc915(%rip),%rcx        # 1aa30 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e11b:	48 89 ce             	mov    %rcx,%rsi
    e11e:	48 89 c7             	mov    %rax,%rdi
    e121:	e8 1a 6a ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e126:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e12d:	48 8b 40 50          	mov    0x50(%rax),%rax
    e131:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    e138:	ba 00 00 00 00       	mov    $0x0,%edx
    e13d:	48 89 ce             	mov    %rcx,%rsi
    e140:	48 89 c7             	mov    %rax,%rdi
    e143:	e8 66 79 ff ff       	call   5aae <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e148:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    e14f:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e156:	48 89 c7             	mov    %rax,%rdi
    e159:	e8 82 60 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e15e:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e165:	48 89 c7             	mov    %rax,%rdi
    e168:	e8 b3 62 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    e16d:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e174:	48 89 c7             	mov    %rax,%rdi
    e177:	e8 84 65 ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    e17c:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    e183:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e18a:	48 8d 0d bf c8 00 00 	lea    0xc8bf(%rip),%rcx        # 1aa50 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e191:	48 89 ce             	mov    %rcx,%rsi
    e194:	48 89 c7             	mov    %rax,%rdi
    e197:	e8 a4 69 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e19c:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e1a3:	48 8b 40 50          	mov    0x50(%rax),%rax
    e1a7:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    e1ae:	ba 00 00 00 00       	mov    $0x0,%edx
    e1b3:	48 89 ce             	mov    %rcx,%rsi
    e1b6:	48 89 c7             	mov    %rax,%rdi
    e1b9:	e8 f0 78 ff ff       	call   5aae <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e1be:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    e1c5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e1cc:	48 89 c7             	mov    %rax,%rdi
    e1cf:	e8 0c 60 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e1d4:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e1db:	48 89 c7             	mov    %rax,%rdi
    e1de:	e8 3d 62 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e1e3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e1e7:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    e1ee:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    e1f5:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    e1fc:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    e203:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e206:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    e20d:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    e210:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e217:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    e21e:	48 8d 05 4b c8 00 00 	lea    0xc84b(%rip),%rax        # 1aa70 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e225:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    e22c:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    e233:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e237:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e23b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e242:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e249:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    e250:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    e257:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e25a:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    e261:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    e264:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e26b:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    e272:	48 8d 05 f7 c7 00 00 	lea    0xc7f7(%rip),%rax        # 1aa70 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e279:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    e280:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    e287:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    e28b:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    e292:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    e299:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e2a0:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e2a7:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    e2ae:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    e2b5:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e2bc:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e2c3:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    e2ca:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e2d1:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e2d8:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e2df:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    e2e6:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    e2ed:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e2f4:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e2fb:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    e302:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    e309:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e310:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e317:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    e31e:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    e325:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e32c:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e333:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e337:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e33e:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e345:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
  vertInputInfo.sType =
    e34c:	c7 85 c0 fd ff ff 13 	movl   $0x13,-0x240(%rbp)
    e353:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 0;
    e356:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
    e35d:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = nullptr;
    e360:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    e367:	00 00 00 00 
  vertInputInfo.vertexAttributeDescriptionCount = 0;
    e36b:	c7 85 e0 fd ff ff 00 	movl   $0x0,-0x220(%rbp)
    e372:	00 00 00 
  vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e375:	48 c7 85 e8 fd ff ff 	movq   $0x0,-0x218(%rbp)
    e37c:	00 00 00 00 

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e380:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e384:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    e38b:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  inputAssemblyInfo.sType =
    e392:	c7 85 a0 fd ff ff 14 	movl   $0x14,-0x260(%rbp)
    e399:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e39c:	c7 85 b4 fd ff ff 03 	movl   $0x3,-0x24c(%rbp)
    e3a3:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e3a6:	c7 85 b8 fd ff ff 00 	movl   $0x0,-0x248(%rbp)
    e3ad:	00 00 00 

  /*  */
  VkViewport viewport{};
    e3b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3b4:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e3bb:	66 0f d6 85 90 fd ff 	movq   %xmm0,-0x270(%rbp)
    e3c2:	ff 
  viewport.x = 0.0f;
    e3c3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3c7:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    e3ce:	ff 
  viewport.y = 0.0f;
    e3cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3d3:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    e3da:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    e3db:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e3e2:	8b 40 7c             	mov    0x7c(%rax),%eax
    e3e5:	89 c0                	mov    %eax,%eax
    e3e7:	48 85 c0             	test   %rax,%rax
    e3ea:	78 0b                	js     e3f7 <_ZN9VulkanApp22createGraphicsPipelineEv+0x32d>
    e3ec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3f0:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e3f5:	eb 19                	jmp    e410 <_ZN9VulkanApp22createGraphicsPipelineEv+0x346>
    e3f7:	48 89 c2             	mov    %rax,%rdx
    e3fa:	48 d1 ea             	shr    %rdx
    e3fd:	83 e0 01             	and    $0x1,%eax
    e400:	48 09 c2             	or     %rax,%rdx
    e403:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e407:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e40c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e410:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    e417:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    e418:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e41f:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e425:	89 c0                	mov    %eax,%eax
    e427:	48 85 c0             	test   %rax,%rax
    e42a:	78 0b                	js     e437 <_ZN9VulkanApp22createGraphicsPipelineEv+0x36d>
    e42c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e430:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e435:	eb 19                	jmp    e450 <_ZN9VulkanApp22createGraphicsPipelineEv+0x386>
    e437:	48 89 c2             	mov    %rax,%rdx
    e43a:	48 d1 ea             	shr    %rdx
    e43d:	83 e0 01             	and    $0x1,%eax
    e440:	48 09 c2             	or     %rax,%rdx
    e443:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e447:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e44c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e450:	f3 0f 11 85 8c fd ff 	movss  %xmm0,-0x274(%rbp)
    e457:	ff 
  viewport.minDepth = 0.0f;
    e458:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e45c:	f3 0f 11 85 90 fd ff 	movss  %xmm0,-0x270(%rbp)
    e463:	ff 
  viewport.maxDepth = 1.0f;
    e464:	f3 0f 10 05 24 c9 00 	movss  0xc924(%rip),%xmm0        # 1ad90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e46b:	00 
    e46c:	f3 0f 11 85 94 fd ff 	movss  %xmm0,-0x26c(%rbp)
    e473:	ff 

  VkRect2D scissor{};
    e474:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    e47b:	00 00 00 00 
    e47f:	48 c7 85 78 fd ff ff 	movq   $0x0,-0x288(%rbp)
    e486:	00 00 00 00 
  scissor.offset = {0, 0};
    e48a:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
    e491:	00 00 00 
    e494:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
    e49b:	00 00 00 
  scissor.extent = swapchain.extent;
    e49e:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e4a5:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e4a9:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e4b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4b4:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e4bb:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e4c2:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
  viewportStateInfo.sType =
    e4c9:	c7 85 40 fd ff ff 16 	movl   $0x16,-0x2c0(%rbp)
    e4d0:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    e4d3:	c7 85 54 fd ff ff 01 	movl   $0x1,-0x2ac(%rbp)
    e4da:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    e4dd:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    e4e4:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  viewportStateInfo.scissorCount = 1;
    e4eb:	c7 85 60 fd ff ff 01 	movl   $0x1,-0x2a0(%rbp)
    e4f2:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    e4f5:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    e4fc:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e503:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e507:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    e50e:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e515:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e51c:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  rastStateInfo.sType =
    e523:	c7 85 00 fd ff ff 17 	movl   $0x17,-0x300(%rbp)
    e52a:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    e52d:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    e534:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    e538:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    e53f:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e542:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    e549:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e54c:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
    e553:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    e556:	f3 0f 10 05 32 c8 00 	movss  0xc832(%rip),%xmm0        # 1ad90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e55d:	00 
    e55e:	f3 0f 11 85 38 fd ff 	movss  %xmm0,-0x2c8(%rbp)
    e565:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e566:	c7 85 20 fd ff ff 02 	movl   $0x2,-0x2e0(%rbp)
    e56d:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e570:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e577:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    e57a:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e581:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    e584:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e588:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e58f:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    e590:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e594:	f3 0f 11 85 30 fd ff 	movss  %xmm0,-0x2d0(%rbp)
    e59b:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e59c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5a0:	f3 0f 11 85 34 fd ff 	movss  %xmm0,-0x2cc(%rbp)
    e5a7:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e5a8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5ac:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    e5b3:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e5ba:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
  multisampleStateInfo.sType =
    e5c1:	c7 85 d0 fc ff ff 18 	movl   $0x18,-0x330(%rbp)
    e5c8:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e5cb:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    e5d2:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e5d5:	c7 85 e4 fc ff ff 01 	movl   $0x1,-0x31c(%rbp)
    e5dc:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    e5df:	f3 0f 10 05 a9 c7 00 	movss  0xc7a9(%rip),%xmm0        # 1ad90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e5e6:	00 
    e5e7:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    e5ee:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    e5ef:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
    e5f6:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e5fa:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    e601:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e604:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
    e60b:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e60e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e612:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e619:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  colorBlendAttachment.colorWriteMask =
    e620:	c7 85 cc fc ff ff 0f 	movl   $0xf,-0x334(%rbp)
    e627:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    e62a:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
    e631:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e634:	c7 85 b4 fc ff ff 06 	movl   $0x6,-0x34c(%rbp)
    e63b:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    e63e:	c7 85 b8 fc ff ff 07 	movl   $0x7,-0x348(%rbp)
    e645:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e648:	c7 85 bc fc ff ff 00 	movl   $0x0,-0x344(%rbp)
    e64f:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e652:	c7 85 c0 fc ff ff 01 	movl   $0x1,-0x340(%rbp)
    e659:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e65c:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e663:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e666:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    e66d:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e670:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e674:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    e67b:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e682:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e689:	66 0f d6 85 a0 fc ff 	movq   %xmm0,-0x360(%rbp)
    e690:	ff 
  colorBlendState.sType =
    e691:	c7 85 70 fc ff ff 1a 	movl   $0x1a,-0x390(%rbp)
    e698:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    e69b:	c7 85 84 fc ff ff 00 	movl   $0x0,-0x37c(%rbp)
    e6a2:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    e6a5:	c7 85 88 fc ff ff 03 	movl   $0x3,-0x378(%rbp)
    e6ac:	00 00 00 
  colorBlendState.attachmentCount = 1;
    e6af:	c7 85 8c fc ff ff 01 	movl   $0x1,-0x374(%rbp)
    e6b6:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    e6b9:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    e6c0:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    e6c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6cb:	f3 0f 11 85 98 fc ff 	movss  %xmm0,-0x368(%rbp)
    e6d2:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    e6d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6d7:	f3 0f 11 85 9c fc ff 	movss  %xmm0,-0x364(%rbp)
    e6de:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    e6df:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6e3:	f3 0f 11 85 a0 fc ff 	movss  %xmm0,-0x360(%rbp)
    e6ea:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    e6eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6ef:	f3 0f 11 85 a4 fc ff 	movss  %xmm0,-0x35c(%rbp)
    e6f6:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    e6f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6fb:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    e702:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    e709:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    e710:	c7 85 40 fc ff ff 1e 	movl   $0x1e,-0x3c0(%rbp)
    e717:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    e71a:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    e721:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    e724:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
    e72b:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    e72f:	c7 85 60 fc ff ff 00 	movl   $0x0,-0x3a0(%rbp)
    e736:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    e739:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    e740:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    e744:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e74b:	48 8b 40 50          	mov    0x50(%rax),%rax
    e74f:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
    e756:	ba 00 00 00 00       	mov    $0x0,%edx
    e75b:	48 89 ce             	mov    %rcx,%rsi
    e75e:	48 89 c7             	mov    %rax,%rdi
    e761:	e8 80 75 ff ff       	call   5ce6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    e766:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e76d:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    e774:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e778:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    e77f:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    e786:	66 0f 7e 85 30 fc ff 	movd   %xmm0,-0x3d0(%rbp)
    e78d:	ff 
  colorAttachment.format = swapchain.format;
    e78e:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e795:	8b 40 78             	mov    0x78(%rax),%eax
    e798:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    e79e:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
    e7a5:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    e7a8:	c7 85 1c fc ff ff 01 	movl   $0x1,-0x3e4(%rbp)
    e7af:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    e7b2:	c7 85 20 fc ff ff 00 	movl   $0x0,-0x3e0(%rbp)
    e7b9:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    e7bc:	c7 85 24 fc ff ff 02 	movl   $0x2,-0x3dc(%rbp)
    e7c3:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    e7c6:	c7 85 28 fc ff ff 01 	movl   $0x1,-0x3d8(%rbp)
    e7cd:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    e7d0:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
    e7d7:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    e7da:	c7 85 30 fc ff ff ea 	movl   $0x3b9acdea,-0x3d0(%rbp)
    e7e1:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    e7e4:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
    e7eb:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    e7ef:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    e7f6:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    e7f9:	c7 85 0c fc ff ff 02 	movl   $0x2,-0x3f4(%rbp)
    e800:	00 00 00 

  VkSubpassDescription subpass{};
    e803:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e807:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    e80e:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
    e815:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    e81c:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    e823:	66 0f d6 85 00 fc ff 	movq   %xmm0,-0x400(%rbp)
    e82a:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    e82b:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    e832:	00 00 00 
  subpass.colorAttachmentCount = 1;
    e835:	c7 85 d8 fb ff ff 01 	movl   $0x1,-0x428(%rbp)
    e83c:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    e83f:	48 8d 85 08 fc ff ff 	lea    -0x3f8(%rbp),%rax
    e846:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)

  VkRenderPassCreateInfo renderPassInfo{};
    e84d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e851:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
    e858:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
    e85f:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    e866:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    e86d:	c7 85 80 fb ff ff 26 	movl   $0x26,-0x480(%rbp)
    e874:	00 00 00 
  renderPassInfo.pNext = nullptr;
    e877:	48 c7 85 88 fb ff ff 	movq   $0x0,-0x478(%rbp)
    e87e:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    e882:	c7 85 94 fb ff ff 01 	movl   $0x1,-0x46c(%rbp)
    e889:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    e88c:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    e893:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  renderPassInfo.subpassCount = 1;
    e89a:	c7 85 a0 fb ff ff 01 	movl   $0x1,-0x460(%rbp)
    e8a1:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    e8a4:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
    e8ab:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    e8b2:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e8b9:	48 8b 40 50          	mov    0x50(%rax),%rax
    e8bd:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
    e8c4:	ba 00 00 00 00       	mov    $0x0,%edx
    e8c9:	48 89 ce             	mov    %rcx,%rsi
    e8cc:	48 89 c7             	mov    %rax,%rdi
    e8cf:	e8 aa 74 ff ff       	call   5d7e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    e8d4:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e8db:	48 89 82 e8 00 00 00 	mov    %rax,0xe8(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    e8e2:	48 8d 95 f0 fa ff ff 	lea    -0x510(%rbp),%rdx
    e8e9:	b8 00 00 00 00       	mov    $0x0,%eax
    e8ee:	b9 12 00 00 00       	mov    $0x12,%ecx
    e8f3:	48 89 d7             	mov    %rdx,%rdi
    e8f6:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    e8f9:	c7 85 f0 fa ff ff 1c 	movl   $0x1c,-0x510(%rbp)
    e900:	00 00 00 
  pipelineInfo.pNext = nullptr;
    e903:	48 c7 85 f8 fa ff ff 	movq   $0x0,-0x508(%rbp)
    e90a:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    e90e:	c7 85 04 fb ff ff 02 	movl   $0x2,-0x4fc(%rbp)
    e915:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    e918:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    e91f:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    e926:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    e92d:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    e934:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    e93b:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    e942:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    e949:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    e950:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    e957:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    e95e:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    e965:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    e96c:	48 c7 85 40 fb ff ff 	movq   $0x0,-0x4c0(%rbp)
    e973:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    e977:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    e97e:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    e985:	48 c7 85 50 fb ff ff 	movq   $0x0,-0x4b0(%rbp)
    e98c:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    e990:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e997:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
    e99e:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    e9a5:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e9ac:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    e9b3:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  pipelineInfo.subpass = 0;
    e9ba:	c7 85 68 fb ff ff 00 	movl   $0x0,-0x498(%rbp)
    e9c1:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    e9c4:	48 c7 85 70 fb ff ff 	movq   $0x0,-0x490(%rbp)
    e9cb:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    e9cf:	c7 85 78 fb ff ff ff 	movl   $0xffffffff,-0x488(%rbp)
    e9d6:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    e9d9:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    e9e0:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    e9e7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    e9ee:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    e9f5:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    e9fc:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    ea03:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    ea0a:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    ea11:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    ea18:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    ea1f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    ea26:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    ea2d:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    ea34:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    ea3b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ea42:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    ea49:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    ea50:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
    ea57:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    ea5e:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    ea65:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
    ea6c:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
    ea73:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    ea7a:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    ea81:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    ea88:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    ea8f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    ea93:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    ea97:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
    ea9e:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
    eaa5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    eaa9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    eaad:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
    eab4:	48 8b 95 78 fb ff ff 	mov    -0x488(%rbp),%rdx
    eabb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    eabf:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    eac3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    eaca:	49 89 c4             	mov    %rax,%r12
    eacd:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ead3:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ead7:	48 89 c7             	mov    %rax,%rdi
    eada:	e8 61 27 00 00       	call   11240 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    eadf:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    eae3:	4c 89 e6             	mov    %r12,%rsi
    eae6:	4c 89 ef             	mov    %r13,%rdi
    eae9:	4c 89 e1             	mov    %r12,%rcx
    eaec:	4c 89 eb             	mov    %r13,%rbx
    eaef:	48 89 df             	mov    %rbx,%rdi
    eaf2:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    eaf9:	48 89 d1             	mov    %rdx,%rcx
    eafc:	48 89 fa             	mov    %rdi,%rdx
    eaff:	48 89 c7             	mov    %rax,%rdi
    eb02:	e8 71 27 00 00       	call   11278 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    eb07:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    eb0b:	48 89 c7             	mov    %rax,%rdi
    eb0e:	e8 49 27 00 00       	call   1125c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    eb13:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb1a:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
    eb21:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb28:	48 8b 70 50          	mov    0x50(%rax),%rsi
    eb2c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb30:	48 8d 8d d0 fa ff ff 	lea    -0x530(%rbp),%rcx
    eb37:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    eb3d:	48 89 c7             	mov    %rax,%rdi
    eb40:	e8 1a 28 00 00       	call   1135f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    eb45:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb49:	be 00 00 00 00       	mov    $0x0,%esi
    eb4e:	48 89 c7             	mov    %rax,%rdi
    eb51:	e8 7a 29 00 00       	call   114d0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    eb56:	48 8b 10             	mov    (%rax),%rdx
    eb59:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb60:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
    eb67:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb6b:	48 89 c7             	mov    %rax,%rdi
    eb6e:	e8 19 29 00 00       	call   1148c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    eb73:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    eb7a:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb81:	48 8b 40 50          	mov    0x50(%rax),%rax
    eb85:	ba 00 00 00 00       	mov    $0x0,%edx
    eb8a:	48 89 ce             	mov    %rcx,%rsi
    eb8d:	48 89 c7             	mov    %rax,%rdi
    eb90:	e8 b9 7d ff ff       	call   694e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    eb95:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    eb9c:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eba3:	48 8b 40 50          	mov    0x50(%rax),%rax
    eba7:	ba 00 00 00 00       	mov    $0x0,%edx
    ebac:	48 89 ce             	mov    %rcx,%rsi
    ebaf:	48 89 c7             	mov    %rax,%rdi
    ebb2:	e8 97 7d ff ff       	call   694e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    ebb7:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ebbe:	48 89 c7             	mov    %rax,%rdi
    ebc1:	e8 3a 27 00 00       	call   11300 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    ebc6:	e9 99 00 00 00       	jmp    ec64 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb9a>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    ebcb:	48 89 c3             	mov    %rax,%rbx
    ebce:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    ebd5:	48 89 c7             	mov    %rax,%rdi
    ebd8:	e8 03 56 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ebdd:	eb 03                	jmp    ebe2 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb18>
    ebdf:	48 89 c3             	mov    %rax,%rbx
    ebe2:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    ebe9:	48 89 c7             	mov    %rax,%rdi
    ebec:	e8 2f 58 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    ebf1:	48 89 d8             	mov    %rbx,%rax
    ebf4:	48 89 c7             	mov    %rax,%rdi
    ebf7:	e8 f4 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    ebfc:	48 89 c3             	mov    %rax,%rbx
    ebff:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    ec06:	48 89 c7             	mov    %rax,%rdi
    ec09:	e8 d2 55 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ec0e:	eb 03                	jmp    ec13 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb49>
    ec10:	48 89 c3             	mov    %rax,%rbx
    ec13:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    ec1a:	48 89 c7             	mov    %rax,%rdi
    ec1d:	e8 fe 57 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    ec22:	48 89 d8             	mov    %rbx,%rax
    ec25:	48 89 c7             	mov    %rax,%rdi
    ec28:	e8 c3 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    ec2d:	48 89 c3             	mov    %rax,%rbx
    ec30:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ec34:	48 89 c7             	mov    %rax,%rdi
    ec37:	e8 20 26 00 00       	call   1125c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    ec3c:	48 89 d8             	mov    %rbx,%rax
    ec3f:	48 89 c7             	mov    %rax,%rdi
    ec42:	e8 a9 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    ec47:	48 89 c3             	mov    %rax,%rbx
    ec4a:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ec51:	48 89 c7             	mov    %rax,%rdi
    ec54:	e8 a7 26 00 00       	call   11300 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    ec59:	48 89 d8             	mov    %rbx,%rax
    ec5c:	48 89 c7             	mov    %rax,%rdi
    ec5f:	e8 8c 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
    ec64:	48 81 c4 28 05 00 00 	add    $0x528,%rsp
    ec6b:	5b                   	pop    %rbx
    ec6c:	41 5c                	pop    %r12
    ec6e:	41 5d                	pop    %r13
    ec70:	5d                   	pop    %rbp
    ec71:	c3                   	ret

000000000000ec72 <_ZN9VulkanApp17createFramebufferEv>:

void VulkanApp::createFramebuffer() {
    ec72:	55                   	push   %rbp
    ec73:	48 89 e5             	mov    %rsp,%rbp
    ec76:	41 55                	push   %r13
    ec78:	41 54                	push   %r12
    ec7a:	53                   	push   %rbx
    ec7b:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    ec82:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
    ec89:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ec90:	48 8d 98 f0 00 00 00 	lea    0xf0(%rax),%rbx
    ec97:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ec9e:	48 05 a0 00 00 00    	add    $0xa0,%rax
    eca4:	48 89 c7             	mov    %rax,%rdi
    eca7:	e8 44 28 00 00       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ecac:	48 89 c6             	mov    %rax,%rsi
    ecaf:	48 89 df             	mov    %rbx,%rdi
    ecb2:	e8 5d 28 00 00       	call   11514 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    ecb7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    ecbe:	00 
    ecbf:	e9 3a 01 00 00       	jmp    edfe <_ZN9VulkanApp17createFramebufferEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
    ecc4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    eccb:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    ecd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecd6:	48 89 c6             	mov    %rax,%rsi
    ecd9:	48 89 d7             	mov    %rdx,%rdi
    ecdc:	e8 3f 25 00 00       	call   11220 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    ece1:	48 8b 00             	mov    (%rax),%rax
    ece4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ece8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    ecec:	49 89 c4             	mov    %rax,%r12
    ecef:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ecf5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    ecf9:	48 89 c7             	mov    %rax,%rdi
    ecfc:	e8 99 28 00 00       	call   1159a <_ZNSaIP13VkImageView_TEC1Ev>
    ed01:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    ed05:	4c 89 e6             	mov    %r12,%rsi
    ed08:	4c 89 ef             	mov    %r13,%rdi
    ed0b:	4c 89 e1             	mov    %r12,%rcx
    ed0e:	4c 89 eb             	mov    %r13,%rbx
    ed11:	48 89 df             	mov    %rbx,%rdi
    ed14:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ed18:	48 89 d1             	mov    %rdx,%rcx
    ed1b:	48 89 fa             	mov    %rdi,%rdx
    ed1e:	48 89 c7             	mov    %rax,%rdi
    ed21:	e8 ac 28 00 00       	call   115d2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ed26:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    ed2a:	48 89 c7             	mov    %rax,%rdi
    ed2d:	e8 84 28 00 00       	call   115b6 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
    ed32:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ed36:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ed3d:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    ed41:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    ed45:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    ed49:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
    ed50:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
    ed53:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ed5a:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    ed61:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
    ed65:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ed69:	48 89 c7             	mov    %rax,%rdi
    ed6c:	e8 7f 27 00 00       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ed71:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
    ed74:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ed78:	48 89 c7             	mov    %rax,%rdi
    ed7b:	e8 1e 29 00 00       	call   1169e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
    ed80:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
    ed84:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ed8b:	8b 40 7c             	mov    0x7c(%rax),%eax
    ed8e:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
    ed91:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ed98:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    ed9e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
    eda1:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
    eda8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    edaf:	48 8b 40 50          	mov    0x50(%rax),%rax
    edb3:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    edba:	ba 00 00 00 00       	mov    $0x0,%edx
    edbf:	48 89 ce             	mov    %rcx,%rsi
    edc2:	48 89 c7             	mov    %rax,%rdi
    edc5:	e8 4c 70 ff ff       	call   5e16 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
    edca:	48 89 c3             	mov    %rax,%rbx
    edcd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    edd4:	48 8d 90 f0 00 00 00 	lea    0xf0(%rax),%rdx
    eddb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eddf:	48 89 c6             	mov    %rax,%rsi
    ede2:	48 89 d7             	mov    %rdx,%rdi
    ede5:	e8 d8 28 00 00       	call   116c2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    edea:	48 89 18             	mov    %rbx,(%rax)
  }
    eded:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    edf1:	48 89 c7             	mov    %rax,%rdi
    edf4:	e8 61 28 00 00       	call   1165a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    edf9:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    edfe:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ee05:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ee0b:	48 89 c7             	mov    %rax,%rdi
    ee0e:	e8 dd 26 00 00       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ee13:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    ee17:	0f 92 c0             	setb   %al
    ee1a:	84 c0                	test   %al,%al
    ee1c:	0f 85 a2 fe ff ff    	jne    ecc4 <_ZN9VulkanApp17createFramebufferEv+0x52>
}
    ee22:	eb 34                	jmp    ee58 <_ZN9VulkanApp17createFramebufferEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
    ee24:	48 89 c3             	mov    %rax,%rbx
    ee27:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    ee2b:	48 89 c7             	mov    %rax,%rdi
    ee2e:	e8 83 27 00 00       	call   115b6 <_ZNSaIP13VkImageView_TED1Ev>
    ee33:	48 89 d8             	mov    %rbx,%rax
    ee36:	48 89 c7             	mov    %rax,%rdi
    ee39:	e8 b2 58 ff ff       	call   46f0 <_Unwind_Resume@plt>
  }
    ee3e:	48 89 c3             	mov    %rax,%rbx
    ee41:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ee45:	48 89 c7             	mov    %rax,%rdi
    ee48:	e8 0d 28 00 00       	call   1165a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    ee4d:	48 89 d8             	mov    %rbx,%rax
    ee50:	48 89 c7             	mov    %rax,%rdi
    ee53:	e8 98 58 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    ee58:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    ee5f:	5b                   	pop    %rbx
    ee60:	41 5c                	pop    %r12
    ee62:	41 5d                	pop    %r13
    ee64:	5d                   	pop    %rbp
    ee65:	c3                   	ret

000000000000ee66 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    ee66:	55                   	push   %rbp
    ee67:	48 89 e5             	mov    %rsp,%rbp
    ee6a:	48 83 ec 30          	sub    $0x30,%rsp
    ee6e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    ee72:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee76:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    ee7a:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    ee7f:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    ee86:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ee8d:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    ee8e:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    ee95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee99:	8b 40 68             	mov    0x68(%rax),%eax
    ee9c:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    ee9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eea3:	48 8b 40 50          	mov    0x50(%rax),%rax
    eea7:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    eeab:	ba 00 00 00 00       	mov    $0x0,%edx
    eeb0:	48 89 ce             	mov    %rcx,%rsi
    eeb3:	48 89 c7             	mov    %rax,%rdi
    eeb6:	e8 f3 6f ff ff       	call   5eae <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    eebb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    eebf:	48 89 82 10 01 00 00 	mov    %rax,0x110(%rdx)
}
    eec6:	90                   	nop
    eec7:	c9                   	leave
    eec8:	c3                   	ret
    eec9:	90                   	nop

000000000000eeca <_ZN9VulkanApp19createCommandBufferEv>:

void VulkanApp::createCommandBuffer() {
    eeca:	55                   	push   %rbp
    eecb:	48 89 e5             	mov    %rsp,%rbp
    eece:	48 83 ec 50          	sub    $0x50,%rsp
    eed2:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
    eed6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eeda:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    eede:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    eee2:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
    eee9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eeed:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
    eef4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    eef8:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount = 1;
    eeff:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo);
    ef06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef0a:	48 8b 48 50          	mov    0x50(%rax),%rcx
    ef0e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ef12:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    ef16:	48 89 ce             	mov    %rcx,%rsi
    ef19:	48 89 c7             	mov    %rax,%rdi
    ef1c:	e8 3c 5e ff ff       	call   4d5d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
    ef21:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ef25:	48 89 c7             	mov    %rax,%rdi
    ef28:	e8 1d 60 ff ff       	call   4f4a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
    ef2d:	90                   	nop
    ef2e:	c9                   	leave
    ef2f:	c3                   	ret

000000000000ef30 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    ef30:	55                   	push   %rbp
    ef31:	48 89 e5             	mov    %rsp,%rbp
    ef34:	41 57                	push   %r15
    ef36:	41 56                	push   %r14
    ef38:	41 55                	push   %r13
    ef3a:	41 54                	push   %r12
    ef3c:	53                   	push   %rbx
    ef3d:	48 83 ec 38          	sub    $0x38,%rsp
    ef41:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    ef45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef49:	48 8d 58 10          	lea    0x10(%rax),%rbx
    ef4d:	48 8d 05 21 bb 00 00 	lea    0xbb21(%rip),%rax        # 1aa75 <_ZN6__pstl9execution2v1L5unseqE+0x146>
    ef54:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ef58:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ef5c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ef60:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    ef67:	00 
    ef68:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ef6c:	48 89 c7             	mov    %rax,%rdi
    ef6f:	e8 b8 90 ff ff       	call   802c <_ZNSaIPKcEC1Ev>
    ef74:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ef78:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    ef7c:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    ef80:	49 89 f0             	mov    %rsi,%r8
    ef83:	49 89 f9             	mov    %rdi,%r9
    ef86:	48 89 fa             	mov    %rdi,%rdx
    ef89:	48 89 c1             	mov    %rax,%rcx
    ef8c:	4c 89 c6             	mov    %r8,%rsi
    ef8f:	48 89 df             	mov    %rbx,%rdi
    ef92:	e8 7b 18 00 00       	call   10812 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ef97:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ef9b:	48 89 c7             	mov    %rax,%rdi
    ef9e:	e8 a5 90 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    efa3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    efa7:	48 8d 58 28          	lea    0x28(%rax),%rbx
    efab:	4c 8d 35 2e 8d 01 00 	lea    0x18d2e(%rip),%r14        # 27ce0 <C.102.0>
    efb2:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    efb8:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    efbc:	48 89 c7             	mov    %rax,%rdi
    efbf:	e8 68 90 ff ff       	call   802c <_ZNSaIPKcEC1Ev>
    efc4:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    efc8:	4d 89 f0             	mov    %r14,%r8
    efcb:	4d 89 f9             	mov    %r15,%r9
    efce:	4c 89 f6             	mov    %r14,%rsi
    efd1:	4c 89 ff             	mov    %r15,%rdi
    efd4:	48 89 fa             	mov    %rdi,%rdx
    efd7:	48 89 c1             	mov    %rax,%rcx
    efda:	4c 89 c6             	mov    %r8,%rsi
    efdd:	48 89 df             	mov    %rbx,%rdi
    efe0:	e8 2d 18 00 00       	call   10812 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    efe5:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    efe9:	48 89 c7             	mov    %rax,%rdi
    efec:	e8 57 90 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    eff1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eff5:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    effc:	4c 8d 25 ed 8c 01 00 	lea    0x18ced(%rip),%r12        # 27cf0 <C.103.1>
    f003:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    f009:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f00d:	48 89 c7             	mov    %rax,%rdi
    f010:	e8 17 90 ff ff       	call   802c <_ZNSaIPKcEC1Ev>
    f015:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f019:	4d 89 e0             	mov    %r12,%r8
    f01c:	4d 89 e9             	mov    %r13,%r9
    f01f:	4c 89 e6             	mov    %r12,%rsi
    f022:	4c 89 ef             	mov    %r13,%rdi
    f025:	48 89 fa             	mov    %rdi,%rdx
    f028:	48 89 c1             	mov    %rax,%rcx
    f02b:	4c 89 c6             	mov    %r8,%rsi
    f02e:	48 89 df             	mov    %rbx,%rdi
    f031:	e8 dc 17 00 00       	call   10812 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f036:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f03a:	48 89 c7             	mov    %rax,%rdi
    f03d:	e8 06 90 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    f042:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f046:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f04c:	48 89 c7             	mov    %rax,%rdi
    f04f:	e8 8c 16 00 00       	call   106e0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    f054:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f058:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f05e:	48 89 c7             	mov    %rax,%rdi
    f061:	e8 b2 16 00 00       	call   10718 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    f066:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f06a:	48 05 d0 00 00 00    	add    $0xd0,%rax
    f070:	48 89 c7             	mov    %rax,%rdi
    f073:	e8 bc 16 00 00       	call   10734 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
    f078:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f07c:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f082:	48 89 c7             	mov    %rax,%rdi
    f085:	e8 1c 17 00 00       	call   107a6 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
  createWindow();
    f08a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f08e:	48 89 c7             	mov    %rax,%rdi
    f091:	e8 20 dd ff ff       	call   cdb6 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    f096:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f09a:	48 89 c7             	mov    %rax,%rdi
    f09d:	e8 54 dd ff ff       	call   cdf6 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    f0a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0a6:	48 89 c7             	mov    %rax,%rdi
    f0a9:	e8 2e df ff ff       	call   cfdc <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    f0ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0b2:	48 89 c7             	mov    %rax,%rdi
    f0b5:	e8 b6 df ff ff       	call   d070 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    f0ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0be:	48 89 c7             	mov    %rax,%rdi
    f0c1:	e8 02 e2 ff ff       	call   d2c8 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    f0c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0ca:	48 89 c7             	mov    %rax,%rdi
    f0cd:	e8 06 ee ff ff       	call   ded8 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    f0d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0d6:	48 89 c7             	mov    %rax,%rdi
    f0d9:	e8 40 ee ff ff       	call   df1e <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    f0de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0e2:	48 89 c7             	mov    %rax,%rdi
    f0e5:	e8 e0 ef ff ff       	call   e0ca <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffer();
    f0ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0ee:	48 89 c7             	mov    %rax,%rdi
    f0f1:	e8 7c fb ff ff       	call   ec72 <_ZN9VulkanApp17createFramebufferEv>
  createCommandPool();
    f0f6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0fa:	48 89 c7             	mov    %rax,%rdi
    f0fd:	e8 64 fd ff ff       	call   ee66 <_ZN9VulkanApp17createCommandPoolEv>
}
    f102:	e9 b2 00 00 00       	jmp    f1b9 <_ZN9VulkanAppC1Ev+0x289>
VulkanApp::VulkanApp() {
    f107:	48 89 c3             	mov    %rax,%rbx
    f10a:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    f10e:	48 89 c7             	mov    %rax,%rdi
    f111:	e8 32 8f ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    f116:	48 89 d8             	mov    %rbx,%rax
    f119:	48 89 c7             	mov    %rax,%rdi
    f11c:	e8 cf 55 ff ff       	call   46f0 <_Unwind_Resume@plt>
    f121:	48 89 c3             	mov    %rax,%rbx
    f124:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    f128:	48 89 c7             	mov    %rax,%rdi
    f12b:	e8 18 8f ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    f130:	eb 6c                	jmp    f19e <_ZN9VulkanAppC1Ev+0x26e>
    f132:	48 89 c3             	mov    %rax,%rbx
    f135:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f139:	48 89 c7             	mov    %rax,%rdi
    f13c:	e8 07 8f ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    f141:	eb 4b                	jmp    f18e <_ZN9VulkanAppC1Ev+0x25e>
}
    f143:	48 89 c3             	mov    %rax,%rbx
    f146:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f14a:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f150:	48 89 c7             	mov    %rax,%rdi
    f153:	e8 ba 26 00 00       	call   11812 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    f158:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f15c:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f162:	48 89 c7             	mov    %rax,%rdi
    f165:	e8 04 99 ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f16a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f16e:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f174:	48 89 c7             	mov    %rax,%rdi
    f177:	e8 de 24 00 00       	call   1165a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f17c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f180:	48 05 88 00 00 00    	add    $0x88,%rax
    f186:	48 89 c7             	mov    %rax,%rdi
    f189:	e8 0c 17 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    f18e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f192:	48 83 c0 28          	add    $0x28,%rax
}
    f196:	48 89 c7             	mov    %rax,%rdi
    f199:	e8 fc 16 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f19e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1a2:	48 83 c0 10          	add    $0x10,%rax
    f1a6:	48 89 c7             	mov    %rax,%rdi
    f1a9:	e8 ec 16 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f1ae:	48 89 d8             	mov    %rbx,%rax
    f1b1:	48 89 c7             	mov    %rax,%rdi
    f1b4:	e8 37 55 ff ff       	call   46f0 <_Unwind_Resume@plt>
    f1b9:	48 83 c4 38          	add    $0x38,%rsp
    f1bd:	5b                   	pop    %rbx
    f1be:	41 5c                	pop    %r12
    f1c0:	41 5d                	pop    %r13
    f1c2:	41 5e                	pop    %r14
    f1c4:	41 5f                	pop    %r15
    f1c6:	5d                   	pop    %rbp
    f1c7:	c3                   	ret

000000000000f1c8 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    f1c8:	55                   	push   %rbp
    f1c9:	48 89 e5             	mov    %rsp,%rbp
    f1cc:	48 83 ec 50          	sub    $0x50,%rsp
    f1d0:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    f1d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1d8:	48 8b 88 10 01 00 00 	mov    0x110(%rax),%rcx
    f1df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1e3:	48 8b 40 50          	mov    0x50(%rax),%rax
    f1e7:	ba 00 00 00 00       	mov    $0x0,%edx
    f1ec:	48 89 ce             	mov    %rcx,%rsi
    f1ef:	48 89 c7             	mov    %rax,%rdi
    f1f2:	e8 cc 78 ff ff       	call   6ac3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    f1f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1fb:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f201:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f209:	48 89 c7             	mov    %rax,%rdi
    f20c:	e8 45 26 00 00       	call   11856 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    f211:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f219:	48 89 c7             	mov    %rax,%rdi
    f21c:	e8 5b 26 00 00       	call   1187c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    f221:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f225:	eb 3b                	jmp    f262 <_ZN9VulkanAppD1Ev+0x9a>
    f227:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f22b:	48 89 c7             	mov    %rax,%rdi
    f22e:	e8 cd 26 00 00       	call   11900 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    f233:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
    f237:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f23b:	48 8b 08             	mov    (%rax),%rcx
    f23e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f242:	48 8b 40 50          	mov    0x50(%rax),%rax
    f246:	ba 00 00 00 00       	mov    $0x0,%edx
    f24b:	48 89 ce             	mov    %rcx,%rsi
    f24e:	48 89 c7             	mov    %rax,%rdi
    f251:	e8 3f 78 ff ff       	call   6a95 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    f256:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f25a:	48 89 c7             	mov    %rax,%rdi
    f25d:	e8 7e 26 00 00       	call   118e0 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    f262:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f266:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f26a:	48 89 d6             	mov    %rdx,%rsi
    f26d:	48 89 c7             	mov    %rax,%rdi
    f270:	e8 30 26 00 00       	call   118a5 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f275:	84 c0                	test   %al,%al
    f277:	75 ae                	jne    f227 <_ZN9VulkanAppD1Ev+0x5f>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
    f279:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f27d:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    f284:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f288:	48 8b 40 50          	mov    0x50(%rax),%rax
    f28c:	ba 00 00 00 00       	mov    $0x0,%edx
    f291:	48 89 ce             	mov    %rcx,%rsi
    f294:	48 89 c7             	mov    %rax,%rdi
    f297:	e8 3c 77 ff ff       	call   69d8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    f29c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2a0:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    f2a7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2ab:	48 8b 40 50          	mov    0x50(%rax),%rax
    f2af:	ba 00 00 00 00       	mov    $0x0,%edx
    f2b4:	48 89 ce             	mov    %rcx,%rsi
    f2b7:	48 89 c7             	mov    %rax,%rdi
    f2ba:	e8 bd 76 ff ff       	call   697c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    f2bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2c3:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
    f2ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2ce:	48 8b 40 50          	mov    0x50(%rax),%rax
    f2d2:	ba 00 00 00 00       	mov    $0x0,%edx
    f2d7:	48 89 ce             	mov    %rcx,%rsi
    f2da:	48 89 c7             	mov    %rax,%rdi
    f2dd:	e8 c8 76 ff ff       	call   69aa <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f2e2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2e6:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f2ec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f2f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f2f4:	48 89 c7             	mov    %rax,%rdi
    f2f7:	e8 16 26 00 00       	call   11912 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    f2fc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f300:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f304:	48 89 c7             	mov    %rax,%rdi
    f307:	e8 2c 26 00 00       	call   11938 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    f30c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f310:	eb 3b                	jmp    f34d <_ZN9VulkanAppD1Ev+0x185>
    f312:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f316:	48 89 c7             	mov    %rax,%rdi
    f319:	e8 9e 26 00 00       	call   119bc <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    f31e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
    f322:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f326:	48 8b 08             	mov    (%rax),%rcx
    f329:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f32d:	48 8b 40 50          	mov    0x50(%rax),%rax
    f331:	ba 00 00 00 00       	mov    $0x0,%edx
    f336:	48 89 ce             	mov    %rcx,%rsi
    f339:	48 89 c7             	mov    %rax,%rdi
    f33c:	e8 df 75 ff ff       	call   6920 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f341:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f345:	48 89 c7             	mov    %rax,%rdi
    f348:	e8 4f 26 00 00       	call   1199c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    f34d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f351:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f355:	48 89 d6             	mov    %rdx,%rsi
    f358:	48 89 c7             	mov    %rax,%rdi
    f35b:	e8 01 26 00 00       	call   11961 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f360:	84 c0                	test   %al,%al
    f362:	75 ae                	jne    f312 <_ZN9VulkanAppD1Ev+0x14a>
  }
  vkh::destroySwapchain(device, swapchain.self);
    f364:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f368:	48 8b 48 70          	mov    0x70(%rax),%rcx
    f36c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f370:	48 8b 40 50          	mov    0x50(%rax),%rax
    f374:	ba 00 00 00 00       	mov    $0x0,%edx
    f379:	48 89 ce             	mov    %rcx,%rsi
    f37c:	48 89 c7             	mov    %rax,%rdi
    f37f:	e8 6e 75 ff ff       	call   68f2 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    f384:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f388:	48 8b 40 50          	mov    0x50(%rax),%rax
    f38c:	be 00 00 00 00       	mov    $0x0,%esi
    f391:	48 89 c7             	mov    %rax,%rdi
    f394:	e8 05 75 ff ff       	call   689e <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    f399:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f39d:	48 8b 48 40          	mov    0x40(%rax),%rcx
    f3a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3a5:	48 8b 40 08          	mov    0x8(%rax),%rax
    f3a9:	ba 00 00 00 00       	mov    $0x0,%edx
    f3ae:	48 89 ce             	mov    %rcx,%rsi
    f3b1:	48 89 c7             	mov    %rax,%rdi
    f3b4:	e8 94 d5 ff ff       	call   c94d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    f3b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3bd:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f3c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3c5:	48 8b 40 08          	mov    0x8(%rax),%rax
    f3c9:	ba 00 00 00 00       	mov    $0x0,%edx
    f3ce:	48 89 ce             	mov    %rcx,%rsi
    f3d1:	48 89 c7             	mov    %rax,%rdi
    f3d4:	e8 eb 74 ff ff       	call   68c4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    f3d9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3dd:	48 8b 40 08          	mov    0x8(%rax),%rax
    f3e1:	be 00 00 00 00       	mov    $0x0,%esi
    f3e6:	48 89 c7             	mov    %rax,%rdi
    f3e9:	e8 8a 74 ff ff       	call   6878 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    f3ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3f2:	48 8b 00             	mov    (%rax),%rax
    f3f5:	48 89 c7             	mov    %rax,%rdi
    f3f8:	e8 60 74 ff ff       	call   685d <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    f3fd:	e8 ae 4f ff ff       	call   43b0 <glfwTerminate@plt>
}
    f402:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f406:	48 05 f0 00 00 00    	add    $0xf0,%rax
    f40c:	48 89 c7             	mov    %rax,%rdi
    f40f:	e8 fe 23 00 00       	call   11812 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    f414:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f418:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f41e:	48 89 c7             	mov    %rax,%rdi
    f421:	e8 48 96 ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f426:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f42a:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f430:	48 89 c7             	mov    %rax,%rdi
    f433:	e8 22 22 00 00       	call   1165a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f438:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f43c:	48 05 88 00 00 00    	add    $0x88,%rax
    f442:	48 89 c7             	mov    %rax,%rdi
    f445:	e8 50 14 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    f44a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f44e:	48 83 c0 28          	add    $0x28,%rax
}
    f452:	48 89 c7             	mov    %rax,%rdi
    f455:	e8 40 14 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f45a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f45e:	48 83 c0 10          	add    $0x10,%rax
    f462:	48 89 c7             	mov    %rax,%rdi
    f465:	e8 30 14 00 00       	call   1089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f46a:	90                   	nop
    f46b:	c9                   	leave
    f46c:	c3                   	ret
    f46d:	90                   	nop

000000000000f46e <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    f46e:	55                   	push   %rbp
    f46f:	48 89 e5             	mov    %rsp,%rbp
    f472:	53                   	push   %rbx
    f473:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    f47a:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    f481:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f485:	48 89 c7             	mov    %rax,%rdi
    f488:	e8 41 25 00 00       	call   119ce <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    f48d:	f2 0f 10 05 03 b9 00 	movsd  0xb903(%rip),%xmm0        # 1ad98 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f494:	00 
    f495:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    f49a:	e9 a1 00 00 00       	jmp    f540 <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    f49f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f4a3:	48 89 c7             	mov    %rax,%rdi
    f4a6:	e8 23 25 00 00       	call   119ce <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    f4ab:	e8 a0 4e ff ff       	call   4350 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    f4b0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f4b4:	48 89 c7             	mov    %rax,%rdi
    f4b7:	e8 06 13 00 00       	call   107c2 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f4bc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4c0:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f4c5:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    f4ca:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    f4cf:	66 0f 2f 05 c1 b8 00 	comisd 0xb8c1(%rip),%xmm0        # 1ad98 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f4d6:	00 
    f4d7:	72 5b                	jb     f534 <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    f4d9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f4dd:	48 89 c7             	mov    %rax,%rdi
    f4e0:	e8 dd 12 00 00       	call   107c2 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f4e5:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f4e9:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f4ee:	f2 0f 10 05 a2 b8 00 	movsd  0xb8a2(%rip),%xmm0        # 1ad98 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f4f5:	00 
    f4f6:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    f4fa:	66 48 0f 7e c0       	movq   %xmm0,%rax
    f4ff:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f504:	48 8d 05 f5 8e 01 00 	lea    0x18ef5(%rip),%rax        # 28400 <_ZSt4cout@GLIBCXX_3.4>
    f50b:	48 89 c7             	mov    %rax,%rdi
    f50e:	e8 3d 52 ff ff       	call   4750 <_ZNSolsEd@plt>
    f513:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    f516:	48 8d 05 6b b5 00 00 	lea    0xb56b(%rip),%rax        # 1aa88 <_ZN6__pstl9execution2v1L5unseqE+0x159>
    f51d:	48 89 c6             	mov    %rax,%rsi
    f520:	48 89 d7             	mov    %rdx,%rdi
    f523:	e8 48 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    f528:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f52c:	48 89 c7             	mov    %rax,%rdi
    f52f:	e8 aa 25 00 00       	call   11ade <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    f534:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f538:	48 89 c7             	mov    %rax,%rdi
    f53b:	e8 04 25 00 00       	call   11a44 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    f540:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f547:	48 8b 00             	mov    (%rax),%rax
    f54a:	48 89 c7             	mov    %rax,%rdi
    f54d:	e8 ee 51 ff ff       	call   4740 <glfwWindowShouldClose@plt>
    f552:	85 c0                	test   %eax,%eax
    f554:	0f 94 c0             	sete   %al
    f557:	84 c0                	test   %al,%al
    f559:	0f 85 40 ff ff ff    	jne    f49f <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    f55f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f566:	48 8b 40 50          	mov    0x50(%rax),%rax
    f56a:	48 89 c7             	mov    %rax,%rdi
    f56d:	e8 2e 4b ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    f572:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f576:	48 89 c7             	mov    %rax,%rdi
    f579:	e8 c6 24 00 00       	call   11a44 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f57e:	eb 2b                	jmp    f5ab <_ZN9VulkanApp3runEv+0x13d>
  }
    f580:	48 89 c3             	mov    %rax,%rbx
    f583:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f587:	48 89 c7             	mov    %rax,%rdi
    f58a:	e8 b5 24 00 00       	call   11a44 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f58f:	eb 03                	jmp    f594 <_ZN9VulkanApp3runEv+0x126>
}
    f591:	48 89 c3             	mov    %rax,%rbx
    f594:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f598:	48 89 c7             	mov    %rax,%rdi
    f59b:	e8 a4 24 00 00       	call   11a44 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f5a0:	48 89 d8             	mov    %rbx,%rax
    f5a3:	48 89 c7             	mov    %rax,%rdi
    f5a6:	e8 45 51 ff ff       	call   46f0 <_Unwind_Resume@plt>
    f5ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f5af:	c9                   	leave
    f5b0:	c3                   	ret
    f5b1:	90                   	nop

000000000000f5b2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    f5b2:	55                   	push   %rbp
    f5b3:	48 89 e5             	mov    %rsp,%rbp
    f5b6:	41 54                	push   %r12
    f5b8:	53                   	push   %rbx
    f5b9:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    f5c0:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    f5c7:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    f5ce:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f5d5:	48 89 c7             	mov    %rax,%rdi
    f5d8:	e8 c3 4e ff ff       	call   44a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    f5dd:	be 10 00 00 00       	mov    $0x10,%esi
    f5e2:	bf 08 00 00 00       	mov    $0x8,%edi
    f5e7:	e8 62 69 ff ff       	call   5f4e <_ZStorSt13_Ios_OpenmodeS_>
    f5ec:	89 c2                	mov    %eax,%edx
    f5ee:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    f5f5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f5fc:	48 89 ce             	mov    %rcx,%rsi
    f5ff:	48 89 c7             	mov    %rax,%rdi
    f602:	e8 79 4f ff ff       	call   4580 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    f607:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f60e:	48 89 c7             	mov    %rax,%rdi
    f611:	e8 9a 50 ff ff       	call   46b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    f616:	83 f0 01             	xor    $0x1,%eax
    f619:	84 c0                	test   %al,%al
    f61b:	0f 84 97 00 00 00    	je     f6b8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    f621:	bf 10 00 00 00       	mov    $0x10,%edi
    f626:	e8 45 4b ff ff       	call   4170 <__cxa_allocate_exception@plt>
    f62b:	48 89 c3             	mov    %rax,%rbx
    f62e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f635:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    f63c:	48 8d 0d 4b b4 00 00 	lea    0xb44b(%rip),%rcx        # 1aa8e <_ZN6__pstl9execution2v1L5unseqE+0x15f>
    f643:	48 89 ce             	mov    %rcx,%rsi
    f646:	48 89 c7             	mov    %rax,%rdi
    f649:	e8 56 69 ff ff       	call   5fa4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    f64e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f655:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    f65c:	ba 0a 00 00 00       	mov    $0xa,%edx
    f661:	48 89 ce             	mov    %rcx,%rsi
    f664:	48 89 c7             	mov    %rax,%rdi
    f667:	e8 92 24 00 00       	call   11afe <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    f66c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f673:	48 89 c6             	mov    %rax,%rsi
    f676:	48 89 df             	mov    %rbx,%rdi
    f679:	e8 d2 4f ff ff       	call   4650 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    f67e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f685:	48 89 c7             	mov    %rax,%rdi
    f688:	e8 53 4b ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f68d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f694:	48 89 c7             	mov    %rax,%rdi
    f697:	e8 44 4b ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f69c:	48 8b 05 05 89 01 00 	mov    0x18905(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f6a3:	48 89 c2             	mov    %rax,%rdx
    f6a6:	48 8d 05 93 86 01 00 	lea    0x18693(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f6ad:	48 89 c6             	mov    %rax,%rsi
    f6b0:	48 89 df             	mov    %rbx,%rdi
    f6b3:	e8 d8 4f ff ff       	call   4690 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    f6b8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f6bf:	48 83 c0 10          	add    $0x10,%rax
    f6c3:	48 8d 15 d4 b3 00 00 	lea    0xb3d4(%rip),%rdx        # 1aa9e <_ZN6__pstl9execution2v1L5unseqE+0x16f>
    f6ca:	48 89 d6             	mov    %rdx,%rsi
    f6cd:	48 89 c7             	mov    %rax,%rdi
    f6d0:	e8 9b 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    f6d5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f6dc:	48 83 c0 10          	add    $0x10,%rax
    f6e0:	48 8d 15 d0 b3 00 00 	lea    0xb3d0(%rip),%rdx        # 1aab7 <_ZN6__pstl9execution2v1L5unseqE+0x188>
    f6e7:	48 89 d6             	mov    %rdx,%rsi
    f6ea:	48 89 c7             	mov    %rax,%rdi
    f6ed:	e8 7e 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    f6f2:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f6f9:	be 00 00 00 00       	mov    $0x0,%esi
    f6fe:	48 89 c7             	mov    %rax,%rdi
    f701:	e8 80 75 ff ff       	call   6c86 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    f706:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f70d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f711:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f715:	48 89 c7             	mov    %rax,%rdi
    f718:	e8 63 16 00 00       	call   10d80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f71d:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    f724:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f728:	48 89 c7             	mov    %rax,%rdi
    f72b:	e8 76 16 00 00       	call   10da6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f730:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    f737:	eb 64                	jmp    f79d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    f739:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f740:	48 89 c7             	mov    %rax,%rdi
    f743:	e8 e6 16 00 00       	call   10e2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f748:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    f74f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f756:	48 83 c0 10          	add    $0x10,%rax
    f75a:	48 8d 15 67 b3 00 00 	lea    0xb367(%rip),%rdx        # 1aac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f761:	48 89 d6             	mov    %rdx,%rsi
    f764:	48 89 c7             	mov    %rax,%rdi
    f767:	e8 04 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f76c:	48 89 c2             	mov    %rax,%rdx
    f76f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f776:	48 89 c6             	mov    %rax,%rsi
    f779:	48 89 d7             	mov    %rdx,%rdi
    f77c:	e8 ef 4b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f781:	be 0a 00 00 00       	mov    $0xa,%esi
    f786:	48 89 c7             	mov    %rax,%rdi
    f789:	e8 f2 4c ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    f78e:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f795:	48 89 c7             	mov    %rax,%rdi
    f798:	e8 6d 16 00 00       	call   10e0a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f79d:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    f7a4:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f7ab:	48 89 d6             	mov    %rdx,%rsi
    f7ae:	48 89 c7             	mov    %rax,%rdi
    f7b1:	e8 19 16 00 00       	call   10dcf <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f7b6:	84 c0                	test   %al,%al
    f7b8:	0f 85 7b ff ff ff    	jne    f739 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    f7be:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f7c5:	48 83 c0 10          	add    $0x10,%rax
    f7c9:	48 8d 15 fb b2 00 00 	lea    0xb2fb(%rip),%rdx        # 1aacb <_ZN6__pstl9execution2v1L5unseqE+0x19c>
    f7d0:	48 89 d6             	mov    %rdx,%rsi
    f7d3:	48 89 c7             	mov    %rax,%rdi
    f7d6:	e8 95 4b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    f7db:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f7e2:	48 83 c0 10          	add    $0x10,%rax
    f7e6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f7ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f7ee:	48 89 c7             	mov    %rax,%rdi
    f7f1:	e8 e8 10 00 00       	call   108de <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f7f6:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    f7fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f801:	48 89 c7             	mov    %rax,%rdi
    f804:	e8 fb 10 00 00       	call   10904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f809:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    f810:	eb 67                	jmp    f879 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    f812:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f819:	48 89 c7             	mov    %rax,%rdi
    f81c:	e8 67 11 00 00       	call   10988 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f821:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    f828:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f82f:	48 83 c0 10          	add    $0x10,%rax
    f833:	48 8d 15 8e b2 00 00 	lea    0xb28e(%rip),%rdx        # 1aac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f83a:	48 89 d6             	mov    %rdx,%rsi
    f83d:	48 89 c7             	mov    %rax,%rdi
    f840:	e8 2b 4b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f845:	48 89 c2             	mov    %rax,%rdx
    f848:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f84f:	48 8b 00             	mov    (%rax),%rax
    f852:	48 89 c6             	mov    %rax,%rsi
    f855:	48 89 d7             	mov    %rdx,%rdi
    f858:	e8 13 4b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f85d:	be 0a 00 00 00       	mov    $0xa,%esi
    f862:	48 89 c7             	mov    %rax,%rdi
    f865:	e8 16 4c ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    f86a:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f871:	48 89 c7             	mov    %rax,%rdi
    f874:	e8 ef 10 00 00       	call   10968 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f879:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    f880:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f887:	48 89 d6             	mov    %rdx,%rsi
    f88a:	48 89 c7             	mov    %rax,%rdi
    f88d:	e8 9b 10 00 00       	call   1092d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f892:	84 c0                	test   %al,%al
    f894:	0f 85 78 ff ff ff    	jne    f812 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    f89a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8a1:	48 83 c0 10          	add    $0x10,%rax
    f8a5:	be 0a 00 00 00       	mov    $0xa,%esi
    f8aa:	48 89 c7             	mov    %rax,%rdi
    f8ad:	e8 ce 4b ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    f8b2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8b9:	48 83 c0 10          	add    $0x10,%rax
    f8bd:	48 8d 15 17 b2 00 00 	lea    0xb217(%rip),%rdx        # 1aadb <_ZN6__pstl9execution2v1L5unseqE+0x1ac>
    f8c4:	48 89 d6             	mov    %rdx,%rsi
    f8c7:	48 89 c7             	mov    %rax,%rdi
    f8ca:	e8 a1 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    f8cf:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8d6:	48 83 c0 10          	add    $0x10,%rax
    f8da:	48 8d 15 0f b2 00 00 	lea    0xb20f(%rip),%rdx        # 1aaf0 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    f8e1:	48 89 d6             	mov    %rdx,%rsi
    f8e4:	48 89 c7             	mov    %rax,%rdi
    f8e7:	e8 84 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    f8ec:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f8f3:	48 89 c7             	mov    %rax,%rdi
    f8f6:	e8 25 77 ff ff       	call   7020 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    f8fb:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f902:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f906:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f90a:	48 89 c7             	mov    %rax,%rdi
    f90d:	e8 08 d2 ff ff       	call   cb1a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    f912:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    f919:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f91d:	48 89 c7             	mov    %rax,%rdi
    f920:	e8 1b d2 ff ff       	call   cb40 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    f925:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    f92c:	eb 5e                	jmp    f98c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    f92e:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f935:	48 89 c7             	mov    %rax,%rdi
    f938:	e8 8b d2 ff ff       	call   cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f93d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    f941:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f948:	48 83 c0 10          	add    $0x10,%rax
    f94c:	48 8d 15 75 b1 00 00 	lea    0xb175(%rip),%rdx        # 1aac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f953:	48 89 d6             	mov    %rdx,%rsi
    f956:	48 89 c7             	mov    %rax,%rdi
    f959:	e8 12 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f95e:	48 89 c2             	mov    %rax,%rdx
    f961:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f965:	48 89 c6             	mov    %rax,%rsi
    f968:	48 89 d7             	mov    %rdx,%rdi
    f96b:	e8 00 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f970:	be 0a 00 00 00       	mov    $0xa,%esi
    f975:	48 89 c7             	mov    %rax,%rdi
    f978:	e8 03 4b ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    f97d:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f984:	48 89 c7             	mov    %rax,%rdi
    f987:	e8 18 d2 ff ff       	call   cba4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f98c:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    f993:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f99a:	48 89 d6             	mov    %rdx,%rsi
    f99d:	48 89 c7             	mov    %rax,%rdi
    f9a0:	e8 c4 d1 ff ff       	call   cb69 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f9a5:	84 c0                	test   %al,%al
    f9a7:	75 85                	jne    f92e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    f9a9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9b0:	48 83 c0 10          	add    $0x10,%rax
    f9b4:	48 8d 15 46 b1 00 00 	lea    0xb146(%rip),%rdx        # 1ab01 <_ZN6__pstl9execution2v1L5unseqE+0x1d2>
    f9bb:	48 89 d6             	mov    %rdx,%rsi
    f9be:	48 89 c7             	mov    %rax,%rdi
    f9c1:	e8 aa 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    f9c6:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f9cd:	48 83 c0 28          	add    $0x28,%rax
    f9d1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f9d5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f9d9:	48 89 c7             	mov    %rax,%rdi
    f9dc:	e8 67 21 00 00       	call   11b48 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f9e1:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    f9e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f9ec:	48 89 c7             	mov    %rax,%rdi
    f9ef:	e8 7a 21 00 00       	call   11b6e <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f9f4:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    f9fb:	eb 61                	jmp    fa5e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    f9fd:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    fa04:	48 89 c7             	mov    %rax,%rdi
    fa07:	e8 e6 21 00 00       	call   11bf2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fa0c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    fa10:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa17:	48 83 c0 10          	add    $0x10,%rax
    fa1b:	48 8d 15 a6 b0 00 00 	lea    0xb0a6(%rip),%rdx        # 1aac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    fa22:	48 89 d6             	mov    %rdx,%rsi
    fa25:	48 89 c7             	mov    %rax,%rdi
    fa28:	e8 43 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa2d:	48 89 c2             	mov    %rax,%rdx
    fa30:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    fa34:	48 8b 00             	mov    (%rax),%rax
    fa37:	48 89 c6             	mov    %rax,%rsi
    fa3a:	48 89 d7             	mov    %rdx,%rdi
    fa3d:	e8 2e 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa42:	be 0a 00 00 00       	mov    $0xa,%esi
    fa47:	48 89 c7             	mov    %rax,%rdi
    fa4a:	e8 31 4a ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    fa4f:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    fa56:	48 89 c7             	mov    %rax,%rdi
    fa59:	e8 74 21 00 00       	call   11bd2 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    fa5e:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    fa65:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    fa6c:	48 89 d6             	mov    %rdx,%rsi
    fa6f:	48 89 c7             	mov    %rax,%rdi
    fa72:	e8 20 21 00 00       	call   11b97 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    fa77:	84 c0                	test   %al,%al
    fa79:	75 82                	jne    f9fd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    fa7b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa82:	48 83 c0 10          	add    $0x10,%rax
    fa86:	be 0a 00 00 00       	mov    $0xa,%esi
    fa8b:	48 89 c7             	mov    %rax,%rdi
    fa8e:	e8 ed 49 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    fa93:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa9a:	48 83 c0 10          	add    $0x10,%rax
    fa9e:	48 8d 15 6c b0 00 00 	lea    0xb06c(%rip),%rdx        # 1ab11 <_ZN6__pstl9execution2v1L5unseqE+0x1e2>
    faa5:	48 89 d6             	mov    %rdx,%rsi
    faa8:	48 89 c7             	mov    %rax,%rdi
    faab:	e8 c0 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    fab0:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fab7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    fabb:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fac2:	48 89 d6             	mov    %rdx,%rsi
    fac5:	48 89 c7             	mov    %rax,%rdi
    fac8:	e8 ff 75 ff ff       	call   70cc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    facd:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fad4:	48 8b 50 58          	mov    0x58(%rax),%rdx
    fad8:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    fadf:	48 89 d6             	mov    %rdx,%rsi
    fae2:	48 89 c7             	mov    %rax,%rdi
    fae5:	e8 51 77 ff ff       	call   723b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    faea:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    faf1:	00 
  size_t selectedDeviceIndex = 0;
    faf2:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    faf9:	00 
  for (const auto &physDev : physicalDeviceList) {
    fafa:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fb01:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    fb05:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb09:	48 89 c7             	mov    %rax,%rdi
    fb0c:	e8 9d 10 00 00       	call   10bae <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    fb11:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    fb18:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb1c:	48 89 c7             	mov    %rax,%rdi
    fb1f:	e8 b0 10 00 00       	call   10bd4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    fb24:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    fb2b:	e9 c7 06 00 00       	jmp    101f7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    fb30:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fb37:	48 89 c7             	mov    %rax,%rdi
    fb3a:	e8 19 11 00 00       	call   10c58 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    fb3f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    fb43:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fb4a:	48 89 c7             	mov    %rax,%rdi
    fb4d:	e8 ae 4b ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    fb52:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    fb59:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fb60:	48 8d 0d c0 af 00 00 	lea    0xafc0(%rip),%rcx        # 1ab27 <_ZN6__pstl9execution2v1L5unseqE+0x1f8>
    fb67:	48 89 ce             	mov    %rcx,%rsi
    fb6a:	48 89 c7             	mov    %rax,%rdi
    fb6d:	e8 ce 4f ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    fb72:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fb79:	48 89 c7             	mov    %rax,%rdi
    fb7c:	e8 9f 48 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    fb81:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    fb88:	b8 00 00 00 00       	mov    $0x0,%eax
    fb8d:	b9 0e 00 00 00       	mov    $0xe,%ecx
    fb92:	48 89 d7             	mov    %rdx,%rdi
    fb95:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    fb98:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    fb9f:	00 00 00 
    vk11Props.pNext = nullptr;
    fba2:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    fba9:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    fbad:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    fbb4:	b8 00 00 00 00       	mov    $0x0,%eax
    fbb9:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    fbbe:	48 89 d7             	mov    %rdx,%rdi
    fbc1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    fbc4:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    fbcb:	00 00 00 
    vk12Props.pNext = &vk11Props;
    fbce:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    fbd5:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    fbdc:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    fbe3:	b8 00 00 00 00       	mov    $0x0,%eax
    fbe8:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    fbed:	48 89 d7             	mov    %rdx,%rdi
    fbf0:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    fbf3:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    fbfa:	00 00 00 
    vk13Props.pNext = &vk12Props;
    fbfd:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    fc04:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    fc0b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fc0f:	48 8b 08             	mov    (%rax),%rcx
    fc12:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    fc19:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    fc20:	48 89 ce             	mov    %rcx,%rsi
    fc23:	48 89 c7             	mov    %rax,%rdi
    fc26:	e8 3a 76 ff ff       	call   7265 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    fc2b:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    fc31:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    fc37:	39 c2                	cmp    %eax,%edx
    fc39:	75 08                	jne    fc43 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    fc3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc3f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    fc43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fc47:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fc4b:	75 19                	jne    fc66 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    fc4d:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fc54:	48 8d 15 cd ae 00 00 	lea    0xaecd(%rip),%rdx        # 1ab28 <_ZN6__pstl9execution2v1L5unseqE+0x1f9>
    fc5b:	48 89 d6             	mov    %rdx,%rsi
    fc5e:	48 89 c7             	mov    %rax,%rdi
    fc61:	e8 0a 49 ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    fc66:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc6d:	48 83 c0 10          	add    $0x10,%rax
    fc71:	48 8d 15 bc ae 00 00 	lea    0xaebc(%rip),%rdx        # 1ab34 <_ZN6__pstl9execution2v1L5unseqE+0x205>
    fc78:	48 89 d6             	mov    %rdx,%rsi
    fc7b:	48 89 c7             	mov    %rax,%rdi
    fc7e:	e8 ed 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc83:	48 89 c2             	mov    %rax,%rdx
    fc86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc8a:	48 89 c6             	mov    %rax,%rsi
    fc8d:	48 89 d7             	mov    %rdx,%rdi
    fc90:	e8 fb 43 ff ff       	call   4090 <_ZNSolsEm@plt>
    fc95:	48 89 c2             	mov    %rax,%rdx
    fc98:	48 8d 05 99 ae 00 00 	lea    0xae99(%rip),%rax        # 1ab38 <_ZN6__pstl9execution2v1L5unseqE+0x209>
    fc9f:	48 89 c6             	mov    %rax,%rsi
    fca2:	48 89 d7             	mov    %rdx,%rdi
    fca5:	e8 c6 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fcaa:	48 89 c2             	mov    %rax,%rdx
    fcad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcb1:	48 89 c6             	mov    %rax,%rsi
    fcb4:	48 89 d7             	mov    %rdx,%rdi
    fcb7:	e8 d4 43 ff ff       	call   4090 <_ZNSolsEm@plt>
    fcbc:	48 89 c2             	mov    %rax,%rdx
    fcbf:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fcc6:	48 89 c6             	mov    %rax,%rsi
    fcc9:	48 89 d7             	mov    %rdx,%rdi
    fccc:	e8 3f 46 ff ff       	call   4310 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    fcd1:	48 89 c2             	mov    %rax,%rdx
    fcd4:	48 8d 05 66 ae 00 00 	lea    0xae66(%rip),%rax        # 1ab41 <_ZN6__pstl9execution2v1L5unseqE+0x212>
    fcdb:	48 89 c6             	mov    %rax,%rsi
    fcde:	48 89 d7             	mov    %rdx,%rdi
    fce1:	e8 8a 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    fce6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fced:	48 83 c0 10          	add    $0x10,%rax
    fcf1:	48 8d 15 4c ae 00 00 	lea    0xae4c(%rip),%rdx        # 1ab44 <_ZN6__pstl9execution2v1L5unseqE+0x215>
    fcf8:	48 89 d6             	mov    %rdx,%rsi
    fcfb:	48 89 c7             	mov    %rax,%rdi
    fcfe:	e8 6d 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd03:	48 89 c2             	mov    %rax,%rdx
    fd06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd0a:	48 89 c6             	mov    %rax,%rsi
    fd0d:	48 89 d7             	mov    %rdx,%rdi
    fd10:	e8 7b 43 ff ff       	call   4090 <_ZNSolsEm@plt>
    fd15:	48 89 c2             	mov    %rax,%rdx
    fd18:	48 8d 05 2a ae 00 00 	lea    0xae2a(%rip),%rax        # 1ab49 <_ZN6__pstl9execution2v1L5unseqE+0x21a>
    fd1f:	48 89 c6             	mov    %rax,%rsi
    fd22:	48 89 d7             	mov    %rdx,%rdi
    fd25:	e8 46 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    fd2a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd31:	48 83 c0 10          	add    $0x10,%rax
    fd35:	48 8d 15 24 ae 00 00 	lea    0xae24(%rip),%rdx        # 1ab60 <_ZN6__pstl9execution2v1L5unseqE+0x231>
    fd3c:	48 89 d6             	mov    %rdx,%rsi
    fd3f:	48 89 c7             	mov    %rax,%rdi
    fd42:	e8 29 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd47:	48 89 c2             	mov    %rax,%rdx
    fd4a:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    fd50:	89 c6                	mov    %eax,%esi
    fd52:	48 89 d7             	mov    %rdx,%rdi
    fd55:	e8 f6 47 ff ff       	call   4550 <_ZNSolsEj@plt>
    fd5a:	be 0a 00 00 00       	mov    $0xa,%esi
    fd5f:	48 89 c7             	mov    %rax,%rdi
    fd62:	e8 19 47 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    fd67:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd6e:	48 83 c0 10          	add    $0x10,%rax
    fd72:	48 8d 15 f6 ad 00 00 	lea    0xadf6(%rip),%rdx        # 1ab6f <_ZN6__pstl9execution2v1L5unseqE+0x240>
    fd79:	48 89 d6             	mov    %rdx,%rsi
    fd7c:	48 89 c7             	mov    %rax,%rdi
    fd7f:	e8 ec 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd84:	48 89 c2             	mov    %rax,%rdx
    fd87:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    fd8e:	48 83 c0 24          	add    $0x24,%rax
    fd92:	48 89 c6             	mov    %rax,%rsi
    fd95:	48 89 d7             	mov    %rdx,%rdi
    fd98:	e8 d3 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd9d:	be 0a 00 00 00       	mov    $0xa,%esi
    fda2:	48 89 c7             	mov    %rax,%rdi
    fda5:	e8 d6 46 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    fdaa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fdb1:	48 83 c0 10          	add    $0x10,%rax
    fdb5:	48 8d 15 c4 ad 00 00 	lea    0xadc4(%rip),%rdx        # 1ab80 <_ZN6__pstl9execution2v1L5unseqE+0x251>
    fdbc:	48 89 d6             	mov    %rdx,%rsi
    fdbf:	48 89 c7             	mov    %rax,%rdi
    fdc2:	e8 a9 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    fdc7:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    fdcd:	83 f8 04             	cmp    $0x4,%eax
    fdd0:	0f 84 80 00 00 00    	je     fe56 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    fdd6:	83 f8 04             	cmp    $0x4,%eax
    fdd9:	0f 8f 96 00 00 00    	jg     fe75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    fddf:	83 f8 03             	cmp    $0x3,%eax
    fde2:	74 53                	je     fe37 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    fde4:	83 f8 03             	cmp    $0x3,%eax
    fde7:	0f 8f 88 00 00 00    	jg     fe75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    fded:	83 f8 01             	cmp    $0x1,%eax
    fdf0:	74 07                	je     fdf9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    fdf2:	83 f8 02             	cmp    $0x2,%eax
    fdf5:	74 21                	je     fe18 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    fdf7:	eb 7c                	jmp    fe75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    fdf9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe00:	48 83 c0 10          	add    $0x10,%rax
    fe04:	48 8d 15 86 ad 00 00 	lea    0xad86(%rip),%rdx        # 1ab91 <_ZN6__pstl9execution2v1L5unseqE+0x262>
    fe0b:	48 89 d6             	mov    %rdx,%rsi
    fe0e:	48 89 c7             	mov    %rax,%rdi
    fe11:	e8 5a 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fe16:	eb 7b                	jmp    fe93 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    fe18:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe1f:	48 83 c0 10          	add    $0x10,%rax
    fe23:	48 8d 15 77 ad 00 00 	lea    0xad77(%rip),%rdx        # 1aba1 <_ZN6__pstl9execution2v1L5unseqE+0x272>
    fe2a:	48 89 d6             	mov    %rdx,%rsi
    fe2d:	48 89 c7             	mov    %rax,%rdi
    fe30:	e8 3b 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fe35:	eb 5c                	jmp    fe93 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    fe37:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe3e:	48 83 c0 10          	add    $0x10,%rax
    fe42:	48 8d 15 66 ad 00 00 	lea    0xad66(%rip),%rdx        # 1abaf <_ZN6__pstl9execution2v1L5unseqE+0x280>
    fe49:	48 89 d6             	mov    %rdx,%rsi
    fe4c:	48 89 c7             	mov    %rax,%rdi
    fe4f:	e8 1c 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fe54:	eb 3d                	jmp    fe93 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    fe56:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe5d:	48 83 c0 10          	add    $0x10,%rax
    fe61:	48 8d 15 54 ad 00 00 	lea    0xad54(%rip),%rdx        # 1abbc <_ZN6__pstl9execution2v1L5unseqE+0x28d>
    fe68:	48 89 d6             	mov    %rdx,%rsi
    fe6b:	48 89 c7             	mov    %rax,%rdi
    fe6e:	e8 fd 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fe73:	eb 1e                	jmp    fe93 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    fe75:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe7c:	48 83 c0 10          	add    $0x10,%rax
    fe80:	48 8d 15 3a ad 00 00 	lea    0xad3a(%rip),%rdx        # 1abc1 <_ZN6__pstl9execution2v1L5unseqE+0x292>
    fe87:	48 89 d6             	mov    %rdx,%rsi
    fe8a:	48 89 c7             	mov    %rax,%rdi
    fe8d:	e8 de 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fe92:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    fe93:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe9a:	48 83 c0 10          	add    $0x10,%rax
    fe9e:	48 8d 15 23 ad 00 00 	lea    0xad23(%rip),%rdx        # 1abc8 <_ZN6__pstl9execution2v1L5unseqE+0x299>
    fea5:	48 89 d6             	mov    %rdx,%rsi
    fea8:	48 89 c7             	mov    %rax,%rdi
    feab:	e8 c0 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    feb0:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    feb6:	89 d6                	mov    %edx,%esi
    feb8:	48 89 c7             	mov    %rax,%rdi
    febb:	e8 00 48 ff ff       	call   46c0 <_ZNSolsEi@plt>
    fec0:	be 0a 00 00 00       	mov    $0xa,%esi
    fec5:	48 89 c7             	mov    %rax,%rdi
    fec8:	e8 b3 45 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    fecd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fed4:	48 83 c0 10          	add    $0x10,%rax
    fed8:	48 8d 15 f8 ac 00 00 	lea    0xacf8(%rip),%rdx        # 1abd7 <_ZN6__pstl9execution2v1L5unseqE+0x2a8>
    fedf:	48 89 d6             	mov    %rdx,%rsi
    fee2:	48 89 c7             	mov    %rax,%rdi
    fee5:	e8 86 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    feea:	48 89 c2             	mov    %rax,%rdx
    feed:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    fef4:	48 83 c0 14          	add    $0x14,%rax
    fef8:	48 89 c6             	mov    %rax,%rsi
    fefb:	48 89 d7             	mov    %rdx,%rdi
    fefe:	e8 6d 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ff03:	be 0a 00 00 00       	mov    $0xa,%esi
    ff08:	48 89 c7             	mov    %rax,%rdi
    ff0b:	e8 70 45 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    ff10:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff17:	48 83 c0 10          	add    $0x10,%rax
    ff1b:	48 8d 15 c6 ac 00 00 	lea    0xacc6(%rip),%rdx        # 1abe8 <_ZN6__pstl9execution2v1L5unseqE+0x2b9>
    ff22:	48 89 d6             	mov    %rdx,%rsi
    ff25:	48 89 c7             	mov    %rax,%rdi
    ff28:	e8 43 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ff2d:	48 89 c2             	mov    %rax,%rdx
    ff30:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    ff37:	48 05 14 01 00 00    	add    $0x114,%rax
    ff3d:	48 89 c6             	mov    %rax,%rsi
    ff40:	48 89 d7             	mov    %rdx,%rdi
    ff43:	e8 28 44 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ff48:	be 0a 00 00 00       	mov    $0xa,%esi
    ff4d:	48 89 c7             	mov    %rax,%rdi
    ff50:	e8 2b 45 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    ff55:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff5c:	48 83 c0 10          	add    $0x10,%rax
    ff60:	48 8d 15 99 ac 00 00 	lea    0xac99(%rip),%rdx        # 1ac00 <_ZN6__pstl9execution2v1L5unseqE+0x2d1>
    ff67:	48 89 d6             	mov    %rdx,%rsi
    ff6a:	48 89 c7             	mov    %rax,%rdi
    ff6d:	e8 fe 43 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ff72:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    ff75:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    ff7c:	48 89 c6             	mov    %rax,%rsi
    ff7f:	48 89 d7             	mov    %rdx,%rdi
    ff82:	e8 09 41 ff ff       	call   4090 <_ZNSolsEm@plt>
    ff87:	be 0a 00 00 00       	mov    $0xa,%esi
    ff8c:	48 89 c7             	mov    %rax,%rdi
    ff8f:	e8 ec 44 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    ff94:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff9b:	48 83 c0 10          	add    $0x10,%rax
    ff9f:	48 8d 15 9e ab 00 00 	lea    0xab9e(%rip),%rdx        # 1ab44 <_ZN6__pstl9execution2v1L5unseqE+0x215>
    ffa6:	48 89 d6             	mov    %rdx,%rsi
    ffa9:	48 89 c7             	mov    %rax,%rdi
    ffac:	e8 bf 43 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ffb1:	48 89 c2             	mov    %rax,%rdx
    ffb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffb8:	48 89 c6             	mov    %rax,%rsi
    ffbb:	48 89 d7             	mov    %rdx,%rdi
    ffbe:	e8 cd 40 ff ff       	call   4090 <_ZNSolsEm@plt>
    ffc3:	48 89 c2             	mov    %rax,%rdx
    ffc6:	48 8d 05 5b ac 00 00 	lea    0xac5b(%rip),%rax        # 1ac28 <_ZN6__pstl9execution2v1L5unseqE+0x2f9>
    ffcd:	48 89 c6             	mov    %rax,%rsi
    ffd0:	48 89 d7             	mov    %rdx,%rdi
    ffd3:	e8 98 43 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    ffd8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffdc:	48 8b 08             	mov    (%rax),%rcx
    ffdf:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    ffe6:	ba 00 00 00 00       	mov    $0x0,%edx
    ffeb:	48 89 ce             	mov    %rcx,%rsi
    ffee:	48 89 c7             	mov    %rax,%rdi
    fff1:	e8 01 6e ff ff       	call   6df7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    fff6:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fffd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10001:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10005:	48 89 c7             	mov    %rax,%rdi
   10008:	e8 73 0d 00 00       	call   10d80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   1000d:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   10014:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10018:	48 89 c7             	mov    %rax,%rdi
   1001b:	e8 86 0d 00 00       	call   10da6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   10020:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   10027:	eb 5e                	jmp    10087 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   10029:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   10030:	48 89 c7             	mov    %rax,%rdi
   10033:	e8 f6 0d 00 00       	call   10e2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   10038:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   1003c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10043:	48 83 c0 10          	add    $0x10,%rax
   10047:	48 8d 15 fb ab 00 00 	lea    0xabfb(%rip),%rdx        # 1ac49 <_ZN6__pstl9execution2v1L5unseqE+0x31a>
   1004e:	48 89 d6             	mov    %rdx,%rsi
   10051:	48 89 c7             	mov    %rax,%rdi
   10054:	e8 17 43 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10059:	48 89 c2             	mov    %rax,%rdx
   1005c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10060:	48 89 c6             	mov    %rax,%rsi
   10063:	48 89 d7             	mov    %rdx,%rdi
   10066:	e8 05 43 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1006b:	be 0a 00 00 00       	mov    $0xa,%esi
   10070:	48 89 c7             	mov    %rax,%rdi
   10073:	e8 08 44 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   10078:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   1007f:	48 89 c7             	mov    %rax,%rdi
   10082:	e8 83 0d 00 00       	call   10e0a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10087:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   1008e:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   10095:	48 89 d6             	mov    %rdx,%rsi
   10098:	48 89 c7             	mov    %rax,%rdi
   1009b:	e8 2f 0d 00 00       	call   10dcf <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   100a0:	84 c0                	test   %al,%al
   100a2:	75 85                	jne    10029 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   100a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   100a8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   100ac:	0f 85 fb 00 00 00    	jne    101ad <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   100b2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   100b9:	48 83 c0 10          	add    $0x10,%rax
   100bd:	48 8d 15 80 aa 00 00 	lea    0xaa80(%rip),%rdx        # 1ab44 <_ZN6__pstl9execution2v1L5unseqE+0x215>
   100c4:	48 89 d6             	mov    %rdx,%rsi
   100c7:	48 89 c7             	mov    %rax,%rdi
   100ca:	e8 a1 42 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   100cf:	48 89 c2             	mov    %rax,%rdx
   100d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100d6:	48 89 c6             	mov    %rax,%rsi
   100d9:	48 89 d7             	mov    %rdx,%rdi
   100dc:	e8 af 3f ff ff       	call   4090 <_ZNSolsEm@plt>
   100e1:	48 89 c2             	mov    %rax,%rdx
   100e4:	48 8d 05 65 ab 00 00 	lea    0xab65(%rip),%rax        # 1ac50 <_ZN6__pstl9execution2v1L5unseqE+0x321>
   100eb:	48 89 c6             	mov    %rax,%rsi
   100ee:	48 89 d7             	mov    %rdx,%rdi
   100f1:	e8 7a 42 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   100f6:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   100fd:	48 05 88 00 00 00    	add    $0x88,%rax
   10103:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10107:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1010b:	48 89 c7             	mov    %rax,%rdi
   1010e:	e8 cb 07 00 00       	call   108de <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   10113:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   1011a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1011e:	48 89 c7             	mov    %rax,%rdi
   10121:	e8 de 07 00 00       	call   10904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10126:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   1012d:	eb 61                	jmp    10190 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   1012f:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10136:	48 89 c7             	mov    %rax,%rdi
   10139:	e8 4a 08 00 00       	call   10988 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1013e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   10142:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10149:	48 83 c0 10          	add    $0x10,%rax
   1014d:	48 8d 15 f5 aa 00 00 	lea    0xaaf5(%rip),%rdx        # 1ac49 <_ZN6__pstl9execution2v1L5unseqE+0x31a>
   10154:	48 89 d6             	mov    %rdx,%rsi
   10157:	48 89 c7             	mov    %rax,%rdi
   1015a:	e8 11 42 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1015f:	48 89 c2             	mov    %rax,%rdx
   10162:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10166:	48 8b 00             	mov    (%rax),%rax
   10169:	48 89 c6             	mov    %rax,%rsi
   1016c:	48 89 d7             	mov    %rdx,%rdi
   1016f:	e8 fc 41 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10174:	be 0a 00 00 00       	mov    $0xa,%esi
   10179:	48 89 c7             	mov    %rax,%rdi
   1017c:	e8 ff 42 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   10181:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10188:	48 89 c7             	mov    %rax,%rdi
   1018b:	e8 d8 07 00 00       	call   10968 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   10190:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   10197:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   1019e:	48 89 d6             	mov    %rdx,%rsi
   101a1:	48 89 c7             	mov    %rax,%rdi
   101a4:	e8 84 07 00 00       	call   1092d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   101a9:	84 c0                	test   %al,%al
   101ab:	75 82                	jne    1012f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   101ad:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   101b4:	48 83 c0 10          	add    $0x10,%rax
   101b8:	be 0a 00 00 00       	mov    $0xa,%esi
   101bd:	48 89 c7             	mov    %rax,%rdi
   101c0:	e8 bb 42 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   101c5:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   101ca:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   101d1:	48 89 c7             	mov    %rax,%rdi
   101d4:	e8 93 7d ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   101d9:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   101e0:	48 89 c7             	mov    %rax,%rdi
   101e3:	e8 f8 3f ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   101e8:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   101ef:	48 89 c7             	mov    %rax,%rdi
   101f2:	e8 41 0a 00 00       	call   10c38 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   101f7:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   101fe:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   10205:	48 89 d6             	mov    %rdx,%rsi
   10208:	48 89 c7             	mov    %rax,%rdi
   1020b:	e8 ed 09 00 00       	call   10bfd <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10210:	84 c0                	test   %al,%al
   10212:	0f 85 18 f9 ff ff    	jne    fb30 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   10218:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1021f:	48 83 c0 10          	add    $0x10,%rax
   10223:	be 0a 00 00 00       	mov    $0xa,%esi
   10228:	48 89 c7             	mov    %rax,%rdi
   1022b:	e8 50 42 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   10230:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   10237:	48 89 c7             	mov    %rax,%rdi
   1023a:	e8 b7 7f ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   1023f:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10246:	48 89 c7             	mov    %rax,%rdi
   10249:	e8 b0 7b ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   1024e:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10255:	48 89 c7             	mov    %rax,%rdi
   10258:	e8 0f 7d ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   1025d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10264:	48 89 c7             	mov    %rax,%rdi
   10267:	e8 14 3e ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   1026c:	e9 cd 00 00 00       	jmp    1033e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   10271:	49 89 c4             	mov    %rax,%r12
   10274:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   1027b:	48 89 c7             	mov    %rax,%rdi
   1027e:	e8 5d 3f ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10283:	eb 03                	jmp    10288 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   10285:	49 89 c4             	mov    %rax,%r12
   10288:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1028f:	48 89 c7             	mov    %rax,%rdi
   10292:	e8 49 3f ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10297:	eb 03                	jmp    1029c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   10299:	49 89 c4             	mov    %rax,%r12
   1029c:	48 89 df             	mov    %rbx,%rdi
   1029f:	e8 9c 3f ff ff       	call   4240 <__cxa_free_exception@plt>
   102a4:	4c 89 e3             	mov    %r12,%rbx
   102a7:	eb 7b                	jmp    10324 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   102a9:	48 89 c3             	mov    %rax,%rbx
   102ac:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   102b3:	48 89 c7             	mov    %rax,%rdi
   102b6:	e8 65 41 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
   102bb:	eb 2b                	jmp    102e8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   102bd:	48 89 c3             	mov    %rax,%rbx
   102c0:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   102c7:	48 89 c7             	mov    %rax,%rdi
   102ca:	e8 9d 7c ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   102cf:	eb 03                	jmp    102d4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   102d1:	48 89 c3             	mov    %rax,%rbx
   102d4:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   102db:	48 89 c7             	mov    %rax,%rdi
   102de:	e8 fd 3e ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   102e3:	eb 03                	jmp    102e8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   102e5:	48 89 c3             	mov    %rax,%rbx
   102e8:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   102ef:	48 89 c7             	mov    %rax,%rdi
   102f2:	e8 ff 7e ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   102f7:	eb 03                	jmp    102fc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   102f9:	48 89 c3             	mov    %rax,%rbx
   102fc:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10303:	48 89 c7             	mov    %rax,%rdi
   10306:	e8 f3 7a ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   1030b:	eb 03                	jmp    10310 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   1030d:	48 89 c3             	mov    %rax,%rbx
   10310:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10317:	48 89 c7             	mov    %rax,%rdi
   1031a:	e8 4d 7c ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   1031f:	eb 03                	jmp    10324 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   10321:	48 89 c3             	mov    %rax,%rbx
   10324:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1032b:	48 89 c7             	mov    %rax,%rdi
   1032e:	e8 4d 3d ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   10333:	48 89 d8             	mov    %rbx,%rax
   10336:	48 89 c7             	mov    %rax,%rdi
   10339:	e8 b2 43 ff ff       	call   46f0 <_Unwind_Resume@plt>
   1033e:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   10345:	5b                   	pop    %rbx
   10346:	41 5c                	pop    %r12
   10348:	5d                   	pop    %rbp
   10349:	c3                   	ret

000000000001034a <_Z41__static_initialization_and_destruction_0ii>:
   1034a:	55                   	push   %rbp
   1034b:	48 89 e5             	mov    %rsp,%rbp
   1034e:	48 83 ec 10          	sub    $0x10,%rsp
   10352:	89 7d fc             	mov    %edi,-0x4(%rbp)
   10355:	89 75 f8             	mov    %esi,-0x8(%rbp)
   10358:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1035c:	75 3b                	jne    10399 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   1035e:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   10365:	75 32                	jne    10399 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10367:	48 8d 05 c6 82 01 00 	lea    0x182c6(%rip),%rax        # 28634 <_ZStL8__ioinit>
   1036e:	48 89 c7             	mov    %rax,%rdi
   10371:	e8 7a 42 ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
   10376:	48 8d 05 33 80 01 00 	lea    0x18033(%rip),%rax        # 283b0 <__dso_handle>
   1037d:	48 89 c2             	mov    %rax,%rdx
   10380:	48 8d 05 ad 82 01 00 	lea    0x182ad(%rip),%rax        # 28634 <_ZStL8__ioinit>
   10387:	48 89 c6             	mov    %rax,%rsi
   1038a:	48 8b 05 37 7c 01 00 	mov    0x17c37(%rip),%rax        # 27fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   10391:	48 89 c7             	mov    %rax,%rdi
   10394:	e8 67 3f ff ff       	call   4300 <__cxa_atexit@plt>
   10399:	90                   	nop
   1039a:	c9                   	leave
   1039b:	c3                   	ret

000000000001039c <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   1039c:	55                   	push   %rbp
   1039d:	48 89 e5             	mov    %rsp,%rbp
   103a0:	be ff ff 00 00       	mov    $0xffff,%esi
   103a5:	bf 01 00 00 00       	mov    $0x1,%edi
   103aa:	e8 9b ff ff ff       	call   1034a <_Z41__static_initialization_and_destruction_0ii>
   103af:	5d                   	pop    %rbp
   103b0:	c3                   	ret
   103b1:	90                   	nop

00000000000103b2 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   103b2:	55                   	push   %rbp
   103b3:	48 89 e5             	mov    %rsp,%rbp
   103b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103ba:	48 8d 15 4f 79 01 00 	lea    0x1794f(%rip),%rdx        # 27d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   103c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103c5:	48 89 10             	mov    %rdx,(%rax)
   103c8:	90                   	nop
   103c9:	5d                   	pop    %rbp
   103ca:	c3                   	ret

00000000000103cb <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   103cb:	55                   	push   %rbp
   103cc:	48 89 e5             	mov    %rsp,%rbp
   103cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   103d7:	90                   	nop
   103d8:	5d                   	pop    %rbp
   103d9:	c3                   	ret

00000000000103da <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   103da:	55                   	push   %rbp
   103db:	48 89 e5             	mov    %rsp,%rbp
   103de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   103e2:	48 8d 05 2f a5 00 00 	lea    0xa52f(%rip),%rax        # 1a918 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
   103e9:	5d                   	pop    %rbp
   103ea:	c3                   	ret
   103eb:	90                   	nop

00000000000103ec <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   103ec:	55                   	push   %rbp
   103ed:	48 89 e5             	mov    %rsp,%rbp
   103f0:	48 83 ec 10          	sub    $0x10,%rsp
   103f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103fc:	48 89 c7             	mov    %rax,%rdi
   103ff:	e8 ae ff ff ff       	call   103b2 <_ZNSt9exceptionC1Ev>
   10404:	48 8d 15 b5 78 01 00 	lea    0x178b5(%rip),%rdx        # 27cc0 <_ZTVSt19bad_optional_access+0x10>
   1040b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1040f:	48 89 10             	mov    %rdx,(%rax)
   10412:	90                   	nop
   10413:	c9                   	leave
   10414:	c3                   	ret

0000000000010415 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   10415:	55                   	push   %rbp
   10416:	48 89 e5             	mov    %rsp,%rbp
   10419:	53                   	push   %rbx
   1041a:	48 83 ec 08          	sub    $0x8,%rsp
   1041e:	bf 08 00 00 00       	mov    $0x8,%edi
   10423:	e8 48 3d ff ff       	call   4170 <__cxa_allocate_exception@plt>
   10428:	48 89 c3             	mov    %rax,%rbx
   1042b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10432:	48 89 df             	mov    %rbx,%rdi
   10435:	e8 b2 ff ff ff       	call   103ec <_ZNSt19bad_optional_accessC1Ev>
   1043a:	48 8d 05 f9 64 00 00 	lea    0x64f9(%rip),%rax        # 1693a <_ZNSt19bad_optional_accessD1Ev>
   10441:	48 89 c2             	mov    %rax,%rdx
   10444:	48 8d 05 0d 79 01 00 	lea    0x1790d(%rip),%rax        # 27d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1044b:	48 89 c6             	mov    %rax,%rsi
   1044e:	48 89 df             	mov    %rbx,%rdi
   10451:	e8 3a 42 ff ff       	call   4690 <__cxa_throw@plt>

0000000000010456 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
   10456:	55                   	push   %rbp
   10457:	48 89 e5             	mov    %rsp,%rbp
   1045a:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
   1045e:	e8 3a 00 00 00       	call   1049d <_ZNSt6chrono15duration_valuesIlE4zeroEv>
   10463:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10467:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1046b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1046f:	48 89 d6             	mov    %rdx,%rsi
   10472:	48 89 c7             	mov    %rax,%rdi
   10475:	e8 06 00 00 00       	call   10480 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1047a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1047e:	c9                   	leave
   1047f:	c3                   	ret

0000000000010480 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   10480:	55                   	push   %rbp
   10481:	48 89 e5             	mov    %rsp,%rbp
   10484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10488:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   1048c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10490:	48 8b 10             	mov    (%rax),%rdx
   10493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10497:	48 89 10             	mov    %rdx,(%rax)
   1049a:	90                   	nop
   1049b:	5d                   	pop    %rbp
   1049c:	c3                   	ret

000000000001049d <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
   1049d:	55                   	push   %rbp
   1049e:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
   104a1:	b8 00 00 00 00       	mov    $0x0,%eax
   104a6:	5d                   	pop    %rbp
   104a7:	c3                   	ret

00000000000104a8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
   104a8:	55                   	push   %rbp
   104a9:	48 89 e5             	mov    %rsp,%rbp
   104ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   104b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104b4:	48 8b 00             	mov    (%rax),%rax
   104b7:	5d                   	pop    %rbp
   104b8:	c3                   	ret
   104b9:	90                   	nop

00000000000104ba <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   104ba:	55                   	push   %rbp
   104bb:	48 89 e5             	mov    %rsp,%rbp
   104be:	48 83 ec 10          	sub    $0x10,%rsp
   104c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   104c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104ca:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   104d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104d4:	48 89 c7             	mov    %rax,%rdi
   104d7:	e8 04 00 00 00       	call   104e0 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   104dc:	90                   	nop
   104dd:	c9                   	leave
   104de:	c3                   	ret
   104df:	90                   	nop

00000000000104e0 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   104e0:	55                   	push   %rbp
   104e1:	48 89 e5             	mov    %rsp,%rbp
   104e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   104e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104ec:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   104f3:	00 
      _M_header._M_left = &_M_header;
   104f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   104f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104fc:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   10500:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10508:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   1050c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10510:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   10517:	00 
    }
   10518:	90                   	nop
   10519:	5d                   	pop    %rbp
   1051a:	c3                   	ret
   1051b:	90                   	nop

000000000001051c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   1051c:	55                   	push   %rbp
   1051d:	48 89 e5             	mov    %rsp,%rbp
   10520:	48 83 ec 10          	sub    $0x10,%rsp
   10524:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1052c:	48 89 c7             	mov    %rax,%rdi
   1052f:	e8 60 00 00 00       	call   10594 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   10534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10538:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   1053c:	90                   	nop
   1053d:	c9                   	leave
   1053e:	c3                   	ret
   1053f:	90                   	nop

0000000000010540 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   10540:	55                   	push   %rbp
   10541:	48 89 e5             	mov    %rsp,%rbp
   10544:	48 83 ec 10          	sub    $0x10,%rsp
   10548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1054c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10550:	48 89 c7             	mov    %rax,%rdi
   10553:	e8 c4 ff ff ff       	call   1051c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   10558:	90                   	nop
   10559:	c9                   	leave
   1055a:	c3                   	ret
   1055b:	90                   	nop

000000000001055c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   1055c:	55                   	push   %rbp
   1055d:	48 89 e5             	mov    %rsp,%rbp
   10560:	48 83 ec 10          	sub    $0x10,%rsp
   10564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1056c:	48 89 c7             	mov    %rax,%rdi
   1056f:	e8 cc ff ff ff       	call   10540 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   10574:	90                   	nop
   10575:	c9                   	leave
   10576:	c3                   	ret
   10577:	90                   	nop

0000000000010578 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   10578:	55                   	push   %rbp
   10579:	48 89 e5             	mov    %rsp,%rbp
   1057c:	48 83 ec 10          	sub    $0x10,%rsp
   10580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10588:	48 89 c7             	mov    %rax,%rdi
   1058b:	e8 cc ff ff ff       	call   1055c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   10590:	90                   	nop
   10591:	c9                   	leave
   10592:	c3                   	ret
   10593:	90                   	nop

0000000000010594 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   10594:	55                   	push   %rbp
   10595:	48 89 e5             	mov    %rsp,%rbp
   10598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1059c:	90                   	nop
   1059d:	5d                   	pop    %rbp
   1059e:	c3                   	ret
   1059f:	90                   	nop

00000000000105a0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   105a0:	55                   	push   %rbp
   105a1:	48 89 e5             	mov    %rsp,%rbp
   105a4:	48 83 ec 10          	sub    $0x10,%rsp
   105a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   105b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   105b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105b8:	48 89 d6             	mov    %rdx,%rsi
   105bb:	48 89 c7             	mov    %rax,%rdi
   105be:	e8 c1 06 00 00       	call   10c84 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   105c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105c7:	c9                   	leave
   105c8:	c3                   	ret
   105c9:	90                   	nop

00000000000105ca <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   105ca:	55                   	push   %rbp
   105cb:	48 89 e5             	mov    %rsp,%rbp
   105ce:	48 83 ec 10          	sub    $0x10,%rsp
   105d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   105da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   105e2:	48 89 d6             	mov    %rdx,%rsi
   105e5:	48 89 c7             	mov    %rax,%rdi
   105e8:	e8 b3 ff ff ff       	call   105a0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   105ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105f1:	c9                   	leave
   105f2:	c3                   	ret
   105f3:	90                   	nop

00000000000105f4 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   105f4:	55                   	push   %rbp
   105f5:	48 89 e5             	mov    %rsp,%rbp
   105f8:	48 83 ec 10          	sub    $0x10,%rsp
   105fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   10600:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10604:	48 89 c7             	mov    %rax,%rdi
   10607:	e8 1a 00 00 00       	call   10626 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1060c:	84 c0                	test   %al,%al
   1060e:	74 0e                	je     1061e <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   10610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10614:	48 89 c7             	mov    %rax,%rdi
   10617:	e8 92 06 00 00       	call   10cae <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   1061c:	eb 05                	jmp    10623 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   1061e:	e8 f2 fd ff ff       	call   10415 <_ZSt27__throw_bad_optional_accessv>
      }
   10623:	c9                   	leave
   10624:	c3                   	ret
   10625:	90                   	nop

0000000000010626 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   10626:	55                   	push   %rbp
   10627:	48 89 e5             	mov    %rsp,%rbp
   1062a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   1062e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10632:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   10636:	5d                   	pop    %rbp
   10637:	c3                   	ret

0000000000010638 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   10638:	55                   	push   %rbp
   10639:	48 89 e5             	mov    %rsp,%rbp
   1063c:	48 83 ec 10          	sub    $0x10,%rsp
   10640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10648:	48 89 c7             	mov    %rax,%rdi
   1064b:	e8 da 06 00 00       	call   10d2a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   10650:	90                   	nop
   10651:	c9                   	leave
   10652:	c3                   	ret
   10653:	90                   	nop

0000000000010654 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   10654:	55                   	push   %rbp
   10655:	48 89 e5             	mov    %rsp,%rbp
   10658:	48 83 ec 10          	sub    $0x10,%rsp
   1065c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10664:	48 89 c7             	mov    %rax,%rdi
   10667:	e8 86 06 00 00       	call   10cf2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   1066c:	90                   	nop
   1066d:	c9                   	leave
   1066e:	c3                   	ret
   1066f:	90                   	nop

0000000000010670 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   10670:	55                   	push   %rbp
   10671:	48 89 e5             	mov    %rsp,%rbp
   10674:	48 83 ec 10          	sub    $0x10,%rsp
   10678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1067c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10680:	48 89 c7             	mov    %rax,%rdi
   10683:	e8 cc ff ff ff       	call   10654 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   10688:	90                   	nop
   10689:	c9                   	leave
   1068a:	c3                   	ret
   1068b:	90                   	nop

000000000001068c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   1068c:	55                   	push   %rbp
   1068d:	48 89 e5             	mov    %rsp,%rbp
   10690:	48 83 ec 10          	sub    $0x10,%rsp
   10694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1069c:	48 89 c7             	mov    %rax,%rdi
   1069f:	e8 a2 06 00 00       	call   10d46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   106a4:	90                   	nop
   106a5:	c9                   	leave
   106a6:	c3                   	ret
   106a7:	90                   	nop

00000000000106a8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   106a8:	55                   	push   %rbp
   106a9:	48 89 e5             	mov    %rsp,%rbp
   106ac:	48 83 ec 10          	sub    $0x10,%rsp
   106b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106b8:	48 89 c7             	mov    %rax,%rdi
   106bb:	e8 f6 0e 00 00       	call   115b6 <_ZNSaIP13VkImageView_TED1Ev>
   106c0:	90                   	nop
   106c1:	c9                   	leave
   106c2:	c3                   	ret
   106c3:	90                   	nop

00000000000106c4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   106c4:	55                   	push   %rbp
   106c5:	48 89 e5             	mov    %rsp,%rbp
   106c8:	48 83 ec 10          	sub    $0x10,%rsp
   106cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d4:	48 89 c7             	mov    %rax,%rdi
   106d7:	e8 06 10 00 00       	call   116e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   106dc:	90                   	nop
   106dd:	c9                   	leave
   106de:	c3                   	ret
   106df:	90                   	nop

00000000000106e0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   106e0:	55                   	push   %rbp
   106e1:	48 89 e5             	mov    %rsp,%rbp
   106e4:	48 83 ec 10          	sub    $0x10,%rsp
   106e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106f0:	48 89 c7             	mov    %rax,%rdi
   106f3:	e8 cc ff ff ff       	call   106c4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   106f8:	90                   	nop
   106f9:	c9                   	leave
   106fa:	c3                   	ret
   106fb:	90                   	nop

00000000000106fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   106fc:	55                   	push   %rbp
   106fd:	48 89 e5             	mov    %rsp,%rbp
   10700:	48 83 ec 10          	sub    $0x10,%rsp
   10704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1070c:	48 89 c7             	mov    %rax,%rdi
   1070f:	e8 44 10 00 00       	call   11758 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   10714:	90                   	nop
   10715:	c9                   	leave
   10716:	c3                   	ret
   10717:	90                   	nop

0000000000010718 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   10718:	55                   	push   %rbp
   10719:	48 89 e5             	mov    %rsp,%rbp
   1071c:	48 83 ec 10          	sub    $0x10,%rsp
   10720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10728:	48 89 c7             	mov    %rax,%rdi
   1072b:	e8 cc ff ff ff       	call   106fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   10730:	90                   	nop
   10731:	c9                   	leave
   10732:	c3                   	ret
   10733:	90                   	nop

0000000000010734 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   10734:	55                   	push   %rbp
   10735:	48 89 e5             	mov    %rsp,%rbp
   10738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1073c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10740:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1074b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10752:	00 
   10753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10757:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1075e:	00 
   1075f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10763:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1076a:	00 
   1076b:	90                   	nop
   1076c:	5d                   	pop    %rbp
   1076d:	c3                   	ret

000000000001076e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1076e:	55                   	push   %rbp
   1076f:	48 89 e5             	mov    %rsp,%rbp
   10772:	48 83 ec 10          	sub    $0x10,%rsp
   10776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1077a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1077e:	48 89 c7             	mov    %rax,%rdi
   10781:	e8 22 10 00 00       	call   117a8 <_ZNSaIP15VkFramebuffer_TED1Ev>
   10786:	90                   	nop
   10787:	c9                   	leave
   10788:	c3                   	ret
   10789:	90                   	nop

000000000001078a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1078a:	55                   	push   %rbp
   1078b:	48 89 e5             	mov    %rsp,%rbp
   1078e:	48 83 ec 10          	sub    $0x10,%rsp
   10792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1079a:	48 89 c7             	mov    %rax,%rdi
   1079d:	e8 de 0f 00 00       	call   11780 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   107a2:	90                   	nop
   107a3:	c9                   	leave
   107a4:	c3                   	ret
   107a5:	90                   	nop

00000000000107a6 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   107a6:	55                   	push   %rbp
   107a7:	48 89 e5             	mov    %rsp,%rbp
   107aa:	48 83 ec 10          	sub    $0x10,%rsp
   107ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107b6:	48 89 c7             	mov    %rax,%rdi
   107b9:	e8 cc ff ff ff       	call   1078a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   107be:	90                   	nop
   107bf:	c9                   	leave
   107c0:	c3                   	ret
   107c1:	90                   	nop

00000000000107c2 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
   107c2:	55                   	push   %rbp
   107c3:	48 89 e5             	mov    %rsp,%rbp
   107c6:	53                   	push   %rbx
   107c7:	48 83 ec 38          	sub    $0x38,%rsp
   107cb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
   107cf:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   107d3:	e8 58 3d ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   107d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   107dc:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   107e0:	48 89 de             	mov    %rbx,%rsi
   107e3:	48 89 c7             	mov    %rax,%rdi
   107e6:	e8 81 12 00 00       	call   11a6c <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   107eb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
   107ef:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   107f3:	48 89 c7             	mov    %rax,%rdi
   107f6:	e8 b6 12 00 00       	call   11ab1 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   107fb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
   107ff:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10803:	48 89 c7             	mov    %rax,%rdi
   10806:	e8 c1 12 00 00       	call   11acc <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
   1080b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1080f:	c9                   	leave
   10810:	c3                   	ret
   10811:	90                   	nop

0000000000010812 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   10812:	55                   	push   %rbp
   10813:	48 89 e5             	mov    %rsp,%rbp
   10816:	53                   	push   %rbx
   10817:	48 83 ec 38          	sub    $0x38,%rsp
   1081b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1081f:	48 89 f0             	mov    %rsi,%rax
   10822:	48 89 d6             	mov    %rdx,%rsi
   10825:	48 89 f2             	mov    %rsi,%rdx
   10828:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1082c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10830:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10834:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10838:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1083c:	48 89 d6             	mov    %rdx,%rsi
   1083f:	48 89 c7             	mov    %rax,%rdi
   10842:	e8 cb 13 00 00       	call   11c12 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   10847:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1084b:	48 89 c7             	mov    %rax,%rdi
   1084e:	e8 f7 13 00 00       	call   11c4a <_ZNKSt16initializer_listIPKcE3endEv>
   10853:	48 89 c3             	mov    %rax,%rbx
   10856:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1085a:	48 89 c7             	mov    %rax,%rdi
   1085d:	e8 d6 13 00 00       	call   11c38 <_ZNKSt16initializer_listIPKcE5beginEv>
   10862:	48 89 c1             	mov    %rax,%rcx
   10865:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10869:	48 89 da             	mov    %rbx,%rdx
   1086c:	48 89 ce             	mov    %rcx,%rsi
   1086f:	48 89 c7             	mov    %rax,%rdi
   10872:	e8 39 14 00 00       	call   11cb0 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   10877:	eb 1a                	jmp    10893 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   10879:	48 89 c3             	mov    %rax,%rbx
   1087c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10880:	48 89 c7             	mov    %rax,%rdi
   10883:	e8 72 78 ff ff       	call   80fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10888:	48 89 d8             	mov    %rbx,%rax
   1088b:	48 89 c7             	mov    %rax,%rdi
   1088e:	e8 5d 3e ff ff       	call   46f0 <_Unwind_Resume@plt>
   10893:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10897:	c9                   	leave
   10898:	c3                   	ret
   10899:	90                   	nop

000000000001089a <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1089a:	55                   	push   %rbp
   1089b:	48 89 e5             	mov    %rsp,%rbp
   1089e:	48 83 ec 10          	sub    $0x10,%rsp
   108a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   108a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108aa:	48 89 c7             	mov    %rax,%rdi
   108ad:	e8 00 87 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   108b2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   108b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108b9:	48 8b 48 08          	mov    0x8(%rax),%rcx
   108bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108c1:	48 8b 00             	mov    (%rax),%rax
   108c4:	48 89 ce             	mov    %rcx,%rsi
   108c7:	48 89 c7             	mov    %rax,%rdi
   108ca:	e8 90 14 00 00       	call   11d5f <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   108cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108d3:	48 89 c7             	mov    %rax,%rdi
   108d6:	e8 1f 78 ff ff       	call   80fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   108db:	90                   	nop
   108dc:	c9                   	leave
   108dd:	c3                   	ret

00000000000108de <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   108de:	55                   	push   %rbp
   108df:	48 89 e5             	mov    %rsp,%rbp
   108e2:	48 83 ec 20          	sub    $0x20,%rsp
   108e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   108ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   108ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   108f2:	48 89 d6             	mov    %rdx,%rsi
   108f5:	48 89 c7             	mov    %rax,%rdi
   108f8:	e8 8d 14 00 00       	call   11d8a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   108fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10901:	c9                   	leave
   10902:	c3                   	ret
   10903:	90                   	nop

0000000000010904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10904:	55                   	push   %rbp
   10905:	48 89 e5             	mov    %rsp,%rbp
   10908:	48 83 ec 20          	sub    $0x20,%rsp
   1090c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10914:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10918:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1091c:	48 89 d6             	mov    %rdx,%rsi
   1091f:	48 89 c7             	mov    %rax,%rdi
   10922:	e8 63 14 00 00       	call   11d8a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1092b:	c9                   	leave
   1092c:	c3                   	ret

000000000001092d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1092d:	55                   	push   %rbp
   1092e:	48 89 e5             	mov    %rsp,%rbp
   10931:	53                   	push   %rbx
   10932:	48 83 ec 18          	sub    $0x18,%rsp
   10936:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1093a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1093e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10942:	48 89 c7             	mov    %rax,%rdi
   10945:	e8 5e 14 00 00       	call   11da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1094a:	48 8b 18             	mov    (%rax),%rbx
   1094d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10951:	48 89 c7             	mov    %rax,%rdi
   10954:	e8 4f 14 00 00       	call   11da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10959:	48 8b 00             	mov    (%rax),%rax
   1095c:	48 39 c3             	cmp    %rax,%rbx
   1095f:	0f 95 c0             	setne  %al
   10962:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10966:	c9                   	leave
   10967:	c3                   	ret

0000000000010968 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10968:	55                   	push   %rbp
   10969:	48 89 e5             	mov    %rsp,%rbp
   1096c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10974:	48 8b 00             	mov    (%rax),%rax
   10977:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1097b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1097f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10986:	5d                   	pop    %rbp
   10987:	c3                   	ret

0000000000010988 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10988:	55                   	push   %rbp
   10989:	48 89 e5             	mov    %rsp,%rbp
   1098c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10994:	48 8b 00             	mov    (%rax),%rax
   10997:	5d                   	pop    %rbp
   10998:	c3                   	ret
   10999:	90                   	nop

000000000001099a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   1099a:	55                   	push   %rbp
   1099b:	48 89 e5             	mov    %rsp,%rbp
   1099e:	53                   	push   %rbx
   1099f:	48 83 ec 18          	sub    $0x18,%rsp
   109a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   109a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   109ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109af:	48 8b 50 08          	mov    0x8(%rax),%rdx
   109b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109b7:	48 8b 40 10          	mov    0x10(%rax),%rax
   109bb:	48 39 c2             	cmp    %rax,%rdx
   109be:	74 3c                	je     109fc <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   109c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109c4:	48 89 c7             	mov    %rax,%rdi
   109c7:	e8 ea 13 00 00       	call   11db6 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   109cc:	48 89 c2             	mov    %rax,%rdx
   109cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   109d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109db:	48 89 ce             	mov    %rcx,%rsi
   109de:	48 89 c7             	mov    %rax,%rdi
   109e1:	e8 de 13 00 00       	call   11dc4 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   109e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109ea:	48 8b 40 08          	mov    0x8(%rax),%rax
   109ee:	48 8d 50 08          	lea    0x8(%rax),%rdx
   109f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   109fa:	eb 30                	jmp    10a2c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   109fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a00:	48 89 c7             	mov    %rax,%rdi
   10a03:	e8 ae 13 00 00       	call   11db6 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   10a08:	48 89 c3             	mov    %rax,%rbx
   10a0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a0f:	48 89 c7             	mov    %rax,%rdi
   10a12:	e8 ed fe ff ff       	call   10904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10a17:	48 89 c1             	mov    %rax,%rcx
   10a1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a1e:	48 89 da             	mov    %rbx,%rdx
   10a21:	48 89 ce             	mov    %rcx,%rsi
   10a24:	48 89 c7             	mov    %rax,%rdi
   10a27:	e8 d2 13 00 00       	call   11dfe <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   10a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a30:	48 89 c7             	mov    %rax,%rdi
   10a33:	e8 58 15 00 00       	call   11f90 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   10a38:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10a3c:	c9                   	leave
   10a3d:	c3                   	ret

0000000000010a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10a3e:	55                   	push   %rbp
   10a3f:	48 89 e5             	mov    %rsp,%rbp
   10a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a4a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a52:	48 8b 00             	mov    (%rax),%rax
   10a55:	48 29 c2             	sub    %rax,%rdx
   10a58:	48 89 d0             	mov    %rdx,%rax
   10a5b:	48 c1 f8 03          	sar    $0x3,%rax
   10a5f:	5d                   	pop    %rbp
   10a60:	c3                   	ret
   10a61:	90                   	nop

0000000000010a62 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   10a62:	55                   	push   %rbp
   10a63:	48 89 e5             	mov    %rsp,%rbp
   10a66:	48 83 ec 10          	sub    $0x10,%rsp
   10a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a72:	48 8b 10             	mov    (%rax),%rdx
   10a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a79:	48 89 d6             	mov    %rdx,%rsi
   10a7c:	48 89 c7             	mov    %rax,%rdi
   10a7f:	e8 4c 15 00 00       	call   11fd0 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10a84:	c9                   	leave
   10a85:	c3                   	ret

0000000000010a86 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10a86:	55                   	push   %rbp
   10a87:	48 89 e5             	mov    %rsp,%rbp
   10a8a:	48 83 ec 10          	sub    $0x10,%rsp
   10a8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a96:	48 8b 10             	mov    (%rax),%rdx
   10a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a9d:	48 89 d6             	mov    %rdx,%rsi
   10aa0:	48 89 c7             	mov    %rax,%rdi
   10aa3:	e8 28 15 00 00       	call   11fd0 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10aa8:	c9                   	leave
   10aa9:	c3                   	ret

0000000000010aaa <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10aaa:	55                   	push   %rbp
   10aab:	48 89 e5             	mov    %rsp,%rbp
   10aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ab6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10abe:	48 8b 00             	mov    (%rax),%rax
   10ac1:	48 29 c2             	sub    %rax,%rdx
   10ac4:	48 c1 fa 02          	sar    $0x2,%rdx
   10ac8:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   10acf:	db b6 6d 
   10ad2:	48 0f af c2          	imul   %rdx,%rax
   10ad6:	5d                   	pop    %rbp
   10ad7:	c3                   	ret

0000000000010ad8 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   10ad8:	55                   	push   %rbp
   10ad9:	48 89 e5             	mov    %rsp,%rbp
   10adc:	48 83 ec 10          	sub    $0x10,%rsp
   10ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ae8:	48 89 c7             	mov    %rax,%rdi
   10aeb:	e8 1e 8a ff ff       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10af0:	c9                   	leave
   10af1:	c3                   	ret

0000000000010af2 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   10af2:	55                   	push   %rbp
   10af3:	48 89 e5             	mov    %rsp,%rbp
   10af6:	48 83 ec 10          	sub    $0x10,%rsp
   10afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   10afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b02:	48 89 c7             	mov    %rax,%rdi
   10b05:	e8 04 8a ff ff       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10b0a:	84 c0                	test   %al,%al
   10b0c:	74 0e                	je     10b1c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   10b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b12:	48 89 c7             	mov    %rax,%rdi
   10b15:	e8 06 8a ff ff       	call   9520 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   10b1a:	eb 05                	jmp    10b21 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   10b1c:	e8 f4 f8 ff ff       	call   10415 <_ZSt27__throw_bad_optional_accessv>
      }
   10b21:	c9                   	leave
   10b22:	c3                   	ret
   10b23:	90                   	nop

0000000000010b24 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   10b24:	55                   	push   %rbp
   10b25:	48 89 e5             	mov    %rsp,%rbp
   10b28:	48 83 ec 20          	sub    $0x20,%rsp
   10b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10b34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   10b38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b3c:	48 89 c7             	mov    %rax,%rdi
   10b3f:	e8 9e 14 00 00       	call   11fe2 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   10b44:	8b 10                	mov    (%rax),%edx
   10b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b4a:	89 10                	mov    %edx,(%rax)
   10b4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b50:	48 89 c7             	mov    %rax,%rdi
   10b53:	e8 98 14 00 00       	call   11ff0 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   10b58:	48 89 c1             	mov    %rax,%rcx
   10b5b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   10b5f:	48 8b 01             	mov    (%rcx),%rax
   10b62:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   10b66:	48 89 46 04          	mov    %rax,0x4(%rsi)
   10b6a:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   10b6e:	48 8b 41 10          	mov    0x10(%rcx),%rax
   10b72:	48 89 46 14          	mov    %rax,0x14(%rsi)
   10b76:	90                   	nop
   10b77:	c9                   	leave
   10b78:	c3                   	ret
   10b79:	90                   	nop

0000000000010b7a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   10b7a:	55                   	push   %rbp
   10b7b:	48 89 e5             	mov    %rsp,%rbp
   10b7e:	53                   	push   %rbx
   10b7f:	48 83 ec 18          	sub    $0x18,%rsp
   10b83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   10b8b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10b8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b93:	48 89 c7             	mov    %rax,%rdi
   10b96:	e8 63 14 00 00       	call   11ffe <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   10b9b:	48 89 c6             	mov    %rax,%rsi
   10b9e:	48 89 df             	mov    %rbx,%rdi
   10ba1:	e8 8c 14 00 00       	call   12032 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   10ba6:	90                   	nop
   10ba7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10bab:	c9                   	leave
   10bac:	c3                   	ret
   10bad:	90                   	nop

0000000000010bae <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10bae:	55                   	push   %rbp
   10baf:	48 89 e5             	mov    %rsp,%rbp
   10bb2:	48 83 ec 20          	sub    $0x20,%rsp
   10bb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10bba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10bbe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10bc2:	48 89 d6             	mov    %rdx,%rsi
   10bc5:	48 89 c7             	mov    %rax,%rdi
   10bc8:	e8 99 14 00 00       	call   12066 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bd1:	c9                   	leave
   10bd2:	c3                   	ret
   10bd3:	90                   	nop

0000000000010bd4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10bd4:	55                   	push   %rbp
   10bd5:	48 89 e5             	mov    %rsp,%rbp
   10bd8:	48 83 ec 20          	sub    $0x20,%rsp
   10bdc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10be0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10be4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10be8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10bec:	48 89 d6             	mov    %rdx,%rsi
   10bef:	48 89 c7             	mov    %rax,%rdi
   10bf2:	e8 6f 14 00 00       	call   12066 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bfb:	c9                   	leave
   10bfc:	c3                   	ret

0000000000010bfd <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10bfd:	55                   	push   %rbp
   10bfe:	48 89 e5             	mov    %rsp,%rbp
   10c01:	53                   	push   %rbx
   10c02:	48 83 ec 18          	sub    $0x18,%rsp
   10c06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10c0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c12:	48 89 c7             	mov    %rax,%rdi
   10c15:	e8 6a 14 00 00       	call   12084 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10c1a:	48 8b 18             	mov    (%rax),%rbx
   10c1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c21:	48 89 c7             	mov    %rax,%rdi
   10c24:	e8 5b 14 00 00       	call   12084 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10c29:	48 8b 00             	mov    (%rax),%rax
   10c2c:	48 39 c3             	cmp    %rax,%rbx
   10c2f:	0f 95 c0             	setne  %al
   10c32:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10c36:	c9                   	leave
   10c37:	c3                   	ret

0000000000010c38 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10c38:	55                   	push   %rbp
   10c39:	48 89 e5             	mov    %rsp,%rbp
   10c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c44:	48 8b 00             	mov    (%rax),%rax
   10c47:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c4f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10c56:	5d                   	pop    %rbp
   10c57:	c3                   	ret

0000000000010c58 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10c58:	55                   	push   %rbp
   10c59:	48 89 e5             	mov    %rsp,%rbp
   10c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c64:	48 8b 00             	mov    (%rax),%rax
   10c67:	5d                   	pop    %rbp
   10c68:	c3                   	ret
   10c69:	90                   	nop

0000000000010c6a <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   10c6a:	55                   	push   %rbp
   10c6b:	48 89 e5             	mov    %rsp,%rbp
   10c6e:	48 83 ec 10          	sub    $0x10,%rsp
   10c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c7a:	48 89 c7             	mov    %rax,%rdi
   10c7d:	e8 a4 f9 ff ff       	call   10626 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10c82:	c9                   	leave
   10c83:	c3                   	ret

0000000000010c84 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   10c84:	55                   	push   %rbp
   10c85:	48 89 e5             	mov    %rsp,%rbp
   10c88:	48 83 ec 10          	sub    $0x10,%rsp
   10c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   10c94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10c9c:	48 89 d6             	mov    %rdx,%rsi
   10c9f:	48 89 c7             	mov    %rax,%rdi
   10ca2:	e8 eb 13 00 00       	call   12092 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   10ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10cab:	c9                   	leave
   10cac:	c3                   	ret
   10cad:	90                   	nop

0000000000010cae <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   10cae:	55                   	push   %rbp
   10caf:	48 89 e5             	mov    %rsp,%rbp
   10cb2:	48 83 ec 10          	sub    $0x10,%rsp
   10cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   10cba:	e8 bf 3d ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
   10cbf:	84 c0                	test   %al,%al
   10cc1:	74 1a                	je     10cdd <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cc7:	48 89 c7             	mov    %rax,%rdi
   10cca:	e8 57 f9 ff ff       	call   10626 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10ccf:	83 f0 01             	xor    $0x1,%eax
   10cd2:	84 c0                	test   %al,%al
   10cd4:	74 07                	je     10cdd <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10cd6:	b8 01 00 00 00       	mov    $0x1,%eax
   10cdb:	eb 05                	jmp    10ce2 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   10cdd:	b8 00 00 00 00       	mov    $0x0,%eax
   10ce2:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   10ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ce8:	48 89 c7             	mov    %rax,%rdi
   10ceb:	e8 34 14 00 00       	call   12124 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   10cf0:	c9                   	leave
   10cf1:	c3                   	ret

0000000000010cf2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   10cf2:	55                   	push   %rbp
   10cf3:	48 89 e5             	mov    %rsp,%rbp
   10cf6:	48 83 ec 10          	sub    $0x10,%rsp
   10cfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   10cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d02:	48 89 c7             	mov    %rax,%rdi
   10d05:	e8 28 14 00 00       	call   12132 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   10d0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d0e:	48 89 c7             	mov    %rax,%rdi
   10d11:	e8 38 14 00 00       	call   1214e <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   10d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d1a:	48 83 c0 08          	add    $0x8,%rax
   10d1e:	48 89 c7             	mov    %rax,%rdi
   10d21:	e8 94 f7 ff ff       	call   104ba <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   10d26:	90                   	nop
   10d27:	c9                   	leave
   10d28:	c3                   	ret
   10d29:	90                   	nop

0000000000010d2a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10d2a:	55                   	push   %rbp
   10d2b:	48 89 e5             	mov    %rsp,%rbp
   10d2e:	48 83 ec 10          	sub    $0x10,%rsp
   10d32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d3a:	48 89 c7             	mov    %rax,%rdi
   10d3d:	e8 18 14 00 00       	call   1215a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   10d42:	90                   	nop
   10d43:	c9                   	leave
   10d44:	c3                   	ret
   10d45:	90                   	nop

0000000000010d46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   10d46:	55                   	push   %rbp
   10d47:	48 89 e5             	mov    %rsp,%rbp
   10d4a:	48 83 ec 10          	sub    $0x10,%rsp
   10d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   10d52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d56:	48 89 c7             	mov    %rax,%rdi
   10d59:	e8 6e 14 00 00       	call   121cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   10d5e:	48 89 c2             	mov    %rax,%rdx
   10d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d65:	48 89 d6             	mov    %rdx,%rsi
   10d68:	48 89 c7             	mov    %rax,%rdi
   10d6b:	e8 f6 13 00 00       	call   12166 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   10d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d74:	48 89 c7             	mov    %rax,%rdi
   10d77:	e8 bc f8 ff ff       	call   10638 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   10d7c:	90                   	nop
   10d7d:	c9                   	leave
   10d7e:	c3                   	ret
   10d7f:	90                   	nop

0000000000010d80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10d80:	55                   	push   %rbp
   10d81:	48 89 e5             	mov    %rsp,%rbp
   10d84:	48 83 ec 20          	sub    $0x20,%rsp
   10d88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10d8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10d90:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10d94:	48 89 d6             	mov    %rdx,%rsi
   10d97:	48 89 c7             	mov    %rax,%rdi
   10d9a:	e8 47 14 00 00       	call   121e6 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10da3:	c9                   	leave
   10da4:	c3                   	ret
   10da5:	90                   	nop

0000000000010da6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10da6:	55                   	push   %rbp
   10da7:	48 89 e5             	mov    %rsp,%rbp
   10daa:	48 83 ec 20          	sub    $0x20,%rsp
   10dae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10db2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10db6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10dba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10dbe:	48 89 d6             	mov    %rdx,%rsi
   10dc1:	48 89 c7             	mov    %rax,%rdi
   10dc4:	e8 1d 14 00 00       	call   121e6 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10dc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dcd:	c9                   	leave
   10dce:	c3                   	ret

0000000000010dcf <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10dcf:	55                   	push   %rbp
   10dd0:	48 89 e5             	mov    %rsp,%rbp
   10dd3:	53                   	push   %rbx
   10dd4:	48 83 ec 18          	sub    $0x18,%rsp
   10dd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ddc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10de0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10de4:	48 89 c7             	mov    %rax,%rdi
   10de7:	e8 18 14 00 00       	call   12204 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   10dec:	48 8b 18             	mov    (%rax),%rbx
   10def:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10df3:	48 89 c7             	mov    %rax,%rdi
   10df6:	e8 09 14 00 00       	call   12204 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   10dfb:	48 8b 00             	mov    (%rax),%rax
   10dfe:	48 39 c3             	cmp    %rax,%rbx
   10e01:	0f 95 c0             	setne  %al
   10e04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10e08:	c9                   	leave
   10e09:	c3                   	ret

0000000000010e0a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10e0a:	55                   	push   %rbp
   10e0b:	48 89 e5             	mov    %rsp,%rbp
   10e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e16:	48 8b 00             	mov    (%rax),%rax
   10e19:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   10e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e24:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10e2b:	5d                   	pop    %rbp
   10e2c:	c3                   	ret
   10e2d:	90                   	nop

0000000000010e2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10e2e:	55                   	push   %rbp
   10e2f:	48 89 e5             	mov    %rsp,%rbp
   10e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e3a:	48 8b 00             	mov    (%rax),%rax
   10e3d:	5d                   	pop    %rbp
   10e3e:	c3                   	ret
   10e3f:	90                   	nop

0000000000010e40 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   10e40:	55                   	push   %rbp
   10e41:	48 89 e5             	mov    %rsp,%rbp
   10e44:	53                   	push   %rbx
   10e45:	48 83 ec 48          	sub    $0x48,%rsp
   10e49:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10e4d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   10e51:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   10e55:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e59:	48 89 d6             	mov    %rdx,%rsi
   10e5c:	48 89 c7             	mov    %rax,%rdi
   10e5f:	e8 ae 13 00 00       	call   12212 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   10e64:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   10e68:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e6c:	48 89 c7             	mov    %rax,%rdi
   10e6f:	e8 c4 13 00 00       	call   12238 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   10e74:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10e78:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10e7c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10e80:	48 89 d6             	mov    %rdx,%rsi
   10e83:	48 89 c7             	mov    %rax,%rdi
   10e86:	e8 c7 13 00 00       	call   12252 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   10e8b:	84 c0                	test   %al,%al
   10e8d:	75 32                	jne    10ec1 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   10e8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e93:	48 89 c7             	mov    %rax,%rdi
   10e96:	e8 d9 13 00 00       	call   12274 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   10e9b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10e9f:	48 89 c7             	mov    %rax,%rdi
   10ea2:	e8 e9 13 00 00       	call   12290 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10ea7:	48 89 c2             	mov    %rax,%rdx
   10eaa:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   10eae:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   10eb2:	48 89 ce             	mov    %rcx,%rsi
   10eb5:	48 89 c7             	mov    %rax,%rdi
   10eb8:	e8 f1 13 00 00       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10ebd:	84 c0                	test   %al,%al
   10ebf:	74 07                	je     10ec8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   10ec1:	b8 01 00 00 00       	mov    $0x1,%eax
   10ec6:	eb 05                	jmp    10ecd <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   10ec8:	b8 00 00 00 00       	mov    $0x0,%eax
   10ecd:	84 c0                	test   %al,%al
   10ecf:	74 5d                	je     10f2e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10ed1:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   10ed5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10ed9:	48 89 c7             	mov    %rax,%rdi
   10edc:	e8 22 0d 00 00       	call   11c03 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   10ee1:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10ee4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10ee8:	48 89 d6             	mov    %rdx,%rsi
   10eeb:	48 89 c7             	mov    %rax,%rdi
   10eee:	e8 e4 13 00 00       	call   122d7 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   10ef3:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   10ef7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10efb:	48 89 d6             	mov    %rdx,%rsi
   10efe:	48 89 c7             	mov    %rax,%rdi
   10f01:	e8 06 14 00 00       	call   1230c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   10f06:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   10f0a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10f0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f12:	49 89 c8             	mov    %rcx,%r8
   10f15:	48 89 d1             	mov    %rdx,%rcx
   10f18:	48 8d 15 81 9e 00 00 	lea    0x9e81(%rip),%rdx        # 1ada0 <_ZSt19piecewise_construct>
   10f1f:	48 89 c6             	mov    %rax,%rsi
   10f22:	48 89 df             	mov    %rbx,%rdi
   10f25:	e8 00 14 00 00       	call   1232a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   10f2a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   10f2e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10f32:	48 89 c7             	mov    %rax,%rdi
   10f35:	e8 56 13 00 00       	call   12290 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10f3a:	48 83 c0 20          	add    $0x20,%rax
      }
   10f3e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10f42:	c9                   	leave
   10f43:	c3                   	ret

0000000000010f44 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   10f44:	55                   	push   %rbp
   10f45:	48 89 e5             	mov    %rsp,%rbp
   10f48:	48 83 ec 20          	sub    $0x20,%rsp
   10f4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   10f50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f54:	48 89 c7             	mov    %rax,%rdi
   10f57:	e8 f0 14 00 00       	call   1244c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   10f5c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10f60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f64:	48 89 c7             	mov    %rax,%rdi
   10f67:	e8 ba 14 00 00       	call   12426 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   10f6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10f70:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10f74:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10f78:	48 89 d6             	mov    %rdx,%rsi
   10f7b:	48 89 c7             	mov    %rax,%rdi
   10f7e:	e8 f2 14 00 00       	call   12475 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10f83:	c9                   	leave
   10f84:	c3                   	ret
   10f85:	90                   	nop

0000000000010f86 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10f86:	55                   	push   %rbp
   10f87:	48 89 e5             	mov    %rsp,%rbp
   10f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10f92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f96:	48 8b 00             	mov    (%rax),%rax
   10f99:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10f9d:	48 c1 e2 03          	shl    $0x3,%rdx
   10fa1:	48 01 d0             	add    %rdx,%rax
      }
   10fa4:	5d                   	pop    %rbp
   10fa5:	c3                   	ret

0000000000010fa6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10fa6:	55                   	push   %rbp
   10fa7:	48 89 e5             	mov    %rsp,%rbp
   10faa:	48 83 ec 20          	sub    $0x20,%rsp
   10fae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10fb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10fb6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10fba:	48 89 d6             	mov    %rdx,%rsi
   10fbd:	48 89 c7             	mov    %rax,%rdi
   10fc0:	e8 eb 14 00 00       	call   124b0 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10fc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fc9:	c9                   	leave
   10fca:	c3                   	ret
   10fcb:	90                   	nop

0000000000010fcc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10fcc:	55                   	push   %rbp
   10fcd:	48 89 e5             	mov    %rsp,%rbp
   10fd0:	48 83 ec 20          	sub    $0x20,%rsp
   10fd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10fd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fdc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10fe0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10fe4:	48 89 d6             	mov    %rdx,%rsi
   10fe7:	48 89 c7             	mov    %rax,%rdi
   10fea:	e8 c1 14 00 00       	call   124b0 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10fef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ff3:	c9                   	leave
   10ff4:	c3                   	ret

0000000000010ff5 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10ff5:	55                   	push   %rbp
   10ff6:	48 89 e5             	mov    %rsp,%rbp
   10ff9:	53                   	push   %rbx
   10ffa:	48 83 ec 18          	sub    $0x18,%rsp
   10ffe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11002:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11006:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1100a:	48 89 c7             	mov    %rax,%rdi
   1100d:	e8 bc 14 00 00       	call   124ce <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11012:	48 8b 18             	mov    (%rax),%rbx
   11015:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11019:	48 89 c7             	mov    %rax,%rdi
   1101c:	e8 ad 14 00 00       	call   124ce <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11021:	48 8b 00             	mov    (%rax),%rax
   11024:	48 39 c3             	cmp    %rax,%rbx
   11027:	0f 95 c0             	setne  %al
   1102a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1102e:	c9                   	leave
   1102f:	c3                   	ret

0000000000011030 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11030:	55                   	push   %rbp
   11031:	48 89 e5             	mov    %rsp,%rbp
   11034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1103c:	48 8b 00             	mov    (%rax),%rax
   1103f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11047:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1104a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1104e:	5d                   	pop    %rbp
   1104f:	c3                   	ret

0000000000011050 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11050:	55                   	push   %rbp
   11051:	48 89 e5             	mov    %rsp,%rbp
   11054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1105c:	48 8b 00             	mov    (%rax),%rax
   1105f:	5d                   	pop    %rbp
   11060:	c3                   	ret
   11061:	90                   	nop

0000000000011062 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11062:	55                   	push   %rbp
   11063:	48 89 e5             	mov    %rsp,%rbp
   11066:	48 83 ec 20          	sub    $0x20,%rsp
   1106a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1106e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11072:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11076:	48 89 d6             	mov    %rdx,%rsi
   11079:	48 89 c7             	mov    %rax,%rdi
   1107c:	e8 5b 14 00 00       	call   124dc <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11085:	c9                   	leave
   11086:	c3                   	ret
   11087:	90                   	nop

0000000000011088 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11088:	55                   	push   %rbp
   11089:	48 89 e5             	mov    %rsp,%rbp
   1108c:	48 83 ec 20          	sub    $0x20,%rsp
   11090:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11094:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11098:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1109c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   110a0:	48 89 d6             	mov    %rdx,%rsi
   110a3:	48 89 c7             	mov    %rax,%rdi
   110a6:	e8 31 14 00 00       	call   124dc <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   110ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110af:	c9                   	leave
   110b0:	c3                   	ret

00000000000110b1 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   110b1:	55                   	push   %rbp
   110b2:	48 89 e5             	mov    %rsp,%rbp
   110b5:	53                   	push   %rbx
   110b6:	48 83 ec 18          	sub    $0x18,%rsp
   110ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   110be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   110c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110c6:	48 89 c7             	mov    %rax,%rdi
   110c9:	e8 2c 14 00 00       	call   124fa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   110ce:	48 8b 18             	mov    (%rax),%rbx
   110d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   110d5:	48 89 c7             	mov    %rax,%rdi
   110d8:	e8 1d 14 00 00       	call   124fa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   110dd:	48 8b 00             	mov    (%rax),%rax
   110e0:	48 39 c3             	cmp    %rax,%rbx
   110e3:	0f 95 c0             	setne  %al
   110e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   110ea:	c9                   	leave
   110eb:	c3                   	ret

00000000000110ec <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   110ec:	55                   	push   %rbp
   110ed:	48 89 e5             	mov    %rsp,%rbp
   110f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   110f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110f8:	48 8b 00             	mov    (%rax),%rax
   110fb:	48 8d 50 04          	lea    0x4(%rax),%rdx
   110ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11103:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1110a:	5d                   	pop    %rbp
   1110b:	c3                   	ret

000000000001110c <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1110c:	55                   	push   %rbp
   1110d:	48 89 e5             	mov    %rsp,%rbp
   11110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11118:	48 8b 00             	mov    (%rax),%rax
   1111b:	5d                   	pop    %rbp
   1111c:	c3                   	ret
   1111d:	90                   	nop

000000000001111e <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   1111e:	55                   	push   %rbp
   1111f:	48 89 e5             	mov    %rsp,%rbp
   11122:	48 83 ec 20          	sub    $0x20,%rsp
   11126:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1112a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   1112e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   11132:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11136:	48 89 c7             	mov    %rax,%rdi
   11139:	e8 ca 13 00 00       	call   12508 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   1113e:	48 89 c2             	mov    %rax,%rdx
   11141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11145:	48 89 d6             	mov    %rdx,%rsi
   11148:	48 89 c7             	mov    %rax,%rdi
   1114b:	e8 c6 13 00 00       	call   12516 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   11150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   11154:	c9                   	leave
   11155:	c3                   	ret

0000000000011156 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11156:	55                   	push   %rbp
   11157:	48 89 e5             	mov    %rsp,%rbp
   1115a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1115e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11162:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1116a:	48 8b 00             	mov    (%rax),%rax
   1116d:	48 29 c2             	sub    %rax,%rdx
   11170:	48 89 d0             	mov    %rdx,%rax
   11173:	48 c1 f8 03          	sar    $0x3,%rax
   11177:	5d                   	pop    %rbp
   11178:	c3                   	ret
   11179:	90                   	nop

000000000001117a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   1117a:	55                   	push   %rbp
   1117b:	48 89 e5             	mov    %rsp,%rbp
   1117e:	48 83 ec 10          	sub    $0x10,%rsp
   11182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11186:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   1118a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1118e:	48 89 c7             	mov    %rax,%rdi
   11191:	e8 5a 03 00 00       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11196:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1119a:	0f 92 c0             	setb   %al
   1119d:	84 c0                	test   %al,%al
   1119f:	74 24                	je     111c5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   111a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111a5:	48 89 c7             	mov    %rax,%rdi
   111a8:	e8 43 03 00 00       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   111ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   111b1:	48 29 c2             	sub    %rax,%rdx
   111b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111b8:	48 89 d6             	mov    %rdx,%rsi
   111bb:	48 89 c7             	mov    %rax,%rdi
   111be:	e8 f5 13 00 00       	call   125b8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   111c3:	eb 38                	jmp    111fd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   111c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111c9:	48 89 c7             	mov    %rax,%rdi
   111cc:	e8 1f 03 00 00       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   111d1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   111d5:	0f 92 c0             	setb   %al
   111d8:	84 c0                	test   %al,%al
   111da:	74 21                	je     111fd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   111dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111e0:	48 8b 00             	mov    (%rax),%rax
   111e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   111e7:	48 c1 e2 03          	shl    $0x3,%rdx
   111eb:	48 01 c2             	add    %rax,%rdx
   111ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111f2:	48 89 d6             	mov    %rdx,%rsi
   111f5:	48 89 c7             	mov    %rax,%rdi
   111f8:	e8 c5 15 00 00       	call   127c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   111fd:	90                   	nop
   111fe:	c9                   	leave
   111ff:	c3                   	ret

0000000000011200 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11200:	55                   	push   %rbp
   11201:	48 89 e5             	mov    %rsp,%rbp
   11204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11208:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1120c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11210:	48 8b 00             	mov    (%rax),%rax
   11213:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11217:	48 c1 e2 03          	shl    $0x3,%rdx
   1121b:	48 01 d0             	add    %rdx,%rax
      }
   1121e:	5d                   	pop    %rbp
   1121f:	c3                   	ret

0000000000011220 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11220:	55                   	push   %rbp
   11221:	48 89 e5             	mov    %rsp,%rbp
   11224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11228:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1122c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11230:	48 8b 00             	mov    (%rax),%rax
   11233:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11237:	48 c1 e2 03          	shl    $0x3,%rdx
   1123b:	48 01 d0             	add    %rdx,%rax
      }
   1123e:	5d                   	pop    %rbp
   1123f:	c3                   	ret

0000000000011240 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11240:	55                   	push   %rbp
   11241:	48 89 e5             	mov    %rsp,%rbp
   11244:	48 83 ec 10          	sub    $0x10,%rsp
   11248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1124c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11250:	48 89 c7             	mov    %rax,%rdi
   11253:	e8 ca 15 00 00       	call   12822 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   11258:	90                   	nop
   11259:	c9                   	leave
   1125a:	c3                   	ret
   1125b:	90                   	nop

000000000001125c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1125c:	55                   	push   %rbp
   1125d:	48 89 e5             	mov    %rsp,%rbp
   11260:	48 83 ec 10          	sub    $0x10,%rsp
   11264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1126c:	48 89 c7             	mov    %rax,%rdi
   1126f:	e8 ba 15 00 00       	call   1282e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   11274:	90                   	nop
   11275:	c9                   	leave
   11276:	c3                   	ret
   11277:	90                   	nop

0000000000011278 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   11278:	55                   	push   %rbp
   11279:	48 89 e5             	mov    %rsp,%rbp
   1127c:	53                   	push   %rbx
   1127d:	48 83 ec 38          	sub    $0x38,%rsp
   11281:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11285:	48 89 f0             	mov    %rsi,%rax
   11288:	48 89 d6             	mov    %rdx,%rsi
   1128b:	48 89 f2             	mov    %rsi,%rdx
   1128e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11292:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11296:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1129a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1129e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   112a2:	48 89 d6             	mov    %rdx,%rsi
   112a5:	48 89 c7             	mov    %rax,%rdi
   112a8:	e8 a9 15 00 00       	call   12856 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   112ad:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   112b1:	48 89 c7             	mov    %rax,%rdi
   112b4:	e8 2d 16 00 00       	call   128e6 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   112b9:	48 89 c3             	mov    %rax,%rbx
   112bc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   112c0:	48 89 c7             	mov    %rax,%rdi
   112c3:	e8 0c 16 00 00       	call   128d4 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   112c8:	48 89 c1             	mov    %rax,%rcx
   112cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112cf:	48 89 da             	mov    %rbx,%rdx
   112d2:	48 89 ce             	mov    %rcx,%rsi
   112d5:	48 89 c7             	mov    %rax,%rdi
   112d8:	e8 7d 16 00 00       	call   1295a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   112dd:	eb 1a                	jmp    112f9 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   112df:	48 89 c3             	mov    %rax,%rbx
   112e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112e6:	48 89 c7             	mov    %rax,%rdi
   112e9:	e8 8e 15 00 00       	call   1287c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   112ee:	48 89 d8             	mov    %rbx,%rax
   112f1:	48 89 c7             	mov    %rax,%rdi
   112f4:	e8 f7 33 ff ff       	call   46f0 <_Unwind_Resume@plt>
   112f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   112fd:	c9                   	leave
   112fe:	c3                   	ret
   112ff:	90                   	nop

0000000000011300 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11300:	55                   	push   %rbp
   11301:	48 89 e5             	mov    %rsp,%rbp
   11304:	48 83 ec 10          	sub    $0x10,%rsp
   11308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1130c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11310:	48 89 c7             	mov    %rax,%rdi
   11313:	e8 fc 16 00 00       	call   12a14 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   11318:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1131b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1131f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11327:	48 8b 00             	mov    (%rax),%rax
   1132a:	48 89 ce             	mov    %rcx,%rsi
   1132d:	48 89 c7             	mov    %rax,%rdi
   11330:	e8 ed 16 00 00       	call   12a22 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   11335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11339:	48 89 c7             	mov    %rax,%rdi
   1133c:	e8 3b 15 00 00       	call   1287c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   11341:	90                   	nop
   11342:	c9                   	leave
   11343:	c3                   	ret

0000000000011344 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   11344:	55                   	push   %rbp
   11345:	48 89 e5             	mov    %rsp,%rbp
   11348:	48 83 ec 10          	sub    $0x10,%rsp
   1134c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11354:	48 89 c7             	mov    %rax,%rdi
   11357:	e8 3a 17 00 00       	call   12a96 <_ZNSaIP12VkPipeline_TED1Ev>
   1135c:	90                   	nop
   1135d:	c9                   	leave
   1135e:	c3                   	ret

000000000001135f <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   1135f:	55                   	push   %rbp
   11360:	48 89 e5             	mov    %rsp,%rbp
   11363:	41 54                	push   %r12
   11365:	53                   	push   %rbx
   11366:	48 83 ec 40          	sub    $0x40,%rsp
   1136a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1136e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11372:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11376:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1137a:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   1137e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11382:	48 89 c7             	mov    %rax,%rdi
   11385:	e8 c2 16 00 00       	call   12a4c <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   1138a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   1138d:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   11390:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11394:	48 89 c7             	mov    %rax,%rdi
   11397:	e8 de 16 00 00       	call   12a7a <_ZNSaIP12VkPipeline_TEC1Ev>
   1139c:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   113a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113a4:	48 89 de             	mov    %rbx,%rsi
   113a7:	48 89 c7             	mov    %rax,%rdi
   113aa:	e8 03 17 00 00       	call   12ab2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   113af:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   113b3:	48 89 c7             	mov    %rax,%rdi
   113b6:	e8 db 16 00 00       	call   12a96 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   113bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113bf:	48 89 c7             	mov    %rax,%rdi
   113c2:	e8 85 17 00 00       	call   12b4c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   113c7:	48 89 c3             	mov    %rax,%rbx
   113ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   113ce:	48 89 c7             	mov    %rax,%rdi
   113d1:	e8 52 17 00 00       	call   12b28 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   113d6:	48 89 c1             	mov    %rax,%rcx
   113d9:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   113dd:	8b 55 ec             	mov    -0x14(%rbp),%edx
   113e0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   113e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   113e8:	49 89 d9             	mov    %rbx,%r9
   113eb:	49 89 f8             	mov    %rdi,%r8
   113ee:	48 89 c7             	mov    %rax,%rdi
   113f1:	e8 6a 2d ff ff       	call   4160 <vkCreateGraphicsPipelines@plt>
   113f6:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   113f9:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   113fd:	74 7f                	je     1147e <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   113ff:	bf 10 00 00 00       	mov    $0x10,%edi
   11404:	e8 67 2d ff ff       	call   4170 <__cxa_allocate_exception@plt>
   11409:	48 89 c3             	mov    %rax,%rbx
   1140c:	48 8d 05 8f 98 00 00 	lea    0x988f(%rip),%rax        # 1aca2 <_ZN6__pstl9execution2v1L5unseqE+0x373>
   11413:	48 89 c6             	mov    %rax,%rsi
   11416:	48 89 df             	mov    %rbx,%rdi
   11419:	e8 e2 2c ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
   1141e:	48 8b 05 83 6b 01 00 	mov    0x16b83(%rip),%rax        # 27fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11425:	48 89 c2             	mov    %rax,%rdx
   11428:	48 8d 05 11 69 01 00 	lea    0x16911(%rip),%rax        # 27d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   1142f:	48 89 c6             	mov    %rax,%rsi
   11432:	48 89 df             	mov    %rbx,%rdi
   11435:	e8 56 32 ff ff       	call   4690 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   1143a:	48 89 c3             	mov    %rax,%rbx
   1143d:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11441:	48 89 c7             	mov    %rax,%rdi
   11444:	e8 4d 16 00 00       	call   12a96 <_ZNSaIP12VkPipeline_TED1Ev>
   11449:	48 89 d8             	mov    %rbx,%rax
   1144c:	48 89 c7             	mov    %rax,%rdi
   1144f:	e8 9c 32 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   11454:	49 89 c4             	mov    %rax,%r12
   11457:	48 89 df             	mov    %rbx,%rdi
   1145a:	e8 e1 2d ff ff       	call   4240 <__cxa_free_exception@plt>
   1145f:	4c 89 e3             	mov    %r12,%rbx
   11462:	eb 03                	jmp    11467 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   11464:	48 89 c3             	mov    %rax,%rbx
   11467:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1146b:	48 89 c7             	mov    %rax,%rdi
   1146e:	e8 19 00 00 00       	call   1148c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   11473:	48 89 d8             	mov    %rbx,%rax
   11476:	48 89 c7             	mov    %rax,%rdi
   11479:	e8 72 32 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return pipelines;
   1147e:	90                   	nop
}
   1147f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11483:	48 83 c4 40          	add    $0x40,%rsp
   11487:	5b                   	pop    %rbx
   11488:	41 5c                	pop    %r12
   1148a:	5d                   	pop    %rbp
   1148b:	c3                   	ret

000000000001148c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1148c:	55                   	push   %rbp
   1148d:	48 89 e5             	mov    %rsp,%rbp
   11490:	48 83 ec 10          	sub    $0x10,%rsp
   11494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1149c:	48 89 c7             	mov    %rax,%rdi
   1149f:	e8 1a 17 00 00       	call   12bbe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   114a4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   114a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114ab:	48 8b 48 08          	mov    0x8(%rax),%rcx
   114af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114b3:	48 8b 00             	mov    (%rax),%rax
   114b6:	48 89 ce             	mov    %rcx,%rsi
   114b9:	48 89 c7             	mov    %rax,%rdi
   114bc:	e8 0b 17 00 00       	call   12bcc <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   114c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114c5:	48 89 c7             	mov    %rax,%rdi
   114c8:	e8 a3 16 00 00       	call   12b70 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   114cd:	90                   	nop
   114ce:	c9                   	leave
   114cf:	c3                   	ret

00000000000114d0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   114d0:	55                   	push   %rbp
   114d1:	48 89 e5             	mov    %rsp,%rbp
   114d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   114dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e0:	48 8b 00             	mov    (%rax),%rax
   114e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114e7:	48 c1 e2 03          	shl    $0x3,%rdx
   114eb:	48 01 d0             	add    %rdx,%rax
      }
   114ee:	5d                   	pop    %rbp
   114ef:	c3                   	ret

00000000000114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   114f0:	55                   	push   %rbp
   114f1:	48 89 e5             	mov    %rsp,%rbp
   114f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   114f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114fc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11504:	48 8b 00             	mov    (%rax),%rax
   11507:	48 29 c2             	sub    %rax,%rdx
   1150a:	48 89 d0             	mov    %rdx,%rax
   1150d:	48 c1 f8 03          	sar    $0x3,%rax
   11511:	5d                   	pop    %rbp
   11512:	c3                   	ret
   11513:	90                   	nop

0000000000011514 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   11514:	55                   	push   %rbp
   11515:	48 89 e5             	mov    %rsp,%rbp
   11518:	48 83 ec 10          	sub    $0x10,%rsp
   1151c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11520:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   11524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11528:	48 89 c7             	mov    %rax,%rdi
   1152b:	e8 c6 16 00 00       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   11530:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11534:	0f 92 c0             	setb   %al
   11537:	84 c0                	test   %al,%al
   11539:	74 24                	je     1155f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   1153b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1153f:	48 89 c7             	mov    %rax,%rdi
   11542:	e8 af 16 00 00       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   11547:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1154b:	48 29 c2             	sub    %rax,%rdx
   1154e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11552:	48 89 d6             	mov    %rdx,%rsi
   11555:	48 89 c7             	mov    %rax,%rdi
   11558:	e8 bd 16 00 00       	call   12c1a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   1155d:	eb 38                	jmp    11597 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1155f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11563:	48 89 c7             	mov    %rax,%rdi
   11566:	e8 8b 16 00 00       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1156b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1156f:	0f 92 c0             	setb   %al
   11572:	84 c0                	test   %al,%al
   11574:	74 21                	je     11597 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   11576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1157a:	48 8b 00             	mov    (%rax),%rax
   1157d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11581:	48 c1 e2 03          	shl    $0x3,%rdx
   11585:	48 01 c2             	add    %rax,%rdx
   11588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1158c:	48 89 d6             	mov    %rdx,%rsi
   1158f:	48 89 c7             	mov    %rax,%rdi
   11592:	e8 8d 18 00 00       	call   12e24 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   11597:	90                   	nop
   11598:	c9                   	leave
   11599:	c3                   	ret

000000000001159a <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1159a:	55                   	push   %rbp
   1159b:	48 89 e5             	mov    %rsp,%rbp
   1159e:	48 83 ec 10          	sub    $0x10,%rsp
   115a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115aa:	48 89 c7             	mov    %rax,%rdi
   115ad:	e8 d2 18 00 00       	call   12e84 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   115b2:	90                   	nop
   115b3:	c9                   	leave
   115b4:	c3                   	ret
   115b5:	90                   	nop

00000000000115b6 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   115b6:	55                   	push   %rbp
   115b7:	48 89 e5             	mov    %rsp,%rbp
   115ba:	48 83 ec 10          	sub    $0x10,%rsp
   115be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115c6:	48 89 c7             	mov    %rax,%rdi
   115c9:	e8 c2 18 00 00       	call   12e90 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   115ce:	90                   	nop
   115cf:	c9                   	leave
   115d0:	c3                   	ret
   115d1:	90                   	nop

00000000000115d2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   115d2:	55                   	push   %rbp
   115d3:	48 89 e5             	mov    %rsp,%rbp
   115d6:	53                   	push   %rbx
   115d7:	48 83 ec 38          	sub    $0x38,%rsp
   115db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   115df:	48 89 f0             	mov    %rsi,%rax
   115e2:	48 89 d6             	mov    %rdx,%rsi
   115e5:	48 89 f2             	mov    %rsi,%rdx
   115e8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   115ec:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   115f0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   115f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115f8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   115fc:	48 89 d6             	mov    %rdx,%rsi
   115ff:	48 89 c7             	mov    %rax,%rdi
   11602:	e8 95 18 00 00       	call   12e9c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   11607:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1160b:	48 89 c7             	mov    %rax,%rdi
   1160e:	e8 c1 18 00 00       	call   12ed4 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   11613:	48 89 c3             	mov    %rax,%rbx
   11616:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1161a:	48 89 c7             	mov    %rax,%rdi
   1161d:	e8 a0 18 00 00       	call   12ec2 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   11622:	48 89 c1             	mov    %rax,%rcx
   11625:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11629:	48 89 da             	mov    %rbx,%rdx
   1162c:	48 89 ce             	mov    %rcx,%rsi
   1162f:	48 89 c7             	mov    %rax,%rdi
   11632:	e8 03 19 00 00       	call   12f3a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   11637:	eb 1a                	jmp    11653 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   11639:	48 89 c3             	mov    %rax,%rbx
   1163c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11640:	48 89 c7             	mov    %rax,%rdi
   11643:	e8 c2 00 00 00       	call   1170a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   11648:	48 89 d8             	mov    %rbx,%rax
   1164b:	48 89 c7             	mov    %rax,%rdi
   1164e:	e8 9d 30 ff ff       	call   46f0 <_Unwind_Resume@plt>
   11653:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11657:	c9                   	leave
   11658:	c3                   	ret
   11659:	90                   	nop

000000000001165a <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1165a:	55                   	push   %rbp
   1165b:	48 89 e5             	mov    %rsp,%rbp
   1165e:	48 83 ec 10          	sub    $0x10,%rsp
   11662:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1166a:	48 89 c7             	mov    %rax,%rdi
   1166d:	e8 78 19 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11672:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11679:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1167d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11681:	48 8b 00             	mov    (%rax),%rax
   11684:	48 89 ce             	mov    %rcx,%rsi
   11687:	48 89 c7             	mov    %rax,%rdi
   1168a:	e8 69 19 00 00       	call   12ff8 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   1168f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11693:	48 89 c7             	mov    %rax,%rdi
   11696:	e8 6f 00 00 00       	call   1170a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   1169b:	90                   	nop
   1169c:	c9                   	leave
   1169d:	c3                   	ret

000000000001169e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1169e:	55                   	push   %rbp
   1169f:	48 89 e5             	mov    %rsp,%rbp
   116a2:	48 83 ec 10          	sub    $0x10,%rsp
   116a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   116aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116ae:	48 8b 10             	mov    (%rax),%rdx
   116b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116b5:	48 89 d6             	mov    %rdx,%rsi
   116b8:	48 89 c7             	mov    %rax,%rdi
   116bb:	e8 62 19 00 00       	call   13022 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   116c0:	c9                   	leave
   116c1:	c3                   	ret

00000000000116c2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   116c2:	55                   	push   %rbp
   116c3:	48 89 e5             	mov    %rsp,%rbp
   116c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   116ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116d2:	48 8b 00             	mov    (%rax),%rax
   116d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   116d9:	48 c1 e2 03          	shl    $0x3,%rdx
   116dd:	48 01 d0             	add    %rdx,%rax
      }
   116e0:	5d                   	pop    %rbp
   116e1:	c3                   	ret

00000000000116e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   116e2:	55                   	push   %rbp
   116e3:	48 89 e5             	mov    %rsp,%rbp
   116e6:	48 83 ec 10          	sub    $0x10,%rsp
   116ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   116ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116f2:	48 89 c7             	mov    %rax,%rdi
   116f5:	e8 a0 fe ff ff       	call   1159a <_ZNSaIP13VkImageView_TEC1Ev>
   116fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116fe:	48 89 c7             	mov    %rax,%rdi
   11701:	e8 2e 19 00 00       	call   13034 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11706:	90                   	nop
   11707:	c9                   	leave
   11708:	c3                   	ret
   11709:	90                   	nop

000000000001170a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1170a:	55                   	push   %rbp
   1170b:	48 89 e5             	mov    %rsp,%rbp
   1170e:	48 83 ec 10          	sub    $0x10,%rsp
   11712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   11716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1171a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1171e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11722:	48 8b 00             	mov    (%rax),%rax
   11725:	48 29 c2             	sub    %rax,%rdx
   11728:	48 89 d0             	mov    %rdx,%rax
   1172b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   1172f:	48 89 c2             	mov    %rax,%rdx
   11732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11736:	48 8b 08             	mov    (%rax),%rcx
   11739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1173d:	48 89 ce             	mov    %rcx,%rsi
   11740:	48 89 c7             	mov    %rax,%rdi
   11743:	e8 1a 19 00 00       	call   13062 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1174c:	48 89 c7             	mov    %rax,%rdi
   1174f:	e8 54 ef ff ff       	call   106a8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   11754:	90                   	nop
   11755:	c9                   	leave
   11756:	c3                   	ret
   11757:	90                   	nop

0000000000011758 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11758:	55                   	push   %rbp
   11759:	48 89 e5             	mov    %rsp,%rbp
   1175c:	48 83 ec 10          	sub    $0x10,%rsp
   11760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11768:	48 89 c7             	mov    %rax,%rdi
   1176b:	e8 50 72 ff ff       	call   89c0 <_ZNSaIP9VkImage_TEC1Ev>
   11770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11774:	48 89 c7             	mov    %rax,%rdi
   11777:	e8 e0 97 ff ff       	call   af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1177c:	90                   	nop
   1177d:	c9                   	leave
   1177e:	c3                   	ret
   1177f:	90                   	nop

0000000000011780 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11780:	55                   	push   %rbp
   11781:	48 89 e5             	mov    %rsp,%rbp
   11784:	48 83 ec 10          	sub    $0x10,%rsp
   11788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1178c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11790:	48 89 c7             	mov    %rax,%rdi
   11793:	e8 00 19 00 00       	call   13098 <_ZNSaIP15VkFramebuffer_TEC1Ev>
   11798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1179c:	48 89 c7             	mov    %rax,%rdi
   1179f:	e8 10 19 00 00       	call   130b4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   117a4:	90                   	nop
   117a5:	c9                   	leave
   117a6:	c3                   	ret
   117a7:	90                   	nop

00000000000117a8 <_ZNSaIP15VkFramebuffer_TED1Ev>:
   117a8:	55                   	push   %rbp
   117a9:	48 89 e5             	mov    %rsp,%rbp
   117ac:	48 83 ec 10          	sub    $0x10,%rsp
   117b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117b8:	48 89 c7             	mov    %rax,%rdi
   117bb:	e8 22 19 00 00       	call   130e2 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   117c0:	90                   	nop
   117c1:	c9                   	leave
   117c2:	c3                   	ret
   117c3:	90                   	nop

00000000000117c4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   117c4:	55                   	push   %rbp
   117c5:	48 89 e5             	mov    %rsp,%rbp
   117c8:	48 83 ec 10          	sub    $0x10,%rsp
   117cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   117d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117d4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   117d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117dc:	48 8b 00             	mov    (%rax),%rax
   117df:	48 29 c2             	sub    %rax,%rdx
   117e2:	48 89 d0             	mov    %rdx,%rax
   117e5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   117e9:	48 89 c2             	mov    %rax,%rdx
   117ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117f0:	48 8b 08             	mov    (%rax),%rcx
   117f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117f7:	48 89 ce             	mov    %rcx,%rsi
   117fa:	48 89 c7             	mov    %rax,%rdi
   117fd:	e8 ec 18 00 00       	call   130ee <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11806:	48 89 c7             	mov    %rax,%rdi
   11809:	e8 60 ef ff ff       	call   1076e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   1180e:	90                   	nop
   1180f:	c9                   	leave
   11810:	c3                   	ret
   11811:	90                   	nop

0000000000011812 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11812:	55                   	push   %rbp
   11813:	48 89 e5             	mov    %rsp,%rbp
   11816:	48 83 ec 10          	sub    $0x10,%rsp
   1181a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1181e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11822:	48 89 c7             	mov    %rax,%rdi
   11825:	e8 fa 18 00 00       	call   13124 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1182a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1182d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11831:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11839:	48 8b 00             	mov    (%rax),%rax
   1183c:	48 89 ce             	mov    %rcx,%rsi
   1183f:	48 89 c7             	mov    %rax,%rdi
   11842:	e8 eb 18 00 00       	call   13132 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   11847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1184b:	48 89 c7             	mov    %rax,%rdi
   1184e:	e8 71 ff ff ff       	call   117c4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   11853:	90                   	nop
   11854:	c9                   	leave
   11855:	c3                   	ret

0000000000011856 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11856:	55                   	push   %rbp
   11857:	48 89 e5             	mov    %rsp,%rbp
   1185a:	48 83 ec 20          	sub    $0x20,%rsp
   1185e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11862:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11866:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1186a:	48 89 d6             	mov    %rdx,%rsi
   1186d:	48 89 c7             	mov    %rax,%rdi
   11870:	e8 e7 18 00 00       	call   1315c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11879:	c9                   	leave
   1187a:	c3                   	ret
   1187b:	90                   	nop

000000000001187c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1187c:	55                   	push   %rbp
   1187d:	48 89 e5             	mov    %rsp,%rbp
   11880:	48 83 ec 20          	sub    $0x20,%rsp
   11884:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1188c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11890:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11894:	48 89 d6             	mov    %rdx,%rsi
   11897:	48 89 c7             	mov    %rax,%rdi
   1189a:	e8 bd 18 00 00       	call   1315c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1189f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118a3:	c9                   	leave
   118a4:	c3                   	ret

00000000000118a5 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   118a5:	55                   	push   %rbp
   118a6:	48 89 e5             	mov    %rsp,%rbp
   118a9:	53                   	push   %rbx
   118aa:	48 83 ec 18          	sub    $0x18,%rsp
   118ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   118b2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   118b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118ba:	48 89 c7             	mov    %rax,%rdi
   118bd:	e8 b8 18 00 00       	call   1317a <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   118c2:	48 8b 18             	mov    (%rax),%rbx
   118c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118c9:	48 89 c7             	mov    %rax,%rdi
   118cc:	e8 a9 18 00 00       	call   1317a <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   118d1:	48 8b 00             	mov    (%rax),%rax
   118d4:	48 39 c3             	cmp    %rax,%rbx
   118d7:	0f 95 c0             	setne  %al
   118da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   118de:	c9                   	leave
   118df:	c3                   	ret

00000000000118e0 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   118e0:	55                   	push   %rbp
   118e1:	48 89 e5             	mov    %rsp,%rbp
   118e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   118e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118ec:	48 8b 00             	mov    (%rax),%rax
   118ef:	48 8d 50 08          	lea    0x8(%rax),%rdx
   118f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118f7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   118fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   118fe:	5d                   	pop    %rbp
   118ff:	c3                   	ret

0000000000011900 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11900:	55                   	push   %rbp
   11901:	48 89 e5             	mov    %rsp,%rbp
   11904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1190c:	48 8b 00             	mov    (%rax),%rax
   1190f:	5d                   	pop    %rbp
   11910:	c3                   	ret
   11911:	90                   	nop

0000000000011912 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11912:	55                   	push   %rbp
   11913:	48 89 e5             	mov    %rsp,%rbp
   11916:	48 83 ec 20          	sub    $0x20,%rsp
   1191a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1191e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11922:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11926:	48 89 d6             	mov    %rdx,%rsi
   11929:	48 89 c7             	mov    %rax,%rdi
   1192c:	e8 57 18 00 00       	call   13188 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11935:	c9                   	leave
   11936:	c3                   	ret
   11937:	90                   	nop

0000000000011938 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11938:	55                   	push   %rbp
   11939:	48 89 e5             	mov    %rsp,%rbp
   1193c:	48 83 ec 20          	sub    $0x20,%rsp
   11940:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11944:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11948:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1194c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11950:	48 89 d6             	mov    %rdx,%rsi
   11953:	48 89 c7             	mov    %rax,%rdi
   11956:	e8 2d 18 00 00       	call   13188 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1195b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1195f:	c9                   	leave
   11960:	c3                   	ret

0000000000011961 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11961:	55                   	push   %rbp
   11962:	48 89 e5             	mov    %rsp,%rbp
   11965:	53                   	push   %rbx
   11966:	48 83 ec 18          	sub    $0x18,%rsp
   1196a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1196e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11972:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11976:	48 89 c7             	mov    %rax,%rdi
   11979:	e8 28 18 00 00       	call   131a6 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1197e:	48 8b 18             	mov    (%rax),%rbx
   11981:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11985:	48 89 c7             	mov    %rax,%rdi
   11988:	e8 19 18 00 00       	call   131a6 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1198d:	48 8b 00             	mov    (%rax),%rax
   11990:	48 39 c3             	cmp    %rax,%rbx
   11993:	0f 95 c0             	setne  %al
   11996:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1199a:	c9                   	leave
   1199b:	c3                   	ret

000000000001199c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1199c:	55                   	push   %rbp
   1199d:	48 89 e5             	mov    %rsp,%rbp
   119a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   119a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119a8:	48 8b 00             	mov    (%rax),%rax
   119ab:	48 8d 50 08          	lea    0x8(%rax),%rdx
   119af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119b3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   119b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   119ba:	5d                   	pop    %rbp
   119bb:	c3                   	ret

00000000000119bc <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   119bc:	55                   	push   %rbp
   119bd:	48 89 e5             	mov    %rsp,%rbp
   119c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   119c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119c8:	48 8b 00             	mov    (%rax),%rax
   119cb:	5d                   	pop    %rbp
   119cc:	c3                   	ret
   119cd:	90                   	nop

00000000000119ce <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   119ce:	55                   	push   %rbp
   119cf:	48 89 e5             	mov    %rsp,%rbp
   119d2:	53                   	push   %rbx
   119d3:	48 83 ec 18          	sub    $0x18,%rsp
   119d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   119db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119df:	48 89 c7             	mov    %rax,%rdi
   119e2:	e8 cd 17 00 00       	call   131b4 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   119e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119eb:	48 83 c0 08          	add    $0x8,%rax
   119ef:	48 89 c7             	mov    %rax,%rdi
   119f2:	e8 a9 2b ff ff       	call   45a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   119f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119fb:	48 83 c0 08          	add    $0x8,%rax
   119ff:	48 8d 15 b8 92 00 00 	lea    0x92b8(%rip),%rdx        # 1acbe <_ZN6__pstl9execution2v1L5unseqE+0x38f>
   11a06:	48 89 d6             	mov    %rdx,%rsi
   11a09:	48 89 c7             	mov    %rax,%rdi
   11a0c:	e8 5f 2b ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   11a11:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11a15:	e8 16 2b ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11a1a:	48 89 03             	mov    %rax,(%rbx)
  }
   11a1d:	eb 1e                	jmp    11a3d <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   11a1f:	48 89 c3             	mov    %rax,%rbx
   11a22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a26:	48 83 c0 08          	add    $0x8,%rax
   11a2a:	48 89 c7             	mov    %rax,%rdi
   11a2d:	e8 ae 27 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11a32:	48 89 d8             	mov    %rbx,%rax
   11a35:	48 89 c7             	mov    %rax,%rdi
   11a38:	e8 b3 2c ff ff       	call   46f0 <_Unwind_Resume@plt>
   11a3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11a41:	c9                   	leave
   11a42:	c3                   	ret
   11a43:	90                   	nop

0000000000011a44 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   11a44:	55                   	push   %rbp
   11a45:	48 89 e5             	mov    %rsp,%rbp
   11a48:	48 83 ec 20          	sub    $0x20,%rsp
   11a4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   11a50:	e8 db 2a ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11a55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   11a59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a5d:	48 83 c0 08          	add    $0x8,%rax
   11a61:	48 89 c7             	mov    %rax,%rdi
   11a64:	e8 77 27 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11a69:	90                   	nop
   11a6a:	c9                   	leave
   11a6b:	c3                   	ret

0000000000011a6c <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   11a6c:	55                   	push   %rbp
   11a6d:	48 89 e5             	mov    %rsp,%rbp
   11a70:	48 83 ec 20          	sub    $0x20,%rsp
   11a74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11a78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   11a7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a80:	48 89 c7             	mov    %rax,%rdi
   11a83:	e8 4c 17 00 00       	call   131d4 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11a88:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11a8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a90:	48 89 c7             	mov    %rax,%rdi
   11a93:	e8 3c 17 00 00       	call   131d4 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11a98:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a9c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11aa0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11aa4:	48 89 d6             	mov    %rdx,%rsi
   11aa7:	48 89 c7             	mov    %rax,%rdi
   11aaa:	e8 36 17 00 00       	call   131e5 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   11aaf:	c9                   	leave
   11ab0:	c3                   	ret

0000000000011ab1 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   11ab1:	55                   	push   %rbp
   11ab2:	48 89 e5             	mov    %rsp,%rbp
   11ab5:	48 83 ec 10          	sub    $0x10,%rsp
   11ab9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   11abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac1:	48 89 c7             	mov    %rax,%rdi
   11ac4:	e8 85 17 00 00       	call   1324e <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   11ac9:	c9                   	leave
   11aca:	c3                   	ret
   11acb:	90                   	nop

0000000000011acc <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   11acc:	55                   	push   %rbp
   11acd:	48 89 e5             	mov    %rsp,%rbp
   11ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   11ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ad8:	48 8b 00             	mov    (%rax),%rax
   11adb:	5d                   	pop    %rbp
   11adc:	c3                   	ret
   11add:	90                   	nop

0000000000011ade <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   11ade:	55                   	push   %rbp
   11adf:	48 89 e5             	mov    %rsp,%rbp
   11ae2:	53                   	push   %rbx
   11ae3:	48 83 ec 18          	sub    $0x18,%rsp
   11ae7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11aeb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11aef:	e8 3c 2a ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11af4:	48 89 03             	mov    %rax,(%rbx)
   11af7:	90                   	nop
   11af8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11afc:	c9                   	leave
   11afd:	c3                   	ret

0000000000011afe <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   11afe:	55                   	push   %rbp
   11aff:	48 89 e5             	mov    %rsp,%rbp
   11b02:	48 83 ec 20          	sub    $0x20,%rsp
   11b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11b0e:	89 d0                	mov    %edx,%eax
   11b10:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   11b13:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   11b17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b1b:	be 01 00 00 00       	mov    $0x1,%esi
   11b20:	48 89 c7             	mov    %rax,%rdi
   11b23:	e8 e8 28 ff ff       	call   4410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   11b28:	48 89 c7             	mov    %rax,%rdi
   11b2b:	e8 d3 00 00 00       	call   11c03 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   11b30:	48 89 c2             	mov    %rax,%rdx
   11b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b37:	48 89 d6             	mov    %rdx,%rsi
   11b3a:	48 89 c7             	mov    %rax,%rdi
   11b3d:	e8 8e 26 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   11b42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b46:	c9                   	leave
   11b47:	c3                   	ret

0000000000011b48 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   11b48:	55                   	push   %rbp
   11b49:	48 89 e5             	mov    %rsp,%rbp
   11b4c:	48 83 ec 20          	sub    $0x20,%rsp
   11b50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11b54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11b58:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11b5c:	48 89 d6             	mov    %rdx,%rsi
   11b5f:	48 89 c7             	mov    %rax,%rdi
   11b62:	e8 41 17 00 00       	call   132a8 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   11b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b6b:	c9                   	leave
   11b6c:	c3                   	ret
   11b6d:	90                   	nop

0000000000011b6e <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11b6e:	55                   	push   %rbp
   11b6f:	48 89 e5             	mov    %rsp,%rbp
   11b72:	48 83 ec 20          	sub    $0x20,%rsp
   11b76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   11b7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b7e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11b82:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11b86:	48 89 d6             	mov    %rdx,%rsi
   11b89:	48 89 c7             	mov    %rax,%rdi
   11b8c:	e8 17 17 00 00       	call   132a8 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   11b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b95:	c9                   	leave
   11b96:	c3                   	ret

0000000000011b97 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11b97:	55                   	push   %rbp
   11b98:	48 89 e5             	mov    %rsp,%rbp
   11b9b:	53                   	push   %rbx
   11b9c:	48 83 ec 18          	sub    $0x18,%rsp
   11ba0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ba4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11ba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bac:	48 89 c7             	mov    %rax,%rdi
   11baf:	e8 12 17 00 00       	call   132c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11bb4:	48 8b 18             	mov    (%rax),%rbx
   11bb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11bbb:	48 89 c7             	mov    %rax,%rdi
   11bbe:	e8 03 17 00 00       	call   132c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11bc3:	48 8b 00             	mov    (%rax),%rax
   11bc6:	48 39 c3             	cmp    %rax,%rbx
   11bc9:	0f 95 c0             	setne  %al
   11bcc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11bd0:	c9                   	leave
   11bd1:	c3                   	ret

0000000000011bd2 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11bd2:	55                   	push   %rbp
   11bd3:	48 89 e5             	mov    %rsp,%rbp
   11bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bde:	48 8b 00             	mov    (%rax),%rax
   11be1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11be9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11bf0:	5d                   	pop    %rbp
   11bf1:	c3                   	ret

0000000000011bf2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11bf2:	55                   	push   %rbp
   11bf3:	48 89 e5             	mov    %rsp,%rbp
   11bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bfe:	48 8b 00             	mov    (%rax),%rax
   11c01:	5d                   	pop    %rbp
   11c02:	c3                   	ret

0000000000011c03 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   11c03:	55                   	push   %rbp
   11c04:	48 89 e5             	mov    %rsp,%rbp
   11c07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11c0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c0f:	5d                   	pop    %rbp
   11c10:	c3                   	ret
   11c11:	90                   	nop

0000000000011c12 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   11c12:	55                   	push   %rbp
   11c13:	48 89 e5             	mov    %rsp,%rbp
   11c16:	48 83 ec 10          	sub    $0x10,%rsp
   11c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   11c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c2a:	48 89 d6             	mov    %rdx,%rsi
   11c2d:	48 89 c7             	mov    %rax,%rdi
   11c30:	e8 07 82 ff ff       	call   9e3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   11c35:	90                   	nop
   11c36:	c9                   	leave
   11c37:	c3                   	ret

0000000000011c38 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   11c38:	55                   	push   %rbp
   11c39:	48 89 e5             	mov    %rsp,%rbp
   11c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c44:	48 8b 00             	mov    (%rax),%rax
   11c47:	5d                   	pop    %rbp
   11c48:	c3                   	ret
   11c49:	90                   	nop

0000000000011c4a <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   11c4a:	55                   	push   %rbp
   11c4b:	48 89 e5             	mov    %rsp,%rbp
   11c4e:	53                   	push   %rbx
   11c4f:	48 83 ec 18          	sub    $0x18,%rsp
   11c53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11c57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c5b:	48 89 c7             	mov    %rax,%rdi
   11c5e:	e8 d5 ff ff ff       	call   11c38 <_ZNKSt16initializer_listIPKcE5beginEv>
   11c63:	48 89 c3             	mov    %rax,%rbx
   11c66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c6a:	48 89 c7             	mov    %rax,%rdi
   11c6d:	e8 62 16 00 00       	call   132d4 <_ZNKSt16initializer_listIPKcE4sizeEv>
   11c72:	48 c1 e0 03          	shl    $0x3,%rax
   11c76:	48 01 d8             	add    %rbx,%rax
   11c79:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11c7d:	c9                   	leave
   11c7e:	c3                   	ret

0000000000011c7f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   11c7f:	55                   	push   %rbp
   11c80:	48 89 e5             	mov    %rsp,%rbp
   11c83:	48 83 ec 10          	sub    $0x10,%rsp
   11c87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c8b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   11c8f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c93:	48 89 c7             	mov    %rax,%rdi
   11c96:	e8 4b 16 00 00       	call   132e6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   11c9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11ca3:	48 89 d6             	mov    %rdx,%rsi
   11ca6:	48 89 c7             	mov    %rax,%rdi
   11ca9:	e8 43 16 00 00       	call   132f1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   11cae:	c9                   	leave
   11caf:	c3                   	ret

0000000000011cb0 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   11cb0:	55                   	push   %rbp
   11cb1:	48 89 e5             	mov    %rsp,%rbp
   11cb4:	53                   	push   %rbx
   11cb5:	48 83 ec 38          	sub    $0x38,%rsp
   11cb9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11cbd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11cc1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   11cc5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11cc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ccd:	48 89 d6             	mov    %rdx,%rsi
   11cd0:	48 89 c7             	mov    %rax,%rdi
   11cd3:	e8 a7 ff ff ff       	call   11c7f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   11cd8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   11cdc:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   11ce0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11ce4:	48 89 c7             	mov    %rax,%rdi
   11ce7:	e8 c6 72 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11cec:	48 89 c2             	mov    %rax,%rdx
   11cef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cf3:	48 89 d6             	mov    %rdx,%rsi
   11cf6:	48 89 c7             	mov    %rax,%rdi
   11cf9:	e8 b5 71 ff ff       	call   8eb3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   11cfe:	48 89 c6             	mov    %rax,%rsi
   11d01:	48 89 df             	mov    %rbx,%rdi
   11d04:	e8 bf 8c ff ff       	call   a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11d09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11d0d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11d10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d14:	48 8b 00             	mov    (%rax),%rax
   11d17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11d1b:	48 c1 e2 03          	shl    $0x3,%rdx
   11d1f:	48 01 c2             	add    %rax,%rdx
   11d22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d26:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   11d2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d2e:	48 89 c7             	mov    %rax,%rdi
   11d31:	e8 7c 72 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11d36:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   11d39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d3d:	48 8b 10             	mov    (%rax),%rdx
   11d40:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   11d44:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11d48:	48 89 c7             	mov    %rax,%rdi
   11d4b:	e8 bb 15 00 00       	call   1330b <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   11d50:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11d54:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   11d58:	90                   	nop
   11d59:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11d5d:	c9                   	leave
   11d5e:	c3                   	ret

0000000000011d5f <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   11d5f:	55                   	push   %rbp
   11d60:	48 89 e5             	mov    %rsp,%rbp
   11d63:	48 83 ec 20          	sub    $0x20,%rsp
   11d67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11d6f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   11d73:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d7b:	48 89 d6             	mov    %rdx,%rsi
   11d7e:	48 89 c7             	mov    %rax,%rdi
   11d81:	e8 b6 15 00 00       	call   1333c <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   11d86:	90                   	nop
   11d87:	c9                   	leave
   11d88:	c3                   	ret
   11d89:	90                   	nop

0000000000011d8a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11d8a:	55                   	push   %rbp
   11d8b:	48 89 e5             	mov    %rsp,%rbp
   11d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11d96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d9a:	48 8b 10             	mov    (%rax),%rdx
   11d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11da1:	48 89 10             	mov    %rdx,(%rax)
   11da4:	90                   	nop
   11da5:	5d                   	pop    %rbp
   11da6:	c3                   	ret
   11da7:	90                   	nop

0000000000011da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11da8:	55                   	push   %rbp
   11da9:	48 89 e5             	mov    %rsp,%rbp
   11dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11db4:	5d                   	pop    %rbp
   11db5:	c3                   	ret

0000000000011db6 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11db6:	55                   	push   %rbp
   11db7:	48 89 e5             	mov    %rsp,%rbp
   11dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dc2:	5d                   	pop    %rbp
   11dc3:	c3                   	ret

0000000000011dc4 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   11dc4:	55                   	push   %rbp
   11dc5:	48 89 e5             	mov    %rsp,%rbp
   11dc8:	48 83 ec 20          	sub    $0x20,%rsp
   11dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11dd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11dd4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   11dd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ddc:	48 89 c7             	mov    %rax,%rdi
   11ddf:	e8 d2 ff ff ff       	call   11db6 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11de4:	48 89 c2             	mov    %rax,%rdx
   11de7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11deb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11def:	48 89 ce             	mov    %rcx,%rsi
   11df2:	48 89 c7             	mov    %rax,%rdi
   11df5:	e8 68 15 00 00       	call   13362 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   11dfa:	90                   	nop
   11dfb:	c9                   	leave
   11dfc:	c3                   	ret
   11dfd:	90                   	nop

0000000000011dfe <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   11dfe:	55                   	push   %rbp
   11dff:	48 89 e5             	mov    %rsp,%rbp
   11e02:	53                   	push   %rbx
   11e03:	48 83 ec 68          	sub    $0x68,%rsp
   11e07:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   11e0b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   11e0f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   11e13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e17:	48 8d 15 a4 8e 00 00 	lea    0x8ea4(%rip),%rdx        # 1acc2 <_ZN6__pstl9execution2v1L5unseqE+0x393>
   11e1e:	be 01 00 00 00       	mov    $0x1,%esi
   11e23:	48 89 c7             	mov    %rax,%rdi
   11e26:	e8 79 15 00 00       	call   133a4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   11e2b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   11e2f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e33:	48 8b 00             	mov    (%rax),%rax
   11e36:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   11e3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e3e:	48 8b 40 08          	mov    0x8(%rax),%rax
   11e42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   11e46:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e4a:	48 89 c7             	mov    %rax,%rdi
   11e4d:	e8 8c ea ff ff       	call   108de <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   11e52:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   11e56:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   11e5a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11e5e:	48 89 d6             	mov    %rdx,%rsi
   11e61:	48 89 c7             	mov    %rax,%rdi
   11e64:	e8 03 16 00 00       	call   1346c <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   11e69:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   11e6d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11e71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11e75:	48 89 d6             	mov    %rdx,%rsi
   11e78:	48 89 c7             	mov    %rax,%rdi
   11e7b:	e8 48 8b ff ff       	call   a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11e80:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   11e84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e88:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   11e8c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11e90:	48 89 c7             	mov    %rax,%rdi
   11e93:	e8 1e ff ff ff       	call   11db6 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11e98:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   11e9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e9f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11ea6:	00 
	  _Alloc_traits::construct(this->_M_impl,
   11ea7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11eab:	48 01 c1             	add    %rax,%rcx
   11eae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11eb2:	48 89 ce             	mov    %rcx,%rsi
   11eb5:	48 89 c7             	mov    %rax,%rdi
   11eb8:	e8 07 ff ff ff       	call   11dc4 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   11ebd:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   11ec4:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   11ec5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11ec9:	48 89 c7             	mov    %rax,%rdi
   11ecc:	e8 e1 70 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11ed1:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   11ed4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11ed8:	48 89 c7             	mov    %rax,%rdi
   11edb:	e8 c8 fe ff ff       	call   11da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11ee0:	48 8b 30             	mov    (%rax),%rsi
   11ee3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ee7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11eeb:	48 89 d9             	mov    %rbx,%rcx
   11eee:	48 89 c7             	mov    %rax,%rdi
   11ef1:	e8 b8 15 00 00       	call   134ae <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11ef6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   11efa:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   11eff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f03:	48 89 c7             	mov    %rax,%rdi
   11f06:	e8 a7 70 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11f0b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   11f0e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11f12:	48 89 c7             	mov    %rax,%rdi
   11f15:	e8 8e fe ff ff       	call   11da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11f1a:	48 8b 00             	mov    (%rax),%rax
   11f1d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11f21:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11f25:	48 89 d9             	mov    %rbx,%rcx
   11f28:	48 89 c7             	mov    %rax,%rdi
   11f2b:	e8 7e 15 00 00       	call   134ae <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11f30:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   11f34:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   11f38:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   11f3c:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   11f40:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   11f44:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   11f48:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11f4c:	48 89 ce             	mov    %rcx,%rsi
   11f4f:	48 89 c7             	mov    %rax,%rdi
   11f52:	e8 8f 70 ff ff       	call   8fe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   11f57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f5b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f5f:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   11f62:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f66:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11f6a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   11f6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f72:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11f79:	00 
   11f7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f7e:	48 01 c2             	add    %rax,%rdx
   11f81:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11f85:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   11f89:	90                   	nop
   11f8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11f8e:	c9                   	leave
   11f8f:	c3                   	ret

0000000000011f90 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   11f90:	55                   	push   %rbp
   11f91:	48 89 e5             	mov    %rsp,%rbp
   11f94:	48 83 ec 20          	sub    $0x20,%rsp
   11f98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   11f9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fa0:	48 89 c7             	mov    %rax,%rdi
   11fa3:	e8 5c e9 ff ff       	call   10904 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11fa8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11fac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11fb0:	be 01 00 00 00       	mov    $0x1,%esi
   11fb5:	48 89 c7             	mov    %rax,%rdi
   11fb8:	e8 23 15 00 00       	call   134e0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   11fbd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11fc1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   11fc5:	48 89 c7             	mov    %rax,%rdi
   11fc8:	e8 bb e9 ff ff       	call   10988 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   11fcd:	c9                   	leave
   11fce:	c3                   	ret
   11fcf:	90                   	nop

0000000000011fd0 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   11fd0:	55                   	push   %rbp
   11fd1:	48 89 e5             	mov    %rsp,%rbp
   11fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11fd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   11fdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11fe0:	5d                   	pop    %rbp
   11fe1:	c3                   	ret

0000000000011fe2 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11fe2:	55                   	push   %rbp
   11fe3:	48 89 e5             	mov    %rsp,%rbp
   11fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fee:	5d                   	pop    %rbp
   11fef:	c3                   	ret

0000000000011ff0 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11ff0:	55                   	push   %rbp
   11ff1:	48 89 e5             	mov    %rsp,%rbp
   11ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ffc:	5d                   	pop    %rbp
   11ffd:	c3                   	ret

0000000000011ffe <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11ffe:	55                   	push   %rbp
   11fff:	48 89 e5             	mov    %rsp,%rbp
   12002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1200a:	5d                   	pop    %rbp
   1200b:	c3                   	ret

000000000001200c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   1200c:	55                   	push   %rbp
   1200d:	48 89 e5             	mov    %rsp,%rbp
   12010:	48 83 ec 20          	sub    $0x20,%rsp
   12014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12018:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   1201c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12020:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12024:	48 89 d6             	mov    %rdx,%rsi
   12027:	48 89 c7             	mov    %rax,%rdi
   1202a:	e8 f3 14 00 00       	call   13522 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   1202f:	90                   	nop
   12030:	c9                   	leave
   12031:	c3                   	ret

0000000000012032 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   12032:	55                   	push   %rbp
   12033:	48 89 e5             	mov    %rsp,%rbp
   12036:	53                   	push   %rbx
   12037:	48 83 ec 18          	sub    $0x18,%rsp
   1203b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1203f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   12043:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12047:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1204b:	48 89 c7             	mov    %rax,%rdi
   1204e:	e8 ab ff ff ff       	call   11ffe <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12053:	48 89 c6             	mov    %rax,%rsi
   12056:	48 89 df             	mov    %rbx,%rdi
   12059:	e8 ae ff ff ff       	call   1200c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   1205e:	90                   	nop
   1205f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12063:	c9                   	leave
   12064:	c3                   	ret
   12065:	90                   	nop

0000000000012066 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12066:	55                   	push   %rbp
   12067:	48 89 e5             	mov    %rsp,%rbp
   1206a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1206e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12072:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12076:	48 8b 10             	mov    (%rax),%rdx
   12079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1207d:	48 89 10             	mov    %rdx,(%rax)
   12080:	90                   	nop
   12081:	5d                   	pop    %rbp
   12082:	c3                   	ret
   12083:	90                   	nop

0000000000012084 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12084:	55                   	push   %rbp
   12085:	48 89 e5             	mov    %rsp,%rbp
   12088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1208c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12090:	5d                   	pop    %rbp
   12091:	c3                   	ret

0000000000012092 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   12092:	55                   	push   %rbp
   12093:	48 89 e5             	mov    %rsp,%rbp
   12096:	53                   	push   %rbx
   12097:	48 83 ec 18          	sub    $0x18,%rsp
   1209b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1209f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   120a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120a7:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   120ab:	84 c0                	test   %al,%al
   120ad:	74 35                	je     120e4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   120af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120b3:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   120b7:	84 c0                	test   %al,%al
   120b9:	74 29                	je     120e4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   120bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120bf:	48 89 c7             	mov    %rax,%rdi
   120c2:	e8 97 14 00 00       	call   1355e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   120c7:	48 89 c3             	mov    %rax,%rbx
   120ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120ce:	48 89 c7             	mov    %rax,%rdi
   120d1:	e8 4e 00 00 00       	call   12124 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   120d6:	48 89 de             	mov    %rbx,%rsi
   120d9:	48 89 c7             	mov    %rax,%rdi
   120dc:	e8 8b 14 00 00       	call   1356c <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   120e1:	90                   	nop
      }
   120e2:	eb 38                	jmp    1211c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   120e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120e8:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   120ec:	84 c0                	test   %al,%al
   120ee:	74 20                	je     12110 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   120f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120f4:	48 89 c7             	mov    %rax,%rdi
   120f7:	e8 62 14 00 00       	call   1355e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   120fc:	48 89 c2             	mov    %rax,%rdx
   120ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12103:	48 89 d6             	mov    %rdx,%rsi
   12106:	48 89 c7             	mov    %rax,%rdi
   12109:	e8 9c 14 00 00       	call   135aa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   1210e:	eb 0c                	jmp    1211c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   12110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12114:	48 89 c7             	mov    %rax,%rdi
   12117:	e8 d4 14 00 00       	call   135f0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   1211c:	90                   	nop
   1211d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12121:	c9                   	leave
   12122:	c3                   	ret
   12123:	90                   	nop

0000000000012124 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   12124:	55                   	push   %rbp
   12125:	48 89 e5             	mov    %rsp,%rbp
   12128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1212c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12130:	5d                   	pop    %rbp
   12131:	c3                   	ret

0000000000012132 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12132:	55                   	push   %rbp
   12133:	48 89 e5             	mov    %rsp,%rbp
   12136:	48 83 ec 10          	sub    $0x10,%rsp
   1213a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1213e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12142:	48 89 c7             	mov    %rax,%rdi
   12145:	e8 ce 14 00 00       	call   13618 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   1214a:	90                   	nop
   1214b:	c9                   	leave
   1214c:	c3                   	ret
   1214d:	90                   	nop

000000000001214e <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   1214e:	55                   	push   %rbp
   1214f:	48 89 e5             	mov    %rsp,%rbp
   12152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   12156:	90                   	nop
   12157:	5d                   	pop    %rbp
   12158:	c3                   	ret
   12159:	90                   	nop

000000000001215a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1215a:	55                   	push   %rbp
   1215b:	48 89 e5             	mov    %rsp,%rbp
   1215e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12162:	90                   	nop
   12163:	5d                   	pop    %rbp
   12164:	c3                   	ret
   12165:	90                   	nop

0000000000012166 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12166:	55                   	push   %rbp
   12167:	48 89 e5             	mov    %rsp,%rbp
   1216a:	48 83 ec 20          	sub    $0x20,%rsp
   1216e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12172:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   12176:	eb 49                	jmp    121c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   12178:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1217c:	48 89 c7             	mov    %rax,%rdi
   1217f:	e8 9f 14 00 00       	call   13623 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12184:	48 89 c2             	mov    %rax,%rdx
   12187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1218b:	48 89 d6             	mov    %rdx,%rsi
   1218e:	48 89 c7             	mov    %rax,%rdi
   12191:	e8 d0 ff ff ff       	call   12166 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   12196:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1219a:	48 89 c7             	mov    %rax,%rdi
   1219d:	e8 93 14 00 00       	call   13635 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   121a2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   121a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   121aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121ae:	48 89 d6             	mov    %rdx,%rsi
   121b1:	48 89 c7             	mov    %rax,%rdi
   121b4:	e8 8f 14 00 00       	call   13648 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   121b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121bd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   121c1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   121c6:	75 b0                	jne    12178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   121c8:	90                   	nop
   121c9:	90                   	nop
   121ca:	c9                   	leave
   121cb:	c3                   	ret

00000000000121cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   121cc:	55                   	push   %rbp
   121cd:	48 89 e5             	mov    %rsp,%rbp
   121d0:	48 83 ec 10          	sub    $0x10,%rsp
   121d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   121d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121dc:	48 89 c7             	mov    %rax,%rdi
   121df:	e8 9e 14 00 00       	call   13682 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   121e4:	c9                   	leave
   121e5:	c3                   	ret

00000000000121e6 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   121e6:	55                   	push   %rbp
   121e7:	48 89 e5             	mov    %rsp,%rbp
   121ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   121f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   121f6:	48 8b 10             	mov    (%rax),%rdx
   121f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121fd:	48 89 10             	mov    %rdx,(%rax)
   12200:	90                   	nop
   12201:	5d                   	pop    %rbp
   12202:	c3                   	ret
   12203:	90                   	nop

0000000000012204 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12204:	55                   	push   %rbp
   12205:	48 89 e5             	mov    %rsp,%rbp
   12208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1220c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12210:	5d                   	pop    %rbp
   12211:	c3                   	ret

0000000000012212 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   12212:	55                   	push   %rbp
   12213:	48 89 e5             	mov    %rsp,%rbp
   12216:	48 83 ec 10          	sub    $0x10,%rsp
   1221a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1221e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   12222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12226:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1222a:	48 89 d6             	mov    %rdx,%rsi
   1222d:	48 89 c7             	mov    %rax,%rdi
   12230:	e8 5f 14 00 00       	call   13694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   12235:	c9                   	leave
   12236:	c3                   	ret
   12237:	90                   	nop

0000000000012238 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12238:	55                   	push   %rbp
   12239:	48 89 e5             	mov    %rsp,%rbp
   1223c:	48 83 ec 10          	sub    $0x10,%rsp
   12240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   12244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12248:	48 89 c7             	mov    %rax,%rdi
   1224b:	e8 90 14 00 00       	call   136e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   12250:	c9                   	leave
   12251:	c3                   	ret

0000000000012252 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   12252:	55                   	push   %rbp
   12253:	48 89 e5             	mov    %rsp,%rbp
   12256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1225a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   1225e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12262:	48 8b 10             	mov    (%rax),%rdx
   12265:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12269:	48 8b 00             	mov    (%rax),%rax
   1226c:	48 39 c2             	cmp    %rax,%rdx
   1226f:	0f 94 c0             	sete   %al
   12272:	5d                   	pop    %rbp
   12273:	c3                   	ret

0000000000012274 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   12274:	55                   	push   %rbp
   12275:	48 89 e5             	mov    %rsp,%rbp
   12278:	48 83 ec 10          	sub    $0x10,%rsp
   1227c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   12280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12284:	48 89 c7             	mov    %rax,%rdi
   12287:	e8 7e 14 00 00       	call   1370a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   1228c:	90                   	nop
   1228d:	c9                   	leave
   1228e:	c3                   	ret
   1228f:	90                   	nop

0000000000012290 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12290:	55                   	push   %rbp
   12291:	48 89 e5             	mov    %rsp,%rbp
   12294:	48 83 ec 10          	sub    $0x10,%rsp
   12298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   1229c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122a0:	48 8b 00             	mov    (%rax),%rax
   122a3:	48 89 c7             	mov    %rax,%rdi
   122a6:	e8 6b 14 00 00       	call   13716 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   122ab:	c9                   	leave
   122ac:	c3                   	ret
   122ad:	90                   	nop

00000000000122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   122ae:	55                   	push   %rbp
   122af:	48 89 e5             	mov    %rsp,%rbp
   122b2:	48 83 ec 20          	sub    $0x20,%rsp
   122b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   122be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   122c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   122c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   122ca:	48 89 d6             	mov    %rdx,%rsi
   122cd:	48 89 c7             	mov    %rax,%rdi
   122d0:	e8 5f 14 00 00       	call   13734 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   122d5:	c9                   	leave
   122d6:	c3                   	ret

00000000000122d7 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   122d7:	55                   	push   %rbp
   122d8:	48 89 e5             	mov    %rsp,%rbp
   122db:	48 83 ec 10          	sub    $0x10,%rsp
   122df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   122e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   122eb:	48 89 c7             	mov    %rax,%rdi
   122ee:	e8 69 14 00 00       	call   1375c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   122f3:	48 89 c2             	mov    %rax,%rdx
   122f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122fa:	48 89 d6             	mov    %rdx,%rsi
   122fd:	48 89 c7             	mov    %rax,%rdi
   12300:	e8 65 14 00 00       	call   1376a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   12305:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12309:	c9                   	leave
   1230a:	c3                   	ret
   1230b:	90                   	nop

000000000001230c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   1230c:	55                   	push   %rbp
   1230d:	48 89 e5             	mov    %rsp,%rbp
   12310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12314:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   12318:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1231c:	48 8b 10             	mov    (%rax),%rdx
   1231f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12323:	48 89 10             	mov    %rdx,(%rax)
   12326:	90                   	nop
   12327:	5d                   	pop    %rbp
   12328:	c3                   	ret
   12329:	90                   	nop

000000000001232a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1232a:	55                   	push   %rbp
   1232b:	48 89 e5             	mov    %rsp,%rbp
   1232e:	41 54                	push   %r12
   12330:	53                   	push   %rbx
   12331:	48 83 ec 60          	sub    $0x60,%rsp
   12335:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   12339:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1233d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   12341:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   12345:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   12349:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1234d:	48 89 c7             	mov    %rax,%rdi
   12350:	e8 64 14 00 00       	call   137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12355:	49 89 c4             	mov    %rax,%r12
   12358:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1235c:	48 89 c7             	mov    %rax,%rdi
   1235f:	e8 47 14 00 00       	call   137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12364:	48 89 c3             	mov    %rax,%rbx
   12367:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1236b:	48 89 c7             	mov    %rax,%rdi
   1236e:	e8 2a 14 00 00       	call   1379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12373:	48 89 c2             	mov    %rax,%rdx
   12376:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   1237a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1237e:	4d 89 e0             	mov    %r12,%r8
   12381:	48 89 d9             	mov    %rbx,%rcx
   12384:	48 89 c7             	mov    %rax,%rdi
   12387:	e8 3c 14 00 00       	call   137c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   1238c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12390:	48 89 c7             	mov    %rax,%rdi
   12393:	e8 30 19 00 00       	call   13cc8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   12398:	48 89 c2             	mov    %rax,%rdx
   1239b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1239f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   123a3:	48 89 ce             	mov    %rcx,%rsi
   123a6:	48 89 c7             	mov    %rax,%rdi
   123a9:	e8 cc 14 00 00       	call   1387a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   123ae:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   123b2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   123b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   123ba:	48 85 c0             	test   %rax,%rax
   123bd:	74 1c                	je     123db <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   123bf:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   123c3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   123c7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   123cb:	48 89 ce             	mov    %rcx,%rsi
   123ce:	48 89 c7             	mov    %rax,%rdi
   123d1:	e8 10 19 00 00       	call   13ce6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   123d6:	48 89 c3             	mov    %rax,%rbx
   123d9:	eb 17                	jmp    123f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   123db:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   123df:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   123e3:	48 89 d6             	mov    %rdx,%rsi
   123e6:	48 89 c7             	mov    %rax,%rdi
   123e9:	e8 4e 19 00 00       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   123ee:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   123f2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   123f6:	48 89 c7             	mov    %rax,%rdi
   123f9:	e8 46 14 00 00       	call   13844 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   123fe:	48 89 d8             	mov    %rbx,%rax
   12401:	eb 1a                	jmp    1241d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   12403:	48 89 c3             	mov    %rax,%rbx
   12406:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1240a:	48 89 c7             	mov    %rax,%rdi
   1240d:	e8 32 14 00 00       	call   13844 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   12412:	48 89 d8             	mov    %rbx,%rax
   12415:	48 89 c7             	mov    %rax,%rdi
   12418:	e8 d3 22 ff ff       	call   46f0 <_Unwind_Resume@plt>
   1241d:	48 83 c4 60          	add    $0x60,%rsp
   12421:	5b                   	pop    %rbx
   12422:	41 5c                	pop    %r12
   12424:	5d                   	pop    %rbp
   12425:	c3                   	ret

0000000000012426 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   12426:	55                   	push   %rbp
   12427:	48 89 e5             	mov    %rsp,%rbp
   1242a:	48 83 ec 20          	sub    $0x20,%rsp
   1242e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   12432:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12436:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1243a:	48 89 d6             	mov    %rdx,%rsi
   1243d:	48 89 c7             	mov    %rax,%rdi
   12440:	e8 11 19 00 00       	call   13d56 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   12445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12449:	c9                   	leave
   1244a:	c3                   	ret
   1244b:	90                   	nop

000000000001244c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   1244c:	55                   	push   %rbp
   1244d:	48 89 e5             	mov    %rsp,%rbp
   12450:	48 83 ec 20          	sub    $0x20,%rsp
   12454:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   12458:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1245c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12460:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12464:	48 89 d6             	mov    %rdx,%rsi
   12467:	48 89 c7             	mov    %rax,%rdi
   1246a:	e8 e7 18 00 00       	call   13d56 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   1246f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12473:	c9                   	leave
   12474:	c3                   	ret

0000000000012475 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   12475:	55                   	push   %rbp
   12476:	48 89 e5             	mov    %rsp,%rbp
   12479:	53                   	push   %rbx
   1247a:	48 83 ec 18          	sub    $0x18,%rsp
   1247e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12482:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   12486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1248a:	48 89 c7             	mov    %rax,%rdi
   1248d:	e8 e2 18 00 00       	call   13d74 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   12492:	48 8b 18             	mov    (%rax),%rbx
   12495:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12499:	48 89 c7             	mov    %rax,%rdi
   1249c:	e8 d3 18 00 00       	call   13d74 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   124a1:	48 8b 00             	mov    (%rax),%rax
   124a4:	48 39 c3             	cmp    %rax,%rbx
   124a7:	0f 94 c0             	sete   %al
   124aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   124ae:	c9                   	leave
   124af:	c3                   	ret

00000000000124b0 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   124b0:	55                   	push   %rbp
   124b1:	48 89 e5             	mov    %rsp,%rbp
   124b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   124bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124c0:	48 8b 10             	mov    (%rax),%rdx
   124c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124c7:	48 89 10             	mov    %rdx,(%rax)
   124ca:	90                   	nop
   124cb:	5d                   	pop    %rbp
   124cc:	c3                   	ret
   124cd:	90                   	nop

00000000000124ce <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   124ce:	55                   	push   %rbp
   124cf:	48 89 e5             	mov    %rsp,%rbp
   124d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   124d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124da:	5d                   	pop    %rbp
   124db:	c3                   	ret

00000000000124dc <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   124dc:	55                   	push   %rbp
   124dd:	48 89 e5             	mov    %rsp,%rbp
   124e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   124e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124ec:	48 8b 10             	mov    (%rax),%rdx
   124ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124f3:	48 89 10             	mov    %rdx,(%rax)
   124f6:	90                   	nop
   124f7:	5d                   	pop    %rbp
   124f8:	c3                   	ret
   124f9:	90                   	nop

00000000000124fa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   124fa:	55                   	push   %rbp
   124fb:	48 89 e5             	mov    %rsp,%rbp
   124fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12506:	5d                   	pop    %rbp
   12507:	c3                   	ret

0000000000012508 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   12508:	55                   	push   %rbp
   12509:	48 89 e5             	mov    %rsp,%rbp
   1250c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12514:	5d                   	pop    %rbp
   12515:	c3                   	ret

0000000000012516 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   12516:	55                   	push   %rbp
   12517:	48 89 e5             	mov    %rsp,%rbp
   1251a:	53                   	push   %rbx
   1251b:	48 83 ec 38          	sub    $0x38,%rsp
   1251f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12523:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   12527:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1252b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1252f:	48 89 d6             	mov    %rdx,%rsi
   12532:	48 89 c7             	mov    %rax,%rdi
   12535:	e8 48 18 00 00       	call   13d82 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   1253a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1253e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12542:	48 89 d6             	mov    %rdx,%rsi
   12545:	48 89 c7             	mov    %rax,%rdi
   12548:	e8 69 18 00 00       	call   13db6 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   1254d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   12551:	48 89 c7             	mov    %rax,%rdi
   12554:	e8 83 64 ff ff       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   12559:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1255d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12561:	48 89 d6             	mov    %rdx,%rsi
   12564:	48 89 c7             	mov    %rax,%rdi
   12567:	e8 70 18 00 00       	call   13ddc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   1256c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12570:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12574:	48 89 d6             	mov    %rdx,%rsi
   12577:	48 89 c7             	mov    %rax,%rdi
   1257a:	e8 5d 18 00 00       	call   13ddc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   1257f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12583:	48 89 c7             	mov    %rax,%rdi
   12586:	e8 05 75 ff ff       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1258b:	48 89 c3             	mov    %rax,%rbx
   1258e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12592:	48 89 c7             	mov    %rax,%rdi
   12595:	e8 f6 74 ff ff       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1259a:	48 89 de             	mov    %rbx,%rsi
   1259d:	48 89 c7             	mov    %rax,%rdi
   125a0:	e8 8f 18 00 00       	call   13e34 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   125a5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   125a9:	48 89 c7             	mov    %rax,%rdi
   125ac:	e8 bd 64 ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   125b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   125b5:	c9                   	leave
   125b6:	c3                   	ret
   125b7:	90                   	nop

00000000000125b8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   125b8:	55                   	push   %rbp
   125b9:	48 89 e5             	mov    %rsp,%rbp
   125bc:	53                   	push   %rbx
   125bd:	48 83 ec 38          	sub    $0x38,%rsp
   125c1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   125c5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   125c9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   125ce:	0f 84 e7 01 00 00    	je     127bb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   125d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125d8:	48 89 c7             	mov    %rax,%rdi
   125db:	e8 10 ef ff ff       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   125e0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   125e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   125ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125f0:	48 8b 40 08          	mov    0x8(%rax),%rax
   125f4:	48 29 c2             	sub    %rax,%rdx
   125f7:	48 89 d0             	mov    %rdx,%rax
   125fa:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   125fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   12602:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12606:	48 89 c7             	mov    %rax,%rdi
   12609:	e8 46 18 00 00       	call   13e54 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1260e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12612:	72 16                	jb     1262a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   12614:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12618:	48 89 c7             	mov    %rax,%rdi
   1261b:	e8 34 18 00 00       	call   13e54 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12620:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12624:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12628:	73 07                	jae    12631 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   1262a:	b8 01 00 00 00       	mov    $0x1,%eax
   1262f:	eb 05                	jmp    12636 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   12631:	b8 00 00 00 00       	mov    $0x0,%eax
   12636:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   12638:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1263c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   12640:	72 33                	jb     12675 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   12642:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12646:	48 89 c7             	mov    %rax,%rdi
   12649:	e8 9c 09 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1264e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   12651:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12655:	48 8b 40 08          	mov    0x8(%rax),%rax
   12659:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1265d:	48 89 ce             	mov    %rcx,%rsi
   12660:	48 89 c7             	mov    %rax,%rdi
   12663:	e8 0e 18 00 00       	call   13e76 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   12668:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1266c:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   12670:	e9 46 01 00 00       	jmp    127bb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   12675:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   12679:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1267d:	48 8d 15 58 86 00 00 	lea    0x8658(%rip),%rdx        # 1acdc <_ZN6__pstl9execution2v1L5unseqE+0x3ad>
   12684:	48 89 ce             	mov    %rcx,%rsi
   12687:	48 89 c7             	mov    %rax,%rdi
   1268a:	e8 11 18 00 00       	call   13ea0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   1268f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   12693:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12697:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1269b:	48 89 d6             	mov    %rdx,%rsi
   1269e:	48 89 c7             	mov    %rax,%rdi
   126a1:	e8 c2 18 00 00       	call   13f68 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   126a6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   126aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126ae:	48 89 c7             	mov    %rax,%rdi
   126b1:	e8 34 09 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   126b6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   126b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126bd:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   126c4:	00 
   126c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   126c9:	48 01 c1             	add    %rax,%rcx
   126cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   126d0:	48 89 c6             	mov    %rax,%rsi
   126d3:	48 89 cf             	mov    %rcx,%rdi
   126d6:	e8 9b 17 00 00       	call   13e76 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   126db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126df:	48 89 c7             	mov    %rax,%rdi
   126e2:	e8 03 09 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   126e7:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   126ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126ee:	48 8b 70 08          	mov    0x8(%rax),%rsi
   126f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126f6:	48 8b 00             	mov    (%rax),%rax
   126f9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   126fd:	48 89 c7             	mov    %rax,%rdi
   12700:	e8 96 18 00 00       	call   13f9b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   12705:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   12709:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1270d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   12711:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12715:	48 8b 12             	mov    (%rdx),%rdx
   12718:	48 29 d1             	sub    %rdx,%rcx
   1271b:	48 c1 f9 03          	sar    $0x3,%rcx
   1271f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   12722:	48 89 d6             	mov    %rdx,%rsi
   12725:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12729:	48 8b 0a             	mov    (%rdx),%rcx
   1272c:	48 89 f2             	mov    %rsi,%rdx
   1272f:	48 89 ce             	mov    %rcx,%rsi
   12732:	48 89 c7             	mov    %rax,%rdi
   12735:	e8 28 09 00 00       	call   13062 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   1273a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1273e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12742:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   12745:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12749:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1274d:	48 01 d0             	add    %rdx,%rax
   12750:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12757:	00 
   12758:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1275c:	48 01 c2             	add    %rax,%rdx
   1275f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12763:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   12767:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1276b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12772:	00 
   12773:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12777:	48 01 c2             	add    %rax,%rdx
   1277a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1277e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12782:	eb 37                	jmp    127bb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   12784:	48 89 c7             	mov    %rax,%rdi
   12787:	e8 94 19 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1278c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12790:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12794:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   12798:	48 89 ce             	mov    %rcx,%rsi
   1279b:	48 89 c7             	mov    %rax,%rdi
   1279e:	e8 bf 08 00 00       	call   13062 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   127a3:	e8 28 1e ff ff       	call   45d0 <__cxa_rethrow@plt>
		  __catch(...)
   127a8:	48 89 c3             	mov    %rax,%rbx
   127ab:	e8 c0 1e ff ff       	call   4670 <__cxa_end_catch@plt>
   127b0:	48 89 d8             	mov    %rbx,%rax
   127b3:	48 89 c7             	mov    %rax,%rdi
   127b6:	e8 35 1f ff ff       	call   46f0 <_Unwind_Resume@plt>
    }
   127bb:	90                   	nop
   127bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   127c0:	c9                   	leave
   127c1:	c3                   	ret

00000000000127c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   127c2:	55                   	push   %rbp
   127c3:	48 89 e5             	mov    %rsp,%rbp
   127c6:	48 83 ec 20          	sub    $0x20,%rsp
   127ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   127ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   127d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127d6:	48 8b 40 08          	mov    0x8(%rax),%rax
   127da:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   127de:	48 c1 f8 03          	sar    $0x3,%rax
   127e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   127e6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   127eb:	74 32                	je     1281f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   127ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127f1:	48 89 c7             	mov    %rax,%rdi
   127f4:	e8 f1 07 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   127f9:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   127fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12800:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12804:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12808:	48 89 ce             	mov    %rcx,%rsi
   1280b:	48 89 c7             	mov    %rax,%rdi
   1280e:	e8 e5 07 00 00       	call   12ff8 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   12813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12817:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1281b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1281f:	90                   	nop
   12820:	c9                   	leave
   12821:	c3                   	ret

0000000000012822 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12822:	55                   	push   %rbp
   12823:	48 89 e5             	mov    %rsp,%rbp
   12826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1282a:	90                   	nop
   1282b:	5d                   	pop    %rbp
   1282c:	c3                   	ret
   1282d:	90                   	nop

000000000001282e <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1282e:	55                   	push   %rbp
   1282f:	48 89 e5             	mov    %rsp,%rbp
   12832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12836:	90                   	nop
   12837:	5d                   	pop    %rbp
   12838:	c3                   	ret
   12839:	90                   	nop

000000000001283a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1283a:	55                   	push   %rbp
   1283b:	48 89 e5             	mov    %rsp,%rbp
   1283e:	48 83 ec 10          	sub    $0x10,%rsp
   12842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1284a:	48 89 c7             	mov    %rax,%rdi
   1284d:	e8 0a ea ff ff       	call   1125c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   12852:	90                   	nop
   12853:	c9                   	leave
   12854:	c3                   	ret
   12855:	90                   	nop

0000000000012856 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   12856:	55                   	push   %rbp
   12857:	48 89 e5             	mov    %rsp,%rbp
   1285a:	48 83 ec 10          	sub    $0x10,%rsp
   1285e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   12866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1286a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1286e:	48 89 d6             	mov    %rdx,%rsi
   12871:	48 89 c7             	mov    %rax,%rdi
   12874:	e8 55 17 00 00       	call   13fce <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   12879:	90                   	nop
   1287a:	c9                   	leave
   1287b:	c3                   	ret

000000000001287c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1287c:	55                   	push   %rbp
   1287d:	48 89 e5             	mov    %rsp,%rbp
   12880:	48 83 ec 10          	sub    $0x10,%rsp
   12884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1288c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12894:	48 8b 00             	mov    (%rax),%rax
   12897:	48 29 c2             	sub    %rax,%rdx
   1289a:	48 c1 fa 04          	sar    $0x4,%rdx
   1289e:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   128a5:	e3 38 8e 
   128a8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   128ac:	48 89 c2             	mov    %rax,%rdx
   128af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128b3:	48 8b 08             	mov    (%rax),%rcx
   128b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128ba:	48 89 ce             	mov    %rcx,%rsi
   128bd:	48 89 c7             	mov    %rax,%rdi
   128c0:	e8 3b 17 00 00       	call   14000 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   128c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128c9:	48 89 c7             	mov    %rax,%rdi
   128cc:	e8 69 ff ff ff       	call   1283a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   128d1:	90                   	nop
   128d2:	c9                   	leave
   128d3:	c3                   	ret

00000000000128d4 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   128d4:	55                   	push   %rbp
   128d5:	48 89 e5             	mov    %rsp,%rbp
   128d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128e0:	48 8b 00             	mov    (%rax),%rax
   128e3:	5d                   	pop    %rbp
   128e4:	c3                   	ret
   128e5:	90                   	nop

00000000000128e6 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   128e6:	55                   	push   %rbp
   128e7:	48 89 e5             	mov    %rsp,%rbp
   128ea:	53                   	push   %rbx
   128eb:	48 83 ec 18          	sub    $0x18,%rsp
   128ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   128f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128f7:	48 89 c7             	mov    %rax,%rdi
   128fa:	e8 d5 ff ff ff       	call   128d4 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   128ff:	48 89 c3             	mov    %rax,%rbx
   12902:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12906:	48 89 c7             	mov    %rax,%rdi
   12909:	e8 28 17 00 00       	call   14036 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   1290e:	48 89 c2             	mov    %rax,%rdx
   12911:	48 89 d0             	mov    %rdx,%rax
   12914:	48 c1 e0 03          	shl    $0x3,%rax
   12918:	48 01 d0             	add    %rdx,%rax
   1291b:	48 c1 e0 04          	shl    $0x4,%rax
   1291f:	48 01 d8             	add    %rbx,%rax
   12922:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12926:	c9                   	leave
   12927:	c3                   	ret

0000000000012928 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   12928:	55                   	push   %rbp
   12929:	48 89 e5             	mov    %rsp,%rbp
   1292c:	48 83 ec 10          	sub    $0x10,%rsp
   12930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12934:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   12938:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1293c:	48 89 c7             	mov    %rax,%rdi
   1293f:	e8 04 17 00 00       	call   14048 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   12944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12948:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1294c:	48 89 d6             	mov    %rdx,%rsi
   1294f:	48 89 c7             	mov    %rax,%rdi
   12952:	e8 fc 16 00 00       	call   14053 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   12957:	c9                   	leave
   12958:	c3                   	ret
   12959:	90                   	nop

000000000001295a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1295a:	55                   	push   %rbp
   1295b:	48 89 e5             	mov    %rsp,%rbp
   1295e:	53                   	push   %rbx
   1295f:	48 83 ec 38          	sub    $0x38,%rsp
   12963:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12967:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1296b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1296f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12973:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12977:	48 89 d6             	mov    %rdx,%rsi
   1297a:	48 89 c7             	mov    %rax,%rdi
   1297d:	e8 a6 ff ff ff       	call   12928 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   12982:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12986:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1298a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1298e:	48 89 c7             	mov    %rax,%rdi
   12991:	e8 7e 00 00 00       	call   12a14 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   12996:	48 89 c2             	mov    %rax,%rdx
   12999:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1299d:	48 89 d6             	mov    %rdx,%rsi
   129a0:	48 89 c7             	mov    %rax,%rdi
   129a3:	e8 d6 16 00 00       	call   1407e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   129a8:	48 89 c6             	mov    %rax,%rsi
   129ab:	48 89 df             	mov    %rbx,%rdi
   129ae:	e8 2b 17 00 00       	call   140de <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   129b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   129b7:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   129ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129be:	48 8b 08             	mov    (%rax),%rcx
   129c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   129c5:	48 89 d0             	mov    %rdx,%rax
   129c8:	48 c1 e0 03          	shl    $0x3,%rax
   129cc:	48 01 d0             	add    %rdx,%rax
   129cf:	48 c1 e0 04          	shl    $0x4,%rax
   129d3:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   129d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129db:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   129df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129e3:	48 89 c7             	mov    %rax,%rdi
   129e6:	e8 29 00 00 00       	call   12a14 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   129eb:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   129ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129f2:	48 8b 10             	mov    (%rax),%rdx
   129f5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   129f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   129fd:	48 89 c7             	mov    %rax,%rdi
   12a00:	e8 0c 17 00 00       	call   14111 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   12a05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12a09:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   12a0d:	90                   	nop
   12a0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12a12:	c9                   	leave
   12a13:	c3                   	ret

0000000000012a14 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12a14:	55                   	push   %rbp
   12a15:	48 89 e5             	mov    %rsp,%rbp
   12a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a20:	5d                   	pop    %rbp
   12a21:	c3                   	ret

0000000000012a22 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12a22:	55                   	push   %rbp
   12a23:	48 89 e5             	mov    %rsp,%rbp
   12a26:	48 83 ec 20          	sub    $0x20,%rsp
   12a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12a32:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12a36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a3e:	48 89 d6             	mov    %rdx,%rsi
   12a41:	48 89 c7             	mov    %rax,%rdi
   12a44:	e8 f9 16 00 00       	call   14142 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   12a49:	90                   	nop
   12a4a:	c9                   	leave
   12a4b:	c3                   	ret

0000000000012a4c <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12a4c:	55                   	push   %rbp
   12a4d:	48 89 e5             	mov    %rsp,%rbp
   12a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a58:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a60:	48 8b 00             	mov    (%rax),%rax
   12a63:	48 29 c2             	sub    %rax,%rdx
   12a66:	48 c1 fa 04          	sar    $0x4,%rdx
   12a6a:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   12a71:	e3 38 8e 
   12a74:	48 0f af c2          	imul   %rdx,%rax
   12a78:	5d                   	pop    %rbp
   12a79:	c3                   	ret

0000000000012a7a <_ZNSaIP12VkPipeline_TEC1Ev>:
   12a7a:	55                   	push   %rbp
   12a7b:	48 89 e5             	mov    %rsp,%rbp
   12a7e:	48 83 ec 10          	sub    $0x10,%rsp
   12a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a8a:	48 89 c7             	mov    %rax,%rdi
   12a8d:	e8 d6 16 00 00       	call   14168 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   12a92:	90                   	nop
   12a93:	c9                   	leave
   12a94:	c3                   	ret
   12a95:	90                   	nop

0000000000012a96 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12a96:	55                   	push   %rbp
   12a97:	48 89 e5             	mov    %rsp,%rbp
   12a9a:	48 83 ec 10          	sub    $0x10,%rsp
   12a9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aa6:	48 89 c7             	mov    %rax,%rdi
   12aa9:	e8 c6 16 00 00       	call   14174 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   12aae:	90                   	nop
   12aaf:	c9                   	leave
   12ab0:	c3                   	ret
   12ab1:	90                   	nop

0000000000012ab2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   12ab2:	55                   	push   %rbp
   12ab3:	48 89 e5             	mov    %rsp,%rbp
   12ab6:	53                   	push   %rbx
   12ab7:	48 83 ec 28          	sub    $0x28,%rsp
   12abb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12abf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12ac3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   12ac7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12acb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12acf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12ad3:	48 89 d6             	mov    %rdx,%rsi
   12ad6:	48 89 c7             	mov    %rax,%rdi
   12ad9:	e8 a1 16 00 00       	call   1417f <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   12ade:	48 89 c1             	mov    %rax,%rcx
   12ae1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ae5:	48 89 c2             	mov    %rax,%rdx
   12ae8:	48 89 ce             	mov    %rcx,%rsi
   12aeb:	48 89 df             	mov    %rbx,%rdi
   12aee:	e8 ed 16 00 00       	call   141e0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   12af3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12af7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12afb:	48 89 d6             	mov    %rdx,%rsi
   12afe:	48 89 c7             	mov    %rax,%rdi
   12b01:	e8 38 17 00 00       	call   1423e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   12b06:	eb 1a                	jmp    12b22 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   12b08:	48 89 c3             	mov    %rax,%rbx
   12b0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b0f:	48 89 c7             	mov    %rax,%rdi
   12b12:	e8 59 00 00 00       	call   12b70 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   12b17:	48 89 d8             	mov    %rbx,%rax
   12b1a:	48 89 c7             	mov    %rax,%rdi
   12b1d:	e8 ce 1b ff ff       	call   46f0 <_Unwind_Resume@plt>
   12b22:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12b26:	c9                   	leave
   12b27:	c3                   	ret

0000000000012b28 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   12b28:	55                   	push   %rbp
   12b29:	48 89 e5             	mov    %rsp,%rbp
   12b2c:	48 83 ec 10          	sub    $0x10,%rsp
   12b30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b38:	48 8b 10             	mov    (%rax),%rdx
   12b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b3f:	48 89 d6             	mov    %rdx,%rsi
   12b42:	48 89 c7             	mov    %rax,%rdi
   12b45:	e8 34 17 00 00       	call   1427e <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   12b4a:	c9                   	leave
   12b4b:	c3                   	ret

0000000000012b4c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   12b4c:	55                   	push   %rbp
   12b4d:	48 89 e5             	mov    %rsp,%rbp
   12b50:	48 83 ec 10          	sub    $0x10,%rsp
   12b54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b5c:	48 8b 10             	mov    (%rax),%rdx
   12b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b63:	48 89 d6             	mov    %rdx,%rsi
   12b66:	48 89 c7             	mov    %rax,%rdi
   12b69:	e8 22 17 00 00       	call   14290 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12b6e:	c9                   	leave
   12b6f:	c3                   	ret

0000000000012b70 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12b70:	55                   	push   %rbp
   12b71:	48 89 e5             	mov    %rsp,%rbp
   12b74:	48 83 ec 10          	sub    $0x10,%rsp
   12b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b80:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b88:	48 8b 00             	mov    (%rax),%rax
   12b8b:	48 29 c2             	sub    %rax,%rdx
   12b8e:	48 89 d0             	mov    %rdx,%rax
   12b91:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12b95:	48 89 c2             	mov    %rax,%rdx
   12b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b9c:	48 8b 08             	mov    (%rax),%rcx
   12b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ba3:	48 89 ce             	mov    %rcx,%rsi
   12ba6:	48 89 c7             	mov    %rax,%rdi
   12ba9:	e8 1a 17 00 00       	call   142c8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bb2:	48 89 c7             	mov    %rax,%rdi
   12bb5:	e8 8a e7 ff ff       	call   11344 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   12bba:	90                   	nop
   12bbb:	c9                   	leave
   12bbc:	c3                   	ret
   12bbd:	90                   	nop

0000000000012bbe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12bbe:	55                   	push   %rbp
   12bbf:	48 89 e5             	mov    %rsp,%rbp
   12bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bca:	5d                   	pop    %rbp
   12bcb:	c3                   	ret

0000000000012bcc <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12bcc:	55                   	push   %rbp
   12bcd:	48 89 e5             	mov    %rsp,%rbp
   12bd0:	48 83 ec 20          	sub    $0x20,%rsp
   12bd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12bd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12bdc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12be0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be8:	48 89 d6             	mov    %rdx,%rsi
   12beb:	48 89 c7             	mov    %rax,%rdi
   12bee:	e8 0a 17 00 00       	call   142fd <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   12bf3:	90                   	nop
   12bf4:	c9                   	leave
   12bf5:	c3                   	ret

0000000000012bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12bf6:	55                   	push   %rbp
   12bf7:	48 89 e5             	mov    %rsp,%rbp
   12bfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c02:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c0a:	48 8b 00             	mov    (%rax),%rax
   12c0d:	48 29 c2             	sub    %rax,%rdx
   12c10:	48 89 d0             	mov    %rdx,%rax
   12c13:	48 c1 f8 03          	sar    $0x3,%rax
   12c17:	5d                   	pop    %rbp
   12c18:	c3                   	ret
   12c19:	90                   	nop

0000000000012c1a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   12c1a:	55                   	push   %rbp
   12c1b:	48 89 e5             	mov    %rsp,%rbp
   12c1e:	53                   	push   %rbx
   12c1f:	48 83 ec 38          	sub    $0x38,%rsp
   12c23:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12c27:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   12c2b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   12c30:	0f 84 e7 01 00 00    	je     12e1d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   12c36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c3a:	48 89 c7             	mov    %rax,%rdi
   12c3d:	e8 b4 ff ff ff       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12c42:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   12c46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c4a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   12c4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c52:	48 8b 40 08          	mov    0x8(%rax),%rax
   12c56:	48 29 c2             	sub    %rax,%rdx
   12c59:	48 89 d0             	mov    %rdx,%rax
   12c5c:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   12c60:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   12c64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c68:	48 89 c7             	mov    %rax,%rdi
   12c6b:	e8 b4 16 00 00       	call   14324 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12c70:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12c74:	72 16                	jb     12c8c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   12c76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12c7a:	48 89 c7             	mov    %rax,%rdi
   12c7d:	e8 a2 16 00 00       	call   14324 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12c82:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12c86:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   12c8a:	73 07                	jae    12c93 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   12c8c:	b8 01 00 00 00       	mov    $0x1,%eax
   12c91:	eb 05                	jmp    12c98 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   12c93:	b8 00 00 00 00       	mov    $0x0,%eax
   12c98:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   12c9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c9e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   12ca2:	72 33                	jb     12cd7 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   12ca4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12ca8:	48 89 c7             	mov    %rax,%rdi
   12cab:	e8 74 04 00 00       	call   13124 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12cb0:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   12cb3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cb7:	48 8b 40 08          	mov    0x8(%rax),%rax
   12cbb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   12cbf:	48 89 ce             	mov    %rcx,%rsi
   12cc2:	48 89 c7             	mov    %rax,%rdi
   12cc5:	e8 7c 16 00 00       	call   14346 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   12cca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12cce:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   12cd2:	e9 46 01 00 00       	jmp    12e1d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   12cd7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   12cdb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cdf:	48 8d 15 f6 7f 00 00 	lea    0x7ff6(%rip),%rdx        # 1acdc <_ZN6__pstl9execution2v1L5unseqE+0x3ad>
   12ce6:	48 89 ce             	mov    %rcx,%rsi
   12ce9:	48 89 c7             	mov    %rax,%rdi
   12cec:	e8 7f 16 00 00       	call   14370 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   12cf1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   12cf5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cf9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12cfd:	48 89 d6             	mov    %rdx,%rsi
   12d00:	48 89 c7             	mov    %rax,%rdi
   12d03:	e8 30 17 00 00       	call   14438 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   12d08:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   12d0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d10:	48 89 c7             	mov    %rax,%rdi
   12d13:	e8 0c 04 00 00       	call   13124 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12d18:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   12d1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d1f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   12d26:	00 
   12d27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12d2b:	48 01 c1             	add    %rax,%rcx
   12d2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12d32:	48 89 c6             	mov    %rax,%rsi
   12d35:	48 89 cf             	mov    %rcx,%rdi
   12d38:	e8 09 16 00 00       	call   14346 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   12d3d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d41:	48 89 c7             	mov    %rax,%rdi
   12d44:	e8 db 03 00 00       	call   13124 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12d49:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   12d4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d50:	48 8b 70 08          	mov    0x8(%rax),%rsi
   12d54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d58:	48 8b 00             	mov    (%rax),%rax
   12d5b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12d5f:	48 89 c7             	mov    %rax,%rdi
   12d62:	e8 04 17 00 00       	call   1446b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   12d67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   12d6b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12d6f:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   12d73:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12d77:	48 8b 12             	mov    (%rdx),%rdx
   12d7a:	48 29 d1             	sub    %rdx,%rcx
   12d7d:	48 c1 f9 03          	sar    $0x3,%rcx
   12d81:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   12d84:	48 89 d6             	mov    %rdx,%rsi
   12d87:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12d8b:	48 8b 0a             	mov    (%rdx),%rcx
   12d8e:	48 89 f2             	mov    %rsi,%rdx
   12d91:	48 89 ce             	mov    %rcx,%rsi
   12d94:	48 89 c7             	mov    %rax,%rdi
   12d97:	e8 52 03 00 00       	call   130ee <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   12d9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12da0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12da4:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   12da7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12dab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12daf:	48 01 d0             	add    %rdx,%rax
   12db2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12db9:	00 
   12dba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12dbe:	48 01 c2             	add    %rax,%rdx
   12dc1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12dc5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   12dc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12dcd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12dd4:	00 
   12dd5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12dd9:	48 01 c2             	add    %rax,%rdx
   12ddc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12de0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12de4:	eb 37                	jmp    12e1d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   12de6:	48 89 c7             	mov    %rax,%rdi
   12de9:	e8 32 13 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   12dee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12df2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12df6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   12dfa:	48 89 ce             	mov    %rcx,%rsi
   12dfd:	48 89 c7             	mov    %rax,%rdi
   12e00:	e8 e9 02 00 00       	call   130ee <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   12e05:	e8 c6 17 ff ff       	call   45d0 <__cxa_rethrow@plt>
		  __catch(...)
   12e0a:	48 89 c3             	mov    %rax,%rbx
   12e0d:	e8 5e 18 ff ff       	call   4670 <__cxa_end_catch@plt>
   12e12:	48 89 d8             	mov    %rbx,%rax
   12e15:	48 89 c7             	mov    %rax,%rdi
   12e18:	e8 d3 18 ff ff       	call   46f0 <_Unwind_Resume@plt>
    }
   12e1d:	90                   	nop
   12e1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12e22:	c9                   	leave
   12e23:	c3                   	ret

0000000000012e24 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   12e24:	55                   	push   %rbp
   12e25:	48 89 e5             	mov    %rsp,%rbp
   12e28:	48 83 ec 20          	sub    $0x20,%rsp
   12e2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12e30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   12e34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e38:	48 8b 40 08          	mov    0x8(%rax),%rax
   12e3c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   12e40:	48 c1 f8 03          	sar    $0x3,%rax
   12e44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12e48:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12e4d:	74 32                	je     12e81 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   12e4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e53:	48 89 c7             	mov    %rax,%rdi
   12e56:	e8 c9 02 00 00       	call   13124 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12e5b:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   12e5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e62:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12e66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e6a:	48 89 ce             	mov    %rcx,%rsi
   12e6d:	48 89 c7             	mov    %rax,%rdi
   12e70:	e8 bd 02 00 00       	call   13132 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   12e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12e7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   12e81:	90                   	nop
   12e82:	c9                   	leave
   12e83:	c3                   	ret

0000000000012e84 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12e84:	55                   	push   %rbp
   12e85:	48 89 e5             	mov    %rsp,%rbp
   12e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e8c:	90                   	nop
   12e8d:	5d                   	pop    %rbp
   12e8e:	c3                   	ret
   12e8f:	90                   	nop

0000000000012e90 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12e90:	55                   	push   %rbp
   12e91:	48 89 e5             	mov    %rsp,%rbp
   12e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e98:	90                   	nop
   12e99:	5d                   	pop    %rbp
   12e9a:	c3                   	ret
   12e9b:	90                   	nop

0000000000012e9c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   12e9c:	55                   	push   %rbp
   12e9d:	48 89 e5             	mov    %rsp,%rbp
   12ea0:	48 83 ec 10          	sub    $0x10,%rsp
   12ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   12eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12eb4:	48 89 d6             	mov    %rdx,%rsi
   12eb7:	48 89 c7             	mov    %rax,%rdi
   12eba:	e8 df 15 00 00       	call   1449e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   12ebf:	90                   	nop
   12ec0:	c9                   	leave
   12ec1:	c3                   	ret

0000000000012ec2 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   12ec2:	55                   	push   %rbp
   12ec3:	48 89 e5             	mov    %rsp,%rbp
   12ec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ece:	48 8b 00             	mov    (%rax),%rax
   12ed1:	5d                   	pop    %rbp
   12ed2:	c3                   	ret
   12ed3:	90                   	nop

0000000000012ed4 <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   12ed4:	55                   	push   %rbp
   12ed5:	48 89 e5             	mov    %rsp,%rbp
   12ed8:	53                   	push   %rbx
   12ed9:	48 83 ec 18          	sub    $0x18,%rsp
   12edd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ee5:	48 89 c7             	mov    %rax,%rdi
   12ee8:	e8 d5 ff ff ff       	call   12ec2 <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   12eed:	48 89 c3             	mov    %rax,%rbx
   12ef0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ef4:	48 89 c7             	mov    %rax,%rdi
   12ef7:	e8 d4 15 00 00       	call   144d0 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   12efc:	48 c1 e0 03          	shl    $0x3,%rax
   12f00:	48 01 d8             	add    %rbx,%rax
   12f03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12f07:	c9                   	leave
   12f08:	c3                   	ret

0000000000012f09 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   12f09:	55                   	push   %rbp
   12f0a:	48 89 e5             	mov    %rsp,%rbp
   12f0d:	48 83 ec 10          	sub    $0x10,%rsp
   12f11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   12f19:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12f1d:	48 89 c7             	mov    %rax,%rdi
   12f20:	e8 bd 15 00 00       	call   144e2 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   12f25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12f2d:	48 89 d6             	mov    %rdx,%rsi
   12f30:	48 89 c7             	mov    %rax,%rdi
   12f33:	e8 b5 15 00 00       	call   144ed <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   12f38:	c9                   	leave
   12f39:	c3                   	ret

0000000000012f3a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   12f3a:	55                   	push   %rbp
   12f3b:	48 89 e5             	mov    %rsp,%rbp
   12f3e:	53                   	push   %rbx
   12f3f:	48 83 ec 38          	sub    $0x38,%rsp
   12f43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12f47:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12f4b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   12f4f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12f53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12f57:	48 89 d6             	mov    %rdx,%rsi
   12f5a:	48 89 c7             	mov    %rax,%rdi
   12f5d:	e8 a7 ff ff ff       	call   12f09 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   12f62:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12f66:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   12f6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f6e:	48 89 c7             	mov    %rax,%rdi
   12f71:	e8 74 00 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12f76:	48 89 c2             	mov    %rax,%rdx
   12f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f7d:	48 89 d6             	mov    %rdx,%rsi
   12f80:	48 89 c7             	mov    %rax,%rdi
   12f83:	e8 7f 15 00 00       	call   14507 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   12f88:	48 89 c6             	mov    %rax,%rsi
   12f8b:	48 89 df             	mov    %rbx,%rdi
   12f8e:	e8 d5 0f 00 00       	call   13f68 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   12f93:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12f97:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12f9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f9e:	48 8b 00             	mov    (%rax),%rax
   12fa1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12fa5:	48 c1 e2 03          	shl    $0x3,%rdx
   12fa9:	48 01 c2             	add    %rax,%rdx
   12fac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12fb0:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   12fb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12fb8:	48 89 c7             	mov    %rax,%rdi
   12fbb:	e8 2a 00 00 00       	call   12fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12fc0:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   12fc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12fc7:	48 8b 10             	mov    (%rax),%rdx
   12fca:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   12fce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12fd2:	48 89 c7             	mov    %rax,%rdi
   12fd5:	e8 8d 15 00 00       	call   14567 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   12fda:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12fde:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   12fe2:	90                   	nop
   12fe3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12fe7:	c9                   	leave
   12fe8:	c3                   	ret
   12fe9:	90                   	nop

0000000000012fea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12fea:	55                   	push   %rbp
   12feb:	48 89 e5             	mov    %rsp,%rbp
   12fee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ff6:	5d                   	pop    %rbp
   12ff7:	c3                   	ret

0000000000012ff8 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12ff8:	55                   	push   %rbp
   12ff9:	48 89 e5             	mov    %rsp,%rbp
   12ffc:	48 83 ec 20          	sub    $0x20,%rsp
   13000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13008:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1300c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13014:	48 89 d6             	mov    %rdx,%rsi
   13017:	48 89 c7             	mov    %rax,%rdi
   1301a:	e8 79 15 00 00       	call   14598 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   1301f:	90                   	nop
   13020:	c9                   	leave
   13021:	c3                   	ret

0000000000013022 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   13022:	55                   	push   %rbp
   13023:	48 89 e5             	mov    %rsp,%rbp
   13026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1302a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1302e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13032:	5d                   	pop    %rbp
   13033:	c3                   	ret

0000000000013034 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   13034:	55                   	push   %rbp
   13035:	48 89 e5             	mov    %rsp,%rbp
   13038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1303c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13040:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1304b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13052:	00 
   13053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13057:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1305e:	00 
	{ }
   1305f:	90                   	nop
   13060:	5d                   	pop    %rbp
   13061:	c3                   	ret

0000000000013062 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   13062:	55                   	push   %rbp
   13063:	48 89 e5             	mov    %rsp,%rbp
   13066:	48 83 ec 20          	sub    $0x20,%rsp
   1306a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1306e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13072:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   13076:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1307b:	74 17                	je     13094 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1307d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13081:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13085:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13089:	48 89 ce             	mov    %rcx,%rsi
   1308c:	48 89 c7             	mov    %rax,%rdi
   1308f:	e8 2a 15 00 00       	call   145be <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   13094:	90                   	nop
   13095:	c9                   	leave
   13096:	c3                   	ret
   13097:	90                   	nop

0000000000013098 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   13098:	55                   	push   %rbp
   13099:	48 89 e5             	mov    %rsp,%rbp
   1309c:	48 83 ec 10          	sub    $0x10,%rsp
   130a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130a8:	48 89 c7             	mov    %rax,%rdi
   130ab:	e8 3c 15 00 00       	call   145ec <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   130b0:	90                   	nop
   130b1:	c9                   	leave
   130b2:	c3                   	ret
   130b3:	90                   	nop

00000000000130b4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   130b4:	55                   	push   %rbp
   130b5:	48 89 e5             	mov    %rsp,%rbp
   130b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   130bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   130c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130cb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   130d2:	00 
   130d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130d7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   130de:	00 
	{ }
   130df:	90                   	nop
   130e0:	5d                   	pop    %rbp
   130e1:	c3                   	ret

00000000000130e2 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
   130e2:	55                   	push   %rbp
   130e3:	48 89 e5             	mov    %rsp,%rbp
   130e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130ea:	90                   	nop
   130eb:	5d                   	pop    %rbp
   130ec:	c3                   	ret
   130ed:	90                   	nop

00000000000130ee <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   130ee:	55                   	push   %rbp
   130ef:	48 89 e5             	mov    %rsp,%rbp
   130f2:	48 83 ec 20          	sub    $0x20,%rsp
   130f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   130fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   13102:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13107:	74 17                	je     13120 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   13109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1310d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13111:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13115:	48 89 ce             	mov    %rcx,%rsi
   13118:	48 89 c7             	mov    %rax,%rdi
   1311b:	e8 d7 14 00 00       	call   145f7 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   13120:	90                   	nop
   13121:	c9                   	leave
   13122:	c3                   	ret
   13123:	90                   	nop

0000000000013124 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   13124:	55                   	push   %rbp
   13125:	48 89 e5             	mov    %rsp,%rbp
   13128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1312c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13130:	5d                   	pop    %rbp
   13131:	c3                   	ret

0000000000013132 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   13132:	55                   	push   %rbp
   13133:	48 89 e5             	mov    %rsp,%rbp
   13136:	48 83 ec 20          	sub    $0x20,%rsp
   1313a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1313e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13142:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   13146:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1314a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1314e:	48 89 d6             	mov    %rdx,%rsi
   13151:	48 89 c7             	mov    %rax,%rdi
   13154:	e8 cc 14 00 00       	call   14625 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   13159:	90                   	nop
   1315a:	c9                   	leave
   1315b:	c3                   	ret

000000000001315c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1315c:	55                   	push   %rbp
   1315d:	48 89 e5             	mov    %rsp,%rbp
   13160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13168:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1316c:	48 8b 10             	mov    (%rax),%rdx
   1316f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13173:	48 89 10             	mov    %rdx,(%rax)
   13176:	90                   	nop
   13177:	5d                   	pop    %rbp
   13178:	c3                   	ret
   13179:	90                   	nop

000000000001317a <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1317a:	55                   	push   %rbp
   1317b:	48 89 e5             	mov    %rsp,%rbp
   1317e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13182:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13186:	5d                   	pop    %rbp
   13187:	c3                   	ret

0000000000013188 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13188:	55                   	push   %rbp
   13189:	48 89 e5             	mov    %rsp,%rbp
   1318c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13190:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13194:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13198:	48 8b 10             	mov    (%rax),%rdx
   1319b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1319f:	48 89 10             	mov    %rdx,(%rax)
   131a2:	90                   	nop
   131a3:	5d                   	pop    %rbp
   131a4:	c3                   	ret
   131a5:	90                   	nop

00000000000131a6 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   131a6:	55                   	push   %rbp
   131a7:	48 89 e5             	mov    %rsp,%rbp
   131aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   131ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131b2:	5d                   	pop    %rbp
   131b3:	c3                   	ret

00000000000131b4 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   131b4:	55                   	push   %rbp
   131b5:	48 89 e5             	mov    %rsp,%rbp
   131b8:	53                   	push   %rbx
   131b9:	48 83 ec 18          	sub    $0x18,%rsp
   131bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   131c1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   131c5:	e8 8c d2 ff ff       	call   10456 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   131ca:	48 89 03             	mov    %rax,(%rbx)
	{ }
   131cd:	90                   	nop
   131ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   131d2:	c9                   	leave
   131d3:	c3                   	ret

00000000000131d4 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   131d4:	55                   	push   %rbp
   131d5:	48 89 e5             	mov    %rsp,%rbp
   131d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   131dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131e0:	48 8b 00             	mov    (%rax),%rax
   131e3:	5d                   	pop    %rbp
   131e4:	c3                   	ret

00000000000131e5 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   131e5:	55                   	push   %rbp
   131e6:	48 89 e5             	mov    %rsp,%rbp
   131e9:	53                   	push   %rbx
   131ea:	48 83 ec 38          	sub    $0x38,%rsp
   131ee:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   131f2:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   131f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   131fa:	48 8b 00             	mov    (%rax),%rax
   131fd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13201:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13205:	48 89 c7             	mov    %rax,%rdi
   13208:	e8 9b d2 ff ff       	call   104a8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1320d:	48 89 c3             	mov    %rax,%rbx
   13210:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13214:	48 8b 00             	mov    (%rax),%rax
   13217:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1321b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1321f:	48 89 c7             	mov    %rax,%rdi
   13222:	e8 81 d2 ff ff       	call   104a8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13227:	48 29 c3             	sub    %rax,%rbx
   1322a:	48 89 da             	mov    %rbx,%rdx
   1322d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13231:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   13235:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13239:	48 89 d6             	mov    %rdx,%rsi
   1323c:	48 89 c7             	mov    %rax,%rdi
   1323f:	e8 3c d2 ff ff       	call   10480 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   13244:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   13248:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1324c:	c9                   	leave
   1324d:	c3                   	ret

000000000001324e <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   1324e:	55                   	push   %rbp
   1324f:	48 89 e5             	mov    %rsp,%rbp
   13252:	48 83 ec 20          	sub    $0x20,%rsp
   13256:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1325a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1325e:	48 89 c7             	mov    %rax,%rdi
   13261:	e8 42 d2 ff ff       	call   104a8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13266:	48 89 c1             	mov    %rax,%rcx
   13269:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   13270:	9b c4 20 
   13273:	48 89 c8             	mov    %rcx,%rax
   13276:	48 f7 ea             	imul   %rdx
   13279:	48 89 d0             	mov    %rdx,%rax
   1327c:	48 c1 f8 07          	sar    $0x7,%rax
   13280:	48 c1 f9 3f          	sar    $0x3f,%rcx
   13284:	48 89 ca             	mov    %rcx,%rdx
   13287:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   1328a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1328e:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   13292:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13296:	48 89 d6             	mov    %rdx,%rsi
   13299:	48 89 c7             	mov    %rax,%rdi
   1329c:	e8 ab 13 00 00       	call   1464c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   132a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   132a5:	c9                   	leave
   132a6:	c3                   	ret
   132a7:	90                   	nop

00000000000132a8 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   132a8:	55                   	push   %rbp
   132a9:	48 89 e5             	mov    %rsp,%rbp
   132ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   132b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132b8:	48 8b 10             	mov    (%rax),%rdx
   132bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132bf:	48 89 10             	mov    %rdx,(%rax)
   132c2:	90                   	nop
   132c3:	5d                   	pop    %rbp
   132c4:	c3                   	ret
   132c5:	90                   	nop

00000000000132c6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   132c6:	55                   	push   %rbp
   132c7:	48 89 e5             	mov    %rsp,%rbp
   132ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   132ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132d2:	5d                   	pop    %rbp
   132d3:	c3                   	ret

00000000000132d4 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   132d4:	55                   	push   %rbp
   132d5:	48 89 e5             	mov    %rsp,%rbp
   132d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132e0:	48 8b 40 08          	mov    0x8(%rax),%rax
   132e4:	5d                   	pop    %rbp
   132e5:	c3                   	ret

00000000000132e6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   132e6:	55                   	push   %rbp
   132e7:	48 89 e5             	mov    %rsp,%rbp
   132ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   132ee:	90                   	nop
   132ef:	5d                   	pop    %rbp
   132f0:	c3                   	ret

00000000000132f1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   132f1:	55                   	push   %rbp
   132f2:	48 89 e5             	mov    %rsp,%rbp
   132f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   132fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13301:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   13305:	48 c1 f8 03          	sar    $0x3,%rax
    }
   13309:	5d                   	pop    %rbp
   1330a:	c3                   	ret

000000000001330b <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1330b:	55                   	push   %rbp
   1330c:	48 89 e5             	mov    %rsp,%rbp
   1330f:	48 83 ec 20          	sub    $0x20,%rsp
   13313:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13317:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1331b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1331f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   13323:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13327:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1332b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1332f:	48 89 ce             	mov    %rcx,%rsi
   13332:	48 89 c7             	mov    %rax,%rdi
   13335:	e8 5a 13 00 00       	call   14694 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   1333a:	c9                   	leave
   1333b:	c3                   	ret

000000000001333c <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1333c:	55                   	push   %rbp
   1333d:	48 89 e5             	mov    %rsp,%rbp
   13340:	48 83 ec 10          	sub    $0x10,%rsp
   13344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1334c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13354:	48 89 d6             	mov    %rdx,%rsi
   13357:	48 89 c7             	mov    %rax,%rdi
   1335a:	e8 6a 13 00 00       	call   146c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   1335f:	90                   	nop
   13360:	c9                   	leave
   13361:	c3                   	ret

0000000000013362 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   13362:	55                   	push   %rbp
   13363:	48 89 e5             	mov    %rsp,%rbp
   13366:	53                   	push   %rbx
   13367:	48 83 ec 28          	sub    $0x28,%rsp
   1336b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1336f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13373:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   13377:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1337b:	48 89 c6             	mov    %rax,%rsi
   1337e:	bf 08 00 00 00       	mov    $0x8,%edi
   13383:	e8 d8 1a ff ff       	call   4e60 <_ZnwmPv>
   13388:	48 89 c3             	mov    %rax,%rbx
   1338b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1338f:	48 89 c7             	mov    %rax,%rdi
   13392:	e8 1f ea ff ff       	call   11db6 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   13397:	48 8b 00             	mov    (%rax),%rax
   1339a:	48 89 03             	mov    %rax,(%rbx)
   1339d:	90                   	nop
   1339e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   133a2:	c9                   	leave
   133a3:	c3                   	ret

00000000000133a4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   133a4:	55                   	push   %rbp
   133a5:	48 89 e5             	mov    %rsp,%rbp
   133a8:	53                   	push   %rbx
   133a9:	48 83 ec 38          	sub    $0x38,%rsp
   133ad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   133b1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   133b5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   133b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133bd:	48 89 c7             	mov    %rax,%rdi
   133c0:	e8 13 13 00 00       	call   146d8 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   133c5:	48 89 c3             	mov    %rax,%rbx
   133c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133cc:	48 89 c7             	mov    %rax,%rdi
   133cf:	e8 6a d6 ff ff       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   133d4:	48 29 c3             	sub    %rax,%rbx
   133d7:	48 89 da             	mov    %rbx,%rdx
   133da:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   133de:	48 39 c2             	cmp    %rax,%rdx
   133e1:	0f 92 c0             	setb   %al
   133e4:	84 c0                	test   %al,%al
   133e6:	74 0c                	je     133f4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   133e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133ec:	48 89 c7             	mov    %rax,%rdi
   133ef:	e8 8c 0d ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   133f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133f8:	48 89 c7             	mov    %rax,%rdi
   133fb:	e8 3e d6 ff ff       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13400:	48 89 c3             	mov    %rax,%rbx
   13403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13407:	48 89 c7             	mov    %rax,%rdi
   1340a:	e8 2f d6 ff ff       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1340f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13413:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13417:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1341b:	48 89 d6             	mov    %rdx,%rsi
   1341e:	48 89 c7             	mov    %rax,%rdi
   13421:	e8 43 12 00 00       	call   14669 <_ZSt3maxImERKT_S2_S2_>
   13426:	48 8b 00             	mov    (%rax),%rax
   13429:	48 01 d8             	add    %rbx,%rax
   1342c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13430:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13434:	48 89 c7             	mov    %rax,%rdi
   13437:	e8 02 d6 ff ff       	call   10a3e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1343c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13440:	72 12                	jb     13454 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   13442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13446:	48 89 c7             	mov    %rax,%rdi
   13449:	e8 8a 12 00 00       	call   146d8 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1344e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13452:	73 0e                	jae    13462 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   13454:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13458:	48 89 c7             	mov    %rax,%rdi
   1345b:	e8 78 12 00 00       	call   146d8 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13460:	eb 04                	jmp    13466 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   13462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13466:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1346a:	c9                   	leave
   1346b:	c3                   	ret

000000000001346c <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   1346c:	55                   	push   %rbp
   1346d:	48 89 e5             	mov    %rsp,%rbp
   13470:	53                   	push   %rbx
   13471:	48 83 ec 18          	sub    $0x18,%rsp
   13475:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13479:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   1347d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13481:	48 89 c7             	mov    %rax,%rdi
   13484:	e8 1f e9 ff ff       	call   11da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13489:	48 8b 18             	mov    (%rax),%rbx
   1348c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13490:	48 89 c7             	mov    %rax,%rdi
   13493:	e8 10 e9 ff ff       	call   11da8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13498:	48 8b 00             	mov    (%rax),%rax
   1349b:	48 89 da             	mov    %rbx,%rdx
   1349e:	48 29 c2             	sub    %rax,%rdx
   134a1:	48 89 d0             	mov    %rdx,%rax
   134a4:	48 c1 f8 03          	sar    $0x3,%rax
   134a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   134ac:	c9                   	leave
   134ad:	c3                   	ret

00000000000134ae <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   134ae:	55                   	push   %rbp
   134af:	48 89 e5             	mov    %rsp,%rbp
   134b2:	48 83 ec 20          	sub    $0x20,%rsp
   134b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   134c2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   134c6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   134ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   134ce:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   134d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d6:	48 89 c7             	mov    %rax,%rdi
   134d9:	e8 1c 12 00 00       	call   146fa <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   134de:	c9                   	leave
   134df:	c3                   	ret

00000000000134e0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   134e0:	55                   	push   %rbp
   134e1:	48 89 e5             	mov    %rsp,%rbp
   134e4:	48 83 ec 20          	sub    $0x20,%rsp
   134e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   134ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   134f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134f4:	48 8b 00             	mov    (%rax),%rax
   134f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   134fb:	48 c1 e2 03          	shl    $0x3,%rdx
   134ff:	48 f7 da             	neg    %rdx
   13502:	48 01 d0             	add    %rdx,%rax
   13505:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13509:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1350d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13511:	48 89 d6             	mov    %rdx,%rsi
   13514:	48 89 c7             	mov    %rax,%rdi
   13517:	e8 6e e8 ff ff       	call   11d8a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1351c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13520:	c9                   	leave
   13521:	c3                   	ret

0000000000013522 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   13522:	55                   	push   %rbp
   13523:	48 89 e5             	mov    %rsp,%rbp
   13526:	53                   	push   %rbx
   13527:	48 83 ec 28          	sub    $0x28,%rsp
   1352b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1352f:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   13533:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13537:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1353b:	48 89 c7             	mov    %rax,%rdi
   1353e:	e8 bb ea ff ff       	call   11ffe <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13543:	48 89 c6             	mov    %rax,%rsi
   13546:	48 89 df             	mov    %rbx,%rdi
   13549:	e8 10 12 00 00       	call   1475e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   1354e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13552:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   13556:	90                   	nop
   13557:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1355b:	c9                   	leave
   1355c:	c3                   	ret
   1355d:	90                   	nop

000000000001355e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   1355e:	55                   	push   %rbp
   1355f:	48 89 e5             	mov    %rsp,%rbp
   13562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   13566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1356a:	5d                   	pop    %rbp
   1356b:	c3                   	ret

000000000001356c <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   1356c:	55                   	push   %rbp
   1356d:	48 89 e5             	mov    %rsp,%rbp
   13570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13574:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   13578:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1357c:	8b 10                	mov    (%rax),%edx
   1357e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13582:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   13584:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   13588:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1358c:	48 8b 46 04          	mov    0x4(%rsi),%rax
   13590:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   13594:	48 89 41 04          	mov    %rax,0x4(%rcx)
   13598:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   1359c:	48 8b 46 14          	mov    0x14(%rsi),%rax
   135a0:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   135a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   135a8:	5d                   	pop    %rbp
   135a9:	c3                   	ret

00000000000135aa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   135aa:	55                   	push   %rbp
   135ab:	48 89 e5             	mov    %rsp,%rbp
   135ae:	53                   	push   %rbx
   135af:	48 83 ec 18          	sub    $0x18,%rsp
   135b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   135b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   135bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   135bf:	48 89 c7             	mov    %rax,%rdi
   135c2:	e8 e9 11 00 00       	call   147b0 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   135c7:	48 89 c3             	mov    %rax,%rbx
   135ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135ce:	48 89 c7             	mov    %rax,%rdi
   135d1:	e8 cc 11 00 00       	call   147a2 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   135d6:	48 89 de             	mov    %rbx,%rsi
   135d9:	48 89 c7             	mov    %rax,%rdi
   135dc:	e8 dd 11 00 00       	call   147be <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   135e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135e5:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   135e9:	90                   	nop
   135ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   135ee:	c9                   	leave
   135ef:	c3                   	ret

00000000000135f0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   135f0:	55                   	push   %rbp
   135f1:	48 89 e5             	mov    %rsp,%rbp
   135f4:	48 83 ec 10          	sub    $0x10,%rsp
   135f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   135fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13600:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   13604:	84 c0                	test   %al,%al
   13606:	74 0c                	je     13614 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   13608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1360c:	48 89 c7             	mov    %rax,%rdi
   1360f:	e8 04 12 00 00       	call   14818 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   13614:	90                   	nop
   13615:	c9                   	leave
   13616:	c3                   	ret
   13617:	90                   	nop

0000000000013618 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13618:	55                   	push   %rbp
   13619:	48 89 e5             	mov    %rsp,%rbp
   1361c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13620:	90                   	nop
   13621:	5d                   	pop    %rbp
   13622:	c3                   	ret

0000000000013623 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   13623:	55                   	push   %rbp
   13624:	48 89 e5             	mov    %rsp,%rbp
   13627:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1362b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1362f:	48 8b 40 18          	mov    0x18(%rax),%rax
   13633:	5d                   	pop    %rbp
   13634:	c3                   	ret

0000000000013635 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   13635:	55                   	push   %rbp
   13636:	48 89 e5             	mov    %rsp,%rbp
   13639:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1363d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13641:	48 8b 40 10          	mov    0x10(%rax),%rax
   13645:	5d                   	pop    %rbp
   13646:	c3                   	ret
   13647:	90                   	nop

0000000000013648 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13648:	55                   	push   %rbp
   13649:	48 89 e5             	mov    %rsp,%rbp
   1364c:	48 83 ec 10          	sub    $0x10,%rsp
   13650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   13658:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1365c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13660:	48 89 d6             	mov    %rdx,%rsi
   13663:	48 89 c7             	mov    %rax,%rdi
   13666:	e8 c1 11 00 00       	call   1482c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   1366b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1366f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13673:	48 89 d6             	mov    %rdx,%rsi
   13676:	48 89 c7             	mov    %rax,%rdi
   13679:	e8 ec 11 00 00       	call   1486a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   1367e:	90                   	nop
   1367f:	c9                   	leave
   13680:	c3                   	ret
   13681:	90                   	nop

0000000000013682 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   13682:	55                   	push   %rbp
   13683:	48 89 e5             	mov    %rsp,%rbp
   13686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1368a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1368e:	48 8b 40 10          	mov    0x10(%rax),%rax
   13692:	5d                   	pop    %rbp
   13693:	c3                   	ret

0000000000013694 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   13694:	55                   	push   %rbp
   13695:	48 89 e5             	mov    %rsp,%rbp
   13698:	53                   	push   %rbx
   13699:	48 83 ec 18          	sub    $0x18,%rsp
   1369d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   136a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136a9:	48 89 c7             	mov    %rax,%rdi
   136ac:	e8 ef 11 00 00       	call   148a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   136b1:	48 89 c3             	mov    %rax,%rbx
   136b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136b8:	48 89 c7             	mov    %rax,%rdi
   136bb:	e8 0c eb ff ff       	call   121cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   136c0:	48 89 c6             	mov    %rax,%rsi
   136c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   136c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136cb:	48 89 d1             	mov    %rdx,%rcx
   136ce:	48 89 da             	mov    %rbx,%rdx
   136d1:	48 89 c7             	mov    %rax,%rdi
   136d4:	e8 d9 11 00 00       	call   148b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   136d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   136dd:	c9                   	leave
   136de:	c3                   	ret
   136df:	90                   	nop

00000000000136e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   136e0:	55                   	push   %rbp
   136e1:	48 89 e5             	mov    %rsp,%rbp
   136e4:	48 83 ec 20          	sub    $0x20,%rsp
   136e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   136ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136f0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   136f4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   136f8:	48 89 d6             	mov    %rdx,%rsi
   136fb:	48 89 c7             	mov    %rax,%rdi
   136fe:	e8 39 06 00 00       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13707:	c9                   	leave
   13708:	c3                   	ret
   13709:	90                   	nop

000000000001370a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   1370a:	55                   	push   %rbp
   1370b:	48 89 e5             	mov    %rsp,%rbp
   1370e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   13712:	90                   	nop
   13713:	5d                   	pop    %rbp
   13714:	c3                   	ret
   13715:	90                   	nop

0000000000013716 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   13716:	55                   	push   %rbp
   13717:	48 89 e5             	mov    %rsp,%rbp
   1371a:	48 83 ec 10          	sub    $0x10,%rsp
   1371e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   13722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13726:	48 83 c0 20          	add    $0x20,%rax
   1372a:	48 89 c7             	mov    %rax,%rdi
   1372d:	e8 16 12 00 00       	call   14948 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   13732:	c9                   	leave
   13733:	c3                   	ret

0000000000013734 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   13734:	55                   	push   %rbp
   13735:	48 89 e5             	mov    %rsp,%rbp
   13738:	48 83 ec 10          	sub    $0x10,%rsp
   1373c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13740:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   13744:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1374c:	48 89 d6             	mov    %rdx,%rsi
   1374f:	48 89 c7             	mov    %rax,%rdi
   13752:	e8 d9 08 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   13757:	c1 e8 1f             	shr    $0x1f,%eax
   1375a:	c9                   	leave
   1375b:	c3                   	ret

000000000001375c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1375c:	55                   	push   %rbp
   1375d:	48 89 e5             	mov    %rsp,%rbp
   13760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13768:	5d                   	pop    %rbp
   13769:	c3                   	ret

000000000001376a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   1376a:	55                   	push   %rbp
   1376b:	48 89 e5             	mov    %rsp,%rbp
   1376e:	53                   	push   %rbx
   1376f:	48 83 ec 18          	sub    $0x18,%rsp
   13773:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13777:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   1377b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1377f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13783:	48 89 c7             	mov    %rax,%rdi
   13786:	e8 d1 ff ff ff       	call   1375c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1378b:	48 89 c6             	mov    %rax,%rsi
   1378e:	48 89 df             	mov    %rbx,%rdi
   13791:	e8 cc 11 00 00       	call   14962 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   13796:	90                   	nop
   13797:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1379b:	c9                   	leave
   1379c:	c3                   	ret

000000000001379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1379d:	55                   	push   %rbp
   1379e:	48 89 e5             	mov    %rsp,%rbp
   137a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   137a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a9:	5d                   	pop    %rbp
   137aa:	c3                   	ret

00000000000137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   137ab:	55                   	push   %rbp
   137ac:	48 89 e5             	mov    %rsp,%rbp
   137af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   137b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137b7:	5d                   	pop    %rbp
   137b8:	c3                   	ret

00000000000137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   137b9:	55                   	push   %rbp
   137ba:	48 89 e5             	mov    %rsp,%rbp
   137bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   137c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137c5:	5d                   	pop    %rbp
   137c6:	c3                   	ret
   137c7:	90                   	nop

00000000000137c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   137c8:	55                   	push   %rbp
   137c9:	48 89 e5             	mov    %rsp,%rbp
   137cc:	41 54                	push   %r12
   137ce:	53                   	push   %rbx
   137cf:	48 83 ec 30          	sub    $0x30,%rsp
   137d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   137d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   137db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   137df:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   137e3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   137e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   137ef:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   137f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   137f6:	48 89 c7             	mov    %rax,%rdi
   137f9:	e8 bb ff ff ff       	call   137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   137fe:	49 89 c4             	mov    %rax,%r12
   13801:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13805:	48 89 c7             	mov    %rax,%rdi
   13808:	e8 9e ff ff ff       	call   137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1380d:	48 89 c3             	mov    %rax,%rbx
   13810:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13814:	48 89 c7             	mov    %rax,%rdi
   13817:	e8 81 ff ff ff       	call   1379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1381c:	48 89 c6             	mov    %rax,%rsi
   1381f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13823:	4c 89 e1             	mov    %r12,%rcx
   13826:	48 89 da             	mov    %rbx,%rdx
   13829:	48 89 c7             	mov    %rax,%rdi
   1382c:	e8 65 11 00 00       	call   14996 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   13831:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13835:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   13839:	90                   	nop
   1383a:	48 83 c4 30          	add    $0x30,%rsp
   1383e:	5b                   	pop    %rbx
   1383f:	41 5c                	pop    %r12
   13841:	5d                   	pop    %rbp
   13842:	c3                   	ret
   13843:	90                   	nop

0000000000013844 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   13844:	55                   	push   %rbp
   13845:	48 89 e5             	mov    %rsp,%rbp
   13848:	48 83 ec 10          	sub    $0x10,%rsp
   1384c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   13850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13854:	48 8b 40 08          	mov    0x8(%rax),%rax
   13858:	48 85 c0             	test   %rax,%rax
   1385b:	74 1a                	je     13877 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   1385d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13861:	48 8b 00             	mov    (%rax),%rax
   13864:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13868:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   1386c:	48 89 d6             	mov    %rdx,%rsi
   1386f:	48 89 c7             	mov    %rax,%rdi
   13872:	e8 d1 fd ff ff       	call   13648 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   13877:	90                   	nop
   13878:	c9                   	leave
   13879:	c3                   	ret

000000000001387a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1387a:	55                   	push   %rbp
   1387b:	48 89 e5             	mov    %rsp,%rbp
   1387e:	53                   	push   %rbx
   1387f:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   13886:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   1388d:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   13894:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   1389b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   138a2:	48 89 c7             	mov    %rax,%rdi
   138a5:	e8 68 11 00 00       	call   14a12 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   138aa:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   138b1:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   138b8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   138bf:	48 89 c7             	mov    %rax,%rdi
   138c2:	e8 d9 0f 00 00       	call   148a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   138c7:	48 39 c3             	cmp    %rax,%rbx
   138ca:	0f 94 c0             	sete   %al
   138cd:	84 c0                	test   %al,%al
   138cf:	0f 84 c8 00 00 00    	je     1399d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   138d5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   138dc:	48 89 c7             	mov    %rax,%rdi
   138df:	e8 56 11 00 00       	call   14a3a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   138e4:	48 85 c0             	test   %rax,%rax
   138e7:	74 44                	je     1392d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   138e9:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   138f0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   138f7:	48 89 c7             	mov    %rax,%rdi
   138fa:	e8 4d 11 00 00       	call   14a4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   138ff:	48 8b 00             	mov    (%rax),%rax
   13902:	48 89 c7             	mov    %rax,%rdi
   13905:	e8 54 11 00 00       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1390a:	48 89 c1             	mov    %rax,%rcx
   1390d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13914:	48 89 c2             	mov    %rax,%rdx
   13917:	48 89 ce             	mov    %rcx,%rsi
   1391a:	48 89 df             	mov    %rbx,%rdi
   1391d:	e8 8c e9 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13922:	84 c0                	test   %al,%al
   13924:	74 07                	je     1392d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   13926:	b8 01 00 00 00       	mov    $0x1,%eax
   1392b:	eb 05                	jmp    13932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   1392d:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   13932:	84 c0                	test   %al,%al
   13934:	74 49                	je     1397f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   13936:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1393d:	48 89 c7             	mov    %rax,%rdi
   13940:	e8 07 11 00 00       	call   14a4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13945:	48 89 c2             	mov    %rax,%rdx
   13948:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   1394f:	00 00 00 00 
   13953:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   1395a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   13961:	48 89 ce             	mov    %rcx,%rsi
   13964:	48 89 c7             	mov    %rax,%rdi
   13967:	e8 0c 11 00 00       	call   14a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1396c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   13973:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1397a:	e9 43 03 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1397f:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13986:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1398d:	48 89 d6             	mov    %rdx,%rsi
   13990:	48 89 c7             	mov    %rax,%rdi
   13993:	e8 10 11 00 00       	call   14aa8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13998:	e9 25 03 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   1399d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   139a4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   139ab:	48 89 c7             	mov    %rax,%rdi
   139ae:	e8 ab 10 00 00       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   139b3:	48 89 c2             	mov    %rax,%rdx
   139b6:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   139bd:	48 89 c6             	mov    %rax,%rsi
   139c0:	48 89 df             	mov    %rbx,%rdi
   139c3:	e8 e6 e8 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   139c8:	84 c0                	test   %al,%al
   139ca:	0f 84 66 01 00 00    	je     13b36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   139d0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   139d7:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   139de:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   139e5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   139ec:	48 89 c7             	mov    %rax,%rdi
   139ef:	e8 2a 12 00 00       	call   14c1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   139f4:	48 8b 00             	mov    (%rax),%rax
   139f7:	48 39 c3             	cmp    %rax,%rbx
   139fa:	0f 94 c0             	sete   %al
   139fd:	84 c0                	test   %al,%al
   139ff:	74 4c                	je     13a4d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   13a01:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13a08:	48 89 c7             	mov    %rax,%rdi
   13a0b:	e8 0e 12 00 00       	call   14c1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   13a10:	48 89 c3             	mov    %rax,%rbx
   13a13:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13a1a:	48 89 c7             	mov    %rax,%rdi
   13a1d:	e8 fc 11 00 00       	call   14c1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   13a22:	48 89 c1             	mov    %rax,%rcx
   13a25:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   13a2c:	48 89 da             	mov    %rbx,%rdx
   13a2f:	48 89 ce             	mov    %rcx,%rsi
   13a32:	48 89 c7             	mov    %rax,%rdi
   13a35:	e8 f6 11 00 00       	call   14c30 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13a3a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   13a41:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   13a48:	e9 75 02 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   13a4d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13a54:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   13a5b:	48 89 c7             	mov    %rax,%rdi
   13a5e:	e8 11 12 00 00       	call   14c74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   13a63:	48 8b 00             	mov    (%rax),%rax
   13a66:	48 89 c7             	mov    %rax,%rdi
   13a69:	e8 f0 0f 00 00       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13a6e:	48 89 c1             	mov    %rax,%rcx
   13a71:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13a78:	48 89 c2             	mov    %rax,%rdx
   13a7b:	48 89 ce             	mov    %rcx,%rsi
   13a7e:	48 89 df             	mov    %rbx,%rdi
   13a81:	e8 28 e8 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13a86:	84 c0                	test   %al,%al
   13a88:	0f 84 8a 00 00 00    	je     13b18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   13a8e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   13a95:	48 89 c7             	mov    %rax,%rdi
   13a98:	e8 86 fb ff ff       	call   13623 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13a9d:	48 85 c0             	test   %rax,%rax
   13aa0:	0f 94 c0             	sete   %al
   13aa3:	84 c0                	test   %al,%al
   13aa5:	74 3e                	je     13ae5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   13aa7:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   13aae:	00 00 00 00 
   13ab2:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   13ab9:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   13ac0:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   13ac7:	48 89 ce             	mov    %rcx,%rsi
   13aca:	48 89 c7             	mov    %rax,%rdi
   13acd:	e8 a6 0f 00 00       	call   14a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13ad2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   13ad9:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   13ae0:	e9 dd 01 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   13ae5:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   13aec:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13af3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   13afa:	48 89 ce             	mov    %rcx,%rsi
   13afd:	48 89 c7             	mov    %rax,%rdi
   13b00:	e8 2b 11 00 00       	call   14c30 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13b05:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   13b0c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   13b13:	e9 aa 01 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13b18:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13b1f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13b26:	48 89 d6             	mov    %rdx,%rsi
   13b29:	48 89 c7             	mov    %rax,%rdi
   13b2c:	e8 77 0f 00 00       	call   14aa8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13b31:	e9 8c 01 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   13b36:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13b3d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13b44:	48 89 c7             	mov    %rax,%rdi
   13b47:	e8 12 0f 00 00       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13b4c:	48 89 c1             	mov    %rax,%rcx
   13b4f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13b56:	48 89 c2             	mov    %rax,%rdx
   13b59:	48 89 ce             	mov    %rcx,%rsi
   13b5c:	48 89 df             	mov    %rbx,%rdi
   13b5f:	e8 4a e7 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13b64:	84 c0                	test   %al,%al
   13b66:	0f 84 2c 01 00 00    	je     13c98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   13b6c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13b73:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   13b7a:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   13b81:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13b88:	48 89 c7             	mov    %rax,%rdi
   13b8b:	e8 bc 0e 00 00       	call   14a4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13b90:	48 8b 00             	mov    (%rax),%rax
   13b93:	48 39 c3             	cmp    %rax,%rbx
   13b96:	0f 94 c0             	sete   %al
   13b99:	84 c0                	test   %al,%al
   13b9b:	74 3a                	je     13bd7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   13b9d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13ba4:	48 89 c7             	mov    %rax,%rdi
   13ba7:	e8 a0 0e 00 00       	call   14a4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13bac:	48 89 c2             	mov    %rax,%rdx
   13baf:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   13bb6:	00 
   13bb7:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   13bbb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   13bbf:	48 89 ce             	mov    %rcx,%rsi
   13bc2:	48 89 c7             	mov    %rax,%rdi
   13bc5:	e8 ae 0e 00 00       	call   14a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13bca:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13bce:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   13bd2:	e9 eb 00 00 00       	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   13bd7:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13bde:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   13be5:	48 89 c7             	mov    %rax,%rdi
   13be8:	e8 af 10 00 00       	call   14c9c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   13bed:	48 8b 00             	mov    (%rax),%rax
   13bf0:	48 89 c7             	mov    %rax,%rdi
   13bf3:	e8 66 0e 00 00       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13bf8:	48 89 c2             	mov    %rax,%rdx
   13bfb:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13c02:	48 89 c6             	mov    %rax,%rsi
   13c05:	48 89 df             	mov    %rbx,%rdi
   13c08:	e8 a1 e6 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13c0d:	84 c0                	test   %al,%al
   13c0f:	74 6c                	je     13c7d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   13c11:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13c18:	48 89 c7             	mov    %rax,%rdi
   13c1b:	e8 03 fa ff ff       	call   13623 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13c20:	48 85 c0             	test   %rax,%rax
   13c23:	0f 94 c0             	sete   %al
   13c26:	84 c0                	test   %al,%al
   13c28:	74 2c                	je     13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   13c2a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   13c31:	00 
   13c32:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   13c39:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   13c3d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13c41:	48 89 ce             	mov    %rcx,%rsi
   13c44:	48 89 c7             	mov    %rax,%rdi
   13c47:	e8 2c 0e 00 00       	call   14a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13c4c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13c50:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13c54:	eb 6c                	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   13c56:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   13c5d:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   13c64:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13c68:	48 89 ce             	mov    %rcx,%rsi
   13c6b:	48 89 c7             	mov    %rax,%rdi
   13c6e:	e8 bd 0f 00 00       	call   14c30 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13c73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13c77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13c7b:	eb 45                	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13c7d:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13c84:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13c8b:	48 89 d6             	mov    %rdx,%rsi
   13c8e:	48 89 c7             	mov    %rax,%rdi
   13c91:	e8 12 0e 00 00       	call   14aa8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13c96:	eb 2a                	jmp    13cc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   13c98:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   13c9f:	00 
   13ca0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   13ca4:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13cab:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13caf:	48 89 ce             	mov    %rcx,%rsi
   13cb2:	48 89 c7             	mov    %rax,%rdi
   13cb5:	e8 be 0d 00 00       	call   14a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13cba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13cbe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13cc2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13cc6:	c9                   	leave
   13cc7:	c3                   	ret

0000000000013cc8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   13cc8:	55                   	push   %rbp
   13cc9:	48 89 e5             	mov    %rsp,%rbp
   13ccc:	48 83 ec 10          	sub    $0x10,%rsp
   13cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   13cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cd8:	48 8b 40 08          	mov    0x8(%rax),%rax
   13cdc:	48 89 c7             	mov    %rax,%rdi
   13cdf:	e8 e0 0f 00 00       	call   14cc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13ce4:	c9                   	leave
   13ce5:	c3                   	ret

0000000000013ce6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   13ce6:	55                   	push   %rbp
   13ce7:	48 89 e5             	mov    %rsp,%rbp
   13cea:	48 83 ec 30          	sub    $0x30,%rsp
   13cee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13cf2:	48 89 d1             	mov    %rdx,%rcx
   13cf5:	48 89 f0             	mov    %rsi,%rax
   13cf8:	48 89 fa             	mov    %rdi,%rdx
   13cfb:	48 89 ca             	mov    %rcx,%rdx
   13cfe:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13d02:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   13d06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d0a:	48 8b 00             	mov    (%rax),%rax
   13d0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13d11:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   13d15:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13d19:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   13d1d:	48 89 c7             	mov    %rax,%rdi
   13d20:	e8 cb 0f 00 00       	call   14cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   13d25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   13d29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13d34:	00 
	  return __it;
   13d35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   13d39:	c9                   	leave
   13d3a:	c3                   	ret
   13d3b:	90                   	nop

0000000000013d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   13d3c:	55                   	push   %rbp
   13d3d:	48 89 e5             	mov    %rsp,%rbp
   13d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   13d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13d50:	48 89 10             	mov    %rdx,(%rax)
   13d53:	90                   	nop
   13d54:	5d                   	pop    %rbp
   13d55:	c3                   	ret

0000000000013d56 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13d56:	55                   	push   %rbp
   13d57:	48 89 e5             	mov    %rsp,%rbp
   13d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13d62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13d66:	48 8b 10             	mov    (%rax),%rdx
   13d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d6d:	48 89 10             	mov    %rdx,(%rax)
   13d70:	90                   	nop
   13d71:	5d                   	pop    %rbp
   13d72:	c3                   	ret
   13d73:	90                   	nop

0000000000013d74 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13d74:	55                   	push   %rbp
   13d75:	48 89 e5             	mov    %rsp,%rbp
   13d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d80:	5d                   	pop    %rbp
   13d81:	c3                   	ret

0000000000013d82 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   13d82:	55                   	push   %rbp
   13d83:	48 89 e5             	mov    %rsp,%rbp
   13d86:	48 83 ec 10          	sub    $0x10,%rsp
   13d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   13d92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13d96:	48 89 c7             	mov    %rax,%rdi
   13d99:	e8 16 10 00 00       	call   14db4 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13d9e:	48 89 c2             	mov    %rax,%rdx
   13da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13da5:	48 89 d6             	mov    %rdx,%rsi
   13da8:	48 89 c7             	mov    %rax,%rdi
   13dab:	e8 2a 5d ff ff       	call   9ada <_ZNSaIP9VkImage_TEC1ERKS1_>
   13db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13db4:	c9                   	leave
   13db5:	c3                   	ret

0000000000013db6 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13db6:	55                   	push   %rbp
   13db7:	48 89 e5             	mov    %rsp,%rbp
   13dba:	48 83 ec 10          	sub    $0x10,%rsp
   13dbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13dc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   13dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13dce:	48 89 d6             	mov    %rdx,%rsi
   13dd1:	48 89 c7             	mov    %rax,%rdi
   13dd4:	e8 e9 0f 00 00       	call   14dc2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   13dd9:	90                   	nop
   13dda:	c9                   	leave
   13ddb:	c3                   	ret

0000000000013ddc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   13ddc:	55                   	push   %rbp
   13ddd:	48 89 e5             	mov    %rsp,%rbp
   13de0:	48 83 ec 30          	sub    $0x30,%rsp
   13de4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13de8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   13dec:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13df0:	48 89 c7             	mov    %rax,%rdi
   13df3:	e8 64 71 ff ff       	call   af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   13df8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13dfc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13e00:	48 89 d6             	mov    %rdx,%rsi
   13e03:	48 89 c7             	mov    %rax,%rdi
   13e06:	e8 dd 0f 00 00       	call   14de8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   13e0b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13e0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e13:	48 89 d6             	mov    %rdx,%rsi
   13e16:	48 89 c7             	mov    %rax,%rdi
   13e19:	e8 ca 0f 00 00       	call   14de8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   13e1e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13e22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13e26:	48 89 d6             	mov    %rdx,%rsi
   13e29:	48 89 c7             	mov    %rax,%rdi
   13e2c:	e8 b7 0f 00 00       	call   14de8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   13e31:	90                   	nop
   13e32:	c9                   	leave
   13e33:	c3                   	ret

0000000000013e34 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   13e34:	55                   	push   %rbp
   13e35:	48 89 e5             	mov    %rsp,%rbp
   13e38:	48 83 ec 10          	sub    $0x10,%rsp
   13e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   13e44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13e48:	48 89 c7             	mov    %rax,%rdi
   13e4b:	e8 d5 0f 00 00       	call   14e25 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   13e50:	90                   	nop
   13e51:	c9                   	leave
   13e52:	c3                   	ret
   13e53:	90                   	nop

0000000000013e54 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13e54:	55                   	push   %rbp
   13e55:	48 89 e5             	mov    %rsp,%rbp
   13e58:	48 83 ec 10          	sub    $0x10,%rsp
   13e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   13e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e64:	48 89 c7             	mov    %rax,%rdi
   13e67:	e8 0a 10 00 00       	call   14e76 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13e6c:	48 89 c7             	mov    %rax,%rdi
   13e6f:	e8 bf 0f 00 00       	call   14e33 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   13e74:	c9                   	leave
   13e75:	c3                   	ret

0000000000013e76 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   13e76:	55                   	push   %rbp
   13e77:	48 89 e5             	mov    %rsp,%rbp
   13e7a:	48 83 ec 20          	sub    $0x20,%rsp
   13e7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   13e8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e92:	48 89 d6             	mov    %rdx,%rsi
   13e95:	48 89 c7             	mov    %rax,%rdi
   13e98:	e8 e7 0f 00 00       	call   14e84 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   13e9d:	c9                   	leave
   13e9e:	c3                   	ret
   13e9f:	90                   	nop

0000000000013ea0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   13ea0:	55                   	push   %rbp
   13ea1:	48 89 e5             	mov    %rsp,%rbp
   13ea4:	53                   	push   %rbx
   13ea5:	48 83 ec 38          	sub    $0x38,%rsp
   13ea9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13ead:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13eb1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   13eb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13eb9:	48 89 c7             	mov    %rax,%rdi
   13ebc:	e8 93 ff ff ff       	call   13e54 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13ec1:	48 89 c3             	mov    %rax,%rbx
   13ec4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ec8:	48 89 c7             	mov    %rax,%rdi
   13ecb:	e8 20 d6 ff ff       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13ed0:	48 29 c3             	sub    %rax,%rbx
   13ed3:	48 89 da             	mov    %rbx,%rdx
   13ed6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13eda:	48 39 c2             	cmp    %rax,%rdx
   13edd:	0f 92 c0             	setb   %al
   13ee0:	84 c0                	test   %al,%al
   13ee2:	74 0c                	je     13ef0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   13ee4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ee8:	48 89 c7             	mov    %rax,%rdi
   13eeb:	e8 90 02 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   13ef0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ef4:	48 89 c7             	mov    %rax,%rdi
   13ef7:	e8 f4 d5 ff ff       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13efc:	48 89 c3             	mov    %rax,%rbx
   13eff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f03:	48 89 c7             	mov    %rax,%rdi
   13f06:	e8 e5 d5 ff ff       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13f0b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13f0f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13f13:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13f17:	48 89 d6             	mov    %rdx,%rsi
   13f1a:	48 89 c7             	mov    %rax,%rdi
   13f1d:	e8 47 07 00 00       	call   14669 <_ZSt3maxImERKT_S2_S2_>
   13f22:	48 8b 00             	mov    (%rax),%rax
   13f25:	48 01 d8             	add    %rbx,%rax
   13f28:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13f2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f30:	48 89 c7             	mov    %rax,%rdi
   13f33:	e8 b8 d5 ff ff       	call   114f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13f38:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13f3c:	72 12                	jb     13f50 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   13f3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f42:	48 89 c7             	mov    %rax,%rdi
   13f45:	e8 0a ff ff ff       	call   13e54 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13f4a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13f4e:	73 0e                	jae    13f5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   13f50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f54:	48 89 c7             	mov    %rax,%rdi
   13f57:	e8 f8 fe ff ff       	call   13e54 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13f5c:	eb 04                	jmp    13f62 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   13f5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13f62:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13f66:	c9                   	leave
   13f67:	c3                   	ret

0000000000013f68 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13f68:	55                   	push   %rbp
   13f69:	48 89 e5             	mov    %rsp,%rbp
   13f6c:	48 83 ec 10          	sub    $0x10,%rsp
   13f70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13f78:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13f7d:	74 15                	je     13f94 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   13f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f87:	48 89 d6             	mov    %rdx,%rsi
   13f8a:	48 89 c7             	mov    %rax,%rdi
   13f8d:	e8 1b 0f 00 00       	call   14ead <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   13f92:	eb 05                	jmp    13f99 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   13f94:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13f99:	c9                   	leave
   13f9a:	c3                   	ret

0000000000013f9b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   13f9b:	55                   	push   %rbp
   13f9c:	48 89 e5             	mov    %rsp,%rbp
   13f9f:	48 83 ec 20          	sub    $0x20,%rsp
   13fa3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fa7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13fab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13faf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13fb3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13fb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13fbb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13fbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fc3:	48 89 c7             	mov    %rax,%rdi
   13fc6:	e8 0c 0f 00 00       	call   14ed7 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   13fcb:	c9                   	leave
   13fcc:	c3                   	ret
   13fcd:	90                   	nop

0000000000013fce <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   13fce:	55                   	push   %rbp
   13fcf:	48 89 e5             	mov    %rsp,%rbp
   13fd2:	48 83 ec 10          	sub    $0x10,%rsp
   13fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   13fde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fe6:	48 89 d6             	mov    %rdx,%rsi
   13fe9:	48 89 c7             	mov    %rax,%rdi
   13fec:	e8 49 0f 00 00       	call   14f3a <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   13ff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ff5:	48 89 c7             	mov    %rax,%rdi
   13ff8:	e8 63 0f 00 00       	call   14f60 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   13ffd:	90                   	nop
   13ffe:	c9                   	leave
   13fff:	c3                   	ret

0000000000014000 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   14000:	55                   	push   %rbp
   14001:	48 89 e5             	mov    %rsp,%rbp
   14004:	48 83 ec 20          	sub    $0x20,%rsp
   14008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1400c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14010:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   14014:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14019:	74 17                	je     14032 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1401b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1401f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14023:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14027:	48 89 ce             	mov    %rcx,%rsi
   1402a:	48 89 c7             	mov    %rax,%rdi
   1402d:	e8 5c 0f 00 00       	call   14f8e <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   14032:	90                   	nop
   14033:	c9                   	leave
   14034:	c3                   	ret
   14035:	90                   	nop

0000000000014036 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   14036:	55                   	push   %rbp
   14037:	48 89 e5             	mov    %rsp,%rbp
   1403a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1403e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14042:	48 8b 40 08          	mov    0x8(%rax),%rax
   14046:	5d                   	pop    %rbp
   14047:	c3                   	ret

0000000000014048 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   14048:	55                   	push   %rbp
   14049:	48 89 e5             	mov    %rsp,%rbp
   1404c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   14050:	90                   	nop
   14051:	5d                   	pop    %rbp
   14052:	c3                   	ret

0000000000014053 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   14053:	55                   	push   %rbp
   14054:	48 89 e5             	mov    %rsp,%rbp
   14057:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1405b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1405f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14063:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   14067:	48 c1 f8 04          	sar    $0x4,%rax
   1406b:	48 89 c2             	mov    %rax,%rdx
   1406e:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   14075:	e3 38 8e 
   14078:	48 0f af c2          	imul   %rdx,%rax
    }
   1407c:	5d                   	pop    %rbp
   1407d:	c3                   	ret

000000000001407e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1407e:	55                   	push   %rbp
   1407f:	48 89 e5             	mov    %rsp,%rbp
   14082:	53                   	push   %rbx
   14083:	48 83 ec 28          	sub    $0x28,%rsp
   14087:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1408b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1408f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14093:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14097:	48 89 d6             	mov    %rdx,%rsi
   1409a:	48 89 c7             	mov    %rax,%rdi
   1409d:	e8 98 0e 00 00       	call   14f3a <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   140a2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   140a6:	48 89 c7             	mov    %rax,%rdi
   140a9:	e8 0e 0f 00 00       	call   14fbc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   140ae:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   140b2:	0f 92 c3             	setb   %bl
   140b5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   140b9:	48 89 c7             	mov    %rax,%rdi
   140bc:	e8 9b d1 ff ff       	call   1125c <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   140c1:	84 db                	test   %bl,%bl
   140c3:	74 0f                	je     140d4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   140c5:	48 8d 05 2c 6c 00 00 	lea    0x6c2c(%rip),%rax        # 1acf8 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   140cc:	48 89 c7             	mov    %rax,%rdi
   140cf:	e8 ac 00 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   140d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   140d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   140dc:	c9                   	leave
   140dd:	c3                   	ret

00000000000140de <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   140de:	55                   	push   %rbp
   140df:	48 89 e5             	mov    %rsp,%rbp
   140e2:	48 83 ec 10          	sub    $0x10,%rsp
   140e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   140ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   140f3:	74 15                	je     1410a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   140f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   140fd:	48 89 d6             	mov    %rdx,%rsi
   14100:	48 89 c7             	mov    %rax,%rdi
   14103:	e8 f6 0e 00 00       	call   14ffe <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   14108:	eb 05                	jmp    1410f <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   1410a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1410f:	c9                   	leave
   14110:	c3                   	ret

0000000000014111 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   14111:	55                   	push   %rbp
   14112:	48 89 e5             	mov    %rsp,%rbp
   14115:	48 83 ec 20          	sub    $0x20,%rsp
   14119:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1411d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14121:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   14125:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   14129:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1412d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14135:	48 89 ce             	mov    %rcx,%rsi
   14138:	48 89 c7             	mov    %rax,%rdi
   1413b:	e8 e8 0e 00 00       	call   15028 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   14140:	c9                   	leave
   14141:	c3                   	ret

0000000000014142 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   14142:	55                   	push   %rbp
   14143:	48 89 e5             	mov    %rsp,%rbp
   14146:	48 83 ec 10          	sub    $0x10,%rsp
   1414a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1414e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   14152:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1415a:	48 89 d6             	mov    %rdx,%rsi
   1415d:	48 89 c7             	mov    %rax,%rdi
   14160:	e8 f8 0e 00 00       	call   1505d <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   14165:	90                   	nop
   14166:	c9                   	leave
   14167:	c3                   	ret

0000000000014168 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   14168:	55                   	push   %rbp
   14169:	48 89 e5             	mov    %rsp,%rbp
   1416c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14170:	90                   	nop
   14171:	5d                   	pop    %rbp
   14172:	c3                   	ret
   14173:	90                   	nop

0000000000014174 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14174:	55                   	push   %rbp
   14175:	48 89 e5             	mov    %rsp,%rbp
   14178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1417c:	90                   	nop
   1417d:	5d                   	pop    %rbp
   1417e:	c3                   	ret

000000000001417f <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1417f:	55                   	push   %rbp
   14180:	48 89 e5             	mov    %rsp,%rbp
   14183:	53                   	push   %rbx
   14184:	48 83 ec 28          	sub    $0x28,%rsp
   14188:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1418c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   14190:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14194:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14198:	48 89 d6             	mov    %rdx,%rsi
   1419b:	48 89 c7             	mov    %rax,%rdi
   1419e:	e8 ff 00 00 00       	call   142a2 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   141a3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   141a7:	48 89 c7             	mov    %rax,%rdi
   141aa:	e8 bd 0e 00 00       	call   1506c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   141af:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   141b3:	0f 92 c3             	setb   %bl
   141b6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   141ba:	48 89 c7             	mov    %rax,%rdi
   141bd:	e8 d4 e8 ff ff       	call   12a96 <_ZNSaIP12VkPipeline_TED1Ev>
   141c2:	84 db                	test   %bl,%bl
   141c4:	74 0f                	je     141d5 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   141c6:	48 8d 05 2b 6b 00 00 	lea    0x6b2b(%rip),%rax        # 1acf8 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   141cd:	48 89 c7             	mov    %rax,%rdi
   141d0:	e8 ab ff fe ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   141d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   141d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   141dd:	c9                   	leave
   141de:	c3                   	ret
   141df:	90                   	nop

00000000000141e0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   141e0:	55                   	push   %rbp
   141e1:	48 89 e5             	mov    %rsp,%rbp
   141e4:	53                   	push   %rbx
   141e5:	48 83 ec 28          	sub    $0x28,%rsp
   141e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   141ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   141f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   141f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   141fd:	48 89 d6             	mov    %rdx,%rsi
   14200:	48 89 c7             	mov    %rax,%rdi
   14203:	e8 a6 0e 00 00       	call   150ae <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   14208:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1420c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14210:	48 89 d6             	mov    %rdx,%rsi
   14213:	48 89 c7             	mov    %rax,%rdi
   14216:	e8 c5 0e 00 00       	call   150e0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   1421b:	eb 1a                	jmp    14237 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   1421d:	48 89 c3             	mov    %rax,%rbx
   14220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14224:	48 89 c7             	mov    %rax,%rdi
   14227:	e8 18 d1 ff ff       	call   11344 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1422c:	48 89 d8             	mov    %rbx,%rax
   1422f:	48 89 c7             	mov    %rax,%rdi
   14232:	e8 b9 04 ff ff       	call   46f0 <_Unwind_Resume@plt>
   14237:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1423b:	c9                   	leave
   1423c:	c3                   	ret
   1423d:	90                   	nop

000000000001423e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   1423e:	55                   	push   %rbp
   1423f:	48 89 e5             	mov    %rsp,%rbp
   14242:	48 83 ec 10          	sub    $0x10,%rsp
   14246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1424a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   1424e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14252:	48 89 c7             	mov    %rax,%rdi
   14255:	e8 64 e9 ff ff       	call   12bbe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1425a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   1425d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14261:	48 8b 00             	mov    (%rax),%rax
   14264:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14268:	48 89 ce             	mov    %rcx,%rsi
   1426b:	48 89 c7             	mov    %rax,%rdi
   1426e:	e8 c3 0e 00 00       	call   15136 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   14273:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14277:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1427b:	90                   	nop
   1427c:	c9                   	leave
   1427d:	c3                   	ret

000000000001427e <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1427e:	55                   	push   %rbp
   1427f:	48 89 e5             	mov    %rsp,%rbp
   14282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14286:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1428a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1428e:	5d                   	pop    %rbp
   1428f:	c3                   	ret

0000000000014290 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   14290:	55                   	push   %rbp
   14291:	48 89 e5             	mov    %rsp,%rbp
   14294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1429c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142a0:	5d                   	pop    %rbp
   142a1:	c3                   	ret

00000000000142a2 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   142a2:	55                   	push   %rbp
   142a3:	48 89 e5             	mov    %rsp,%rbp
   142a6:	48 83 ec 10          	sub    $0x10,%rsp
   142aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   142b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142ba:	48 89 d6             	mov    %rdx,%rsi
   142bd:	48 89 c7             	mov    %rax,%rdi
   142c0:	e8 9b 0e 00 00       	call   15160 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   142c5:	90                   	nop
   142c6:	c9                   	leave
   142c7:	c3                   	ret

00000000000142c8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   142c8:	55                   	push   %rbp
   142c9:	48 89 e5             	mov    %rsp,%rbp
   142cc:	48 83 ec 20          	sub    $0x20,%rsp
   142d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   142d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   142dc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   142e1:	74 17                	je     142fa <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   142e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   142eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   142ef:	48 89 ce             	mov    %rcx,%rsi
   142f2:	48 89 c7             	mov    %rax,%rdi
   142f5:	e8 75 0e 00 00       	call   1516f <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   142fa:	90                   	nop
   142fb:	c9                   	leave
   142fc:	c3                   	ret

00000000000142fd <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   142fd:	55                   	push   %rbp
   142fe:	48 89 e5             	mov    %rsp,%rbp
   14301:	48 83 ec 10          	sub    $0x10,%rsp
   14305:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14309:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1430d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14315:	48 89 d6             	mov    %rdx,%rsi
   14318:	48 89 c7             	mov    %rax,%rdi
   1431b:	e8 7d 0e 00 00       	call   1519d <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   14320:	90                   	nop
   14321:	c9                   	leave
   14322:	c3                   	ret
   14323:	90                   	nop

0000000000014324 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   14324:	55                   	push   %rbp
   14325:	48 89 e5             	mov    %rsp,%rbp
   14328:	48 83 ec 10          	sub    $0x10,%rsp
   1432c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14334:	48 89 c7             	mov    %rax,%rdi
   14337:	e8 b2 0e 00 00       	call   151ee <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1433c:	48 89 c7             	mov    %rax,%rdi
   1433f:	e8 68 0e 00 00       	call   151ac <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   14344:	c9                   	leave
   14345:	c3                   	ret

0000000000014346 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   14346:	55                   	push   %rbp
   14347:	48 89 e5             	mov    %rsp,%rbp
   1434a:	48 83 ec 20          	sub    $0x20,%rsp
   1434e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14352:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14356:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1435a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1435e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14362:	48 89 d6             	mov    %rdx,%rsi
   14365:	48 89 c7             	mov    %rax,%rdi
   14368:	e8 8f 0e 00 00       	call   151fc <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   1436d:	c9                   	leave
   1436e:	c3                   	ret
   1436f:	90                   	nop

0000000000014370 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   14370:	55                   	push   %rbp
   14371:	48 89 e5             	mov    %rsp,%rbp
   14374:	53                   	push   %rbx
   14375:	48 83 ec 38          	sub    $0x38,%rsp
   14379:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1437d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14381:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   14385:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14389:	48 89 c7             	mov    %rax,%rdi
   1438c:	e8 93 ff ff ff       	call   14324 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   14391:	48 89 c3             	mov    %rax,%rbx
   14394:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14398:	48 89 c7             	mov    %rax,%rdi
   1439b:	e8 56 e8 ff ff       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   143a0:	48 29 c3             	sub    %rax,%rbx
   143a3:	48 89 da             	mov    %rbx,%rdx
   143a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143aa:	48 39 c2             	cmp    %rax,%rdx
   143ad:	0f 92 c0             	setb   %al
   143b0:	84 c0                	test   %al,%al
   143b2:	74 0c                	je     143c0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   143b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   143b8:	48 89 c7             	mov    %rax,%rdi
   143bb:	e8 c0 fd fe ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   143c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143c4:	48 89 c7             	mov    %rax,%rdi
   143c7:	e8 2a e8 ff ff       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   143cc:	48 89 c3             	mov    %rax,%rbx
   143cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143d3:	48 89 c7             	mov    %rax,%rdi
   143d6:	e8 1b e8 ff ff       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   143db:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   143df:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   143e3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   143e7:	48 89 d6             	mov    %rdx,%rsi
   143ea:	48 89 c7             	mov    %rax,%rdi
   143ed:	e8 77 02 00 00       	call   14669 <_ZSt3maxImERKT_S2_S2_>
   143f2:	48 8b 00             	mov    (%rax),%rax
   143f5:	48 01 d8             	add    %rbx,%rax
   143f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   143fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14400:	48 89 c7             	mov    %rax,%rdi
   14403:	e8 ee e7 ff ff       	call   12bf6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   14408:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1440c:	72 12                	jb     14420 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1440e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14412:	48 89 c7             	mov    %rax,%rdi
   14415:	e8 0a ff ff ff       	call   14324 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1441a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1441e:	73 0e                	jae    1442e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   14420:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14424:	48 89 c7             	mov    %rax,%rdi
   14427:	e8 f8 fe ff ff       	call   14324 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1442c:	eb 04                	jmp    14432 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1442e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   14432:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14436:	c9                   	leave
   14437:	c3                   	ret

0000000000014438 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14438:	55                   	push   %rbp
   14439:	48 89 e5             	mov    %rsp,%rbp
   1443c:	48 83 ec 10          	sub    $0x10,%rsp
   14440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14444:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   14448:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1444d:	74 15                	je     14464 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   1444f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14453:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14457:	48 89 d6             	mov    %rdx,%rsi
   1445a:	48 89 c7             	mov    %rax,%rdi
   1445d:	e8 c3 0d 00 00       	call   15225 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   14462:	eb 05                	jmp    14469 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   14464:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   14469:	c9                   	leave
   1446a:	c3                   	ret

000000000001446b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1446b:	55                   	push   %rbp
   1446c:	48 89 e5             	mov    %rsp,%rbp
   1446f:	48 83 ec 20          	sub    $0x20,%rsp
   14473:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14477:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1447b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1447f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   14483:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   14487:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1448b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1448f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14493:	48 89 c7             	mov    %rax,%rdi
   14496:	e8 b4 0d 00 00       	call   1524f <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1449b:	c9                   	leave
   1449c:	c3                   	ret
   1449d:	90                   	nop

000000000001449e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1449e:	55                   	push   %rbp
   1449f:	48 89 e5             	mov    %rsp,%rbp
   144a2:	48 83 ec 10          	sub    $0x10,%rsp
   144a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   144ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   144b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144b6:	48 89 d6             	mov    %rdx,%rsi
   144b9:	48 89 c7             	mov    %rax,%rdi
   144bc:	e8 f1 0d 00 00       	call   152b2 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   144c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144c5:	48 89 c7             	mov    %rax,%rdi
   144c8:	e8 67 eb ff ff       	call   13034 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   144cd:	90                   	nop
   144ce:	c9                   	leave
   144cf:	c3                   	ret

00000000000144d0 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   144d0:	55                   	push   %rbp
   144d1:	48 89 e5             	mov    %rsp,%rbp
   144d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144dc:	48 8b 40 08          	mov    0x8(%rax),%rax
   144e0:	5d                   	pop    %rbp
   144e1:	c3                   	ret

00000000000144e2 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   144e2:	55                   	push   %rbp
   144e3:	48 89 e5             	mov    %rsp,%rbp
   144e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   144ea:	90                   	nop
   144eb:	5d                   	pop    %rbp
   144ec:	c3                   	ret

00000000000144ed <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   144ed:	55                   	push   %rbp
   144ee:	48 89 e5             	mov    %rsp,%rbp
   144f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   144f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   144fd:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   14501:	48 c1 f8 03          	sar    $0x3,%rax
    }
   14505:	5d                   	pop    %rbp
   14506:	c3                   	ret

0000000000014507 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   14507:	55                   	push   %rbp
   14508:	48 89 e5             	mov    %rsp,%rbp
   1450b:	53                   	push   %rbx
   1450c:	48 83 ec 28          	sub    $0x28,%rsp
   14510:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14514:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   14518:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1451c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14520:	48 89 d6             	mov    %rdx,%rsi
   14523:	48 89 c7             	mov    %rax,%rdi
   14526:	e8 87 0d 00 00       	call   152b2 <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1452b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1452f:	48 89 c7             	mov    %rax,%rdi
   14532:	e8 fc 08 00 00       	call   14e33 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   14537:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1453b:	0f 92 c3             	setb   %bl
   1453e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14542:	48 89 c7             	mov    %rax,%rdi
   14545:	e8 6c d0 ff ff       	call   115b6 <_ZNSaIP13VkImageView_TED1Ev>
   1454a:	84 db                	test   %bl,%bl
   1454c:	74 0f                	je     1455d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1454e:	48 8d 05 a3 67 00 00 	lea    0x67a3(%rip),%rax        # 1acf8 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   14555:	48 89 c7             	mov    %rax,%rdi
   14558:	e8 23 fc fe ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1455d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   14561:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14565:	c9                   	leave
   14566:	c3                   	ret

0000000000014567 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   14567:	55                   	push   %rbp
   14568:	48 89 e5             	mov    %rsp,%rbp
   1456b:	48 83 ec 20          	sub    $0x20,%rsp
   1456f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14573:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14577:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1457b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1457f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14583:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14587:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1458b:	48 89 ce             	mov    %rcx,%rsi
   1458e:	48 89 c7             	mov    %rax,%rdi
   14591:	e8 42 0d 00 00       	call   152d8 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   14596:	c9                   	leave
   14597:	c3                   	ret

0000000000014598 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   14598:	55                   	push   %rbp
   14599:	48 89 e5             	mov    %rsp,%rbp
   1459c:	48 83 ec 10          	sub    $0x10,%rsp
   145a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   145a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   145ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b0:	48 89 d6             	mov    %rdx,%rsi
   145b3:	48 89 c7             	mov    %rax,%rdi
   145b6:	e8 52 0d 00 00       	call   1530d <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   145bb:	90                   	nop
   145bc:	c9                   	leave
   145bd:	c3                   	ret

00000000000145be <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   145be:	55                   	push   %rbp
   145bf:	48 89 e5             	mov    %rsp,%rbp
   145c2:	48 83 ec 20          	sub    $0x20,%rsp
   145c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   145ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   145d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   145d6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   145da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145de:	48 89 ce             	mov    %rcx,%rsi
   145e1:	48 89 c7             	mov    %rax,%rdi
   145e4:	e8 33 0d 00 00       	call   1531c <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   145e9:	90                   	nop
   145ea:	c9                   	leave
   145eb:	c3                   	ret

00000000000145ec <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   145ec:	55                   	push   %rbp
   145ed:	48 89 e5             	mov    %rsp,%rbp
   145f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145f4:	90                   	nop
   145f5:	5d                   	pop    %rbp
   145f6:	c3                   	ret

00000000000145f7 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   145f7:	55                   	push   %rbp
   145f8:	48 89 e5             	mov    %rsp,%rbp
   145fb:	48 83 ec 20          	sub    $0x20,%rsp
   145ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14603:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14607:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1460b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1460f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14617:	48 89 ce             	mov    %rcx,%rsi
   1461a:	48 89 c7             	mov    %rax,%rdi
   1461d:	e8 2c 0d 00 00       	call   1534e <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   14622:	90                   	nop
   14623:	c9                   	leave
   14624:	c3                   	ret

0000000000014625 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   14625:	55                   	push   %rbp
   14626:	48 89 e5             	mov    %rsp,%rbp
   14629:	48 83 ec 10          	sub    $0x10,%rsp
   1462d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14631:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   14635:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1463d:	48 89 d6             	mov    %rdx,%rsi
   14640:	48 89 c7             	mov    %rax,%rdi
   14643:	e8 37 0d 00 00       	call   1537f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   14648:	90                   	nop
   14649:	c9                   	leave
   1464a:	c3                   	ret
   1464b:	90                   	nop

000000000001464c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   1464c:	55                   	push   %rbp
   1464d:	48 89 e5             	mov    %rsp,%rbp
   14650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   14658:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1465c:	48 8b 10             	mov    (%rax),%rdx
   1465f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14663:	48 89 10             	mov    %rdx,(%rax)
   14666:	90                   	nop
   14667:	5d                   	pop    %rbp
   14668:	c3                   	ret

0000000000014669 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   14669:	55                   	push   %rbp
   1466a:	48 89 e5             	mov    %rsp,%rbp
   1466d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14671:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   14675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14679:	48 8b 10             	mov    (%rax),%rdx
   1467c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14680:	48 8b 00             	mov    (%rax),%rax
   14683:	48 39 c2             	cmp    %rax,%rdx
   14686:	73 06                	jae    1468e <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   14688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1468c:	eb 04                	jmp    14692 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   1468e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   14692:	5d                   	pop    %rbp
   14693:	c3                   	ret

0000000000014694 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   14694:	55                   	push   %rbp
   14695:	48 89 e5             	mov    %rsp,%rbp
   14698:	48 83 ec 30          	sub    $0x30,%rsp
   1469c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   146a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   146a8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   146ac:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   146b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   146b4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   146b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146bc:	48 89 ce             	mov    %rcx,%rsi
   146bf:	48 89 c7             	mov    %rax,%rdi
   146c2:	e8 c7 0c 00 00       	call   1538e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   146c7:	c9                   	leave
   146c8:	c3                   	ret

00000000000146c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   146c9:	55                   	push   %rbp
   146ca:	48 89 e5             	mov    %rsp,%rbp
   146cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   146d5:	90                   	nop
   146d6:	5d                   	pop    %rbp
   146d7:	c3                   	ret

00000000000146d8 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   146d8:	55                   	push   %rbp
   146d9:	48 89 e5             	mov    %rsp,%rbp
   146dc:	48 83 ec 10          	sub    $0x10,%rsp
   146e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   146e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146e8:	48 89 c7             	mov    %rax,%rdi
   146eb:	e8 cc 0c 00 00       	call   153bc <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   146f0:	48 89 c7             	mov    %rax,%rdi
   146f3:	e8 01 57 ff ff       	call   9df9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   146f8:	c9                   	leave
   146f9:	c3                   	ret

00000000000146fa <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   146fa:	55                   	push   %rbp
   146fb:	48 89 e5             	mov    %rsp,%rbp
   146fe:	41 54                	push   %r12
   14700:	53                   	push   %rbx
   14701:	48 83 ec 20          	sub    $0x20,%rsp
   14705:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14709:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1470d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14711:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   14715:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14719:	48 89 c7             	mov    %rax,%rdi
   1471c:	e8 a9 0c 00 00       	call   153ca <_ZSt12__niter_baseIPPKcET_S3_>
   14721:	49 89 c4             	mov    %rax,%r12
   14724:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14728:	48 89 c7             	mov    %rax,%rdi
   1472b:	e8 9a 0c 00 00       	call   153ca <_ZSt12__niter_baseIPPKcET_S3_>
   14730:	48 89 c3             	mov    %rax,%rbx
   14733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14737:	48 89 c7             	mov    %rax,%rdi
   1473a:	e8 8b 0c 00 00       	call   153ca <_ZSt12__niter_baseIPPKcET_S3_>
   1473f:	48 89 c7             	mov    %rax,%rdi
   14742:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14746:	48 89 c1             	mov    %rax,%rcx
   14749:	4c 89 e2             	mov    %r12,%rdx
   1474c:	48 89 de             	mov    %rbx,%rsi
   1474f:	e8 84 0c 00 00       	call   153d8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   14754:	48 83 c4 20          	add    $0x20,%rsp
   14758:	5b                   	pop    %rbx
   14759:	41 5c                	pop    %r12
   1475b:	5d                   	pop    %rbp
   1475c:	c3                   	ret
   1475d:	90                   	nop

000000000001475e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   1475e:	55                   	push   %rbp
   1475f:	48 89 e5             	mov    %rsp,%rbp
   14762:	48 83 ec 10          	sub    $0x10,%rsp
   14766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1476a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   1476e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14772:	48 89 c7             	mov    %rax,%rdi
   14775:	e8 84 d8 ff ff       	call   11ffe <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1477a:	48 89 c1             	mov    %rax,%rcx
   1477d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   14781:	48 8b 01             	mov    (%rcx),%rax
   14784:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   14788:	48 89 06             	mov    %rax,(%rsi)
   1478b:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   1478f:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   14793:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   14797:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   1479b:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   1479f:	90                   	nop
   147a0:	c9                   	leave
   147a1:	c3                   	ret

00000000000147a2 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   147a2:	55                   	push   %rbp
   147a3:	48 89 e5             	mov    %rsp,%rbp
   147a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   147aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147ae:	5d                   	pop    %rbp
   147af:	c3                   	ret

00000000000147b0 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   147b0:	55                   	push   %rbp
   147b1:	48 89 e5             	mov    %rsp,%rbp
   147b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   147b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147bc:	5d                   	pop    %rbp
   147bd:	c3                   	ret

00000000000147be <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   147be:	55                   	push   %rbp
   147bf:	48 89 e5             	mov    %rsp,%rbp
   147c2:	53                   	push   %rbx
   147c3:	48 83 ec 18          	sub    $0x18,%rsp
   147c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   147cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147d3:	48 89 c6             	mov    %rax,%rsi
   147d6:	bf 1c 00 00 00       	mov    $0x1c,%edi
   147db:	e8 80 06 ff ff       	call   4e60 <_ZnwmPv>
   147e0:	48 89 c3             	mov    %rax,%rbx
   147e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   147e7:	48 89 c7             	mov    %rax,%rdi
   147ea:	e8 c1 ff ff ff       	call   147b0 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   147ef:	48 89 c1             	mov    %rax,%rcx
   147f2:	48 8b 01             	mov    (%rcx),%rax
   147f5:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   147f9:	48 89 03             	mov    %rax,(%rbx)
   147fc:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   14800:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   14804:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   14808:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   1480c:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   14810:	90                   	nop
   14811:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14815:	c9                   	leave
   14816:	c3                   	ret
   14817:	90                   	nop

0000000000014818 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   14818:	55                   	push   %rbp
   14819:	48 89 e5             	mov    %rsp,%rbp
   1481c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   14820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14824:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   14828:	90                   	nop
   14829:	5d                   	pop    %rbp
   1482a:	c3                   	ret
   1482b:	90                   	nop

000000000001482c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1482c:	55                   	push   %rbp
   1482d:	48 89 e5             	mov    %rsp,%rbp
   14830:	53                   	push   %rbx
   14831:	48 83 ec 18          	sub    $0x18,%rsp
   14835:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14839:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   1483d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14841:	48 89 c7             	mov    %rax,%rdi
   14844:	e8 cd ee ff ff       	call   13716 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14849:	48 89 c3             	mov    %rax,%rbx
   1484c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14850:	48 89 c7             	mov    %rax,%rdi
   14853:	e8 e4 0b 00 00       	call   1543c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14858:	48 89 de             	mov    %rbx,%rsi
   1485b:	48 89 c7             	mov    %rax,%rdi
   1485e:	e8 e7 0b 00 00       	call   1544a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   14863:	90                   	nop
   14864:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14868:	c9                   	leave
   14869:	c3                   	ret

000000000001486a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1486a:	55                   	push   %rbp
   1486b:	48 89 e5             	mov    %rsp,%rbp
   1486e:	48 83 ec 10          	sub    $0x10,%rsp
   14872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14876:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   1487a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1487e:	48 89 c7             	mov    %rax,%rdi
   14881:	e8 b6 0b 00 00       	call   1543c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14886:	48 89 c1             	mov    %rax,%rcx
   14889:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1488d:	ba 01 00 00 00       	mov    $0x1,%edx
   14892:	48 89 c6             	mov    %rax,%rsi
   14895:	48 89 cf             	mov    %rcx,%rdi
   14898:	e8 d3 0b 00 00       	call   15470 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   1489d:	90                   	nop
   1489e:	c9                   	leave
   1489f:	c3                   	ret

00000000000148a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   148a0:	55                   	push   %rbp
   148a1:	48 89 e5             	mov    %rsp,%rbp
   148a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   148a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148ac:	48 83 c0 08          	add    $0x8,%rax
   148b0:	5d                   	pop    %rbp
   148b1:	c3                   	ret

00000000000148b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   148b2:	55                   	push   %rbp
   148b3:	48 89 e5             	mov    %rsp,%rbp
   148b6:	53                   	push   %rbx
   148b7:	48 83 ec 38          	sub    $0x38,%rsp
   148bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   148bf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   148c3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   148c7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   148cb:	eb 56                	jmp    14923 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   148cd:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   148d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148d5:	48 89 c7             	mov    %rax,%rdi
   148d8:	e8 e7 03 00 00       	call   14cc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   148dd:	48 89 c1             	mov    %rax,%rcx
   148e0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   148e4:	48 89 c2             	mov    %rax,%rdx
   148e7:	48 89 ce             	mov    %rcx,%rsi
   148ea:	48 89 df             	mov    %rbx,%rdi
   148ed:	e8 bc d9 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   148f2:	83 f0 01             	xor    $0x1,%eax
   148f5:	84 c0                	test   %al,%al
   148f7:	74 1a                	je     14913 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   148f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   148fd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   14901:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14905:	48 89 c7             	mov    %rax,%rdi
   14908:	e8 28 ed ff ff       	call   13635 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1490d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14911:	eb 10                	jmp    14923 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   14913:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14917:	48 89 c7             	mov    %rax,%rdi
   1491a:	e8 04 ed ff ff       	call   13623 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1491f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   14923:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   14928:	75 a3                	jne    148cd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   1492a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1492e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   14932:	48 89 d6             	mov    %rdx,%rsi
   14935:	48 89 c7             	mov    %rax,%rdi
   14938:	e8 ff f3 ff ff       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1493d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   14941:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14945:	c9                   	leave
   14946:	c3                   	ret
   14947:	90                   	nop

0000000000014948 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   14948:	55                   	push   %rbp
   14949:	48 89 e5             	mov    %rsp,%rbp
   1494c:	48 83 ec 10          	sub    $0x10,%rsp
   14950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   14954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14958:	48 89 c7             	mov    %rax,%rdi
   1495b:	e8 3e 0b 00 00       	call   1549e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   14960:	c9                   	leave
   14961:	c3                   	ret

0000000000014962 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   14962:	55                   	push   %rbp
   14963:	48 89 e5             	mov    %rsp,%rbp
   14966:	53                   	push   %rbx
   14967:	48 83 ec 18          	sub    $0x18,%rsp
   1496b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1496f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   14973:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   14977:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1497b:	48 89 c7             	mov    %rax,%rdi
   1497e:	e8 d9 ed ff ff       	call   1375c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   14983:	48 89 c6             	mov    %rax,%rsi
   14986:	48 89 df             	mov    %rbx,%rdi
   14989:	e8 1e 0b 00 00       	call   154ac <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   1498e:	90                   	nop
   1498f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14993:	c9                   	leave
   14994:	c3                   	ret
   14995:	90                   	nop

0000000000014996 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   14996:	55                   	push   %rbp
   14997:	48 89 e5             	mov    %rsp,%rbp
   1499a:	41 54                	push   %r12
   1499c:	53                   	push   %rbx
   1499d:	48 83 ec 30          	sub    $0x30,%rsp
   149a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   149a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   149a9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   149ad:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   149b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   149b5:	48 89 c7             	mov    %rax,%rdi
   149b8:	e8 15 0b 00 00       	call   154d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   149bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   149c1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   149c5:	48 89 c7             	mov    %rax,%rdi
   149c8:	e8 ec ed ff ff       	call   137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   149cd:	49 89 c4             	mov    %rax,%r12
   149d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149d4:	48 89 c7             	mov    %rax,%rdi
   149d7:	e8 cf ed ff ff       	call   137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   149dc:	48 89 c3             	mov    %rax,%rbx
   149df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   149e3:	48 89 c7             	mov    %rax,%rdi
   149e6:	e8 b2 ed ff ff       	call   1379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   149eb:	48 89 c2             	mov    %rax,%rdx
   149ee:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   149f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   149f6:	4d 89 e0             	mov    %r12,%r8
   149f9:	48 89 d9             	mov    %rbx,%rcx
   149fc:	48 89 c7             	mov    %rax,%rdi
   149ff:	e8 f6 0a 00 00       	call   154fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   14a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14a08:	48 83 c4 30          	add    $0x30,%rsp
   14a0c:	5b                   	pop    %rbx
   14a0d:	41 5c                	pop    %r12
   14a0f:	5d                   	pop    %rbp
   14a10:	c3                   	ret
   14a11:	90                   	nop

0000000000014a12 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   14a12:	55                   	push   %rbp
   14a13:	48 89 e5             	mov    %rsp,%rbp
   14a16:	48 83 ec 20          	sub    $0x20,%rsp
   14a1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   14a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a22:	48 8b 10             	mov    (%rax),%rdx
   14a25:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14a29:	48 89 d6             	mov    %rdx,%rsi
   14a2c:	48 89 c7             	mov    %rax,%rdi
   14a2f:	e8 08 f3 ff ff       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a38:	c9                   	leave
   14a39:	c3                   	ret

0000000000014a3a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14a3a:	55                   	push   %rbp
   14a3b:	48 89 e5             	mov    %rsp,%rbp
   14a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   14a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a46:	48 8b 40 28          	mov    0x28(%rax),%rax
   14a4a:	5d                   	pop    %rbp
   14a4b:	c3                   	ret

0000000000014a4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   14a4c:	55                   	push   %rbp
   14a4d:	48 89 e5             	mov    %rsp,%rbp
   14a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   14a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a58:	48 83 c0 20          	add    $0x20,%rax
   14a5c:	5d                   	pop    %rbp
   14a5d:	c3                   	ret

0000000000014a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   14a5e:	55                   	push   %rbp
   14a5f:	48 89 e5             	mov    %rsp,%rbp
   14a62:	48 83 ec 10          	sub    $0x10,%rsp
   14a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   14a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a6e:	48 89 c7             	mov    %rax,%rdi
   14a71:	e8 4e 02 00 00       	call   14cc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14a76:	c9                   	leave
   14a77:	c3                   	ret

0000000000014a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   14a78:	55                   	push   %rbp
   14a79:	48 89 e5             	mov    %rsp,%rbp
   14a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   14a88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a8c:	48 8b 10             	mov    (%rax),%rdx
   14a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a93:	48 89 10             	mov    %rdx,(%rax)
   14a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a9a:	48 8b 10             	mov    (%rax),%rdx
   14a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14aa5:	90                   	nop
   14aa6:	5d                   	pop    %rbp
   14aa7:	c3                   	ret

0000000000014aa8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14aa8:	55                   	push   %rbp
   14aa9:	48 89 e5             	mov    %rsp,%rbp
   14aac:	53                   	push   %rbx
   14aad:	48 83 ec 78          	sub    $0x78,%rsp
   14ab1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   14ab5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   14ab9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14abd:	48 89 c7             	mov    %rax,%rdi
   14ac0:	e8 07 d7 ff ff       	call   121cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   14ac5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   14ac9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14acd:	48 89 c7             	mov    %rax,%rdi
   14ad0:	e8 cb fd ff ff       	call   148a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   14ad5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   14ad9:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   14add:	eb 51                	jmp    14b30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   14adf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14ae3:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   14ae7:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   14aeb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14aef:	48 89 c7             	mov    %rax,%rdi
   14af2:	e8 cd 01 00 00       	call   14cc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14af7:	48 89 c2             	mov    %rax,%rdx
   14afa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14afe:	48 89 c6             	mov    %rax,%rsi
   14b01:	48 89 df             	mov    %rbx,%rdi
   14b04:	e8 a5 d7 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14b09:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   14b0c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14b10:	74 0e                	je     14b20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   14b12:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14b16:	48 89 c7             	mov    %rax,%rdi
   14b19:	e8 17 eb ff ff       	call   13635 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   14b1e:	eb 0c                	jmp    14b2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   14b20:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14b24:	48 89 c7             	mov    %rax,%rdi
   14b27:	e8 f7 ea ff ff       	call   13623 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   14b2c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   14b30:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14b34:	48 85 c0             	test   %rax,%rax
   14b37:	75 a6                	jne    14adf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   14b39:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   14b3d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14b41:	48 89 d6             	mov    %rdx,%rsi
   14b44:	48 89 c7             	mov    %rax,%rdi
   14b47:	e8 f0 f1 ff ff       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   14b4c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14b50:	74 54                	je     14ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   14b52:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14b56:	48 89 c7             	mov    %rax,%rdi
   14b59:	e8 6e 0a 00 00       	call   155cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   14b5e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14b62:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   14b66:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14b6a:	48 89 d6             	mov    %rdx,%rsi
   14b6d:	48 89 c7             	mov    %rax,%rdi
   14b70:	e8 dd d6 ff ff       	call   12252 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   14b75:	84 c0                	test   %al,%al
   14b77:	74 21                	je     14b9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   14b79:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   14b7d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14b81:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   14b85:	48 89 ce             	mov    %rcx,%rsi
   14b88:	48 89 c7             	mov    %rax,%rdi
   14b8b:	e8 66 0a 00 00       	call   155f6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   14b90:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14b94:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14b98:	eb 7d                	jmp    14c17 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   14b9a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14b9e:	48 89 c7             	mov    %rax,%rdi
   14ba1:	e8 ce 00 00 00       	call   14c74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   14ba6:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   14baa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   14bae:	48 89 c7             	mov    %rax,%rdi
   14bb1:	e8 a8 fe ff ff       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14bb6:	48 89 c1             	mov    %rax,%rcx
   14bb9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14bbd:	48 89 c2             	mov    %rax,%rdx
   14bc0:	48 89 ce             	mov    %rcx,%rsi
   14bc3:	48 89 df             	mov    %rbx,%rdi
   14bc6:	e8 e3 d6 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14bcb:	84 c0                	test   %al,%al
   14bcd:	74 21                	je     14bf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   14bcf:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   14bd3:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14bd7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14bdb:	48 89 ce             	mov    %rcx,%rsi
   14bde:	48 89 c7             	mov    %rax,%rdi
   14be1:	e8 10 0a 00 00       	call   155f6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   14be6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14bea:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14bee:	eb 27                	jmp    14c17 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   14bf0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   14bf7:	00 
   14bf8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   14bfc:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   14c00:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14c04:	48 89 ce             	mov    %rcx,%rsi
   14c07:	48 89 c7             	mov    %rax,%rdi
   14c0a:	e8 69 fe ff ff       	call   14a78 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14c0f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14c13:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   14c17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14c1b:	c9                   	leave
   14c1c:	c3                   	ret
   14c1d:	90                   	nop

0000000000014c1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   14c1e:	55                   	push   %rbp
   14c1f:	48 89 e5             	mov    %rsp,%rbp
   14c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   14c26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c2a:	48 83 c0 18          	add    $0x18,%rax
   14c2e:	5d                   	pop    %rbp
   14c2f:	c3                   	ret

0000000000014c30 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14c30:	55                   	push   %rbp
   14c31:	48 89 e5             	mov    %rsp,%rbp
   14c34:	48 83 ec 20          	sub    $0x20,%rsp
   14c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14c40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14c44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14c48:	48 89 c7             	mov    %rax,%rdi
   14c4b:	e8 ea 09 00 00       	call   1563a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14c50:	48 8b 10             	mov    (%rax),%rdx
   14c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c57:	48 89 10             	mov    %rdx,(%rax)
   14c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c5e:	48 89 c7             	mov    %rax,%rdi
   14c61:	e8 d4 09 00 00       	call   1563a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14c66:	48 8b 10             	mov    (%rax),%rdx
   14c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c6d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14c71:	90                   	nop
   14c72:	c9                   	leave
   14c73:	c3                   	ret

0000000000014c74 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   14c74:	55                   	push   %rbp
   14c75:	48 89 e5             	mov    %rsp,%rbp
   14c78:	48 83 ec 10          	sub    $0x10,%rsp
   14c7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   14c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c84:	48 8b 00             	mov    (%rax),%rax
   14c87:	48 89 c7             	mov    %rax,%rdi
   14c8a:	e8 41 f7 fe ff       	call   43d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   14c8f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c93:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   14c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14c9a:	c9                   	leave
   14c9b:	c3                   	ret

0000000000014c9c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   14c9c:	55                   	push   %rbp
   14c9d:	48 89 e5             	mov    %rsp,%rbp
   14ca0:	48 83 ec 10          	sub    $0x10,%rsp
   14ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   14ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cac:	48 8b 00             	mov    (%rax),%rax
   14caf:	48 89 c7             	mov    %rax,%rdi
   14cb2:	e8 59 f5 fe ff       	call   4210 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   14cb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14cbb:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   14cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14cc2:	c9                   	leave
   14cc3:	c3                   	ret

0000000000014cc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   14cc4:	55                   	push   %rbp
   14cc5:	48 89 e5             	mov    %rsp,%rbp
   14cc8:	48 83 ec 20          	sub    $0x20,%rsp
   14ccc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   14cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14cd4:	48 89 c7             	mov    %rax,%rdi
   14cd7:	e8 6c 09 00 00       	call   15648 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14cdc:	48 89 c2             	mov    %rax,%rdx
   14cdf:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   14ce3:	48 89 d6             	mov    %rdx,%rsi
   14ce6:	48 89 c7             	mov    %rax,%rdi
   14ce9:	e8 78 09 00 00       	call   15666 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   14cee:	c9                   	leave
   14cef:	c3                   	ret

0000000000014cf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14cf0:	55                   	push   %rbp
   14cf1:	48 89 e5             	mov    %rsp,%rbp
   14cf4:	41 54                	push   %r12
   14cf6:	53                   	push   %rbx
   14cf7:	48 83 ec 30          	sub    $0x30,%rsp
   14cfb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14cff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14d03:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14d07:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   14d0b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   14d10:	75 43                	jne    14d55 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   14d12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d16:	48 89 c7             	mov    %rax,%rdi
   14d19:	e8 82 fb ff ff       	call   148a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   14d1e:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   14d22:	74 31                	je     14d55 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   14d24:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14d28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14d2c:	48 89 c7             	mov    %rax,%rdi
   14d2f:	e8 2a fd ff ff       	call   14a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14d34:	49 89 c4             	mov    %rax,%r12
   14d37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14d3b:	48 89 c7             	mov    %rax,%rdi
   14d3e:	e8 81 ff ff ff       	call   14cc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14d43:	4c 89 e2             	mov    %r12,%rdx
   14d46:	48 89 c6             	mov    %rax,%rsi
   14d49:	48 89 df             	mov    %rbx,%rdi
   14d4c:	e8 5d d5 ff ff       	call   122ae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14d51:	84 c0                	test   %al,%al
   14d53:	74 07                	je     14d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   14d55:	b8 01 00 00 00       	mov    $0x1,%eax
   14d5a:	eb 05                	jmp    14d61 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   14d5c:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   14d61:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   14d64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d68:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   14d6c:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   14d70:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14d74:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   14d78:	89 c7                	mov    %eax,%edi
   14d7a:	e8 d1 f2 fe ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   14d7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d83:	48 8b 40 28          	mov    0x28(%rax),%rax
   14d87:	48 8d 50 01          	lea    0x1(%rax),%rdx
   14d8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d8f:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   14d93:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14d97:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14d9b:	48 89 d6             	mov    %rdx,%rsi
   14d9e:	48 89 c7             	mov    %rax,%rdi
   14da1:	e8 96 ef ff ff       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14da6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   14daa:	48 83 c4 30          	add    $0x30,%rsp
   14dae:	5b                   	pop    %rbx
   14daf:	41 5c                	pop    %r12
   14db1:	5d                   	pop    %rbp
   14db2:	c3                   	ret
   14db3:	90                   	nop

0000000000014db4 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14db4:	55                   	push   %rbp
   14db5:	48 89 e5             	mov    %rsp,%rbp
   14db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dc0:	5d                   	pop    %rbp
   14dc1:	c3                   	ret

0000000000014dc2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14dc2:	55                   	push   %rbp
   14dc3:	48 89 e5             	mov    %rsp,%rbp
   14dc6:	48 83 ec 10          	sub    $0x10,%rsp
   14dca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14dce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14dda:	48 89 d6             	mov    %rdx,%rsi
   14ddd:	48 89 c7             	mov    %rax,%rdi
   14de0:	e8 a9 58 ff ff       	call   a68e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   14de5:	90                   	nop
   14de6:	c9                   	leave
   14de7:	c3                   	ret

0000000000014de8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   14de8:	55                   	push   %rbp
   14de9:	48 89 e5             	mov    %rsp,%rbp
   14dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14df0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   14df4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14df8:	48 8b 10             	mov    (%rax),%rdx
   14dfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dff:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   14e02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e06:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e0e:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   14e12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e16:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e1e:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   14e22:	90                   	nop
   14e23:	5d                   	pop    %rbp
   14e24:	c3                   	ret

0000000000014e25 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   14e25:	55                   	push   %rbp
   14e26:	48 89 e5             	mov    %rsp,%rbp
   14e29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   14e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e31:	5d                   	pop    %rbp
   14e32:	c3                   	ret

0000000000014e33 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14e33:	55                   	push   %rbp
   14e34:	48 89 e5             	mov    %rsp,%rbp
   14e37:	48 83 ec 20          	sub    $0x20,%rsp
   14e3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14e3f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14e46:	ff ff 0f 
   14e49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e51:	48 89 c7             	mov    %rax,%rdi
   14e54:	e8 1f 08 00 00       	call   15678 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   14e59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14e5d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14e61:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14e65:	48 89 d6             	mov    %rdx,%rsi
   14e68:	48 89 c7             	mov    %rax,%rdi
   14e6b:	e8 bd 04 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   14e70:	48 8b 00             	mov    (%rax),%rax
      }
   14e73:	c9                   	leave
   14e74:	c3                   	ret
   14e75:	90                   	nop

0000000000014e76 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14e76:	55                   	push   %rbp
   14e77:	48 89 e5             	mov    %rsp,%rbp
   14e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e82:	5d                   	pop    %rbp
   14e83:	c3                   	ret

0000000000014e84 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14e84:	55                   	push   %rbp
   14e85:	48 89 e5             	mov    %rsp,%rbp
   14e88:	48 83 ec 20          	sub    $0x20,%rsp
   14e8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14e90:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14e94:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14e98:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14e9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ea0:	48 89 d6             	mov    %rdx,%rsi
   14ea3:	48 89 c7             	mov    %rax,%rdi
   14ea6:	e8 e7 07 00 00       	call   15692 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   14eab:	c9                   	leave
   14eac:	c3                   	ret

0000000000014ead <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14ead:	55                   	push   %rbp
   14eae:	48 89 e5             	mov    %rsp,%rbp
   14eb1:	48 83 ec 10          	sub    $0x10,%rsp
   14eb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14eb9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14ebd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ec5:	ba 00 00 00 00       	mov    $0x0,%edx
   14eca:	48 89 ce             	mov    %rcx,%rsi
   14ecd:	48 89 c7             	mov    %rax,%rdi
   14ed0:	e8 1b 08 00 00       	call   156f0 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   14ed5:	c9                   	leave
   14ed6:	c3                   	ret

0000000000014ed7 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14ed7:	55                   	push   %rbp
   14ed8:	48 89 e5             	mov    %rsp,%rbp
   14edb:	41 54                	push   %r12
   14edd:	53                   	push   %rbx
   14ede:	48 83 ec 20          	sub    $0x20,%rsp
   14ee2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ee6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14eea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14eee:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14ef2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ef6:	48 89 c7             	mov    %rax,%rdi
   14ef9:	e8 53 08 00 00       	call   15751 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14efe:	49 89 c4             	mov    %rax,%r12
   14f01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f05:	48 89 c7             	mov    %rax,%rdi
   14f08:	e8 44 08 00 00       	call   15751 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14f0d:	48 89 c3             	mov    %rax,%rbx
   14f10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f14:	48 89 c7             	mov    %rax,%rdi
   14f17:	e8 35 08 00 00       	call   15751 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14f1c:	48 89 c7             	mov    %rax,%rdi
   14f1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14f23:	48 89 c1             	mov    %rax,%rcx
   14f26:	4c 89 e2             	mov    %r12,%rdx
   14f29:	48 89 de             	mov    %rbx,%rsi
   14f2c:	e8 2e 08 00 00       	call   1575f <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14f31:	48 83 c4 20          	add    $0x20,%rsp
   14f35:	5b                   	pop    %rbx
   14f36:	41 5c                	pop    %r12
   14f38:	5d                   	pop    %rbp
   14f39:	c3                   	ret

0000000000014f3a <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   14f3a:	55                   	push   %rbp
   14f3b:	48 89 e5             	mov    %rsp,%rbp
   14f3e:	48 83 ec 10          	sub    $0x10,%rsp
   14f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   14f4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f52:	48 89 d6             	mov    %rdx,%rsi
   14f55:	48 89 c7             	mov    %rax,%rdi
   14f58:	e8 65 08 00 00       	call   157c2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   14f5d:	90                   	nop
   14f5e:	c9                   	leave
   14f5f:	c3                   	ret

0000000000014f60 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14f60:	55                   	push   %rbp
   14f61:	48 89 e5             	mov    %rsp,%rbp
   14f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f6c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14f7e:	00 
   14f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f83:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14f8a:	00 
	{ }
   14f8b:	90                   	nop
   14f8c:	5d                   	pop    %rbp
   14f8d:	c3                   	ret

0000000000014f8e <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14f8e:	55                   	push   %rbp
   14f8f:	48 89 e5             	mov    %rsp,%rbp
   14f92:	48 83 ec 20          	sub    $0x20,%rsp
   14f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   14fa2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14fa6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fae:	48 89 ce             	mov    %rcx,%rsi
   14fb1:	48 89 c7             	mov    %rax,%rdi
   14fb4:	e8 19 08 00 00       	call   157d2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   14fb9:	90                   	nop
   14fba:	c9                   	leave
   14fbb:	c3                   	ret

0000000000014fbc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14fbc:	55                   	push   %rbp
   14fbd:	48 89 e5             	mov    %rsp,%rbp
   14fc0:	48 83 ec 20          	sub    $0x20,%rsp
   14fc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14fc8:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   14fcf:	8e e3 00 
   14fd2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14fd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fda:	48 89 c7             	mov    %rax,%rdi
   14fdd:	e8 2a 08 00 00       	call   1580c <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   14fe2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14fe6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14fea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14fee:	48 89 d6             	mov    %rdx,%rsi
   14ff1:	48 89 c7             	mov    %rax,%rdi
   14ff4:	e8 34 03 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   14ff9:	48 8b 00             	mov    (%rax),%rax
      }
   14ffc:	c9                   	leave
   14ffd:	c3                   	ret

0000000000014ffe <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   14ffe:	55                   	push   %rbp
   14fff:	48 89 e5             	mov    %rsp,%rbp
   15002:	48 83 ec 10          	sub    $0x10,%rsp
   15006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1500a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1500e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15016:	ba 00 00 00 00       	mov    $0x0,%edx
   1501b:	48 89 ce             	mov    %rcx,%rsi
   1501e:	48 89 c7             	mov    %rax,%rdi
   15021:	e8 00 08 00 00       	call   15826 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   15026:	c9                   	leave
   15027:	c3                   	ret

0000000000015028 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   15028:	55                   	push   %rbp
   15029:	48 89 e5             	mov    %rsp,%rbp
   1502c:	48 83 ec 30          	sub    $0x30,%rsp
   15030:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15034:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15038:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1503c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   15040:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   15044:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   15048:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1504c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15050:	48 89 ce             	mov    %rcx,%rsi
   15053:	48 89 c7             	mov    %rax,%rdi
   15056:	e8 36 08 00 00       	call   15891 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   1505b:	c9                   	leave
   1505c:	c3                   	ret

000000000001505d <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1505d:	55                   	push   %rbp
   1505e:	48 89 e5             	mov    %rsp,%rbp
   15061:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15065:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15069:	90                   	nop
   1506a:	5d                   	pop    %rbp
   1506b:	c3                   	ret

000000000001506c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1506c:	55                   	push   %rbp
   1506d:	48 89 e5             	mov    %rsp,%rbp
   15070:	48 83 ec 20          	sub    $0x20,%rsp
   15074:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   15078:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1507f:	ff ff 0f 
   15082:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   15086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1508a:	48 89 c7             	mov    %rax,%rdi
   1508d:	e8 2c 08 00 00       	call   158be <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   15092:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15096:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1509a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1509e:	48 89 d6             	mov    %rdx,%rsi
   150a1:	48 89 c7             	mov    %rax,%rdi
   150a4:	e8 84 02 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   150a9:	48 8b 00             	mov    (%rax),%rax
      }
   150ac:	c9                   	leave
   150ad:	c3                   	ret

00000000000150ae <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   150ae:	55                   	push   %rbp
   150af:	48 89 e5             	mov    %rsp,%rbp
   150b2:	48 83 ec 10          	sub    $0x10,%rsp
   150b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   150be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c6:	48 89 d6             	mov    %rdx,%rsi
   150c9:	48 89 c7             	mov    %rax,%rdi
   150cc:	e8 d1 f1 ff ff       	call   142a2 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   150d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150d5:	48 89 c7             	mov    %rax,%rdi
   150d8:	e8 fb 07 00 00       	call   158d8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   150dd:	90                   	nop
   150de:	c9                   	leave
   150df:	c3                   	ret

00000000000150e0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   150e0:	55                   	push   %rbp
   150e1:	48 89 e5             	mov    %rsp,%rbp
   150e4:	48 83 ec 10          	sub    $0x10,%rsp
   150e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   150f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150f8:	48 89 d6             	mov    %rdx,%rsi
   150fb:	48 89 c7             	mov    %rax,%rdi
   150fe:	e8 03 08 00 00       	call   15906 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   15103:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15107:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1510a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1510e:	48 8b 10             	mov    (%rax),%rdx
   15111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15115:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   15119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1511d:	48 8b 00             	mov    (%rax),%rax
   15120:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15124:	48 c1 e2 03          	shl    $0x3,%rdx
   15128:	48 01 c2             	add    %rax,%rdx
   1512b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1512f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   15133:	90                   	nop
   15134:	c9                   	leave
   15135:	c3                   	ret

0000000000015136 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   15136:	55                   	push   %rbp
   15137:	48 89 e5             	mov    %rsp,%rbp
   1513a:	48 83 ec 20          	sub    $0x20,%rsp
   1513e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15146:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1514a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1514e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15152:	48 89 d6             	mov    %rdx,%rsi
   15155:	48 89 c7             	mov    %rax,%rdi
   15158:	e8 dc 07 00 00       	call   15939 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   1515d:	c9                   	leave
   1515e:	c3                   	ret
   1515f:	90                   	nop

0000000000015160 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   15160:	55                   	push   %rbp
   15161:	48 89 e5             	mov    %rsp,%rbp
   15164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15168:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1516c:	90                   	nop
   1516d:	5d                   	pop    %rbp
   1516e:	c3                   	ret

000000000001516f <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1516f:	55                   	push   %rbp
   15170:	48 89 e5             	mov    %rsp,%rbp
   15173:	48 83 ec 20          	sub    $0x20,%rsp
   15177:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1517b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1517f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15183:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15187:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1518b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1518f:	48 89 ce             	mov    %rcx,%rsi
   15192:	48 89 c7             	mov    %rax,%rdi
   15195:	e8 c8 07 00 00       	call   15962 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   1519a:	90                   	nop
   1519b:	c9                   	leave
   1519c:	c3                   	ret

000000000001519d <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   1519d:	55                   	push   %rbp
   1519e:	48 89 e5             	mov    %rsp,%rbp
   151a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   151a9:	90                   	nop
   151aa:	5d                   	pop    %rbp
   151ab:	c3                   	ret

00000000000151ac <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   151ac:	55                   	push   %rbp
   151ad:	48 89 e5             	mov    %rsp,%rbp
   151b0:	48 83 ec 20          	sub    $0x20,%rsp
   151b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   151b8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   151bf:	ff ff 0f 
   151c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   151c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151ca:	48 89 c7             	mov    %rax,%rdi
   151cd:	e8 c1 07 00 00       	call   15993 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   151d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   151d6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   151da:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   151de:	48 89 d6             	mov    %rdx,%rsi
   151e1:	48 89 c7             	mov    %rax,%rdi
   151e4:	e8 44 01 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   151e9:	48 8b 00             	mov    (%rax),%rax
      }
   151ec:	c9                   	leave
   151ed:	c3                   	ret

00000000000151ee <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   151ee:	55                   	push   %rbp
   151ef:	48 89 e5             	mov    %rsp,%rbp
   151f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   151f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151fa:	5d                   	pop    %rbp
   151fb:	c3                   	ret

00000000000151fc <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   151fc:	55                   	push   %rbp
   151fd:	48 89 e5             	mov    %rsp,%rbp
   15200:	48 83 ec 20          	sub    $0x20,%rsp
   15204:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15208:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1520c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15210:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15218:	48 89 d6             	mov    %rdx,%rsi
   1521b:	48 89 c7             	mov    %rax,%rdi
   1521e:	e8 8a 07 00 00       	call   159ad <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   15223:	c9                   	leave
   15224:	c3                   	ret

0000000000015225 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   15225:	55                   	push   %rbp
   15226:	48 89 e5             	mov    %rsp,%rbp
   15229:	48 83 ec 10          	sub    $0x10,%rsp
   1522d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15231:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15235:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1523d:	ba 00 00 00 00       	mov    $0x0,%edx
   15242:	48 89 ce             	mov    %rcx,%rsi
   15245:	48 89 c7             	mov    %rax,%rdi
   15248:	e8 bd 07 00 00       	call   15a0a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   1524d:	c9                   	leave
   1524e:	c3                   	ret

000000000001524f <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1524f:	55                   	push   %rbp
   15250:	48 89 e5             	mov    %rsp,%rbp
   15253:	41 54                	push   %r12
   15255:	53                   	push   %rbx
   15256:	48 83 ec 20          	sub    $0x20,%rsp
   1525a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1525e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15262:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15266:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1526a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1526e:	48 89 c7             	mov    %rax,%rdi
   15271:	e8 f5 07 00 00       	call   15a6b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   15276:	49 89 c4             	mov    %rax,%r12
   15279:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1527d:	48 89 c7             	mov    %rax,%rdi
   15280:	e8 e6 07 00 00       	call   15a6b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   15285:	48 89 c3             	mov    %rax,%rbx
   15288:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1528c:	48 89 c7             	mov    %rax,%rdi
   1528f:	e8 d7 07 00 00       	call   15a6b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   15294:	48 89 c7             	mov    %rax,%rdi
   15297:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1529b:	48 89 c1             	mov    %rax,%rcx
   1529e:	4c 89 e2             	mov    %r12,%rdx
   152a1:	48 89 de             	mov    %rbx,%rsi
   152a4:	e8 d0 07 00 00       	call   15a79 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   152a9:	48 83 c4 20          	add    $0x20,%rsp
   152ad:	5b                   	pop    %rbx
   152ae:	41 5c                	pop    %r12
   152b0:	5d                   	pop    %rbp
   152b1:	c3                   	ret

00000000000152b2 <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   152b2:	55                   	push   %rbp
   152b3:	48 89 e5             	mov    %rsp,%rbp
   152b6:	48 83 ec 10          	sub    $0x10,%rsp
   152ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   152c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   152c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152ca:	48 89 d6             	mov    %rdx,%rsi
   152cd:	48 89 c7             	mov    %rax,%rdi
   152d0:	e8 07 08 00 00       	call   15adc <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   152d5:	90                   	nop
   152d6:	c9                   	leave
   152d7:	c3                   	ret

00000000000152d8 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   152d8:	55                   	push   %rbp
   152d9:	48 89 e5             	mov    %rsp,%rbp
   152dc:	48 83 ec 30          	sub    $0x30,%rsp
   152e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   152e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   152e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   152ec:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   152f0:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   152f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   152f8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   152fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15300:	48 89 ce             	mov    %rcx,%rsi
   15303:	48 89 c7             	mov    %rax,%rdi
   15306:	e8 e0 07 00 00       	call   15aeb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   1530b:	c9                   	leave
   1530c:	c3                   	ret

000000000001530d <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   1530d:	55                   	push   %rbp
   1530e:	48 89 e5             	mov    %rsp,%rbp
   15311:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15315:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15319:	90                   	nop
   1531a:	5d                   	pop    %rbp
   1531b:	c3                   	ret

000000000001531c <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1531c:	55                   	push   %rbp
   1531d:	48 89 e5             	mov    %rsp,%rbp
   15320:	48 83 ec 20          	sub    $0x20,%rsp
   15324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15328:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1532c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15330:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15334:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1533b:	00 
   1533c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15340:	48 89 d6             	mov    %rdx,%rsi
   15343:	48 89 c7             	mov    %rax,%rdi
   15346:	e8 45 f0 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   1534b:	c9                   	leave
   1534c:	c3                   	ret
   1534d:	90                   	nop

000000000001534e <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1534e:	55                   	push   %rbp
   1534f:	48 89 e5             	mov    %rsp,%rbp
   15352:	48 83 ec 20          	sub    $0x20,%rsp
   15356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1535a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1535e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15366:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1536d:	00 
   1536e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15372:	48 89 d6             	mov    %rdx,%rsi
   15375:	48 89 c7             	mov    %rax,%rdi
   15378:	e8 13 f0 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   1537d:	c9                   	leave
   1537e:	c3                   	ret

000000000001537f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   1537f:	55                   	push   %rbp
   15380:	48 89 e5             	mov    %rsp,%rbp
   15383:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15387:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1538b:	90                   	nop
   1538c:	5d                   	pop    %rbp
   1538d:	c3                   	ret

000000000001538e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1538e:	55                   	push   %rbp
   1538f:	48 89 e5             	mov    %rsp,%rbp
   15392:	48 83 ec 20          	sub    $0x20,%rsp
   15396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1539a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1539e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   153a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   153a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   153aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ae:	48 89 ce             	mov    %rcx,%rsi
   153b1:	48 89 c7             	mov    %rax,%rdi
   153b4:	e8 5f 07 00 00       	call   15b18 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   153b9:	c9                   	leave
   153ba:	c3                   	ret
   153bb:	90                   	nop

00000000000153bc <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   153bc:	55                   	push   %rbp
   153bd:	48 89 e5             	mov    %rsp,%rbp
   153c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   153c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153c8:	5d                   	pop    %rbp
   153c9:	c3                   	ret

00000000000153ca <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   153ca:	55                   	push   %rbp
   153cb:	48 89 e5             	mov    %rsp,%rbp
   153ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   153d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153d6:	5d                   	pop    %rbp
   153d7:	c3                   	ret

00000000000153d8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   153d8:	55                   	push   %rbp
   153d9:	48 89 e5             	mov    %rsp,%rbp
   153dc:	48 83 ec 30          	sub    $0x30,%rsp
   153e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   153e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   153ec:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   153f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   153f4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   153f8:	48 c1 f8 03          	sar    $0x3,%rax
   153fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15400:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15405:	7e 1f                	jle    15426 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1540b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15412:	00 
   15413:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15417:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1541b:	48 89 ce             	mov    %rcx,%rsi
   1541e:	48 89 c7             	mov    %rax,%rdi
   15421:	e8 3a f2 fe ff       	call   4660 <memmove@plt>
      return __result + __count;
   15426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1542a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15431:	00 
   15432:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15436:	48 01 d0             	add    %rdx,%rax
    }
   15439:	c9                   	leave
   1543a:	c3                   	ret
   1543b:	90                   	nop

000000000001543c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1543c:	55                   	push   %rbp
   1543d:	48 89 e5             	mov    %rsp,%rbp
   15440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15448:	5d                   	pop    %rbp
   15449:	c3                   	ret

000000000001544a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1544a:	55                   	push   %rbp
   1544b:	48 89 e5             	mov    %rsp,%rbp
   1544e:	48 83 ec 10          	sub    $0x10,%rsp
   15452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15456:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1545a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1545e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15462:	48 89 d6             	mov    %rdx,%rsi
   15465:	48 89 c7             	mov    %rax,%rdi
   15468:	e8 13 07 00 00       	call   15b80 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   1546d:	90                   	nop
   1546e:	c9                   	leave
   1546f:	c3                   	ret

0000000000015470 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15470:	55                   	push   %rbp
   15471:	48 89 e5             	mov    %rsp,%rbp
   15474:	48 83 ec 20          	sub    $0x20,%rsp
   15478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1547c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15480:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15484:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15488:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1548c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15490:	48 89 ce             	mov    %rcx,%rsi
   15493:	48 89 c7             	mov    %rax,%rdi
   15496:	e8 05 07 00 00       	call   15ba0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   1549b:	90                   	nop
   1549c:	c9                   	leave
   1549d:	c3                   	ret

000000000001549e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   1549e:	55                   	push   %rbp
   1549f:	48 89 e5             	mov    %rsp,%rbp
   154a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   154a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154aa:	5d                   	pop    %rbp
   154ab:	c3                   	ret

00000000000154ac <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   154ac:	55                   	push   %rbp
   154ad:	48 89 e5             	mov    %rsp,%rbp
   154b0:	48 83 ec 10          	sub    $0x10,%rsp
   154b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   154bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   154c0:	48 89 c7             	mov    %rax,%rdi
   154c3:	e8 94 e2 ff ff       	call   1375c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   154c8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   154cc:	48 89 02             	mov    %rax,(%rdx)
   154cf:	90                   	nop
   154d0:	c9                   	leave
   154d1:	c3                   	ret

00000000000154d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   154d2:	55                   	push   %rbp
   154d3:	48 89 e5             	mov    %rsp,%rbp
   154d6:	48 83 ec 10          	sub    $0x10,%rsp
   154da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   154de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154e2:	48 89 c7             	mov    %rax,%rdi
   154e5:	e8 52 ff ff ff       	call   1543c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   154ea:	be 01 00 00 00       	mov    $0x1,%esi
   154ef:	48 89 c7             	mov    %rax,%rdi
   154f2:	e8 e3 06 00 00       	call   15bda <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   154f7:	c9                   	leave
   154f8:	c3                   	ret
   154f9:	90                   	nop

00000000000154fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   154fa:	55                   	push   %rbp
   154fb:	48 89 e5             	mov    %rsp,%rbp
   154fe:	41 56                	push   %r14
   15500:	41 55                	push   %r13
   15502:	41 54                	push   %r12
   15504:	53                   	push   %rbx
   15505:	48 83 ec 30          	sub    $0x30,%rsp
   15509:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1550d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15511:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15515:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   15519:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   1551d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15521:	48 89 c6             	mov    %rax,%rsi
   15524:	bf 48 00 00 00       	mov    $0x48,%edi
   15529:	e8 32 f9 fe ff       	call   4e60 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   1552e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15532:	48 89 c7             	mov    %rax,%rdi
   15535:	e8 7f e2 ff ff       	call   137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1553a:	49 89 c6             	mov    %rax,%r14
   1553d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15541:	48 89 c7             	mov    %rax,%rdi
   15544:	e8 62 e2 ff ff       	call   137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15549:	49 89 c5             	mov    %rax,%r13
   1554c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15550:	48 89 c7             	mov    %rax,%rdi
   15553:	e8 45 e2 ff ff       	call   1379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15558:	49 89 c4             	mov    %rax,%r12
   1555b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1555f:	48 89 c7             	mov    %rax,%rdi
   15562:	e8 af e1 ff ff       	call   13716 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   15567:	48 89 c3             	mov    %rax,%rbx
   1556a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1556e:	48 89 c7             	mov    %rax,%rdi
   15571:	e8 c6 fe ff ff       	call   1543c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   15576:	4d 89 f0             	mov    %r14,%r8
   15579:	4c 89 e9             	mov    %r13,%rcx
   1557c:	4c 89 e2             	mov    %r12,%rdx
   1557f:	48 89 de             	mov    %rbx,%rsi
   15582:	48 89 c7             	mov    %rax,%rdi
   15585:	e8 7a 06 00 00       	call   15c04 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   1558a:	eb 33                	jmp    155bf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   1558c:	48 89 c7             	mov    %rax,%rdi
   1558f:	e8 8c eb fe ff       	call   4120 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   15594:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15598:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1559c:	48 89 d6             	mov    %rdx,%rsi
   1559f:	48 89 c7             	mov    %rax,%rdi
   155a2:	e8 c3 f2 ff ff       	call   1486a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   155a7:	e8 24 f0 fe ff       	call   45d0 <__cxa_rethrow@plt>
	  __catch(...)
   155ac:	48 89 c3             	mov    %rax,%rbx
   155af:	e8 bc f0 fe ff       	call   4670 <__cxa_end_catch@plt>
   155b4:	48 89 d8             	mov    %rbx,%rax
   155b7:	48 89 c7             	mov    %rax,%rdi
   155ba:	e8 31 f1 fe ff       	call   46f0 <_Unwind_Resume@plt>
	}
   155bf:	48 83 c4 30          	add    $0x30,%rsp
   155c3:	5b                   	pop    %rbx
   155c4:	41 5c                	pop    %r12
   155c6:	41 5d                	pop    %r13
   155c8:	41 5e                	pop    %r14
   155ca:	5d                   	pop    %rbp
   155cb:	c3                   	ret

00000000000155cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   155cc:	55                   	push   %rbp
   155cd:	48 89 e5             	mov    %rsp,%rbp
   155d0:	48 83 ec 20          	sub    $0x20,%rsp
   155d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   155d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155dc:	48 8b 50 18          	mov    0x18(%rax),%rdx
   155e0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   155e4:	48 89 d6             	mov    %rdx,%rsi
   155e7:	48 89 c7             	mov    %rax,%rdi
   155ea:	e8 4d e7 ff ff       	call   13d3c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   155ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155f3:	c9                   	leave
   155f4:	c3                   	ret
   155f5:	90                   	nop

00000000000155f6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   155f6:	55                   	push   %rbp
   155f7:	48 89 e5             	mov    %rsp,%rbp
   155fa:	48 83 ec 20          	sub    $0x20,%rsp
   155fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15602:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15606:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1560a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1560e:	48 89 c7             	mov    %rax,%rdi
   15611:	e8 5a 06 00 00       	call   15c70 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   15616:	48 8b 10             	mov    (%rax),%rdx
   15619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1561d:	48 89 10             	mov    %rdx,(%rax)
   15620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15624:	48 89 c7             	mov    %rax,%rdi
   15627:	e8 0e 00 00 00       	call   1563a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1562c:	48 8b 10             	mov    (%rax),%rdx
   1562f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15633:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15637:	90                   	nop
   15638:	c9                   	leave
   15639:	c3                   	ret

000000000001563a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1563a:	55                   	push   %rbp
   1563b:	48 89 e5             	mov    %rsp,%rbp
   1563e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15646:	5d                   	pop    %rbp
   15647:	c3                   	ret

0000000000015648 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   15648:	55                   	push   %rbp
   15649:	48 89 e5             	mov    %rsp,%rbp
   1564c:	48 83 ec 10          	sub    $0x10,%rsp
   15650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   15654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15658:	48 83 c0 20          	add    $0x20,%rax
   1565c:	48 89 c7             	mov    %rax,%rdi
   1565f:	e8 1a 06 00 00       	call   15c7e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   15664:	c9                   	leave
   15665:	c3                   	ret

0000000000015666 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   15666:	55                   	push   %rbp
   15667:	48 89 e5             	mov    %rsp,%rbp
   1566a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1566e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   15672:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15676:	5d                   	pop    %rbp
   15677:	c3                   	ret

0000000000015678 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15678:	55                   	push   %rbp
   15679:	48 89 e5             	mov    %rsp,%rbp
   1567c:	48 83 ec 10          	sub    $0x10,%rsp
   15680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15688:	48 89 c7             	mov    %rax,%rdi
   1568b:	e8 08 06 00 00       	call   15c98 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   15690:	c9                   	leave
   15691:	c3                   	ret

0000000000015692 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15692:	55                   	push   %rbp
   15693:	48 89 e5             	mov    %rsp,%rbp
   15696:	48 83 ec 20          	sub    $0x20,%rsp
   1569a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1569e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   156a2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   156a7:	74 40                	je     156e9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   156a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156ad:	48 89 c7             	mov    %rax,%rdi
   156b0:	e8 fd 05 00 00       	call   15cb2 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   156b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   156b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156bd:	48 89 c7             	mov    %rax,%rdi
   156c0:	e8 fb 05 00 00       	call   15cc0 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   156c5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   156ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   156ce:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   156d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   156d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156da:	48 89 ce             	mov    %rcx,%rsi
   156dd:	48 89 c7             	mov    %rax,%rdi
   156e0:	e8 02 06 00 00       	call   15ce7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   156e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   156e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   156ed:	c9                   	leave
   156ee:	c3                   	ret
   156ef:	90                   	nop

00000000000156f0 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   156f0:	55                   	push   %rbp
   156f1:	48 89 e5             	mov    %rsp,%rbp
   156f4:	48 83 ec 20          	sub    $0x20,%rsp
   156f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15700:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15708:	48 89 c7             	mov    %rax,%rdi
   1570b:	e8 1c 06 00 00       	call   15d2c <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   15710:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15714:	0f 92 c0             	setb   %al
   15717:	0f b6 c0             	movzbl %al,%eax
   1571a:	48 85 c0             	test   %rax,%rax
   1571d:	0f 95 c0             	setne  %al
   15720:	84 c0                	test   %al,%al
   15722:	74 1a                	je     1573e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15724:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1572b:	ff ff 1f 
   1572e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15732:	73 05                	jae    15739 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15734:	e8 37 eb fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15739:	e8 a2 e9 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1573e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15742:	48 c1 e0 03          	shl    $0x3,%rax
   15746:	48 89 c7             	mov    %rax,%rdi
   15749:	e8 32 ec fe ff       	call   4380 <_Znwm@plt>
   1574e:	90                   	nop
      }
   1574f:	c9                   	leave
   15750:	c3                   	ret

0000000000015751 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   15751:	55                   	push   %rbp
   15752:	48 89 e5             	mov    %rsp,%rbp
   15755:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1575d:	5d                   	pop    %rbp
   1575e:	c3                   	ret

000000000001575f <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1575f:	55                   	push   %rbp
   15760:	48 89 e5             	mov    %rsp,%rbp
   15763:	48 83 ec 30          	sub    $0x30,%rsp
   15767:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1576b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1576f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15773:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15777:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1577b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1577f:	48 c1 f8 03          	sar    $0x3,%rax
   15783:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15787:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1578c:	7e 1f                	jle    157ad <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1578e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15792:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15799:	00 
   1579a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1579e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   157a2:	48 89 ce             	mov    %rcx,%rsi
   157a5:	48 89 c7             	mov    %rax,%rdi
   157a8:	e8 b3 ee fe ff       	call   4660 <memmove@plt>
      return __result + __count;
   157ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   157b8:	00 
   157b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   157bd:	48 01 d0             	add    %rdx,%rax
    }
   157c0:	c9                   	leave
   157c1:	c3                   	ret

00000000000157c2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   157c2:	55                   	push   %rbp
   157c3:	48 89 e5             	mov    %rsp,%rbp
   157c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157ce:	90                   	nop
   157cf:	5d                   	pop    %rbp
   157d0:	c3                   	ret
   157d1:	90                   	nop

00000000000157d2 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   157d2:	55                   	push   %rbp
   157d3:	48 89 e5             	mov    %rsp,%rbp
   157d6:	48 83 ec 20          	sub    $0x20,%rsp
   157da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   157e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157ea:	48 89 d0             	mov    %rdx,%rax
   157ed:	48 c1 e0 03          	shl    $0x3,%rax
   157f1:	48 01 d0             	add    %rdx,%rax
   157f4:	48 c1 e0 04          	shl    $0x4,%rax
   157f8:	48 89 c2             	mov    %rax,%rdx
   157fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157ff:	48 89 d6             	mov    %rdx,%rsi
   15802:	48 89 c7             	mov    %rax,%rdi
   15805:	e8 86 eb fe ff       	call   4390 <_ZdlPvm@plt>
      }
   1580a:	c9                   	leave
   1580b:	c3                   	ret

000000000001580c <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1580c:	55                   	push   %rbp
   1580d:	48 89 e5             	mov    %rsp,%rbp
   15810:	48 83 ec 10          	sub    $0x10,%rsp
   15814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1581c:	48 89 c7             	mov    %rax,%rdi
   1581f:	e8 1c 05 00 00       	call   15d40 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   15824:	c9                   	leave
   15825:	c3                   	ret

0000000000015826 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15826:	55                   	push   %rbp
   15827:	48 89 e5             	mov    %rsp,%rbp
   1582a:	48 83 ec 20          	sub    $0x20,%rsp
   1582e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15832:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15836:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1583a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1583e:	48 89 c7             	mov    %rax,%rdi
   15841:	e8 14 05 00 00       	call   15d5a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   15846:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1584a:	0f 92 c0             	setb   %al
   1584d:	0f b6 c0             	movzbl %al,%eax
   15850:	48 85 c0             	test   %rax,%rax
   15853:	0f 95 c0             	setne  %al
   15856:	84 c0                	test   %al,%al
   15858:	74 1a                	je     15874 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1585a:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   15861:	1c c7 01 
   15864:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15868:	73 05                	jae    1586f <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1586a:	e8 01 ea fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1586f:	e8 6c e8 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15874:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15878:	48 89 d0             	mov    %rdx,%rax
   1587b:	48 c1 e0 03          	shl    $0x3,%rax
   1587f:	48 01 d0             	add    %rdx,%rax
   15882:	48 c1 e0 04          	shl    $0x4,%rax
   15886:	48 89 c7             	mov    %rax,%rdi
   15889:	e8 f2 ea fe ff       	call   4380 <_Znwm@plt>
   1588e:	90                   	nop
      }
   1588f:	c9                   	leave
   15890:	c3                   	ret

0000000000015891 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   15891:	55                   	push   %rbp
   15892:	48 89 e5             	mov    %rsp,%rbp
   15895:	48 83 ec 20          	sub    $0x20,%rsp
   15899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1589d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   158a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   158a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   158a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   158ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158b1:	48 89 ce             	mov    %rcx,%rsi
   158b4:	48 89 c7             	mov    %rax,%rdi
   158b7:	e8 b2 04 00 00       	call   15d6e <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   158bc:	c9                   	leave
   158bd:	c3                   	ret

00000000000158be <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   158be:	55                   	push   %rbp
   158bf:	48 89 e5             	mov    %rsp,%rbp
   158c2:	48 83 ec 10          	sub    $0x10,%rsp
   158c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   158ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158ce:	48 89 c7             	mov    %rax,%rdi
   158d1:	e8 e4 04 00 00       	call   15dba <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   158d6:	c9                   	leave
   158d7:	c3                   	ret

00000000000158d8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   158d8:	55                   	push   %rbp
   158d9:	48 89 e5             	mov    %rsp,%rbp
   158dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   158e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   158eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158ef:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   158f6:	00 
   158f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158fb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15902:	00 
	{ }
   15903:	90                   	nop
   15904:	5d                   	pop    %rbp
   15905:	c3                   	ret

0000000000015906 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   15906:	55                   	push   %rbp
   15907:	48 89 e5             	mov    %rsp,%rbp
   1590a:	48 83 ec 10          	sub    $0x10,%rsp
   1590e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15912:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   15916:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1591b:	74 15                	je     15932 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   1591d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15921:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15925:	48 89 d6             	mov    %rdx,%rsi
   15928:	48 89 c7             	mov    %rax,%rdi
   1592b:	e8 a4 04 00 00       	call   15dd4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   15930:	eb 05                	jmp    15937 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   15932:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   15937:	c9                   	leave
   15938:	c3                   	ret

0000000000015939 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15939:	55                   	push   %rbp
   1593a:	48 89 e5             	mov    %rsp,%rbp
   1593d:	48 83 ec 20          	sub    $0x20,%rsp
   15941:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15945:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15949:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1594d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15955:	48 89 d6             	mov    %rdx,%rsi
   15958:	48 89 c7             	mov    %rax,%rdi
   1595b:	e8 9e 04 00 00       	call   15dfe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   15960:	c9                   	leave
   15961:	c3                   	ret

0000000000015962 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15962:	55                   	push   %rbp
   15963:	48 89 e5             	mov    %rsp,%rbp
   15966:	48 83 ec 20          	sub    $0x20,%rsp
   1596a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1596e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15972:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1597a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15981:	00 
   15982:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15986:	48 89 d6             	mov    %rdx,%rsi
   15989:	48 89 c7             	mov    %rax,%rdi
   1598c:	e8 ff e9 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   15991:	c9                   	leave
   15992:	c3                   	ret

0000000000015993 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15993:	55                   	push   %rbp
   15994:	48 89 e5             	mov    %rsp,%rbp
   15997:	48 83 ec 10          	sub    $0x10,%rsp
   1599b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1599f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159a3:	48 89 c7             	mov    %rax,%rdi
   159a6:	e8 b1 04 00 00       	call   15e5c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   159ab:	c9                   	leave
   159ac:	c3                   	ret

00000000000159ad <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   159ad:	55                   	push   %rbp
   159ae:	48 89 e5             	mov    %rsp,%rbp
   159b1:	48 83 ec 20          	sub    $0x20,%rsp
   159b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   159bd:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   159c2:	74 40                	je     15a04 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   159c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159c8:	48 89 c7             	mov    %rax,%rdi
   159cb:	e8 a6 04 00 00       	call   15e76 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   159d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   159d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159d8:	48 89 c7             	mov    %rax,%rdi
   159db:	e8 a4 04 00 00       	call   15e84 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   159e0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   159e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   159e9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   159ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   159f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159f5:	48 89 ce             	mov    %rcx,%rsi
   159f8:	48 89 c7             	mov    %rax,%rdi
   159fb:	e8 ab 04 00 00       	call   15eab <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   15a00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15a08:	c9                   	leave
   15a09:	c3                   	ret

0000000000015a0a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15a0a:	55                   	push   %rbp
   15a0b:	48 89 e5             	mov    %rsp,%rbp
   15a0e:	48 83 ec 20          	sub    $0x20,%rsp
   15a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15a1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a22:	48 89 c7             	mov    %rax,%rdi
   15a25:	e8 c6 04 00 00       	call   15ef0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   15a2a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15a2e:	0f 92 c0             	setb   %al
   15a31:	0f b6 c0             	movzbl %al,%eax
   15a34:	48 85 c0             	test   %rax,%rax
   15a37:	0f 95 c0             	setne  %al
   15a3a:	84 c0                	test   %al,%al
   15a3c:	74 1a                	je     15a58 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15a3e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15a45:	ff ff 1f 
   15a48:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15a4c:	73 05                	jae    15a53 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15a4e:	e8 1d e8 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15a53:	e8 88 e6 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15a58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15a5c:	48 c1 e0 03          	shl    $0x3,%rax
   15a60:	48 89 c7             	mov    %rax,%rdi
   15a63:	e8 18 e9 fe ff       	call   4380 <_Znwm@plt>
   15a68:	90                   	nop
      }
   15a69:	c9                   	leave
   15a6a:	c3                   	ret

0000000000015a6b <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   15a6b:	55                   	push   %rbp
   15a6c:	48 89 e5             	mov    %rsp,%rbp
   15a6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a77:	5d                   	pop    %rbp
   15a78:	c3                   	ret

0000000000015a79 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15a79:	55                   	push   %rbp
   15a7a:	48 89 e5             	mov    %rsp,%rbp
   15a7d:	48 83 ec 30          	sub    $0x30,%rsp
   15a81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15a85:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15a89:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15a8d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15a91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a95:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15a99:	48 c1 f8 03          	sar    $0x3,%rax
   15a9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15aa1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15aa6:	7e 1f                	jle    15ac7 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ab3:	00 
   15ab4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15ab8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15abc:	48 89 ce             	mov    %rcx,%rsi
   15abf:	48 89 c7             	mov    %rax,%rdi
   15ac2:	e8 99 eb fe ff       	call   4660 <memmove@plt>
      return __result + __count;
   15ac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15acb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ad2:	00 
   15ad3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ad7:	48 01 d0             	add    %rdx,%rax
    }
   15ada:	c9                   	leave
   15adb:	c3                   	ret

0000000000015adc <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   15adc:	55                   	push   %rbp
   15add:	48 89 e5             	mov    %rsp,%rbp
   15ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ae4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15ae8:	90                   	nop
   15ae9:	5d                   	pop    %rbp
   15aea:	c3                   	ret

0000000000015aeb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   15aeb:	55                   	push   %rbp
   15aec:	48 89 e5             	mov    %rsp,%rbp
   15aef:	48 83 ec 20          	sub    $0x20,%rsp
   15af3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15af7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15afb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   15aff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15b03:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b0b:	48 89 ce             	mov    %rcx,%rsi
   15b0e:	48 89 c7             	mov    %rax,%rdi
   15b11:	e8 ee 03 00 00       	call   15f04 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   15b16:	c9                   	leave
   15b17:	c3                   	ret

0000000000015b18 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   15b18:	55                   	push   %rbp
   15b19:	48 89 e5             	mov    %rsp,%rbp
   15b1c:	53                   	push   %rbx
   15b1d:	48 83 ec 28          	sub    $0x28,%rsp
   15b21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15b25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15b29:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   15b2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15b31:	48 89 c7             	mov    %rax,%rdi
   15b34:	e8 16 04 00 00       	call   15f4f <_ZSt12__miter_baseIPKPKcET_S4_>
   15b39:	48 89 c3             	mov    %rax,%rbx
   15b3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b40:	48 89 c7             	mov    %rax,%rdi
   15b43:	e8 07 04 00 00       	call   15f4f <_ZSt12__miter_baseIPKPKcET_S4_>
   15b48:	48 89 c1             	mov    %rax,%rcx
   15b4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15b4f:	48 89 c2             	mov    %rax,%rdx
   15b52:	48 89 de             	mov    %rbx,%rsi
   15b55:	48 89 cf             	mov    %rcx,%rdi
   15b58:	e8 00 04 00 00       	call   15f5d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   15b5d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15b61:	c9                   	leave
   15b62:	c3                   	ret
   15b63:	90                   	nop

0000000000015b64 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   15b64:	55                   	push   %rbp
   15b65:	48 89 e5             	mov    %rsp,%rbp
   15b68:	48 83 ec 10          	sub    $0x10,%rsp
   15b6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b74:	48 89 c7             	mov    %rax,%rdi
   15b77:	e8 64 e6 fe ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   15b7c:	90                   	nop
   15b7d:	c9                   	leave
   15b7e:	c3                   	ret
   15b7f:	90                   	nop

0000000000015b80 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   15b80:	55                   	push   %rbp
   15b81:	48 89 e5             	mov    %rsp,%rbp
   15b84:	48 83 ec 10          	sub    $0x10,%rsp
   15b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   15b90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b94:	48 89 c7             	mov    %rax,%rdi
   15b97:	e8 c8 ff ff ff       	call   15b64 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   15b9c:	90                   	nop
   15b9d:	c9                   	leave
   15b9e:	c3                   	ret
   15b9f:	90                   	nop

0000000000015ba0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15ba0:	55                   	push   %rbp
   15ba1:	48 89 e5             	mov    %rsp,%rbp
   15ba4:	48 83 ec 20          	sub    $0x20,%rsp
   15ba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15bac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15bb0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15bb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15bb8:	48 89 d0             	mov    %rdx,%rax
   15bbb:	48 c1 e0 03          	shl    $0x3,%rax
   15bbf:	48 01 d0             	add    %rdx,%rax
   15bc2:	48 c1 e0 03          	shl    $0x3,%rax
   15bc6:	48 89 c2             	mov    %rax,%rdx
   15bc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15bcd:	48 89 d6             	mov    %rdx,%rsi
   15bd0:	48 89 c7             	mov    %rax,%rdi
   15bd3:	e8 b8 e7 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   15bd8:	c9                   	leave
   15bd9:	c3                   	ret

0000000000015bda <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   15bda:	55                   	push   %rbp
   15bdb:	48 89 e5             	mov    %rsp,%rbp
   15bde:	48 83 ec 10          	sub    $0x10,%rsp
   15be2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15be6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15bea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15bee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15bf2:	ba 00 00 00 00       	mov    $0x0,%edx
   15bf7:	48 89 ce             	mov    %rcx,%rsi
   15bfa:	48 89 c7             	mov    %rax,%rdi
   15bfd:	e8 c6 03 00 00       	call   15fc8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   15c02:	c9                   	leave
   15c03:	c3                   	ret

0000000000015c04 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   15c04:	55                   	push   %rbp
   15c05:	48 89 e5             	mov    %rsp,%rbp
   15c08:	41 54                	push   %r12
   15c0a:	53                   	push   %rbx
   15c0b:	48 83 ec 30          	sub    $0x30,%rsp
   15c0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15c13:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15c17:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15c1b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   15c1f:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   15c23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c27:	48 89 c7             	mov    %rax,%rdi
   15c2a:	e8 8a db ff ff       	call   137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15c2f:	49 89 c4             	mov    %rax,%r12
   15c32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15c36:	48 89 c7             	mov    %rax,%rdi
   15c39:	e8 6d db ff ff       	call   137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15c3e:	48 89 c3             	mov    %rax,%rbx
   15c41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c45:	48 89 c7             	mov    %rax,%rdi
   15c48:	e8 50 db ff ff       	call   1379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15c4d:	48 89 c2             	mov    %rax,%rdx
   15c50:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   15c54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c58:	4d 89 e0             	mov    %r12,%r8
   15c5b:	48 89 d9             	mov    %rbx,%rcx
   15c5e:	48 89 c7             	mov    %rax,%rdi
   15c61:	e8 f4 03 00 00       	call   1605a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   15c66:	90                   	nop
   15c67:	48 83 c4 30          	add    $0x30,%rsp
   15c6b:	5b                   	pop    %rbx
   15c6c:	41 5c                	pop    %r12
   15c6e:	5d                   	pop    %rbp
   15c6f:	c3                   	ret

0000000000015c70 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15c70:	55                   	push   %rbp
   15c71:	48 89 e5             	mov    %rsp,%rbp
   15c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c7c:	5d                   	pop    %rbp
   15c7d:	c3                   	ret

0000000000015c7e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   15c7e:	55                   	push   %rbp
   15c7f:	48 89 e5             	mov    %rsp,%rbp
   15c82:	48 83 ec 10          	sub    $0x10,%rsp
   15c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   15c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c8e:	48 89 c7             	mov    %rax,%rdi
   15c91:	e8 74 04 00 00       	call   1610a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   15c96:	c9                   	leave
   15c97:	c3                   	ret

0000000000015c98 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15c98:	55                   	push   %rbp
   15c99:	48 89 e5             	mov    %rsp,%rbp
   15c9c:	48 83 ec 10          	sub    $0x10,%rsp
   15ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ca8:	48 89 c7             	mov    %rax,%rdi
   15cab:	e8 7c 00 00 00       	call   15d2c <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   15cb0:	c9                   	leave
   15cb1:	c3                   	ret

0000000000015cb2 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15cb2:	55                   	push   %rbp
   15cb3:	48 89 e5             	mov    %rsp,%rbp
   15cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   15cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cbe:	5d                   	pop    %rbp
   15cbf:	c3                   	ret

0000000000015cc0 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   15cc0:	55                   	push   %rbp
   15cc1:	48 89 e5             	mov    %rsp,%rbp
   15cc4:	48 83 ec 10          	sub    $0x10,%rsp
   15cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   15ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cd0:	48 89 c6             	mov    %rax,%rsi
   15cd3:	bf 08 00 00 00       	mov    $0x8,%edi
   15cd8:	e8 83 f1 fe ff       	call   4e60 <_ZnwmPv>
   15cdd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   15ce4:	90                   	nop
   15ce5:	c9                   	leave
   15ce6:	c3                   	ret

0000000000015ce7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   15ce7:	55                   	push   %rbp
   15ce8:	48 89 e5             	mov    %rsp,%rbp
   15ceb:	48 83 ec 20          	sub    $0x20,%rsp
   15cef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cf3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15cf7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   15cfb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15cff:	48 89 c7             	mov    %rax,%rdi
   15d02:	e8 11 04 00 00       	call   16118 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   15d07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15d0b:	48 89 c7             	mov    %rax,%rdi
   15d0e:	e8 5f f1 fe ff       	call   4e72 <_ZSt17__size_to_integerm>
   15d13:	48 89 c1             	mov    %rax,%rcx
   15d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d1a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15d1e:	48 89 ce             	mov    %rcx,%rsi
   15d21:	48 89 c7             	mov    %rax,%rdi
   15d24:	e8 fa 03 00 00       	call   16123 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   15d29:	c9                   	leave
   15d2a:	c3                   	ret
   15d2b:	90                   	nop

0000000000015d2c <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15d2c:	55                   	push   %rbp
   15d2d:	48 89 e5             	mov    %rsp,%rbp
   15d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15d34:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   15d3b:	ff ff 0f 
      }
   15d3e:	5d                   	pop    %rbp
   15d3f:	c3                   	ret

0000000000015d40 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15d40:	55                   	push   %rbp
   15d41:	48 89 e5             	mov    %rsp,%rbp
   15d44:	48 83 ec 10          	sub    $0x10,%rsp
   15d48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d50:	48 89 c7             	mov    %rax,%rdi
   15d53:	e8 02 00 00 00       	call   15d5a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   15d58:	c9                   	leave
   15d59:	c3                   	ret

0000000000015d5a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15d5a:	55                   	push   %rbp
   15d5b:	48 89 e5             	mov    %rsp,%rbp
   15d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15d62:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   15d69:	8e e3 00 
      }
   15d6c:	5d                   	pop    %rbp
   15d6d:	c3                   	ret

0000000000015d6e <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   15d6e:	55                   	push   %rbp
   15d6f:	48 89 e5             	mov    %rsp,%rbp
   15d72:	53                   	push   %rbx
   15d73:	48 83 ec 28          	sub    $0x28,%rsp
   15d77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15d7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15d7f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   15d83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d87:	48 89 c7             	mov    %rax,%rdi
   15d8a:	e8 f1 03 00 00       	call   16180 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   15d8f:	48 89 c3             	mov    %rax,%rbx
   15d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d96:	48 89 c7             	mov    %rax,%rdi
   15d99:	e8 e2 03 00 00       	call   16180 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   15d9e:	48 89 c1             	mov    %rax,%rcx
   15da1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15da5:	48 89 c2             	mov    %rax,%rdx
   15da8:	48 89 de             	mov    %rbx,%rsi
   15dab:	48 89 cf             	mov    %rcx,%rdi
   15dae:	e8 db 03 00 00       	call   1618e <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   15db3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15db7:	c9                   	leave
   15db8:	c3                   	ret
   15db9:	90                   	nop

0000000000015dba <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15dba:	55                   	push   %rbp
   15dbb:	48 89 e5             	mov    %rsp,%rbp
   15dbe:	48 83 ec 10          	sub    $0x10,%rsp
   15dc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dca:	48 89 c7             	mov    %rax,%rdi
   15dcd:	e8 26 04 00 00       	call   161f8 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   15dd2:	c9                   	leave
   15dd3:	c3                   	ret

0000000000015dd4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   15dd4:	55                   	push   %rbp
   15dd5:	48 89 e5             	mov    %rsp,%rbp
   15dd8:	48 83 ec 10          	sub    $0x10,%rsp
   15ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15de0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15de4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15de8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dec:	ba 00 00 00 00       	mov    $0x0,%edx
   15df1:	48 89 ce             	mov    %rcx,%rsi
   15df4:	48 89 c7             	mov    %rax,%rdi
   15df7:	e8 10 04 00 00       	call   1620c <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   15dfc:	c9                   	leave
   15dfd:	c3                   	ret

0000000000015dfe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15dfe:	55                   	push   %rbp
   15dff:	48 89 e5             	mov    %rsp,%rbp
   15e02:	48 83 ec 20          	sub    $0x20,%rsp
   15e06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15e0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15e0e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15e13:	74 40                	je     15e55 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   15e15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e19:	48 89 c7             	mov    %rax,%rdi
   15e1c:	e8 4c 04 00 00       	call   1626d <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   15e21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e29:	48 89 c7             	mov    %rax,%rdi
   15e2c:	e8 4a 04 00 00       	call   1627b <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   15e31:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   15e36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e3a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15e3e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e46:	48 89 ce             	mov    %rcx,%rsi
   15e49:	48 89 c7             	mov    %rax,%rdi
   15e4c:	e8 51 04 00 00       	call   162a2 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   15e51:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15e59:	c9                   	leave
   15e5a:	c3                   	ret
   15e5b:	90                   	nop

0000000000015e5c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15e5c:	55                   	push   %rbp
   15e5d:	48 89 e5             	mov    %rsp,%rbp
   15e60:	48 83 ec 10          	sub    $0x10,%rsp
   15e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e6c:	48 89 c7             	mov    %rax,%rdi
   15e6f:	e8 7c 00 00 00       	call   15ef0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   15e74:	c9                   	leave
   15e75:	c3                   	ret

0000000000015e76 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15e76:	55                   	push   %rbp
   15e77:	48 89 e5             	mov    %rsp,%rbp
   15e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   15e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e82:	5d                   	pop    %rbp
   15e83:	c3                   	ret

0000000000015e84 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   15e84:	55                   	push   %rbp
   15e85:	48 89 e5             	mov    %rsp,%rbp
   15e88:	48 83 ec 10          	sub    $0x10,%rsp
   15e8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   15e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e94:	48 89 c6             	mov    %rax,%rsi
   15e97:	bf 08 00 00 00       	mov    $0x8,%edi
   15e9c:	e8 bf ef fe ff       	call   4e60 <_ZnwmPv>
   15ea1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   15ea8:	90                   	nop
   15ea9:	c9                   	leave
   15eaa:	c3                   	ret

0000000000015eab <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   15eab:	55                   	push   %rbp
   15eac:	48 89 e5             	mov    %rsp,%rbp
   15eaf:	48 83 ec 20          	sub    $0x20,%rsp
   15eb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15eb7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15ebb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   15ebf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15ec3:	48 89 c7             	mov    %rax,%rdi
   15ec6:	e8 1b 04 00 00       	call   162e6 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   15ecb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ecf:	48 89 c7             	mov    %rax,%rdi
   15ed2:	e8 9b ef fe ff       	call   4e72 <_ZSt17__size_to_integerm>
   15ed7:	48 89 c1             	mov    %rax,%rcx
   15eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ede:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ee2:	48 89 ce             	mov    %rcx,%rsi
   15ee5:	48 89 c7             	mov    %rax,%rdi
   15ee8:	e8 04 04 00 00       	call   162f1 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   15eed:	c9                   	leave
   15eee:	c3                   	ret
   15eef:	90                   	nop

0000000000015ef0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15ef0:	55                   	push   %rbp
   15ef1:	48 89 e5             	mov    %rsp,%rbp
   15ef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15ef8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   15eff:	ff ff 0f 
      }
   15f02:	5d                   	pop    %rbp
   15f03:	c3                   	ret

0000000000015f04 <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   15f04:	55                   	push   %rbp
   15f05:	48 89 e5             	mov    %rsp,%rbp
   15f08:	53                   	push   %rbx
   15f09:	48 83 ec 28          	sub    $0x28,%rsp
   15f0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15f11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15f15:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   15f19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15f1d:	48 89 c7             	mov    %rax,%rdi
   15f20:	e8 29 04 00 00       	call   1634e <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   15f25:	48 89 c3             	mov    %rax,%rbx
   15f28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f2c:	48 89 c7             	mov    %rax,%rdi
   15f2f:	e8 1a 04 00 00       	call   1634e <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   15f34:	48 89 c1             	mov    %rax,%rcx
   15f37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f3b:	48 89 c2             	mov    %rax,%rdx
   15f3e:	48 89 de             	mov    %rbx,%rsi
   15f41:	48 89 cf             	mov    %rcx,%rdi
   15f44:	e8 13 04 00 00       	call   1635c <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   15f49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15f4d:	c9                   	leave
   15f4e:	c3                   	ret

0000000000015f4f <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   15f4f:	55                   	push   %rbp
   15f50:	48 89 e5             	mov    %rsp,%rbp
   15f53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f5b:	5d                   	pop    %rbp
   15f5c:	c3                   	ret

0000000000015f5d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   15f5d:	55                   	push   %rbp
   15f5e:	48 89 e5             	mov    %rsp,%rbp
   15f61:	41 54                	push   %r12
   15f63:	53                   	push   %rbx
   15f64:	48 83 ec 20          	sub    $0x20,%rsp
   15f68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15f6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15f70:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   15f74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f78:	48 89 c7             	mov    %rax,%rdi
   15f7b:	e8 4a f4 ff ff       	call   153ca <_ZSt12__niter_baseIPPKcET_S3_>
   15f80:	49 89 c4             	mov    %rax,%r12
   15f83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15f87:	48 89 c7             	mov    %rax,%rdi
   15f8a:	e8 37 04 00 00       	call   163c6 <_ZSt12__niter_baseIPKPKcET_S4_>
   15f8f:	48 89 c3             	mov    %rax,%rbx
   15f92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f96:	48 89 c7             	mov    %rax,%rdi
   15f99:	e8 28 04 00 00       	call   163c6 <_ZSt12__niter_baseIPKPKcET_S4_>
   15f9e:	4c 89 e2             	mov    %r12,%rdx
   15fa1:	48 89 de             	mov    %rbx,%rsi
   15fa4:	48 89 c7             	mov    %rax,%rdi
   15fa7:	e8 28 04 00 00       	call   163d4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   15fac:	48 89 c2             	mov    %rax,%rdx
   15faf:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   15fb3:	48 89 d6             	mov    %rdx,%rsi
   15fb6:	48 89 c7             	mov    %rax,%rdi
   15fb9:	e8 43 04 00 00       	call   16401 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   15fbe:	48 83 c4 20          	add    $0x20,%rsp
   15fc2:	5b                   	pop    %rbx
   15fc3:	41 5c                	pop    %r12
   15fc5:	5d                   	pop    %rbp
   15fc6:	c3                   	ret
   15fc7:	90                   	nop

0000000000015fc8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15fc8:	55                   	push   %rbp
   15fc9:	48 89 e5             	mov    %rsp,%rbp
   15fcc:	48 83 ec 20          	sub    $0x20,%rsp
   15fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15fd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15fd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15fdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fe0:	48 89 c7             	mov    %rax,%rdi
   15fe3:	e8 2c 04 00 00       	call   16414 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   15fe8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15fec:	0f 92 c0             	setb   %al
   15fef:	0f b6 c0             	movzbl %al,%eax
   15ff2:	48 85 c0             	test   %rax,%rax
   15ff5:	0f 95 c0             	setne  %al
   15ff8:	84 c0                	test   %al,%al
   15ffa:	74 1a                	je     16016 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15ffc:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   16003:	38 8e 03 
   16006:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1600a:	73 05                	jae    16011 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1600c:	e8 5f e2 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16011:	e8 ca e0 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16016:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1601a:	48 89 d0             	mov    %rdx,%rax
   1601d:	48 c1 e0 03          	shl    $0x3,%rax
   16021:	48 01 d0             	add    %rdx,%rax
   16024:	48 c1 e0 03          	shl    $0x3,%rax
   16028:	48 89 c7             	mov    %rax,%rdi
   1602b:	e8 50 e3 fe ff       	call   4380 <_Znwm@plt>
   16030:	90                   	nop
      }
   16031:	c9                   	leave
   16032:	c3                   	ret
   16033:	90                   	nop

0000000000016034 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   16034:	55                   	push   %rbp
   16035:	48 89 e5             	mov    %rsp,%rbp
   16038:	48 83 ec 10          	sub    $0x10,%rsp
   1603c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16040:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16048:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1604c:	48 89 d6             	mov    %rdx,%rsi
   1604f:	48 89 c7             	mov    %rax,%rdi
   16052:	e8 d1 03 00 00       	call   16428 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   16057:	90                   	nop
   16058:	c9                   	leave
   16059:	c3                   	ret

000000000001605a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1605a:	55                   	push   %rbp
   1605b:	48 89 e5             	mov    %rsp,%rbp
   1605e:	41 56                	push   %r14
   16060:	41 55                	push   %r13
   16062:	41 54                	push   %r12
   16064:	53                   	push   %rbx
   16065:	48 83 ec 40          	sub    $0x40,%rsp
   16069:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1606d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   16071:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   16075:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   16079:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1607d:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   16081:	48 89 de             	mov    %rbx,%rsi
   16084:	bf 28 00 00 00       	mov    $0x28,%edi
   16089:	e8 d2 ed fe ff       	call   4e60 <_ZnwmPv>
   1608e:	49 89 c4             	mov    %rax,%r12
   16091:	41 be 01 00 00 00    	mov    $0x1,%r14d
   16097:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1609b:	48 89 c7             	mov    %rax,%rdi
   1609e:	e8 16 d7 ff ff       	call   137b9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   160a3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   160a7:	48 89 c7             	mov    %rax,%rdi
   160aa:	e8 fc d6 ff ff       	call   137ab <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   160af:	48 89 c2             	mov    %rax,%rdx
   160b2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   160b6:	48 89 d6             	mov    %rdx,%rsi
   160b9:	48 89 c7             	mov    %rax,%rdi
   160bc:	e8 73 ff ff ff       	call   16034 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   160c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   160c5:	48 89 c7             	mov    %rax,%rdi
   160c8:	e8 d0 d6 ff ff       	call   1379d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   160cd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   160d1:	48 89 c6             	mov    %rax,%rsi
   160d4:	4c 89 e7             	mov    %r12,%rdi
   160d7:	e8 6a 03 00 00       	call   16446 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   160dc:	eb 1e                	jmp    160fc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   160de:	49 89 c5             	mov    %rax,%r13
   160e1:	45 84 f6             	test   %r14b,%r14b
   160e4:	74 0b                	je     160f1 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   160e6:	48 89 de             	mov    %rbx,%rsi
   160e9:	4c 89 e7             	mov    %r12,%rdi
   160ec:	e8 da a2 ff ff       	call   103cb <_ZdlPvS_>
   160f1:	4c 89 e8             	mov    %r13,%rax
   160f4:	48 89 c7             	mov    %rax,%rdi
   160f7:	e8 f4 e5 fe ff       	call   46f0 <_Unwind_Resume@plt>
   160fc:	48 83 c4 40          	add    $0x40,%rsp
   16100:	5b                   	pop    %rbx
   16101:	41 5c                	pop    %r12
   16103:	41 5d                	pop    %r13
   16105:	41 5e                	pop    %r14
   16107:	5d                   	pop    %rbp
   16108:	c3                   	ret
   16109:	90                   	nop

000000000001610a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1610a:	55                   	push   %rbp
   1610b:	48 89 e5             	mov    %rsp,%rbp
   1610e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   16112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16116:	5d                   	pop    %rbp
   16117:	c3                   	ret

0000000000016118 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   16118:	55                   	push   %rbp
   16119:	48 89 e5             	mov    %rsp,%rbp
   1611c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16120:	90                   	nop
   16121:	5d                   	pop    %rbp
   16122:	c3                   	ret

0000000000016123 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   16123:	55                   	push   %rbp
   16124:	48 89 e5             	mov    %rsp,%rbp
   16127:	48 83 ec 20          	sub    $0x20,%rsp
   1612b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1612f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16133:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   16137:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1613c:	75 06                	jne    16144 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1613e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16142:	eb 3a                	jmp    1617e <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   16144:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16148:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1614f:	00 
   16150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16154:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   16158:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1615c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16160:	48 89 ce             	mov    %rcx,%rsi
   16163:	48 89 c7             	mov    %rax,%rdi
   16166:	e8 05 03 00 00       	call   16470 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1616b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1616f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16176:	00 
   16177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1617b:	48 01 d0             	add    %rdx,%rax
    }
   1617e:	c9                   	leave
   1617f:	c3                   	ret

0000000000016180 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   16180:	55                   	push   %rbp
   16181:	48 89 e5             	mov    %rsp,%rbp
   16184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1618c:	5d                   	pop    %rbp
   1618d:	c3                   	ret

000000000001618e <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1618e:	55                   	push   %rbp
   1618f:	48 89 e5             	mov    %rsp,%rbp
   16192:	41 54                	push   %r12
   16194:	53                   	push   %rbx
   16195:	48 83 ec 20          	sub    $0x20,%rsp
   16199:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1619d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   161a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   161a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161a9:	48 89 c7             	mov    %rax,%rdi
   161ac:	e8 fb 02 00 00       	call   164ac <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   161b1:	49 89 c4             	mov    %rax,%r12
   161b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   161b8:	48 89 c7             	mov    %rax,%rdi
   161bb:	e8 de 02 00 00       	call   1649e <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   161c0:	48 89 c3             	mov    %rax,%rbx
   161c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161c7:	48 89 c7             	mov    %rax,%rdi
   161ca:	e8 cf 02 00 00       	call   1649e <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   161cf:	4c 89 e2             	mov    %r12,%rdx
   161d2:	48 89 de             	mov    %rbx,%rsi
   161d5:	48 89 c7             	mov    %rax,%rdi
   161d8:	e8 dd 02 00 00       	call   164ba <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   161dd:	48 89 c2             	mov    %rax,%rdx
   161e0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   161e4:	48 89 d6             	mov    %rdx,%rsi
   161e7:	48 89 c7             	mov    %rax,%rdi
   161ea:	e8 f8 02 00 00       	call   164e7 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   161ef:	48 83 c4 20          	add    $0x20,%rsp
   161f3:	5b                   	pop    %rbx
   161f4:	41 5c                	pop    %r12
   161f6:	5d                   	pop    %rbp
   161f7:	c3                   	ret

00000000000161f8 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   161f8:	55                   	push   %rbp
   161f9:	48 89 e5             	mov    %rsp,%rbp
   161fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16200:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   16207:	ff ff 0f 
      }
   1620a:	5d                   	pop    %rbp
   1620b:	c3                   	ret

000000000001620c <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1620c:	55                   	push   %rbp
   1620d:	48 89 e5             	mov    %rsp,%rbp
   16210:	48 83 ec 20          	sub    $0x20,%rsp
   16214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16218:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1621c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16224:	48 89 c7             	mov    %rax,%rdi
   16227:	e8 cc ff ff ff       	call   161f8 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1622c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16230:	0f 92 c0             	setb   %al
   16233:	0f b6 c0             	movzbl %al,%eax
   16236:	48 85 c0             	test   %rax,%rax
   16239:	0f 95 c0             	setne  %al
   1623c:	84 c0                	test   %al,%al
   1623e:	74 1a                	je     1625a <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16240:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16247:	ff ff 1f 
   1624a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1624e:	73 05                	jae    16255 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16250:	e8 1b e0 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16255:	e8 86 de fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1625a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1625e:	48 c1 e0 03          	shl    $0x3,%rax
   16262:	48 89 c7             	mov    %rax,%rdi
   16265:	e8 16 e1 fe ff       	call   4380 <_Znwm@plt>
   1626a:	90                   	nop
      }
   1626b:	c9                   	leave
   1626c:	c3                   	ret

000000000001626d <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1626d:	55                   	push   %rbp
   1626e:	48 89 e5             	mov    %rsp,%rbp
   16271:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16279:	5d                   	pop    %rbp
   1627a:	c3                   	ret

000000000001627b <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1627b:	55                   	push   %rbp
   1627c:	48 89 e5             	mov    %rsp,%rbp
   1627f:	48 83 ec 10          	sub    $0x10,%rsp
   16283:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   16287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1628b:	48 89 c6             	mov    %rax,%rsi
   1628e:	bf 08 00 00 00       	mov    $0x8,%edi
   16293:	e8 c8 eb fe ff       	call   4e60 <_ZnwmPv>
   16298:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1629f:	90                   	nop
   162a0:	c9                   	leave
   162a1:	c3                   	ret

00000000000162a2 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   162a2:	55                   	push   %rbp
   162a3:	48 89 e5             	mov    %rsp,%rbp
   162a6:	48 83 ec 20          	sub    $0x20,%rsp
   162aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   162b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   162b6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   162ba:	48 89 c7             	mov    %rax,%rdi
   162bd:	e8 37 02 00 00       	call   164f9 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   162c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   162c6:	48 89 c7             	mov    %rax,%rdi
   162c9:	e8 a4 eb fe ff       	call   4e72 <_ZSt17__size_to_integerm>
   162ce:	48 89 c1             	mov    %rax,%rcx
   162d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   162d9:	48 89 ce             	mov    %rcx,%rsi
   162dc:	48 89 c7             	mov    %rax,%rdi
   162df:	e8 20 02 00 00       	call   16504 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   162e4:	c9                   	leave
   162e5:	c3                   	ret

00000000000162e6 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   162e6:	55                   	push   %rbp
   162e7:	48 89 e5             	mov    %rsp,%rbp
   162ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   162ee:	90                   	nop
   162ef:	5d                   	pop    %rbp
   162f0:	c3                   	ret

00000000000162f1 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   162f1:	55                   	push   %rbp
   162f2:	48 89 e5             	mov    %rsp,%rbp
   162f5:	48 83 ec 20          	sub    $0x20,%rsp
   162f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16301:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   16305:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1630a:	75 06                	jne    16312 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1630c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16310:	eb 3a                	jmp    1634c <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   16312:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16316:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1631d:	00 
   1631e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16322:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   16326:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1632a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1632e:	48 89 ce             	mov    %rcx,%rsi
   16331:	48 89 c7             	mov    %rax,%rdi
   16334:	e8 28 02 00 00       	call   16561 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   16339:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1633d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16344:	00 
   16345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16349:	48 01 d0             	add    %rdx,%rax
    }
   1634c:	c9                   	leave
   1634d:	c3                   	ret

000000000001634e <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   1634e:	55                   	push   %rbp
   1634f:	48 89 e5             	mov    %rsp,%rbp
   16352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1635a:	5d                   	pop    %rbp
   1635b:	c3                   	ret

000000000001635c <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1635c:	55                   	push   %rbp
   1635d:	48 89 e5             	mov    %rsp,%rbp
   16360:	41 54                	push   %r12
   16362:	53                   	push   %rbx
   16363:	48 83 ec 20          	sub    $0x20,%rsp
   16367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1636b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1636f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   16373:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16377:	48 89 c7             	mov    %rax,%rdi
   1637a:	e8 d2 f3 ff ff       	call   15751 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1637f:	49 89 c4             	mov    %rax,%r12
   16382:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16386:	48 89 c7             	mov    %rax,%rdi
   16389:	e8 01 02 00 00       	call   1658f <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1638e:	48 89 c3             	mov    %rax,%rbx
   16391:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16395:	48 89 c7             	mov    %rax,%rdi
   16398:	e8 f2 01 00 00       	call   1658f <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   1639d:	4c 89 e2             	mov    %r12,%rdx
   163a0:	48 89 de             	mov    %rbx,%rsi
   163a3:	48 89 c7             	mov    %rax,%rdi
   163a6:	e8 f2 01 00 00       	call   1659d <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   163ab:	48 89 c2             	mov    %rax,%rdx
   163ae:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   163b2:	48 89 d6             	mov    %rdx,%rsi
   163b5:	48 89 c7             	mov    %rax,%rdi
   163b8:	e8 0d 02 00 00       	call   165ca <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   163bd:	48 83 c4 20          	add    $0x20,%rsp
   163c1:	5b                   	pop    %rbx
   163c2:	41 5c                	pop    %r12
   163c4:	5d                   	pop    %rbp
   163c5:	c3                   	ret

00000000000163c6 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   163c6:	55                   	push   %rbp
   163c7:	48 89 e5             	mov    %rsp,%rbp
   163ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   163ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163d2:	5d                   	pop    %rbp
   163d3:	c3                   	ret

00000000000163d4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   163d4:	55                   	push   %rbp
   163d5:	48 89 e5             	mov    %rsp,%rbp
   163d8:	48 83 ec 20          	sub    $0x20,%rsp
   163dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   163e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   163ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   163f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163f4:	48 89 ce             	mov    %rcx,%rsi
   163f7:	48 89 c7             	mov    %rax,%rdi
   163fa:	e8 dd 01 00 00       	call   165dc <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   163ff:	c9                   	leave
   16400:	c3                   	ret

0000000000016401 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   16401:	55                   	push   %rbp
   16402:	48 89 e5             	mov    %rsp,%rbp
   16405:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16409:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1640d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16411:	5d                   	pop    %rbp
   16412:	c3                   	ret
   16413:	90                   	nop

0000000000016414 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16414:	55                   	push   %rbp
   16415:	48 89 e5             	mov    %rsp,%rbp
   16418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1641c:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   16423:	1c c7 01 
      }
   16426:	5d                   	pop    %rbp
   16427:	c3                   	ret

0000000000016428 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   16428:	55                   	push   %rbp
   16429:	48 89 e5             	mov    %rsp,%rbp
   1642c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16430:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   16434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16438:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1643c:	48 8b 12             	mov    (%rdx),%rdx
   1643f:	48 89 10             	mov    %rdx,(%rax)
      { }
   16442:	90                   	nop
   16443:	5d                   	pop    %rbp
   16444:	c3                   	ret
   16445:	90                   	nop

0000000000016446 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   16446:	55                   	push   %rbp
   16447:	48 89 e5             	mov    %rsp,%rbp
   1644a:	48 83 ec 20          	sub    $0x20,%rsp
   1644e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   16456:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1645a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1645e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16462:	48 89 ce             	mov    %rcx,%rsi
   16465:	48 89 c7             	mov    %rax,%rdi
   16468:	e8 9d 01 00 00       	call   1660a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1646d:	90                   	nop
   1646e:	c9                   	leave
   1646f:	c3                   	ret

0000000000016470 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   16470:	55                   	push   %rbp
   16471:	48 89 e5             	mov    %rsp,%rbp
   16474:	48 83 ec 20          	sub    $0x20,%rsp
   16478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1647c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16480:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   16484:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16488:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1648c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16490:	48 89 ce             	mov    %rcx,%rsi
   16493:	48 89 c7             	mov    %rax,%rdi
   16496:	e8 b9 01 00 00       	call   16654 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1649b:	90                   	nop
   1649c:	c9                   	leave
   1649d:	c3                   	ret

000000000001649e <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   1649e:	55                   	push   %rbp
   1649f:	48 89 e5             	mov    %rsp,%rbp
   164a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   164a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164aa:	5d                   	pop    %rbp
   164ab:	c3                   	ret

00000000000164ac <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   164ac:	55                   	push   %rbp
   164ad:	48 89 e5             	mov    %rsp,%rbp
   164b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   164b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164b8:	5d                   	pop    %rbp
   164b9:	c3                   	ret

00000000000164ba <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   164ba:	55                   	push   %rbp
   164bb:	48 89 e5             	mov    %rsp,%rbp
   164be:	48 83 ec 20          	sub    $0x20,%rsp
   164c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   164c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   164ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   164ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   164d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   164d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164da:	48 89 ce             	mov    %rcx,%rsi
   164dd:	48 89 c7             	mov    %rax,%rdi
   164e0:	e8 aa 01 00 00       	call   1668f <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   164e5:	c9                   	leave
   164e6:	c3                   	ret

00000000000164e7 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   164e7:	55                   	push   %rbp
   164e8:	48 89 e5             	mov    %rsp,%rbp
   164eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   164ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   164f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   164f7:	5d                   	pop    %rbp
   164f8:	c3                   	ret

00000000000164f9 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   164f9:	55                   	push   %rbp
   164fa:	48 89 e5             	mov    %rsp,%rbp
   164fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   16501:	90                   	nop
   16502:	5d                   	pop    %rbp
   16503:	c3                   	ret

0000000000016504 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   16504:	55                   	push   %rbp
   16505:	48 89 e5             	mov    %rsp,%rbp
   16508:	48 83 ec 20          	sub    $0x20,%rsp
   1650c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16510:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16514:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   16518:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1651d:	75 06                	jne    16525 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1651f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16523:	eb 3a                	jmp    1655f <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   16525:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16529:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16530:	00 
   16531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16535:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   16539:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1653d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16541:	48 89 ce             	mov    %rcx,%rsi
   16544:	48 89 c7             	mov    %rax,%rdi
   16547:	e8 70 01 00 00       	call   166bc <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1654c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16550:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16557:	00 
   16558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1655c:	48 01 d0             	add    %rdx,%rax
    }
   1655f:	c9                   	leave
   16560:	c3                   	ret

0000000000016561 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   16561:	55                   	push   %rbp
   16562:	48 89 e5             	mov    %rsp,%rbp
   16565:	48 83 ec 20          	sub    $0x20,%rsp
   16569:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1656d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16571:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   16575:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16579:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1657d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16581:	48 89 ce             	mov    %rcx,%rsi
   16584:	48 89 c7             	mov    %rax,%rdi
   16587:	e8 5e 01 00 00       	call   166ea <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1658c:	90                   	nop
   1658d:	c9                   	leave
   1658e:	c3                   	ret

000000000001658f <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   1658f:	55                   	push   %rbp
   16590:	48 89 e5             	mov    %rsp,%rbp
   16593:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1659b:	5d                   	pop    %rbp
   1659c:	c3                   	ret

000000000001659d <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1659d:	55                   	push   %rbp
   1659e:	48 89 e5             	mov    %rsp,%rbp
   165a1:	48 83 ec 20          	sub    $0x20,%rsp
   165a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165ad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   165b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   165b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   165b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165bd:	48 89 ce             	mov    %rcx,%rsi
   165c0:	48 89 c7             	mov    %rax,%rdi
   165c3:	e8 5d 01 00 00       	call   16725 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   165c8:	c9                   	leave
   165c9:	c3                   	ret

00000000000165ca <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   165ca:	55                   	push   %rbp
   165cb:	48 89 e5             	mov    %rsp,%rbp
   165ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   165d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   165da:	5d                   	pop    %rbp
   165db:	c3                   	ret

00000000000165dc <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   165dc:	55                   	push   %rbp
   165dd:	48 89 e5             	mov    %rsp,%rbp
   165e0:	48 83 ec 20          	sub    $0x20,%rsp
   165e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   165f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   165f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   165f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165fc:	48 89 ce             	mov    %rcx,%rsi
   165ff:	48 89 c7             	mov    %rax,%rdi
   16602:	e8 4b 01 00 00       	call   16752 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   16607:	c9                   	leave
   16608:	c3                   	ret
   16609:	90                   	nop

000000000001660a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1660a:	55                   	push   %rbp
   1660b:	48 89 e5             	mov    %rsp,%rbp
   1660e:	53                   	push   %rbx
   1660f:	48 83 ec 28          	sub    $0x28,%rsp
   16613:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16617:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1661b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1661f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   16623:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16627:	48 89 c7             	mov    %rax,%rdi
   1662a:	e8 82 01 00 00       	call   167b1 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1662f:	48 89 c7             	mov    %rax,%rdi
   16632:	e8 94 01 00 00       	call   167cb <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   16637:	48 89 c6             	mov    %rax,%rsi
   1663a:	48 89 df             	mov    %rbx,%rdi
   1663d:	e8 8e db fe ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   16642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16646:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   1664d:	90                   	nop
   1664e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16652:	c9                   	leave
   16653:	c3                   	ret

0000000000016654 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   16654:	55                   	push   %rbp
   16655:	48 89 e5             	mov    %rsp,%rbp
   16658:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1665c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16660:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   16664:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16668:	48 8b 00             	mov    (%rax),%rax
   1666b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1666f:	eb 10                	jmp    16681 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   16671:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16675:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16679:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1667c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   16681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16685:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16689:	75 e6                	jne    16671 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1668b:	90                   	nop
   1668c:	90                   	nop
   1668d:	5d                   	pop    %rbp
   1668e:	c3                   	ret

000000000001668f <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1668f:	55                   	push   %rbp
   16690:	48 89 e5             	mov    %rsp,%rbp
   16693:	48 83 ec 20          	sub    $0x20,%rsp
   16697:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1669b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1669f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   166a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   166a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   166ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166af:	48 89 ce             	mov    %rcx,%rsi
   166b2:	48 89 c7             	mov    %rax,%rdi
   166b5:	e8 1f 01 00 00       	call   167d9 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   166ba:	c9                   	leave
   166bb:	c3                   	ret

00000000000166bc <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   166bc:	55                   	push   %rbp
   166bd:	48 89 e5             	mov    %rsp,%rbp
   166c0:	48 83 ec 20          	sub    $0x20,%rsp
   166c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   166cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   166d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   166d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   166d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166dc:	48 89 ce             	mov    %rcx,%rsi
   166df:	48 89 c7             	mov    %rax,%rdi
   166e2:	e8 74 01 00 00       	call   1685b <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   166e7:	90                   	nop
   166e8:	c9                   	leave
   166e9:	c3                   	ret

00000000000166ea <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   166ea:	55                   	push   %rbp
   166eb:	48 89 e5             	mov    %rsp,%rbp
   166ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   166f2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   166f6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   166fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166fe:	48 8b 00             	mov    (%rax),%rax
   16701:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   16705:	eb 10                	jmp    16717 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   16707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1670b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1670f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   16712:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   16717:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1671b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1671f:	75 e6                	jne    16707 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   16721:	90                   	nop
   16722:	90                   	nop
   16723:	5d                   	pop    %rbp
   16724:	c3                   	ret

0000000000016725 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   16725:	55                   	push   %rbp
   16726:	48 89 e5             	mov    %rsp,%rbp
   16729:	48 83 ec 20          	sub    $0x20,%rsp
   1672d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16731:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16735:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   16739:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1673d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16745:	48 89 ce             	mov    %rcx,%rsi
   16748:	48 89 c7             	mov    %rax,%rdi
   1674b:	e8 46 01 00 00       	call   16896 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   16750:	c9                   	leave
   16751:	c3                   	ret

0000000000016752 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   16752:	55                   	push   %rbp
   16753:	48 89 e5             	mov    %rsp,%rbp
   16756:	48 83 ec 30          	sub    $0x30,%rsp
   1675a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1675e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16762:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   16766:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1676a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1676e:	48 c1 f8 03          	sar    $0x3,%rax
   16772:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   16776:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1677b:	74 1f                	je     1679c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1677d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16781:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16788:	00 
   16789:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1678d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16791:	48 89 ce             	mov    %rcx,%rsi
   16794:	48 89 c7             	mov    %rax,%rdi
   16797:	e8 c4 de fe ff       	call   4660 <memmove@plt>
	  return __result + _Num;
   1679c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   167a7:	00 
   167a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   167ac:	48 01 d0             	add    %rdx,%rax
	}
   167af:	c9                   	leave
   167b0:	c3                   	ret

00000000000167b1 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   167b1:	55                   	push   %rbp
   167b2:	48 89 e5             	mov    %rsp,%rbp
   167b5:	48 83 ec 10          	sub    $0x10,%rsp
   167b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   167bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167c1:	48 89 c7             	mov    %rax,%rdi
   167c4:	e8 2c 01 00 00       	call   168f5 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   167c9:	c9                   	leave
   167ca:	c3                   	ret

00000000000167cb <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   167cb:	55                   	push   %rbp
   167cc:	48 89 e5             	mov    %rsp,%rbp
   167cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   167d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167d7:	5d                   	pop    %rbp
   167d8:	c3                   	ret

00000000000167d9 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   167d9:	55                   	push   %rbp
   167da:	48 89 e5             	mov    %rsp,%rbp
   167dd:	48 83 ec 30          	sub    $0x30,%rsp
   167e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   167e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   167e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   167ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   167f1:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   167f5:	48 c1 f8 04          	sar    $0x4,%rax
   167f9:	48 89 c2             	mov    %rax,%rdx
   167fc:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   16803:	e3 38 8e 
   16806:	48 0f af c2          	imul   %rdx,%rax
   1680a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1680e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16813:	74 28                	je     1683d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   16815:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16819:	48 89 d0             	mov    %rdx,%rax
   1681c:	48 c1 e0 03          	shl    $0x3,%rax
   16820:	48 01 d0             	add    %rdx,%rax
   16823:	48 c1 e0 04          	shl    $0x4,%rax
   16827:	48 89 c2             	mov    %rax,%rdx
   1682a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1682e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16832:	48 89 ce             	mov    %rcx,%rsi
   16835:	48 89 c7             	mov    %rax,%rdi
   16838:	e8 23 de fe ff       	call   4660 <memmove@plt>
	  return __result + _Num;
   1683d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16841:	48 89 d0             	mov    %rdx,%rax
   16844:	48 c1 e0 03          	shl    $0x3,%rax
   16848:	48 01 d0             	add    %rdx,%rax
   1684b:	48 c1 e0 04          	shl    $0x4,%rax
   1684f:	48 89 c2             	mov    %rax,%rdx
   16852:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16856:	48 01 d0             	add    %rdx,%rax
	}
   16859:	c9                   	leave
   1685a:	c3                   	ret

000000000001685b <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1685b:	55                   	push   %rbp
   1685c:	48 89 e5             	mov    %rsp,%rbp
   1685f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16863:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16867:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1686b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1686f:	48 8b 00             	mov    (%rax),%rax
   16872:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   16876:	eb 10                	jmp    16888 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   16878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1687c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16880:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   16883:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   16888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1688c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   16890:	75 e6                	jne    16878 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   16892:	90                   	nop
   16893:	90                   	nop
   16894:	5d                   	pop    %rbp
   16895:	c3                   	ret

0000000000016896 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   16896:	55                   	push   %rbp
   16897:	48 89 e5             	mov    %rsp,%rbp
   1689a:	48 83 ec 30          	sub    $0x30,%rsp
   1689e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   168a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   168a6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   168aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   168ae:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   168b2:	48 c1 f8 03          	sar    $0x3,%rax
   168b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   168ba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   168bf:	74 1f                	je     168e0 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   168c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168c5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   168cc:	00 
   168cd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   168d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168d5:	48 89 ce             	mov    %rcx,%rsi
   168d8:	48 89 c7             	mov    %rax,%rdi
   168db:	e8 80 dd fe ff       	call   4660 <memmove@plt>
	  return __result + _Num;
   168e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   168eb:	00 
   168ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168f0:	48 01 d0             	add    %rdx,%rax
	}
   168f3:	c9                   	leave
   168f4:	c3                   	ret

00000000000168f5 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   168f5:	55                   	push   %rbp
   168f6:	48 89 e5             	mov    %rsp,%rbp
   168f9:	48 83 ec 10          	sub    $0x10,%rsp
   168fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   16901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16905:	48 89 c7             	mov    %rax,%rdi
   16908:	e8 02 00 00 00       	call   1690f <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1690d:	c9                   	leave
   1690e:	c3                   	ret

000000000001690f <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1690f:	55                   	push   %rbp
   16910:	48 89 e5             	mov    %rsp,%rbp
   16913:	48 83 ec 10          	sub    $0x10,%rsp
   16917:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1691b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1691f:	48 89 c7             	mov    %rax,%rdi
   16922:	e8 02 00 00 00       	call   16929 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   16927:	c9                   	leave
   16928:	c3                   	ret

0000000000016929 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   16929:	55                   	push   %rbp
   1692a:	48 89 e5             	mov    %rsp,%rbp
   1692d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16935:	48 8b 00             	mov    (%rax),%rax
   16938:	5d                   	pop    %rbp
   16939:	c3                   	ret

000000000001693a <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   1693a:	55                   	push   %rbp
   1693b:	48 89 e5             	mov    %rsp,%rbp
   1693e:	48 83 ec 10          	sub    $0x10,%rsp
   16942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16946:	48 8d 15 73 13 01 00 	lea    0x11373(%rip),%rdx        # 27cc0 <_ZTVSt19bad_optional_access+0x10>
   1694d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16951:	48 89 10             	mov    %rdx,(%rax)
   16954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16958:	48 89 c7             	mov    %rax,%rdi
   1695b:	e8 d0 dd fe ff       	call   4730 <_ZNSt9exceptionD2Ev@plt>
   16960:	90                   	nop
   16961:	c9                   	leave
   16962:	c3                   	ret
   16963:	90                   	nop

0000000000016964 <_ZNSt19bad_optional_accessD0Ev>:
   16964:	55                   	push   %rbp
   16965:	48 89 e5             	mov    %rsp,%rbp
   16968:	48 83 ec 10          	sub    $0x10,%rsp
   1696c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16974:	48 89 c7             	mov    %rax,%rdi
   16977:	e8 be ff ff ff       	call   1693a <_ZNSt19bad_optional_accessD1Ev>
   1697c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16980:	be 08 00 00 00       	mov    $0x8,%esi
   16985:	48 89 c7             	mov    %rax,%rdi
   16988:	e8 03 da fe ff       	call   4390 <_ZdlPvm@plt>
   1698d:	c9                   	leave
   1698e:	c3                   	ret

Disassembly of section .fini:

0000000000016990 <_fini>:
   16990:	48 83 ec 08          	sub    $0x8,%rsp
   16994:	48 83 c4 08          	add    $0x8,%rsp
   16998:	c3                   	ret
