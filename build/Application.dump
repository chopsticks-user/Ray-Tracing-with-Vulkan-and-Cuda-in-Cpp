
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 4f 02 00 	mov    0x24fad(%rip),%rax        # 28fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 4f 02 00    	push   0x24fca(%rip)        # 28ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 4f 02 00    	jmp    *0x24fcc(%rip)        # 28ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 4f 02 00    	jmp    *0x24fca(%rip)        # 29000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>:
    4040:	ff 25 c2 4f 02 00    	jmp    *0x24fc2(%rip)        # 29008 <_ZNSt6chrono3_V212system_clock3nowEv@GLIBCXX_3.4.19>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba 4f 02 00    	jmp    *0x24fba(%rip)        # 29010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 4f 02 00    	jmp    *0x24fb2(%rip)        # 29018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa 4f 02 00    	jmp    *0x24faa(%rip)        # 29020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 4f 02 00    	jmp    *0x24fa2(%rip)        # 29028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <vkGetBufferMemoryRequirements@plt>:
    4090:	ff 25 9a 4f 02 00    	jmp    *0x24f9a(%rip)        # 29030 <vkGetBufferMemoryRequirements@Base>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSolsEm@plt>:
    40a0:	ff 25 92 4f 02 00    	jmp    *0x24f92(%rip)        # 29038 <_ZNSolsEm@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <vkDeviceWaitIdle@plt>:
    40b0:	ff 25 8a 4f 02 00    	jmp    *0x24f8a(%rip)        # 29040 <vkDeviceWaitIdle@Base>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40c0:	ff 25 82 4f 02 00    	jmp    *0x24f82(%rip)        # 29048 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <vkDestroySwapchainKHR@plt>:
    40d0:	ff 25 7a 4f 02 00    	jmp    *0x24f7a(%rip)        # 29050 <vkDestroySwapchainKHR@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySemaphore@plt>:
    40e0:	ff 25 72 4f 02 00    	jmp    *0x24f72(%rip)        # 29058 <vkDestroySemaphore@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <glfwDestroyWindow@plt>:
    40f0:	ff 25 6a 4f 02 00    	jmp    *0x24f6a(%rip)        # 29060 <glfwDestroyWindow@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZSt17__throw_bad_allocv@plt>:
    4100:	ff 25 62 4f 02 00    	jmp    *0x24f62(%rip)        # 29068 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZNSt13runtime_errorC1EPKc@plt>:
    4110:	ff 25 5a 4f 02 00    	jmp    *0x24f5a(%rip)        # 29070 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <vkGetPhysicalDeviceProperties@plt>:
    4120:	ff 25 52 4f 02 00    	jmp    *0x24f52(%rip)        # 29078 <vkGetPhysicalDeviceProperties@Base>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <__cxa_begin_catch@plt>:
    4130:	ff 25 4a 4f 02 00    	jmp    *0x24f4a(%rip)        # 29080 <__cxa_begin_catch@CXXABI_1.3>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <vkAcquireNextImageKHR@plt>:
    4140:	ff 25 42 4f 02 00    	jmp    *0x24f42(%rip)        # 29088 <vkAcquireNextImageKHR@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkCreateCommandPool@plt>:
    4150:	ff 25 3a 4f 02 00    	jmp    *0x24f3a(%rip)        # 29090 <vkCreateCommandPool@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <strlen@plt>:
    4160:	ff 25 32 4f 02 00    	jmp    *0x24f32(%rip)        # 29098 <strlen@GLIBC_2.2.5>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <vkCreateGraphicsPipelines@plt>:
    4170:	ff 25 2a 4f 02 00    	jmp    *0x24f2a(%rip)        # 290a0 <vkCreateGraphicsPipelines@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <__cxa_allocate_exception@plt>:
    4180:	ff 25 22 4f 02 00    	jmp    *0x24f22(%rip)        # 290a8 <__cxa_allocate_exception@CXXABI_1.3>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkDestroyBuffer@plt>:
    4190:	ff 25 1a 4f 02 00    	jmp    *0x24f1a(%rip)        # 290b0 <vkDestroyBuffer@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <glfwSetWindowUserPointer@plt>:
    41a0:	ff 25 12 4f 02 00    	jmp    *0x24f12(%rip)        # 290b8 <glfwSetWindowUserPointer@Base>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <_ZSt20__throw_length_errorPKc@plt>:
    41b0:	ff 25 0a 4f 02 00    	jmp    *0x24f0a(%rip)        # 290c0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkEnumeratePhysicalDevices@plt>:
    41c0:	ff 25 02 4f 02 00    	jmp    *0x24f02(%rip)        # 290c8 <vkEnumeratePhysicalDevices@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <memset@plt>:
    41d0:	ff 25 fa 4e 02 00    	jmp    *0x24efa(%rip)        # 290d0 <memset@GLIBC_2.2.5>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSaIcEC1ERKS_@plt>:
    41e0:	ff 25 f2 4e 02 00    	jmp    *0x24ef2(%rip)        # 290d8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkWaitForFences@plt>:
    41f0:	ff 25 ea 4e 02 00    	jmp    *0x24eea(%rip)        # 290e0 <vkWaitForFences@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <glfwWaitEvents@plt>:
    4200:	ff 25 e2 4e 02 00    	jmp    *0x24ee2(%rip)        # 290e8 <glfwWaitEvents@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <vkGetSwapchainImagesKHR@plt>:
    4210:	ff 25 da 4e 02 00    	jmp    *0x24eda(%rip)        # 290f0 <vkGetSwapchainImagesKHR@Base>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>:
    4220:	ff 25 d2 4e 02 00    	jmp    *0x24ed2(%rip)        # 290f8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4230:	ff 25 ca 4e 02 00    	jmp    *0x24eca(%rip)        # 29100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <vkCreateRenderPass@plt>:
    4240:	ff 25 c2 4e 02 00    	jmp    *0x24ec2(%rip)        # 29108 <vkCreateRenderPass@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4250:	ff 25 ba 4e 02 00    	jmp    *0x24eba(%rip)        # 29110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4260:	ff 25 b2 4e 02 00    	jmp    *0x24eb2(%rip)        # 29118 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt19__throw_logic_errorPKc@plt>:
    4270:	ff 25 aa 4e 02 00    	jmp    *0x24eaa(%rip)        # 29120 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <__cxa_free_exception@plt>:
    4280:	ff 25 a2 4e 02 00    	jmp    *0x24ea2(%rip)        # 29128 <__cxa_free_exception@CXXABI_1.3>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkFreeCommandBuffers@plt>:
    4290:	ff 25 9a 4e 02 00    	jmp    *0x24e9a(%rip)        # 29130 <vkFreeCommandBuffers@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42a0:	ff 25 92 4e 02 00    	jmp    *0x24e92(%rip)        # 29138 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <glfwGetRequiredInstanceExtensions@plt>:
    42b0:	ff 25 8a 4e 02 00    	jmp    *0x24e8a(%rip)        # 29140 <glfwGetRequiredInstanceExtensions@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    42c0:	ff 25 82 4e 02 00    	jmp    *0x24e82(%rip)        # 29148 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <vkCreateShaderModule@plt>:
    42d0:	ff 25 7a 4e 02 00    	jmp    *0x24e7a(%rip)        # 29150 <vkCreateShaderModule@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    42e0:	ff 25 72 4e 02 00    	jmp    *0x24e72(%rip)        # 29158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkUnmapMemory@plt>:
    42f0:	ff 25 6a 4e 02 00    	jmp    *0x24e6a(%rip)        # 29160 <vkUnmapMemory@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <memcpy@plt>:
    4300:	ff 25 62 4e 02 00    	jmp    *0x24e62(%rip)        # 29168 <memcpy@GLIBC_2.14>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkDestroyDevice@plt>:
    4310:	ff 25 5a 4e 02 00    	jmp    *0x24e5a(%rip)        # 29170 <vkDestroyDevice@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkCreatePipelineLayout@plt>:
    4320:	ff 25 52 4e 02 00    	jmp    *0x24e52(%rip)        # 29178 <vkCreatePipelineLayout@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkEnumerateInstanceExtensionProperties@plt>:
    4330:	ff 25 4a 4e 02 00    	jmp    *0x24e4a(%rip)        # 29180 <vkEnumerateInstanceExtensionProperties@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4340:	ff 25 42 4e 02 00    	jmp    *0x24e42(%rip)        # 29188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <glfwWindowHint@plt>:
    4350:	ff 25 3a 4e 02 00    	jmp    *0x24e3a(%rip)        # 29190 <glfwWindowHint@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4360:	ff 25 32 4e 02 00    	jmp    *0x24e32(%rip)        # 29198 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <vkCmdBindPipeline@plt>:
    4370:	ff 25 2a 4e 02 00    	jmp    *0x24e2a(%rip)        # 291a0 <vkCmdBindPipeline@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <__cxa_atexit@plt>:
    4380:	ff 25 22 4e 02 00    	jmp    *0x24e22(%rip)        # 291a8 <__cxa_atexit@GLIBC_2.2.5>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <vkMapMemory@plt>:
    4390:	ff 25 1a 4e 02 00    	jmp    *0x24e1a(%rip)        # 291b0 <vkMapMemory@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkFreeMemory@plt>:
    43a0:	ff 25 12 4e 02 00    	jmp    *0x24e12(%rip)        # 291b8 <vkFreeMemory@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkAllocateCommandBuffers@plt>:
    43b0:	ff 25 0a 4e 02 00    	jmp    *0x24e0a(%rip)        # 291c0 <vkAllocateCommandBuffers@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkGetInstanceProcAddr@plt>:
    43c0:	ff 25 02 4e 02 00    	jmp    *0x24e02(%rip)        # 291c8 <vkGetInstanceProcAddr@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <glfwPollEvents@plt>:
    43d0:	ff 25 fa 4d 02 00    	jmp    *0x24dfa(%rip)        # 291d0 <glfwPollEvents@Base>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <vkDestroyRenderPass@plt>:
    43e0:	ff 25 f2 4d 02 00    	jmp    *0x24df2(%rip)        # 291d8 <vkDestroyRenderPass@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkCreateBuffer@plt>:
    43f0:	ff 25 ea 4d 02 00    	jmp    *0x24dea(%rip)        # 291e0 <vkCreateBuffer@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4400:	ff 25 e2 4d 02 00    	jmp    *0x24de2(%rip)        # 291e8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_Znwm@plt>:
    4410:	ff 25 da 4d 02 00    	jmp    *0x24dda(%rip)        # 291f0 <_Znwm@GLIBCXX_3.4>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkBeginCommandBuffer@plt>:
    4420:	ff 25 d2 4d 02 00    	jmp    *0x24dd2(%rip)        # 291f8 <vkBeginCommandBuffer@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <_ZdlPvm@plt>:
    4430:	ff 25 ca 4d 02 00    	jmp    *0x24dca(%rip)        # 29200 <_ZdlPvm@CXXABI_1.3.9>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <vkDestroyInstance@plt>:
    4440:	ff 25 c2 4d 02 00    	jmp    *0x24dc2(%rip)        # 29208 <vkDestroyInstance@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <glfwTerminate@plt>:
    4450:	ff 25 ba 4d 02 00    	jmp    *0x24dba(%rip)        # 29210 <glfwTerminate@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkCreateImageView@plt>:
    4460:	ff 25 b2 4d 02 00    	jmp    *0x24db2(%rip)        # 29218 <vkCreateImageView@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4470:	ff 25 aa 4d 02 00    	jmp    *0x24daa(%rip)        # 29220 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZNSolsEPFRSoS_E@plt>:
    4480:	ff 25 a2 4d 02 00    	jmp    *0x24da2(%rip)        # 29228 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4490:	ff 25 9a 4d 02 00    	jmp    *0x24d9a(%rip)        # 29230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    44a0:	ff 25 92 4d 02 00    	jmp    *0x24d92(%rip)        # 29238 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <_ZNSaIcED1Ev@plt>:
    44b0:	ff 25 8a 4d 02 00    	jmp    *0x24d8a(%rip)        # 29240 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkDestroyFence@plt>:
    44c0:	ff 25 82 4d 02 00    	jmp    *0x24d82(%rip)        # 29248 <vkDestroyFence@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkDestroyPipeline@plt>:
    44d0:	ff 25 7a 4d 02 00    	jmp    *0x24d7a(%rip)        # 29250 <vkDestroyPipeline@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    44e0:	ff 25 72 4d 02 00    	jmp    *0x24d72(%rip)        # 29258 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    44f0:	ff 25 6a 4d 02 00    	jmp    *0x24d6a(%rip)        # 29260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <vkEnumerateInstanceLayerProperties@plt>:
    4500:	ff 25 62 4d 02 00    	jmp    *0x24d62(%rip)        # 29268 <vkEnumerateInstanceLayerProperties@Base>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <glfwInit@plt>:
    4510:	ff 25 5a 4d 02 00    	jmp    *0x24d5a(%rip)        # 29270 <glfwInit@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>:
    4520:	ff 25 52 4d 02 00    	jmp    *0x24d52(%rip)        # 29278 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4530:	ff 25 4a 4d 02 00    	jmp    *0x24d4a(%rip)        # 29280 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkBindBufferMemory@plt>:
    4540:	ff 25 42 4d 02 00    	jmp    *0x24d42(%rip)        # 29288 <vkBindBufferMemory@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkCreateSwapchainKHR@plt>:
    4550:	ff 25 3a 4d 02 00    	jmp    *0x24d3a(%rip)        # 29290 <vkCreateSwapchainKHR@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkDestroyShaderModule@plt>:
    4560:	ff 25 32 4d 02 00    	jmp    *0x24d32(%rip)        # 29298 <vkDestroyShaderModule@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkCreateInstance@plt>:
    4570:	ff 25 2a 4d 02 00    	jmp    *0x24d2a(%rip)        # 292a0 <vkCreateInstance@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4580:	ff 25 22 4d 02 00    	jmp    *0x24d22(%rip)        # 292a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkCreateFence@plt>:
    4590:	ff 25 1a 4d 02 00    	jmp    *0x24d1a(%rip)        # 292b0 <vkCreateFence@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <vkResetCommandBuffer@plt>:
    45a0:	ff 25 12 4d 02 00    	jmp    *0x24d12(%rip)        # 292b8 <vkResetCommandBuffer@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkDestroyPipelineLayout@plt>:
    45b0:	ff 25 0a 4d 02 00    	jmp    *0x24d0a(%rip)        # 292c0 <vkDestroyPipelineLayout@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <_ZNSi4readEPcl@plt>:
    45c0:	ff 25 02 4d 02 00    	jmp    *0x24d02(%rip)        # 292c8 <_ZNSi4readEPcl@GLIBCXX_3.4>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    45d0:	ff 25 fa 4c 02 00    	jmp    *0x24cfa(%rip)        # 292d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    45e0:	ff 25 f2 4c 02 00    	jmp    *0x24cf2(%rip)        # 292d8 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    45f0:	ff 25 ea 4c 02 00    	jmp    *0x24cea(%rip)        # 292e0 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <vkQueueSubmit@plt>:
    4600:	ff 25 e2 4c 02 00    	jmp    *0x24ce2(%rip)        # 292e8 <vkQueueSubmit@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkGetDeviceQueue@plt>:
    4610:	ff 25 da 4c 02 00    	jmp    *0x24cda(%rip)        # 292f0 <vkGetDeviceQueue@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSolsEj@plt>:
    4620:	ff 25 d2 4c 02 00    	jmp    *0x24cd2(%rip)        # 292f8 <_ZNSolsEj@GLIBCXX_3.4>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <vkCreateFramebuffer@plt>:
    4630:	ff 25 ca 4c 02 00    	jmp    *0x24cca(%rip)        # 29300 <vkCreateFramebuffer@Base>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <glfwGetWindowUserPointer@plt>:
    4640:	ff 25 c2 4c 02 00    	jmp    *0x24cc2(%rip)        # 29308 <glfwGetWindowUserPointer@Base>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4650:	ff 25 ba 4c 02 00    	jmp    *0x24cba(%rip)        # 29310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <vkEnumerateDeviceExtensionProperties@plt>:
    4660:	ff 25 b2 4c 02 00    	jmp    *0x24cb2(%rip)        # 29318 <vkEnumerateDeviceExtensionProperties@Base>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4670:	ff 25 aa 4c 02 00    	jmp    *0x24caa(%rip)        # 29320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkCreateSemaphore@plt>:
    4680:	ff 25 a2 4c 02 00    	jmp    *0x24ca2(%rip)        # 29328 <vkCreateSemaphore@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <vkCmdBeginRenderPass@plt>:
    4690:	ff 25 9a 4c 02 00    	jmp    *0x24c9a(%rip)        # 29330 <vkCmdBeginRenderPass@Base>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <vkDestroyCommandPool@plt>:
    46a0:	ff 25 92 4c 02 00    	jmp    *0x24c92(%rip)        # 29338 <vkDestroyCommandPool@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <strcmp@plt>:
    46b0:	ff 25 8a 4c 02 00    	jmp    *0x24c8a(%rip)        # 29340 <strcmp@GLIBC_2.2.5>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <vkCmdBindVertexBuffers@plt>:
    46c0:	ff 25 82 4c 02 00    	jmp    *0x24c82(%rip)        # 29348 <vkCmdBindVertexBuffers@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSaIcEC2ERKS_@plt>:
    46d0:	ff 25 7a 4c 02 00    	jmp    *0x24c7a(%rip)        # 29350 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkCmdCopyBuffer@plt>:
    46e0:	ff 25 72 4c 02 00    	jmp    *0x24c72(%rip)        # 29358 <vkCmdCopyBuffer@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <__cxa_rethrow@plt>:
    46f0:	ff 25 6a 4c 02 00    	jmp    *0x24c6a(%rip)        # 29360 <__cxa_rethrow@CXXABI_1.3>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <vkCreateDevice@plt>:
    4700:	ff 25 62 4c 02 00    	jmp    *0x24c62(%rip)        # 29368 <vkCreateDevice@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <glfwSetFramebufferSizeCallback@plt>:
    4710:	ff 25 5a 4c 02 00    	jmp    *0x24c5a(%rip)        # 29370 <glfwSetFramebufferSizeCallback@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <_ZNSt8ios_base4InitC1Ev@plt>:
    4720:	ff 25 52 4c 02 00    	jmp    *0x24c52(%rip)        # 29378 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <glfwCreateWindowSurface@plt>:
    4730:	ff 25 4a 4c 02 00    	jmp    *0x24c4a(%rip)        # 29380 <glfwCreateWindowSurface@Base>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <vkResetFences@plt>:
    4740:	ff 25 42 4c 02 00    	jmp    *0x24c42(%rip)        # 29388 <vkResetFences@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <glfwCreateWindow@plt>:
    4750:	ff 25 3a 4c 02 00    	jmp    *0x24c3a(%rip)        # 29390 <glfwCreateWindow@Base>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <vkQueuePresentKHR@plt>:
    4760:	ff 25 32 4c 02 00    	jmp    *0x24c32(%rip)        # 29398 <vkQueuePresentKHR@Base>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <vkGetPhysicalDeviceMemoryProperties@plt>:
    4770:	ff 25 2a 4c 02 00    	jmp    *0x24c2a(%rip)        # 293a0 <vkGetPhysicalDeviceMemoryProperties@Base>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <glfwGetFramebufferSize@plt>:
    4780:	ff 25 22 4c 02 00    	jmp    *0x24c22(%rip)        # 293a8 <glfwGetFramebufferSize@Base>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4790:	ff 25 1a 4c 02 00    	jmp    *0x24c1a(%rip)        # 293b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    47a0:	ff 25 12 4c 02 00    	jmp    *0x24c12(%rip)        # 293b8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <memmove@plt>:
    47b0:	ff 25 0a 4c 02 00    	jmp    *0x24c0a(%rip)        # 293c0 <memmove@GLIBC_2.2.5>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <__cxa_end_catch@plt>:
    47c0:	ff 25 02 4c 02 00    	jmp    *0x24c02(%rip)        # 293c8 <__cxa_end_catch@CXXABI_1.3>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <vkAllocateMemory@plt>:
    47d0:	ff 25 fa 4b 02 00    	jmp    *0x24bfa(%rip)        # 293d0 <vkAllocateMemory@Base>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <vkDestroyFramebuffer@plt>:
    47e0:	ff 25 f2 4b 02 00    	jmp    *0x24bf2(%rip)        # 293d8 <vkDestroyFramebuffer@Base>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <__cxa_throw@plt>:
    47f0:	ff 25 ea 4b 02 00    	jmp    *0x24bea(%rip)        # 293e0 <__cxa_throw@CXXABI_1.3>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <_ZNSolsEi@plt>:
    4800:	ff 25 e2 4b 02 00    	jmp    *0x24be2(%rip)        # 293e8 <_ZNSolsEi@GLIBCXX_3.4>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <_ZNSi5tellgEv@plt>:
    4810:	ff 25 da 4b 02 00    	jmp    *0x24bda(%rip)        # 293f0 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <vkQueueWaitIdle@plt>:
    4820:	ff 25 d2 4b 02 00    	jmp    *0x24bd2(%rip)        # 293f8 <vkQueueWaitIdle@Base>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <vkDestroySurfaceKHR@plt>:
    4830:	ff 25 ca 4b 02 00    	jmp    *0x24bca(%rip)        # 29400 <vkDestroySurfaceKHR@Base>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <_Unwind_Resume@plt>:
    4840:	ff 25 c2 4b 02 00    	jmp    *0x24bc2(%rip)        # 29408 <_Unwind_Resume@GCC_3.0>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <_ZNSaIcEC1Ev@plt>:
    4850:	ff 25 ba 4b 02 00    	jmp    *0x24bba(%rip)        # 29410 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <vkDestroyImageView@plt>:
    4860:	ff 25 b2 4b 02 00    	jmp    *0x24bb2(%rip)        # 29418 <vkDestroyImageView@Base>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4870:	ff 25 aa 4b 02 00    	jmp    *0x24baa(%rip)        # 29420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <_ZNSt9exceptionD2Ev@plt>:
    4880:	ff 25 a2 4b 02 00    	jmp    *0x24ba2(%rip)        # 29428 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <glfwWindowShouldClose@plt>:
    4890:	ff 25 9a 4b 02 00    	jmp    *0x24b9a(%rip)        # 29430 <glfwWindowShouldClose@Base>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048a0 <_ZNSolsEd@plt>:
    48a0:	ff 25 92 4b 02 00    	jmp    *0x24b92(%rip)        # 29438 <_ZNSolsEd@GLIBCXX_3.4>
    48a6:	68 87 00 00 00       	push   $0x87
    48ab:	e9 70 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048b0 <vkEndCommandBuffer@plt>:
    48b0:	ff 25 8a 4b 02 00    	jmp    *0x24b8a(%rip)        # 29440 <vkEndCommandBuffer@Base>
    48b6:	68 88 00 00 00       	push   $0x88
    48bb:	e9 60 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048c0 <vkCmdDraw@plt>:
    48c0:	ff 25 82 4b 02 00    	jmp    *0x24b82(%rip)        # 29448 <vkCmdDraw@Base>
    48c6:	68 89 00 00 00       	push   $0x89
    48cb:	e9 50 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    48d0:	ff 25 7a 4b 02 00    	jmp    *0x24b7a(%rip)        # 29450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    48d6:	68 8a 00 00 00       	push   $0x8a
    48db:	e9 40 f7 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

00000000000048e0 <__cxa_finalize@plt>:
    48e0:	ff 25 aa 46 02 00    	jmp    *0x246aa(%rip)        # 28f90 <__cxa_finalize@GLIBC_2.2.5>
    48e6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000048f0 <_start>:
    48f0:	31 ed                	xor    %ebp,%ebp
    48f2:	49 89 d1             	mov    %rdx,%r9
    48f5:	5e                   	pop    %rsi
    48f6:	48 89 e2             	mov    %rsp,%rdx
    48f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    48fd:	50                   	push   %rax
    48fe:	54                   	push   %rsp
    48ff:	45 31 c0             	xor    %r8d,%r8d
    4902:	31 c9                	xor    %ecx,%ecx
    4904:	48 8d 3d 40 01 00 00 	lea    0x140(%rip),%rdi        # 4a4b <main>
    490b:	ff 15 8f 46 02 00    	call   *0x2468f(%rip)        # 28fa0 <__libc_start_main@GLIBC_2.34>
    4911:	f4                   	hlt
    4912:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4919:	00 00 00 
    491c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004920 <deregister_tm_clones>:
    4920:	48 8d 3d 51 4b 02 00 	lea    0x24b51(%rip),%rdi        # 29478 <__TMC_END__>
    4927:	48 8d 05 4a 4b 02 00 	lea    0x24b4a(%rip),%rax        # 29478 <__TMC_END__>
    492e:	48 39 f8             	cmp    %rdi,%rax
    4931:	74 15                	je     4948 <deregister_tm_clones+0x28>
    4933:	48 8b 05 76 46 02 00 	mov    0x24676(%rip),%rax        # 28fb0 <_ITM_deregisterTMCloneTable@Base>
    493a:	48 85 c0             	test   %rax,%rax
    493d:	74 09                	je     4948 <deregister_tm_clones+0x28>
    493f:	ff e0                	jmp    *%rax
    4941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4948:	c3                   	ret
    4949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004950 <register_tm_clones>:
    4950:	48 8d 3d 21 4b 02 00 	lea    0x24b21(%rip),%rdi        # 29478 <__TMC_END__>
    4957:	48 8d 35 1a 4b 02 00 	lea    0x24b1a(%rip),%rsi        # 29478 <__TMC_END__>
    495e:	48 29 fe             	sub    %rdi,%rsi
    4961:	48 89 f0             	mov    %rsi,%rax
    4964:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4968:	48 c1 f8 03          	sar    $0x3,%rax
    496c:	48 01 c6             	add    %rax,%rsi
    496f:	48 d1 fe             	sar    %rsi
    4972:	74 14                	je     4988 <register_tm_clones+0x38>
    4974:	48 8b 05 45 46 02 00 	mov    0x24645(%rip),%rax        # 28fc0 <_ITM_registerTMCloneTable@Base>
    497b:	48 85 c0             	test   %rax,%rax
    497e:	74 08                	je     4988 <register_tm_clones+0x38>
    4980:	ff e0                	jmp    *%rax
    4982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4988:	c3                   	ret
    4989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004990 <__do_global_dtors_aux>:
    4990:	f3 0f 1e fa          	endbr64
    4994:	80 3d 15 4d 02 00 00 	cmpb   $0x0,0x24d15(%rip)        # 296b0 <completed.0>
    499b:	75 2b                	jne    49c8 <__do_global_dtors_aux+0x38>
    499d:	55                   	push   %rbp
    499e:	48 83 3d ea 45 02 00 	cmpq   $0x0,0x245ea(%rip)        # 28f90 <__cxa_finalize@GLIBC_2.2.5>
    49a5:	00 
    49a6:	48 89 e5             	mov    %rsp,%rbp
    49a9:	74 0c                	je     49b7 <__do_global_dtors_aux+0x27>
    49ab:	48 8b 3d ae 4a 02 00 	mov    0x24aae(%rip),%rdi        # 29460 <__dso_handle>
    49b2:	e8 29 ff ff ff       	call   48e0 <__cxa_finalize@plt>
    49b7:	e8 64 ff ff ff       	call   4920 <deregister_tm_clones>
    49bc:	c6 05 ed 4c 02 00 01 	movb   $0x1,0x24ced(%rip)        # 296b0 <completed.0>
    49c3:	5d                   	pop    %rbp
    49c4:	c3                   	ret
    49c5:	0f 1f 00             	nopl   (%rax)
    49c8:	c3                   	ret
    49c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000049d0 <frame_dummy>:
    49d0:	f3 0f 1e fa          	endbr64
    49d4:	e9 77 ff ff ff       	jmp    4950 <register_tm_clones>

00000000000049d9 <_Z14protected_mainiPPc>:
#include <Renderer.hpp>

int protected_main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
    49d9:	55                   	push   %rbp
    49da:	48 89 e5             	mov    %rsp,%rbp
    49dd:	53                   	push   %rbx
    49de:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
    49e5:	89 bd 7c fe ff ff    	mov    %edi,-0x184(%rbp)
    49eb:	48 89 b5 70 fe ff ff 	mov    %rsi,-0x190(%rbp)
  rtvc::RenderApplication app;
    49f2:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    49f9:	48 89 c7             	mov    %rax,%rdi
    49fc:	e8 f5 04 00 00       	call   4ef6 <_ZN4rtvc17RenderApplicationC1Ev>
  app.run();
    4a01:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    4a08:	48 89 c7             	mov    %rax,%rdi
    4a0b:	e8 58 6f 00 00       	call   b968 <_ZN4rtvc17RenderApplication3runEv>

  return EXIT_SUCCESS;
    4a10:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4a15:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    4a1c:	48 89 c7             	mov    %rax,%rdi
    4a1f:	e8 b0 06 00 00       	call   50d4 <_ZN4rtvc17RenderApplicationD1Ev>
  return EXIT_SUCCESS;
    4a24:	89 d8                	mov    %ebx,%eax
    4a26:	eb 1d                	jmp    4a45 <_Z14protected_mainiPPc+0x6c>
}
    4a28:	48 89 c3             	mov    %rax,%rbx
    4a2b:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    4a32:	48 89 c7             	mov    %rax,%rdi
    4a35:	e8 9a 06 00 00       	call   50d4 <_ZN4rtvc17RenderApplicationD1Ev>
    4a3a:	48 89 d8             	mov    %rbx,%rax
    4a3d:	48 89 c7             	mov    %rax,%rdi
    4a40:	e8 fb fd ff ff       	call   4840 <_Unwind_Resume@plt>
    4a45:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a49:	c9                   	leave
    4a4a:	c3                   	ret

0000000000004a4b <main>:

int main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
    4a4b:	55                   	push   %rbp
    4a4c:	48 89 e5             	mov    %rsp,%rbp
    4a4f:	53                   	push   %rbx
    4a50:	48 83 ec 28          	sub    $0x28,%rsp
    4a54:	89 7d dc             	mov    %edi,-0x24(%rbp)
    4a57:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  try {
    return protected_main(argc, argv);
    4a5b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4a5f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    4a62:	48 89 d6             	mov    %rdx,%rsi
    4a65:	89 c7                	mov    %eax,%edi
    4a67:	e8 6d ff ff ff       	call   49d9 <_Z14protected_mainiPPc>
    4a6c:	e9 aa 00 00 00       	jmp    4b1b <main+0xd0>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4a71:	b8 01 00 00 00       	mov    $0x1,%eax
    4a76:	e9 a0 00 00 00       	jmp    4b1b <main+0xd0>
  } catch (const std::exception &e) {
    4a7b:	48 83 fa 01          	cmp    $0x1,%rdx
    4a7f:	75 49                	jne    4aca <main+0x7f>
    4a81:	48 89 c7             	mov    %rax,%rdi
    4a84:	e8 a7 f6 ff ff       	call   4130 <__cxa_begin_catch@plt>
    4a89:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4a8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a91:	48 8b 00             	mov    (%rax),%rax
    4a94:	48 83 c0 10          	add    $0x10,%rax
    4a98:	48 8b 10             	mov    (%rax),%rdx
    4a9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a9f:	48 89 c7             	mov    %rax,%rdi
    4aa2:	ff d2                	call   *%rdx
    4aa4:	48 89 c6             	mov    %rax,%rsi
    4aa7:	48 8d 05 f2 4a 02 00 	lea    0x24af2(%rip),%rax        # 295a0 <_ZSt4cerr@GLIBCXX_3.4>
    4aae:	48 89 c7             	mov    %rax,%rdi
    4ab1:	e8 4a f9 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4ab6:	be 0a 00 00 00       	mov    $0xa,%esi
    4abb:	48 89 c7             	mov    %rax,%rdi
    4abe:	e8 6d fa ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4ac3:	e8 f8 fc ff ff       	call   47c0 <__cxa_end_catch@plt>
    4ac8:	eb a7                	jmp    4a71 <main+0x26>
    4aca:	48 89 c7             	mov    %rax,%rdi
    4acd:	e8 5e f6 ff ff       	call   4130 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4ad2:	48 8d 05 38 4b 01 00 	lea    0x14b38(%rip),%rax        # 19611 <_ZN6__pstl9execution2v1L5unseqE+0x2e>
    4ad9:	48 89 c6             	mov    %rax,%rsi
    4adc:	48 8d 05 bd 4a 02 00 	lea    0x24abd(%rip),%rax        # 295a0 <_ZSt4cerr@GLIBCXX_3.4>
    4ae3:	48 89 c7             	mov    %rax,%rdi
    4ae6:	e8 15 f9 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4aeb:	e8 d0 fc ff ff       	call   47c0 <__cxa_end_catch@plt>
    4af0:	e9 7c ff ff ff       	jmp    4a71 <main+0x26>
  } catch (...) {
    4af5:	48 89 c3             	mov    %rax,%rbx
    4af8:	e8 c3 fc ff ff       	call   47c0 <__cxa_end_catch@plt>
    4afd:	48 89 d8             	mov    %rbx,%rax
    4b00:	48 89 c7             	mov    %rax,%rdi
    4b03:	e8 38 fd ff ff       	call   4840 <_Unwind_Resume@plt>
  }
    4b08:	48 89 c3             	mov    %rax,%rbx
    4b0b:	e8 b0 fc ff ff       	call   47c0 <__cxa_end_catch@plt>
    4b10:	48 89 d8             	mov    %rbx,%rax
    4b13:	48 89 c7             	mov    %rax,%rdi
    4b16:	e8 25 fd ff ff       	call   4840 <_Unwind_Resume@plt>
    4b1b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b1f:	c9                   	leave
    4b20:	c3                   	ret

0000000000004b21 <_Z41__static_initialization_and_destruction_0ii>:
    4b21:	55                   	push   %rbp
    4b22:	48 89 e5             	mov    %rsp,%rbp
    4b25:	41 55                	push   %r13
    4b27:	41 54                	push   %r12
    4b29:	53                   	push   %rbx
    4b2a:	48 83 ec 58          	sub    $0x58,%rsp
    4b2e:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    4b31:	89 75 98             	mov    %esi,-0x68(%rbp)
    4b34:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
    4b38:	0f 85 9f 01 00 00    	jne    4cdd <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    4b3e:	81 7d 98 ff ff 00 00 	cmpl   $0xffff,-0x68(%rbp)
    4b45:	0f 85 92 01 00 00    	jne    4cdd <_Z41__static_initialization_and_destruction_0ii+0x1bc>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4b4b:	48 8d 05 5f 4b 02 00 	lea    0x24b5f(%rip),%rax        # 296b1 <_ZStL8__ioinit>
    4b52:	48 89 c7             	mov    %rax,%rdi
    4b55:	e8 c6 fb ff ff       	call   4720 <_ZNSt8ios_base4InitC1Ev@plt>
    4b5a:	48 8d 05 ff 48 02 00 	lea    0x248ff(%rip),%rax        # 29460 <__dso_handle>
    4b61:	48 89 c2             	mov    %rax,%rdx
    4b64:	48 8d 05 46 4b 02 00 	lea    0x24b46(%rip),%rax        # 296b1 <_ZStL8__ioinit>
    4b6b:	48 89 c6             	mov    %rax,%rsi
    4b6e:	48 8b 05 53 44 02 00 	mov    0x24453(%rip),%rax        # 28fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4b75:	48 89 c7             	mov    %rax,%rdi
    4b78:	e8 03 f8 ff ff       	call   4380 <__cxa_atexit@plt>

#include "Vertex.hpp"
#include <vector>

namespace rtvc::resources::shaders {
inline const std::vector<rtvc::Vertex> triangle = {
    4b7d:	48 8d 05 54 4b 02 00 	lea    0x24b54(%rip),%rax        # 296d8 <_ZGVN4rtvc9resources7shaders8triangleE>
    4b84:	0f b6 00             	movzbl (%rax),%eax
    4b87:	84 c0                	test   %al,%al
    4b89:	0f 85 4e 01 00 00    	jne    4cdd <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    4b8f:	48 8d 05 42 4b 02 00 	lea    0x24b42(%rip),%rax        # 296d8 <_ZGVN4rtvc9resources7shaders8triangleE>
    4b96:	c6 00 01             	movb   $0x1,(%rax)
    4b99:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4b9d:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    4ba2:	f3 0f 10 05 b2 4a 01 	movss  0x14ab2(%rip),%xmm0        # 1965c <_ZN6__pstl9execution2v1L5unseqE+0x79>
    4ba9:	00 
    4baa:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    4baf:	f3 0f 10 05 a9 4a 01 	movss  0x14aa9(%rip),%xmm0        # 19660 <_ZN6__pstl9execution2v1L5unseqE+0x7d>
    4bb6:	00 
    4bb7:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    4bbc:	f3 0f 10 05 a0 4a 01 	movss  0x14aa0(%rip),%xmm0        # 19664 <_ZN6__pstl9execution2v1L5unseqE+0x81>
    4bc3:	00 
    4bc4:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    4bc9:	f3 0f 10 05 97 4a 01 	movss  0x14a97(%rip),%xmm0        # 19668 <_ZN6__pstl9execution2v1L5unseqE+0x85>
    4bd0:	00 
    4bd1:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    4bd6:	f3 0f 10 05 82 4a 01 	movss  0x14a82(%rip),%xmm0        # 19660 <_ZN6__pstl9execution2v1L5unseqE+0x7d>
    4bdd:	00 
    4bde:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    4be3:	f3 0f 10 05 75 4a 01 	movss  0x14a75(%rip),%xmm0        # 19660 <_ZN6__pstl9execution2v1L5unseqE+0x7d>
    4bea:	00 
    4beb:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    4bf0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4bf4:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    4bf9:	f3 0f 10 05 6b 4a 01 	movss  0x14a6b(%rip),%xmm0        # 1966c <_ZN6__pstl9execution2v1L5unseqE+0x89>
    4c00:	00 
    4c01:	f3 0f 11 45 c0       	movss  %xmm0,-0x40(%rbp)
    4c06:	f3 0f 10 05 62 4a 01 	movss  0x14a62(%rip),%xmm0        # 19670 <_ZN6__pstl9execution2v1L5unseqE+0x8d>
    4c0d:	00 
    4c0e:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
    4c13:	f3 0f 10 05 41 4a 01 	movss  0x14a41(%rip),%xmm0        # 1965c <_ZN6__pstl9execution2v1L5unseqE+0x79>
    4c1a:	00 
    4c1b:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
    4c20:	f3 0f 10 05 38 4a 01 	movss  0x14a38(%rip),%xmm0        # 19660 <_ZN6__pstl9execution2v1L5unseqE+0x7d>
    4c27:	00 
    4c28:	f3 0f 11 45 cc       	movss  %xmm0,-0x34(%rbp)
    4c2d:	f3 0f 10 05 3f 4a 01 	movss  0x14a3f(%rip),%xmm0        # 19674 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    4c34:	00 
    4c35:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    4c3a:	f3 0f 10 05 32 4a 01 	movss  0x14a32(%rip),%xmm0        # 19674 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    4c41:	00 
    4c42:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    4c47:	f3 0f 10 05 15 4a 01 	movss  0x14a15(%rip),%xmm0        # 19664 <_ZN6__pstl9execution2v1L5unseqE+0x81>
    4c4e:	00 
    4c4f:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    4c54:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4c58:	49 89 c4             	mov    %rax,%r12
    4c5b:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    4c61:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4c65:	48 89 c7             	mov    %rax,%rdi
    4c68:	e8 13 05 00 00       	call   5180 <_ZNSaIN4rtvc6VertexEEC1Ev>
    4c6d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4c71:	4c 89 e6             	mov    %r12,%rsi
    4c74:	4c 89 ef             	mov    %r13,%rdi
    4c77:	4c 89 e1             	mov    %r12,%rcx
    4c7a:	4c 89 eb             	mov    %r13,%rbx
    4c7d:	48 89 da             	mov    %rbx,%rdx
    4c80:	48 89 c1             	mov    %rax,%rcx
    4c83:	48 8d 05 36 4a 02 00 	lea    0x24a36(%rip),%rax        # 296c0 <_ZN4rtvc9resources7shaders8triangleE>
    4c8a:	48 89 c7             	mov    %rax,%rdi
    4c8d:	e8 26 05 00 00       	call   51b8 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    4c92:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4c96:	48 89 c7             	mov    %rax,%rdi
    4c99:	e8 fe 04 00 00       	call   519c <_ZNSaIN4rtvc6VertexEED1Ev>
    4c9e:	48 8d 05 bb 47 02 00 	lea    0x247bb(%rip),%rax        # 29460 <__dso_handle>
    4ca5:	48 89 c2             	mov    %rax,%rdx
    4ca8:	48 8d 05 11 4a 02 00 	lea    0x24a11(%rip),%rax        # 296c0 <_ZN4rtvc9resources7shaders8triangleE>
    4caf:	48 89 c6             	mov    %rax,%rsi
    4cb2:	48 8d 05 27 23 00 00 	lea    0x2327(%rip),%rax        # 6fe0 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>
    4cb9:	48 89 c7             	mov    %rax,%rdi
    4cbc:	e8 bf f6 ff ff       	call   4380 <__cxa_atexit@plt>
    4cc1:	eb 1a                	jmp    4cdd <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    4cc3:	48 89 c3             	mov    %rax,%rbx
    4cc6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4cca:	48 89 c7             	mov    %rax,%rdi
    4ccd:	e8 ca 04 00 00       	call   519c <_ZNSaIN4rtvc6VertexEED1Ev>
    4cd2:	48 89 d8             	mov    %rbx,%rax
    4cd5:	48 89 c7             	mov    %rax,%rdi
    4cd8:	e8 63 fb ff ff       	call   4840 <_Unwind_Resume@plt>
    4cdd:	90                   	nop
    4cde:	48 83 c4 58          	add    $0x58,%rsp
    4ce2:	5b                   	pop    %rbx
    4ce3:	41 5c                	pop    %r12
    4ce5:	41 5d                	pop    %r13
    4ce7:	5d                   	pop    %rbp
    4ce8:	c3                   	ret

0000000000004ce9 <_GLOBAL__sub_I__Z14protected_mainiPPc>:
    4ce9:	55                   	push   %rbp
    4cea:	48 89 e5             	mov    %rsp,%rbp
    4ced:	be ff ff 00 00       	mov    $0xffff,%esi
    4cf2:	bf 01 00 00 00       	mov    $0x1,%edi
    4cf7:	e8 25 fe ff ff       	call   4b21 <_Z41__static_initialization_and_destruction_0ii>
    4cfc:	5d                   	pop    %rbp
    4cfd:	c3                   	ret

0000000000004cfe <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4cfe:	55                   	push   %rbp
    4cff:	48 89 e5             	mov    %rsp,%rbp
    4d02:	48 83 ec 10          	sub    $0x10,%rsp
    4d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d0e:	48 89 c7             	mov    %rax,%rdi
    4d11:	e8 56 06 00 00       	call   536c <_ZNSaIP9VkImage_TED1Ev>
    4d16:	90                   	nop
    4d17:	c9                   	leave
    4d18:	c3                   	ret
    4d19:	90                   	nop

0000000000004d1a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    4d1a:	55                   	push   %rbp
    4d1b:	48 89 e5             	mov    %rsp,%rbp
    4d1e:	48 83 ec 10          	sub    $0x10,%rsp
    4d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2a:	48 89 c7             	mov    %rax,%rdi
    4d2d:	e8 12 06 00 00       	call   5344 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    4d32:	90                   	nop
    4d33:	c9                   	leave
    4d34:	c3                   	ret
    4d35:	90                   	nop

0000000000004d36 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    4d36:	55                   	push   %rbp
    4d37:	48 89 e5             	mov    %rsp,%rbp
    4d3a:	48 83 ec 10          	sub    $0x10,%rsp
    4d3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d46:	48 89 c7             	mov    %rax,%rdi
    4d49:	e8 cc ff ff ff       	call   4d1a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    4d4e:	90                   	nop
    4d4f:	c9                   	leave
    4d50:	c3                   	ret
    4d51:	90                   	nop

0000000000004d52 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    4d52:	55                   	push   %rbp
    4d53:	48 89 e5             	mov    %rsp,%rbp
    4d56:	48 83 ec 10          	sub    $0x10,%rsp
    4d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d62:	48 89 c7             	mov    %rax,%rdi
    4d65:	e8 d8 06 00 00       	call   5442 <_ZNSaIP13VkImageView_TED1Ev>
    4d6a:	90                   	nop
    4d6b:	c9                   	leave
    4d6c:	c3                   	ret
    4d6d:	90                   	nop

0000000000004d6e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    4d6e:	55                   	push   %rbp
    4d6f:	48 89 e5             	mov    %rsp,%rbp
    4d72:	48 83 ec 10          	sub    $0x10,%rsp
    4d76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d7e:	48 89 c7             	mov    %rax,%rdi
    4d81:	e8 94 06 00 00       	call   541a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
    4d86:	90                   	nop
    4d87:	c9                   	leave
    4d88:	c3                   	ret
    4d89:	90                   	nop

0000000000004d8a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
    4d8a:	55                   	push   %rbp
    4d8b:	48 89 e5             	mov    %rsp,%rbp
    4d8e:	48 83 ec 10          	sub    $0x10,%rsp
    4d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d9a:	48 89 c7             	mov    %rax,%rdi
    4d9d:	e8 cc ff ff ff       	call   4d6e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
    4da2:	90                   	nop
    4da3:	c9                   	leave
    4da4:	c3                   	ret
    4da5:	90                   	nop

0000000000004da6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    4da6:	55                   	push   %rbp
    4da7:	48 89 e5             	mov    %rsp,%rbp
    4daa:	48 83 ec 10          	sub    $0x10,%rsp
    4dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db6:	48 89 c7             	mov    %rax,%rdi
    4db9:	e8 5a 07 00 00       	call   5518 <_ZNSaIP15VkFramebuffer_TED1Ev>
    4dbe:	90                   	nop
    4dbf:	c9                   	leave
    4dc0:	c3                   	ret
    4dc1:	90                   	nop

0000000000004dc2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    4dc2:	55                   	push   %rbp
    4dc3:	48 89 e5             	mov    %rsp,%rbp
    4dc6:	48 83 ec 10          	sub    $0x10,%rsp
    4dca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd2:	48 89 c7             	mov    %rax,%rdi
    4dd5:	e8 16 07 00 00       	call   54f0 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
    4dda:	90                   	nop
    4ddb:	c9                   	leave
    4ddc:	c3                   	ret
    4ddd:	90                   	nop

0000000000004dde <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
    4dde:	55                   	push   %rbp
    4ddf:	48 89 e5             	mov    %rsp,%rbp
    4de2:	48 83 ec 10          	sub    $0x10,%rsp
    4de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dee:	48 89 c7             	mov    %rax,%rdi
    4df1:	e8 cc ff ff ff       	call   4dc2 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
    4df6:	90                   	nop
    4df7:	c9                   	leave
    4df8:	c3                   	ret
    4df9:	90                   	nop

0000000000004dfa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    4dfa:	55                   	push   %rbp
    4dfb:	48 89 e5             	mov    %rsp,%rbp
    4dfe:	48 83 ec 10          	sub    $0x10,%rsp
    4e02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0a:	48 89 c7             	mov    %rax,%rdi
    4e0d:	e8 dc 07 00 00       	call   55ee <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e12:	90                   	nop
    4e13:	c9                   	leave
    4e14:	c3                   	ret
    4e15:	90                   	nop

0000000000004e16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    4e16:	55                   	push   %rbp
    4e17:	48 89 e5             	mov    %rsp,%rbp
    4e1a:	48 83 ec 10          	sub    $0x10,%rsp
    4e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e26:	48 89 c7             	mov    %rax,%rdi
    4e29:	e8 98 07 00 00       	call   55c6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>
    4e2e:	90                   	nop
    4e2f:	c9                   	leave
    4e30:	c3                   	ret
    4e31:	90                   	nop

0000000000004e32 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>:
      vector() = default;
    4e32:	55                   	push   %rbp
    4e33:	48 89 e5             	mov    %rsp,%rbp
    4e36:	48 83 ec 10          	sub    $0x10,%rsp
    4e3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e42:	48 89 c7             	mov    %rax,%rdi
    4e45:	e8 cc ff ff ff       	call   4e16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1Ev>
    4e4a:	90                   	nop
    4e4b:	c9                   	leave
    4e4c:	c3                   	ret
    4e4d:	90                   	nop

0000000000004e4e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    4e4e:	55                   	push   %rbp
    4e4f:	48 89 e5             	mov    %rsp,%rbp
    4e52:	48 83 ec 10          	sub    $0x10,%rsp
    4e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e5e:	48 89 c7             	mov    %rax,%rdi
    4e61:	e8 5e 08 00 00       	call   56c4 <_ZNSaIP13VkSemaphore_TED1Ev>
    4e66:	90                   	nop
    4e67:	c9                   	leave
    4e68:	c3                   	ret
    4e69:	90                   	nop

0000000000004e6a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    4e6a:	55                   	push   %rbp
    4e6b:	48 89 e5             	mov    %rsp,%rbp
    4e6e:	48 83 ec 10          	sub    $0x10,%rsp
    4e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7a:	48 89 c7             	mov    %rax,%rdi
    4e7d:	e8 1a 08 00 00       	call   569c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>
    4e82:	90                   	nop
    4e83:	c9                   	leave
    4e84:	c3                   	ret
    4e85:	90                   	nop

0000000000004e86 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>:
      vector() = default;
    4e86:	55                   	push   %rbp
    4e87:	48 89 e5             	mov    %rsp,%rbp
    4e8a:	48 83 ec 10          	sub    $0x10,%rsp
    4e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e96:	48 89 c7             	mov    %rax,%rdi
    4e99:	e8 cc ff ff ff       	call   4e6a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1Ev>
    4e9e:	90                   	nop
    4e9f:	c9                   	leave
    4ea0:	c3                   	ret
    4ea1:	90                   	nop

0000000000004ea2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    4ea2:	55                   	push   %rbp
    4ea3:	48 89 e5             	mov    %rsp,%rbp
    4ea6:	48 83 ec 10          	sub    $0x10,%rsp
    4eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb2:	48 89 c7             	mov    %rax,%rdi
    4eb5:	e8 e0 08 00 00       	call   579a <_ZNSaIP9VkFence_TED1Ev>
    4eba:	90                   	nop
    4ebb:	c9                   	leave
    4ebc:	c3                   	ret
    4ebd:	90                   	nop

0000000000004ebe <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    4ebe:	55                   	push   %rbp
    4ebf:	48 89 e5             	mov    %rsp,%rbp
    4ec2:	48 83 ec 10          	sub    $0x10,%rsp
    4ec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ece:	48 89 c7             	mov    %rax,%rdi
    4ed1:	e8 9c 08 00 00       	call   5772 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>
    4ed6:	90                   	nop
    4ed7:	c9                   	leave
    4ed8:	c3                   	ret
    4ed9:	90                   	nop

0000000000004eda <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>:
      vector() = default;
    4eda:	55                   	push   %rbp
    4edb:	48 89 e5             	mov    %rsp,%rbp
    4ede:	48 83 ec 10          	sub    $0x10,%rsp
    4ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eea:	48 89 c7             	mov    %rax,%rdi
    4eed:	e8 cc ff ff ff       	call   4ebe <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EEC1Ev>
    4ef2:	90                   	nop
    4ef3:	c9                   	leave
    4ef4:	c3                   	ret
    4ef5:	90                   	nop

0000000000004ef6 <_ZN4rtvc17RenderApplicationC1Ev>:

  // RenderApplication()
  //     : window{nullptr, init_window_width, init_window_height} {}
  // RenderApplication(uint32_t w, uint32_t h) : window{nullptr, w, h} {}

  RenderApplication()
    4ef6:	55                   	push   %rbp
    4ef7:	48 89 e5             	mov    %rsp,%rbp
    4efa:	41 57                	push   %r15
    4efc:	41 56                	push   %r14
    4efe:	41 55                	push   %r13
    4f00:	41 54                	push   %r12
    4f02:	53                   	push   %rbx
    4f03:	48 83 ec 38          	sub    $0x38,%rsp
    4f07:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      : window{nullptr}, width{init_window_width}, height{init_window_height} {}
    4f0b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4f0f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4f16:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4f1a:	c7 40 08 00 04 00 00 	movl   $0x400,0x8(%rax)
    4f21:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4f25:	c7 40 0c d0 02 00 00 	movl   $0x2d0,0xc(%rax)
    4f2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4f30:	48 8d 58 18          	lea    0x18(%rax),%rbx
    4f34:	48 8d 05 a9 46 01 00 	lea    0x146a9(%rip),%rax        # 195e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    4f3b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4f3f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4f43:	49 89 c6             	mov    %rax,%r14
    4f46:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    4f4c:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4f50:	48 89 c7             	mov    %rax,%rdi
    4f53:	e8 e8 02 00 00       	call   5240 <_ZNSaIPKcEC1Ev>
    4f58:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4f5c:	4d 89 f0             	mov    %r14,%r8
    4f5f:	4d 89 f9             	mov    %r15,%r9
    4f62:	4c 89 f6             	mov    %r14,%rsi
    4f65:	4c 89 ff             	mov    %r15,%rdi
    4f68:	48 89 fa             	mov    %rdi,%rdx
    4f6b:	48 89 c1             	mov    %rax,%rcx
    4f6e:	4c 89 c6             	mov    %r8,%rsi
    4f71:	48 89 df             	mov    %rbx,%rdi
    4f74:	e8 ff 02 00 00       	call   5278 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    4f79:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4f7d:	48 89 c7             	mov    %rax,%rdi
    4f80:	e8 d7 02 00 00       	call   525c <_ZNSaIPKcED1Ev>
    4f85:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4f89:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    4f90:	00 
    4f91:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4f95:	48 8d 58 60          	lea    0x60(%rax),%rbx
    4f99:	48 8d 05 60 46 01 00 	lea    0x14660(%rip),%rax        # 19600 <_ZN6__pstl9execution2v1L5unseqE+0x1d>
    4fa0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4fa4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4fa8:	49 89 c4             	mov    %rax,%r12
    4fab:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    4fb1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4fb5:	48 89 c7             	mov    %rax,%rdi
    4fb8:	e8 83 02 00 00       	call   5240 <_ZNSaIPKcEC1Ev>
    4fbd:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4fc1:	4d 89 e0             	mov    %r12,%r8
    4fc4:	4d 89 e9             	mov    %r13,%r9
    4fc7:	4c 89 e6             	mov    %r12,%rsi
    4fca:	4c 89 ef             	mov    %r13,%rdi
    4fcd:	48 89 fa             	mov    %rdi,%rdx
    4fd0:	48 89 c1             	mov    %rax,%rcx
    4fd3:	4c 89 c6             	mov    %r8,%rsi
    4fd6:	48 89 df             	mov    %rbx,%rdi
    4fd9:	e8 9a 02 00 00       	call   5278 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    4fde:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    4fe2:	48 89 c7             	mov    %rax,%rdi
    4fe5:	e8 72 02 00 00       	call   525c <_ZNSaIPKcED1Ev>
    4fea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4fee:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    4ff2:	48 89 c7             	mov    %rax,%rdi
    4ff5:	e8 3c fd ff ff       	call   4d36 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    4ffa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4ffe:	48 05 a8 00 00 00    	add    $0xa8,%rax
    5004:	48 89 c7             	mov    %rax,%rdi
    5007:	e8 7e fd ff ff       	call   4d8a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    500c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5010:	48 05 d8 00 00 00    	add    $0xd8,%rax
    5016:	48 89 c7             	mov    %rax,%rdi
    5019:	e8 c0 fd ff ff       	call   4dde <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
    501e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5022:	48 05 f8 00 00 00    	add    $0xf8,%rax
    5028:	48 89 c7             	mov    %rax,%rdi
    502b:	e8 02 fe ff ff       	call   4e32 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1Ev>
    5030:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5034:	48 05 10 01 00 00    	add    $0x110,%rax
    503a:	48 89 c7             	mov    %rax,%rdi
    503d:	e8 44 fe ff ff       	call   4e86 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
    5042:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5046:	48 05 28 01 00 00    	add    $0x128,%rax
    504c:	48 89 c7             	mov    %rax,%rdi
    504f:	e8 32 fe ff ff       	call   4e86 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1Ev>
    5054:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5058:	48 05 40 01 00 00    	add    $0x140,%rax
    505e:	48 89 c7             	mov    %rax,%rdi
    5061:	e8 74 fe ff ff       	call   4eda <_ZNSt6vectorIP9VkFence_TSaIS1_EEC1Ev>
    5066:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    506a:	c6 80 58 01 00 00 00 	movb   $0x0,0x158(%rax)
    5071:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5075:	c7 80 5c 01 00 00 00 	movl   $0x0,0x15c(%rax)
    507c:	00 00 00 
    507f:	eb 44                	jmp    50c5 <_ZN4rtvc17RenderApplicationC1Ev+0x1cf>
    5081:	48 89 c3             	mov    %rax,%rbx
    5084:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    5088:	48 89 c7             	mov    %rax,%rdi
    508b:	e8 cc 01 00 00       	call   525c <_ZNSaIPKcED1Ev>
    5090:	48 89 d8             	mov    %rbx,%rax
    5093:	48 89 c7             	mov    %rax,%rdi
    5096:	e8 a5 f7 ff ff       	call   4840 <_Unwind_Resume@plt>
    509b:	48 89 c3             	mov    %rax,%rbx
    509e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    50a2:	48 89 c7             	mov    %rax,%rdi
    50a5:	e8 b2 01 00 00       	call   525c <_ZNSaIPKcED1Ev>
    50aa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    50ae:	48 83 c0 18          	add    $0x18,%rax
    50b2:	48 89 c7             	mov    %rax,%rdi
    50b5:	e8 46 02 00 00       	call   5300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    50ba:	48 89 d8             	mov    %rbx,%rax
    50bd:	48 89 c7             	mov    %rax,%rdi
    50c0:	e8 7b f7 ff ff       	call   4840 <_Unwind_Resume@plt>
    50c5:	48 83 c4 38          	add    $0x38,%rsp
    50c9:	5b                   	pop    %rbx
    50ca:	41 5c                	pop    %r12
    50cc:	41 5d                	pop    %r13
    50ce:	41 5e                	pop    %r14
    50d0:	41 5f                	pop    %r15
    50d2:	5d                   	pop    %rbp
    50d3:	c3                   	ret

00000000000050d4 <_ZN4rtvc17RenderApplicationD1Ev>:
class RenderApplication {
    50d4:	55                   	push   %rbp
    50d5:	48 89 e5             	mov    %rsp,%rbp
    50d8:	48 83 ec 10          	sub    $0x10,%rsp
    50dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e4:	48 05 40 01 00 00    	add    $0x140,%rax
    50ea:	48 89 c7             	mov    %rax,%rdi
    50ed:	e8 12 07 00 00       	call   5804 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
    50f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f6:	48 05 28 01 00 00    	add    $0x128,%rax
    50fc:	48 89 c7             	mov    %rax,%rdi
    50ff:	e8 2a 06 00 00       	call   572e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    5104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5108:	48 05 10 01 00 00    	add    $0x110,%rax
    510e:	48 89 c7             	mov    %rax,%rdi
    5111:	e8 18 06 00 00       	call   572e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    5116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    511a:	48 05 f8 00 00 00    	add    $0xf8,%rax
    5120:	48 89 c7             	mov    %rax,%rdi
    5123:	e8 30 05 00 00       	call   5658 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    512c:	48 05 d8 00 00 00    	add    $0xd8,%rax
    5132:	48 89 c7             	mov    %rax,%rdi
    5135:	e8 48 04 00 00       	call   5582 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    513a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    513e:	48 05 a8 00 00 00    	add    $0xa8,%rax
    5144:	48 89 c7             	mov    %rax,%rdi
    5147:	e8 60 03 00 00       	call   54ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    514c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5150:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    5154:	48 89 c7             	mov    %rax,%rdi
    5157:	e8 7a 02 00 00       	call   53d6 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    515c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5160:	48 83 c0 60          	add    $0x60,%rax
    5164:	48 89 c7             	mov    %rax,%rdi
    5167:	e8 94 01 00 00       	call   5300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    516c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5170:	48 83 c0 18          	add    $0x18,%rax
    5174:	48 89 c7             	mov    %rax,%rdi
    5177:	e8 84 01 00 00       	call   5300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    517c:	90                   	nop
    517d:	c9                   	leave
    517e:	c3                   	ret
    517f:	90                   	nop

0000000000005180 <_ZNSaIN4rtvc6VertexEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    5180:	55                   	push   %rbp
    5181:	48 89 e5             	mov    %rsp,%rbp
    5184:	48 83 ec 10          	sub    $0x10,%rsp
    5188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    518c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5190:	48 89 c7             	mov    %rax,%rdi
    5193:	e8 b0 06 00 00       	call   5848 <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1Ev>
    5198:	90                   	nop
    5199:	c9                   	leave
    519a:	c3                   	ret
    519b:	90                   	nop

000000000000519c <_ZNSaIN4rtvc6VertexEED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    519c:	55                   	push   %rbp
    519d:	48 89 e5             	mov    %rsp,%rbp
    51a0:	48 83 ec 10          	sub    $0x10,%rsp
    51a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ac:	48 89 c7             	mov    %rax,%rdi
    51af:	e8 a0 06 00 00       	call   5854 <_ZNSt15__new_allocatorIN4rtvc6VertexEED1Ev>
    51b4:	90                   	nop
    51b5:	c9                   	leave
    51b6:	c3                   	ret
    51b7:	90                   	nop

00000000000051b8 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    51b8:	55                   	push   %rbp
    51b9:	48 89 e5             	mov    %rsp,%rbp
    51bc:	53                   	push   %rbx
    51bd:	48 83 ec 38          	sub    $0x38,%rsp
    51c1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    51c5:	48 89 f0             	mov    %rsi,%rax
    51c8:	48 89 d6             	mov    %rdx,%rsi
    51cb:	48 89 f2             	mov    %rsi,%rdx
    51ce:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    51d2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    51d6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    51da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51de:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    51e2:	48 89 d6             	mov    %rdx,%rsi
    51e5:	48 89 c7             	mov    %rax,%rdi
    51e8:	e8 8f 06 00 00       	call   587c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EEC1ERKS2_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    51ed:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    51f1:	48 89 c7             	mov    %rax,%rdi
    51f4:	e8 13 07 00 00       	call   590c <_ZNKSt16initializer_listIN4rtvc6VertexEE3endEv>
    51f9:	48 89 c3             	mov    %rax,%rbx
    51fc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5200:	48 89 c7             	mov    %rax,%rdi
    5203:	e8 f2 06 00 00       	call   58fa <_ZNKSt16initializer_listIN4rtvc6VertexEE5beginEv>
    5208:	48 89 c1             	mov    %rax,%rcx
    520b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    520f:	48 89 da             	mov    %rbx,%rdx
    5212:	48 89 ce             	mov    %rcx,%rsi
    5215:	48 89 c7             	mov    %rax,%rdi
    5218:	e8 63 07 00 00       	call   5980 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    521d:	eb 1a                	jmp    5239 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    521f:	48 89 c3             	mov    %rax,%rbx
    5222:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5226:	48 89 c7             	mov    %rax,%rdi
    5229:	e8 74 06 00 00       	call   58a2 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EED1Ev>
    522e:	48 89 d8             	mov    %rbx,%rax
    5231:	48 89 c7             	mov    %rax,%rdi
    5234:	e8 07 f6 ff ff       	call   4840 <_Unwind_Resume@plt>
    5239:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    523d:	c9                   	leave
    523e:	c3                   	ret
    523f:	90                   	nop

0000000000005240 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5240:	55                   	push   %rbp
    5241:	48 89 e5             	mov    %rsp,%rbp
    5244:	48 83 ec 10          	sub    $0x10,%rsp
    5248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    524c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5250:	48 89 c7             	mov    %rax,%rdi
    5253:	e8 e2 07 00 00       	call   5a3a <_ZNSt15__new_allocatorIPKcEC1Ev>
    5258:	90                   	nop
    5259:	c9                   	leave
    525a:	c3                   	ret
    525b:	90                   	nop

000000000000525c <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    525c:	55                   	push   %rbp
    525d:	48 89 e5             	mov    %rsp,%rbp
    5260:	48 83 ec 10          	sub    $0x10,%rsp
    5264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    526c:	48 89 c7             	mov    %rax,%rdi
    526f:	e8 d2 07 00 00       	call   5a46 <_ZNSt15__new_allocatorIPKcED1Ev>
    5274:	90                   	nop
    5275:	c9                   	leave
    5276:	c3                   	ret
    5277:	90                   	nop

0000000000005278 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    5278:	55                   	push   %rbp
    5279:	48 89 e5             	mov    %rsp,%rbp
    527c:	53                   	push   %rbx
    527d:	48 83 ec 38          	sub    $0x38,%rsp
    5281:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5285:	48 89 f0             	mov    %rsi,%rax
    5288:	48 89 d6             	mov    %rdx,%rsi
    528b:	48 89 f2             	mov    %rsi,%rdx
    528e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5292:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    5296:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    529a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    529e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    52a2:	48 89 d6             	mov    %rdx,%rsi
    52a5:	48 89 c7             	mov    %rax,%rdi
    52a8:	e8 c1 07 00 00       	call   5a6e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    52ad:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    52b1:	48 89 c7             	mov    %rax,%rdi
    52b4:	e8 3b 08 00 00       	call   5af4 <_ZNKSt16initializer_listIPKcE3endEv>
    52b9:	48 89 c3             	mov    %rax,%rbx
    52bc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    52c0:	48 89 c7             	mov    %rax,%rdi
    52c3:	e8 1a 08 00 00       	call   5ae2 <_ZNKSt16initializer_listIPKcE5beginEv>
    52c8:	48 89 c1             	mov    %rax,%rcx
    52cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52cf:	48 89 da             	mov    %rbx,%rdx
    52d2:	48 89 ce             	mov    %rcx,%rsi
    52d5:	48 89 c7             	mov    %rax,%rdi
    52d8:	e8 7d 08 00 00       	call   5b5a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    52dd:	eb 1a                	jmp    52f9 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    52df:	48 89 c3             	mov    %rax,%rbx
    52e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52e6:	48 89 c7             	mov    %rax,%rdi
    52e9:	e8 a6 07 00 00       	call   5a94 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    52ee:	48 89 d8             	mov    %rbx,%rax
    52f1:	48 89 c7             	mov    %rax,%rdi
    52f4:	e8 47 f5 ff ff       	call   4840 <_Unwind_Resume@plt>
    52f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52fd:	c9                   	leave
    52fe:	c3                   	ret
    52ff:	90                   	nop

0000000000005300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    5300:	55                   	push   %rbp
    5301:	48 89 e5             	mov    %rsp,%rbp
    5304:	48 83 ec 10          	sub    $0x10,%rsp
    5308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    530c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5310:	48 89 c7             	mov    %rax,%rdi
    5313:	e8 f2 08 00 00       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5318:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    531b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5327:	48 8b 00             	mov    (%rax),%rax
    532a:	48 89 ce             	mov    %rcx,%rsi
    532d:	48 89 c7             	mov    %rax,%rdi
    5330:	e8 e3 08 00 00       	call   5c18 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    5335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5339:	48 89 c7             	mov    %rax,%rdi
    533c:	e8 53 07 00 00       	call   5a94 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    5341:	90                   	nop
    5342:	c9                   	leave
    5343:	c3                   	ret

0000000000005344 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    5344:	55                   	push   %rbp
    5345:	48 89 e5             	mov    %rsp,%rbp
    5348:	48 83 ec 10          	sub    $0x10,%rsp
    534c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    5350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5354:	48 89 c7             	mov    %rax,%rdi
    5357:	e8 e6 08 00 00       	call   5c42 <_ZNSaIP9VkImage_TEC1Ev>
    535c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5360:	48 89 c7             	mov    %rax,%rdi
    5363:	e8 f6 08 00 00       	call   5c5e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5368:	90                   	nop
    5369:	c9                   	leave
    536a:	c3                   	ret
    536b:	90                   	nop

000000000000536c <_ZNSaIP9VkImage_TED1Ev>:
    536c:	55                   	push   %rbp
    536d:	48 89 e5             	mov    %rsp,%rbp
    5370:	48 83 ec 10          	sub    $0x10,%rsp
    5374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    537c:	48 89 c7             	mov    %rax,%rdi
    537f:	e8 08 09 00 00       	call   5c8c <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    5384:	90                   	nop
    5385:	c9                   	leave
    5386:	c3                   	ret
    5387:	90                   	nop

0000000000005388 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5388:	55                   	push   %rbp
    5389:	48 89 e5             	mov    %rsp,%rbp
    538c:	48 83 ec 10          	sub    $0x10,%rsp
    5390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5398:	48 8b 50 10          	mov    0x10(%rax),%rdx
    539c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a0:	48 8b 00             	mov    (%rax),%rax
    53a3:	48 29 c2             	sub    %rax,%rdx
    53a6:	48 89 d0             	mov    %rdx,%rax
    53a9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    53ad:	48 89 c2             	mov    %rax,%rdx
    53b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b4:	48 8b 08             	mov    (%rax),%rcx
    53b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53bb:	48 89 ce             	mov    %rcx,%rsi
    53be:	48 89 c7             	mov    %rax,%rdi
    53c1:	e8 d2 08 00 00       	call   5c98 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    53c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ca:	48 89 c7             	mov    %rax,%rdi
    53cd:	e8 2c f9 ff ff       	call   4cfe <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    53d2:	90                   	nop
    53d3:	c9                   	leave
    53d4:	c3                   	ret
    53d5:	90                   	nop

00000000000053d6 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    53d6:	55                   	push   %rbp
    53d7:	48 89 e5             	mov    %rsp,%rbp
    53da:	48 83 ec 10          	sub    $0x10,%rsp
    53de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    53e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e6:	48 89 c7             	mov    %rax,%rdi
    53e9:	e8 e0 08 00 00       	call   5cce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    53ee:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    53f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    53f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53fd:	48 8b 00             	mov    (%rax),%rax
    5400:	48 89 ce             	mov    %rcx,%rsi
    5403:	48 89 c7             	mov    %rax,%rdi
    5406:	e8 d1 08 00 00       	call   5cdc <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    540b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    540f:	48 89 c7             	mov    %rax,%rdi
    5412:	e8 71 ff ff ff       	call   5388 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    5417:	90                   	nop
    5418:	c9                   	leave
    5419:	c3                   	ret

000000000000541a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    541a:	55                   	push   %rbp
    541b:	48 89 e5             	mov    %rsp,%rbp
    541e:	48 83 ec 10          	sub    $0x10,%rsp
    5422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    5426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    542a:	48 89 c7             	mov    %rax,%rdi
    542d:	e8 d4 08 00 00       	call   5d06 <_ZNSaIP13VkImageView_TEC1Ev>
    5432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5436:	48 89 c7             	mov    %rax,%rdi
    5439:	e8 e4 08 00 00       	call   5d22 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    543e:	90                   	nop
    543f:	c9                   	leave
    5440:	c3                   	ret
    5441:	90                   	nop

0000000000005442 <_ZNSaIP13VkImageView_TED1Ev>:
    5442:	55                   	push   %rbp
    5443:	48 89 e5             	mov    %rsp,%rbp
    5446:	48 83 ec 10          	sub    $0x10,%rsp
    544a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    544e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5452:	48 89 c7             	mov    %rax,%rdi
    5455:	e8 f6 08 00 00       	call   5d50 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
    545a:	90                   	nop
    545b:	c9                   	leave
    545c:	c3                   	ret
    545d:	90                   	nop

000000000000545e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    545e:	55                   	push   %rbp
    545f:	48 89 e5             	mov    %rsp,%rbp
    5462:	48 83 ec 10          	sub    $0x10,%rsp
    5466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    546a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    546e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5476:	48 8b 00             	mov    (%rax),%rax
    5479:	48 29 c2             	sub    %rax,%rdx
    547c:	48 89 d0             	mov    %rdx,%rax
    547f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5483:	48 89 c2             	mov    %rax,%rdx
    5486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548a:	48 8b 08             	mov    (%rax),%rcx
    548d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5491:	48 89 ce             	mov    %rcx,%rsi
    5494:	48 89 c7             	mov    %rax,%rdi
    5497:	e8 c0 08 00 00       	call   5d5c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    549c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54a0:	48 89 c7             	mov    %rax,%rdi
    54a3:	e8 aa f8 ff ff       	call   4d52 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
    54a8:	90                   	nop
    54a9:	c9                   	leave
    54aa:	c3                   	ret
    54ab:	90                   	nop

00000000000054ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    54ac:	55                   	push   %rbp
    54ad:	48 89 e5             	mov    %rsp,%rbp
    54b0:	48 83 ec 10          	sub    $0x10,%rsp
    54b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    54b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54bc:	48 89 c7             	mov    %rax,%rdi
    54bf:	e8 ce 08 00 00       	call   5d92 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    54c4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    54c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54cb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    54cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d3:	48 8b 00             	mov    (%rax),%rax
    54d6:	48 89 ce             	mov    %rcx,%rsi
    54d9:	48 89 c7             	mov    %rax,%rdi
    54dc:	e8 bf 08 00 00       	call   5da0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
    54e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54e5:	48 89 c7             	mov    %rax,%rdi
    54e8:	e8 71 ff ff ff       	call   545e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
    54ed:	90                   	nop
    54ee:	c9                   	leave
    54ef:	c3                   	ret

00000000000054f0 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    54f0:	55                   	push   %rbp
    54f1:	48 89 e5             	mov    %rsp,%rbp
    54f4:	48 83 ec 10          	sub    $0x10,%rsp
    54f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    54fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5500:	48 89 c7             	mov    %rax,%rdi
    5503:	e8 c2 08 00 00       	call   5dca <_ZNSaIP15VkFramebuffer_TEC1Ev>
    5508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    550c:	48 89 c7             	mov    %rax,%rdi
    550f:	e8 d2 08 00 00       	call   5de6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5514:	90                   	nop
    5515:	c9                   	leave
    5516:	c3                   	ret
    5517:	90                   	nop

0000000000005518 <_ZNSaIP15VkFramebuffer_TED1Ev>:
    5518:	55                   	push   %rbp
    5519:	48 89 e5             	mov    %rsp,%rbp
    551c:	48 83 ec 10          	sub    $0x10,%rsp
    5520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5528:	48 89 c7             	mov    %rax,%rdi
    552b:	e8 e4 08 00 00       	call   5e14 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
    5530:	90                   	nop
    5531:	c9                   	leave
    5532:	c3                   	ret
    5533:	90                   	nop

0000000000005534 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5534:	55                   	push   %rbp
    5535:	48 89 e5             	mov    %rsp,%rbp
    5538:	48 83 ec 10          	sub    $0x10,%rsp
    553c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5544:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    554c:	48 8b 00             	mov    (%rax),%rax
    554f:	48 29 c2             	sub    %rax,%rdx
    5552:	48 89 d0             	mov    %rdx,%rax
    5555:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5559:	48 89 c2             	mov    %rax,%rdx
    555c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5560:	48 8b 08             	mov    (%rax),%rcx
    5563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5567:	48 89 ce             	mov    %rcx,%rsi
    556a:	48 89 c7             	mov    %rax,%rdi
    556d:	e8 ae 08 00 00       	call   5e20 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    5572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5576:	48 89 c7             	mov    %rax,%rdi
    5579:	e8 28 f8 ff ff       	call   4da6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
    557e:	90                   	nop
    557f:	c9                   	leave
    5580:	c3                   	ret
    5581:	90                   	nop

0000000000005582 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5582:	55                   	push   %rbp
    5583:	48 89 e5             	mov    %rsp,%rbp
    5586:	48 83 ec 10          	sub    $0x10,%rsp
    558a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    558e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5592:	48 89 c7             	mov    %rax,%rdi
    5595:	e8 bc 08 00 00       	call   5e56 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    559a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    559d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    55a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a9:	48 8b 00             	mov    (%rax),%rax
    55ac:	48 89 ce             	mov    %rcx,%rsi
    55af:	48 89 c7             	mov    %rax,%rdi
    55b2:	e8 ad 08 00 00       	call   5e64 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
    55b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55bb:	48 89 c7             	mov    %rax,%rdi
    55be:	e8 71 ff ff ff       	call   5534 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
    55c3:	90                   	nop
    55c4:	c9                   	leave
    55c5:	c3                   	ret

00000000000055c6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    55c6:	55                   	push   %rbp
    55c7:	48 89 e5             	mov    %rsp,%rbp
    55ca:	48 83 ec 10          	sub    $0x10,%rsp
    55ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    55d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d6:	48 89 c7             	mov    %rax,%rdi
    55d9:	e8 b0 08 00 00       	call   5e8e <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    55de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55e2:	48 89 c7             	mov    %rax,%rdi
    55e5:	e8 c0 08 00 00       	call   5eaa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    55ea:	90                   	nop
    55eb:	c9                   	leave
    55ec:	c3                   	ret
    55ed:	90                   	nop

00000000000055ee <_ZNSaIP17VkCommandBuffer_TED1Ev>:
    55ee:	55                   	push   %rbp
    55ef:	48 89 e5             	mov    %rsp,%rbp
    55f2:	48 83 ec 10          	sub    $0x10,%rsp
    55f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fe:	48 89 c7             	mov    %rax,%rdi
    5601:	e8 d2 08 00 00       	call   5ed8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    5606:	90                   	nop
    5607:	c9                   	leave
    5608:	c3                   	ret
    5609:	90                   	nop

000000000000560a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    560a:	55                   	push   %rbp
    560b:	48 89 e5             	mov    %rsp,%rbp
    560e:	48 83 ec 10          	sub    $0x10,%rsp
    5612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    561a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    561e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5622:	48 8b 00             	mov    (%rax),%rax
    5625:	48 29 c2             	sub    %rax,%rdx
    5628:	48 89 d0             	mov    %rdx,%rax
    562b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    562f:	48 89 c2             	mov    %rax,%rdx
    5632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5636:	48 8b 08             	mov    (%rax),%rcx
    5639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    563d:	48 89 ce             	mov    %rcx,%rsi
    5640:	48 89 c7             	mov    %rax,%rdi
    5643:	e8 9c 08 00 00       	call   5ee4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    5648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    564c:	48 89 c7             	mov    %rax,%rdi
    564f:	e8 a6 f7 ff ff       	call   4dfa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5654:	90                   	nop
    5655:	c9                   	leave
    5656:	c3                   	ret
    5657:	90                   	nop

0000000000005658 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5658:	55                   	push   %rbp
    5659:	48 89 e5             	mov    %rsp,%rbp
    565c:	48 83 ec 10          	sub    $0x10,%rsp
    5660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5668:	48 89 c7             	mov    %rax,%rdi
    566b:	e8 aa 08 00 00       	call   5f1a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5670:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5673:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5677:	48 8b 48 08          	mov    0x8(%rax),%rcx
    567b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    567f:	48 8b 00             	mov    (%rax),%rax
    5682:	48 89 ce             	mov    %rcx,%rsi
    5685:	48 89 c7             	mov    %rax,%rdi
    5688:	e8 9b 08 00 00       	call   5f28 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    568d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5691:	48 89 c7             	mov    %rax,%rdi
    5694:	e8 71 ff ff ff       	call   560a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5699:	90                   	nop
    569a:	c9                   	leave
    569b:	c3                   	ret

000000000000569c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    569c:	55                   	push   %rbp
    569d:	48 89 e5             	mov    %rsp,%rbp
    56a0:	48 83 ec 10          	sub    $0x10,%rsp
    56a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    56a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56ac:	48 89 c7             	mov    %rax,%rdi
    56af:	e8 9e 08 00 00       	call   5f52 <_ZNSaIP13VkSemaphore_TEC1Ev>
    56b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56b8:	48 89 c7             	mov    %rax,%rdi
    56bb:	e8 ae 08 00 00       	call   5f6e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    56c0:	90                   	nop
    56c1:	c9                   	leave
    56c2:	c3                   	ret
    56c3:	90                   	nop

00000000000056c4 <_ZNSaIP13VkSemaphore_TED1Ev>:
    56c4:	55                   	push   %rbp
    56c5:	48 89 e5             	mov    %rsp,%rbp
    56c8:	48 83 ec 10          	sub    $0x10,%rsp
    56cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56d4:	48 89 c7             	mov    %rax,%rdi
    56d7:	e8 c0 08 00 00       	call   5f9c <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
    56dc:	90                   	nop
    56dd:	c9                   	leave
    56de:	c3                   	ret
    56df:	90                   	nop

00000000000056e0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    56e0:	55                   	push   %rbp
    56e1:	48 89 e5             	mov    %rsp,%rbp
    56e4:	48 83 ec 10          	sub    $0x10,%rsp
    56e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    56ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    56f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56f8:	48 8b 00             	mov    (%rax),%rax
    56fb:	48 29 c2             	sub    %rax,%rdx
    56fe:	48 89 d0             	mov    %rdx,%rax
    5701:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5705:	48 89 c2             	mov    %rax,%rdx
    5708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    570c:	48 8b 08             	mov    (%rax),%rcx
    570f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5713:	48 89 ce             	mov    %rcx,%rsi
    5716:	48 89 c7             	mov    %rax,%rdi
    5719:	e8 8a 08 00 00       	call   5fa8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    571e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5722:	48 89 c7             	mov    %rax,%rdi
    5725:	e8 24 f7 ff ff       	call   4e4e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
    572a:	90                   	nop
    572b:	c9                   	leave
    572c:	c3                   	ret
    572d:	90                   	nop

000000000000572e <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    572e:	55                   	push   %rbp
    572f:	48 89 e5             	mov    %rsp,%rbp
    5732:	48 83 ec 10          	sub    $0x10,%rsp
    5736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    573a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    573e:	48 89 c7             	mov    %rax,%rdi
    5741:	e8 98 08 00 00       	call   5fde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5746:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    574d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5755:	48 8b 00             	mov    (%rax),%rax
    5758:	48 89 ce             	mov    %rcx,%rsi
    575b:	48 89 c7             	mov    %rax,%rdi
    575e:	e8 89 08 00 00       	call   5fec <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
    5763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5767:	48 89 c7             	mov    %rax,%rdi
    576a:	e8 71 ff ff ff       	call   56e0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
    576f:	90                   	nop
    5770:	c9                   	leave
    5771:	c3                   	ret

0000000000005772 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    5772:	55                   	push   %rbp
    5773:	48 89 e5             	mov    %rsp,%rbp
    5776:	48 83 ec 10          	sub    $0x10,%rsp
    577a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    577e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5782:	48 89 c7             	mov    %rax,%rdi
    5785:	e8 8c 08 00 00       	call   6016 <_ZNSaIP9VkFence_TEC1Ev>
    578a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    578e:	48 89 c7             	mov    %rax,%rdi
    5791:	e8 9c 08 00 00       	call   6032 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5796:	90                   	nop
    5797:	c9                   	leave
    5798:	c3                   	ret
    5799:	90                   	nop

000000000000579a <_ZNSaIP9VkFence_TED1Ev>:
    579a:	55                   	push   %rbp
    579b:	48 89 e5             	mov    %rsp,%rbp
    579e:	48 83 ec 10          	sub    $0x10,%rsp
    57a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57aa:	48 89 c7             	mov    %rax,%rdi
    57ad:	e8 ae 08 00 00       	call   6060 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
    57b2:	90                   	nop
    57b3:	c9                   	leave
    57b4:	c3                   	ret
    57b5:	90                   	nop

00000000000057b6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    57b6:	55                   	push   %rbp
    57b7:	48 89 e5             	mov    %rsp,%rbp
    57ba:	48 83 ec 10          	sub    $0x10,%rsp
    57be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    57c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    57ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ce:	48 8b 00             	mov    (%rax),%rax
    57d1:	48 29 c2             	sub    %rax,%rdx
    57d4:	48 89 d0             	mov    %rdx,%rax
    57d7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    57db:	48 89 c2             	mov    %rax,%rdx
    57de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57e2:	48 8b 08             	mov    (%rax),%rcx
    57e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57e9:	48 89 ce             	mov    %rcx,%rsi
    57ec:	48 89 c7             	mov    %rax,%rdi
    57ef:	e8 78 08 00 00       	call   606c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    57f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57f8:	48 89 c7             	mov    %rax,%rdi
    57fb:	e8 a2 f6 ff ff       	call   4ea2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
    5800:	90                   	nop
    5801:	c9                   	leave
    5802:	c3                   	ret
    5803:	90                   	nop

0000000000005804 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5804:	55                   	push   %rbp
    5805:	48 89 e5             	mov    %rsp,%rbp
    5808:	48 83 ec 10          	sub    $0x10,%rsp
    580c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5814:	48 89 c7             	mov    %rax,%rdi
    5817:	e8 86 08 00 00       	call   60a2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
    581c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    581f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5823:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    582b:	48 8b 00             	mov    (%rax),%rax
    582e:	48 89 ce             	mov    %rcx,%rsi
    5831:	48 89 c7             	mov    %rax,%rdi
    5834:	e8 77 08 00 00       	call   60b0 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
    5839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    583d:	48 89 c7             	mov    %rax,%rdi
    5840:	e8 71 ff ff ff       	call   57b6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
    5845:	90                   	nop
    5846:	c9                   	leave
    5847:	c3                   	ret

0000000000005848 <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5848:	55                   	push   %rbp
    5849:	48 89 e5             	mov    %rsp,%rbp
    584c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5850:	90                   	nop
    5851:	5d                   	pop    %rbp
    5852:	c3                   	ret
    5853:	90                   	nop

0000000000005854 <_ZNSt15__new_allocatorIN4rtvc6VertexEED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5854:	55                   	push   %rbp
    5855:	48 89 e5             	mov    %rsp,%rbp
    5858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    585c:	90                   	nop
    585d:	5d                   	pop    %rbp
    585e:	c3                   	ret
    585f:	90                   	nop

0000000000005860 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5860:	55                   	push   %rbp
    5861:	48 89 e5             	mov    %rsp,%rbp
    5864:	48 83 ec 10          	sub    $0x10,%rsp
    5868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    586c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5870:	48 89 c7             	mov    %rax,%rdi
    5873:	e8 24 f9 ff ff       	call   519c <_ZNSaIN4rtvc6VertexEED1Ev>
    5878:	90                   	nop
    5879:	c9                   	leave
    587a:	c3                   	ret
    587b:	90                   	nop

000000000000587c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    587c:	55                   	push   %rbp
    587d:	48 89 e5             	mov    %rsp,%rbp
    5880:	48 83 ec 10          	sub    $0x10,%rsp
    5884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5888:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    588c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5890:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5894:	48 89 d6             	mov    %rdx,%rsi
    5897:	48 89 c7             	mov    %rax,%rdi
    589a:	e8 3b 08 00 00       	call   60da <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implC1ERKS2_>
    589f:	90                   	nop
    58a0:	c9                   	leave
    58a1:	c3                   	ret

00000000000058a2 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    58a2:	55                   	push   %rbp
    58a3:	48 89 e5             	mov    %rsp,%rbp
    58a6:	48 83 ec 10          	sub    $0x10,%rsp
    58aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    58ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58b2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    58b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ba:	48 8b 00             	mov    (%rax),%rax
    58bd:	48 29 c2             	sub    %rax,%rdx
    58c0:	48 c1 fa 02          	sar    $0x2,%rdx
    58c4:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    58cb:	cc cc cc 
    58ce:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    58d2:	48 89 c2             	mov    %rax,%rdx
    58d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58d9:	48 8b 08             	mov    (%rax),%rcx
    58dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58e0:	48 89 ce             	mov    %rcx,%rsi
    58e3:	48 89 c7             	mov    %rax,%rdi
    58e6:	e8 21 08 00 00       	call   610c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE13_M_deallocateEPS1_m>
      }
    58eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ef:	48 89 c7             	mov    %rax,%rdi
    58f2:	e8 69 ff ff ff       	call   5860 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implD1Ev>
    58f7:	90                   	nop
    58f8:	c9                   	leave
    58f9:	c3                   	ret

00000000000058fa <_ZNKSt16initializer_listIN4rtvc6VertexEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    58fa:	55                   	push   %rbp
    58fb:	48 89 e5             	mov    %rsp,%rbp
    58fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5906:	48 8b 00             	mov    (%rax),%rax
    5909:	5d                   	pop    %rbp
    590a:	c3                   	ret
    590b:	90                   	nop

000000000000590c <_ZNKSt16initializer_listIN4rtvc6VertexEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    590c:	55                   	push   %rbp
    590d:	48 89 e5             	mov    %rsp,%rbp
    5910:	53                   	push   %rbx
    5911:	48 83 ec 18          	sub    $0x18,%rsp
    5915:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    591d:	48 89 c7             	mov    %rax,%rdi
    5920:	e8 d5 ff ff ff       	call   58fa <_ZNKSt16initializer_listIN4rtvc6VertexEE5beginEv>
    5925:	48 89 c3             	mov    %rax,%rbx
    5928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    592c:	48 89 c7             	mov    %rax,%rdi
    592f:	e8 0e 08 00 00       	call   6142 <_ZNKSt16initializer_listIN4rtvc6VertexEE4sizeEv>
    5934:	48 89 c2             	mov    %rax,%rdx
    5937:	48 89 d0             	mov    %rdx,%rax
    593a:	48 c1 e0 02          	shl    $0x2,%rax
    593e:	48 01 d0             	add    %rdx,%rax
    5941:	48 c1 e0 02          	shl    $0x2,%rax
    5945:	48 01 d8             	add    %rbx,%rax
    5948:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    594c:	c9                   	leave
    594d:	c3                   	ret

000000000000594e <_ZSt8distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    594e:	55                   	push   %rbp
    594f:	48 89 e5             	mov    %rsp,%rbp
    5952:	48 83 ec 10          	sub    $0x10,%rsp
    5956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    595a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    595e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5962:	48 89 c7             	mov    %rax,%rdi
    5965:	e8 ea 07 00 00       	call   6154 <_ZSt19__iterator_categoryIPKN4rtvc6VertexEENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    596a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    596e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5972:	48 89 d6             	mov    %rdx,%rsi
    5975:	48 89 c7             	mov    %rax,%rdi
    5978:	e8 e2 07 00 00       	call   615f <_ZSt10__distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    597d:	c9                   	leave
    597e:	c3                   	ret
    597f:	90                   	nop

0000000000005980 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5980:	55                   	push   %rbp
    5981:	48 89 e5             	mov    %rsp,%rbp
    5984:	53                   	push   %rbx
    5985:	48 83 ec 38          	sub    $0x38,%rsp
    5989:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    598d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5991:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    5995:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5999:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    599d:	48 89 d6             	mov    %rdx,%rsi
    59a0:	48 89 c7             	mov    %rax,%rdi
    59a3:	e8 a6 ff ff ff       	call   594e <_ZSt8distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    59a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    59ac:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    59b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59b4:	48 89 c7             	mov    %rax,%rdi
    59b7:	e8 2e 08 00 00       	call   61ea <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>
    59bc:	48 89 c2             	mov    %rax,%rdx
    59bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59c3:	48 89 d6             	mov    %rdx,%rsi
    59c6:	48 89 c7             	mov    %rax,%rdi
    59c9:	e8 bc 07 00 00       	call   618a <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE17_S_check_init_lenEmRKS2_>
    59ce:	48 89 c6             	mov    %rax,%rsi
    59d1:	48 89 df             	mov    %rbx,%rdi
    59d4:	e8 1f 08 00 00       	call   61f8 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm>
    59d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    59dd:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    59e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    59e4:	48 8b 08             	mov    (%rax),%rcx
    59e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    59eb:	48 89 d0             	mov    %rdx,%rax
    59ee:	48 c1 e0 02          	shl    $0x2,%rax
    59f2:	48 01 d0             	add    %rdx,%rax
    59f5:	48 c1 e0 02          	shl    $0x2,%rax
    59f9:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    59fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a01:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    5a05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a09:	48 89 c7             	mov    %rax,%rdi
    5a0c:	e8 d9 07 00 00       	call   61ea <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>
    5a11:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5a14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a18:	48 8b 10             	mov    (%rax),%rdx
    5a1b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5a1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5a23:	48 89 c7             	mov    %rax,%rdi
    5a26:	e8 00 08 00 00       	call   622b <_ZSt22__uninitialized_copy_aIPKN4rtvc6VertexEPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    5a2b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5a2f:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5a33:	90                   	nop
    5a34:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5a38:	c9                   	leave
    5a39:	c3                   	ret

0000000000005a3a <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a3a:	55                   	push   %rbp
    5a3b:	48 89 e5             	mov    %rsp,%rbp
    5a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a42:	90                   	nop
    5a43:	5d                   	pop    %rbp
    5a44:	c3                   	ret
    5a45:	90                   	nop

0000000000005a46 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a46:	55                   	push   %rbp
    5a47:	48 89 e5             	mov    %rsp,%rbp
    5a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a4e:	90                   	nop
    5a4f:	5d                   	pop    %rbp
    5a50:	c3                   	ret
    5a51:	90                   	nop

0000000000005a52 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5a52:	55                   	push   %rbp
    5a53:	48 89 e5             	mov    %rsp,%rbp
    5a56:	48 83 ec 10          	sub    $0x10,%rsp
    5a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a62:	48 89 c7             	mov    %rax,%rdi
    5a65:	e8 f2 f7 ff ff       	call   525c <_ZNSaIPKcED1Ev>
    5a6a:	90                   	nop
    5a6b:	c9                   	leave
    5a6c:	c3                   	ret
    5a6d:	90                   	nop

0000000000005a6e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    5a6e:	55                   	push   %rbp
    5a6f:	48 89 e5             	mov    %rsp,%rbp
    5a72:	48 83 ec 10          	sub    $0x10,%rsp
    5a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    5a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a86:	48 89 d6             	mov    %rdx,%rsi
    5a89:	48 89 c7             	mov    %rax,%rdi
    5a8c:	e8 cb 07 00 00       	call   625c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    5a91:	90                   	nop
    5a92:	c9                   	leave
    5a93:	c3                   	ret

0000000000005a94 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5a94:	55                   	push   %rbp
    5a95:	48 89 e5             	mov    %rsp,%rbp
    5a98:	48 83 ec 10          	sub    $0x10,%rsp
    5a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aa4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aac:	48 8b 00             	mov    (%rax),%rax
    5aaf:	48 29 c2             	sub    %rax,%rdx
    5ab2:	48 89 d0             	mov    %rdx,%rax
    5ab5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5ab9:	48 89 c2             	mov    %rax,%rdx
    5abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ac0:	48 8b 08             	mov    (%rax),%rcx
    5ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ac7:	48 89 ce             	mov    %rcx,%rsi
    5aca:	48 89 c7             	mov    %rax,%rdi
    5acd:	e8 bc 07 00 00       	call   628e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    5ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad6:	48 89 c7             	mov    %rax,%rdi
    5ad9:	e8 74 ff ff ff       	call   5a52 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5ade:	90                   	nop
    5adf:	c9                   	leave
    5ae0:	c3                   	ret
    5ae1:	90                   	nop

0000000000005ae2 <_ZNKSt16initializer_listIPKcE5beginEv>:
      begin() const noexcept { return _M_array; }
    5ae2:	55                   	push   %rbp
    5ae3:	48 89 e5             	mov    %rsp,%rbp
    5ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aee:	48 8b 00             	mov    (%rax),%rax
    5af1:	5d                   	pop    %rbp
    5af2:	c3                   	ret
    5af3:	90                   	nop

0000000000005af4 <_ZNKSt16initializer_listIPKcE3endEv>:
      end() const noexcept { return begin() + size(); }
    5af4:	55                   	push   %rbp
    5af5:	48 89 e5             	mov    %rsp,%rbp
    5af8:	53                   	push   %rbx
    5af9:	48 83 ec 18          	sub    $0x18,%rsp
    5afd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b05:	48 89 c7             	mov    %rax,%rdi
    5b08:	e8 d5 ff ff ff       	call   5ae2 <_ZNKSt16initializer_listIPKcE5beginEv>
    5b0d:	48 89 c3             	mov    %rax,%rbx
    5b10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b14:	48 89 c7             	mov    %rax,%rdi
    5b17:	e8 a8 07 00 00       	call   62c4 <_ZNKSt16initializer_listIPKcE4sizeEv>
    5b1c:	48 c1 e0 03          	shl    $0x3,%rax
    5b20:	48 01 d8             	add    %rbx,%rax
    5b23:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b27:	c9                   	leave
    5b28:	c3                   	ret

0000000000005b29 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    5b29:	55                   	push   %rbp
    5b2a:	48 89 e5             	mov    %rsp,%rbp
    5b2d:	48 83 ec 10          	sub    $0x10,%rsp
    5b31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    5b39:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5b3d:	48 89 c7             	mov    %rax,%rdi
    5b40:	e8 91 07 00 00       	call   62d6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    5b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b4d:	48 89 d6             	mov    %rdx,%rsi
    5b50:	48 89 c7             	mov    %rax,%rdi
    5b53:	e8 89 07 00 00       	call   62e1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    5b58:	c9                   	leave
    5b59:	c3                   	ret

0000000000005b5a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5b5a:	55                   	push   %rbp
    5b5b:	48 89 e5             	mov    %rsp,%rbp
    5b5e:	53                   	push   %rbx
    5b5f:	48 83 ec 38          	sub    $0x38,%rsp
    5b63:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5b67:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5b6b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5b6f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5b73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b77:	48 89 d6             	mov    %rdx,%rsi
    5b7a:	48 89 c7             	mov    %rax,%rdi
    5b7d:	e8 a7 ff ff ff       	call   5b29 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    5b82:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5b86:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5b8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b8e:	48 89 c7             	mov    %rax,%rdi
    5b91:	e8 74 00 00 00       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5b96:	48 89 c2             	mov    %rax,%rdx
    5b99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b9d:	48 89 d6             	mov    %rdx,%rsi
    5ba0:	48 89 c7             	mov    %rax,%rdi
    5ba3:	e8 53 07 00 00       	call   62fb <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    5ba8:	48 89 c6             	mov    %rax,%rsi
    5bab:	48 89 df             	mov    %rbx,%rdi
    5bae:	e8 a9 07 00 00       	call   635c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    5bb3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5bb7:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5bba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bbe:	48 8b 00             	mov    (%rax),%rax
    5bc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bc5:	48 c1 e2 03          	shl    $0x3,%rdx
    5bc9:	48 01 c2             	add    %rax,%rdx
    5bcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bd0:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    5bd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bd8:	48 89 c7             	mov    %rax,%rdi
    5bdb:	e8 2a 00 00 00       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5be0:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5be7:	48 8b 10             	mov    (%rax),%rdx
    5bea:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5bee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5bf2:	48 89 c7             	mov    %rax,%rdi
    5bf5:	e8 95 07 00 00       	call   638f <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    5bfa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5bfe:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5c02:	90                   	nop
    5c03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c07:	c9                   	leave
    5c08:	c3                   	ret
    5c09:	90                   	nop

0000000000005c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5c0a:	55                   	push   %rbp
    5c0b:	48 89 e5             	mov    %rsp,%rbp
    5c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c16:	5d                   	pop    %rbp
    5c17:	c3                   	ret

0000000000005c18 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5c18:	55                   	push   %rbp
    5c19:	48 89 e5             	mov    %rsp,%rbp
    5c1c:	48 83 ec 20          	sub    $0x20,%rsp
    5c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5c2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c34:	48 89 d6             	mov    %rdx,%rsi
    5c37:	48 89 c7             	mov    %rax,%rdi
    5c3a:	e8 81 07 00 00       	call   63c0 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    5c3f:	90                   	nop
    5c40:	c9                   	leave
    5c41:	c3                   	ret

0000000000005c42 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5c42:	55                   	push   %rbp
    5c43:	48 89 e5             	mov    %rsp,%rbp
    5c46:	48 83 ec 10          	sub    $0x10,%rsp
    5c4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c52:	48 89 c7             	mov    %rax,%rdi
    5c55:	e8 8c 07 00 00       	call   63e6 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    5c5a:	90                   	nop
    5c5b:	c9                   	leave
    5c5c:	c3                   	ret
    5c5d:	90                   	nop

0000000000005c5e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5c5e:	55                   	push   %rbp
    5c5f:	48 89 e5             	mov    %rsp,%rbp
    5c62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c6a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c75:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5c7c:	00 
    5c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c81:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5c88:	00 
	{ }
    5c89:	90                   	nop
    5c8a:	5d                   	pop    %rbp
    5c8b:	c3                   	ret

0000000000005c8c <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    5c8c:	55                   	push   %rbp
    5c8d:	48 89 e5             	mov    %rsp,%rbp
    5c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c94:	90                   	nop
    5c95:	5d                   	pop    %rbp
    5c96:	c3                   	ret
    5c97:	90                   	nop

0000000000005c98 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5c98:	55                   	push   %rbp
    5c99:	48 89 e5             	mov    %rsp,%rbp
    5c9c:	48 83 ec 20          	sub    $0x20,%rsp
    5ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ca8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5cac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5cb1:	74 17                	je     5cca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5cbb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5cbf:	48 89 ce             	mov    %rcx,%rsi
    5cc2:	48 89 c7             	mov    %rax,%rdi
    5cc5:	e8 27 07 00 00       	call   63f1 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    5cca:	90                   	nop
    5ccb:	c9                   	leave
    5ccc:	c3                   	ret
    5ccd:	90                   	nop

0000000000005cce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5cce:	55                   	push   %rbp
    5ccf:	48 89 e5             	mov    %rsp,%rbp
    5cd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cda:	5d                   	pop    %rbp
    5cdb:	c3                   	ret

0000000000005cdc <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5cdc:	55                   	push   %rbp
    5cdd:	48 89 e5             	mov    %rsp,%rbp
    5ce0:	48 83 ec 20          	sub    $0x20,%rsp
    5ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ce8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5cf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5cf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cf8:	48 89 d6             	mov    %rdx,%rsi
    5cfb:	48 89 c7             	mov    %rax,%rdi
    5cfe:	e8 1c 07 00 00       	call   641f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    5d03:	90                   	nop
    5d04:	c9                   	leave
    5d05:	c3                   	ret

0000000000005d06 <_ZNSaIP13VkImageView_TEC1Ev>:
    5d06:	55                   	push   %rbp
    5d07:	48 89 e5             	mov    %rsp,%rbp
    5d0a:	48 83 ec 10          	sub    $0x10,%rsp
    5d0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d16:	48 89 c7             	mov    %rax,%rdi
    5d19:	e8 28 07 00 00       	call   6446 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
    5d1e:	90                   	nop
    5d1f:	c9                   	leave
    5d20:	c3                   	ret
    5d21:	90                   	nop

0000000000005d22 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5d22:	55                   	push   %rbp
    5d23:	48 89 e5             	mov    %rsp,%rbp
    5d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d2e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5d35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d39:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5d40:	00 
    5d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d45:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5d4c:	00 
	{ }
    5d4d:	90                   	nop
    5d4e:	5d                   	pop    %rbp
    5d4f:	c3                   	ret

0000000000005d50 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
    5d50:	55                   	push   %rbp
    5d51:	48 89 e5             	mov    %rsp,%rbp
    5d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d58:	90                   	nop
    5d59:	5d                   	pop    %rbp
    5d5a:	c3                   	ret
    5d5b:	90                   	nop

0000000000005d5c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5d5c:	55                   	push   %rbp
    5d5d:	48 89 e5             	mov    %rsp,%rbp
    5d60:	48 83 ec 20          	sub    $0x20,%rsp
    5d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5d70:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5d75:	74 17                	je     5d8e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5d77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d7f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d83:	48 89 ce             	mov    %rcx,%rsi
    5d86:	48 89 c7             	mov    %rax,%rdi
    5d89:	e8 c3 06 00 00       	call   6451 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
    5d8e:	90                   	nop
    5d8f:	c9                   	leave
    5d90:	c3                   	ret
    5d91:	90                   	nop

0000000000005d92 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5d92:	55                   	push   %rbp
    5d93:	48 89 e5             	mov    %rsp,%rbp
    5d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d9e:	5d                   	pop    %rbp
    5d9f:	c3                   	ret

0000000000005da0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5da0:	55                   	push   %rbp
    5da1:	48 89 e5             	mov    %rsp,%rbp
    5da4:	48 83 ec 20          	sub    $0x20,%rsp
    5da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5db0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5db4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dbc:	48 89 d6             	mov    %rdx,%rsi
    5dbf:	48 89 c7             	mov    %rax,%rdi
    5dc2:	e8 b8 06 00 00       	call   647f <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
    5dc7:	90                   	nop
    5dc8:	c9                   	leave
    5dc9:	c3                   	ret

0000000000005dca <_ZNSaIP15VkFramebuffer_TEC1Ev>:
    5dca:	55                   	push   %rbp
    5dcb:	48 89 e5             	mov    %rsp,%rbp
    5dce:	48 83 ec 10          	sub    $0x10,%rsp
    5dd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dda:	48 89 c7             	mov    %rax,%rdi
    5ddd:	e8 c4 06 00 00       	call   64a6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
    5de2:	90                   	nop
    5de3:	c9                   	leave
    5de4:	c3                   	ret
    5de5:	90                   	nop

0000000000005de6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5de6:	55                   	push   %rbp
    5de7:	48 89 e5             	mov    %rsp,%rbp
    5dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5df2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dfd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5e04:	00 
    5e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e09:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5e10:	00 
	{ }
    5e11:	90                   	nop
    5e12:	5d                   	pop    %rbp
    5e13:	c3                   	ret

0000000000005e14 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
    5e14:	55                   	push   %rbp
    5e15:	48 89 e5             	mov    %rsp,%rbp
    5e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e1c:	90                   	nop
    5e1d:	5d                   	pop    %rbp
    5e1e:	c3                   	ret
    5e1f:	90                   	nop

0000000000005e20 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5e20:	55                   	push   %rbp
    5e21:	48 89 e5             	mov    %rsp,%rbp
    5e24:	48 83 ec 20          	sub    $0x20,%rsp
    5e28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e30:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5e34:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5e39:	74 17                	je     5e52 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e3f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e43:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e47:	48 89 ce             	mov    %rcx,%rsi
    5e4a:	48 89 c7             	mov    %rax,%rdi
    5e4d:	e8 5f 06 00 00       	call   64b1 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
    5e52:	90                   	nop
    5e53:	c9                   	leave
    5e54:	c3                   	ret
    5e55:	90                   	nop

0000000000005e56 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5e56:	55                   	push   %rbp
    5e57:	48 89 e5             	mov    %rsp,%rbp
    5e5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e62:	5d                   	pop    %rbp
    5e63:	c3                   	ret

0000000000005e64 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5e64:	55                   	push   %rbp
    5e65:	48 89 e5             	mov    %rsp,%rbp
    5e68:	48 83 ec 20          	sub    $0x20,%rsp
    5e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5e78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e80:	48 89 d6             	mov    %rdx,%rsi
    5e83:	48 89 c7             	mov    %rax,%rdi
    5e86:	e8 54 06 00 00       	call   64df <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
    5e8b:	90                   	nop
    5e8c:	c9                   	leave
    5e8d:	c3                   	ret

0000000000005e8e <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
    5e8e:	55                   	push   %rbp
    5e8f:	48 89 e5             	mov    %rsp,%rbp
    5e92:	48 83 ec 10          	sub    $0x10,%rsp
    5e96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e9e:	48 89 c7             	mov    %rax,%rdi
    5ea1:	e8 60 06 00 00       	call   6506 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    5ea6:	90                   	nop
    5ea7:	c9                   	leave
    5ea8:	c3                   	ret
    5ea9:	90                   	nop

0000000000005eaa <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5eaa:	55                   	push   %rbp
    5eab:	48 89 e5             	mov    %rsp,%rbp
    5eae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5ec8:	00 
    5ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ecd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5ed4:	00 
	{ }
    5ed5:	90                   	nop
    5ed6:	5d                   	pop    %rbp
    5ed7:	c3                   	ret

0000000000005ed8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
    5ed8:	55                   	push   %rbp
    5ed9:	48 89 e5             	mov    %rsp,%rbp
    5edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ee0:	90                   	nop
    5ee1:	5d                   	pop    %rbp
    5ee2:	c3                   	ret
    5ee3:	90                   	nop

0000000000005ee4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5ee4:	55                   	push   %rbp
    5ee5:	48 89 e5             	mov    %rsp,%rbp
    5ee8:	48 83 ec 20          	sub    $0x20,%rsp
    5eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ef0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ef4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5ef8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5efd:	74 17                	je     5f16 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f03:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f07:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f0b:	48 89 ce             	mov    %rcx,%rsi
    5f0e:	48 89 c7             	mov    %rax,%rdi
    5f11:	e8 fb 05 00 00       	call   6511 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5f16:	90                   	nop
    5f17:	c9                   	leave
    5f18:	c3                   	ret
    5f19:	90                   	nop

0000000000005f1a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5f1a:	55                   	push   %rbp
    5f1b:	48 89 e5             	mov    %rsp,%rbp
    5f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f26:	5d                   	pop    %rbp
    5f27:	c3                   	ret

0000000000005f28 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5f28:	55                   	push   %rbp
    5f29:	48 89 e5             	mov    %rsp,%rbp
    5f2c:	48 83 ec 20          	sub    $0x20,%rsp
    5f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5f3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f44:	48 89 d6             	mov    %rdx,%rsi
    5f47:	48 89 c7             	mov    %rax,%rdi
    5f4a:	e8 f0 05 00 00       	call   653f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    5f4f:	90                   	nop
    5f50:	c9                   	leave
    5f51:	c3                   	ret

0000000000005f52 <_ZNSaIP13VkSemaphore_TEC1Ev>:
    5f52:	55                   	push   %rbp
    5f53:	48 89 e5             	mov    %rsp,%rbp
    5f56:	48 83 ec 10          	sub    $0x10,%rsp
    5f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f62:	48 89 c7             	mov    %rax,%rdi
    5f65:	e8 fc 05 00 00       	call   6566 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
    5f6a:	90                   	nop
    5f6b:	c9                   	leave
    5f6c:	c3                   	ret
    5f6d:	90                   	nop

0000000000005f6e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5f6e:	55                   	push   %rbp
    5f6f:	48 89 e5             	mov    %rsp,%rbp
    5f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5f8c:	00 
    5f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f91:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5f98:	00 
	{ }
    5f99:	90                   	nop
    5f9a:	5d                   	pop    %rbp
    5f9b:	c3                   	ret

0000000000005f9c <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
    5f9c:	55                   	push   %rbp
    5f9d:	48 89 e5             	mov    %rsp,%rbp
    5fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fa4:	90                   	nop
    5fa5:	5d                   	pop    %rbp
    5fa6:	c3                   	ret
    5fa7:	90                   	nop

0000000000005fa8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5fa8:	55                   	push   %rbp
    5fa9:	48 89 e5             	mov    %rsp,%rbp
    5fac:	48 83 ec 20          	sub    $0x20,%rsp
    5fb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5fb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5fbc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5fc1:	74 17                	je     5fda <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fc7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5fcb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5fcf:	48 89 ce             	mov    %rcx,%rsi
    5fd2:	48 89 c7             	mov    %rax,%rdi
    5fd5:	e8 97 05 00 00       	call   6571 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
    5fda:	90                   	nop
    5fdb:	c9                   	leave
    5fdc:	c3                   	ret
    5fdd:	90                   	nop

0000000000005fde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5fde:	55                   	push   %rbp
    5fdf:	48 89 e5             	mov    %rsp,%rbp
    5fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fea:	5d                   	pop    %rbp
    5feb:	c3                   	ret

0000000000005fec <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5fec:	55                   	push   %rbp
    5fed:	48 89 e5             	mov    %rsp,%rbp
    5ff0:	48 83 ec 20          	sub    $0x20,%rsp
    5ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ff8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ffc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6000:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6008:	48 89 d6             	mov    %rdx,%rsi
    600b:	48 89 c7             	mov    %rax,%rdi
    600e:	e8 8c 05 00 00       	call   659f <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
    6013:	90                   	nop
    6014:	c9                   	leave
    6015:	c3                   	ret

0000000000006016 <_ZNSaIP9VkFence_TEC1Ev>:
    6016:	55                   	push   %rbp
    6017:	48 89 e5             	mov    %rsp,%rbp
    601a:	48 83 ec 10          	sub    $0x10,%rsp
    601e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6026:	48 89 c7             	mov    %rax,%rdi
    6029:	e8 98 05 00 00       	call   65c6 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>
    602e:	90                   	nop
    602f:	c9                   	leave
    6030:	c3                   	ret
    6031:	90                   	nop

0000000000006032 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6032:	55                   	push   %rbp
    6033:	48 89 e5             	mov    %rsp,%rbp
    6036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    603a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    603e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6049:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6050:	00 
    6051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6055:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    605c:	00 
	{ }
    605d:	90                   	nop
    605e:	5d                   	pop    %rbp
    605f:	c3                   	ret

0000000000006060 <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
    6060:	55                   	push   %rbp
    6061:	48 89 e5             	mov    %rsp,%rbp
    6064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6068:	90                   	nop
    6069:	5d                   	pop    %rbp
    606a:	c3                   	ret
    606b:	90                   	nop

000000000000606c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    606c:	55                   	push   %rbp
    606d:	48 89 e5             	mov    %rsp,%rbp
    6070:	48 83 ec 20          	sub    $0x20,%rsp
    6074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6078:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    607c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6080:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6085:	74 17                	je     609e <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    608b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    608f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6093:	48 89 ce             	mov    %rcx,%rsi
    6096:	48 89 c7             	mov    %rax,%rdi
    6099:	e8 33 05 00 00       	call   65d1 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
    609e:	90                   	nop
    609f:	c9                   	leave
    60a0:	c3                   	ret
    60a1:	90                   	nop

00000000000060a2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    60a2:	55                   	push   %rbp
    60a3:	48 89 e5             	mov    %rsp,%rbp
    60a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    60aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ae:	5d                   	pop    %rbp
    60af:	c3                   	ret

00000000000060b0 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    60b0:	55                   	push   %rbp
    60b1:	48 89 e5             	mov    %rsp,%rbp
    60b4:	48 83 ec 20          	sub    $0x20,%rsp
    60b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    60c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60cc:	48 89 d6             	mov    %rdx,%rsi
    60cf:	48 89 c7             	mov    %rax,%rdi
    60d2:	e8 28 05 00 00       	call   65ff <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
    60d7:	90                   	nop
    60d8:	c9                   	leave
    60d9:	c3                   	ret

00000000000060da <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    60da:	55                   	push   %rbp
    60db:	48 89 e5             	mov    %rsp,%rbp
    60de:	48 83 ec 10          	sub    $0x10,%rsp
    60e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    60ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60f2:	48 89 d6             	mov    %rdx,%rsi
    60f5:	48 89 c7             	mov    %rax,%rdi
    60f8:	e8 53 05 00 00       	call   6650 <_ZNSaIN4rtvc6VertexEEC1ERKS1_>
    60fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6101:	48 89 c7             	mov    %rax,%rdi
    6104:	e8 6d 05 00 00       	call   6676 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6109:	90                   	nop
    610a:	c9                   	leave
    610b:	c3                   	ret

000000000000610c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    610c:	55                   	push   %rbp
    610d:	48 89 e5             	mov    %rsp,%rbp
    6110:	48 83 ec 20          	sub    $0x20,%rsp
    6114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    611c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6120:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6125:	74 17                	je     613e <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    612b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    612f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6133:	48 89 ce             	mov    %rcx,%rsi
    6136:	48 89 c7             	mov    %rax,%rdi
    6139:	e8 66 05 00 00       	call   66a4 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE10deallocateERS2_PS1_m>
      }
    613e:	90                   	nop
    613f:	c9                   	leave
    6140:	c3                   	ret
    6141:	90                   	nop

0000000000006142 <_ZNKSt16initializer_listIN4rtvc6VertexEE4sizeEv>:
      size() const noexcept { return _M_len; }
    6142:	55                   	push   %rbp
    6143:	48 89 e5             	mov    %rsp,%rbp
    6146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    614a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614e:	48 8b 40 08          	mov    0x8(%rax),%rax
    6152:	5d                   	pop    %rbp
    6153:	c3                   	ret

0000000000006154 <_ZSt19__iterator_categoryIPKN4rtvc6VertexEENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    6154:	55                   	push   %rbp
    6155:	48 89 e5             	mov    %rsp,%rbp
    6158:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    615c:	90                   	nop
    615d:	5d                   	pop    %rbp
    615e:	c3                   	ret

000000000000615f <_ZSt10__distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    615f:	55                   	push   %rbp
    6160:	48 89 e5             	mov    %rsp,%rbp
    6163:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6167:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    616b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    616f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6173:	48 c1 f8 02          	sar    $0x2,%rax
    6177:	48 89 c2             	mov    %rax,%rdx
    617a:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    6181:	cc cc cc 
    6184:	48 0f af c2          	imul   %rdx,%rax
    }
    6188:	5d                   	pop    %rbp
    6189:	c3                   	ret

000000000000618a <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    618a:	55                   	push   %rbp
    618b:	48 89 e5             	mov    %rsp,%rbp
    618e:	53                   	push   %rbx
    618f:	48 83 ec 28          	sub    $0x28,%rsp
    6193:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6197:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    619b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    619f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    61a3:	48 89 d6             	mov    %rdx,%rsi
    61a6:	48 89 c7             	mov    %rax,%rdi
    61a9:	e8 a2 04 00 00       	call   6650 <_ZNSaIN4rtvc6VertexEEC1ERKS1_>
    61ae:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    61b2:	48 89 c7             	mov    %rax,%rdi
    61b5:	e8 18 05 00 00       	call   66d2 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE11_S_max_sizeERKS2_>
    61ba:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    61be:	0f 92 c3             	setb   %bl
    61c1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    61c5:	48 89 c7             	mov    %rax,%rdi
    61c8:	e8 cf ef ff ff       	call   519c <_ZNSaIN4rtvc6VertexEED1Ev>
    61cd:	84 db                	test   %bl,%bl
    61cf:	74 0f                	je     61e0 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    61d1:	48 8d 05 50 34 01 00 	lea    0x13450(%rip),%rax        # 19628 <_ZN6__pstl9execution2v1L5unseqE+0x45>
    61d8:	48 89 c7             	mov    %rax,%rdi
    61db:	e8 d0 df ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    61e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    61e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61e8:	c9                   	leave
    61e9:	c3                   	ret

00000000000061ea <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    61ea:	55                   	push   %rbp
    61eb:	48 89 e5             	mov    %rsp,%rbp
    61ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    61f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f6:	5d                   	pop    %rbp
    61f7:	c3                   	ret

00000000000061f8 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    61f8:	55                   	push   %rbp
    61f9:	48 89 e5             	mov    %rsp,%rbp
    61fc:	48 83 ec 10          	sub    $0x10,%rsp
    6200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6204:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6208:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    620d:	74 15                	je     6224 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm+0x2c>
    620f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6213:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6217:	48 89 d6             	mov    %rdx,%rsi
    621a:	48 89 c7             	mov    %rax,%rdi
    621d:	e8 f2 04 00 00       	call   6714 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8allocateERS2_m>
    6222:	eb 05                	jmp    6229 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm+0x31>
    6224:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6229:	c9                   	leave
    622a:	c3                   	ret

000000000000622b <_ZSt22__uninitialized_copy_aIPKN4rtvc6VertexEPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    622b:	55                   	push   %rbp
    622c:	48 89 e5             	mov    %rsp,%rbp
    622f:	48 83 ec 20          	sub    $0x20,%rsp
    6233:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6237:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    623b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    623f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    6243:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6247:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    624b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    624f:	48 89 ce             	mov    %rcx,%rsi
    6252:	48 89 c7             	mov    %rax,%rdi
    6255:	e8 e4 04 00 00       	call   673e <_ZSt18uninitialized_copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>
    }
    625a:	c9                   	leave
    625b:	c3                   	ret

000000000000625c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    625c:	55                   	push   %rbp
    625d:	48 89 e5             	mov    %rsp,%rbp
    6260:	48 83 ec 10          	sub    $0x10,%rsp
    6264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    626c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6274:	48 89 d6             	mov    %rdx,%rsi
    6277:	48 89 c7             	mov    %rax,%rdi
    627a:	e8 f5 04 00 00       	call   6774 <_ZNSaIPKcEC1ERKS1_>
    627f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6283:	48 89 c7             	mov    %rax,%rdi
    6286:	e8 0f 05 00 00       	call   679a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    628b:	90                   	nop
    628c:	c9                   	leave
    628d:	c3                   	ret

000000000000628e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    628e:	55                   	push   %rbp
    628f:	48 89 e5             	mov    %rsp,%rbp
    6292:	48 83 ec 20          	sub    $0x20,%rsp
    6296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    629a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    629e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    62a2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    62a7:	74 17                	je     62c0 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    62a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    62b5:	48 89 ce             	mov    %rcx,%rsi
    62b8:	48 89 c7             	mov    %rax,%rdi
    62bb:	e8 08 05 00 00       	call   67c8 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    62c0:	90                   	nop
    62c1:	c9                   	leave
    62c2:	c3                   	ret
    62c3:	90                   	nop

00000000000062c4 <_ZNKSt16initializer_listIPKcE4sizeEv>:
    62c4:	55                   	push   %rbp
    62c5:	48 89 e5             	mov    %rsp,%rbp
    62c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d0:	48 8b 40 08          	mov    0x8(%rax),%rax
    62d4:	5d                   	pop    %rbp
    62d5:	c3                   	ret

00000000000062d6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    62d6:	55                   	push   %rbp
    62d7:	48 89 e5             	mov    %rsp,%rbp
    62da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    62de:	90                   	nop
    62df:	5d                   	pop    %rbp
    62e0:	c3                   	ret

00000000000062e1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    62e1:	55                   	push   %rbp
    62e2:	48 89 e5             	mov    %rsp,%rbp
    62e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    62ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62f1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    62f5:	48 c1 f8 03          	sar    $0x3,%rax
    }
    62f9:	5d                   	pop    %rbp
    62fa:	c3                   	ret

00000000000062fb <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    62fb:	55                   	push   %rbp
    62fc:	48 89 e5             	mov    %rsp,%rbp
    62ff:	53                   	push   %rbx
    6300:	48 83 ec 28          	sub    $0x28,%rsp
    6304:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6308:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    630c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6310:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6314:	48 89 d6             	mov    %rdx,%rsi
    6317:	48 89 c7             	mov    %rax,%rdi
    631a:	e8 55 04 00 00       	call   6774 <_ZNSaIPKcEC1ERKS1_>
    631f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6323:	48 89 c7             	mov    %rax,%rdi
    6326:	e8 cb 04 00 00       	call   67f6 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    632b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    632f:	0f 92 c3             	setb   %bl
    6332:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6336:	48 89 c7             	mov    %rax,%rdi
    6339:	e8 1e ef ff ff       	call   525c <_ZNSaIPKcED1Ev>
    633e:	84 db                	test   %bl,%bl
    6340:	74 0f                	je     6351 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6342:	48 8d 05 df 32 01 00 	lea    0x132df(%rip),%rax        # 19628 <_ZN6__pstl9execution2v1L5unseqE+0x45>
    6349:	48 89 c7             	mov    %rax,%rdi
    634c:	e8 5f de ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6351:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6355:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6359:	c9                   	leave
    635a:	c3                   	ret
    635b:	90                   	nop

000000000000635c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    635c:	55                   	push   %rbp
    635d:	48 89 e5             	mov    %rsp,%rbp
    6360:	48 83 ec 10          	sub    $0x10,%rsp
    6364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6368:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    636c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6371:	74 15                	je     6388 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    6373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6377:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    637b:	48 89 d6             	mov    %rdx,%rsi
    637e:	48 89 c7             	mov    %rax,%rdi
    6381:	e8 b2 04 00 00       	call   6838 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    6386:	eb 05                	jmp    638d <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    6388:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    638d:	c9                   	leave
    638e:	c3                   	ret

000000000000638f <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    638f:	55                   	push   %rbp
    6390:	48 89 e5             	mov    %rsp,%rbp
    6393:	48 83 ec 20          	sub    $0x20,%rsp
    6397:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    639b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    639f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    63a3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    63a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    63af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b3:	48 89 ce             	mov    %rcx,%rsi
    63b6:	48 89 c7             	mov    %rax,%rdi
    63b9:	e8 a4 04 00 00       	call   6862 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    63be:	c9                   	leave
    63bf:	c3                   	ret

00000000000063c0 <_ZSt8_DestroyIPPKcEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    63c0:	55                   	push   %rbp
    63c1:	48 89 e5             	mov    %rsp,%rbp
    63c4:	48 83 ec 10          	sub    $0x10,%rsp
    63c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    63d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63d8:	48 89 d6             	mov    %rdx,%rsi
    63db:	48 89 c7             	mov    %rax,%rdi
    63de:	e8 b4 04 00 00       	call   6897 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    63e3:	90                   	nop
    63e4:	c9                   	leave
    63e5:	c3                   	ret

00000000000063e6 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    63e6:	55                   	push   %rbp
    63e7:	48 89 e5             	mov    %rsp,%rbp
    63ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63ee:	90                   	nop
    63ef:	5d                   	pop    %rbp
    63f0:	c3                   	ret

00000000000063f1 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    63f1:	55                   	push   %rbp
    63f2:	48 89 e5             	mov    %rsp,%rbp
    63f5:	48 83 ec 20          	sub    $0x20,%rsp
    63f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6401:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6405:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6409:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    640d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6411:	48 89 ce             	mov    %rcx,%rsi
    6414:	48 89 c7             	mov    %rax,%rdi
    6417:	e8 8a 04 00 00       	call   68a6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    641c:	90                   	nop
    641d:	c9                   	leave
    641e:	c3                   	ret

000000000000641f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    641f:	55                   	push   %rbp
    6420:	48 89 e5             	mov    %rsp,%rbp
    6423:	48 83 ec 10          	sub    $0x10,%rsp
    6427:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    642b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    642f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6437:	48 89 d6             	mov    %rdx,%rsi
    643a:	48 89 c7             	mov    %rax,%rdi
    643d:	e8 95 04 00 00       	call   68d7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    6442:	90                   	nop
    6443:	c9                   	leave
    6444:	c3                   	ret
    6445:	90                   	nop

0000000000006446 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
    6446:	55                   	push   %rbp
    6447:	48 89 e5             	mov    %rsp,%rbp
    644a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    644e:	90                   	nop
    644f:	5d                   	pop    %rbp
    6450:	c3                   	ret

0000000000006451 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6451:	55                   	push   %rbp
    6452:	48 89 e5             	mov    %rsp,%rbp
    6455:	48 83 ec 20          	sub    $0x20,%rsp
    6459:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    645d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6461:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6465:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6469:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    646d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6471:	48 89 ce             	mov    %rcx,%rsi
    6474:	48 89 c7             	mov    %rax,%rdi
    6477:	e8 6a 04 00 00       	call   68e6 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
    647c:	90                   	nop
    647d:	c9                   	leave
    647e:	c3                   	ret

000000000000647f <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    647f:	55                   	push   %rbp
    6480:	48 89 e5             	mov    %rsp,%rbp
    6483:	48 83 ec 10          	sub    $0x10,%rsp
    6487:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    648b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    648f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6497:	48 89 d6             	mov    %rdx,%rsi
    649a:	48 89 c7             	mov    %rax,%rdi
    649d:	e8 75 04 00 00       	call   6917 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
    64a2:	90                   	nop
    64a3:	c9                   	leave
    64a4:	c3                   	ret
    64a5:	90                   	nop

00000000000064a6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
    64a6:	55                   	push   %rbp
    64a7:	48 89 e5             	mov    %rsp,%rbp
    64aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ae:	90                   	nop
    64af:	5d                   	pop    %rbp
    64b0:	c3                   	ret

00000000000064b1 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    64b1:	55                   	push   %rbp
    64b2:	48 89 e5             	mov    %rsp,%rbp
    64b5:	48 83 ec 20          	sub    $0x20,%rsp
    64b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    64c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    64c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    64cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d1:	48 89 ce             	mov    %rcx,%rsi
    64d4:	48 89 c7             	mov    %rax,%rdi
    64d7:	e8 4a 04 00 00       	call   6926 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
    64dc:	90                   	nop
    64dd:	c9                   	leave
    64de:	c3                   	ret

00000000000064df <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    64df:	55                   	push   %rbp
    64e0:	48 89 e5             	mov    %rsp,%rbp
    64e3:	48 83 ec 10          	sub    $0x10,%rsp
    64e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    64ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f7:	48 89 d6             	mov    %rdx,%rsi
    64fa:	48 89 c7             	mov    %rax,%rdi
    64fd:	e8 55 04 00 00       	call   6957 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
    6502:	90                   	nop
    6503:	c9                   	leave
    6504:	c3                   	ret
    6505:	90                   	nop

0000000000006506 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
    6506:	55                   	push   %rbp
    6507:	48 89 e5             	mov    %rsp,%rbp
    650a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    650e:	90                   	nop
    650f:	5d                   	pop    %rbp
    6510:	c3                   	ret

0000000000006511 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6511:	55                   	push   %rbp
    6512:	48 89 e5             	mov    %rsp,%rbp
    6515:	48 83 ec 20          	sub    $0x20,%rsp
    6519:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    651d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6521:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6525:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6529:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    652d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6531:	48 89 ce             	mov    %rcx,%rsi
    6534:	48 89 c7             	mov    %rax,%rdi
    6537:	e8 2a 04 00 00       	call   6966 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    653c:	90                   	nop
    653d:	c9                   	leave
    653e:	c3                   	ret

000000000000653f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    653f:	55                   	push   %rbp
    6540:	48 89 e5             	mov    %rsp,%rbp
    6543:	48 83 ec 10          	sub    $0x10,%rsp
    6547:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    654b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    654f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6557:	48 89 d6             	mov    %rdx,%rsi
    655a:	48 89 c7             	mov    %rax,%rdi
    655d:	e8 35 04 00 00       	call   6997 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    6562:	90                   	nop
    6563:	c9                   	leave
    6564:	c3                   	ret
    6565:	90                   	nop

0000000000006566 <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
    6566:	55                   	push   %rbp
    6567:	48 89 e5             	mov    %rsp,%rbp
    656a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    656e:	90                   	nop
    656f:	5d                   	pop    %rbp
    6570:	c3                   	ret

0000000000006571 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6571:	55                   	push   %rbp
    6572:	48 89 e5             	mov    %rsp,%rbp
    6575:	48 83 ec 20          	sub    $0x20,%rsp
    6579:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    657d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6581:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6585:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6589:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    658d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6591:	48 89 ce             	mov    %rcx,%rsi
    6594:	48 89 c7             	mov    %rax,%rdi
    6597:	e8 0a 04 00 00       	call   69a6 <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
    659c:	90                   	nop
    659d:	c9                   	leave
    659e:	c3                   	ret

000000000000659f <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    659f:	55                   	push   %rbp
    65a0:	48 89 e5             	mov    %rsp,%rbp
    65a3:	48 83 ec 10          	sub    $0x10,%rsp
    65a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    65af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b7:	48 89 d6             	mov    %rdx,%rsi
    65ba:	48 89 c7             	mov    %rax,%rdi
    65bd:	e8 15 04 00 00       	call   69d7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
    65c2:	90                   	nop
    65c3:	c9                   	leave
    65c4:	c3                   	ret
    65c5:	90                   	nop

00000000000065c6 <_ZNSt15__new_allocatorIP9VkFence_TEC1Ev>:
    65c6:	55                   	push   %rbp
    65c7:	48 89 e5             	mov    %rsp,%rbp
    65ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65ce:	90                   	nop
    65cf:	5d                   	pop    %rbp
    65d0:	c3                   	ret

00000000000065d1 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    65d1:	55                   	push   %rbp
    65d2:	48 89 e5             	mov    %rsp,%rbp
    65d5:	48 83 ec 20          	sub    $0x20,%rsp
    65d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    65e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    65ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65f1:	48 89 ce             	mov    %rcx,%rsi
    65f4:	48 89 c7             	mov    %rax,%rdi
    65f7:	e8 ea 03 00 00       	call   69e6 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
    65fc:	90                   	nop
    65fd:	c9                   	leave
    65fe:	c3                   	ret

00000000000065ff <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    65ff:	55                   	push   %rbp
    6600:	48 89 e5             	mov    %rsp,%rbp
    6603:	48 83 ec 10          	sub    $0x10,%rsp
    6607:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    660b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    660f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6617:	48 89 d6             	mov    %rdx,%rsi
    661a:	48 89 c7             	mov    %rax,%rdi
    661d:	e8 f5 03 00 00       	call   6a17 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
    6622:	90                   	nop
    6623:	c9                   	leave
    6624:	c3                   	ret

0000000000006625 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    6625:	55                   	push   %rbp
    6626:	48 89 e5             	mov    %rsp,%rbp
    6629:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    662d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    6631:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6635:	48 8b 10             	mov    (%rax),%rdx
    6638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    663c:	48 8b 00             	mov    (%rax),%rax
    663f:	48 39 c2             	cmp    %rax,%rdx
    6642:	73 06                	jae    664a <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    6644:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6648:	eb 04                	jmp    664e <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    664a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    664e:	5d                   	pop    %rbp
    664f:	c3                   	ret

0000000000006650 <_ZNSaIN4rtvc6VertexEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6650:	55                   	push   %rbp
    6651:	48 89 e5             	mov    %rsp,%rbp
    6654:	48 83 ec 10          	sub    $0x10,%rsp
    6658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    665c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6660:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6668:	48 89 d6             	mov    %rdx,%rsi
    666b:	48 89 c7             	mov    %rax,%rdi
    666e:	e8 b3 03 00 00       	call   6a26 <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1ERKS2_>
    6673:	90                   	nop
    6674:	c9                   	leave
    6675:	c3                   	ret

0000000000006676 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6676:	55                   	push   %rbp
    6677:	48 89 e5             	mov    %rsp,%rbp
    667a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    667e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6682:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6689:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    668d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6694:	00 
    6695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6699:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    66a0:	00 
	{ }
    66a1:	90                   	nop
    66a2:	5d                   	pop    %rbp
    66a3:	c3                   	ret

00000000000066a4 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    66a4:	55                   	push   %rbp
    66a5:	48 89 e5             	mov    %rsp,%rbp
    66a8:	48 83 ec 20          	sub    $0x20,%rsp
    66ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    66b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    66c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c4:	48 89 ce             	mov    %rcx,%rsi
    66c7:	48 89 c7             	mov    %rax,%rdi
    66ca:	e8 67 03 00 00       	call   6a36 <_ZNSt15__new_allocatorIN4rtvc6VertexEE10deallocateEPS1_m>
    66cf:	90                   	nop
    66d0:	c9                   	leave
    66d1:	c3                   	ret

00000000000066d2 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE11_S_max_sizeERKS2_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    66d2:	55                   	push   %rbp
    66d3:	48 89 e5             	mov    %rsp,%rbp
    66d6:	48 83 ec 20          	sub    $0x20,%rsp
    66da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    66de:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    66e5:	66 66 06 
    66e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    66ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66f0:	48 89 c7             	mov    %rax,%rdi
    66f3:	e8 78 03 00 00       	call   6a70 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8max_sizeERKS2_>
    66f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    66fc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6700:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6704:	48 89 d6             	mov    %rdx,%rsi
    6707:	48 89 c7             	mov    %rax,%rdi
    670a:	e8 16 ff ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
    670f:	48 8b 00             	mov    (%rax),%rax
      }
    6712:	c9                   	leave
    6713:	c3                   	ret

0000000000006714 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6714:	55                   	push   %rbp
    6715:	48 89 e5             	mov    %rsp,%rbp
    6718:	48 83 ec 10          	sub    $0x10,%rsp
    671c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6720:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6724:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672c:	ba 00 00 00 00       	mov    $0x0,%edx
    6731:	48 89 ce             	mov    %rcx,%rsi
    6734:	48 89 c7             	mov    %rax,%rdi
    6737:	e8 4e 03 00 00       	call   6a8a <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv>
    673c:	c9                   	leave
    673d:	c3                   	ret

000000000000673e <_ZSt18uninitialized_copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    673e:	55                   	push   %rbp
    673f:	48 89 e5             	mov    %rsp,%rbp
    6742:	48 83 ec 30          	sub    $0x30,%rsp
    6746:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    674a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    674e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6752:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    6756:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    675a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    675e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6766:	48 89 ce             	mov    %rcx,%rsi
    6769:	48 89 c7             	mov    %rax,%rdi
    676c:	e8 84 03 00 00       	call   6af5 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN4rtvc6VertexEPS3_EET0_T_S8_S7_>
    }
    6771:	c9                   	leave
    6772:	c3                   	ret
    6773:	90                   	nop

0000000000006774 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6774:	55                   	push   %rbp
    6775:	48 89 e5             	mov    %rsp,%rbp
    6778:	48 83 ec 10          	sub    $0x10,%rsp
    677c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6780:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6784:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    678c:	48 89 d6             	mov    %rdx,%rsi
    678f:	48 89 c7             	mov    %rax,%rdi
    6792:	e8 8b 03 00 00       	call   6b22 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    6797:	90                   	nop
    6798:	c9                   	leave
    6799:	c3                   	ret

000000000000679a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    679a:	55                   	push   %rbp
    679b:	48 89 e5             	mov    %rsp,%rbp
    679e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    67a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    67ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    67b8:	00 
    67b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67bd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    67c4:	00 
	{ }
    67c5:	90                   	nop
    67c6:	5d                   	pop    %rbp
    67c7:	c3                   	ret

00000000000067c8 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    67c8:	55                   	push   %rbp
    67c9:	48 89 e5             	mov    %rsp,%rbp
    67cc:	48 83 ec 20          	sub    $0x20,%rsp
    67d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    67dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67e0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    67e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67e8:	48 89 ce             	mov    %rcx,%rsi
    67eb:	48 89 c7             	mov    %rax,%rdi
    67ee:	e8 3f 03 00 00       	call   6b32 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    67f3:	90                   	nop
    67f4:	c9                   	leave
    67f5:	c3                   	ret

00000000000067f6 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    67f6:	55                   	push   %rbp
    67f7:	48 89 e5             	mov    %rsp,%rbp
    67fa:	48 83 ec 20          	sub    $0x20,%rsp
    67fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6802:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6809:	ff ff 0f 
    680c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6814:	48 89 c7             	mov    %rax,%rdi
    6817:	e8 47 03 00 00       	call   6b63 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    681c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6820:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6824:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6828:	48 89 d6             	mov    %rdx,%rsi
    682b:	48 89 c7             	mov    %rax,%rdi
    682e:	e8 f2 fd ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
    6833:	48 8b 00             	mov    (%rax),%rax
      }
    6836:	c9                   	leave
    6837:	c3                   	ret

0000000000006838 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6838:	55                   	push   %rbp
    6839:	48 89 e5             	mov    %rsp,%rbp
    683c:	48 83 ec 10          	sub    $0x10,%rsp
    6840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6844:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6848:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    684c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6850:	ba 00 00 00 00       	mov    $0x0,%edx
    6855:	48 89 ce             	mov    %rcx,%rsi
    6858:	48 89 c7             	mov    %rax,%rdi
    685b:	e8 1e 03 00 00       	call   6b7e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    6860:	c9                   	leave
    6861:	c3                   	ret

0000000000006862 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    6862:	55                   	push   %rbp
    6863:	48 89 e5             	mov    %rsp,%rbp
    6866:	48 83 ec 30          	sub    $0x30,%rsp
    686a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    686e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6872:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6876:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    687a:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    687e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6882:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6886:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    688a:	48 89 ce             	mov    %rcx,%rsi
    688d:	48 89 c7             	mov    %rax,%rdi
    6890:	e8 4a 03 00 00       	call   6bdf <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    6895:	c9                   	leave
    6896:	c3                   	ret

0000000000006897 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6897:	55                   	push   %rbp
    6898:	48 89 e5             	mov    %rsp,%rbp
    689b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    689f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68a3:	90                   	nop
    68a4:	5d                   	pop    %rbp
    68a5:	c3                   	ret

00000000000068a6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    68a6:	55                   	push   %rbp
    68a7:	48 89 e5             	mov    %rsp,%rbp
    68aa:	48 83 ec 20          	sub    $0x20,%rsp
    68ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    68ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    68c5:	00 
    68c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    68ca:	48 89 d6             	mov    %rdx,%rsi
    68cd:	48 89 c7             	mov    %rax,%rdi
    68d0:	e8 5b db ff ff       	call   4430 <_ZdlPvm@plt>
      }
    68d5:	c9                   	leave
    68d6:	c3                   	ret

00000000000068d7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    68d7:	55                   	push   %rbp
    68d8:	48 89 e5             	mov    %rsp,%rbp
    68db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68e3:	90                   	nop
    68e4:	5d                   	pop    %rbp
    68e5:	c3                   	ret

00000000000068e6 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    68e6:	55                   	push   %rbp
    68e7:	48 89 e5             	mov    %rsp,%rbp
    68ea:	48 83 ec 20          	sub    $0x20,%rsp
    68ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    68fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6905:	00 
    6906:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    690a:	48 89 d6             	mov    %rdx,%rsi
    690d:	48 89 c7             	mov    %rax,%rdi
    6910:	e8 1b db ff ff       	call   4430 <_ZdlPvm@plt>
      }
    6915:	c9                   	leave
    6916:	c3                   	ret

0000000000006917 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
    6917:	55                   	push   %rbp
    6918:	48 89 e5             	mov    %rsp,%rbp
    691b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    691f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6923:	90                   	nop
    6924:	5d                   	pop    %rbp
    6925:	c3                   	ret

0000000000006926 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6926:	55                   	push   %rbp
    6927:	48 89 e5             	mov    %rsp,%rbp
    692a:	48 83 ec 20          	sub    $0x20,%rsp
    692e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6932:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6936:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    693a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    693e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6945:	00 
    6946:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    694a:	48 89 d6             	mov    %rdx,%rsi
    694d:	48 89 c7             	mov    %rax,%rdi
    6950:	e8 db da ff ff       	call   4430 <_ZdlPvm@plt>
      }
    6955:	c9                   	leave
    6956:	c3                   	ret

0000000000006957 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
    6957:	55                   	push   %rbp
    6958:	48 89 e5             	mov    %rsp,%rbp
    695b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    695f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6963:	90                   	nop
    6964:	5d                   	pop    %rbp
    6965:	c3                   	ret

0000000000006966 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6966:	55                   	push   %rbp
    6967:	48 89 e5             	mov    %rsp,%rbp
    696a:	48 83 ec 20          	sub    $0x20,%rsp
    696e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6972:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6976:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    697a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    697e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6985:	00 
    6986:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    698a:	48 89 d6             	mov    %rdx,%rsi
    698d:	48 89 c7             	mov    %rax,%rdi
    6990:	e8 9b da ff ff       	call   4430 <_ZdlPvm@plt>
      }
    6995:	c9                   	leave
    6996:	c3                   	ret

0000000000006997 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
    6997:	55                   	push   %rbp
    6998:	48 89 e5             	mov    %rsp,%rbp
    699b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    699f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69a3:	90                   	nop
    69a4:	5d                   	pop    %rbp
    69a5:	c3                   	ret

00000000000069a6 <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    69a6:	55                   	push   %rbp
    69a7:	48 89 e5             	mov    %rsp,%rbp
    69aa:	48 83 ec 20          	sub    $0x20,%rsp
    69ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    69ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    69c5:	00 
    69c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    69ca:	48 89 d6             	mov    %rdx,%rsi
    69cd:	48 89 c7             	mov    %rax,%rdi
    69d0:	e8 5b da ff ff       	call   4430 <_ZdlPvm@plt>
      }
    69d5:	c9                   	leave
    69d6:	c3                   	ret

00000000000069d7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
    69d7:	55                   	push   %rbp
    69d8:	48 89 e5             	mov    %rsp,%rbp
    69db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69e3:	90                   	nop
    69e4:	5d                   	pop    %rbp
    69e5:	c3                   	ret

00000000000069e6 <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    69e6:	55                   	push   %rbp
    69e7:	48 89 e5             	mov    %rsp,%rbp
    69ea:	48 83 ec 20          	sub    $0x20,%rsp
    69ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    69fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6a05:	00 
    6a06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a0a:	48 89 d6             	mov    %rdx,%rsi
    6a0d:	48 89 c7             	mov    %rax,%rdi
    6a10:	e8 1b da ff ff       	call   4430 <_ZdlPvm@plt>
      }
    6a15:	c9                   	leave
    6a16:	c3                   	ret

0000000000006a17 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
    6a17:	55                   	push   %rbp
    6a18:	48 89 e5             	mov    %rsp,%rbp
    6a1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a23:	90                   	nop
    6a24:	5d                   	pop    %rbp
    6a25:	c3                   	ret

0000000000006a26 <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6a26:	55                   	push   %rbp
    6a27:	48 89 e5             	mov    %rsp,%rbp
    6a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a32:	90                   	nop
    6a33:	5d                   	pop    %rbp
    6a34:	c3                   	ret
    6a35:	90                   	nop

0000000000006a36 <_ZNSt15__new_allocatorIN4rtvc6VertexEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6a36:	55                   	push   %rbp
    6a37:	48 89 e5             	mov    %rsp,%rbp
    6a3a:	48 83 ec 20          	sub    $0x20,%rsp
    6a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6a4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a4e:	48 89 d0             	mov    %rdx,%rax
    6a51:	48 c1 e0 02          	shl    $0x2,%rax
    6a55:	48 01 d0             	add    %rdx,%rax
    6a58:	48 c1 e0 02          	shl    $0x2,%rax
    6a5c:	48 89 c2             	mov    %rax,%rdx
    6a5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a63:	48 89 d6             	mov    %rdx,%rsi
    6a66:	48 89 c7             	mov    %rax,%rdi
    6a69:	e8 c2 d9 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    6a6e:	c9                   	leave
    6a6f:	c3                   	ret

0000000000006a70 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6a70:	55                   	push   %rbp
    6a71:	48 89 e5             	mov    %rsp,%rbp
    6a74:	48 83 ec 10          	sub    $0x10,%rsp
    6a78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a80:	48 89 c7             	mov    %rax,%rdi
    6a83:	e8 84 01 00 00       	call   6c0c <_ZNKSt15__new_allocatorIN4rtvc6VertexEE8max_sizeEv>
      }
    6a88:	c9                   	leave
    6a89:	c3                   	ret

0000000000006a8a <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6a8a:	55                   	push   %rbp
    6a8b:	48 89 e5             	mov    %rsp,%rbp
    6a8e:	48 83 ec 20          	sub    $0x20,%rsp
    6a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aa2:	48 89 c7             	mov    %rax,%rdi
    6aa5:	e8 7c 01 00 00       	call   6c26 <_ZNKSt15__new_allocatorIN4rtvc6VertexEE11_M_max_sizeEv>
    6aaa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6aae:	0f 92 c0             	setb   %al
    6ab1:	0f b6 c0             	movzbl %al,%eax
    6ab4:	48 85 c0             	test   %rax,%rax
    6ab7:	0f 95 c0             	setne  %al
    6aba:	84 c0                	test   %al,%al
    6abc:	74 1a                	je     6ad8 <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6abe:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    6ac5:	cc cc 0c 
    6ac8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6acc:	73 05                	jae    6ad3 <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6ace:	e8 ed d7 ff ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6ad3:	e8 28 d6 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6ad8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6adc:	48 89 d0             	mov    %rdx,%rax
    6adf:	48 c1 e0 02          	shl    $0x2,%rax
    6ae3:	48 01 d0             	add    %rdx,%rax
    6ae6:	48 c1 e0 02          	shl    $0x2,%rax
    6aea:	48 89 c7             	mov    %rax,%rdi
    6aed:	e8 1e d9 ff ff       	call   4410 <_Znwm@plt>
    6af2:	90                   	nop
      }
    6af3:	c9                   	leave
    6af4:	c3                   	ret

0000000000006af5 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN4rtvc6VertexEPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    6af5:	55                   	push   %rbp
    6af6:	48 89 e5             	mov    %rsp,%rbp
    6af9:	48 83 ec 20          	sub    $0x20,%rsp
    6afd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b05:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    6b09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b15:	48 89 ce             	mov    %rcx,%rsi
    6b18:	48 89 c7             	mov    %rax,%rdi
    6b1b:	e8 1a 01 00 00       	call   6c3a <_ZSt4copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>
    6b20:	c9                   	leave
    6b21:	c3                   	ret

0000000000006b22 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6b22:	55                   	push   %rbp
    6b23:	48 89 e5             	mov    %rsp,%rbp
    6b26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b2e:	90                   	nop
    6b2f:	5d                   	pop    %rbp
    6b30:	c3                   	ret
    6b31:	90                   	nop

0000000000006b32 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6b32:	55                   	push   %rbp
    6b33:	48 89 e5             	mov    %rsp,%rbp
    6b36:	48 83 ec 20          	sub    $0x20,%rsp
    6b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b42:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6b46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b4a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6b51:	00 
    6b52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b56:	48 89 d6             	mov    %rdx,%rsi
    6b59:	48 89 c7             	mov    %rax,%rdi
    6b5c:	e8 cf d8 ff ff       	call   4430 <_ZdlPvm@plt>
      }
    6b61:	c9                   	leave
    6b62:	c3                   	ret

0000000000006b63 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6b63:	55                   	push   %rbp
    6b64:	48 89 e5             	mov    %rsp,%rbp
    6b67:	48 83 ec 10          	sub    $0x10,%rsp
    6b6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6b6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b73:	48 89 c7             	mov    %rax,%rdi
    6b76:	e8 0b 01 00 00       	call   6c86 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    6b7b:	c9                   	leave
    6b7c:	c3                   	ret
    6b7d:	90                   	nop

0000000000006b7e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6b7e:	55                   	push   %rbp
    6b7f:	48 89 e5             	mov    %rsp,%rbp
    6b82:	48 83 ec 20          	sub    $0x20,%rsp
    6b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b96:	48 89 c7             	mov    %rax,%rdi
    6b99:	e8 02 01 00 00       	call   6ca0 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    6b9e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6ba2:	0f 92 c0             	setb   %al
    6ba5:	0f b6 c0             	movzbl %al,%eax
    6ba8:	48 85 c0             	test   %rax,%rax
    6bab:	0f 95 c0             	setne  %al
    6bae:	84 c0                	test   %al,%al
    6bb0:	74 1a                	je     6bcc <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6bb2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    6bb9:	ff ff 1f 
    6bbc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6bc0:	73 05                	jae    6bc7 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6bc2:	e8 f9 d6 ff ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6bc7:	e8 34 d5 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6bcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6bd0:	48 c1 e0 03          	shl    $0x3,%rax
    6bd4:	48 89 c7             	mov    %rax,%rdi
    6bd7:	e8 34 d8 ff ff       	call   4410 <_Znwm@plt>
    6bdc:	90                   	nop
      }
    6bdd:	c9                   	leave
    6bde:	c3                   	ret

0000000000006bdf <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    6bdf:	55                   	push   %rbp
    6be0:	48 89 e5             	mov    %rsp,%rbp
    6be3:	48 83 ec 20          	sub    $0x20,%rsp
    6be7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6beb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    6bf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6bf7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6bfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bff:	48 89 ce             	mov    %rcx,%rsi
    6c02:	48 89 c7             	mov    %rax,%rdi
    6c05:	e8 aa 00 00 00       	call   6cb4 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    6c0a:	c9                   	leave
    6c0b:	c3                   	ret

0000000000006c0c <_ZNKSt15__new_allocatorIN4rtvc6VertexEE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6c0c:	55                   	push   %rbp
    6c0d:	48 89 e5             	mov    %rsp,%rbp
    6c10:	48 83 ec 10          	sub    $0x10,%rsp
    6c14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c1c:	48 89 c7             	mov    %rax,%rdi
    6c1f:	e8 02 00 00 00       	call   6c26 <_ZNKSt15__new_allocatorIN4rtvc6VertexEE11_M_max_sizeEv>
    6c24:	c9                   	leave
    6c25:	c3                   	ret

0000000000006c26 <_ZNKSt15__new_allocatorIN4rtvc6VertexEE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6c26:	55                   	push   %rbp
    6c27:	48 89 e5             	mov    %rsp,%rbp
    6c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6c2e:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    6c35:	66 66 06 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    6c38:	5d                   	pop    %rbp
    6c39:	c3                   	ret

0000000000006c3a <_ZSt4copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    6c3a:	55                   	push   %rbp
    6c3b:	48 89 e5             	mov    %rsp,%rbp
    6c3e:	53                   	push   %rbx
    6c3f:	48 83 ec 28          	sub    $0x28,%rsp
    6c43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6c4b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    6c4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6c53:	48 89 c7             	mov    %rax,%rdi
    6c56:	e8 a4 00 00 00       	call   6cff <_ZSt12__miter_baseIPKN4rtvc6VertexEET_S4_>
    6c5b:	48 89 c3             	mov    %rax,%rbx
    6c5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c62:	48 89 c7             	mov    %rax,%rdi
    6c65:	e8 95 00 00 00       	call   6cff <_ZSt12__miter_baseIPKN4rtvc6VertexEET_S4_>
    6c6a:	48 89 c1             	mov    %rax,%rcx
    6c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c71:	48 89 c2             	mov    %rax,%rdx
    6c74:	48 89 de             	mov    %rbx,%rsi
    6c77:	48 89 cf             	mov    %rcx,%rdi
    6c7a:	e8 8e 00 00 00       	call   6d0d <_ZSt13__copy_move_aILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>
    }
    6c7f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6c83:	c9                   	leave
    6c84:	c3                   	ret
    6c85:	90                   	nop

0000000000006c86 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6c86:	55                   	push   %rbp
    6c87:	48 89 e5             	mov    %rsp,%rbp
    6c8a:	48 83 ec 10          	sub    $0x10,%rsp
    6c8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c96:	48 89 c7             	mov    %rax,%rdi
    6c99:	e8 02 00 00 00       	call   6ca0 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    6c9e:	c9                   	leave
    6c9f:	c3                   	ret

0000000000006ca0 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6ca0:	55                   	push   %rbp
    6ca1:	48 89 e5             	mov    %rsp,%rbp
    6ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6ca8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6caf:	ff ff 0f 
      }
    6cb2:	5d                   	pop    %rbp
    6cb3:	c3                   	ret

0000000000006cb4 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    6cb4:	55                   	push   %rbp
    6cb5:	48 89 e5             	mov    %rsp,%rbp
    6cb8:	53                   	push   %rbx
    6cb9:	48 83 ec 28          	sub    $0x28,%rsp
    6cbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6cc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6cc5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    6cc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6ccd:	48 89 c7             	mov    %rax,%rdi
    6cd0:	e8 a2 00 00 00       	call   6d77 <_ZSt12__miter_baseIPKPKcET_S4_>
    6cd5:	48 89 c3             	mov    %rax,%rbx
    6cd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cdc:	48 89 c7             	mov    %rax,%rdi
    6cdf:	e8 93 00 00 00       	call   6d77 <_ZSt12__miter_baseIPKPKcET_S4_>
    6ce4:	48 89 c1             	mov    %rax,%rcx
    6ce7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ceb:	48 89 c2             	mov    %rax,%rdx
    6cee:	48 89 de             	mov    %rbx,%rsi
    6cf1:	48 89 cf             	mov    %rcx,%rdi
    6cf4:	e8 8c 00 00 00       	call   6d85 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    6cf9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6cfd:	c9                   	leave
    6cfe:	c3                   	ret

0000000000006cff <_ZSt12__miter_baseIPKN4rtvc6VertexEET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    6cff:	55                   	push   %rbp
    6d00:	48 89 e5             	mov    %rsp,%rbp
    6d03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d0b:	5d                   	pop    %rbp
    6d0c:	c3                   	ret

0000000000006d0d <_ZSt13__copy_move_aILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    6d0d:	55                   	push   %rbp
    6d0e:	48 89 e5             	mov    %rsp,%rbp
    6d11:	41 54                	push   %r12
    6d13:	53                   	push   %rbx
    6d14:	48 83 ec 20          	sub    $0x20,%rsp
    6d18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6d1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6d20:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    6d24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d28:	48 89 c7             	mov    %rax,%rdi
    6d2b:	e8 cd 00 00 00       	call   6dfd <_ZSt12__niter_baseIPN4rtvc6VertexEET_S3_>
    6d30:	49 89 c4             	mov    %rax,%r12
    6d33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d37:	48 89 c7             	mov    %rax,%rdi
    6d3a:	e8 b0 00 00 00       	call   6def <_ZSt12__niter_baseIPKN4rtvc6VertexEET_S4_>
    6d3f:	48 89 c3             	mov    %rax,%rbx
    6d42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d46:	48 89 c7             	mov    %rax,%rdi
    6d49:	e8 a1 00 00 00       	call   6def <_ZSt12__niter_baseIPKN4rtvc6VertexEET_S4_>
    6d4e:	4c 89 e2             	mov    %r12,%rdx
    6d51:	48 89 de             	mov    %rbx,%rsi
    6d54:	48 89 c7             	mov    %rax,%rdi
    6d57:	e8 af 00 00 00       	call   6e0b <_ZSt14__copy_move_a1ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>
    6d5c:	48 89 c2             	mov    %rax,%rdx
    6d5f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d63:	48 89 d6             	mov    %rdx,%rsi
    6d66:	48 89 c7             	mov    %rax,%rdi
    6d69:	e8 ca 00 00 00       	call   6e38 <_ZSt12__niter_wrapIPN4rtvc6VertexEET_RKS3_S3_>
    }
    6d6e:	48 83 c4 20          	add    $0x20,%rsp
    6d72:	5b                   	pop    %rbx
    6d73:	41 5c                	pop    %r12
    6d75:	5d                   	pop    %rbp
    6d76:	c3                   	ret

0000000000006d77 <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
    6d77:	55                   	push   %rbp
    6d78:	48 89 e5             	mov    %rsp,%rbp
    6d7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6d7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d83:	5d                   	pop    %rbp
    6d84:	c3                   	ret

0000000000006d85 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    6d85:	55                   	push   %rbp
    6d86:	48 89 e5             	mov    %rsp,%rbp
    6d89:	41 54                	push   %r12
    6d8b:	53                   	push   %rbx
    6d8c:	48 83 ec 20          	sub    $0x20,%rsp
    6d90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6d94:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6d98:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    6d9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6da0:	48 89 c7             	mov    %rax,%rdi
    6da3:	e8 b0 00 00 00       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
    6da8:	49 89 c4             	mov    %rax,%r12
    6dab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6daf:	48 89 c7             	mov    %rax,%rdi
    6db2:	e8 93 00 00 00       	call   6e4a <_ZSt12__niter_baseIPKPKcET_S4_>
    6db7:	48 89 c3             	mov    %rax,%rbx
    6dba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dbe:	48 89 c7             	mov    %rax,%rdi
    6dc1:	e8 84 00 00 00       	call   6e4a <_ZSt12__niter_baseIPKPKcET_S4_>
    6dc6:	4c 89 e2             	mov    %r12,%rdx
    6dc9:	48 89 de             	mov    %rbx,%rsi
    6dcc:	48 89 c7             	mov    %rax,%rdi
    6dcf:	e8 92 00 00 00       	call   6e66 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    6dd4:	48 89 c2             	mov    %rax,%rdx
    6dd7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6ddb:	48 89 d6             	mov    %rdx,%rsi
    6dde:	48 89 c7             	mov    %rax,%rdi
    6de1:	e8 ad 00 00 00       	call   6e93 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    6de6:	48 83 c4 20          	add    $0x20,%rsp
    6dea:	5b                   	pop    %rbx
    6deb:	41 5c                	pop    %r12
    6ded:	5d                   	pop    %rbp
    6dee:	c3                   	ret

0000000000006def <_ZSt12__niter_baseIPKN4rtvc6VertexEET_S4_>:
    __niter_base(_Iterator __it)
    6def:	55                   	push   %rbp
    6df0:	48 89 e5             	mov    %rsp,%rbp
    6df3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dfb:	5d                   	pop    %rbp
    6dfc:	c3                   	ret

0000000000006dfd <_ZSt12__niter_baseIPN4rtvc6VertexEET_S3_>:
    __niter_base(_Iterator __it)
    6dfd:	55                   	push   %rbp
    6dfe:	48 89 e5             	mov    %rsp,%rbp
    6e01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6e05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e09:	5d                   	pop    %rbp
    6e0a:	c3                   	ret

0000000000006e0b <_ZSt14__copy_move_a1ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6e0b:	55                   	push   %rbp
    6e0c:	48 89 e5             	mov    %rsp,%rbp
    6e0f:	48 83 ec 20          	sub    $0x20,%rsp
    6e13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    6e1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e2b:	48 89 ce             	mov    %rcx,%rsi
    6e2e:	48 89 c7             	mov    %rax,%rdi
    6e31:	e8 6f 00 00 00       	call   6ea5 <_ZSt14__copy_move_a2ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>
    6e36:	c9                   	leave
    6e37:	c3                   	ret

0000000000006e38 <_ZSt12__niter_wrapIPN4rtvc6VertexEET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6e38:	55                   	push   %rbp
    6e39:	48 89 e5             	mov    %rsp,%rbp
    6e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    6e44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6e48:	5d                   	pop    %rbp
    6e49:	c3                   	ret

0000000000006e4a <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    6e4a:	55                   	push   %rbp
    6e4b:	48 89 e5             	mov    %rsp,%rbp
    6e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e56:	5d                   	pop    %rbp
    6e57:	c3                   	ret

0000000000006e58 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    6e58:	55                   	push   %rbp
    6e59:	48 89 e5             	mov    %rsp,%rbp
    6e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e64:	5d                   	pop    %rbp
    6e65:	c3                   	ret

0000000000006e66 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6e66:	55                   	push   %rbp
    6e67:	48 89 e5             	mov    %rsp,%rbp
    6e6a:	48 83 ec 20          	sub    $0x20,%rsp
    6e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    6e7a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e7e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e86:	48 89 ce             	mov    %rcx,%rsi
    6e89:	48 89 c7             	mov    %rax,%rdi
    6e8c:	e8 41 00 00 00       	call   6ed2 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    6e91:	c9                   	leave
    6e92:	c3                   	ret

0000000000006e93 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6e93:	55                   	push   %rbp
    6e94:	48 89 e5             	mov    %rsp,%rbp
    6e97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    6e9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ea3:	5d                   	pop    %rbp
    6ea4:	c3                   	ret

0000000000006ea5 <_ZSt14__copy_move_a2ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6ea5:	55                   	push   %rbp
    6ea6:	48 89 e5             	mov    %rsp,%rbp
    6ea9:	48 83 ec 20          	sub    $0x20,%rsp
    6ead:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6eb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6eb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6eb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ebd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ec5:	48 89 ce             	mov    %rcx,%rsi
    6ec8:	48 89 c7             	mov    %rax,%rdi
    6ecb:	e8 2f 00 00 00       	call   6eff <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4rtvc6VertexEEEPT_PKS5_S8_S6_>
    }
    6ed0:	c9                   	leave
    6ed1:	c3                   	ret

0000000000006ed2 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6ed2:	55                   	push   %rbp
    6ed3:	48 89 e5             	mov    %rsp,%rbp
    6ed6:	48 83 ec 20          	sub    $0x20,%rsp
    6eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ee2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6ee6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6eea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ef2:	48 89 ce             	mov    %rcx,%rsi
    6ef5:	48 89 c7             	mov    %rax,%rdi
    6ef8:	e8 84 00 00 00       	call   6f81 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    6efd:	c9                   	leave
    6efe:	c3                   	ret

0000000000006eff <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4rtvc6VertexEEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    6eff:	55                   	push   %rbp
    6f00:	48 89 e5             	mov    %rsp,%rbp
    6f03:	48 83 ec 30          	sub    $0x30,%rsp
    6f07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f0b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6f0f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6f13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6f17:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6f1b:	48 c1 f8 02          	sar    $0x2,%rax
    6f1f:	48 89 c2             	mov    %rax,%rdx
    6f22:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    6f29:	cc cc cc 
    6f2c:	48 0f af c2          	imul   %rdx,%rax
    6f30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6f34:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6f39:	74 28                	je     6f63 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4rtvc6VertexEEEPT_PKS5_S8_S6_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    6f3b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6f3f:	48 89 d0             	mov    %rdx,%rax
    6f42:	48 c1 e0 02          	shl    $0x2,%rax
    6f46:	48 01 d0             	add    %rdx,%rax
    6f49:	48 c1 e0 02          	shl    $0x2,%rax
    6f4d:	48 89 c2             	mov    %rax,%rdx
    6f50:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6f54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f58:	48 89 ce             	mov    %rcx,%rsi
    6f5b:	48 89 c7             	mov    %rax,%rdi
    6f5e:	e8 4d d8 ff ff       	call   47b0 <memmove@plt>
	  return __result + _Num;
    6f63:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6f67:	48 89 d0             	mov    %rdx,%rax
    6f6a:	48 c1 e0 02          	shl    $0x2,%rax
    6f6e:	48 01 d0             	add    %rdx,%rax
    6f71:	48 c1 e0 02          	shl    $0x2,%rax
    6f75:	48 89 c2             	mov    %rax,%rdx
    6f78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f7c:	48 01 d0             	add    %rdx,%rax
	}
    6f7f:	c9                   	leave
    6f80:	c3                   	ret

0000000000006f81 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    6f81:	55                   	push   %rbp
    6f82:	48 89 e5             	mov    %rsp,%rbp
    6f85:	48 83 ec 30          	sub    $0x30,%rsp
    6f89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6f91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6f95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6f99:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6f9d:	48 c1 f8 03          	sar    $0x3,%rax
    6fa1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6fa5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6faa:	74 1f                	je     6fcb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    6fac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fb0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6fb7:	00 
    6fb8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6fbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fc0:	48 89 ce             	mov    %rcx,%rsi
    6fc3:	48 89 c7             	mov    %rax,%rdi
    6fc6:	e8 e5 d7 ff ff       	call   47b0 <memmove@plt>
	  return __result + _Num;
    6fcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fcf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6fd6:	00 
    6fd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fdb:	48 01 d0             	add    %rdx,%rax
	}
    6fde:	c9                   	leave
    6fdf:	c3                   	ret

0000000000006fe0 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6fe0:	55                   	push   %rbp
    6fe1:	48 89 e5             	mov    %rsp,%rbp
    6fe4:	48 83 ec 10          	sub    $0x10,%rsp
    6fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ff0:	48 89 c7             	mov    %rax,%rdi
    6ff3:	e8 f2 f1 ff ff       	call   61ea <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>
    6ff8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6ffb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fff:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7007:	48 8b 00             	mov    (%rax),%rax
    700a:	48 89 ce             	mov    %rcx,%rsi
    700d:	48 89 c7             	mov    %rax,%rdi
    7010:	e8 0f 00 00 00       	call   7024 <_ZSt8_DestroyIPN4rtvc6VertexES1_EvT_S3_RSaIT0_E>
      }
    7015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7019:	48 89 c7             	mov    %rax,%rdi
    701c:	e8 81 e8 ff ff       	call   58a2 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EED1Ev>
    7021:	90                   	nop
    7022:	c9                   	leave
    7023:	c3                   	ret

0000000000007024 <_ZSt8_DestroyIPN4rtvc6VertexES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7024:	55                   	push   %rbp
    7025:	48 89 e5             	mov    %rsp,%rbp
    7028:	48 83 ec 20          	sub    $0x20,%rsp
    702c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7030:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7034:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7038:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    703c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7040:	48 89 d6             	mov    %rdx,%rsi
    7043:	48 89 c7             	mov    %rax,%rdi
    7046:	e8 03 00 00 00       	call   704e <_ZSt8_DestroyIPN4rtvc6VertexEEvT_S3_>
    }
    704b:	90                   	nop
    704c:	c9                   	leave
    704d:	c3                   	ret

000000000000704e <_ZSt8_DestroyIPN4rtvc6VertexEEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    704e:	55                   	push   %rbp
    704f:	48 89 e5             	mov    %rsp,%rbp
    7052:	48 83 ec 10          	sub    $0x10,%rsp
    7056:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    705a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    705e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7066:	48 89 d6             	mov    %rdx,%rsi
    7069:	48 89 c7             	mov    %rax,%rdi
    706c:	e8 03 00 00 00       	call   7074 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN4rtvc6VertexEEEvT_S5_>
    }
    7071:	90                   	nop
    7072:	c9                   	leave
    7073:	c3                   	ret

0000000000007074 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN4rtvc6VertexEEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7074:	55                   	push   %rbp
    7075:	48 89 e5             	mov    %rsp,%rbp
    7078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    707c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7080:	90                   	nop
    7081:	5d                   	pop    %rbp
    7082:	c3                   	ret

0000000000007083 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
#include "ProxyFuncs.hpp"

VkResult rtvc::createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    7083:	55                   	push   %rbp
    7084:	48 89 e5             	mov    %rsp,%rbp
    7087:	48 83 ec 30          	sub    $0x30,%rsp
    708b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    708f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7093:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7097:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    709b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    709f:	48 8d 15 aa 2b 01 00 	lea    0x12baa(%rip),%rdx        # 19c50 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    70a6:	48 89 d6             	mov    %rdx,%rsi
    70a9:	48 89 c7             	mov    %rax,%rdi
    70ac:	e8 0f d3 ff ff       	call   43c0 <vkGetInstanceProcAddr@plt>
    70b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func != nullptr)
    70b5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    70ba:	74 1c                	je     70d8 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x55>
    return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    70bc:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    70c0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    70c4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    70c8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    70cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70d0:	48 89 c7             	mov    %rax,%rdi
    70d3:	41 ff d0             	call   *%r8
    70d6:	eb 05                	jmp    70dd <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5a>
  else
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    70d8:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
}
    70dd:	c9                   	leave
    70de:	c3                   	ret

00000000000070df <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void rtvc::destroyDebugUtilsMessengerEXT(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) {
    70df:	55                   	push   %rbp
    70e0:	48 89 e5             	mov    %rsp,%rbp
    70e3:	48 83 ec 30          	sub    $0x30,%rsp
    70e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    70ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    70f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70f7:	48 8d 15 72 2b 01 00 	lea    0x12b72(%rip),%rdx        # 19c70 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    70fe:	48 89 d6             	mov    %rdx,%rsi
    7101:	48 89 c7             	mov    %rax,%rdi
    7104:	e8 b7 d2 ff ff       	call   43c0 <vkGetInstanceProcAddr@plt>
    7109:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr)
    710d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    7112:	74 1a                	je     712e <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4f>
    return func(instance, debugMessenger, pAllocator);
    7114:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    7118:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    711c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7120:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7124:	48 89 ce             	mov    %rcx,%rsi
    7127:	48 89 c7             	mov    %rax,%rdi
    712a:	41 ff d0             	call   *%r8
    712d:	90                   	nop
    712e:	c9                   	leave
    712f:	c3                   	ret

0000000000007130 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL rtvc::RenderApplication::debugCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    7130:	55                   	push   %rbp
    7131:	48 89 e5             	mov    %rsp,%rbp
    7134:	48 83 ec 20          	sub    $0x20,%rsp
    7138:	89 7d fc             	mov    %edi,-0x4(%rbp)
    713b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    713e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    7142:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity >= VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT)
    7146:	8b 45 fc             	mov    -0x4(%rbp),%eax
    7149:	3d ff 00 00 00       	cmp    $0xff,%eax
    714e:	7e 39                	jle    7189 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x59>
    std::cerr << pCallbackData->pMessage << '\n' << std::endl;
    7150:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7154:	48 8b 40 28          	mov    0x28(%rax),%rax
    7158:	48 89 c6             	mov    %rax,%rsi
    715b:	48 8d 05 3e 24 02 00 	lea    0x2243e(%rip),%rax        # 295a0 <_ZSt4cerr@GLIBCXX_3.4>
    7162:	48 89 c7             	mov    %rax,%rdi
    7165:	e8 96 d2 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    716a:	be 0a 00 00 00       	mov    $0xa,%esi
    716f:	48 89 c7             	mov    %rax,%rdi
    7172:	e8 b9 d3 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    7177:	48 8b 15 1a 1e 02 00 	mov    0x21e1a(%rip),%rdx        # 28f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    717e:	48 89 d6             	mov    %rdx,%rsi
    7181:	48 89 c7             	mov    %rax,%rdi
    7184:	e8 f7 d2 ff ff       	call   4480 <_ZNSolsEPFRSoS_E@plt>

  return VK_FALSE;
    7189:	b8 00 00 00 00       	mov    $0x0,%eax
}
    718e:	c9                   	leave
    718f:	c3                   	ret

0000000000007190 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>:

std::vector<VkExtensionProperties>
rtvc::RenderApplication::getSupportedExtensions() {
    7190:	55                   	push   %rbp
    7191:	48 89 e5             	mov    %rsp,%rbp
    7194:	53                   	push   %rbx
    7195:	48 83 ec 28          	sub    $0x28,%rsp
    7199:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    719d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t extensionsCount = 0;
    71a1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    71a8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    71ac:	ba 00 00 00 00       	mov    $0x0,%edx
    71b1:	48 89 c6             	mov    %rax,%rsi
    71b4:	bf 00 00 00 00       	mov    $0x0,%edi
    71b9:	e8 72 d1 ff ff       	call   4330 <vkEnumerateInstanceExtensionProperties@plt>

  std::vector<VkExtensionProperties> extensions{extensionsCount};
    71be:	8b 45 e8             	mov    -0x18(%rbp),%eax
    71c1:	89 c3                	mov    %eax,%ebx
    71c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71c7:	48 89 c7             	mov    %rax,%rdi
    71ca:	e8 59 4f 00 00       	call   c128 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    71cf:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    71d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71d7:	48 89 de             	mov    %rbx,%rsi
    71da:	48 89 c7             	mov    %rax,%rdi
    71dd:	e8 7e 4f 00 00       	call   c160 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    71e2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71e6:	48 89 c7             	mov    %rax,%rdi
    71e9:	e8 56 4f 00 00       	call   c144 <_ZNSaI21VkExtensionPropertiesED1Ev>
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount,
    71ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71f2:	48 89 c7             	mov    %rax,%rdi
    71f5:	e8 20 50 00 00       	call   c21a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    71fa:	48 89 c2             	mov    %rax,%rdx
    71fd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7201:	48 89 c6             	mov    %rax,%rsi
    7204:	bf 00 00 00 00       	mov    $0x0,%edi
    7209:	e8 22 d1 ff ff       	call   4330 <vkEnumerateInstanceExtensionProperties@plt>
                                         extensions.data());

  return extensions;
    720e:	eb 34                	jmp    7244 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0xb4>
  std::vector<VkExtensionProperties> extensions{extensionsCount};
    7210:	48 89 c3             	mov    %rax,%rbx
    7213:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7217:	48 89 c7             	mov    %rax,%rdi
    721a:	e8 25 4f 00 00       	call   c144 <_ZNSaI21VkExtensionPropertiesED1Ev>
    721f:	48 89 d8             	mov    %rbx,%rax
    7222:	48 89 c7             	mov    %rax,%rdi
    7225:	e8 16 d6 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    722a:	48 89 c3             	mov    %rax,%rbx
    722d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7231:	48 89 c7             	mov    %rax,%rdi
    7234:	e8 9d 4f 00 00       	call   c1d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7239:	48 89 d8             	mov    %rbx,%rax
    723c:	48 89 c7             	mov    %rax,%rdi
    723f:	e8 fc d5 ff ff       	call   4840 <_Unwind_Resume@plt>
    7244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7248:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    724c:	c9                   	leave
    724d:	c3                   	ret

000000000000724e <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>:

std::vector<const char *> rtvc::RenderApplication::getRequiredExtensions() {
    724e:	55                   	push   %rbp
    724f:	48 89 e5             	mov    %rsp,%rbp
    7252:	41 54                	push   %r12
    7254:	53                   	push   %rbx
    7255:	48 83 ec 30          	sub    $0x30,%rsp
    7259:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    725d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  uint32_t glfwExtensionCount = 0;
    7261:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  const char **glfwExtensions;
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    7268:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    726c:	48 89 c7             	mov    %rax,%rdi
    726f:	e8 3c d0 ff ff       	call   42b0 <glfwGetRequiredInstanceExtensions@plt>
    7274:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  std::vector<const char *> extensions{glfwExtensions,
                                       glfwExtensions + glfwExtensionCount};
    7278:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    727c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    727f:	89 c0                	mov    %eax,%eax
    7281:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7288:	00 
    7289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    728d:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    7291:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7295:	48 89 c7             	mov    %rax,%rdi
    7298:	e8 a3 df ff ff       	call   5240 <_ZNSaIPKcEC1Ev>
    729d:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    72a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    72a5:	48 89 d1             	mov    %rdx,%rcx
    72a8:	4c 89 e2             	mov    %r12,%rdx
    72ab:	48 89 de             	mov    %rbx,%rsi
    72ae:	48 89 c7             	mov    %rax,%rdi
    72b1:	e8 e0 4f 00 00       	call   c296 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>
    72b6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    72ba:	48 89 c7             	mov    %rax,%rdi
    72bd:	e8 9a df ff ff       	call   525c <_ZNSaIPKcED1Ev>

  if (enableValidationLayers)
    extensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    72c2:	48 8d 05 b7 2f 01 00 	lea    0x12fb7(%rip),%rax        # 1a280 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    72c9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    72cd:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    72d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    72d5:	48 89 d6             	mov    %rdx,%rsi
    72d8:	48 89 c7             	mov    %rax,%rdi
    72db:	e8 28 50 00 00       	call   c308 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>

  return extensions;
    72e0:	eb 34                	jmp    7316 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv+0xc8>
                                       glfwExtensions + glfwExtensionCount};
    72e2:	48 89 c3             	mov    %rax,%rbx
    72e5:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    72e9:	48 89 c7             	mov    %rax,%rdi
    72ec:	e8 6b df ff ff       	call   525c <_ZNSaIPKcED1Ev>
    72f1:	48 89 d8             	mov    %rbx,%rax
    72f4:	48 89 c7             	mov    %rax,%rdi
    72f7:	e8 44 d5 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    72fc:	48 89 c3             	mov    %rax,%rbx
    72ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7303:	48 89 c7             	mov    %rax,%rdi
    7306:	e8 f5 df ff ff       	call   5300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    730b:	48 89 d8             	mov    %rbx,%rax
    730e:	48 89 c7             	mov    %rax,%rdi
    7311:	e8 2a d5 ff ff       	call   4840 <_Unwind_Resume@plt>
    7316:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    731a:	48 83 c4 30          	add    $0x30,%rsp
    731e:	5b                   	pop    %rbx
    731f:	41 5c                	pop    %r12
    7321:	5d                   	pop    %rbp
    7322:	c3                   	ret
    7323:	90                   	nop

0000000000007324 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>:

bool rtvc::RenderApplication::checkValidationLayerSupport() {
    7324:	55                   	push   %rbp
    7325:	48 89 e5             	mov    %rsp,%rbp
    7328:	53                   	push   %rbx
    7329:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    7330:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    7337:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    733b:	be 00 00 00 00       	mov    $0x0,%esi
    7340:	48 89 c7             	mov    %rax,%rdi
    7343:	e8 b8 d1 ff ff       	call   4500 <vkEnumerateInstanceLayerProperties@plt>

  std::vector<VkLayerProperties> availableLayers{layerCount};
    7348:	8b 45 c0             	mov    -0x40(%rbp),%eax
    734b:	89 c3                	mov    %eax,%ebx
    734d:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7351:	48 89 c7             	mov    %rax,%rdi
    7354:	e8 e1 4f 00 00       	call   c33a <_ZNSaI17VkLayerPropertiesEC1Ev>
    7359:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
    735d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7361:	48 89 de             	mov    %rbx,%rsi
    7364:	48 89 c7             	mov    %rax,%rdi
    7367:	e8 06 50 00 00       	call   c372 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    736c:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7370:	48 89 c7             	mov    %rax,%rdi
    7373:	e8 de 4f 00 00       	call   c356 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    7378:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    737c:	48 89 c7             	mov    %rax,%rdi
    737f:	e8 a8 50 00 00       	call   c42c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7384:	48 89 c2             	mov    %rax,%rdx
    7387:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    738b:	48 89 d6             	mov    %rdx,%rsi
    738e:	48 89 c7             	mov    %rax,%rdi
    7391:	e8 6a d1 ff ff       	call   4500 <vkEnumerateInstanceLayerProperties@plt>

  for (const char *layerName : validationLayers) {
    7396:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    739d:	48 83 c0 18          	add    $0x18,%rax
    73a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    73a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73a9:	48 89 c7             	mov    %rax,%rdi
    73ac:	e8 9f 50 00 00       	call   c450 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    73b1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    73b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73b9:	48 89 c7             	mov    %rax,%rdi
    73bc:	e8 b5 50 00 00       	call   c476 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    73c1:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    73c5:	e9 af 00 00 00       	jmp    7479 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x155>
    73ca:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    73ce:	48 89 c7             	mov    %rax,%rdi
    73d1:	e8 24 51 00 00       	call   c4fa <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    73d6:	48 8b 00             	mov    (%rax),%rax
    73d9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bool layerFound = false;
    73dd:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)

    for (const auto &layerProperties : availableLayers) {
    73e1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    73e5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    73e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73ed:	48 89 c7             	mov    %rax,%rdi
    73f0:	e8 17 51 00 00       	call   c50c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    73f5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    73f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73fd:	48 89 c7             	mov    %rax,%rdi
    7400:	e8 2d 51 00 00       	call   c532 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    7405:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7409:	eb 39                	jmp    7444 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x120>
    740b:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    740f:	48 89 c7             	mov    %rax,%rdi
    7412:	e8 a3 51 00 00       	call   c5ba <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7417:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      if (strcmp(layerName, layerProperties.layerName) == 0) {
    741b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    741f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7423:	48 89 d6             	mov    %rdx,%rsi
    7426:	48 89 c7             	mov    %rax,%rdi
    7429:	e8 82 d2 ff ff       	call   46b0 <strcmp@plt>
    742e:	85 c0                	test   %eax,%eax
    7430:	75 06                	jne    7438 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x114>
        layerFound = true;
    7432:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
        break;
    7436:	eb 23                	jmp    745b <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x137>
    for (const auto &layerProperties : availableLayers) {
    7438:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    743c:	48 89 c7             	mov    %rax,%rdi
    743f:	e8 52 51 00 00       	call   c596 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7444:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    7448:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    744c:	48 89 d6             	mov    %rdx,%rsi
    744f:	48 89 c7             	mov    %rax,%rdi
    7452:	e8 04 51 00 00       	call   c55b <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7457:	84 c0                	test   %al,%al
    7459:	75 b0                	jne    740b <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xe7>
      }
    }

    if (!layerFound)
    745b:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    745f:	83 f0 01             	xor    $0x1,%eax
    7462:	84 c0                	test   %al,%al
    7464:	74 07                	je     746d <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x149>
      return false;
    7466:	bb 00 00 00 00       	mov    $0x0,%ebx
    746b:	eb 2c                	jmp    7499 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x175>
  for (const char *layerName : validationLayers) {
    746d:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    7471:	48 89 c7             	mov    %rax,%rdi
    7474:	e8 61 50 00 00       	call   c4da <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    7479:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    747d:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    7481:	48 89 d6             	mov    %rdx,%rsi
    7484:	48 89 c7             	mov    %rax,%rdi
    7487:	e8 13 50 00 00       	call   c49f <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    748c:	84 c0                	test   %al,%al
    748e:	0f 85 36 ff ff ff    	jne    73ca <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xa6>
  }

  return true;
    7494:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    7499:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    749d:	48 89 c7             	mov    %rax,%rdi
    74a0:	e8 43 4f 00 00       	call   c3e8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    74a5:	89 d8                	mov    %ebx,%eax
    74a7:	eb 34                	jmp    74dd <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1b9>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    74a9:	48 89 c3             	mov    %rax,%rbx
    74ac:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    74b0:	48 89 c7             	mov    %rax,%rdi
    74b3:	e8 9e 4e 00 00       	call   c356 <_ZNSaI17VkLayerPropertiesED1Ev>
    74b8:	48 89 d8             	mov    %rbx,%rax
    74bb:	48 89 c7             	mov    %rax,%rdi
    74be:	e8 7d d3 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    74c3:	48 89 c3             	mov    %rax,%rbx
    74c6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    74ca:	48 89 c7             	mov    %rax,%rdi
    74cd:	e8 16 4f 00 00       	call   c3e8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    74d2:	48 89 d8             	mov    %rbx,%rax
    74d5:	48 89 c7             	mov    %rax,%rdi
    74d8:	e8 63 d3 ff ff       	call   4840 <_Unwind_Resume@plt>
    74dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74e1:	c9                   	leave
    74e2:	c3                   	ret
    74e3:	90                   	nop

00000000000074e4 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void rtvc::RenderApplication::populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    74e4:	55                   	push   %rbp
    74e5:	48 89 e5             	mov    %rsp,%rbp
    74e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  createInfo = {};
    74f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    74f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    74f8:	0f 11 00             	movups %xmm0,(%rax)
    74fb:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    74ff:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    7503:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7507:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
    750d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7511:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
                               VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
                               VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    7518:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    751c:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    7523:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7527:	48 8d 15 02 fc ff ff 	lea    -0x3fe(%rip),%rdx        # 7130 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    752e:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    7532:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7536:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    753d:	00 
}
    753e:	90                   	nop
    753f:	5d                   	pop    %rbp
    7540:	c3                   	ret
    7541:	90                   	nop

0000000000007542 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>:

void rtvc::RenderApplication::setupDebugMessenger() {
    7542:	55                   	push   %rbp
    7543:	48 89 e5             	mov    %rsp,%rbp
    7546:	41 54                	push   %r12
    7548:	53                   	push   %rbx
    7549:	48 83 ec 40          	sub    $0x40,%rsp
    754d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  if (!enableValidationLayers) {
    return;
  }

  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    7551:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    7555:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7559:	48 89 d6             	mov    %rdx,%rsi
    755c:	48 89 c7             	mov    %rax,%rdi
    755f:	e8 80 ff ff ff       	call   74e4 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    7564:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7568:	48 8d 50 30          	lea    0x30(%rax),%rdx
    756c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7570:	48 8b 40 10          	mov    0x10(%rax),%rax
    7574:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7578:	48 89 d1             	mov    %rdx,%rcx
    757b:	ba 00 00 00 00       	mov    $0x0,%edx
    7580:	48 89 c7             	mov    %rax,%rdi
    7583:	e8 fb fa ff ff       	call   7083 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS)
    7588:	85 c0                	test   %eax,%eax
    758a:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    758d:	84 c0                	test   %al,%al
    758f:	74 51                	je     75e2 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv+0xa0>
    throw std::runtime_error("Failed to set up debug messenger.");
    7591:	bf 10 00 00 00       	mov    $0x10,%edi
    7596:	e8 e5 cb ff ff       	call   4180 <__cxa_allocate_exception@plt>
    759b:	48 89 c3             	mov    %rax,%rbx
    759e:	48 8d 05 f3 2c 01 00 	lea    0x12cf3(%rip),%rax        # 1a298 <_ZN6__pstl9execution2v1L5unseqE+0x2d>
    75a5:	48 89 c6             	mov    %rax,%rsi
    75a8:	48 89 df             	mov    %rbx,%rdi
    75ab:	e8 60 cb ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    75b0:	48 8b 05 f1 19 02 00 	mov    0x219f1(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    75b7:	48 89 c2             	mov    %rax,%rdx
    75ba:	48 8d 05 7f 17 02 00 	lea    0x2177f(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    75c1:	48 89 c6             	mov    %rax,%rsi
    75c4:	48 89 df             	mov    %rbx,%rdi
    75c7:	e8 24 d2 ff ff       	call   47f0 <__cxa_throw@plt>
    75cc:	49 89 c4             	mov    %rax,%r12
    75cf:	48 89 df             	mov    %rbx,%rdi
    75d2:	e8 a9 cc ff ff       	call   4280 <__cxa_free_exception@plt>
    75d7:	4c 89 e0             	mov    %r12,%rax
    75da:	48 89 c7             	mov    %rax,%rdi
    75dd:	e8 5e d2 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    75e2:	90                   	nop
    75e3:	48 83 c4 40          	add    $0x40,%rsp
    75e7:	5b                   	pop    %rbx
    75e8:	41 5c                	pop    %r12
    75ea:	5d                   	pop    %rbp
    75eb:	c3                   	ret

00000000000075ec <_ZN4rtvc17RenderApplication13creatInstanceEv>:

void rtvc::RenderApplication::creatInstance() {
    75ec:	55                   	push   %rbp
    75ed:	48 89 e5             	mov    %rsp,%rbp
    75f0:	41 54                	push   %r12
    75f2:	53                   	push   %rbx
    75f3:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
    75fa:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  if (enableValidationLayers) {
    if (!checkValidationLayerSupport()) {
    7601:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7608:	48 89 c7             	mov    %rax,%rdi
    760b:	e8 14 fd ff ff       	call   7324 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>
    7610:	83 f0 01             	xor    $0x1,%eax
    7613:	84 c0                	test   %al,%al
    7615:	74 3b                	je     7652 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x66>
      throw std::runtime_error(
          "Validation layers requested but not available.");
    7617:	bf 10 00 00 00       	mov    $0x10,%edi
    761c:	e8 5f cb ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7621:	48 89 c3             	mov    %rax,%rbx
      throw std::runtime_error(
    7624:	48 8d 05 95 2c 01 00 	lea    0x12c95(%rip),%rax        # 1a2c0 <_ZN6__pstl9execution2v1L5unseqE+0x55>
    762b:	48 89 c6             	mov    %rax,%rsi
    762e:	48 89 df             	mov    %rbx,%rdi
    7631:	e8 da ca ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
          "Validation layers requested but not available.");
    7636:	48 8b 05 6b 19 02 00 	mov    0x2196b(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    763d:	48 89 c2             	mov    %rax,%rdx
    7640:	48 8d 05 f9 16 02 00 	lea    0x216f9(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7647:	48 89 c6             	mov    %rax,%rsi
    764a:	48 89 df             	mov    %rbx,%rdi
    764d:	e8 9e d1 ff ff       	call   47f0 <__cxa_throw@plt>
    }
  }

  // std::cout << enableValidationLayers << '\n';
  VkApplicationInfo appInfo{};
    7652:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7656:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    765a:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    765e:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    7662:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
  appInfo.pApplicationName = "Test Triangle";
    7669:	48 8d 05 7f 2c 01 00 	lea    0x12c7f(%rip),%rax        # 1a2ef <_ZN6__pstl9execution2v1L5unseqE+0x84>
    7670:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    7674:	c7 45 b8 00 00 40 00 	movl   $0x400000,-0x48(%rbp)
  appInfo.pEngineName = "No Engine";
    767b:	48 8d 05 7b 2c 01 00 	lea    0x12c7b(%rip),%rax        # 1a2fd <_ZN6__pstl9execution2v1L5unseqE+0x92>
    7682:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    7686:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_0;
    768d:	c7 45 cc 00 00 40 00 	movl   $0x400000,-0x34(%rbp)

  VkInstanceCreateInfo createInfo{};
    7694:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7698:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    769f:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    76a6:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    76aa:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    76ae:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    76b5:	00 00 00 
  createInfo.pApplicationInfo = &appInfo;
    76b8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    76bc:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  auto requiredExtensions = getRequiredExtensions();
    76c3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    76ca:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    76d1:	48 89 d6             	mov    %rdx,%rsi
    76d4:	48 89 c7             	mov    %rax,%rdi
    76d7:	e8 72 fb ff ff       	call   724e <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>
  createInfo.enabledExtensionCount =
      static_cast<uint32_t>(requiredExtensions.size());
    76dc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    76e3:	48 89 c7             	mov    %rax,%rdi
    76e6:	e8 e1 4e 00 00       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  createInfo.enabledExtensionCount =
    76eb:	89 45 90             	mov    %eax,-0x70(%rbp)
  createInfo.ppEnabledExtensionNames = requiredExtensions.data();
    76ee:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    76f5:	48 89 c7             	mov    %rax,%rdi
    76f8:	e8 f3 4e 00 00       	call   c5f0 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    76fd:	48 89 45 98          	mov    %rax,-0x68(%rbp)

  VkDebugUtilsMessengerCreateInfoEXT debugCreateInfo{};
    7701:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7705:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    770c:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    7713:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
  if (enableValidationLayers) {
    createInfo.enabledLayerCount =
        static_cast<uint32_t>(validationLayers.size());
    771a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7721:	48 83 c0 18          	add    $0x18,%rax
    7725:	48 89 c7             	mov    %rax,%rdi
    7728:	e8 9f 4e 00 00       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    createInfo.enabledLayerCount =
    772d:	89 45 80             	mov    %eax,-0x80(%rbp)
    createInfo.ppEnabledLayerNames = validationLayers.data();
    7730:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7737:	48 83 c0 18          	add    $0x18,%rax
    773b:	48 89 c7             	mov    %rax,%rdi
    773e:	e8 d1 4e 00 00       	call   c614 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    7743:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    populateDebugMessengerCreateInfo(debugCreateInfo);
    7747:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    774e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7755:	48 89 d6             	mov    %rdx,%rsi
    7758:	48 89 c7             	mov    %rax,%rdi
    775b:	e8 84 fd ff ff       	call   74e4 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    createInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    7760:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    7767:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  } else {
    createInfo.enabledLayerCount = 0;
    createInfo.pNext = nullptr;
  }

  if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    776e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7775:	48 8d 50 10          	lea    0x10(%rax),%rdx
    7779:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7780:	be 00 00 00 00       	mov    $0x0,%esi
    7785:	48 89 c7             	mov    %rax,%rdi
    7788:	e8 e3 cd ff ff       	call   4570 <vkCreateInstance@plt>
    778d:	85 c0                	test   %eax,%eax
    778f:	0f 95 c0             	setne  %al
    7792:	84 c0                	test   %al,%al
    7794:	74 3b                	je     77d1 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1e5>
    throw std::runtime_error("Failed to create instance.");
    7796:	bf 10 00 00 00       	mov    $0x10,%edi
    779b:	e8 e0 c9 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    77a0:	48 89 c3             	mov    %rax,%rbx
    77a3:	48 8d 05 5d 2b 01 00 	lea    0x12b5d(%rip),%rax        # 1a307 <_ZN6__pstl9execution2v1L5unseqE+0x9c>
    77aa:	48 89 c6             	mov    %rax,%rsi
    77ad:	48 89 df             	mov    %rbx,%rdi
    77b0:	e8 5b c9 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    77b5:	48 8b 05 ec 17 02 00 	mov    0x217ec(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    77bc:	48 89 c2             	mov    %rax,%rdx
    77bf:	48 8d 05 7a 15 02 00 	lea    0x2157a(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77c6:	48 89 c6             	mov    %rax,%rsi
    77c9:	48 89 df             	mov    %rbx,%rdi
    77cc:	e8 1f d0 ff ff       	call   47f0 <__cxa_throw@plt>

  auto supportedExtensions = getSupportedExtensions();
    77d1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    77d8:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    77df:	48 89 d6             	mov    %rdx,%rsi
    77e2:	48 89 c7             	mov    %rax,%rdi
    77e5:	e8 a6 f9 ff ff       	call   7190 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>
  std::cout << "Available extensions:\n";
    77ea:	48 8d 05 31 2b 01 00 	lea    0x12b31(%rip),%rax        # 1a322 <_ZN6__pstl9execution2v1L5unseqE+0xb7>
    77f1:	48 89 c6             	mov    %rax,%rsi
    77f4:	48 8d 05 85 1c 02 00 	lea    0x21c85(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    77fb:	48 89 c7             	mov    %rax,%rdi
    77fe:	e8 fd cb ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extension : supportedExtensions)
    7803:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    780a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    780e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7812:	48 89 c7             	mov    %rax,%rdi
    7815:	e8 1e 4e 00 00       	call   c638 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    781a:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    7821:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7825:	48 89 c7             	mov    %rax,%rdi
    7828:	e8 31 4e 00 00       	call   c65e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    782d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    7834:	eb 55                	jmp    788b <_ZN4rtvc17RenderApplication13creatInstanceEv+0x29f>
    7836:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    783d:	48 89 c7             	mov    %rax,%rdi
    7840:	e8 a1 4e 00 00       	call   c6e6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7845:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    std::cout << '\t' << extension.extensionName << '\n';
    7849:	be 09 00 00 00       	mov    $0x9,%esi
    784e:	48 8d 05 2b 1c 02 00 	lea    0x21c2b(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    7855:	48 89 c7             	mov    %rax,%rdi
    7858:	e8 d3 cc ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    785d:	48 89 c2             	mov    %rax,%rdx
    7860:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7864:	48 89 c6             	mov    %rax,%rsi
    7867:	48 89 d7             	mov    %rdx,%rdi
    786a:	e8 91 cb ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    786f:	be 0a 00 00 00       	mov    $0xa,%esi
    7874:	48 89 c7             	mov    %rax,%rdi
    7877:	e8 b4 cc ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : supportedExtensions)
    787c:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    7883:	48 89 c7             	mov    %rax,%rdi
    7886:	e8 37 4e 00 00       	call   c6c2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    788b:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    7892:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    7899:	48 89 d6             	mov    %rdx,%rsi
    789c:	48 89 c7             	mov    %rax,%rdi
    789f:	e8 e3 4d 00 00       	call   c687 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    78a4:	84 c0                	test   %al,%al
    78a6:	75 8e                	jne    7836 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x24a>
  std::cout << '\n';
    78a8:	be 0a 00 00 00       	mov    $0xa,%esi
    78ad:	48 8d 05 cc 1b 02 00 	lea    0x21bcc(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    78b4:	48 89 c7             	mov    %rax,%rdi
    78b7:	e8 74 cc ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  std::cout << "Required extensions:\n";
    78bc:	48 8d 05 76 2a 01 00 	lea    0x12a76(%rip),%rax        # 1a339 <_ZN6__pstl9execution2v1L5unseqE+0xce>
    78c3:	48 89 c6             	mov    %rax,%rsi
    78c6:	48 8d 05 b3 1b 02 00 	lea    0x21bb3(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    78cd:	48 89 c7             	mov    %rax,%rdi
    78d0:	e8 2b cb ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extension : requiredExtensions)
    78d5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    78dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    78e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78e4:	48 89 c7             	mov    %rax,%rdi
    78e7:	e8 0c 4e 00 00       	call   c6f8 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    78ec:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    78f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78f7:	48 89 c7             	mov    %rax,%rdi
    78fa:	e8 1f 4e 00 00       	call   c71e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    78ff:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    7906:	eb 58                	jmp    7960 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x374>
    7908:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    790f:	48 89 c7             	mov    %rax,%rdi
    7912:	e8 8b 4e 00 00       	call   c7a2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    7917:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    std::cout << '\t' << extension << '\n';
    791b:	be 09 00 00 00       	mov    $0x9,%esi
    7920:	48 8d 05 59 1b 02 00 	lea    0x21b59(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    7927:	48 89 c7             	mov    %rax,%rdi
    792a:	e8 01 cc ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    792f:	48 89 c2             	mov    %rax,%rdx
    7932:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7936:	48 8b 00             	mov    (%rax),%rax
    7939:	48 89 c6             	mov    %rax,%rsi
    793c:	48 89 d7             	mov    %rdx,%rdi
    793f:	e8 bc ca ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7944:	be 0a 00 00 00       	mov    $0xa,%esi
    7949:	48 89 c7             	mov    %rax,%rdi
    794c:	e8 df cb ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : requiredExtensions)
    7951:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    7958:	48 89 c7             	mov    %rax,%rdi
    795b:	e8 22 4e 00 00       	call   c782 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    7960:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    7967:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    796e:	48 89 d6             	mov    %rdx,%rsi
    7971:	48 89 c7             	mov    %rax,%rdi
    7974:	e8 ce 4d 00 00       	call   c747 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    7979:	84 c0                	test   %al,%al
    797b:	75 8b                	jne    7908 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x31c>
  std::cout << '\n';
    797d:	be 0a 00 00 00       	mov    $0xa,%esi
    7982:	48 8d 05 f7 1a 02 00 	lea    0x21af7(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    7989:	48 89 c7             	mov    %rax,%rdi
    798c:	e8 9f cb ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
}
    7991:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7998:	48 89 c7             	mov    %rax,%rdi
    799b:	e8 36 48 00 00       	call   c1d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    79a0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    79a7:	48 89 c7             	mov    %rax,%rdi
    79aa:	e8 51 d9 ff ff       	call   5300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    79af:	eb 57                	jmp    7a08 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x41c>
          "Validation layers requested but not available.");
    79b1:	49 89 c4             	mov    %rax,%r12
    79b4:	48 89 df             	mov    %rbx,%rdi
    79b7:	e8 c4 c8 ff ff       	call   4280 <__cxa_free_exception@plt>
    79bc:	4c 89 e0             	mov    %r12,%rax
    79bf:	48 89 c7             	mov    %rax,%rdi
    79c2:	e8 79 ce ff ff       	call   4840 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create instance.");
    79c7:	49 89 c4             	mov    %rax,%r12
    79ca:	48 89 df             	mov    %rbx,%rdi
    79cd:	e8 ae c8 ff ff       	call   4280 <__cxa_free_exception@plt>
    79d2:	4c 89 e3             	mov    %r12,%rbx
    79d5:	eb 17                	jmp    79ee <_ZN4rtvc17RenderApplication13creatInstanceEv+0x402>
}
    79d7:	48 89 c3             	mov    %rax,%rbx
    79da:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    79e1:	48 89 c7             	mov    %rax,%rdi
    79e4:	e8 ed 47 00 00       	call   c1d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    79e9:	eb 03                	jmp    79ee <_ZN4rtvc17RenderApplication13creatInstanceEv+0x402>
    79eb:	48 89 c3             	mov    %rax,%rbx
    79ee:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    79f5:	48 89 c7             	mov    %rax,%rdi
    79f8:	e8 03 d9 ff ff       	call   5300 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    79fd:	48 89 d8             	mov    %rbx,%rax
    7a00:	48 89 c7             	mov    %rax,%rdi
    7a03:	e8 38 ce ff ff       	call   4840 <_Unwind_Resume@plt>
    7a08:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
    7a0f:	5b                   	pop    %rbx
    7a10:	41 5c                	pop    %r12
    7a12:	5d                   	pop    %rbp
    7a13:	c3                   	ret

0000000000007a14 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool rtvc::RenderApplication::checkDeviceExtensionSupport(
    VkPhysicalDevice device) {
    7a14:	55                   	push   %rbp
    7a15:	48 89 e5             	mov    %rsp,%rbp
    7a18:	53                   	push   %rbx
    7a19:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    7a20:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    7a27:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  uint32_t extensionCount;
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7a2e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    7a32:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7a39:	b9 00 00 00 00       	mov    $0x0,%ecx
    7a3e:	be 00 00 00 00       	mov    $0x0,%esi
    7a43:	48 89 c7             	mov    %rax,%rdi
    7a46:	e8 15 cc ff ff       	call   4660 <vkEnumerateDeviceExtensionProperties@plt>
                                       nullptr);

  std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    7a4b:	8b 45 a8             	mov    -0x58(%rbp),%eax
    7a4e:	89 c3                	mov    %eax,%ebx
    7a50:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    7a54:	48 89 c7             	mov    %rax,%rdi
    7a57:	e8 cc 46 00 00       	call   c128 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    7a5c:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
    7a60:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7a64:	48 89 de             	mov    %rbx,%rsi
    7a67:	48 89 c7             	mov    %rax,%rdi
    7a6a:	e8 f1 46 00 00       	call   c160 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    7a6f:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    7a73:	48 89 c7             	mov    %rax,%rdi
    7a76:	e8 c9 46 00 00       	call   c144 <_ZNSaI21VkExtensionPropertiesED1Ev>
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    7a7b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7a7f:	48 89 c7             	mov    %rax,%rdi
    7a82:	e8 93 47 00 00       	call   c21a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7a87:	48 89 c1             	mov    %rax,%rcx
    7a8a:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    7a8e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7a95:	be 00 00 00 00       	mov    $0x0,%esi
    7a9a:	48 89 c7             	mov    %rax,%rdi
    7a9d:	e8 be cb ff ff       	call   4660 <vkEnumerateDeviceExtensionProperties@plt>
                                       availableExtensions.data());

  std::set<std::string> requiredExtensions{deviceExtensions.begin(),
    7aa2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7aa9:	48 83 c0 60          	add    $0x60,%rax
    7aad:	48 89 c7             	mov    %rax,%rdi
    7ab0:	e8 9b 49 00 00       	call   c450 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    7ab5:	48 89 c3             	mov    %rax,%rbx
                                           deviceExtensions.end()};
    7ab8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7abf:	48 83 c0 60          	add    $0x60,%rax
    7ac3:	48 89 c7             	mov    %rax,%rdi
    7ac6:	e8 ab 49 00 00       	call   c476 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    7acb:	48 89 c2             	mov    %rax,%rdx
    7ace:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7ad5:	48 89 de             	mov    %rbx,%rsi
    7ad8:	48 89 c7             	mov    %rax,%rdi
    7adb:	e8 0c 4d 00 00       	call   c7ec <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>

  for (const auto &extension : availableExtensions)
    7ae0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7ae4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7ae8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7aec:	48 89 c7             	mov    %rax,%rdi
    7aef:	e8 44 4b 00 00       	call   c638 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    7af4:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    7afb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7aff:	48 89 c7             	mov    %rax,%rdi
    7b02:	e8 57 4b 00 00       	call   c65e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    7b07:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7b0e:	eb 73                	jmp    7b83 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x16f>
    7b10:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    7b17:	48 89 c7             	mov    %rax,%rdi
    7b1a:	e8 c7 4b 00 00       	call   c6e6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7b1f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    requiredExtensions.erase(extension.extensionName);
    7b23:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7b27:	48 89 c7             	mov    %rax,%rdi
    7b2a:	e8 21 cd ff ff       	call   4850 <_ZNSaIcEC1Ev@plt>
    7b2f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7b33:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    7b37:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7b3b:	48 89 ce             	mov    %rcx,%rsi
    7b3e:	48 89 c7             	mov    %rax,%rdi
    7b41:	e8 0c 45 00 00       	call   c052 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7b46:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    7b4a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7b51:	48 89 d6             	mov    %rdx,%rsi
    7b54:	48 89 c7             	mov    %rax,%rdi
    7b57:	e8 38 4d 00 00       	call   c894 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    7b5c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7b60:	48 89 c7             	mov    %rax,%rdi
    7b63:	e8 c8 c6 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7b68:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7b6c:	48 89 c7             	mov    %rax,%rdi
    7b6f:	e8 3c c9 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
  for (const auto &extension : availableExtensions)
    7b74:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    7b7b:	48 89 c7             	mov    %rax,%rdi
    7b7e:	e8 3f 4b 00 00       	call   c6c2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7b83:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    7b8a:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    7b91:	48 89 d6             	mov    %rdx,%rsi
    7b94:	48 89 c7             	mov    %rax,%rdi
    7b97:	e8 eb 4a 00 00       	call   c687 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7b9c:	84 c0                	test   %al,%al
    7b9e:	0f 85 6c ff ff ff    	jne    7b10 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0xfc>

  return requiredExtensions.empty();
    7ba4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7bab:	48 89 c7             	mov    %rax,%rdi
    7bae:	e8 07 4d 00 00       	call   c8ba <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>
    7bb3:	89 c3                	mov    %eax,%ebx
    7bb5:	90                   	nop
}
    7bb6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7bbd:	48 89 c7             	mov    %rax,%rdi
    7bc0:	e8 fd 41 00 00       	call   bdc2 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    7bc5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7bc9:	48 89 c7             	mov    %rax,%rdi
    7bcc:	e8 05 46 00 00       	call   c1d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
  return requiredExtensions.empty();
    7bd1:	89 d8                	mov    %ebx,%eax
    7bd3:	eb 65                	jmp    7c3a <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x226>
  std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    7bd5:	48 89 c3             	mov    %rax,%rbx
    7bd8:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    7bdc:	48 89 c7             	mov    %rax,%rdi
    7bdf:	e8 60 45 00 00       	call   c144 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7be4:	48 89 d8             	mov    %rbx,%rax
    7be7:	48 89 c7             	mov    %rax,%rdi
    7bea:	e8 51 cc ff ff       	call   4840 <_Unwind_Resume@plt>
    requiredExtensions.erase(extension.extensionName);
    7bef:	48 89 c3             	mov    %rax,%rbx
    7bf2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7bf6:	48 89 c7             	mov    %rax,%rdi
    7bf9:	e8 32 c6 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7bfe:	eb 03                	jmp    7c03 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x1ef>
    7c00:	48 89 c3             	mov    %rax,%rbx
    7c03:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7c07:	48 89 c7             	mov    %rax,%rdi
    7c0a:	e8 a1 c8 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
}
    7c0f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7c16:	48 89 c7             	mov    %rax,%rdi
    7c19:	e8 a4 41 00 00       	call   bdc2 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    7c1e:	eb 03                	jmp    7c23 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x20f>
    7c20:	48 89 c3             	mov    %rax,%rbx
    7c23:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7c27:	48 89 c7             	mov    %rax,%rdi
    7c2a:	e8 a7 45 00 00       	call   c1d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7c2f:	48 89 d8             	mov    %rbx,%rax
    7c32:	48 89 c7             	mov    %rax,%rdi
    7c35:	e8 06 cc ff ff       	call   4840 <_Unwind_Resume@plt>
    7c3a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c3e:	c9                   	leave
    7c3f:	c3                   	ret

0000000000007c40 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>:

rtvc::RenderApplication::SwapChainSupportDetails
rtvc::RenderApplication::querySwapChainSupport(VkPhysicalDevice device) {
    7c40:	55                   	push   %rbp
    7c41:	48 89 e5             	mov    %rsp,%rbp
    7c44:	53                   	push   %rbx
    7c45:	48 83 ec 38          	sub    $0x38,%rsp
    7c49:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7c4d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7c51:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  SwapChainSupportDetails details;
    7c55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c59:	48 89 c7             	mov    %rax,%rdi
    7c5c:	e8 25 42 00 00       	call   be86 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsC1Ev>

  vkGetPhysicalDeviceSurfaceCapabilitiesKHR(device, surface,
    7c61:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7c65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c69:	48 8b 48 50          	mov    0x50(%rax),%rcx
    7c6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c71:	48 89 ce             	mov    %rcx,%rsi
    7c74:	48 89 c7             	mov    %rax,%rdi
    7c77:	e8 e4 c6 ff ff       	call   4360 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
                                            &details.capabilities);

  uint32_t formatCount;
  vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount, nullptr);
    7c7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c80:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7c84:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    7c88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c8c:	b9 00 00 00 00       	mov    $0x0,%ecx
    7c91:	48 89 c7             	mov    %rax,%rdi
    7c94:	e8 47 c9 ff ff       	call   45e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
  if (formatCount != 0) {
    7c99:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7c9c:	85 c0                	test   %eax,%eax
    7c9e:	74 43                	je     7ce3 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xa3>
    details.formats.resize(formatCount);
    7ca0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ca4:	48 83 c0 38          	add    $0x38,%rax
    7ca8:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7cab:	89 d2                	mov    %edx,%edx
    7cad:	48 89 d6             	mov    %rdx,%rsi
    7cb0:	48 89 c7             	mov    %rax,%rdi
    7cb3:	e8 c8 4d 00 00       	call   ca80 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>
    vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount,
    7cb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cbc:	48 83 c0 38          	add    $0x38,%rax
    7cc0:	48 89 c7             	mov    %rax,%rdi
    7cc3:	e8 3e 4e 00 00       	call   cb06 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    7cc8:	48 89 c1             	mov    %rax,%rcx
    7ccb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ccf:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7cd3:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    7cd7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7cdb:	48 89 c7             	mov    %rax,%rdi
    7cde:	e8 fd c8 ff ff       	call   45e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                         details.formats.data());
  }

  uint32_t presentModeCount;
  vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount,
    7ce3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ce7:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7ceb:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7cef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7cf3:	b9 00 00 00 00       	mov    $0x0,%ecx
    7cf8:	48 89 c7             	mov    %rax,%rdi
    7cfb:	e8 f0 c8 ff ff       	call   45f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
                                            nullptr);
  if (presentModeCount != 0) {
    7d00:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7d03:	85 c0                	test   %eax,%eax
    7d05:	74 5f                	je     7d66 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
    details.presentModes.resize(presentModeCount);
    7d07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d0b:	48 83 c0 50          	add    $0x50,%rax
    7d0f:	8b 55 e8             	mov    -0x18(%rbp),%edx
    7d12:	89 d2                	mov    %edx,%edx
    7d14:	48 89 d6             	mov    %rdx,%rsi
    7d17:	48 89 c7             	mov    %rax,%rdi
    7d1a:	e8 0b 4e 00 00       	call   cb2a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>
    vkGetPhysicalDeviceSurfacePresentModesKHR(
    7d1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d23:	48 83 c0 50          	add    $0x50,%rax
    7d27:	48 89 c7             	mov    %rax,%rdi
    7d2a:	e8 81 4e 00 00       	call   cbb0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7d2f:	48 89 c1             	mov    %rax,%rcx
    7d32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d36:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7d3a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7d3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d42:	48 89 c7             	mov    %rax,%rdi
    7d45:	e8 a6 c8 ff ff       	call   45f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
        device, surface, &presentModeCount, details.presentModes.data());
  }

  return details;
    7d4a:	eb 1a                	jmp    7d66 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
}
    7d4c:	48 89 c3             	mov    %rax,%rbx
    7d4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d53:	48 89 c7             	mov    %rax,%rdi
    7d56:	e8 5b 41 00 00       	call   beb6 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    7d5b:	48 89 d8             	mov    %rbx,%rax
    7d5e:	48 89 c7             	mov    %rax,%rdi
    7d61:	e8 da ca ff ff       	call   4840 <_Unwind_Resume@plt>
  return details;
    7d66:	90                   	nop
}
    7d67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d6f:	c9                   	leave
    7d70:	c3                   	ret
    7d71:	90                   	nop

0000000000007d72 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>:

bool rtvc::RenderApplication::isSuitableDevice(VkPhysicalDevice device) {
    7d72:	55                   	push   %rbp
    7d73:	48 89 e5             	mov    %rsp,%rbp
    7d76:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    7d7d:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    7d84:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  QueueFamilyIndices indices = findQueueFamilies(device);
    7d8b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7d92:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7d99:	48 89 d6             	mov    %rdx,%rsi
    7d9c:	48 89 c7             	mov    %rax,%rdi
    7d9f:	e8 28 06 00 00       	call   83cc <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    7da4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7da8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

  bool extensionsSupported = checkDeviceExtensionSupport(device);
    7dac:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7db3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7dba:	48 89 d6             	mov    %rdx,%rsi
    7dbd:	48 89 c7             	mov    %rax,%rdi
    7dc0:	e8 4f fc ff ff       	call   7a14 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    7dc5:	88 45 fe             	mov    %al,-0x2(%rbp)

  bool swapChainAdequate = false;
    7dc8:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  if (extensionsSupported) {
    7dcc:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    7dd0:	74 72                	je     7e44 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xd2>
    SwapChainSupportDetails swapChainSupport = querySwapChainSupport(device);
    7dd2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7dd9:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7de0:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    7de7:	48 89 ce             	mov    %rcx,%rsi
    7dea:	48 89 c7             	mov    %rax,%rdi
    7ded:	e8 4e fe ff ff       	call   7c40 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
    swapChainAdequate = !swapChainSupport.formats.empty() &&
    7df2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7df9:	48 83 c0 38          	add    $0x38,%rax
    7dfd:	48 89 c7             	mov    %rax,%rdi
    7e00:	e8 cf 4d 00 00       	call   cbd4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    7e05:	83 f0 01             	xor    $0x1,%eax
    7e08:	84 c0                	test   %al,%al
    7e0a:	74 21                	je     7e2d <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
                        !swapChainSupport.presentModes.empty();
    7e0c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7e13:	48 83 c0 50          	add    $0x50,%rax
    7e17:	48 89 c7             	mov    %rax,%rdi
    7e1a:	e8 f7 4d 00 00       	call   cc16 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>
    7e1f:	83 f0 01             	xor    $0x1,%eax
    swapChainAdequate = !swapChainSupport.formats.empty() &&
    7e22:	84 c0                	test   %al,%al
    7e24:	74 07                	je     7e2d <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
    7e26:	b8 01 00 00 00       	mov    $0x1,%eax
    7e2b:	eb 05                	jmp    7e32 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xc0>
    7e2d:	b8 00 00 00 00       	mov    $0x0,%eax
    7e32:	88 45 ff             	mov    %al,-0x1(%rbp)
  }
    7e35:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7e3c:	48 89 c7             	mov    %rax,%rdi
    7e3f:	e8 72 40 00 00       	call   beb6 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>

  return indices.isComplete() && extensionsSupported && swapChainAdequate;
    7e44:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7e48:	48 89 c7             	mov    %rax,%rdi
    7e4b:	e8 18 3f 00 00       	call   bd68 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>
    7e50:	84 c0                	test   %al,%al
    7e52:	74 13                	je     7e67 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    7e54:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    7e58:	74 0d                	je     7e67 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    7e5a:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    7e5e:	74 07                	je     7e67 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    7e60:	b8 01 00 00 00       	mov    $0x1,%eax
    7e65:	eb 05                	jmp    7e6c <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xfa>
    7e67:	b8 00 00 00 00       	mov    $0x0,%eax
}
    7e6c:	c9                   	leave
    7e6d:	c3                   	ret

0000000000007e6e <_ZN4rtvc17RenderApplication21rateDeviceSuitabilityEP18VkPhysicalDevice_T>:

int rtvc::RenderApplication::rateDeviceSuitability(
    [[maybe_unused]] VkPhysicalDevice device) {
    7e6e:	55                   	push   %rbp
    7e6f:	48 89 e5             	mov    %rsp,%rbp
    7e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return 0;
    7e7a:	b8 00 00 00 00       	mov    $0x0,%eax
}
    7e7f:	5d                   	pop    %rbp
    7e80:	c3                   	ret
    7e81:	90                   	nop

0000000000007e82 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>:

void rtvc::RenderApplication::selectPhysicalDevice() {
    7e82:	55                   	push   %rbp
    7e83:	48 89 e5             	mov    %rsp,%rbp
    7e86:	41 54                	push   %r12
    7e88:	53                   	push   %rbx
    7e89:	48 81 ec a0 03 00 00 	sub    $0x3a0,%rsp
    7e90:	48 89 bd 58 fc ff ff 	mov    %rdi,-0x3a8(%rbp)
  uint32_t deviceCount = 0;
    7e97:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
  vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    7e9e:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    7ea5:	48 8b 40 10          	mov    0x10(%rax),%rax
    7ea9:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    7ead:	ba 00 00 00 00       	mov    $0x0,%edx
    7eb2:	48 89 ce             	mov    %rcx,%rsi
    7eb5:	48 89 c7             	mov    %rax,%rdi
    7eb8:	e8 03 c3 ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>

  if (deviceCount == 0)
    7ebd:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7ec0:	85 c0                	test   %eax,%eax
    7ec2:	75 3b                	jne    7eff <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x7d>
    throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    7ec4:	bf 10 00 00 00       	mov    $0x10,%edi
    7ec9:	e8 b2 c2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7ece:	48 89 c3             	mov    %rax,%rbx
    7ed1:	48 8d 05 78 24 01 00 	lea    0x12478(%rip),%rax        # 1a350 <_ZN6__pstl9execution2v1L5unseqE+0xe5>
    7ed8:	48 89 c6             	mov    %rax,%rsi
    7edb:	48 89 df             	mov    %rbx,%rdi
    7ede:	e8 2d c2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    7ee3:	48 8b 05 be 10 02 00 	mov    0x210be(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7eea:	48 89 c2             	mov    %rax,%rdx
    7eed:	48 8d 05 4c 0e 02 00 	lea    0x20e4c(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7ef4:	48 89 c6             	mov    %rax,%rsi
    7ef7:	48 89 df             	mov    %rbx,%rdi
    7efa:	e8 f1 c8 ff ff       	call   47f0 <__cxa_throw@plt>

  std::vector<VkPhysicalDevice> devices{deviceCount};
    7eff:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7f02:	89 c3                	mov    %eax,%ebx
    7f04:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7f08:	48 89 c7             	mov    %rax,%rdi
    7f0b:	e8 48 4d 00 00       	call   cc58 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    7f10:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    7f14:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7f18:	48 89 de             	mov    %rbx,%rsi
    7f1b:	48 89 c7             	mov    %rax,%rdi
    7f1e:	e8 6d 4d 00 00       	call   cc90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7f23:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7f27:	48 89 c7             	mov    %rax,%rdi
    7f2a:	e8 45 4d 00 00       	call   cc74 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  vkEnumeratePhysicalDevices(instance, &deviceCount, devices.data());
    7f2f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7f33:	48 89 c7             	mov    %rax,%rdi
    7f36:	e8 0f 4e 00 00       	call   cd4a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    7f3b:	48 89 c2             	mov    %rax,%rdx
    7f3e:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    7f45:	48 8b 40 10          	mov    0x10(%rax),%rax
    7f49:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    7f4d:	48 89 ce             	mov    %rcx,%rsi
    7f50:	48 89 c7             	mov    %rax,%rdi
    7f53:	e8 68 c2 ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>

  int noDeviceSelected = true;
    7f58:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)

  std::cout << "Found " << devices.size() << " GPUs with Vulkan support:\n";
    7f5f:	48 8d 05 13 24 01 00 	lea    0x12413(%rip),%rax        # 1a379 <_ZN6__pstl9execution2v1L5unseqE+0x10e>
    7f66:	48 89 c6             	mov    %rax,%rsi
    7f69:	48 8d 05 10 15 02 00 	lea    0x21510(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    7f70:	48 89 c7             	mov    %rax,%rdi
    7f73:	e8 88 c4 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7f78:	48 89 c3             	mov    %rax,%rbx
    7f7b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7f7f:	48 89 c7             	mov    %rax,%rdi
    7f82:	e8 e7 4d 00 00       	call   cd6e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    7f87:	48 89 c6             	mov    %rax,%rsi
    7f8a:	48 89 df             	mov    %rbx,%rdi
    7f8d:	e8 0e c1 ff ff       	call   40a0 <_ZNSolsEm@plt>
    7f92:	48 89 c2             	mov    %rax,%rdx
    7f95:	48 8d 05 e4 23 01 00 	lea    0x123e4(%rip),%rax        # 1a380 <_ZN6__pstl9execution2v1L5unseqE+0x115>
    7f9c:	48 89 c6             	mov    %rax,%rsi
    7f9f:	48 89 d7             	mov    %rdx,%rdi
    7fa2:	e8 59 c4 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (size_t i = 0; i < devices.size(); ++i) {
    7fa7:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    7fae:	00 
    7faf:	e9 af 02 00 00       	jmp    8263 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x3e1>
    VkPhysicalDeviceProperties properties{};
    7fb4:	48 8d 95 60 fc ff ff 	lea    -0x3a0(%rbp),%rdx
    7fbb:	b8 00 00 00 00       	mov    $0x0,%eax
    7fc0:	b9 67 00 00 00       	mov    $0x67,%ecx
    7fc5:	48 89 d7             	mov    %rdx,%rdi
    7fc8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vkGetPhysicalDeviceProperties(devices[i], &properties);
    7fcb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7fcf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7fd3:	48 89 d6             	mov    %rdx,%rsi
    7fd6:	48 89 c7             	mov    %rax,%rdi
    7fd9:	e8 b4 4d 00 00       	call   cd92 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    7fde:	48 8b 00             	mov    (%rax),%rax
    7fe1:	48 8d 95 60 fc ff ff 	lea    -0x3a0(%rbp),%rdx
    7fe8:	48 89 d6             	mov    %rdx,%rsi
    7feb:	48 89 c7             	mov    %rax,%rdi
    7fee:	e8 2d c1 ff ff       	call   4120 <vkGetPhysicalDeviceProperties@plt>

    std::cout << "GPU " << i;
    7ff3:	48 8d 05 a2 23 01 00 	lea    0x123a2(%rip),%rax        # 1a39c <_ZN6__pstl9execution2v1L5unseqE+0x131>
    7ffa:	48 89 c6             	mov    %rax,%rsi
    7ffd:	48 8d 05 7c 14 02 00 	lea    0x2147c(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    8004:	48 89 c7             	mov    %rax,%rdi
    8007:	e8 f4 c3 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    800c:	48 89 c2             	mov    %rax,%rdx
    800f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8013:	48 89 c6             	mov    %rax,%rsi
    8016:	48 89 d7             	mov    %rdx,%rdi
    8019:	e8 82 c0 ff ff       	call   40a0 <_ZNSolsEm@plt>
    if (noDeviceSelected) {
    801e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8022:	74 6d                	je     8091 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x20f>
      if (isSuitableDevice(devices[i])) {
    8024:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8028:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    802c:	48 89 d6             	mov    %rdx,%rsi
    802f:	48 89 c7             	mov    %rax,%rdi
    8032:	e8 5b 4d 00 00       	call   cd92 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    8037:	48 8b 10             	mov    (%rax),%rdx
    803a:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    8041:	48 89 d6             	mov    %rdx,%rsi
    8044:	48 89 c7             	mov    %rax,%rdi
    8047:	e8 26 fd ff ff       	call   7d72 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>
    804c:	84 c0                	test   %al,%al
    804e:	74 41                	je     8091 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x20f>
        physicalDevice = devices[i];
    8050:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8054:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8058:	48 89 d6             	mov    %rdx,%rsi
    805b:	48 89 c7             	mov    %rax,%rdi
    805e:	e8 2f 4d 00 00       	call   cd92 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    8063:	48 8b 10             	mov    (%rax),%rdx
    8066:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    806d:	48 89 50 38          	mov    %rdx,0x38(%rax)
        std::cout << " (Selected)";
    8071:	48 8d 05 29 23 01 00 	lea    0x12329(%rip),%rax        # 1a3a1 <_ZN6__pstl9execution2v1L5unseqE+0x136>
    8078:	48 89 c6             	mov    %rax,%rsi
    807b:	48 8d 05 fe 13 02 00 	lea    0x213fe(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    8082:	48 89 c7             	mov    %rax,%rdi
    8085:	e8 76 c3 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
        noDeviceSelected = false;
    808a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
      }
    }

    std::cout << ":\n";
    8091:	48 8d 05 15 23 01 00 	lea    0x12315(%rip),%rax        # 1a3ad <_ZN6__pstl9execution2v1L5unseqE+0x142>
    8098:	48 89 c6             	mov    %rax,%rsi
    809b:	48 8d 05 de 13 02 00 	lea    0x213de(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    80a2:	48 89 c7             	mov    %rax,%rdi
    80a5:	e8 56 c3 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    std::cout << "\tAPI version: "
    80aa:	48 8d 05 ff 22 01 00 	lea    0x122ff(%rip),%rax        # 1a3b0 <_ZN6__pstl9execution2v1L5unseqE+0x145>
    80b1:	48 89 c6             	mov    %rax,%rsi
    80b4:	48 8d 05 c5 13 02 00 	lea    0x213c5(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    80bb:	48 89 c7             	mov    %rax,%rdi
    80be:	e8 3d c3 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    80c3:	48 89 c2             	mov    %rax,%rdx
              << VK_API_VERSION_MAJOR(properties.apiVersion) << '.'
    80c6:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
    80cc:	c1 e8 16             	shr    $0x16,%eax
    80cf:	83 e0 7f             	and    $0x7f,%eax
    80d2:	89 c6                	mov    %eax,%esi
    80d4:	48 89 d7             	mov    %rdx,%rdi
    80d7:	e8 44 c5 ff ff       	call   4620 <_ZNSolsEj@plt>
    80dc:	be 2e 00 00 00       	mov    $0x2e,%esi
    80e1:	48 89 c7             	mov    %rax,%rdi
    80e4:	e8 47 c4 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    80e9:	48 89 c2             	mov    %rax,%rdx
              << VK_API_VERSION_MINOR(properties.apiVersion) << '.'
    80ec:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
    80f2:	c1 e8 0c             	shr    $0xc,%eax
    80f5:	25 ff 03 00 00       	and    $0x3ff,%eax
    80fa:	89 c6                	mov    %eax,%esi
    80fc:	48 89 d7             	mov    %rdx,%rdi
    80ff:	e8 1c c5 ff ff       	call   4620 <_ZNSolsEj@plt>
    8104:	be 2e 00 00 00       	mov    $0x2e,%esi
    8109:	48 89 c7             	mov    %rax,%rdi
    810c:	e8 1f c4 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    8111:	48 89 c2             	mov    %rax,%rdx
              << VK_API_VERSION_PATCH(properties.apiVersion) << '\n';
    8114:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
    811a:	25 ff 0f 00 00       	and    $0xfff,%eax
    811f:	89 c6                	mov    %eax,%esi
    8121:	48 89 d7             	mov    %rdx,%rdi
    8124:	e8 f7 c4 ff ff       	call   4620 <_ZNSolsEj@plt>
    8129:	be 0a 00 00 00       	mov    $0xa,%esi
    812e:	48 89 c7             	mov    %rax,%rdi
    8131:	e8 fa c3 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDriver version: " << properties.driverVersion << '\n';
    8136:	48 8d 05 82 22 01 00 	lea    0x12282(%rip),%rax        # 1a3bf <_ZN6__pstl9execution2v1L5unseqE+0x154>
    813d:	48 89 c6             	mov    %rax,%rsi
    8140:	48 8d 05 39 13 02 00 	lea    0x21339(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    8147:	48 89 c7             	mov    %rax,%rdi
    814a:	e8 b1 c2 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    814f:	48 89 c2             	mov    %rax,%rdx
    8152:	8b 85 64 fc ff ff    	mov    -0x39c(%rbp),%eax
    8158:	89 c6                	mov    %eax,%esi
    815a:	48 89 d7             	mov    %rdx,%rdi
    815d:	e8 be c4 ff ff       	call   4620 <_ZNSolsEj@plt>
    8162:	be 0a 00 00 00       	mov    $0xa,%esi
    8167:	48 89 c7             	mov    %rax,%rdi
    816a:	e8 c1 c3 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tVendor ID: " << properties.vendorID << '\n';
    816f:	48 8d 05 5b 22 01 00 	lea    0x1225b(%rip),%rax        # 1a3d1 <_ZN6__pstl9execution2v1L5unseqE+0x166>
    8176:	48 89 c6             	mov    %rax,%rsi
    8179:	48 8d 05 00 13 02 00 	lea    0x21300(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    8180:	48 89 c7             	mov    %rax,%rdi
    8183:	e8 78 c2 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8188:	48 89 c2             	mov    %rax,%rdx
    818b:	8b 85 68 fc ff ff    	mov    -0x398(%rbp),%eax
    8191:	89 c6                	mov    %eax,%esi
    8193:	48 89 d7             	mov    %rdx,%rdi
    8196:	e8 85 c4 ff ff       	call   4620 <_ZNSolsEj@plt>
    819b:	be 0a 00 00 00       	mov    $0xa,%esi
    81a0:	48 89 c7             	mov    %rax,%rdi
    81a3:	e8 88 c3 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDevice ID: " << properties.deviceID << '\n';
    81a8:	48 8d 05 2f 22 01 00 	lea    0x1222f(%rip),%rax        # 1a3de <_ZN6__pstl9execution2v1L5unseqE+0x173>
    81af:	48 89 c6             	mov    %rax,%rsi
    81b2:	48 8d 05 c7 12 02 00 	lea    0x212c7(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    81b9:	48 89 c7             	mov    %rax,%rdi
    81bc:	e8 3f c2 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    81c1:	48 89 c2             	mov    %rax,%rdx
    81c4:	8b 85 6c fc ff ff    	mov    -0x394(%rbp),%eax
    81ca:	89 c6                	mov    %eax,%esi
    81cc:	48 89 d7             	mov    %rdx,%rdi
    81cf:	e8 4c c4 ff ff       	call   4620 <_ZNSolsEj@plt>
    81d4:	be 0a 00 00 00       	mov    $0xa,%esi
    81d9:	48 89 c7             	mov    %rax,%rdi
    81dc:	e8 4f c3 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDevice type: " << properties.deviceType << '\n';
    81e1:	48 8d 05 03 22 01 00 	lea    0x12203(%rip),%rax        # 1a3eb <_ZN6__pstl9execution2v1L5unseqE+0x180>
    81e8:	48 89 c6             	mov    %rax,%rsi
    81eb:	48 8d 05 8e 12 02 00 	lea    0x2128e(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    81f2:	48 89 c7             	mov    %rax,%rdi
    81f5:	e8 06 c2 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    81fa:	8b 95 70 fc ff ff    	mov    -0x390(%rbp),%edx
    8200:	89 d6                	mov    %edx,%esi
    8202:	48 89 c7             	mov    %rax,%rdi
    8205:	e8 f6 c5 ff ff       	call   4800 <_ZNSolsEi@plt>
    820a:	be 0a 00 00 00       	mov    $0xa,%esi
    820f:	48 89 c7             	mov    %rax,%rdi
    8212:	e8 19 c3 ff ff       	call   4530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDevice name: " << properties.deviceName << "\n\n";
    8217:	48 8d 05 dc 21 01 00 	lea    0x121dc(%rip),%rax        # 1a3fa <_ZN6__pstl9execution2v1L5unseqE+0x18f>
    821e:	48 89 c6             	mov    %rax,%rsi
    8221:	48 8d 05 58 12 02 00 	lea    0x21258(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    8228:	48 89 c7             	mov    %rax,%rdi
    822b:	e8 d0 c1 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8230:	48 89 c2             	mov    %rax,%rdx
    8233:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
    823a:	48 83 c0 14          	add    $0x14,%rax
    823e:	48 89 c6             	mov    %rax,%rsi
    8241:	48 89 d7             	mov    %rdx,%rdi
    8244:	e8 b7 c1 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8249:	48 89 c2             	mov    %rax,%rdx
    824c:	48 8d 05 b6 21 01 00 	lea    0x121b6(%rip),%rax        # 1a409 <_ZN6__pstl9execution2v1L5unseqE+0x19e>
    8253:	48 89 c6             	mov    %rax,%rsi
    8256:	48 89 d7             	mov    %rdx,%rdi
    8259:	e8 a2 c1 ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (size_t i = 0; i < devices.size(); ++i) {
    825e:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    8263:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8267:	48 89 c7             	mov    %rax,%rdi
    826a:	e8 ff 4a 00 00       	call   cd6e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    826f:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    8273:	0f 92 c0             	setb   %al
    8276:	84 c0                	test   %al,%al
    8278:	0f 85 36 fd ff ff    	jne    7fb4 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x132>
  }

  for (const auto &device : devices) {
    827e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8282:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8286:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    828a:	48 89 c7             	mov    %rax,%rdi
    828d:	e8 20 4b 00 00       	call   cdb2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    8292:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8296:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    829a:	48 89 c7             	mov    %rax,%rdi
    829d:	e8 36 4b 00 00       	call   cdd8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    82a2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    82a6:	eb 4d                	jmp    82f5 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x473>
    82a8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    82ac:	48 89 c7             	mov    %rax,%rdi
    82af:	e8 a8 4b 00 00       	call   ce5c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    82b4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (isSuitableDevice(device)) {
    82b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    82bc:	48 8b 10             	mov    (%rax),%rdx
    82bf:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    82c6:	48 89 d6             	mov    %rdx,%rsi
    82c9:	48 89 c7             	mov    %rax,%rdi
    82cc:	e8 a1 fa ff ff       	call   7d72 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>
    82d1:	84 c0                	test   %al,%al
    82d3:	74 14                	je     82e9 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x467>
      physicalDevice = device;
    82d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    82d9:	48 8b 10             	mov    (%rax),%rdx
    82dc:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    82e3:	48 89 50 38          	mov    %rdx,0x38(%rax)
      break;
    82e7:	eb 23                	jmp    830c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x48a>
  for (const auto &device : devices) {
    82e9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    82ed:	48 89 c7             	mov    %rax,%rdi
    82f0:	e8 47 4b 00 00       	call   ce3c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    82f5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    82f9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    82fd:	48 89 d6             	mov    %rdx,%rsi
    8300:	48 89 c7             	mov    %rax,%rdi
    8303:	e8 f9 4a 00 00       	call   ce01 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    8308:	84 c0                	test   %al,%al
    830a:	75 9c                	jne    82a8 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x426>
    }
  }

  if (physicalDevice == VK_NULL_HANDLE) {
    830c:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    8313:	48 8b 40 38          	mov    0x38(%rax),%rax
    8317:	48 85 c0             	test   %rax,%rax
    831a:	75 3b                	jne    8357 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x4d5>
    throw std::runtime_error("Failed to find a suitable GPU.");
    831c:	bf 10 00 00 00       	mov    $0x10,%edi
    8321:	e8 5a be ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8326:	48 89 c3             	mov    %rax,%rbx
    8329:	48 8d 05 e0 20 01 00 	lea    0x120e0(%rip),%rax        # 1a410 <_ZN6__pstl9execution2v1L5unseqE+0x1a5>
    8330:	48 89 c6             	mov    %rax,%rsi
    8333:	48 89 df             	mov    %rbx,%rdi
    8336:	e8 d5 bd ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    833b:	48 8b 05 66 0c 02 00 	mov    0x20c66(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8342:	48 89 c2             	mov    %rax,%rdx
    8345:	48 8d 05 f4 09 02 00 	lea    0x209f4(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    834c:	48 89 c6             	mov    %rax,%rsi
    834f:	48 89 df             	mov    %rbx,%rdi
    8352:	e8 99 c4 ff ff       	call   47f0 <__cxa_throw@plt>
  }
}
    8357:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    835b:	48 89 c7             	mov    %rax,%rdi
    835e:	e8 a3 49 00 00       	call   cd06 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8363:	eb 5a                	jmp    83bf <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x53d>
    throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    8365:	49 89 c4             	mov    %rax,%r12
    8368:	48 89 df             	mov    %rbx,%rdi
    836b:	e8 10 bf ff ff       	call   4280 <__cxa_free_exception@plt>
    8370:	4c 89 e0             	mov    %r12,%rax
    8373:	48 89 c7             	mov    %rax,%rdi
    8376:	e8 c5 c4 ff ff       	call   4840 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> devices{deviceCount};
    837b:	48 89 c3             	mov    %rax,%rbx
    837e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8382:	48 89 c7             	mov    %rax,%rdi
    8385:	e8 ea 48 00 00       	call   cc74 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    838a:	48 89 d8             	mov    %rbx,%rax
    838d:	48 89 c7             	mov    %rax,%rdi
    8390:	e8 ab c4 ff ff       	call   4840 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find a suitable GPU.");
    8395:	49 89 c4             	mov    %rax,%r12
    8398:	48 89 df             	mov    %rbx,%rdi
    839b:	e8 e0 be ff ff       	call   4280 <__cxa_free_exception@plt>
    83a0:	4c 89 e3             	mov    %r12,%rbx
    83a3:	eb 03                	jmp    83a8 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x526>
}
    83a5:	48 89 c3             	mov    %rax,%rbx
    83a8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    83ac:	48 89 c7             	mov    %rax,%rdi
    83af:	e8 52 49 00 00       	call   cd06 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    83b4:	48 89 d8             	mov    %rbx,%rax
    83b7:	48 89 c7             	mov    %rax,%rdi
    83ba:	e8 81 c4 ff ff       	call   4840 <_Unwind_Resume@plt>
    83bf:	48 81 c4 a0 03 00 00 	add    $0x3a0,%rsp
    83c6:	5b                   	pop    %rbx
    83c7:	41 5c                	pop    %r12
    83c9:	5d                   	pop    %rbp
    83ca:	c3                   	ret
    83cb:	90                   	nop

00000000000083cc <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>:

rtvc::RenderApplication::QueueFamilyIndices
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device) {
    83cc:	55                   	push   %rbp
    83cd:	48 89 e5             	mov    %rsp,%rbp
    83d0:	53                   	push   %rbx
    83d1:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    83d8:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    83df:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  QueueFamilyIndices indices{};
    83e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    83ea:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
  uint32_t queueFamilyCount = 0;
    83ee:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    83f5:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    83f9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    8400:	ba 00 00 00 00       	mov    $0x0,%edx
    8405:	48 89 ce             	mov    %rcx,%rsi
    8408:	48 89 c7             	mov    %rax,%rdi
    840b:	e8 90 be ff ff       	call   42a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    8410:	8b 45 ac             	mov    -0x54(%rbp),%eax
    8413:	89 c3                	mov    %eax,%ebx
    8415:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8419:	48 89 c7             	mov    %rax,%rdi
    841c:	e8 4d 4a 00 00       	call   ce6e <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    8421:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    8425:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8429:	48 89 de             	mov    %rbx,%rsi
    842c:	48 89 c7             	mov    %rax,%rdi
    842f:	e8 72 4a 00 00       	call   cea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    8434:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8438:	48 89 c7             	mov    %rax,%rdi
    843b:	e8 4a 4a 00 00       	call   ce8a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount,
    8440:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8444:	48 89 c7             	mov    %rax,%rdi
    8447:	e8 14 4b 00 00       	call   cf60 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    844c:	48 89 c2             	mov    %rax,%rdx
    844f:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    8453:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    845a:	48 89 ce             	mov    %rcx,%rsi
    845d:	48 89 c7             	mov    %rax,%rdi
    8460:	e8 3b be ff ff       	call   42a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           queueFamilies.data());

  int i = 0;
    8465:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
  for (const auto &queueFamily : queueFamilies) {
    846c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8470:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8474:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8478:	48 89 c7             	mov    %rax,%rdi
    847b:	e8 04 4b 00 00       	call   cf84 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8480:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    8484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8488:	48 89 c7             	mov    %rax,%rdi
    848b:	e8 1a 4b 00 00       	call   cfaa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8490:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    8497:	e9 a6 00 00 00       	jmp    8542 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x176>
    849c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    84a0:	48 89 c7             	mov    %rax,%rdi
    84a3:	e8 86 4b 00 00       	call   d02e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    84a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT)
    84ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84b0:	8b 00                	mov    (%rax),%eax
    84b2:	83 e0 01             	and    $0x1,%eax
    84b5:	85 c0                	test   %eax,%eax
    84b7:	74 13                	je     84cc <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x100>
      indices.graphicsFamily = i;
    84b9:	48 8d 55 8c          	lea    -0x74(%rbp),%rdx
    84bd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    84c1:	48 89 d6             	mov    %rdx,%rsi
    84c4:	48 89 c7             	mov    %rax,%rdi
    84c7:	e8 74 4b 00 00       	call   d040 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

    VkBool32 presentSupport = false;
    84cc:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    84d3:	00 00 00 
    vkGetPhysicalDeviceSurfaceSupportKHR(device, i, surface, &presentSupport);
    84d6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    84dd:	48 8b 50 50          	mov    0x50(%rax),%rdx
    84e1:	8b 45 8c             	mov    -0x74(%rbp),%eax
    84e4:	89 c6                	mov    %eax,%esi
    84e6:	48 8d 8d 74 ff ff ff 	lea    -0x8c(%rbp),%rcx
    84ed:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    84f4:	48 89 c7             	mov    %rax,%rdi
    84f7:	e8 a4 bf ff ff       	call   44a0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>

    if (presentSupport)
    84fc:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    8502:	85 c0                	test   %eax,%eax
    8504:	74 17                	je     851d <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x151>
      indices.presentFamily = i;
    8506:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    850a:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    850e:	48 83 c2 08          	add    $0x8,%rdx
    8512:	48 89 c6             	mov    %rax,%rsi
    8515:	48 89 d7             	mov    %rdx,%rdi
    8518:	e8 23 4b 00 00       	call   d040 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

    if (indices.isComplete())
    851d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8521:	48 89 c7             	mov    %rax,%rdi
    8524:	e8 3f 38 00 00       	call   bd68 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>
    8529:	84 c0                	test   %al,%al
    852b:	75 35                	jne    8562 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x196>
      break;

    ++i;
    852d:	8b 45 8c             	mov    -0x74(%rbp),%eax
    8530:	83 c0 01             	add    $0x1,%eax
    8533:	89 45 8c             	mov    %eax,-0x74(%rbp)
  for (const auto &queueFamily : queueFamilies) {
    8536:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    853a:	48 89 c7             	mov    %rax,%rdi
    853d:	e8 cc 4a 00 00       	call   d00e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    8542:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    8549:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    854d:	48 89 d6             	mov    %rdx,%rsi
    8550:	48 89 c7             	mov    %rax,%rdi
    8553:	e8 7b 4a 00 00       	call   cfd3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    8558:	84 c0                	test   %al,%al
    855a:	0f 85 3c ff ff ff    	jne    849c <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xd0>
    8560:	eb 01                	jmp    8563 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x197>
      break;
    8562:	90                   	nop
  }

  return indices;
    8563:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8567:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    856b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    856f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
}
    8573:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8577:	48 89 c7             	mov    %rax,%rdi
    857a:	e8 9d 49 00 00       	call   cf1c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return indices;
    857f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8583:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8587:	eb 34                	jmp    85bd <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1f1>
  std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    8589:	48 89 c3             	mov    %rax,%rbx
    858c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8590:	48 89 c7             	mov    %rax,%rdi
    8593:	e8 f2 48 00 00       	call   ce8a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8598:	48 89 d8             	mov    %rbx,%rax
    859b:	48 89 c7             	mov    %rax,%rdi
    859e:	e8 9d c2 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    85a3:	48 89 c3             	mov    %rax,%rbx
    85a6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    85aa:	48 89 c7             	mov    %rax,%rdi
    85ad:	e8 6a 49 00 00       	call   cf1c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    85b2:	48 89 d8             	mov    %rbx,%rax
    85b5:	48 89 c7             	mov    %rax,%rdi
    85b8:	e8 83 c2 ff ff       	call   4840 <_Unwind_Resume@plt>
    85bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85c1:	c9                   	leave
    85c2:	c3                   	ret
    85c3:	90                   	nop

00000000000085c4 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>:

void rtvc::RenderApplication::createLogicalDevice() {
    85c4:	55                   	push   %rbp
    85c5:	48 89 e5             	mov    %rsp,%rbp
    85c8:	41 55                	push   %r13
    85ca:	41 54                	push   %r12
    85cc:	53                   	push   %rbx
    85cd:	48 81 ec 08 02 00 00 	sub    $0x208,%rsp
    85d4:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    85db:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    85e2:	48 8b 50 38          	mov    0x38(%rax),%rdx
    85e6:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    85ed:	48 89 d6             	mov    %rdx,%rsi
    85f0:	48 89 c7             	mov    %rax,%rdi
    85f3:	e8 d4 fd ff ff       	call   83cc <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    85f8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    85fc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)

  std::vector<VkDeviceQueueCreateInfo> queueCreateInfos;
    8600:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8604:	48 89 c7             	mov    %rax,%rdi
    8607:	e8 12 39 00 00       	call   bf1e <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
  std::set<uint32_t> uniqueQueueFamilies = {indices.graphicsFamily.value(),
    860c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8610:	48 89 c7             	mov    %rax,%rdi
    8613:	e8 22 39 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    8618:	8b 00                	mov    (%rax),%eax
                                            indices.presentFamily.value()};
    861a:	89 45 c8             	mov    %eax,-0x38(%rbp)
    861d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8621:	48 83 c0 08          	add    $0x8,%rax
    8625:	48 89 c7             	mov    %rax,%rdi
    8628:	e8 0d 39 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    862d:	8b 00                	mov    (%rax),%eax
    862f:	89 45 cc             	mov    %eax,-0x34(%rbp)
    8632:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8636:	49 89 c4             	mov    %rax,%r12
    8639:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    863f:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    8643:	48 89 c7             	mov    %rax,%rdi
    8646:	e8 83 4b 00 00       	call   d1ce <_ZNSaIjEC1Ev>
    864b:	4c 8d 45 d3          	lea    -0x2d(%rbp),%r8
    864f:	48 8d 55 d2          	lea    -0x2e(%rbp),%rdx
    8653:	4c 89 e6             	mov    %r12,%rsi
    8656:	4c 89 ef             	mov    %r13,%rdi
    8659:	4c 89 e1             	mov    %r12,%rcx
    865c:	4c 89 eb             	mov    %r13,%rbx
    865f:	48 89 df             	mov    %rbx,%rdi
    8662:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    8669:	48 89 d1             	mov    %rdx,%rcx
    866c:	48 89 fa             	mov    %rdi,%rdx
    866f:	48 89 c7             	mov    %rax,%rdi
    8672:	e8 73 4b 00 00       	call   d1ea <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>
    8677:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    867b:	48 89 c7             	mov    %rax,%rdi
    867e:	e8 6f 3a 00 00       	call   c0f2 <_ZNSaIjED1Ev>

  float queuePriority = 1.0f;
    8683:	f3 0f 10 05 85 21 01 	movss  0x12185(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    868a:	00 
    868b:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    8692:	ff 
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    8693:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    869a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    869e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    86a2:	48 89 c7             	mov    %rax,%rdi
    86a5:	e8 60 4c 00 00       	call   d30a <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>
    86aa:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    86b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    86b5:	48 89 c7             	mov    %rax,%rdi
    86b8:	e8 67 4c 00 00       	call   d324 <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>
    86bd:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    86c4:	eb 7e                	jmp    8744 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x180>
    86c6:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    86cd:	48 89 c7             	mov    %rax,%rdi
    86d0:	e8 b3 4c 00 00       	call   d388 <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>
    86d5:	8b 00                	mov    (%rax),%eax
    86d7:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    VkDeviceQueueCreateInfo queueCreateInfo{};
    86da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    86de:	0f 29 85 f0 fd ff ff 	movaps %xmm0,-0x210(%rbp)
    86e5:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
    86ec:	66 0f d6 85 10 fe ff 	movq   %xmm0,-0x1f0(%rbp)
    86f3:	ff 
    queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    86f4:	c7 85 f0 fd ff ff 02 	movl   $0x2,-0x210(%rbp)
    86fb:	00 00 00 
    queueCreateInfo.queueFamilyIndex = queueFamily;
    86fe:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    8701:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%rbp)
    queueCreateInfo.queueCount = 1;
    8707:	c7 85 08 fe ff ff 01 	movl   $0x1,-0x1f8(%rbp)
    870e:	00 00 00 
    queueCreateInfo.pQueuePriorities = &queuePriority;
    8711:	48 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%rax
    8718:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    queueCreateInfos.push_back(queueCreateInfo);
    871f:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    8726:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    872a:	48 89 d6             	mov    %rdx,%rsi
    872d:	48 89 c7             	mov    %rax,%rdi
    8730:	e8 71 4c 00 00       	call   d3a6 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    8735:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    873c:	48 89 c7             	mov    %rax,%rdi
    873f:	e8 1c 4c 00 00       	call   d360 <_ZNSt23_Rb_tree_const_iteratorIjEppEv>
    8744:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    874b:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    8752:	48 89 d6             	mov    %rdx,%rsi
    8755:	48 89 c7             	mov    %rax,%rdi
    8758:	e8 e1 4b 00 00       	call   d33e <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>
    875d:	84 c0                	test   %al,%al
    875f:	0f 85 61 ff ff ff    	jne    86c6 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x102>
  }

  VkPhysicalDeviceFeatures deviceFeatures{};
    8765:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    876c:	b8 00 00 00 00       	mov    $0x0,%eax
    8771:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    8776:	48 89 d7             	mov    %rdx,%rdi
    8779:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    877c:	48 89 fa             	mov    %rdi,%rdx
    877f:	89 02                	mov    %eax,(%rdx)
    8781:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo createInfo{};
    8785:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8789:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    8790:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    8797:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    879e:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    87a5:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    87ac:	ff 
  createInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    87ad:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    87b4:	00 00 00 
  createInfo.queueCreateInfoCount = queueCreateInfos.size();
    87b7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    87bb:	48 89 c7             	mov    %rax,%rdi
    87be:	e8 5f 4c 00 00       	call   d422 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    87c3:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  createInfo.pQueueCreateInfos = queueCreateInfos.data();
    87c9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    87cd:	48 89 c7             	mov    %rax,%rdi
    87d0:	e8 7b 4c 00 00       	call   d450 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>
    87d5:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  createInfo.pEnabledFeatures = &deviceFeatures;
    87dc:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    87e3:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  createInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    87ea:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    87f1:	48 83 c0 60          	add    $0x60,%rax
    87f5:	48 89 c7             	mov    %rax,%rdi
    87f8:	e8 cf 3d 00 00       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  createInfo.enabledExtensionCount =
    87fd:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  createInfo.ppEnabledExtensionNames = deviceExtensions.data();
    8803:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    880a:	48 83 c0 60          	add    $0x60,%rax
    880e:	48 89 c7             	mov    %rax,%rdi
    8811:	e8 fe 3d 00 00       	call   c614 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    8816:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)

  if (enableValidationLayers) {
    createInfo.enabledLayerCount =
        static_cast<uint32_t>(validationLayers.size());
    881d:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8824:	48 83 c0 18          	add    $0x18,%rax
    8828:	48 89 c7             	mov    %rax,%rdi
    882b:	e8 9c 3d 00 00       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    createInfo.enabledLayerCount =
    8830:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
    createInfo.ppEnabledLayerNames = validationLayers.data();
    8836:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    883d:	48 83 c0 18          	add    $0x18,%rax
    8841:	48 89 c7             	mov    %rax,%rdi
    8844:	e8 cb 3d 00 00       	call   c614 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    8849:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  } else {
    createInfo.enabledLayerCount = 0;
  }

  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    8850:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8857:	48 8d 50 40          	lea    0x40(%rax),%rdx
    885b:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8862:	48 8b 40 38          	mov    0x38(%rax),%rax
    8866:	48 8d b5 30 fe ff ff 	lea    -0x1d0(%rbp),%rsi
    886d:	48 89 d1             	mov    %rdx,%rcx
    8870:	ba 00 00 00 00       	mov    $0x0,%edx
    8875:	48 89 c7             	mov    %rax,%rdi
    8878:	e8 83 be ff ff       	call   4700 <vkCreateDevice@plt>
    887d:	85 c0                	test   %eax,%eax
    887f:	0f 95 c0             	setne  %al
    8882:	84 c0                	test   %al,%al
    8884:	74 3b                	je     88c1 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x2fd>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create logical device.");
    8886:	bf 10 00 00 00       	mov    $0x10,%edi
    888b:	e8 f0 b8 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8890:	48 89 c3             	mov    %rax,%rbx
    8893:	48 8d 05 96 1b 01 00 	lea    0x11b96(%rip),%rax        # 1a430 <_ZN6__pstl9execution2v1L5unseqE+0x1c5>
    889a:	48 89 c6             	mov    %rax,%rsi
    889d:	48 89 df             	mov    %rbx,%rdi
    88a0:	e8 6b b8 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    88a5:	48 8b 05 fc 06 02 00 	mov    0x206fc(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    88ac:	48 89 c2             	mov    %rax,%rdx
    88af:	48 8d 05 8a 04 02 00 	lea    0x2048a(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    88b6:	48 89 c6             	mov    %rax,%rsi
    88b9:	48 89 df             	mov    %rbx,%rdi
    88bc:	e8 2f bf ff ff       	call   47f0 <__cxa_throw@plt>

  vkGetDeviceQueue(device, indices.graphicsFamily.value(), 0, &graphicsQueue);
    88c1:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    88c8:	48 8d 58 48          	lea    0x48(%rax),%rbx
    88cc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    88d0:	48 89 c7             	mov    %rax,%rdi
    88d3:	e8 62 36 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    88d8:	8b 30                	mov    (%rax),%esi
    88da:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    88e1:	48 8b 40 40          	mov    0x40(%rax),%rax
    88e5:	48 89 d9             	mov    %rbx,%rcx
    88e8:	ba 00 00 00 00       	mov    $0x0,%edx
    88ed:	48 89 c7             	mov    %rax,%rdi
    88f0:	e8 1b bd ff ff       	call   4610 <vkGetDeviceQueue@plt>
  vkGetDeviceQueue(device, indices.presentFamily.value(), 0, &presentQueue);
    88f5:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    88fc:	48 8d 58 58          	lea    0x58(%rax),%rbx
    8900:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8904:	48 83 c0 08          	add    $0x8,%rax
    8908:	48 89 c7             	mov    %rax,%rdi
    890b:	e8 2a 36 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    8910:	8b 30                	mov    (%rax),%esi
    8912:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8919:	48 8b 40 40          	mov    0x40(%rax),%rax
    891d:	48 89 d9             	mov    %rbx,%rcx
    8920:	ba 00 00 00 00       	mov    $0x0,%edx
    8925:	48 89 c7             	mov    %rax,%rdi
    8928:	e8 e3 bc ff ff       	call   4610 <vkGetDeviceQueue@plt>
}
    892d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    8934:	48 89 c7             	mov    %rax,%rdi
    8937:	e8 42 36 00 00       	call   bf7e <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    893c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8940:	48 89 c7             	mov    %rax,%rdi
    8943:	e8 fe 47 00 00       	call   d146 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    8948:	eb 4f                	jmp    8999 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3d5>
                                            indices.presentFamily.value()};
    894a:	48 89 c3             	mov    %rax,%rbx
    894d:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    8951:	48 89 c7             	mov    %rax,%rdi
    8954:	e8 99 37 00 00       	call   c0f2 <_ZNSaIjED1Ev>
    8959:	eb 27                	jmp    8982 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3be>
    throw std::runtime_error("Failed to create logical device.");
    895b:	49 89 c4             	mov    %rax,%r12
    895e:	48 89 df             	mov    %rbx,%rdi
    8961:	e8 1a b9 ff ff       	call   4280 <__cxa_free_exception@plt>
    8966:	4c 89 e3             	mov    %r12,%rbx
    8969:	eb 03                	jmp    896e <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3aa>
}
    896b:	48 89 c3             	mov    %rax,%rbx
    896e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    8975:	48 89 c7             	mov    %rax,%rdi
    8978:	e8 01 36 00 00       	call   bf7e <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    897d:	eb 03                	jmp    8982 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3be>
    897f:	48 89 c3             	mov    %rax,%rbx
    8982:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8986:	48 89 c7             	mov    %rax,%rdi
    8989:	e8 b8 47 00 00       	call   d146 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    898e:	48 89 d8             	mov    %rbx,%rax
    8991:	48 89 c7             	mov    %rax,%rdi
    8994:	e8 a7 be ff ff       	call   4840 <_Unwind_Resume@plt>
    8999:	48 81 c4 08 02 00 00 	add    $0x208,%rsp
    89a0:	5b                   	pop    %rbx
    89a1:	41 5c                	pop    %r12
    89a3:	41 5d                	pop    %r13
    89a5:	5d                   	pop    %rbp
    89a6:	c3                   	ret
    89a7:	90                   	nop

00000000000089a8 <_ZN4rtvc17RenderApplication13createSurfaceEv>:

void rtvc::RenderApplication::createSurface() {
    89a8:	55                   	push   %rbp
    89a9:	48 89 e5             	mov    %rsp,%rbp
    89ac:	41 54                	push   %r12
    89ae:	53                   	push   %rbx
    89af:	48 83 ec 10          	sub    $0x10,%rsp
    89b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (glfwCreateWindowSurface(instance, window, nullptr, &surface) !=
    89b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89bb:	48 8d 50 50          	lea    0x50(%rax),%rdx
    89bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89c3:	48 8b 30             	mov    (%rax),%rsi
    89c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89ca:	48 8b 40 10          	mov    0x10(%rax),%rax
    89ce:	48 89 d1             	mov    %rdx,%rcx
    89d1:	ba 00 00 00 00       	mov    $0x0,%edx
    89d6:	48 89 c7             	mov    %rax,%rdi
    89d9:	e8 52 bd ff ff       	call   4730 <glfwCreateWindowSurface@plt>
    89de:	85 c0                	test   %eax,%eax
    89e0:	0f 95 c0             	setne  %al
    89e3:	84 c0                	test   %al,%al
    89e5:	74 51                	je     8a38 <_ZN4rtvc17RenderApplication13createSurfaceEv+0x90>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create window surface.");
    89e7:	bf 10 00 00 00       	mov    $0x10,%edi
    89ec:	e8 8f b7 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    89f1:	48 89 c3             	mov    %rax,%rbx
    89f4:	48 8d 05 5d 1a 01 00 	lea    0x11a5d(%rip),%rax        # 1a458 <_ZN6__pstl9execution2v1L5unseqE+0x1ed>
    89fb:	48 89 c6             	mov    %rax,%rsi
    89fe:	48 89 df             	mov    %rbx,%rdi
    8a01:	e8 0a b7 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    8a06:	48 8b 05 9b 05 02 00 	mov    0x2059b(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8a0d:	48 89 c2             	mov    %rax,%rdx
    8a10:	48 8d 05 29 03 02 00 	lea    0x20329(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8a17:	48 89 c6             	mov    %rax,%rsi
    8a1a:	48 89 df             	mov    %rbx,%rdi
    8a1d:	e8 ce bd ff ff       	call   47f0 <__cxa_throw@plt>
    8a22:	49 89 c4             	mov    %rax,%r12
    8a25:	48 89 df             	mov    %rbx,%rdi
    8a28:	e8 53 b8 ff ff       	call   4280 <__cxa_free_exception@plt>
    8a2d:	4c 89 e0             	mov    %r12,%rax
    8a30:	48 89 c7             	mov    %rax,%rdi
    8a33:	e8 08 be ff ff       	call   4840 <_Unwind_Resume@plt>
}
    8a38:	90                   	nop
    8a39:	48 83 c4 10          	add    $0x10,%rsp
    8a3d:	5b                   	pop    %rbx
    8a3e:	41 5c                	pop    %r12
    8a40:	5d                   	pop    %rbp
    8a41:	c3                   	ret

0000000000008a42 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>:

VkSurfaceFormatKHR rtvc::RenderApplication::selectSwapSurfaceFormat(
    const std::vector<VkSurfaceFormatKHR> &availableFormats) {
    8a42:	55                   	push   %rbp
    8a43:	48 89 e5             	mov    %rsp,%rbp
    8a46:	48 83 ec 30          	sub    $0x30,%rsp
    8a4a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a4e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  for (const auto &availableFormat : availableFormats)
    8a52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a5e:	48 89 c7             	mov    %rax,%rdi
    8a61:	e8 0e 4a 00 00       	call   d474 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    8a66:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a6e:	48 89 c7             	mov    %rax,%rdi
    8a71:	e8 24 4a 00 00       	call   d49a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    8a76:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8a7a:	eb 3b                	jmp    8ab7 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x75>
    8a7c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8a80:	48 89 c7             	mov    %rax,%rdi
    8a83:	e8 96 4a 00 00       	call   d51e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    8a88:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    8a8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a90:	8b 00                	mov    (%rax),%eax
    8a92:	83 f8 32             	cmp    $0x32,%eax
    8a95:	75 14                	jne    8aab <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
        availableFormat.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)
    8a97:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a9b:	8b 40 04             	mov    0x4(%rax),%eax
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    8a9e:	85 c0                	test   %eax,%eax
    8aa0:	75 09                	jne    8aab <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
      return availableFormat;
    8aa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8aa6:	48 8b 00             	mov    (%rax),%rax
    8aa9:	eb 37                	jmp    8ae2 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0xa0>
  for (const auto &availableFormat : availableFormats)
    8aab:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8aaf:	48 89 c7             	mov    %rax,%rdi
    8ab2:	e8 47 4a 00 00       	call   d4fe <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    8ab7:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    8abb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8abf:	48 89 d6             	mov    %rdx,%rsi
    8ac2:	48 89 c7             	mov    %rax,%rdi
    8ac5:	e8 f9 49 00 00       	call   d4c3 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    8aca:	84 c0                	test   %al,%al
    8acc:	75 ae                	jne    8a7c <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x3a>

  return availableFormats[0];
    8ace:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ad2:	be 00 00 00 00       	mov    $0x0,%esi
    8ad7:	48 89 c7             	mov    %rax,%rdi
    8ada:	e8 51 4a 00 00       	call   d530 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    8adf:	48 8b 00             	mov    (%rax),%rax
}
    8ae2:	c9                   	leave
    8ae3:	c3                   	ret

0000000000008ae4 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>:

VkPresentModeKHR rtvc::RenderApplication::selectSwapPresentMode(
    const std::vector<VkPresentModeKHR> &availablePresentModes) {
    8ae4:	55                   	push   %rbp
    8ae5:	48 89 e5             	mov    %rsp,%rbp
    8ae8:	48 83 ec 30          	sub    $0x30,%rsp
    8aec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8af0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  for (const auto &availablePresentMode : availablePresentModes) {
    8af4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8af8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b00:	48 89 c7             	mov    %rax,%rdi
    8b03:	e8 48 4a 00 00       	call   d550 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    8b08:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b10:	48 89 c7             	mov    %rax,%rdi
    8b13:	e8 5e 4a 00 00       	call   d576 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    8b18:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8b1c:	eb 2e                	jmp    8b4c <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x68>
    8b1e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8b22:	48 89 c7             	mov    %rax,%rdi
    8b25:	e8 d0 4a 00 00       	call   d5fa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    8b2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    // if (availablePresentMode == VK_PRESENT_MODE_MAILBOX_KHR)
    if (availablePresentMode == VK_PRESENT_MODE_IMMEDIATE_KHR) {
    8b2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b32:	8b 00                	mov    (%rax),%eax
    8b34:	85 c0                	test   %eax,%eax
    8b36:	75 08                	jne    8b40 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x5c>
      return availablePresentMode;
    8b38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b3c:	8b 00                	mov    (%rax),%eax
    8b3e:	eb 28                	jmp    8b68 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x84>
  for (const auto &availablePresentMode : availablePresentModes) {
    8b40:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8b44:	48 89 c7             	mov    %rax,%rdi
    8b47:	e8 8e 4a 00 00       	call   d5da <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    8b4c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    8b50:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8b54:	48 89 d6             	mov    %rdx,%rsi
    8b57:	48 89 c7             	mov    %rax,%rdi
    8b5a:	e8 40 4a 00 00       	call   d59f <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    8b5f:	84 c0                	test   %al,%al
    8b61:	75 bb                	jne    8b1e <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x3a>
    }
  }
  return VK_PRESENT_MODE_FIFO_KHR;
    8b63:	b8 02 00 00 00       	mov    $0x2,%eax
}
    8b68:	c9                   	leave
    8b69:	c3                   	ret

0000000000008b6a <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>:

VkExtent2D rtvc::RenderApplication::selectSwapExtent(
    const VkSurfaceCapabilitiesKHR &capabilities) {
    8b6a:	55                   	push   %rbp
    8b6b:	48 89 e5             	mov    %rsp,%rbp
    8b6e:	53                   	push   %rbx
    8b6f:	48 83 ec 28          	sub    $0x28,%rsp
    8b73:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8b77:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    8b7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b7f:	8b 58 08             	mov    0x8(%rax),%ebx
    8b82:	e8 08 30 00 00       	call   bb8f <_ZNSt14numeric_limitsIjE3maxEv>
    8b87:	39 c3                	cmp    %eax,%ebx
    8b89:	0f 95 c0             	setne  %al
    8b8c:	84 c0                	test   %al,%al
    8b8e:	74 0a                	je     8b9a <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0x30>
    return capabilities.currentExtent;
    8b90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b94:	48 8b 40 08          	mov    0x8(%rax),%rax
    8b98:	eb 76                	jmp    8c10 <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0xa6>
  else {
    int w, h;
    glfwGetFramebufferSize(window, &w, &h);
    8b9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8b9e:	48 8b 00             	mov    (%rax),%rax
    8ba1:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8ba5:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
    8ba9:	48 89 ce             	mov    %rcx,%rsi
    8bac:	48 89 c7             	mov    %rax,%rdi
    8baf:	e8 cc bb ff ff       	call   4780 <glfwGetFramebufferSize@plt>

    VkExtent2D actualExtent = {static_cast<uint32_t>(w),
    8bb4:	8b 45 ec             	mov    -0x14(%rbp),%eax
                               static_cast<uint32_t>(h)};
    8bb7:	89 45 e0             	mov    %eax,-0x20(%rbp)
    8bba:	8b 45 e8             	mov    -0x18(%rbp),%eax
    8bbd:	89 45 e4             	mov    %eax,-0x1c(%rbp)

    actualExtent.width =
        std::clamp(actualExtent.width, capabilities.minImageExtent.width,
                   capabilities.maxImageExtent.width);
    8bc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bc4:	48 8d 50 18          	lea    0x18(%rax),%rdx
        std::clamp(actualExtent.width, capabilities.minImageExtent.width,
    8bc8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bcc:	48 8d 48 10          	lea    0x10(%rax),%rcx
    8bd0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8bd4:	48 89 ce             	mov    %rcx,%rsi
    8bd7:	48 89 c7             	mov    %rax,%rdi
    8bda:	e8 2c 4a 00 00       	call   d60b <_ZSt5clampIjERKT_S2_S2_S2_>
    8bdf:	8b 00                	mov    (%rax),%eax
    actualExtent.width =
    8be1:	89 45 e0             	mov    %eax,-0x20(%rbp)

    actualExtent.height =
        std::clamp(actualExtent.height, capabilities.minImageExtent.height,
                   capabilities.maxImageExtent.height);
    8be4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8be8:	48 8d 50 1c          	lea    0x1c(%rax),%rdx
        std::clamp(actualExtent.height, capabilities.minImageExtent.height,
    8bec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bf0:	48 8d 48 14          	lea    0x14(%rax),%rcx
    8bf4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8bf8:	48 83 c0 04          	add    $0x4,%rax
    8bfc:	48 89 ce             	mov    %rcx,%rsi
    8bff:	48 89 c7             	mov    %rax,%rdi
    8c02:	e8 04 4a 00 00       	call   d60b <_ZSt5clampIjERKT_S2_S2_S2_>
    8c07:	8b 00                	mov    (%rax),%eax
    actualExtent.height =
    8c09:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    return actualExtent;
    8c0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  }
}
    8c10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c14:	c9                   	leave
    8c15:	c3                   	ret

0000000000008c16 <_ZN4rtvc17RenderApplication15createSwapChainEv>:

void rtvc::RenderApplication::createSwapChain() {
    8c16:	55                   	push   %rbp
    8c17:	48 89 e5             	mov    %rsp,%rbp
    8c1a:	41 54                	push   %r12
    8c1c:	53                   	push   %rbx
    8c1d:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    8c24:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
  SwapChainSupportDetails swapChainSupport =
      querySwapChainSupport(physicalDevice);
    8c2b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c32:	48 8b 50 38          	mov    0x38(%rax),%rdx
    8c36:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8c3a:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
    8c41:	48 89 ce             	mov    %rcx,%rsi
    8c44:	48 89 c7             	mov    %rax,%rdi
    8c47:	e8 f4 ef ff ff       	call   7c40 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>

  VkSurfaceFormatKHR surfaceFormat =
      selectSwapSurfaceFormat(swapChainSupport.formats);
    8c4c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8c50:	48 8d 50 38          	lea    0x38(%rax),%rdx
    8c54:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c5b:	48 89 d6             	mov    %rdx,%rsi
    8c5e:	48 89 c7             	mov    %rax,%rdi
    8c61:	e8 dc fd ff ff       	call   8a42 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>
    8c66:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  VkPresentModeKHR presentMode =
      selectSwapPresentMode(swapChainSupport.presentModes);
    8c6d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8c71:	48 8d 50 50          	lea    0x50(%rax),%rdx
    8c75:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c7c:	48 89 d6             	mov    %rdx,%rsi
    8c7f:	48 89 c7             	mov    %rax,%rdi
    8c82:	e8 5d fe ff ff       	call   8ae4 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>
    8c87:	89 45 ec             	mov    %eax,-0x14(%rbp)
  VkExtent2D extent = selectSwapExtent(swapChainSupport.capabilities);
    8c8a:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    8c8e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c95:	48 89 d6             	mov    %rdx,%rsi
    8c98:	48 89 c7             	mov    %rax,%rdi
    8c9b:	e8 ca fe ff ff       	call   8b6a <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>
    8ca0:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  uint32_t imageCount = swapChainSupport.capabilities.minImageCount + 1;
    8ca7:	8b 45 80             	mov    -0x80(%rbp),%eax
    8caa:	83 c0 01             	add    $0x1,%eax
    8cad:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

  if (swapChainSupport.capabilities.maxImageCount > 0 &&
    8cb3:	8b 45 84             	mov    -0x7c(%rbp),%eax
    8cb6:	85 c0                	test   %eax,%eax
    8cb8:	74 16                	je     8cd0 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xba>
      imageCount > swapChainSupport.capabilities.maxImageCount)
    8cba:	8b 55 84             	mov    -0x7c(%rbp),%edx
    8cbd:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  if (swapChainSupport.capabilities.maxImageCount > 0 &&
    8cc3:	39 c2                	cmp    %eax,%edx
    8cc5:	73 09                	jae    8cd0 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xba>
    imageCount = swapChainSupport.capabilities.maxImageCount;
    8cc7:	8b 45 84             	mov    -0x7c(%rbp),%eax
    8cca:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

  VkSwapchainCreateInfoKHR createInfo{};
    8cd0:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    8cd7:	b8 00 00 00 00       	mov    $0x0,%eax
    8cdc:	b9 0d 00 00 00       	mov    $0xd,%ecx
    8ce1:	48 89 d7             	mov    %rdx,%rdi
    8ce4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  createInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    8ce7:	c7 85 00 ff ff ff e8 	movl   $0x3b9acde8,-0x100(%rbp)
    8cee:	cd 9a 3b 
  createInfo.surface = surface;
    8cf1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cf8:	48 8b 40 50          	mov    0x50(%rax),%rax
    8cfc:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  createInfo.minImageCount = imageCount;
    8d03:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    8d09:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
  createInfo.imageFormat = surfaceFormat.format;
    8d0f:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    8d15:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  createInfo.imageColorSpace = surfaceFormat.colorSpace;
    8d1b:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    8d21:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  createInfo.imageExtent = extent;
    8d27:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    8d2e:	48 89 85 2c ff ff ff 	mov    %rax,-0xd4(%rbp)
  createInfo.imageArrayLayers = 1;
    8d35:	c7 85 34 ff ff ff 01 	movl   $0x1,-0xcc(%rbp)
    8d3c:	00 00 00 
  createInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    8d3f:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    8d46:	00 00 00 

  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    8d49:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8d50:	48 8b 50 38          	mov    0x38(%rax),%rdx
    8d54:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8d5b:	48 89 d6             	mov    %rdx,%rsi
    8d5e:	48 89 c7             	mov    %rax,%rdi
    8d61:	e8 66 f6 ff ff       	call   83cc <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    8d66:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    8d6d:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
  uint32_t QueueFamilyIndices[] = {indices.graphicsFamily.value(),
    8d74:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8d7b:	48 89 c7             	mov    %rax,%rdi
    8d7e:	e8 b7 31 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    8d83:	8b 00                	mov    (%rax),%eax
                                   indices.presentFamily.value()};
    8d85:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
    8d8b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8d92:	48 83 c0 08          	add    $0x8,%rax
    8d96:	48 89 c7             	mov    %rax,%rdi
    8d99:	e8 9c 31 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    8d9e:	8b 00                	mov    (%rax),%eax
    8da0:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)

  if (indices.graphicsFamily != indices.presentFamily) {
    8da6:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8dad:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8db1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8db8:	48 89 d6             	mov    %rdx,%rsi
    8dbb:	48 89 c7             	mov    %rax,%rdi
    8dbe:	e8 aa 48 00 00       	call   d66d <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>
    8dc3:	84 c0                	test   %al,%al
    8dc5:	74 24                	je     8deb <_ZN4rtvc17RenderApplication15createSwapChainEv+0x1d5>
    createInfo.imageSharingMode = VK_SHARING_MODE_CONCURRENT;
    8dc7:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    8dce:	00 00 00 
    createInfo.queueFamilyIndexCount = 2;
    8dd1:	c7 85 40 ff ff ff 02 	movl   $0x2,-0xc0(%rbp)
    8dd8:	00 00 00 
    createInfo.pQueueFamilyIndices = QueueFamilyIndices;
    8ddb:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    8de2:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    8de9:	eb 1f                	jmp    8e0a <_ZN4rtvc17RenderApplication15createSwapChainEv+0x1f4>
  } else {
    createInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    8deb:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    8df2:	00 00 00 
    createInfo.queueFamilyIndexCount = 0;
    8df5:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    8dfc:	00 00 00 
    createInfo.pQueueFamilyIndices = nullptr;
    8dff:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    8e06:	00 00 00 00 
  }

  createInfo.preTransform = swapChainSupport.capabilities.currentTransform;
    8e0a:	8b 45 a8             	mov    -0x58(%rbp),%eax
    8e0d:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  createInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    8e13:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
    8e1a:	00 00 00 
  createInfo.presentMode = presentMode;
    8e1d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8e20:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  createInfo.clipped = VK_TRUE;
    8e26:	c7 85 5c ff ff ff 01 	movl   $0x1,-0xa4(%rbp)
    8e2d:	00 00 00 
  // createInfo.oldSwapchain = VK_NULL_HANDLE;

  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    8e30:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8e37:	48 8d 50 78          	lea    0x78(%rax),%rdx
    8e3b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8e42:	48 8b 40 40          	mov    0x40(%rax),%rax
    8e46:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
    8e4d:	48 89 d1             	mov    %rdx,%rcx
    8e50:	ba 00 00 00 00       	mov    $0x0,%edx
    8e55:	48 89 c7             	mov    %rax,%rdi
    8e58:	e8 f3 b6 ff ff       	call   4550 <vkCreateSwapchainKHR@plt>
    8e5d:	85 c0                	test   %eax,%eax
    8e5f:	0f 95 c0             	setne  %al
    8e62:	84 c0                	test   %al,%al
    8e64:	74 3b                	je     8ea1 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x28b>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create swap chain.");
    8e66:	bf 10 00 00 00       	mov    $0x10,%edi
    8e6b:	e8 10 b3 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8e70:	48 89 c3             	mov    %rax,%rbx
    8e73:	48 8d 05 ff 15 01 00 	lea    0x115ff(%rip),%rax        # 1a479 <_ZN6__pstl9execution2v1L5unseqE+0x20e>
    8e7a:	48 89 c6             	mov    %rax,%rsi
    8e7d:	48 89 df             	mov    %rbx,%rdi
    8e80:	e8 8b b2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    8e85:	48 8b 05 1c 01 02 00 	mov    0x2011c(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8e8c:	48 89 c2             	mov    %rax,%rdx
    8e8f:	48 8d 05 aa fe 01 00 	lea    0x1feaa(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8e96:	48 89 c6             	mov    %rax,%rsi
    8e99:	48 89 df             	mov    %rbx,%rdi
    8e9c:	e8 4f b9 ff ff       	call   47f0 <__cxa_throw@plt>

  vkGetSwapchainImagesKHR(device, swapChain, &imageCount, nullptr);
    8ea1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8ea8:	48 8b 70 78          	mov    0x78(%rax),%rsi
    8eac:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8eb3:	48 8b 40 40          	mov    0x40(%rax),%rax
    8eb7:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    8ebe:	b9 00 00 00 00       	mov    $0x0,%ecx
    8ec3:	48 89 c7             	mov    %rax,%rdi
    8ec6:	e8 45 b3 ff ff       	call   4210 <vkGetSwapchainImagesKHR@plt>
  swapChainImages.resize(imageCount);
    8ecb:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8ed2:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8ed6:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    8edc:	89 d2                	mov    %edx,%edx
    8ede:	48 89 d6             	mov    %rdx,%rsi
    8ee1:	48 89 c7             	mov    %rax,%rdi
    8ee4:	e8 f5 47 00 00       	call   d6de <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>
  vkGetSwapchainImagesKHR(device, swapChain, &imageCount,
    8ee9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8ef0:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8ef4:	48 89 c7             	mov    %rax,%rdi
    8ef7:	e8 68 48 00 00       	call   d764 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    8efc:	48 89 c1             	mov    %rax,%rcx
    8eff:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f06:	48 8b 70 78          	mov    0x78(%rax),%rsi
    8f0a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f11:	48 8b 40 40          	mov    0x40(%rax),%rax
    8f15:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    8f1c:	48 89 c7             	mov    %rax,%rdi
    8f1f:	e8 ec b2 ff ff       	call   4210 <vkGetSwapchainImagesKHR@plt>
                          swapChainImages.data());

  swapChainImageFormat = surfaceFormat.format;
    8f24:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    8f2a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f31:	89 90 98 00 00 00    	mov    %edx,0x98(%rax)
  swapChainExtent = extent;
    8f37:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f3e:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    8f45:	48 89 90 9c 00 00 00 	mov    %rdx,0x9c(%rax)
}
    8f4c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8f50:	48 89 c7             	mov    %rax,%rdi
    8f53:	e8 5e 2f 00 00       	call   beb6 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    8f58:	eb 2a                	jmp    8f84 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x36e>
    throw std::runtime_error("Failed to create swap chain.");
    8f5a:	49 89 c4             	mov    %rax,%r12
    8f5d:	48 89 df             	mov    %rbx,%rdi
    8f60:	e8 1b b3 ff ff       	call   4280 <__cxa_free_exception@plt>
    8f65:	4c 89 e3             	mov    %r12,%rbx
    8f68:	eb 03                	jmp    8f6d <_ZN4rtvc17RenderApplication15createSwapChainEv+0x357>
}
    8f6a:	48 89 c3             	mov    %rax,%rbx
    8f6d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8f71:	48 89 c7             	mov    %rax,%rdi
    8f74:	e8 3d 2f 00 00       	call   beb6 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    8f79:	48 89 d8             	mov    %rbx,%rax
    8f7c:	48 89 c7             	mov    %rax,%rdi
    8f7f:	e8 bc b8 ff ff       	call   4840 <_Unwind_Resume@plt>
    8f84:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
    8f8b:	5b                   	pop    %rbx
    8f8c:	41 5c                	pop    %r12
    8f8e:	5d                   	pop    %rbp
    8f8f:	c3                   	ret

0000000000008f90 <_ZN4rtvc17RenderApplication16createImageViewsEv>:

void rtvc::RenderApplication::createImageViews() {
    8f90:	55                   	push   %rbp
    8f91:	48 89 e5             	mov    %rsp,%rbp
    8f94:	41 54                	push   %r12
    8f96:	53                   	push   %rbx
    8f97:	48 83 ec 70          	sub    $0x70,%rsp
    8f9b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  swapChainImageViews.resize(swapChainImages.size());
    8f9f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8fa3:	48 8d 98 a8 00 00 00 	lea    0xa8(%rax),%rbx
    8faa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8fae:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8fb2:	48 89 c7             	mov    %rax,%rdi
    8fb5:	e8 ce 47 00 00       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    8fba:	48 89 c6             	mov    %rax,%rsi
    8fbd:	48 89 df             	mov    %rbx,%rdi
    8fc0:	e8 e7 47 00 00       	call   d7ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    8fc5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8fcc:	00 
    8fcd:	e9 15 01 00 00       	jmp    90e7 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x157>
    VkImageViewCreateInfo createInfo{};
    8fd2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8fd6:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    8fda:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    8fde:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    8fe2:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    8fe6:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    createInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    8fea:	c7 45 90 0f 00 00 00 	movl   $0xf,-0x70(%rbp)
    createInfo.image = swapChainImages[i];
    8ff1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8ff5:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
    8ffc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9000:	48 89 c6             	mov    %rax,%rsi
    9003:	48 89 d7             	mov    %rdx,%rdi
    9006:	e8 27 48 00 00       	call   d832 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    900b:	48 8b 00             	mov    (%rax),%rax
    900e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    createInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    9012:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    createInfo.format = swapChainImageFormat;
    9019:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    901d:	8b 80 98 00 00 00    	mov    0x98(%rax),%eax
    9023:	89 45 b4             	mov    %eax,-0x4c(%rbp)

    createInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    9026:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    createInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    902d:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    createInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    9034:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    createInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    903b:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)

    createInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    9042:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    createInfo.subresourceRange.baseArrayLayer = 0;
    9049:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    createInfo.subresourceRange.levelCount = 1;
    9050:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
    createInfo.subresourceRange.baseArrayLayer = 0;
    9057:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    createInfo.subresourceRange.layerCount = 1;
    905e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

    if (vkCreateImageView(device, &createInfo, nullptr,
                          &swapChainImageViews[i]) != VK_SUCCESS)
    9065:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9069:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    9070:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9074:	48 89 c6             	mov    %rax,%rsi
    9077:	48 89 d7             	mov    %rdx,%rdi
    907a:	e8 d3 47 00 00       	call   d852 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    907f:	48 89 c2             	mov    %rax,%rdx
    if (vkCreateImageView(device, &createInfo, nullptr,
    9082:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9086:	48 8b 40 40          	mov    0x40(%rax),%rax
    908a:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    908e:	48 89 d1             	mov    %rdx,%rcx
    9091:	ba 00 00 00 00       	mov    $0x0,%edx
    9096:	48 89 c7             	mov    %rax,%rdi
    9099:	e8 c2 b3 ff ff       	call   4460 <vkCreateImageView@plt>
                          &swapChainImageViews[i]) != VK_SUCCESS)
    909e:	85 c0                	test   %eax,%eax
    90a0:	0f 95 c0             	setne  %al
    if (vkCreateImageView(device, &createInfo, nullptr,
    90a3:	84 c0                	test   %al,%al
    90a5:	74 3b                	je     90e2 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x152>
      throw std::runtime_error("Failed to create image view.");
    90a7:	bf 10 00 00 00       	mov    $0x10,%edi
    90ac:	e8 cf b0 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    90b1:	48 89 c3             	mov    %rax,%rbx
    90b4:	48 8d 05 db 13 01 00 	lea    0x113db(%rip),%rax        # 1a496 <_ZN6__pstl9execution2v1L5unseqE+0x22b>
    90bb:	48 89 c6             	mov    %rax,%rsi
    90be:	48 89 df             	mov    %rbx,%rdi
    90c1:	e8 4a b0 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    90c6:	48 8b 05 db fe 01 00 	mov    0x1fedb(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    90cd:	48 89 c2             	mov    %rax,%rdx
    90d0:	48 8d 05 69 fc 01 00 	lea    0x1fc69(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    90d7:	48 89 c6             	mov    %rax,%rsi
    90da:	48 89 df             	mov    %rbx,%rdi
    90dd:	e8 0e b7 ff ff       	call   47f0 <__cxa_throw@plt>
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    90e2:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    90e7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    90eb:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    90ef:	48 89 c7             	mov    %rax,%rdi
    90f2:	e8 91 46 00 00       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    90f7:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    90fb:	0f 92 c0             	setb   %al
    90fe:	84 c0                	test   %al,%al
    9100:	0f 85 cc fe ff ff    	jne    8fd2 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x42>
  }
}
    9106:	eb 16                	jmp    911e <_ZN4rtvc17RenderApplication16createImageViewsEv+0x18e>
      throw std::runtime_error("Failed to create image view.");
    9108:	49 89 c4             	mov    %rax,%r12
    910b:	48 89 df             	mov    %rbx,%rdi
    910e:	e8 6d b1 ff ff       	call   4280 <__cxa_free_exception@plt>
    9113:	4c 89 e0             	mov    %r12,%rax
    9116:	48 89 c7             	mov    %rax,%rdi
    9119:	e8 22 b7 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    911e:	48 83 c4 70          	add    $0x70,%rsp
    9122:	5b                   	pop    %rbx
    9123:	41 5c                	pop    %r12
    9125:	5d                   	pop    %rbp
    9126:	c3                   	ret
    9127:	90                   	nop

0000000000009128 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

std::vector<char>
rtvc::RenderApplication::readShader(const std::string &filePath) {
    9128:	55                   	push   %rbp
    9129:	48 89 e5             	mov    %rsp,%rbp
    912c:	41 54                	push   %r12
    912e:	53                   	push   %rbx
    912f:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
    9136:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
    913d:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
    9144:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
  std::ifstream file(filePath, std::ios::ate | std::ios::binary);
    914b:	be 04 00 00 00       	mov    $0x4,%esi
    9150:	bf 02 00 00 00       	mov    $0x2,%edi
    9155:	e8 1e 2b 00 00       	call   bc78 <_ZStorSt13_Ios_OpenmodeS_>
    915a:	89 c2                	mov    %eax,%edx
    915c:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
    9163:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    916a:	48 89 ce             	mov    %rcx,%rsi
    916d:	48 89 c7             	mov    %rax,%rdi
    9170:	e8 2b b6 ff ff       	call   47a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>

  if (!file.is_open())
    9175:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    917c:	48 89 c7             	mov    %rax,%rdi
    917f:	e8 0c b6 ff ff       	call   4790 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    9184:	83 f0 01             	xor    $0x1,%eax
    9187:	84 c0                	test   %al,%al
    9189:	74 3b                	je     91c6 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
    throw std::runtime_error("Failed to open shader file");
    918b:	bf 10 00 00 00       	mov    $0x10,%edi
    9190:	e8 eb af ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9195:	48 89 c3             	mov    %rax,%rbx
    9198:	48 8d 05 14 13 01 00 	lea    0x11314(%rip),%rax        # 1a4b3 <_ZN6__pstl9execution2v1L5unseqE+0x248>
    919f:	48 89 c6             	mov    %rax,%rsi
    91a2:	48 89 df             	mov    %rbx,%rdi
    91a5:	e8 66 af ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    91aa:	48 8b 05 f7 fd 01 00 	mov    0x1fdf7(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    91b1:	48 89 c2             	mov    %rax,%rdx
    91b4:	48 8d 05 85 fb 01 00 	lea    0x1fb85(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    91bb:	48 89 c6             	mov    %rax,%rsi
    91be:	48 89 df             	mov    %rbx,%rdi
    91c1:	e8 2a b6 ff ff       	call   47f0 <__cxa_throw@plt>

  size_t fileSize = static_cast<size_t>(file.tellg());
    91c6:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    91cd:	48 89 c7             	mov    %rax,%rdi
    91d0:	e8 3b b6 ff ff       	call   4810 <_ZNSi5tellgEv@plt>
    91d5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    91d9:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    91dd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    91e1:	48 89 c7             	mov    %rax,%rdi
    91e4:	e8 89 46 00 00       	call   d872 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    91e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(fileSize);
    91ed:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    91f1:	48 89 c7             	mov    %rax,%rdi
    91f4:	e8 57 b6 ff ff       	call   4850 <_ZNSaIcEC1Ev@plt>
    91f9:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    91fd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9201:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    9208:	48 89 ce             	mov    %rcx,%rsi
    920b:	48 89 c7             	mov    %rax,%rdi
    920e:	e8 71 46 00 00       	call   d884 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    9213:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9217:	48 89 c7             	mov    %rax,%rdi
    921a:	e8 91 b2 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>

  file.seekg(0);
    921f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9223:	be 00 00 00 00       	mov    $0x0,%esi
    9228:	48 89 c7             	mov    %rax,%rdi
    922b:	e8 0e 47 00 00       	call   d93e <_ZNSt4fposI11__mbstate_tEC1El>
    9230:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9234:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9238:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    923f:	48 89 ce             	mov    %rcx,%rsi
    9242:	48 89 c7             	mov    %rax,%rdi
    9245:	e8 86 b3 ff ff       	call   45d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), fileSize);
    924a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    924e:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    9255:	48 89 c7             	mov    %rax,%rdi
    9258:	e8 11 47 00 00       	call   d96e <_ZNSt6vectorIcSaIcEE4dataEv>
    925d:	48 89 c1             	mov    %rax,%rcx
    9260:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    9267:	48 89 da             	mov    %rbx,%rdx
    926a:	48 89 ce             	mov    %rcx,%rsi
    926d:	48 89 c7             	mov    %rax,%rdi
    9270:	e8 4b b3 ff ff       	call   45c0 <_ZNSi4readEPcl@plt>

  file.close();
    9275:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    927c:	48 89 c7             	mov    %rax,%rdi
    927f:	e8 fc ad ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>
  return buffer;
    9284:	90                   	nop
}
    9285:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    928c:	48 89 c7             	mov    %rax,%rdi
    928f:	e8 2c ae ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return buffer;
    9294:	eb 52                	jmp    92e8 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c0>
    throw std::runtime_error("Failed to open shader file");
    9296:	49 89 c4             	mov    %rax,%r12
    9299:	48 89 df             	mov    %rbx,%rdi
    929c:	e8 df af ff ff       	call   4280 <__cxa_free_exception@plt>
    92a1:	4c 89 e3             	mov    %r12,%rbx
    92a4:	eb 28                	jmp    92ce <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
  std::vector<char> buffer(fileSize);
    92a6:	48 89 c3             	mov    %rax,%rbx
    92a9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    92ad:	48 89 c7             	mov    %rax,%rdi
    92b0:	e8 fb b1 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
    92b5:	eb 17                	jmp    92ce <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
}
    92b7:	48 89 c3             	mov    %rax,%rbx
    92ba:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    92c1:	48 89 c7             	mov    %rax,%rdi
    92c4:	e8 31 46 00 00       	call   d8fa <_ZNSt6vectorIcSaIcEED1Ev>
    92c9:	eb 03                	jmp    92ce <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
    92cb:	48 89 c3             	mov    %rax,%rbx
    92ce:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    92d5:	48 89 c7             	mov    %rax,%rdi
    92d8:	e8 e3 ad ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    92dd:	48 89 d8             	mov    %rbx,%rax
    92e0:	48 89 c7             	mov    %rax,%rdi
    92e3:	e8 58 b5 ff ff       	call   4840 <_Unwind_Resume@plt>
    92e8:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    92ef:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
    92f6:	5b                   	pop    %rbx
    92f7:	41 5c                	pop    %r12
    92f9:	5d                   	pop    %rbp
    92fa:	c3                   	ret
    92fb:	90                   	nop

00000000000092fc <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>:

VkShaderModule
rtvc::RenderApplication::createShaderModule(const std::vector<char> &code) {
    92fc:	55                   	push   %rbp
    92fd:	48 89 e5             	mov    %rsp,%rbp
    9300:	41 54                	push   %r12
    9302:	53                   	push   %rbx
    9303:	48 83 ec 50          	sub    $0x50,%rsp
    9307:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    930b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  VkShaderModuleCreateInfo createInfo{};
    930f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9313:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    9317:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    931b:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    9320:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  createInfo.codeSize = code.size();
    9327:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    932b:	48 89 c7             	mov    %rax,%rdi
    932e:	e8 a3 46 00 00       	call   d9d6 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    9333:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    9337:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    933b:	48 89 c7             	mov    %rax,%rdi
    933e:	e8 b3 46 00 00       	call   d9f6 <_ZNKSt6vectorIcSaIcEE4dataEv>
    9343:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    9347:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    934b:	48 8b 40 40          	mov    0x40(%rax),%rax
    934f:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    9353:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    9357:	48 89 d1             	mov    %rdx,%rcx
    935a:	ba 00 00 00 00       	mov    $0x0,%edx
    935f:	48 89 c7             	mov    %rax,%rdi
    9362:	e8 69 af ff ff       	call   42d0 <vkCreateShaderModule@plt>
    9367:	85 c0                	test   %eax,%eax
    9369:	0f 95 c0             	setne  %al
    936c:	84 c0                	test   %al,%al
    936e:	74 3b                	je     93ab <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xaf>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create shader module.");
    9370:	bf 10 00 00 00       	mov    $0x10,%edi
    9375:	e8 06 ae ff ff       	call   4180 <__cxa_allocate_exception@plt>
    937a:	48 89 c3             	mov    %rax,%rbx
    937d:	48 8d 05 4c 11 01 00 	lea    0x1114c(%rip),%rax        # 1a4d0 <_ZN6__pstl9execution2v1L5unseqE+0x265>
    9384:	48 89 c6             	mov    %rax,%rsi
    9387:	48 89 df             	mov    %rbx,%rdi
    938a:	e8 81 ad ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    938f:	48 8b 05 12 fc 01 00 	mov    0x1fc12(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9396:	48 89 c2             	mov    %rax,%rdx
    9399:	48 8d 05 a0 f9 01 00 	lea    0x1f9a0(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    93a0:	48 89 c6             	mov    %rax,%rsi
    93a3:	48 89 df             	mov    %rbx,%rdi
    93a6:	e8 45 b4 ff ff       	call   47f0 <__cxa_throw@plt>

  return shaderModule;
    93ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    93af:	eb 16                	jmp    93c7 <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xcb>
    throw std::runtime_error("Failed to create shader module.");
    93b1:	49 89 c4             	mov    %rax,%r12
    93b4:	48 89 df             	mov    %rbx,%rdi
    93b7:	e8 c4 ae ff ff       	call   4280 <__cxa_free_exception@plt>
    93bc:	4c 89 e0             	mov    %r12,%rax
    93bf:	48 89 c7             	mov    %rax,%rdi
    93c2:	e8 79 b4 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    93c7:	48 83 c4 50          	add    $0x50,%rsp
    93cb:	5b                   	pop    %rbx
    93cc:	41 5c                	pop    %r12
    93ce:	5d                   	pop    %rbp
    93cf:	c3                   	ret

00000000000093d0 <_ZN4rtvc17RenderApplication16createRenderPassEv>:

void rtvc::RenderApplication::createRenderPass() {
    93d0:	55                   	push   %rbp
    93d1:	48 89 e5             	mov    %rsp,%rbp
    93d4:	41 54                	push   %r12
    93d6:	53                   	push   %rbx
    93d7:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    93de:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkAttachmentDescription colorAttachment{};
    93e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    93e9:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    93ed:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    93f1:	66 0f 7e 45 e0       	movd   %xmm0,-0x20(%rbp)
  colorAttachment.format = swapChainImageFormat;
    93f6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    93fd:	8b 80 98 00 00 00    	mov    0x98(%rax),%eax
    9403:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    9406:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    940d:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    9414:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    941b:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    9422:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    9429:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    9430:	c7 45 e0 ea cd 9a 3b 	movl   $0x3b9acdea,-0x20(%rbp)

  VkAttachmentReference colorAttachmentRef{};
    9437:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    943e:	00 
  colorAttachmentRef.attachment = 0;
    943f:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    9446:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)

  VkSubpassDescription subpass{};
    944d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9451:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    9458:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    945c:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    9460:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    9464:	66 0f d6 45 b0       	movq   %xmm0,-0x50(%rbp)
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    9469:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    9470:	00 00 00 
  subpass.colorAttachmentCount = 1;
    9473:	c7 45 88 01 00 00 00 	movl   $0x1,-0x78(%rbp)
  subpass.pColorAttachments = &colorAttachmentRef;
    947a:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    947e:	48 89 45 90          	mov    %rax,-0x70(%rbp)

  VkSubpassDependency dependency{};
    9482:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9486:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    948d:	0f 11 85 5c ff ff ff 	movups %xmm0,-0xa4(%rbp)
  dependency.srcSubpass = VK_SUBPASS_EXTERNAL;
    9494:	c7 85 50 ff ff ff ff 	movl   $0xffffffff,-0xb0(%rbp)
    949b:	ff ff ff 
  dependency.dstSubpass = 0;
    949e:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
    94a5:	00 00 00 
  dependency.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    94a8:	c7 85 58 ff ff ff 00 	movl   $0x400,-0xa8(%rbp)
    94af:	04 00 00 
  dependency.srcAccessMask = 0;
    94b2:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    94b9:	00 00 00 
  dependency.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    94bc:	c7 85 5c ff ff ff 00 	movl   $0x400,-0xa4(%rbp)
    94c3:	04 00 00 
  dependency.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    94c6:	c7 85 64 ff ff ff 00 	movl   $0x100,-0x9c(%rbp)
    94cd:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
    94d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    94d4:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    94db:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    94e2:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    94e9:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    94f0:	c7 85 10 ff ff ff 26 	movl   $0x26,-0xf0(%rbp)
    94f7:	00 00 00 
  renderPassInfo.attachmentCount = 1;
    94fa:	c7 85 24 ff ff ff 01 	movl   $0x1,-0xdc(%rbp)
    9501:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    9504:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9508:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  renderPassInfo.subpassCount = 1;
    950f:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    9516:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    9519:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    9520:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  renderPassInfo.dependencyCount = 1;
    9527:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    952e:	00 00 00 
  renderPassInfo.pDependencies = &dependency;
    9531:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    9538:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)

  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
    953f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9546:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    954d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9554:	48 8b 40 40          	mov    0x40(%rax),%rax
    9558:	48 8d b5 10 ff ff ff 	lea    -0xf0(%rbp),%rsi
    955f:	48 89 d1             	mov    %rdx,%rcx
    9562:	ba 00 00 00 00       	mov    $0x0,%edx
    9567:	48 89 c7             	mov    %rax,%rdi
    956a:	e8 d1 ac ff ff       	call   4240 <vkCreateRenderPass@plt>
    956f:	85 c0                	test   %eax,%eax
    9571:	0f 95 c0             	setne  %al
    9574:	84 c0                	test   %al,%al
    9576:	74 51                	je     95c9 <_ZN4rtvc17RenderApplication16createRenderPassEv+0x1f9>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create render pass.");
    9578:	bf 10 00 00 00       	mov    $0x10,%edi
    957d:	e8 fe ab ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9582:	48 89 c3             	mov    %rax,%rbx
    9585:	48 8d 05 64 0f 01 00 	lea    0x10f64(%rip),%rax        # 1a4f0 <_ZN6__pstl9execution2v1L5unseqE+0x285>
    958c:	48 89 c6             	mov    %rax,%rsi
    958f:	48 89 df             	mov    %rbx,%rdi
    9592:	e8 79 ab ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    9597:	48 8b 05 0a fa 01 00 	mov    0x1fa0a(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    959e:	48 89 c2             	mov    %rax,%rdx
    95a1:	48 8d 05 98 f7 01 00 	lea    0x1f798(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    95a8:	48 89 c6             	mov    %rax,%rsi
    95ab:	48 89 df             	mov    %rbx,%rdi
    95ae:	e8 3d b2 ff ff       	call   47f0 <__cxa_throw@plt>
    95b3:	49 89 c4             	mov    %rax,%r12
    95b6:	48 89 df             	mov    %rbx,%rdi
    95b9:	e8 c2 ac ff ff       	call   4280 <__cxa_free_exception@plt>
    95be:	4c 89 e0             	mov    %r12,%rax
    95c1:	48 89 c7             	mov    %rax,%rdi
    95c4:	e8 77 b2 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    95c9:	90                   	nop
    95ca:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
    95d1:	5b                   	pop    %rbx
    95d2:	41 5c                	pop    %r12
    95d4:	5d                   	pop    %rbp
    95d5:	c3                   	ret

00000000000095d6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>:

void rtvc::RenderApplication::createGraphicsPipeline() {
    95d6:	55                   	push   %rbp
    95d7:	48 89 e5             	mov    %rsp,%rbp
    95da:	41 55                	push   %r13
    95dc:	41 54                	push   %r12
    95de:	53                   	push   %rbx
    95df:	48 81 ec 38 04 00 00 	sub    $0x438,%rsp
    95e6:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    95ed:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    95f1:	48 89 c7             	mov    %rax,%rdi
    95f4:	e8 57 b2 ff ff       	call   4850 <_ZNSaIcEC1Ev@plt>
    95f9:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    95fd:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    9604:	48 8d 0d 05 0f 01 00 	lea    0x10f05(%rip),%rcx        # 1a510 <_ZN6__pstl9execution2v1L5unseqE+0x2a5>
    960b:	48 89 ce             	mov    %rcx,%rsi
    960e:	48 89 c7             	mov    %rax,%rdi
    9611:	e8 3c 2a 00 00       	call   c052 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    9616:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    961d:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    9624:	48 8b 8d b8 fb ff ff 	mov    -0x448(%rbp),%rcx
    962b:	48 89 ce             	mov    %rcx,%rsi
    962e:	48 89 c7             	mov    %rax,%rdi
    9631:	e8 f2 fa ff ff       	call   9128 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    9636:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    963d:	48 89 c7             	mov    %rax,%rdi
    9640:	e8 eb ab ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9645:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    9649:	48 89 c7             	mov    %rax,%rdi
    964c:	e8 5f ae ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
  auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    9651:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    9655:	48 89 c7             	mov    %rax,%rdi
    9658:	e8 f3 b1 ff ff       	call   4850 <_ZNSaIcEC1Ev@plt>
    965d:	48 8d 55 c3          	lea    -0x3d(%rbp),%rdx
    9661:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9665:	48 8d 0d c4 0e 01 00 	lea    0x10ec4(%rip),%rcx        # 1a530 <_ZN6__pstl9execution2v1L5unseqE+0x2c5>
    966c:	48 89 ce             	mov    %rcx,%rsi
    966f:	48 89 c7             	mov    %rax,%rdi
    9672:	e8 db 29 00 00       	call   c052 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    9677:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    967e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    9682:	48 8b 8d b8 fb ff ff 	mov    -0x448(%rbp),%rcx
    9689:	48 89 ce             	mov    %rcx,%rsi
    968c:	48 89 c7             	mov    %rax,%rdi
    968f:	e8 94 fa ff ff       	call   9128 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    9694:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9698:	48 89 c7             	mov    %rax,%rdi
    969b:	e8 90 ab ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    96a0:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    96a4:	48 89 c7             	mov    %rax,%rdi
    96a7:	e8 04 ae ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>

  VkShaderModule vertShaderModule = createShaderModule(vertShaderCode);
    96ac:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    96b3:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    96ba:	48 89 d6             	mov    %rdx,%rsi
    96bd:	48 89 c7             	mov    %rax,%rdi
    96c0:	e8 37 fc ff ff       	call   92fc <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    96c5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  VkShaderModule fragShaderModule = createShaderModule(fragShaderCode);
    96c9:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    96d0:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    96d7:	48 89 d6             	mov    %rdx,%rsi
    96da:	48 89 c7             	mov    %rax,%rdi
    96dd:	e8 1a fc ff ff       	call   92fc <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    96e2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)

  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    96e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    96ea:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    96f1:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    96f8:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
  vertShaderStageInfo.sType =
    96ff:	c7 85 00 ff ff ff 12 	movl   $0x12,-0x100(%rbp)
    9706:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    9709:	c7 85 14 ff ff ff 01 	movl   $0x1,-0xec(%rbp)
    9710:	00 00 00 
  vertShaderStageInfo.module = vertShaderModule;
    9713:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9717:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  vertShaderStageInfo.pName = "main";
    971e:	48 8d 05 2b 0e 01 00 	lea    0x10e2b(%rip),%rax        # 1a550 <_ZN6__pstl9execution2v1L5unseqE+0x2e5>
    9725:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    972c:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
    9733:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    9737:	66 0f ef c0          	pxor   %xmm0,%xmm0
    973b:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    9742:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    9749:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
  fragShaderStageInfo.sType =
    9750:	c7 85 d0 fe ff ff 12 	movl   $0x12,-0x130(%rbp)
    9757:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    975a:	c7 85 e4 fe ff ff 10 	movl   $0x10,-0x11c(%rbp)
    9761:	00 00 00 
  fragShaderStageInfo.module = fragShaderModule;
    9764:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9768:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  fragShaderStageInfo.pName = "main";
    976f:	48 8d 05 da 0d 01 00 	lea    0x10dda(%rip),%rax        # 1a550 <_ZN6__pstl9execution2v1L5unseqE+0x2e5>
    9776:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    977d:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    9784:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    9788:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    978f:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    9796:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    979d:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    97a4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    97ab:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    97b2:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    97b9:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
    97c0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    97c7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    97ce:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    97d5:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
    97dc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    97e3:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    97ea:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    97f1:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
    97f8:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    97ff:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    9806:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    980d:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
    9814:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    981b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    9822:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    9829:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)

  VkPipelineVertexInputStateCreateInfo vertexInputInfo{};
    9830:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9834:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    983b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    9842:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
  vertexInputInfo.sType =
    9849:	c7 85 40 fe ff ff 13 	movl   $0x13,-0x1c0(%rbp)
    9850:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;

  auto bindingDescription = rtvc::Vertex::getBindingDescription();
    9853:	e8 fa ee 00 00       	call   18752 <_ZN4rtvc6Vertex21getBindingDescriptionEv>
    9858:	48 89 85 34 fe ff ff 	mov    %rax,-0x1cc(%rbp)
    985f:	8b 85 3c fe ff ff    	mov    -0x1c4(%rbp),%eax
    9865:	83 e0 00             	and    $0x0,%eax
    9868:	09 d0                	or     %edx,%eax
    986a:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%rbp)
  auto attributeDescriptions = rtvc::Vertex::getAttributeDescriptions();
    9870:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    9877:	48 89 c7             	mov    %rax,%rdi
    987a:	e8 15 ef 00 00       	call   18794 <_ZN4rtvc6Vertex24getAttributeDescriptionsEv>

  vertexInputInfo.vertexBindingDescriptionCount = 1;
    987f:	c7 85 54 fe ff ff 01 	movl   $0x1,-0x1ac(%rbp)
    9886:	00 00 00 
  vertexInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
    9889:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    9890:	48 89 c7             	mov    %rax,%rdi
    9893:	e8 82 41 00 00       	call   da1a <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertexInputInfo.vertexAttributeDescriptionCount =
    9898:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  vertexInputInfo.pVertexBindingDescriptions = &bindingDescription;
    989e:	48 8d 85 34 fe ff ff 	lea    -0x1cc(%rbp),%rax
    98a5:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  vertexInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    98ac:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    98b3:	48 89 c7             	mov    %rax,%rdi
    98b6:	e8 fb 26 00 00       	call   bfb6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
    98bb:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)

  VkPipelineInputAssemblyStateCreateInfo inputAssembly{};
    98c2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    98c6:	0f 29 85 f0 fd ff ff 	movaps %xmm0,-0x210(%rbp)
    98cd:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
  inputAssembly.sType =
    98d4:	c7 85 f0 fd ff ff 14 	movl   $0x14,-0x210(%rbp)
    98db:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssembly.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    98de:	c7 85 04 fe ff ff 03 	movl   $0x3,-0x1fc(%rbp)
    98e5:	00 00 00 
  inputAssembly.primitiveRestartEnable = VK_FALSE;
    98e8:	c7 85 08 fe ff ff 00 	movl   $0x0,-0x1f8(%rbp)
    98ef:	00 00 00 

  VkViewport viewport{};
    98f2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    98f6:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    98fd:	66 0f d6 85 e0 fd ff 	movq   %xmm0,-0x220(%rbp)
    9904:	ff 
  viewport.x = 0.0f;
    9905:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9909:	f3 0f 11 85 d0 fd ff 	movss  %xmm0,-0x230(%rbp)
    9910:	ff 
  viewport.y = 0.0f;
    9911:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9915:	f3 0f 11 85 d4 fd ff 	movss  %xmm0,-0x22c(%rbp)
    991c:	ff 
  viewport.width = static_cast<float>(swapChainExtent.width);
    991d:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9924:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    992a:	89 c0                	mov    %eax,%eax
    992c:	48 85 c0             	test   %rax,%rax
    992f:	78 0b                	js     993c <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x366>
    9931:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9935:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    993a:	eb 19                	jmp    9955 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x37f>
    993c:	48 89 c2             	mov    %rax,%rdx
    993f:	48 d1 ea             	shr    %rdx
    9942:	83 e0 01             	and    $0x1,%eax
    9945:	48 09 c2             	or     %rax,%rdx
    9948:	66 0f ef c0          	pxor   %xmm0,%xmm0
    994c:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    9951:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    9955:	f3 0f 11 85 d8 fd ff 	movss  %xmm0,-0x228(%rbp)
    995c:	ff 
  viewport.height = static_cast<float>(swapChainExtent.height);
    995d:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9964:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    996a:	89 c0                	mov    %eax,%eax
    996c:	48 85 c0             	test   %rax,%rax
    996f:	78 0b                	js     997c <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x3a6>
    9971:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9975:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    997a:	eb 19                	jmp    9995 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x3bf>
    997c:	48 89 c2             	mov    %rax,%rdx
    997f:	48 d1 ea             	shr    %rdx
    9982:	83 e0 01             	and    $0x1,%eax
    9985:	48 09 c2             	or     %rax,%rdx
    9988:	66 0f ef c0          	pxor   %xmm0,%xmm0
    998c:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    9991:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    9995:	f3 0f 11 85 dc fd ff 	movss  %xmm0,-0x224(%rbp)
    999c:	ff 
  viewport.minDepth = 0.0f;
    999d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    99a1:	f3 0f 11 85 e0 fd ff 	movss  %xmm0,-0x220(%rbp)
    99a8:	ff 
  viewport.maxDepth = 1.0f;
    99a9:	f3 0f 10 05 5f 0e 01 	movss  0x10e5f(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    99b0:	00 
    99b1:	f3 0f 11 85 e4 fd ff 	movss  %xmm0,-0x21c(%rbp)
    99b8:	ff 

  VkRect2D scissor{};
    99b9:	48 c7 85 c0 fd ff ff 	movq   $0x0,-0x240(%rbp)
    99c0:	00 00 00 00 
    99c4:	48 c7 85 c8 fd ff ff 	movq   $0x0,-0x238(%rbp)
    99cb:	00 00 00 00 
  scissor.offset = {0, 0};
    99cf:	c7 85 c0 fd ff ff 00 	movl   $0x0,-0x240(%rbp)
    99d6:	00 00 00 
    99d9:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%rbp)
    99e0:	00 00 00 
  scissor.extent = swapChainExtent;
    99e3:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    99ea:	48 8b 80 9c 00 00 00 	mov    0x9c(%rax),%rax
    99f1:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)

  VkPipelineViewportStateCreateInfo viewportState{};
    99f8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    99fc:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    9a03:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    9a0a:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  viewportState.sType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    9a11:	c7 85 90 fd ff ff 16 	movl   $0x16,-0x270(%rbp)
    9a18:	00 00 00 
  viewportState.viewportCount = 1;
    9a1b:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    9a22:	00 00 00 
  viewportState.pViewports = &viewport;
    9a25:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
    9a2c:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  viewportState.scissorCount = 1;
    9a33:	c7 85 b0 fd ff ff 01 	movl   $0x1,-0x250(%rbp)
    9a3a:	00 00 00 
  viewportState.pScissors = &scissor;
    9a3d:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    9a44:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)

  VkPipelineRasterizationStateCreateInfo rasterizer{};
    9a4b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9a4f:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    9a56:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
    9a5d:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    9a64:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
  rasterizer.sType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    9a6b:	c7 85 50 fd ff ff 17 	movl   $0x17,-0x2b0(%rbp)
    9a72:	00 00 00 
  rasterizer.depthClampEnable = VK_FALSE;
    9a75:	c7 85 64 fd ff ff 00 	movl   $0x0,-0x29c(%rbp)
    9a7c:	00 00 00 
  rasterizer.rasterizerDiscardEnable = VK_FALSE;
    9a7f:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
    9a86:	00 00 00 
  rasterizer.polygonMode = VK_POLYGON_MODE_FILL;
    9a89:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
    9a90:	00 00 00 
  rasterizer.lineWidth = 1.0f;
    9a93:	f3 0f 10 05 75 0d 01 	movss  0x10d75(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    9a9a:	00 
    9a9b:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    9aa2:	ff 
  rasterizer.cullMode = VK_CULL_MODE_BACK_BIT;
    9aa3:	c7 85 70 fd ff ff 02 	movl   $0x2,-0x290(%rbp)
    9aaa:	00 00 00 
  rasterizer.frontFace = VK_FRONT_FACE_CLOCKWISE;
    9aad:	c7 85 74 fd ff ff 01 	movl   $0x1,-0x28c(%rbp)
    9ab4:	00 00 00 
  rasterizer.depthBiasEnable = VK_FALSE;
    9ab7:	c7 85 78 fd ff ff 00 	movl   $0x0,-0x288(%rbp)
    9abe:	00 00 00 
  rasterizer.depthBiasConstantFactor = 0.0f;
    9ac1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9ac5:	f3 0f 11 85 7c fd ff 	movss  %xmm0,-0x284(%rbp)
    9acc:	ff 
  rasterizer.depthBiasClamp = 0.0f;
    9acd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9ad1:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    9ad8:	ff 
  rasterizer.depthBiasSlopeFactor = 0.0f;
    9ad9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9add:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    9ae4:	ff 

  VkPipelineMultisampleStateCreateInfo multisampling{};
    9ae5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9ae9:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    9af0:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
    9af7:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
  multisampling.sType =
    9afe:	c7 85 20 fd ff ff 18 	movl   $0x18,-0x2e0(%rbp)
    9b05:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampling.sampleShadingEnable = VK_FALSE;
    9b08:	c7 85 38 fd ff ff 00 	movl   $0x0,-0x2c8(%rbp)
    9b0f:	00 00 00 
  multisampling.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    9b12:	c7 85 34 fd ff ff 01 	movl   $0x1,-0x2cc(%rbp)
    9b19:	00 00 00 
  multisampling.minSampleShading = 1.0F;
    9b1c:	f3 0f 10 05 ec 0c 01 	movss  0x10cec(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    9b23:	00 
    9b24:	f3 0f 11 85 3c fd ff 	movss  %xmm0,-0x2c4(%rbp)
    9b2b:	ff 
  multisampling.pSampleMask = nullptr;
    9b2c:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
    9b33:	00 00 00 00 
  multisampling.alphaToCoverageEnable = VK_FALSE;
    9b37:	c7 85 48 fd ff ff 00 	movl   $0x0,-0x2b8(%rbp)
    9b3e:	00 00 00 
  multisampling.alphaToOneEnable = VK_FALSE;
    9b41:	c7 85 4c fd ff ff 00 	movl   $0x0,-0x2b4(%rbp)
    9b48:	00 00 00 

  // VkPipelineDepthStencilStateCreateInfo

  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    9b4b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9b4f:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    9b56:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
  colorBlendAttachment.colorWriteMask =
    9b5d:	c7 85 1c fd ff ff 0f 	movl   $0xf,-0x2e4(%rbp)
    9b64:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_FALSE;
    9b67:	c7 85 00 fd ff ff 00 	movl   $0x0,-0x300(%rbp)
    9b6e:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_ONE;
    9b71:	c7 85 04 fd ff ff 01 	movl   $0x1,-0x2fc(%rbp)
    9b78:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor = VK_BLEND_FACTOR_ZERO;
    9b7b:	c7 85 08 fd ff ff 00 	movl   $0x0,-0x2f8(%rbp)
    9b82:	00 00 00 
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    9b85:	c7 85 0c fd ff ff 00 	movl   $0x0,-0x2f4(%rbp)
    9b8c:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    9b8f:	c7 85 10 fd ff ff 01 	movl   $0x1,-0x2f0(%rbp)
    9b96:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    9b99:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    9ba0:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    9ba3:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    9baa:	00 00 00 
  // VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA; colorBlendAttachment.colorBlendOp =
  // VK_BLEND_OP_ADD; colorBlendAttachment.srcAlphaBlendFactor =
  // VK_BLEND_FACTOR_ONE; colorBlendAttachment.dstAlphaBlendFactor =
  // VK_BLEND_FACTOR_ZERO; colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;

  VkPipelineColorBlendStateCreateInfo colorBlending{};
    9bad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9bb1:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
    9bb8:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    9bbf:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    9bc6:	66 0f d6 85 f0 fc ff 	movq   %xmm0,-0x310(%rbp)
    9bcd:	ff 
  colorBlending.sType =
    9bce:	c7 85 c0 fc ff ff 1a 	movl   $0x1a,-0x340(%rbp)
    9bd5:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlending.logicOpEnable = VK_FALSE;
    9bd8:	c7 85 d4 fc ff ff 00 	movl   $0x0,-0x32c(%rbp)
    9bdf:	00 00 00 
  colorBlending.logicOp = VK_LOGIC_OP_COPY;
    9be2:	c7 85 d8 fc ff ff 03 	movl   $0x3,-0x328(%rbp)
    9be9:	00 00 00 
  colorBlending.attachmentCount = 1;
    9bec:	c7 85 dc fc ff ff 01 	movl   $0x1,-0x324(%rbp)
    9bf3:	00 00 00 
  colorBlending.pAttachments = &colorBlendAttachment;
    9bf6:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    9bfd:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  colorBlending.blendConstants[0] = 0.0f;
    9c04:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9c08:	f3 0f 11 85 e8 fc ff 	movss  %xmm0,-0x318(%rbp)
    9c0f:	ff 
  colorBlending.blendConstants[1] = 0.0f;
    9c10:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9c14:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    9c1b:	ff 
  colorBlending.blendConstants[2] = 0.0f;
    9c1c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9c20:	f3 0f 11 85 f0 fc ff 	movss  %xmm0,-0x310(%rbp)
    9c27:	ff 
  colorBlending.blendConstants[3] = 0.0f;
    9c28:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9c2c:	f3 0f 11 85 f4 fc ff 	movss  %xmm0,-0x30c(%rbp)
    9c33:	ff 

  std::vector<VkDynamicState> dynamicStates = {VK_DYNAMIC_STATE_VIEWPORT,
                                               VK_DYNAMIC_STATE_LINE_WIDTH};
    9c34:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    9c3b:	c7 45 c8 02 00 00 00 	movl   $0x2,-0x38(%rbp)
    9c42:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    9c46:	49 89 c4             	mov    %rax,%r12
    9c49:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    9c4f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9c53:	48 89 c7             	mov    %rax,%rdi
    9c56:	e8 cf 3d 00 00       	call   da2a <_ZNSaI14VkDynamicStateEC1Ev>
    9c5b:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    9c5f:	4c 89 e6             	mov    %r12,%rsi
    9c62:	4c 89 ef             	mov    %r13,%rdi
    9c65:	4c 89 e1             	mov    %r12,%rcx
    9c68:	4c 89 eb             	mov    %r13,%rbx
    9c6b:	48 89 df             	mov    %rbx,%rdi
    9c6e:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9c75:	48 89 d1             	mov    %rdx,%rcx
    9c78:	48 89 fa             	mov    %rdi,%rdx
    9c7b:	48 89 c7             	mov    %rax,%rdi
    9c7e:	e8 df 3d 00 00       	call   da62 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    9c83:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9c87:	48 89 c7             	mov    %rax,%rdi
    9c8a:	e8 b7 3d 00 00       	call   da46 <_ZNSaI14VkDynamicStateED1Ev>

  [[maybe_unused]] VkPipelineDynamicStateCreateInfo dynamicState{};
    9c8f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9c93:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    9c9a:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
  dynamicState.sType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;
    9ca1:	c7 85 80 fc ff ff 1b 	movl   $0x1b,-0x380(%rbp)
    9ca8:	00 00 00 
  dynamicState.dynamicStateCount = static_cast<uint32_t>(dynamicStates.size());
    9cab:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9cb2:	48 89 c7             	mov    %rax,%rdi
    9cb5:	e8 74 3e 00 00       	call   db2e <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>
    9cba:	89 85 94 fc ff ff    	mov    %eax,-0x36c(%rbp)
  dynamicState.pDynamicStates = dynamicStates.data();
    9cc0:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9cc7:	48 89 c7             	mov    %rax,%rdi
    9cca:	e8 83 3e 00 00       	call   db52 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>
    9ccf:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)

  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    9cd6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9cda:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    9ce1:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
    9ce8:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    9cef:	c7 85 50 fc ff ff 1e 	movl   $0x1e,-0x3b0(%rbp)
    9cf6:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    9cf9:	c7 85 64 fc ff ff 00 	movl   $0x0,-0x39c(%rbp)
    9d00:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    9d03:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    9d0a:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    9d0e:	c7 85 70 fc ff ff 00 	movl   $0x0,-0x390(%rbp)
    9d15:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    9d18:	48 c7 85 78 fc ff ff 	movq   $0x0,-0x388(%rbp)
    9d1f:	00 00 00 00 

  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    9d23:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9d2a:	48 8d 90 c8 00 00 00 	lea    0xc8(%rax),%rdx
    9d31:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9d38:	48 8b 40 40          	mov    0x40(%rax),%rax
    9d3c:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
    9d43:	48 89 d1             	mov    %rdx,%rcx
    9d46:	ba 00 00 00 00       	mov    $0x0,%edx
    9d4b:	48 89 c7             	mov    %rax,%rdi
    9d4e:	e8 cd a5 ff ff       	call   4320 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS)
    9d53:	85 c0                	test   %eax,%eax
    9d55:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    9d58:	84 c0                	test   %al,%al
    9d5a:	74 3b                	je     9d97 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x7c1>
    throw std::runtime_error("Failed to create pipeline layout.");
    9d5c:	bf 10 00 00 00       	mov    $0x10,%edi
    9d61:	e8 1a a4 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9d66:	48 89 c3             	mov    %rax,%rbx
    9d69:	48 8d 05 e8 07 01 00 	lea    0x107e8(%rip),%rax        # 1a558 <_ZN6__pstl9execution2v1L5unseqE+0x2ed>
    9d70:	48 89 c6             	mov    %rax,%rsi
    9d73:	48 89 df             	mov    %rbx,%rdi
    9d76:	e8 95 a3 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    9d7b:	48 8b 05 26 f2 01 00 	mov    0x1f226(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9d82:	48 89 c2             	mov    %rax,%rdx
    9d85:	48 8d 05 b4 ef 01 00 	lea    0x1efb4(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9d8c:	48 89 c6             	mov    %rax,%rsi
    9d8f:	48 89 df             	mov    %rbx,%rdi
    9d92:	e8 59 aa ff ff       	call   47f0 <__cxa_throw@plt>

  VkGraphicsPipelineCreateInfo pipelineInfo{};
    9d97:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
    9d9e:	b8 00 00 00 00       	mov    $0x0,%eax
    9da3:	b9 12 00 00 00       	mov    $0x12,%ecx
    9da8:	48 89 d7             	mov    %rdx,%rdi
    9dab:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    9dae:	c7 85 c0 fb ff ff 1c 	movl   $0x1c,-0x440(%rbp)
    9db5:	00 00 00 
  pipelineInfo.stageCount = 2;
    9db8:	c7 85 d4 fb ff ff 02 	movl   $0x2,-0x42c(%rbp)
    9dbf:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    9dc2:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    9dc9:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
  pipelineInfo.pVertexInputState = &vertexInputInfo;
    9dd0:	48 8d 85 40 fe ff ff 	lea    -0x1c0(%rbp),%rax
    9dd7:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssembly;
    9dde:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    9de5:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
  pipelineInfo.pViewportState = &viewportState;
    9dec:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
    9df3:	48 89 85 f8 fb ff ff 	mov    %rax,-0x408(%rbp)
  pipelineInfo.pRasterizationState = &rasterizer;
    9dfa:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    9e01:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
  pipelineInfo.pMultisampleState = &multisampling;
    9e08:	48 8d 85 20 fd ff ff 	lea    -0x2e0(%rbp),%rax
    9e0f:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    9e16:	48 c7 85 10 fc ff ff 	movq   $0x0,-0x3f0(%rbp)
    9e1d:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlending;
    9e21:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    9e28:	48 89 85 18 fc ff ff 	mov    %rax,-0x3e8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    9e2f:	48 c7 85 20 fc ff ff 	movq   $0x0,-0x3e0(%rbp)
    9e36:	00 00 00 00 
  pipelineInfo.layout = pipelineLayout;
    9e3a:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9e41:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    9e48:	48 89 85 28 fc ff ff 	mov    %rax,-0x3d8(%rbp)
  pipelineInfo.renderPass = renderPass;
    9e4f:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9e56:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    9e5d:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
  pipelineInfo.subpass = 0;
    9e64:	c7 85 38 fc ff ff 00 	movl   $0x0,-0x3c8(%rbp)
    9e6b:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    9e6e:	48 c7 85 40 fc ff ff 	movq   $0x0,-0x3c0(%rbp)
    9e75:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    9e79:	c7 85 48 fc ff ff ff 	movl   $0xffffffff,-0x3b8(%rbp)
    9e80:	ff ff ff 

  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    9e83:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9e8a:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx
    9e91:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9e98:	48 8b 40 40          	mov    0x40(%rax),%rax
    9e9c:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
    9ea3:	49 89 c9             	mov    %rcx,%r9
    9ea6:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9eac:	48 89 d1             	mov    %rdx,%rcx
    9eaf:	ba 01 00 00 00       	mov    $0x1,%edx
    9eb4:	be 00 00 00 00       	mov    $0x0,%esi
    9eb9:	48 89 c7             	mov    %rax,%rdi
    9ebc:	e8 af a2 ff ff       	call   4170 <vkCreateGraphicsPipelines@plt>
                                nullptr, &graphicsPipeline) != VK_SUCCESS)
    9ec1:	85 c0                	test   %eax,%eax
    9ec3:	0f 95 c0             	setne  %al
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    9ec6:	84 c0                	test   %al,%al
    9ec8:	74 3b                	je     9f05 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x92f>
    throw std::runtime_error("Failed to create graphics pipeline.");
    9eca:	bf 10 00 00 00       	mov    $0x10,%edi
    9ecf:	e8 ac a2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9ed4:	48 89 c3             	mov    %rax,%rbx
    9ed7:	48 8d 05 a2 06 01 00 	lea    0x106a2(%rip),%rax        # 1a580 <_ZN6__pstl9execution2v1L5unseqE+0x315>
    9ede:	48 89 c6             	mov    %rax,%rsi
    9ee1:	48 89 df             	mov    %rbx,%rdi
    9ee4:	e8 27 a2 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    9ee9:	48 8b 05 b8 f0 01 00 	mov    0x1f0b8(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9ef0:	48 89 c2             	mov    %rax,%rdx
    9ef3:	48 8d 05 46 ee 01 00 	lea    0x1ee46(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9efa:	48 89 c6             	mov    %rax,%rsi
    9efd:	48 89 df             	mov    %rbx,%rdi
    9f00:	e8 eb a8 ff ff       	call   47f0 <__cxa_throw@plt>

  vkDestroyShaderModule(device, fragShaderModule, nullptr);
    9f05:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9f0c:	48 8b 40 40          	mov    0x40(%rax),%rax
    9f10:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9f14:	ba 00 00 00 00       	mov    $0x0,%edx
    9f19:	48 89 ce             	mov    %rcx,%rsi
    9f1c:	48 89 c7             	mov    %rax,%rdi
    9f1f:	e8 3c a6 ff ff       	call   4560 <vkDestroyShaderModule@plt>
  vkDestroyShaderModule(device, vertShaderModule, nullptr);
    9f24:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9f2b:	48 8b 40 40          	mov    0x40(%rax),%rax
    9f2f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    9f33:	ba 00 00 00 00       	mov    $0x0,%edx
    9f38:	48 89 ce             	mov    %rcx,%rsi
    9f3b:	48 89 c7             	mov    %rax,%rdi
    9f3e:	e8 1d a6 ff ff       	call   4560 <vkDestroyShaderModule@plt>
}
    9f43:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9f4a:	48 89 c7             	mov    %rax,%rdi
    9f4d:	e8 98 3b 00 00       	call   daea <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    9f52:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    9f59:	48 89 c7             	mov    %rax,%rdi
    9f5c:	e8 99 39 00 00       	call   d8fa <_ZNSt6vectorIcSaIcEED1Ev>
    9f61:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    9f68:	48 89 c7             	mov    %rax,%rdi
    9f6b:	e8 8a 39 00 00       	call   d8fa <_ZNSt6vectorIcSaIcEED1Ev>
    9f70:	e9 c1 00 00 00       	jmp    a036 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa60>
  auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    9f75:	48 89 c3             	mov    %rax,%rbx
    9f78:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    9f7f:	48 89 c7             	mov    %rax,%rdi
    9f82:	e8 a9 a2 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9f87:	eb 03                	jmp    9f8c <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9b6>
    9f89:	48 89 c3             	mov    %rax,%rbx
    9f8c:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    9f90:	48 89 c7             	mov    %rax,%rdi
    9f93:	e8 18 a5 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
    9f98:	48 89 d8             	mov    %rbx,%rax
    9f9b:	48 89 c7             	mov    %rax,%rdi
    9f9e:	e8 9d a8 ff ff       	call   4840 <_Unwind_Resume@plt>
  auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    9fa3:	48 89 c3             	mov    %rax,%rbx
    9fa6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9faa:	48 89 c7             	mov    %rax,%rdi
    9fad:	e8 7e a2 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9fb2:	eb 03                	jmp    9fb7 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9e1>
    9fb4:	48 89 c3             	mov    %rax,%rbx
    9fb7:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    9fbb:	48 89 c7             	mov    %rax,%rdi
    9fbe:	e8 ed a4 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
    9fc3:	eb 57                	jmp    a01c <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa46>
                                               VK_DYNAMIC_STATE_LINE_WIDTH};
    9fc5:	48 89 c3             	mov    %rax,%rbx
    9fc8:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9fcc:	48 89 c7             	mov    %rax,%rdi
    9fcf:	e8 72 3a 00 00       	call   da46 <_ZNSaI14VkDynamicStateED1Ev>
    9fd4:	eb 37                	jmp    a00d <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa37>
    throw std::runtime_error("Failed to create pipeline layout.");
    9fd6:	49 89 c4             	mov    %rax,%r12
    9fd9:	48 89 df             	mov    %rbx,%rdi
    9fdc:	e8 9f a2 ff ff       	call   4280 <__cxa_free_exception@plt>
    9fe1:	4c 89 e3             	mov    %r12,%rbx
    9fe4:	eb 13                	jmp    9ff9 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa23>
    throw std::runtime_error("Failed to create graphics pipeline.");
    9fe6:	49 89 c4             	mov    %rax,%r12
    9fe9:	48 89 df             	mov    %rbx,%rdi
    9fec:	e8 8f a2 ff ff       	call   4280 <__cxa_free_exception@plt>
    9ff1:	4c 89 e3             	mov    %r12,%rbx
    9ff4:	eb 03                	jmp    9ff9 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa23>
}
    9ff6:	48 89 c3             	mov    %rax,%rbx
    9ff9:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    a000:	48 89 c7             	mov    %rax,%rdi
    a003:	e8 e2 3a 00 00       	call   daea <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    a008:	eb 03                	jmp    a00d <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa37>
    a00a:	48 89 c3             	mov    %rax,%rbx
    a00d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    a014:	48 89 c7             	mov    %rax,%rdi
    a017:	e8 de 38 00 00       	call   d8fa <_ZNSt6vectorIcSaIcEED1Ev>
    a01c:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    a023:	48 89 c7             	mov    %rax,%rdi
    a026:	e8 cf 38 00 00       	call   d8fa <_ZNSt6vectorIcSaIcEED1Ev>
    a02b:	48 89 d8             	mov    %rbx,%rax
    a02e:	48 89 c7             	mov    %rax,%rdi
    a031:	e8 0a a8 ff ff       	call   4840 <_Unwind_Resume@plt>
    a036:	48 81 c4 38 04 00 00 	add    $0x438,%rsp
    a03d:	5b                   	pop    %rbx
    a03e:	41 5c                	pop    %r12
    a040:	41 5d                	pop    %r13
    a042:	5d                   	pop    %rbp
    a043:	c3                   	ret

000000000000a044 <_ZN4rtvc17RenderApplication18createFramebuffersEv>:

void rtvc::RenderApplication::createFramebuffers() {
    a044:	55                   	push   %rbp
    a045:	48 89 e5             	mov    %rsp,%rbp
    a048:	41 54                	push   %r12
    a04a:	53                   	push   %rbx
    a04b:	48 83 ec 60          	sub    $0x60,%rsp
    a04f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  swapChainFrameBuffers.resize(swapChainImageViews.size());
    a053:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a057:	48 8d 98 d8 00 00 00 	lea    0xd8(%rax),%rbx
    a05e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a062:	48 05 a8 00 00 00    	add    $0xa8,%rax
    a068:	48 89 c7             	mov    %rax,%rdi
    a06b:	e8 06 3b 00 00       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    a070:	48 89 c6             	mov    %rax,%rsi
    a073:	48 89 df             	mov    %rbx,%rdi
    a076:	e8 1f 3b 00 00       	call   db9a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>

  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    a07b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    a082:	00 
    a083:	e9 fd 00 00 00       	jmp    a185 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x141>
    VkImageView attachments[] = {swapChainImageViews[i]};
    a088:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a08c:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    a093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a097:	48 89 c6             	mov    %rax,%rsi
    a09a:	48 89 d7             	mov    %rdx,%rdi
    a09d:	e8 b0 37 00 00       	call   d852 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    a0a2:	48 8b 00             	mov    (%rax),%rax
    a0a5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    VkFramebufferCreateInfo framebufferInfo{};
    a0a9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a0ad:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    a0b1:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a0b5:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    a0b9:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    a0bd:	c7 45 a0 25 00 00 00 	movl   $0x25,-0x60(%rbp)
    framebufferInfo.renderPass = renderPass;
    a0c4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a0c8:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    a0cf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    framebufferInfo.attachmentCount = 1;
    a0d3:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    framebufferInfo.pAttachments = attachments;
    a0da:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a0de:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    framebufferInfo.width = swapChainExtent.width;
    a0e2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a0e6:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    a0ec:	89 45 d0             	mov    %eax,-0x30(%rbp)
    framebufferInfo.height = swapChainExtent.height;
    a0ef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a0f3:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    a0f9:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    framebufferInfo.layers = 1;
    a0fc:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
                            &swapChainFrameBuffers[i]) != VK_SUCCESS)
    a103:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a107:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    a10e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a112:	48 89 c6             	mov    %rax,%rsi
    a115:	48 89 d7             	mov    %rdx,%rdi
    a118:	e8 03 3b 00 00       	call   dc20 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    a11d:	48 89 c2             	mov    %rax,%rdx
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    a120:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a124:	48 8b 40 40          	mov    0x40(%rax),%rax
    a128:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    a12c:	48 89 d1             	mov    %rdx,%rcx
    a12f:	ba 00 00 00 00       	mov    $0x0,%edx
    a134:	48 89 c7             	mov    %rax,%rdi
    a137:	e8 f4 a4 ff ff       	call   4630 <vkCreateFramebuffer@plt>
                            &swapChainFrameBuffers[i]) != VK_SUCCESS)
    a13c:	85 c0                	test   %eax,%eax
    a13e:	0f 95 c0             	setne  %al
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    a141:	84 c0                	test   %al,%al
    a143:	74 3b                	je     a180 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x13c>
      throw std::runtime_error("Failed to create framebuffer.");
    a145:	bf 10 00 00 00       	mov    $0x10,%edi
    a14a:	e8 31 a0 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a14f:	48 89 c3             	mov    %rax,%rbx
    a152:	48 8d 05 4b 04 01 00 	lea    0x1044b(%rip),%rax        # 1a5a4 <_ZN6__pstl9execution2v1L5unseqE+0x339>
    a159:	48 89 c6             	mov    %rax,%rsi
    a15c:	48 89 df             	mov    %rbx,%rdi
    a15f:	e8 ac 9f ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    a164:	48 8b 05 3d ee 01 00 	mov    0x1ee3d(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a16b:	48 89 c2             	mov    %rax,%rdx
    a16e:	48 8d 05 cb eb 01 00 	lea    0x1ebcb(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a175:	48 89 c6             	mov    %rax,%rsi
    a178:	48 89 df             	mov    %rbx,%rdi
    a17b:	e8 70 a6 ff ff       	call   47f0 <__cxa_throw@plt>
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    a180:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    a185:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a189:	48 05 a8 00 00 00    	add    $0xa8,%rax
    a18f:	48 89 c7             	mov    %rax,%rdi
    a192:	e8 df 39 00 00       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    a197:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    a19b:	0f 92 c0             	setb   %al
    a19e:	84 c0                	test   %al,%al
    a1a0:	0f 85 e2 fe ff ff    	jne    a088 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x44>
  }
}
    a1a6:	eb 16                	jmp    a1be <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x17a>
      throw std::runtime_error("Failed to create framebuffer.");
    a1a8:	49 89 c4             	mov    %rax,%r12
    a1ab:	48 89 df             	mov    %rbx,%rdi
    a1ae:	e8 cd a0 ff ff       	call   4280 <__cxa_free_exception@plt>
    a1b3:	4c 89 e0             	mov    %r12,%rax
    a1b6:	48 89 c7             	mov    %rax,%rdi
    a1b9:	e8 82 a6 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    a1be:	48 83 c4 60          	add    $0x60,%rsp
    a1c2:	5b                   	pop    %rbx
    a1c3:	41 5c                	pop    %r12
    a1c5:	5d                   	pop    %rbp
    a1c6:	c3                   	ret
    a1c7:	90                   	nop

000000000000a1c8 <_ZN4rtvc17RenderApplication17createCommandPoolEv>:

void rtvc::RenderApplication::createCommandPool() {
    a1c8:	55                   	push   %rbp
    a1c9:	48 89 e5             	mov    %rsp,%rbp
    a1cc:	41 54                	push   %r12
    a1ce:	53                   	push   %rbx
    a1cf:	48 83 ec 40          	sub    $0x40,%rsp
    a1d3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  QueueFamilyIndices queueFamilyIndices = findQueueFamilies(physicalDevice);
    a1d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a1db:	48 8b 50 38          	mov    0x38(%rax),%rdx
    a1df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a1e3:	48 89 d6             	mov    %rdx,%rsi
    a1e6:	48 89 c7             	mov    %rax,%rdi
    a1e9:	e8 de e1 ff ff       	call   83cc <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    a1ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a1f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

  VkCommandPoolCreateInfo poolInfo{};
    a1f6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a1fa:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    a1fe:	66 0f d6 45 d0       	movq   %xmm0,-0x30(%rbp)
  poolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    a203:	c7 45 c0 27 00 00 00 	movl   $0x27,-0x40(%rbp)
  poolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    a20a:	c7 45 d0 02 00 00 00 	movl   $0x2,-0x30(%rbp)
  poolInfo.queueFamilyIndex = queueFamilyIndices.graphicsFamily.value();
    a211:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    a215:	48 89 c7             	mov    %rax,%rdi
    a218:	e8 1d 1d 00 00       	call   bf3a <_ZNRSt8optionalIjE5valueEv>
    a21d:	8b 00                	mov    (%rax),%eax
    a21f:	89 45 d4             	mov    %eax,-0x2c(%rbp)

  if (vkCreateCommandPool(device, &poolInfo, nullptr, &commandPool) !=
    a222:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a226:	48 8d 90 f0 00 00 00 	lea    0xf0(%rax),%rdx
    a22d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a231:	48 8b 40 40          	mov    0x40(%rax),%rax
    a235:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    a239:	48 89 d1             	mov    %rdx,%rcx
    a23c:	ba 00 00 00 00       	mov    $0x0,%edx
    a241:	48 89 c7             	mov    %rax,%rdi
    a244:	e8 07 9f ff ff       	call   4150 <vkCreateCommandPool@plt>
    a249:	85 c0                	test   %eax,%eax
    a24b:	0f 95 c0             	setne  %al
    a24e:	84 c0                	test   %al,%al
    a250:	74 51                	je     a2a3 <_ZN4rtvc17RenderApplication17createCommandPoolEv+0xdb>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create command pool.");
    a252:	bf 10 00 00 00       	mov    $0x10,%edi
    a257:	e8 24 9f ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a25c:	48 89 c3             	mov    %rax,%rbx
    a25f:	48 8d 05 62 03 01 00 	lea    0x10362(%rip),%rax        # 1a5c8 <_ZN6__pstl9execution2v1L5unseqE+0x35d>
    a266:	48 89 c6             	mov    %rax,%rsi
    a269:	48 89 df             	mov    %rbx,%rdi
    a26c:	e8 9f 9e ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    a271:	48 8b 05 30 ed 01 00 	mov    0x1ed30(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a278:	48 89 c2             	mov    %rax,%rdx
    a27b:	48 8d 05 be ea 01 00 	lea    0x1eabe(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a282:	48 89 c6             	mov    %rax,%rsi
    a285:	48 89 df             	mov    %rbx,%rdi
    a288:	e8 63 a5 ff ff       	call   47f0 <__cxa_throw@plt>
    a28d:	49 89 c4             	mov    %rax,%r12
    a290:	48 89 df             	mov    %rbx,%rdi
    a293:	e8 e8 9f ff ff       	call   4280 <__cxa_free_exception@plt>
    a298:	4c 89 e0             	mov    %r12,%rax
    a29b:	48 89 c7             	mov    %rax,%rdi
    a29e:	e8 9d a5 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    a2a3:	90                   	nop
    a2a4:	48 83 c4 40          	add    $0x40,%rsp
    a2a8:	5b                   	pop    %rbx
    a2a9:	41 5c                	pop    %r12
    a2ab:	5d                   	pop    %rbp
    a2ac:	c3                   	ret
    a2ad:	90                   	nop

000000000000a2ae <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>:

void rtvc::RenderApplication::createBuffer(VkDeviceSize size,
                                           VkBufferUsageFlags usage,
                                           VkMemoryPropertyFlags properties,
                                           VkBuffer &buffer,
                                           VkDeviceMemory &bufferMemory) {
    a2ae:	55                   	push   %rbp
    a2af:	48 89 e5             	mov    %rsp,%rbp
    a2b2:	41 54                	push   %r12
    a2b4:	53                   	push   %rbx
    a2b5:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    a2bc:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    a2c3:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    a2ca:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
    a2d0:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
    a2d6:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    a2dd:	4c 89 8d 48 ff ff ff 	mov    %r9,-0xb8(%rbp)
  using rtvc::resources::shaders::triangle;
  VkBufferCreateInfo bufferInfo{};
    a2e4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a2e8:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a2ec:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    a2f0:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    a2f4:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
    a2f9:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size = size;
    a300:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a307:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = usage;
    a30b:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    a311:	89 45 d0             	mov    %eax,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
    a314:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &buffer) != VK_SUCCESS) {
    a31b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a322:	48 8b 40 40          	mov    0x40(%rax),%rax
    a326:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    a32d:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    a331:	48 89 d1             	mov    %rdx,%rcx
    a334:	ba 00 00 00 00       	mov    $0x0,%edx
    a339:	48 89 c7             	mov    %rax,%rdi
    a33c:	e8 af a0 ff ff       	call   43f0 <vkCreateBuffer@plt>
    a341:	85 c0                	test   %eax,%eax
    a343:	0f 95 c0             	setne  %al
    a346:	84 c0                	test   %al,%al
    a348:	74 3b                	je     a385 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0xd7>
    throw std::runtime_error("Failed to create vertex buffer.");
    a34a:	bf 10 00 00 00       	mov    $0x10,%edi
    a34f:	e8 2c 9e ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a354:	48 89 c3             	mov    %rax,%rbx
    a357:	48 8d 05 8a 02 01 00 	lea    0x1028a(%rip),%rax        # 1a5e8 <_ZN6__pstl9execution2v1L5unseqE+0x37d>
    a35e:	48 89 c6             	mov    %rax,%rsi
    a361:	48 89 df             	mov    %rbx,%rdi
    a364:	e8 a7 9d ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    a369:	48 8b 05 38 ec 01 00 	mov    0x1ec38(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a370:	48 89 c2             	mov    %rax,%rdx
    a373:	48 8d 05 c6 e9 01 00 	lea    0x1e9c6(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a37a:	48 89 c6             	mov    %rax,%rsi
    a37d:	48 89 df             	mov    %rbx,%rdi
    a380:	e8 6b a4 ff ff       	call   47f0 <__cxa_throw@plt>
  }

  VkMemoryRequirements memRequirements{};
    a385:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a389:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    a38d:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  vkGetBufferMemoryRequirements(device, buffer, &memRequirements);
    a392:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a399:	48 8b 08             	mov    (%rax),%rcx
    a39c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a3a3:	48 8b 40 40          	mov    0x40(%rax),%rax
    a3a7:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    a3ab:	48 89 ce             	mov    %rcx,%rsi
    a3ae:	48 89 c7             	mov    %rax,%rdi
    a3b1:	e8 da 9c ff ff       	call   4090 <vkGetBufferMemoryRequirements@plt>

  VkMemoryAllocateInfo allocInfo{};
    a3b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a3ba:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    a3c1:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
    a3c5:	c7 85 70 ff ff ff 05 	movl   $0x5,-0x90(%rbp)
    a3cc:	00 00 00 
  allocInfo.allocationSize = memRequirements.size;
    a3cf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a3d3:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  allocInfo.memoryTypeIndex =
      findMemoryType(memRequirements.memoryTypeBits, properties);
    a3d7:	8b 4d a0             	mov    -0x60(%rbp),%ecx
    a3da:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
    a3e0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a3e7:	89 ce                	mov    %ecx,%esi
    a3e9:	48 89 c7             	mov    %rax,%rdi
    a3ec:	e8 4d 09 00 00       	call   ad3e <_ZN4rtvc17RenderApplication14findMemoryTypeEjj>
  allocInfo.memoryTypeIndex =
    a3f1:	89 45 88             	mov    %eax,-0x78(%rbp)

  if (vkAllocateMemory(device, &allocInfo, nullptr, &bufferMemory) !=
    a3f4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a3fb:	48 8b 40 40          	mov    0x40(%rax),%rax
    a3ff:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    a406:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
    a40d:	48 89 d1             	mov    %rdx,%rcx
    a410:	ba 00 00 00 00       	mov    $0x0,%edx
    a415:	48 89 c7             	mov    %rax,%rdi
    a418:	e8 b3 a3 ff ff       	call   47d0 <vkAllocateMemory@plt>
    a41d:	85 c0                	test   %eax,%eax
    a41f:	0f 95 c0             	setne  %al
    a422:	84 c0                	test   %al,%al
    a424:	74 3b                	je     a461 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x1b3>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
    a426:	bf 10 00 00 00       	mov    $0x10,%edi
    a42b:	e8 50 9d ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a430:	48 89 c3             	mov    %rax,%rbx
    a433:	48 8d 05 ce 01 01 00 	lea    0x101ce(%rip),%rax        # 1a608 <_ZN6__pstl9execution2v1L5unseqE+0x39d>
    a43a:	48 89 c6             	mov    %rax,%rsi
    a43d:	48 89 df             	mov    %rbx,%rdi
    a440:	e8 cb 9c ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    a445:	48 8b 05 5c eb 01 00 	mov    0x1eb5c(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a44c:	48 89 c2             	mov    %rax,%rdx
    a44f:	48 8d 05 ea e8 01 00 	lea    0x1e8ea(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a456:	48 89 c6             	mov    %rax,%rsi
    a459:	48 89 df             	mov    %rbx,%rdi
    a45c:	e8 8f a3 ff ff       	call   47f0 <__cxa_throw@plt>
  }

  vkBindBufferMemory(device, buffer, bufferMemory, 0);
    a461:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a468:	48 8b 10             	mov    (%rax),%rdx
    a46b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a472:	48 8b 30             	mov    (%rax),%rsi
    a475:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a47c:	48 8b 40 40          	mov    0x40(%rax),%rax
    a480:	b9 00 00 00 00       	mov    $0x0,%ecx
    a485:	48 89 c7             	mov    %rax,%rdi
    a488:	e8 b3 a0 ff ff       	call   4540 <vkBindBufferMemory@plt>
}
    a48d:	eb 2c                	jmp    a4bb <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x20d>
    throw std::runtime_error("Failed to create vertex buffer.");
    a48f:	49 89 c4             	mov    %rax,%r12
    a492:	48 89 df             	mov    %rbx,%rdi
    a495:	e8 e6 9d ff ff       	call   4280 <__cxa_free_exception@plt>
    a49a:	4c 89 e0             	mov    %r12,%rax
    a49d:	48 89 c7             	mov    %rax,%rdi
    a4a0:	e8 9b a3 ff ff       	call   4840 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
    a4a5:	49 89 c4             	mov    %rax,%r12
    a4a8:	48 89 df             	mov    %rbx,%rdi
    a4ab:	e8 d0 9d ff ff       	call   4280 <__cxa_free_exception@plt>
    a4b0:	4c 89 e0             	mov    %r12,%rax
    a4b3:	48 89 c7             	mov    %rax,%rdi
    a4b6:	e8 85 a3 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    a4bb:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    a4c2:	5b                   	pop    %rbx
    a4c3:	41 5c                	pop    %r12
    a4c5:	5d                   	pop    %rbp
    a4c6:	c3                   	ret
    a4c7:	90                   	nop

000000000000a4c8 <_ZN4rtvc17RenderApplication10copyBufferEP10VkBuffer_TS2_m>:

void rtvc::RenderApplication::copyBuffer(VkBuffer srcBuffer, VkBuffer dstBuffer,
                                         VkDeviceSize size) {
    a4c8:	55                   	push   %rbp
    a4c9:	48 89 e5             	mov    %rsp,%rbp
    a4cc:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    a4d3:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    a4da:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    a4e1:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    a4e8:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
  VkCommandBufferAllocateInfo allocInfo{};
    a4ef:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a4f3:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    a4f7:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    a4fb:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    a502:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  allocInfo.commandPool = commandPool;
    a509:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a510:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    a517:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  allocInfo.commandBufferCount = 1;
    a51b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)

  VkCommandBuffer commandBuffer;
  vkAllocateCommandBuffers(device, &allocInfo, &commandBuffer);
    a522:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a529:	48 8b 40 40          	mov    0x40(%rax),%rax
    a52d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    a531:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    a535:	48 89 ce             	mov    %rcx,%rsi
    a538:	48 89 c7             	mov    %rax,%rdi
    a53b:	e8 70 9e ff ff       	call   43b0 <vkAllocateCommandBuffers@plt>

  VkCommandBufferBeginInfo beginInfo{};
    a540:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a544:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a548:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    a54c:	c7 45 b0 2a 00 00 00 	movl   $0x2a,-0x50(%rbp)
  beginInfo.flags = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT;
    a553:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  vkBeginCommandBuffer(commandBuffer, &beginInfo);
    a55a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a55e:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    a562:	48 89 d6             	mov    %rdx,%rsi
    a565:	48 89 c7             	mov    %rax,%rdi
    a568:	e8 b3 9e ff ff       	call   4420 <vkBeginCommandBuffer@plt>

  VkBufferCopy copyRegion{};
    a56d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a571:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    a575:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  copyRegion.srcOffset = 0;
    a57a:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    a581:	00 
  copyRegion.dstOffset = 0;
    a582:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    a589:	00 
  copyRegion.size = size;
    a58a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    a591:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, 1, &copyRegion);
    a595:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a599:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    a59d:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    a5a4:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    a5ab:	49 89 c8             	mov    %rcx,%r8
    a5ae:	b9 01 00 00 00       	mov    $0x1,%ecx
    a5b3:	48 89 c7             	mov    %rax,%rdi
    a5b6:	e8 25 a1 ff ff       	call   46e0 <vkCmdCopyBuffer@plt>

  vkEndCommandBuffer(commandBuffer);
    a5bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5bf:	48 89 c7             	mov    %rax,%rdi
    a5c2:	e8 e9 a2 ff ff       	call   48b0 <vkEndCommandBuffer@plt>

  VkSubmitInfo submitInfo{};
    a5c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a5cb:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    a5d2:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    a5d9:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    a5e0:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    a5e7:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    a5ec:	c7 85 40 ff ff ff 04 	movl   $0x4,-0xc0(%rbp)
    a5f3:	00 00 00 
  submitInfo.commandBufferCount = 1;
    a5f6:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%rbp)
    a5fd:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffer;
    a600:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a604:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  vkQueueSubmit(graphicsQueue, 1, &submitInfo, VK_NULL_HANDLE);
    a60b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a612:	48 8b 40 48          	mov    0x48(%rax),%rax
    a616:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    a61d:	b9 00 00 00 00       	mov    $0x0,%ecx
    a622:	be 01 00 00 00       	mov    $0x1,%esi
    a627:	48 89 c7             	mov    %rax,%rdi
    a62a:	e8 d1 9f ff ff       	call   4600 <vkQueueSubmit@plt>
  vkQueueWaitIdle(graphicsQueue);
    a62f:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a636:	48 8b 40 48          	mov    0x48(%rax),%rax
    a63a:	48 89 c7             	mov    %rax,%rdi
    a63d:	e8 de a1 ff ff       	call   4820 <vkQueueWaitIdle@plt>

  vkFreeCommandBuffers(device, commandPool, 1, &commandBuffer);
    a642:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a649:	48 8b b0 f0 00 00 00 	mov    0xf0(%rax),%rsi
    a650:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a657:	48 8b 40 40          	mov    0x40(%rax),%rax
    a65b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    a65f:	48 89 d1             	mov    %rdx,%rcx
    a662:	ba 01 00 00 00       	mov    $0x1,%edx
    a667:	48 89 c7             	mov    %rax,%rdi
    a66a:	e8 21 9c ff ff       	call   4290 <vkFreeCommandBuffers@plt>
}
    a66f:	90                   	nop
    a670:	c9                   	leave
    a671:	c3                   	ret

000000000000a672 <_ZN4rtvc17RenderApplication19createVertexBuffersEv>:

void rtvc::RenderApplication::createVertexBuffers() {
    a672:	55                   	push   %rbp
    a673:	48 89 e5             	mov    %rsp,%rbp
    a676:	48 83 ec 30          	sub    $0x30,%rsp
    a67a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  using rtvc::resources::shaders::triangle;

  VkDeviceSize bufferSize = sizeof(triangle[0]) * triangle.size();
    a67e:	48 8d 05 3b f0 01 00 	lea    0x1f03b(%rip),%rax        # 296c0 <_ZN4rtvc9resources7shaders8triangleE>
    a685:	48 89 c7             	mov    %rax,%rdi
    a688:	e8 b3 35 00 00       	call   dc40 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4sizeEv>
    a68d:	48 89 c2             	mov    %rax,%rdx
    a690:	48 89 d0             	mov    %rdx,%rax
    a693:	48 c1 e0 02          	shl    $0x2,%rax
    a697:	48 01 d0             	add    %rdx,%rax
    a69a:	48 c1 e0 02          	shl    $0x2,%rax
    a69e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
    a6a2:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    a6a6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a6aa:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a6ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6b2:	49 89 c9             	mov    %rcx,%r9
    a6b5:	49 89 d0             	mov    %rdx,%r8
    a6b8:	b9 06 00 00 00       	mov    $0x6,%ecx
    a6bd:	ba 01 00 00 00       	mov    $0x1,%edx
    a6c2:	48 89 c7             	mov    %rax,%rdi
    a6c5:	e8 e4 fb ff ff       	call   a2ae <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
               VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT |
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
    a6ca:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    a6ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a6d2:	48 8b 40 40          	mov    0x40(%rax),%rax
    a6d6:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    a6da:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a6de:	49 89 c9             	mov    %rcx,%r9
    a6e1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    a6e7:	48 89 d1             	mov    %rdx,%rcx
    a6ea:	ba 00 00 00 00       	mov    $0x0,%edx
    a6ef:	48 89 c7             	mov    %rax,%rdi
    a6f2:	e8 99 9c ff ff       	call   4390 <vkMapMemory@plt>
  memcpy(data, triangle.data(), static_cast<size_t>(bufferSize));
    a6f7:	48 8d 05 c2 ef 01 00 	lea    0x1efc2(%rip),%rax        # 296c0 <_ZN4rtvc9resources7shaders8triangleE>
    a6fe:	48 89 c7             	mov    %rax,%rdi
    a701:	e8 68 35 00 00       	call   dc6e <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4dataEv>
    a706:	48 89 c1             	mov    %rax,%rcx
    a709:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a70d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a711:	48 89 ce             	mov    %rcx,%rsi
    a714:	48 89 c7             	mov    %rax,%rdi
    a717:	e8 e4 9b ff ff       	call   4300 <memcpy@plt>
  vkUnmapMemory(device, stagingBufferMemory);
    a71c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a720:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a724:	48 8b 40 40          	mov    0x40(%rax),%rax
    a728:	48 89 d6             	mov    %rdx,%rsi
    a72b:	48 89 c7             	mov    %rax,%rdi
    a72e:	e8 bd 9b ff ff       	call   42f0 <vkUnmapMemory@plt>

  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, vertexBuffer, vertexBufferMemory);
    a733:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a737:	48 8d 88 68 01 00 00 	lea    0x168(%rax),%rcx
    a73e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a742:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
  createBuffer(
    a749:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a74d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a751:	49 89 c9             	mov    %rcx,%r9
    a754:	49 89 d0             	mov    %rdx,%r8
    a757:	b9 01 00 00 00       	mov    $0x1,%ecx
    a75c:	ba 82 00 00 00       	mov    $0x82,%edx
    a761:	48 89 c7             	mov    %rax,%rdi
    a764:	e8 45 fb ff ff       	call   a2ae <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  copyBuffer(stagingBuffer, vertexBuffer, bufferSize);
    a769:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a76d:	48 8b 90 60 01 00 00 	mov    0x160(%rax),%rdx
    a774:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    a778:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a77c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a780:	48 89 c7             	mov    %rax,%rdi
    a783:	e8 40 fd ff ff       	call   a4c8 <_ZN4rtvc17RenderApplication10copyBufferEP10VkBuffer_TS2_m>

  vkDestroyBuffer(device, stagingBuffer, nullptr);
    a788:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a78c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a790:	48 8b 40 40          	mov    0x40(%rax),%rax
    a794:	ba 00 00 00 00       	mov    $0x0,%edx
    a799:	48 89 ce             	mov    %rcx,%rsi
    a79c:	48 89 c7             	mov    %rax,%rdi
    a79f:	e8 ec 99 ff ff       	call   4190 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
    a7a4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a7a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a7ac:	48 8b 40 40          	mov    0x40(%rax),%rax
    a7b0:	ba 00 00 00 00       	mov    $0x0,%edx
    a7b5:	48 89 ce             	mov    %rcx,%rsi
    a7b8:	48 89 c7             	mov    %rax,%rdi
    a7bb:	e8 e0 9b ff ff       	call   43a0 <vkFreeMemory@plt>
}
    a7c0:	90                   	nop
    a7c1:	c9                   	leave
    a7c2:	c3                   	ret
    a7c3:	90                   	nop

000000000000a7c4 <_ZN4rtvc17RenderApplication20createCommandBuffersEv>:

void rtvc::RenderApplication::createCommandBuffers() {
    a7c4:	55                   	push   %rbp
    a7c5:	48 89 e5             	mov    %rsp,%rbp
    a7c8:	41 54                	push   %r12
    a7ca:	53                   	push   %rbx
    a7cb:	48 83 ec 30          	sub    $0x30,%rsp
    a7cf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  commandBuffers.resize(max_frames_in_flight);
    a7d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a7d7:	48 05 f8 00 00 00    	add    $0xf8,%rax
    a7dd:	be 02 00 00 00       	mov    $0x2,%esi
    a7e2:	48 89 c7             	mov    %rax,%rdi
    a7e5:	e8 a8 34 00 00       	call   dc92 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm>

  VkCommandBufferAllocateInfo allocInfo{};
    a7ea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a7ee:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    a7f2:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    a7f6:	c7 45 d0 28 00 00 00 	movl   $0x28,-0x30(%rbp)
  allocInfo.commandPool = commandPool;
    a7fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a801:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    a808:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    a80c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  allocInfo.commandBufferCount = static_cast<uint32_t>(commandBuffers.size());
    a813:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a817:	48 05 f8 00 00 00    	add    $0xf8,%rax
    a81d:	48 89 c7             	mov    %rax,%rdi
    a820:	e8 f3 34 00 00       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    a825:	89 45 ec             	mov    %eax,-0x14(%rbp)

  if (vkAllocateCommandBuffers(device, &allocInfo, commandBuffers.data()) !=
    a828:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a82c:	48 05 f8 00 00 00    	add    $0xf8,%rax
    a832:	48 89 c7             	mov    %rax,%rdi
    a835:	e8 02 35 00 00       	call   dd3c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    a83a:	48 89 c2             	mov    %rax,%rdx
    a83d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a841:	48 8b 40 40          	mov    0x40(%rax),%rax
    a845:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    a849:	48 89 ce             	mov    %rcx,%rsi
    a84c:	48 89 c7             	mov    %rax,%rdi
    a84f:	e8 5c 9b ff ff       	call   43b0 <vkAllocateCommandBuffers@plt>
    a854:	85 c0                	test   %eax,%eax
    a856:	0f 95 c0             	setne  %al
    a859:	84 c0                	test   %al,%al
    a85b:	74 51                	je     a8ae <_ZN4rtvc17RenderApplication20createCommandBuffersEv+0xea>
      VK_SUCCESS)
    throw std::runtime_error("Failed to allocate command buffer.");
    a85d:	bf 10 00 00 00       	mov    $0x10,%edi
    a862:	e8 19 99 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a867:	48 89 c3             	mov    %rax,%rbx
    a86a:	48 8d 05 c7 fd 00 00 	lea    0xfdc7(%rip),%rax        # 1a638 <_ZN6__pstl9execution2v1L5unseqE+0x3cd>
    a871:	48 89 c6             	mov    %rax,%rsi
    a874:	48 89 df             	mov    %rbx,%rdi
    a877:	e8 94 98 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    a87c:	48 8b 05 25 e7 01 00 	mov    0x1e725(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a883:	48 89 c2             	mov    %rax,%rdx
    a886:	48 8d 05 b3 e4 01 00 	lea    0x1e4b3(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a88d:	48 89 c6             	mov    %rax,%rsi
    a890:	48 89 df             	mov    %rbx,%rdi
    a893:	e8 58 9f ff ff       	call   47f0 <__cxa_throw@plt>
    a898:	49 89 c4             	mov    %rax,%r12
    a89b:	48 89 df             	mov    %rbx,%rdi
    a89e:	e8 dd 99 ff ff       	call   4280 <__cxa_free_exception@plt>
    a8a3:	4c 89 e0             	mov    %r12,%rax
    a8a6:	48 89 c7             	mov    %rax,%rdi
    a8a9:	e8 92 9f ff ff       	call   4840 <_Unwind_Resume@plt>
}
    a8ae:	90                   	nop
    a8af:	48 83 c4 30          	add    $0x30,%rsp
    a8b3:	5b                   	pop    %rbx
    a8b4:	41 5c                	pop    %r12
    a8b6:	5d                   	pop    %rbp
    a8b7:	c3                   	ret

000000000000a8b8 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>:

void rtvc::RenderApplication::recordCommandBuffer(VkCommandBuffer commandBuffer,
                                                  uint32_t imageIndex) {
    a8b8:	55                   	push   %rbp
    a8b9:	48 89 e5             	mov    %rsp,%rbp
    a8bc:	41 54                	push   %r12
    a8be:	53                   	push   %rbx
    a8bf:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    a8c6:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    a8cd:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    a8d4:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
  VkCommandBufferBeginInfo beginInfo{};
    a8da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a8de:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    a8e2:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    a8e6:	c7 45 d0 2a 00 00 00 	movl   $0x2a,-0x30(%rbp)
  beginInfo.flags = 0;
    a8ed:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  beginInfo.pInheritanceInfo = nullptr;
    a8f4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    a8fb:	00 

  if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    a8fc:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    a900:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a907:	48 89 d6             	mov    %rdx,%rsi
    a90a:	48 89 c7             	mov    %rax,%rdi
    a90d:	e8 0e 9b ff ff       	call   4420 <vkBeginCommandBuffer@plt>
    a912:	85 c0                	test   %eax,%eax
    a914:	0f 95 c0             	setne  %al
    a917:	84 c0                	test   %al,%al
    a919:	74 3b                	je     a956 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj+0x9e>
    throw std::runtime_error("Failed to begin recording command buffer.");
    a91b:	bf 10 00 00 00       	mov    $0x10,%edi
    a920:	e8 5b 98 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a925:	48 89 c3             	mov    %rax,%rbx
    a928:	48 8d 05 31 fd 00 00 	lea    0xfd31(%rip),%rax        # 1a660 <_ZN6__pstl9execution2v1L5unseqE+0x3f5>
    a92f:	48 89 c6             	mov    %rax,%rsi
    a932:	48 89 df             	mov    %rbx,%rdi
    a935:	e8 d6 97 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    a93a:	48 8b 05 67 e6 01 00 	mov    0x1e667(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a941:	48 89 c2             	mov    %rax,%rdx
    a944:	48 8d 05 f5 e3 01 00 	lea    0x1e3f5(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a94b:	48 89 c6             	mov    %rax,%rsi
    a94e:	48 89 df             	mov    %rbx,%rdi
    a951:	e8 9a 9e ff ff       	call   47f0 <__cxa_throw@plt>

  VkRenderPassBeginInfo renderPassInfo{};
    a956:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a95a:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    a95e:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    a962:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a966:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    a96a:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassInfo.renderPass = renderPass;
    a971:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a978:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    a97f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassInfo.framebuffer = swapChainFrameBuffers[imageIndex];
    a983:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a98a:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    a991:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    a997:	48 89 c6             	mov    %rax,%rsi
    a99a:	48 89 d7             	mov    %rdx,%rdi
    a99d:	e8 7e 32 00 00       	call   dc20 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    a9a2:	48 8b 00             	mov    (%rax),%rax
    a9a5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassInfo.renderArea.offset = {0, 0};
    a9a9:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    a9b0:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassInfo.renderArea.extent = swapChainExtent;
    a9b7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a9be:	48 8b 80 9c 00 00 00 	mov    0x9c(%rax),%rax
    a9c5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)

  VkClearValue clearColor{{{0.0f, 0.0f, 0.0f, 1.0f}}};
    a9c9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a9cd:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    a9d2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a9d6:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    a9db:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a9df:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    a9e4:	f3 0f 10 05 24 fe 00 	movss  0xfe24(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    a9eb:	00 
    a9ec:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
  renderPassInfo.clearValueCount = 1;
    a9f1:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassInfo.pClearValues = &clearColor;
    a9f8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a9fc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(commandBuffer, &renderPassInfo,
    aa00:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    aa04:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aa0b:	ba 00 00 00 00       	mov    $0x0,%edx
    aa10:	48 89 ce             	mov    %rcx,%rsi
    aa13:	48 89 c7             	mov    %rax,%rdi
    aa16:	e8 75 9c ff ff       	call   4690 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  vkCmdBindPipeline(commandBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
    aa1b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    aa22:	48 8b 90 d0 00 00 00 	mov    0xd0(%rax),%rdx
    aa29:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aa30:	be 00 00 00 00       	mov    $0x0,%esi
    aa35:	48 89 c7             	mov    %rax,%rdi
    aa38:	e8 33 99 ff ff       	call   4370 <vkCmdBindPipeline@plt>
                    graphicsPipeline);

  VkBuffer vertexBuffers[] = {vertexBuffer};
    aa3d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    aa44:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    aa4b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  VkDeviceSize offsets[] = {0};
    aa52:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    aa59:	00 00 00 00 
  vkCmdBindVertexBuffers(commandBuffer, 0, 1, vertexBuffers, offsets);
    aa5d:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    aa64:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    aa6b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aa72:	49 89 c8             	mov    %rcx,%r8
    aa75:	48 89 d1             	mov    %rdx,%rcx
    aa78:	ba 01 00 00 00       	mov    $0x1,%edx
    aa7d:	be 00 00 00 00       	mov    $0x0,%esi
    aa82:	48 89 c7             	mov    %rax,%rdi
    aa85:	e8 36 9c ff ff       	call   46c0 <vkCmdBindVertexBuffers@plt>

  vkCmdDraw(commandBuffer, 3, 1, 0, 0);
    aa8a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aa91:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    aa97:	b9 00 00 00 00       	mov    $0x0,%ecx
    aa9c:	ba 01 00 00 00       	mov    $0x1,%edx
    aaa1:	be 03 00 00 00       	mov    $0x3,%esi
    aaa6:	48 89 c7             	mov    %rax,%rdi
    aaa9:	e8 12 9e ff ff       	call   48c0 <vkCmdDraw@plt>

  vkCmdEndRenderPass(commandBuffer);
    aaae:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aab5:	48 89 c7             	mov    %rax,%rdi
    aab8:	e8 93 95 ff ff       	call   4050 <vkCmdEndRenderPass@plt>

  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS)
    aabd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    aac4:	48 89 c7             	mov    %rax,%rdi
    aac7:	e8 e4 9d ff ff       	call   48b0 <vkEndCommandBuffer@plt>
    aacc:	85 c0                	test   %eax,%eax
    aace:	0f 95 c0             	setne  %al
    aad1:	84 c0                	test   %al,%al
    aad3:	74 67                	je     ab3c <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj+0x284>
    throw std::runtime_error("Failed to record command buffer");
    aad5:	bf 10 00 00 00       	mov    $0x10,%edi
    aada:	e8 a1 96 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    aadf:	48 89 c3             	mov    %rax,%rbx
    aae2:	48 8d 05 a7 fb 00 00 	lea    0xfba7(%rip),%rax        # 1a690 <_ZN6__pstl9execution2v1L5unseqE+0x425>
    aae9:	48 89 c6             	mov    %rax,%rsi
    aaec:	48 89 df             	mov    %rbx,%rdi
    aaef:	e8 1c 96 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    aaf4:	48 8b 05 ad e4 01 00 	mov    0x1e4ad(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    aafb:	48 89 c2             	mov    %rax,%rdx
    aafe:	48 8d 05 3b e2 01 00 	lea    0x1e23b(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ab05:	48 89 c6             	mov    %rax,%rsi
    ab08:	48 89 df             	mov    %rbx,%rdi
    ab0b:	e8 e0 9c ff ff       	call   47f0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to begin recording command buffer.");
    ab10:	49 89 c4             	mov    %rax,%r12
    ab13:	48 89 df             	mov    %rbx,%rdi
    ab16:	e8 65 97 ff ff       	call   4280 <__cxa_free_exception@plt>
    ab1b:	4c 89 e0             	mov    %r12,%rax
    ab1e:	48 89 c7             	mov    %rax,%rdi
    ab21:	e8 1a 9d ff ff       	call   4840 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to record command buffer");
    ab26:	49 89 c4             	mov    %rax,%r12
    ab29:	48 89 df             	mov    %rbx,%rdi
    ab2c:	e8 4f 97 ff ff       	call   4280 <__cxa_free_exception@plt>
    ab31:	4c 89 e0             	mov    %r12,%rax
    ab34:	48 89 c7             	mov    %rax,%rdi
    ab37:	e8 04 9d ff ff       	call   4840 <_Unwind_Resume@plt>
}
    ab3c:	90                   	nop
    ab3d:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    ab44:	5b                   	pop    %rbx
    ab45:	41 5c                	pop    %r12
    ab47:	5d                   	pop    %rbp
    ab48:	c3                   	ret
    ab49:	90                   	nop

000000000000ab4a <_ZN4rtvc17RenderApplication17createSyncObjectsEv>:

void rtvc::RenderApplication::createSyncObjects() {
    ab4a:	55                   	push   %rbp
    ab4b:	48 89 e5             	mov    %rsp,%rbp
    ab4e:	41 54                	push   %r12
    ab50:	53                   	push   %rbx
    ab51:	48 83 ec 50          	sub    $0x50,%rsp
    ab55:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  imageAvailableSemaphores.resize(max_frames_in_flight);
    ab59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab5d:	48 05 10 01 00 00    	add    $0x110,%rax
    ab63:	be 02 00 00 00       	mov    $0x2,%esi
    ab68:	48 89 c7             	mov    %rax,%rdi
    ab6b:	e8 f0 31 00 00       	call   dd60 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  renderFinishedSemaphores.resize(max_frames_in_flight);
    ab70:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab74:	48 05 28 01 00 00    	add    $0x128,%rax
    ab7a:	be 02 00 00 00       	mov    $0x2,%esi
    ab7f:	48 89 c7             	mov    %rax,%rdi
    ab82:	e8 d9 31 00 00       	call   dd60 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  inFlightFences.resize(max_frames_in_flight);
    ab87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab8b:	48 05 40 01 00 00    	add    $0x140,%rax
    ab91:	be 02 00 00 00       	mov    $0x2,%esi
    ab96:	48 89 c7             	mov    %rax,%rdi
    ab99:	e8 48 32 00 00       	call   dde6 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>

  VkSemaphoreCreateInfo semaphoreInfo{};
    ab9e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aba2:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    aba6:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    abab:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
    abb2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    abb6:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    abba:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    abbf:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    abc6:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    abcd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    abd4:	00 
    abd5:	e9 07 01 00 00       	jmp    ace1 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x197>
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
                          &imageAvailableSemaphores[i]) != VK_SUCCESS ||
    abda:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    abde:	48 8d 90 10 01 00 00 	lea    0x110(%rax),%rdx
    abe5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abe9:	48 89 c6             	mov    %rax,%rsi
    abec:	48 89 d7             	mov    %rdx,%rdi
    abef:	e8 78 32 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    abf4:	48 89 c2             	mov    %rax,%rdx
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    abf7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    abfb:	48 8b 40 40          	mov    0x40(%rax),%rax
    abff:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    ac03:	48 89 d1             	mov    %rdx,%rcx
    ac06:	ba 00 00 00 00       	mov    $0x0,%edx
    ac0b:	48 89 c7             	mov    %rax,%rdi
    ac0e:	e8 6d 9a ff ff       	call   4680 <vkCreateSemaphore@plt>
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
                          &renderFinishedSemaphores[i]) != VK_SUCCESS ||
    ac13:	85 c0                	test   %eax,%eax
    ac15:	75 7a                	jne    ac91 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x147>
    ac17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ac1b:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    ac22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac26:	48 89 c6             	mov    %rax,%rsi
    ac29:	48 89 d7             	mov    %rdx,%rdi
    ac2c:	e8 3b 32 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    ac31:	48 89 c2             	mov    %rax,%rdx
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    ac34:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ac38:	48 8b 40 40          	mov    0x40(%rax),%rax
    ac3c:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    ac40:	48 89 d1             	mov    %rdx,%rcx
    ac43:	ba 00 00 00 00       	mov    $0x0,%edx
    ac48:	48 89 c7             	mov    %rax,%rdi
    ac4b:	e8 30 9a ff ff       	call   4680 <vkCreateSemaphore@plt>
                          &imageAvailableSemaphores[i]) != VK_SUCCESS ||
    ac50:	85 c0                	test   %eax,%eax
    ac52:	75 3d                	jne    ac91 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x147>
        vkCreateFence(device, &fenceInfo, nullptr, &inFlightFences[i]) !=
    ac54:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ac58:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
    ac5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac63:	48 89 c6             	mov    %rax,%rsi
    ac66:	48 89 d7             	mov    %rdx,%rdi
    ac69:	e8 1e 32 00 00       	call   de8c <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    ac6e:	48 89 c2             	mov    %rax,%rdx
    ac71:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ac75:	48 8b 40 40          	mov    0x40(%rax),%rax
    ac79:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    ac7d:	48 89 d1             	mov    %rdx,%rcx
    ac80:	ba 00 00 00 00       	mov    $0x0,%edx
    ac85:	48 89 c7             	mov    %rax,%rdi
    ac88:	e8 03 99 ff ff       	call   4590 <vkCreateFence@plt>
                          &renderFinishedSemaphores[i]) != VK_SUCCESS ||
    ac8d:	85 c0                	test   %eax,%eax
    ac8f:	74 07                	je     ac98 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x14e>
    ac91:	b8 01 00 00 00       	mov    $0x1,%eax
    ac96:	eb 05                	jmp    ac9d <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x153>
    ac98:	b8 00 00 00 00       	mov    $0x0,%eax
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    ac9d:	84 c0                	test   %al,%al
    ac9f:	74 3b                	je     acdc <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x192>
            VK_SUCCESS)
      throw std::runtime_error("Failed to create semaphores.");
    aca1:	bf 10 00 00 00       	mov    $0x10,%edi
    aca6:	e8 d5 94 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    acab:	48 89 c3             	mov    %rax,%rbx
    acae:	48 8d 05 fb f9 00 00 	lea    0xf9fb(%rip),%rax        # 1a6b0 <_ZN6__pstl9execution2v1L5unseqE+0x445>
    acb5:	48 89 c6             	mov    %rax,%rsi
    acb8:	48 89 df             	mov    %rbx,%rdi
    acbb:	e8 50 94 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    acc0:	48 8b 05 e1 e2 01 00 	mov    0x1e2e1(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    acc7:	48 89 c2             	mov    %rax,%rdx
    acca:	48 8d 05 6f e0 01 00 	lea    0x1e06f(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    acd1:	48 89 c6             	mov    %rax,%rsi
    acd4:	48 89 df             	mov    %rbx,%rdi
    acd7:	e8 14 9b ff ff       	call   47f0 <__cxa_throw@plt>
  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    acdc:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    ace1:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    ace6:	0f 86 ee fe ff ff    	jbe    abda <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x90>
  }
}
    acec:	eb 16                	jmp    ad04 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x1ba>
      throw std::runtime_error("Failed to create semaphores.");
    acee:	49 89 c4             	mov    %rax,%r12
    acf1:	48 89 df             	mov    %rbx,%rdi
    acf4:	e8 87 95 ff ff       	call   4280 <__cxa_free_exception@plt>
    acf9:	4c 89 e0             	mov    %r12,%rax
    acfc:	48 89 c7             	mov    %rax,%rdi
    acff:	e8 3c 9b ff ff       	call   4840 <_Unwind_Resume@plt>
}
    ad04:	48 83 c4 50          	add    $0x50,%rsp
    ad08:	5b                   	pop    %rbx
    ad09:	41 5c                	pop    %r12
    ad0b:	5d                   	pop    %rbp
    ad0c:	c3                   	ret
    ad0d:	90                   	nop

000000000000ad0e <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>:

void rtvc::RenderApplication::framebufferResizeCallback(
    GLFWwindow *window, [[maybe_unused]] int width,
    [[maybe_unused]] int height) {
    ad0e:	55                   	push   %rbp
    ad0f:	48 89 e5             	mov    %rsp,%rbp
    ad12:	48 83 ec 20          	sub    $0x20,%rsp
    ad16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad1a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    ad1d:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app = reinterpret_cast<rtvc::RenderApplication *>(
      glfwGetWindowUserPointer(window));
    ad20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad24:	48 89 c7             	mov    %rax,%rdi
    ad27:	e8 14 99 ff ff       	call   4640 <glfwGetWindowUserPointer@plt>
    ad2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->frameBufferResized = true;
    ad30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad34:	c6 80 58 01 00 00 01 	movb   $0x1,0x158(%rax)
}
    ad3b:	90                   	nop
    ad3c:	c9                   	leave
    ad3d:	c3                   	ret

000000000000ad3e <_ZN4rtvc17RenderApplication14findMemoryTypeEjj>:

uint32_t
rtvc::RenderApplication::findMemoryType(uint32_t typeFilter,
                                        VkMemoryPropertyFlags properties) {
    ad3e:	55                   	push   %rbp
    ad3f:	48 89 e5             	mov    %rsp,%rbp
    ad42:	41 54                	push   %r12
    ad44:	53                   	push   %rbx
    ad45:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    ad4c:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
    ad53:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
    ad59:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)

  VkPhysicalDeviceMemoryProperties memProperties{};
    ad5f:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
    ad66:	b8 00 00 00 00       	mov    $0x0,%eax
    ad6b:	b9 41 00 00 00       	mov    $0x41,%ecx
    ad70:	48 89 d7             	mov    %rdx,%rdi
    ad73:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  vkGetPhysicalDeviceMemoryProperties(physicalDevice, &memProperties);
    ad76:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
    ad7d:	48 8b 40 38          	mov    0x38(%rax),%rax
    ad81:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
    ad88:	48 89 d6             	mov    %rdx,%rsi
    ad8b:	48 89 c7             	mov    %rax,%rdi
    ad8e:	e8 dd 99 ff ff       	call   4770 <vkGetPhysicalDeviceMemoryProperties@plt>

  for (uint32_t i = 0; i < memProperties.memoryTypeCount; ++i) {
    ad93:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    ad9a:	eb 39                	jmp    add5 <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x97>
    if ((typeFilter & (1 << i)) && (memProperties.memoryTypes[i].propertyFlags &
    ad9c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ad9f:	ba 01 00 00 00       	mov    $0x1,%edx
    ada4:	89 c1                	mov    %eax,%ecx
    ada6:	d3 e2                	shl    %cl,%edx
    ada8:	89 d0                	mov    %edx,%eax
    adaa:	23 85 d4 fd ff ff    	and    -0x22c(%rbp),%eax
    adb0:	85 c0                	test   %eax,%eax
    adb2:	74 1d                	je     add1 <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x93>
    adb4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    adb7:	8b 84 c5 e4 fd ff ff 	mov    -0x21c(%rbp,%rax,8),%eax
    adbe:	23 85 d0 fd ff ff    	and    -0x230(%rbp),%eax
    adc4:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%rbp)
    adca:	75 05                	jne    add1 <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x93>
                                    properties) == properties) {
      return i;
    adcc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    adcf:	eb 60                	jmp    ae31 <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0xf3>
  for (uint32_t i = 0; i < memProperties.memoryTypeCount; ++i) {
    add1:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    add5:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
    addb:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    adde:	72 bc                	jb     ad9c <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x5e>
    }
  }
  throw std::runtime_error("Failed to find suitable memory type.");
    ade0:	bf 10 00 00 00       	mov    $0x10,%edi
    ade5:	e8 96 93 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    adea:	48 89 c3             	mov    %rax,%rbx
    aded:	48 8d 05 dc f8 00 00 	lea    0xf8dc(%rip),%rax        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0x465>
    adf4:	48 89 c6             	mov    %rax,%rsi
    adf7:	48 89 df             	mov    %rbx,%rdi
    adfa:	e8 11 93 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    adff:	48 8b 05 a2 e1 01 00 	mov    0x1e1a2(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ae06:	48 89 c2             	mov    %rax,%rdx
    ae09:	48 8d 05 30 df 01 00 	lea    0x1df30(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ae10:	48 89 c6             	mov    %rax,%rsi
    ae13:	48 89 df             	mov    %rbx,%rdi
    ae16:	e8 d5 99 ff ff       	call   47f0 <__cxa_throw@plt>
    ae1b:	49 89 c4             	mov    %rax,%r12
    ae1e:	48 89 df             	mov    %rbx,%rdi
    ae21:	e8 5a 94 ff ff       	call   4280 <__cxa_free_exception@plt>
    ae26:	4c 89 e0             	mov    %r12,%rax
    ae29:	48 89 c7             	mov    %rax,%rdi
    ae2c:	e8 0f 9a ff ff       	call   4840 <_Unwind_Resume@plt>
}
    ae31:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    ae38:	5b                   	pop    %rbx
    ae39:	41 5c                	pop    %r12
    ae3b:	5d                   	pop    %rbp
    ae3c:	c3                   	ret
    ae3d:	90                   	nop

000000000000ae3e <_ZN4rtvc17RenderApplication10initWindowEv>:

void rtvc::RenderApplication::initWindow() {
    ae3e:	55                   	push   %rbp
    ae3f:	48 89 e5             	mov    %rsp,%rbp
    ae42:	48 83 ec 10          	sub    $0x10,%rsp
    ae46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    ae4a:	e8 c1 96 ff ff       	call   4510 <glfwInit@plt>

  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    ae4f:	be 00 00 00 00       	mov    $0x0,%esi
    ae54:	bf 01 20 02 00       	mov    $0x22001,%edi
    ae59:	e8 f2 94 ff ff       	call   4350 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);

  window = glfwCreateWindow(width, height, "Vulkan Triangle Application",
    ae5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae62:	8b 40 0c             	mov    0xc(%rax),%eax
    ae65:	89 c6                	mov    %eax,%esi
    ae67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6b:	8b 40 08             	mov    0x8(%rax),%eax
    ae6e:	89 c7                	mov    %eax,%edi
    ae70:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ae76:	b9 00 00 00 00       	mov    $0x0,%ecx
    ae7b:	48 8d 05 73 f8 00 00 	lea    0xf873(%rip),%rax        # 1a6f5 <_ZN6__pstl9execution2v1L5unseqE+0x48a>
    ae82:	48 89 c2             	mov    %rax,%rdx
    ae85:	e8 c6 98 ff ff       	call   4750 <glfwCreateWindow@plt>
    ae8a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae8e:	48 89 02             	mov    %rax,(%rdx)
                            nullptr, nullptr);

  glfwSetWindowUserPointer(window, this);
    ae91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae95:	48 8b 00             	mov    (%rax),%rax
    ae98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae9c:	48 89 d6             	mov    %rdx,%rsi
    ae9f:	48 89 c7             	mov    %rax,%rdi
    aea2:	e8 f9 92 ff ff       	call   41a0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    aea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeab:	48 8b 00             	mov    (%rax),%rax
    aeae:	48 8d 15 59 fe ff ff 	lea    -0x1a7(%rip),%rdx        # ad0e <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>
    aeb5:	48 89 d6             	mov    %rdx,%rsi
    aeb8:	48 89 c7             	mov    %rax,%rdi
    aebb:	e8 50 98 ff ff       	call   4710 <glfwSetFramebufferSizeCallback@plt>
}
    aec0:	90                   	nop
    aec1:	c9                   	leave
    aec2:	c3                   	ret
    aec3:	90                   	nop

000000000000aec4 <_ZN4rtvc17RenderApplication10initVulkanEv>:

void rtvc::RenderApplication::initVulkan() {
    aec4:	55                   	push   %rbp
    aec5:	48 89 e5             	mov    %rsp,%rbp
    aec8:	48 83 ec 10          	sub    $0x10,%rsp
    aecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  creatInstance();
    aed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aed4:	48 89 c7             	mov    %rax,%rdi
    aed7:	e8 10 c7 ff ff       	call   75ec <_ZN4rtvc17RenderApplication13creatInstanceEv>
  setupDebugMessenger();
    aedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aee0:	48 89 c7             	mov    %rax,%rdi
    aee3:	e8 5a c6 ff ff       	call   7542 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>
  createSurface();
    aee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeec:	48 89 c7             	mov    %rax,%rdi
    aeef:	e8 b4 da ff ff       	call   89a8 <_ZN4rtvc17RenderApplication13createSurfaceEv>
  selectPhysicalDevice();
    aef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef8:	48 89 c7             	mov    %rax,%rdi
    aefb:	e8 82 cf ff ff       	call   7e82 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>
  createLogicalDevice();
    af00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af04:	48 89 c7             	mov    %rax,%rdi
    af07:	e8 b8 d6 ff ff       	call   85c4 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>
  createSwapChain();
    af0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af10:	48 89 c7             	mov    %rax,%rdi
    af13:	e8 fe dc ff ff       	call   8c16 <_ZN4rtvc17RenderApplication15createSwapChainEv>
  createImageViews();
    af18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af1c:	48 89 c7             	mov    %rax,%rdi
    af1f:	e8 6c e0 ff ff       	call   8f90 <_ZN4rtvc17RenderApplication16createImageViewsEv>
  createRenderPass();
    af24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af28:	48 89 c7             	mov    %rax,%rdi
    af2b:	e8 a0 e4 ff ff       	call   93d0 <_ZN4rtvc17RenderApplication16createRenderPassEv>
  createGraphicsPipeline();
    af30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af34:	48 89 c7             	mov    %rax,%rdi
    af37:	e8 9a e6 ff ff       	call   95d6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
  createFramebuffers();
    af3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af40:	48 89 c7             	mov    %rax,%rdi
    af43:	e8 fc f0 ff ff       	call   a044 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
  createCommandPool();
    af48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af4c:	48 89 c7             	mov    %rax,%rdi
    af4f:	e8 74 f2 ff ff       	call   a1c8 <_ZN4rtvc17RenderApplication17createCommandPoolEv>
  createVertexBuffers();
    af54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af58:	48 89 c7             	mov    %rax,%rdi
    af5b:	e8 12 f7 ff ff       	call   a672 <_ZN4rtvc17RenderApplication19createVertexBuffersEv>
  createCommandBuffers();
    af60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af64:	48 89 c7             	mov    %rax,%rdi
    af67:	e8 58 f8 ff ff       	call   a7c4 <_ZN4rtvc17RenderApplication20createCommandBuffersEv>
  createSyncObjects();
    af6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af70:	48 89 c7             	mov    %rax,%rdi
    af73:	e8 d2 fb ff ff       	call   ab4a <_ZN4rtvc17RenderApplication17createSyncObjectsEv>
}
    af78:	90                   	nop
    af79:	c9                   	leave
    af7a:	c3                   	ret
    af7b:	90                   	nop

000000000000af7c <_ZN4rtvc17RenderApplication9drawFrameEv>:

void rtvc::RenderApplication::drawFrame() {
    af7c:	55                   	push   %rbp
    af7d:	48 89 e5             	mov    %rsp,%rbp
    af80:	41 54                	push   %r12
    af82:	53                   	push   %rbx
    af83:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    af8a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  vkWaitForFences(device, 1, &inFlightFences[currentFrame], VK_TRUE,
    af91:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    af98:	48 05 40 01 00 00    	add    $0x140,%rax
    af9e:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    afa5:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    afab:	89 d2                	mov    %edx,%edx
    afad:	48 89 d6             	mov    %rdx,%rsi
    afb0:	48 89 c7             	mov    %rax,%rdi
    afb3:	e8 d4 2e 00 00       	call   de8c <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    afb8:	48 89 c2             	mov    %rax,%rdx
    afbb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    afc2:	48 8b 40 40          	mov    0x40(%rax),%rax
    afc6:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    afcd:	b9 01 00 00 00       	mov    $0x1,%ecx
    afd2:	be 01 00 00 00       	mov    $0x1,%esi
    afd7:	48 89 c7             	mov    %rax,%rdi
    afda:	e8 11 92 ff ff       	call   41f0 <vkWaitForFences@plt>
                  UINT64_MAX);

  uint32_t imageIndex;
  VkResult result = vkAcquireNextImageKHR(
      device, swapChain, UINT64_MAX, imageAvailableSemaphores[currentFrame],
    afdf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    afe6:	48 05 10 01 00 00    	add    $0x110,%rax
    afec:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    aff3:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    aff9:	89 d2                	mov    %edx,%edx
    affb:	48 89 d6             	mov    %rdx,%rsi
    affe:	48 89 c7             	mov    %rax,%rdi
    b001:	e8 66 2e 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
  VkResult result = vkAcquireNextImageKHR(
    b006:	48 8b 10             	mov    (%rax),%rdx
    b009:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b010:	48 8b 70 78          	mov    0x78(%rax),%rsi
    b014:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b01b:	48 8b 40 40          	mov    0x40(%rax),%rax
    b01f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    b023:	49 89 c9             	mov    %rcx,%r9
    b026:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    b02c:	48 89 d1             	mov    %rdx,%rcx
    b02f:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    b036:	48 89 c7             	mov    %rax,%rdi
    b039:	e8 02 91 ff ff       	call   4140 <vkAcquireNextImageKHR@plt>
    b03e:	89 45 ec             	mov    %eax,-0x14(%rbp)
      VK_NULL_HANDLE, &imageIndex);

  if (result == VK_ERROR_OUT_OF_DATE_KHR) {
    b041:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    b048:	75 14                	jne    b05e <_ZN4rtvc17RenderApplication9drawFrameEv+0xe2>
    recreateSwapChain();
    b04a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b051:	48 89 c7             	mov    %rax,%rdi
    b054:	e8 5d 05 00 00       	call   b5b6 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>
  } else if (result != VK_SUCCESS) {
    throw std::runtime_error("Failed to acquire swap chain image.");
  }

  currentFrame = (currentFrame + 1) % max_frames_in_flight;
}
    b059:	e9 f2 03 00 00       	jmp    b450 <_ZN4rtvc17RenderApplication9drawFrameEv+0x4d4>
  } else if (result != VK_SUCCESS && result != VK_SUBOPTIMAL_KHR) {
    b05e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b062:	74 44                	je     b0a8 <_ZN4rtvc17RenderApplication9drawFrameEv+0x12c>
    b064:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    b06b:	74 3b                	je     b0a8 <_ZN4rtvc17RenderApplication9drawFrameEv+0x12c>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b06d:	bf 10 00 00 00       	mov    $0x10,%edi
    b072:	e8 09 91 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    b077:	48 89 c3             	mov    %rax,%rbx
    b07a:	48 8d 05 97 f6 00 00 	lea    0xf697(%rip),%rax        # 1a718 <_ZN6__pstl9execution2v1L5unseqE+0x4ad>
    b081:	48 89 c6             	mov    %rax,%rsi
    b084:	48 89 df             	mov    %rbx,%rdi
    b087:	e8 84 90 ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    b08c:	48 8b 05 15 df 01 00 	mov    0x1df15(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b093:	48 89 c2             	mov    %rax,%rdx
    b096:	48 8d 05 a3 dc 01 00 	lea    0x1dca3(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b09d:	48 89 c6             	mov    %rax,%rsi
    b0a0:	48 89 df             	mov    %rbx,%rdi
    b0a3:	e8 48 97 ff ff       	call   47f0 <__cxa_throw@plt>
  vkResetFences(device, 1, &inFlightFences[currentFrame]);
    b0a8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b0af:	48 05 40 01 00 00    	add    $0x140,%rax
    b0b5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b0bc:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b0c2:	89 d2                	mov    %edx,%edx
    b0c4:	48 89 d6             	mov    %rdx,%rsi
    b0c7:	48 89 c7             	mov    %rax,%rdi
    b0ca:	e8 bd 2d 00 00       	call   de8c <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    b0cf:	48 89 c2             	mov    %rax,%rdx
    b0d2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b0d9:	48 8b 40 40          	mov    0x40(%rax),%rax
    b0dd:	be 01 00 00 00       	mov    $0x1,%esi
    b0e2:	48 89 c7             	mov    %rax,%rdi
    b0e5:	e8 56 96 ff ff       	call   4740 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[currentFrame], 0);
    b0ea:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b0f1:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b0f7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b0fe:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b104:	89 d2                	mov    %edx,%edx
    b106:	48 89 d6             	mov    %rdx,%rsi
    b109:	48 89 c7             	mov    %rax,%rdi
    b10c:	e8 9b 2d 00 00       	call   deac <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    b111:	48 8b 00             	mov    (%rax),%rax
    b114:	be 00 00 00 00       	mov    $0x0,%esi
    b119:	48 89 c7             	mov    %rax,%rdi
    b11c:	e8 7f 94 ff ff       	call   45a0 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[currentFrame], imageIndex);
    b121:	8b 5d e8             	mov    -0x18(%rbp),%ebx
    b124:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b12b:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b131:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b138:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b13e:	89 d2                	mov    %edx,%edx
    b140:	48 89 d6             	mov    %rdx,%rsi
    b143:	48 89 c7             	mov    %rax,%rdi
    b146:	e8 61 2d 00 00       	call   deac <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    b14b:	48 8b 08             	mov    (%rax),%rcx
    b14e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b155:	89 da                	mov    %ebx,%edx
    b157:	48 89 ce             	mov    %rcx,%rsi
    b15a:	48 89 c7             	mov    %rax,%rdi
    b15d:	e8 56 f7 ff ff       	call   a8b8 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>
  VkSubmitInfo submitInfo{};
    b162:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b166:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    b16a:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    b16e:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    b172:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    b176:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    b17b:	c7 45 a0 04 00 00 00 	movl   $0x4,-0x60(%rbp)
  VkSemaphore waitSemaphores[] = {imageAvailableSemaphores[currentFrame]};
    b182:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b189:	48 05 10 01 00 00    	add    $0x110,%rax
    b18f:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b196:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b19c:	89 d2                	mov    %edx,%edx
    b19e:	48 89 d6             	mov    %rdx,%rsi
    b1a1:	48 89 c7             	mov    %rax,%rdi
    b1a4:	e8 c3 2c 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b1a9:	48 8b 00             	mov    (%rax),%rax
    b1ac:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  VkPipelineStageFlags waitStages[] = {
    b1b0:	c7 45 94 00 04 00 00 	movl   $0x400,-0x6c(%rbp)
  submitInfo.waitSemaphoreCount = 1;
    b1b7:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores;
    b1be:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    b1c2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  submitInfo.pWaitDstStageMask = waitStages;
    b1c6:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    b1ca:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  submitInfo.commandBufferCount = 1;
    b1ce:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
  submitInfo.pCommandBuffers = &commandBuffers[currentFrame];
    b1d5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b1dc:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b1e2:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b1e9:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b1ef:	89 d2                	mov    %edx,%edx
    b1f1:	48 89 d6             	mov    %rdx,%rsi
    b1f4:	48 89 c7             	mov    %rax,%rdi
    b1f7:	e8 b0 2c 00 00       	call   deac <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    b1fc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  VkSemaphore signalSemaphores[] = {renderFinishedSemaphores[currentFrame]};
    b200:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b207:	48 05 28 01 00 00    	add    $0x128,%rax
    b20d:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b214:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b21a:	89 d2                	mov    %edx,%edx
    b21c:	48 89 d6             	mov    %rdx,%rsi
    b21f:	48 89 c7             	mov    %rax,%rdi
    b222:	e8 45 2c 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b227:	48 8b 00             	mov    (%rax),%rax
    b22a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  submitInfo.signalSemaphoreCount = 1;
    b22e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores;
    b235:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    b239:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
                    inFlightFences[currentFrame]) != VK_SUCCESS)
    b23d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b244:	48 05 40 01 00 00    	add    $0x140,%rax
    b24a:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b251:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b257:	89 d2                	mov    %edx,%edx
    b259:	48 89 d6             	mov    %rdx,%rsi
    b25c:	48 89 c7             	mov    %rax,%rdi
    b25f:	e8 28 2c 00 00       	call   de8c <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    b264:	48 8b 08             	mov    (%rax),%rcx
    b267:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b26e:	48 8b 40 48          	mov    0x48(%rax),%rax
    b272:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    b276:	be 01 00 00 00       	mov    $0x1,%esi
    b27b:	48 89 c7             	mov    %rax,%rdi
    b27e:	e8 7d 93 ff ff       	call   4600 <vkQueueSubmit@plt>
                    inFlightFences[currentFrame]) != VK_SUCCESS)
    b283:	85 c0                	test   %eax,%eax
    b285:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    b288:	84 c0                	test   %al,%al
    b28a:	74 3b                	je     b2c7 <_ZN4rtvc17RenderApplication9drawFrameEv+0x34b>
    throw std::runtime_error("Failed to submit draw command buffer.");
    b28c:	bf 10 00 00 00       	mov    $0x10,%edi
    b291:	e8 ea 8e ff ff       	call   4180 <__cxa_allocate_exception@plt>
    b296:	48 89 c3             	mov    %rax,%rbx
    b299:	48 8d 05 a0 f4 00 00 	lea    0xf4a0(%rip),%rax        # 1a740 <_ZN6__pstl9execution2v1L5unseqE+0x4d5>
    b2a0:	48 89 c6             	mov    %rax,%rsi
    b2a3:	48 89 df             	mov    %rbx,%rdi
    b2a6:	e8 65 8e ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    b2ab:	48 8b 05 f6 dc 01 00 	mov    0x1dcf6(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b2b2:	48 89 c2             	mov    %rax,%rdx
    b2b5:	48 8d 05 84 da 01 00 	lea    0x1da84(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b2bc:	48 89 c6             	mov    %rax,%rsi
    b2bf:	48 89 df             	mov    %rbx,%rdi
    b2c2:	e8 29 95 ff ff       	call   47f0 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
    b2c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b2cb:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    b2d2:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    b2d9:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    b2e0:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
    b2e7:	c7 85 40 ff ff ff e9 	movl   $0x3b9acde9,-0xc0(%rbp)
    b2ee:	cd 9a 3b 
  presentInfo.waitSemaphoreCount = 1;
    b2f1:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
    b2f8:	00 00 00 
  presentInfo.pWaitSemaphores = signalSemaphores;
    b2fb:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    b2ff:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  VkSwapchainKHR swapChains[] = {swapChain};
    b306:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b30d:	48 8b 40 78          	mov    0x78(%rax),%rax
    b311:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  presentInfo.swapchainCount = 1;
    b318:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    b31f:	00 00 00 
  presentInfo.pSwapchains = swapChains;
    b322:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    b329:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  presentInfo.pImageIndices = &imageIndex;
    b330:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b334:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  presentInfo.pResults = nullptr;
    b33b:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    b342:	00 00 00 00 
  result = vkQueuePresentKHR(presentQueue, &presentInfo);
    b346:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b34d:	48 8b 40 58          	mov    0x58(%rax),%rax
    b351:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    b358:	48 89 d6             	mov    %rdx,%rsi
    b35b:	48 89 c7             	mov    %rax,%rdi
    b35e:	e8 fd 93 ff ff       	call   4760 <vkQueuePresentKHR@plt>
    b363:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result == VK_ERROR_OUT_OF_DATE_KHR || result == VK_SUBOPTIMAL_KHR ||
    b366:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    b36d:	74 1b                	je     b38a <_ZN4rtvc17RenderApplication9drawFrameEv+0x40e>
    b36f:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    b376:	74 12                	je     b38a <_ZN4rtvc17RenderApplication9drawFrameEv+0x40e>
      frameBufferResized) {
    b378:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b37f:	0f b6 80 58 01 00 00 	movzbl 0x158(%rax),%eax
  if (result == VK_ERROR_OUT_OF_DATE_KHR || result == VK_SUBOPTIMAL_KHR ||
    b386:	84 c0                	test   %al,%al
    b388:	74 1f                	je     b3a9 <_ZN4rtvc17RenderApplication9drawFrameEv+0x42d>
    frameBufferResized = false;
    b38a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b391:	c6 80 58 01 00 00 00 	movb   $0x0,0x158(%rax)
    recreateSwapChain();
    b398:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b39f:	48 89 c7             	mov    %rax,%rdi
    b3a2:	e8 0f 02 00 00       	call   b5b6 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>
    b3a7:	eb 41                	jmp    b3ea <_ZN4rtvc17RenderApplication9drawFrameEv+0x46e>
  } else if (result != VK_SUCCESS) {
    b3a9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b3ad:	74 3b                	je     b3ea <_ZN4rtvc17RenderApplication9drawFrameEv+0x46e>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b3af:	bf 10 00 00 00       	mov    $0x10,%edi
    b3b4:	e8 c7 8d ff ff       	call   4180 <__cxa_allocate_exception@plt>
    b3b9:	48 89 c3             	mov    %rax,%rbx
    b3bc:	48 8d 05 55 f3 00 00 	lea    0xf355(%rip),%rax        # 1a718 <_ZN6__pstl9execution2v1L5unseqE+0x4ad>
    b3c3:	48 89 c6             	mov    %rax,%rsi
    b3c6:	48 89 df             	mov    %rbx,%rdi
    b3c9:	e8 42 8d ff ff       	call   4110 <_ZNSt13runtime_errorC1EPKc@plt>
    b3ce:	48 8b 05 d3 db 01 00 	mov    0x1dbd3(%rip),%rax        # 28fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b3d5:	48 89 c2             	mov    %rax,%rdx
    b3d8:	48 8d 05 61 d9 01 00 	lea    0x1d961(%rip),%rax        # 28d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b3df:	48 89 c6             	mov    %rax,%rsi
    b3e2:	48 89 df             	mov    %rbx,%rdi
    b3e5:	e8 06 94 ff ff       	call   47f0 <__cxa_throw@plt>
  currentFrame = (currentFrame + 1) % max_frames_in_flight;
    b3ea:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b3f1:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    b3f7:	83 c0 01             	add    $0x1,%eax
    b3fa:	83 e0 01             	and    $0x1,%eax
    b3fd:	89 c2                	mov    %eax,%edx
    b3ff:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b406:	89 90 5c 01 00 00    	mov    %edx,0x15c(%rax)
    b40c:	eb 42                	jmp    b450 <_ZN4rtvc17RenderApplication9drawFrameEv+0x4d4>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b40e:	49 89 c4             	mov    %rax,%r12
    b411:	48 89 df             	mov    %rbx,%rdi
    b414:	e8 67 8e ff ff       	call   4280 <__cxa_free_exception@plt>
    b419:	4c 89 e0             	mov    %r12,%rax
    b41c:	48 89 c7             	mov    %rax,%rdi
    b41f:	e8 1c 94 ff ff       	call   4840 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to submit draw command buffer.");
    b424:	49 89 c4             	mov    %rax,%r12
    b427:	48 89 df             	mov    %rbx,%rdi
    b42a:	e8 51 8e ff ff       	call   4280 <__cxa_free_exception@plt>
    b42f:	4c 89 e0             	mov    %r12,%rax
    b432:	48 89 c7             	mov    %rax,%rdi
    b435:	e8 06 94 ff ff       	call   4840 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b43a:	49 89 c4             	mov    %rax,%r12
    b43d:	48 89 df             	mov    %rbx,%rdi
    b440:	e8 3b 8e ff ff       	call   4280 <__cxa_free_exception@plt>
    b445:	4c 89 e0             	mov    %r12,%rax
    b448:	48 89 c7             	mov    %rax,%rdi
    b44b:	e8 f0 93 ff ff       	call   4840 <_Unwind_Resume@plt>
}
    b450:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    b457:	5b                   	pop    %rbx
    b458:	41 5c                	pop    %r12
    b45a:	5d                   	pop    %rbp
    b45b:	c3                   	ret

000000000000b45c <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>:

void rtvc::RenderApplication::cleanUpSwapChain() {
    b45c:	55                   	push   %rbp
    b45d:	48 89 e5             	mov    %rsp,%rbp
    b460:	48 83 ec 20          	sub    $0x20,%rsp
    b464:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    b468:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    b46f:	00 
    b470:	eb 3a                	jmp    b4ac <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x50>
    vkDestroyFramebuffer(device, swapChainFrameBuffers[i], nullptr);
    b472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b476:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    b47d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b481:	48 89 c6             	mov    %rax,%rsi
    b484:	48 89 d7             	mov    %rdx,%rdi
    b487:	e8 94 27 00 00       	call   dc20 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    b48c:	48 8b 08             	mov    (%rax),%rcx
    b48f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b493:	48 8b 40 40          	mov    0x40(%rax),%rax
    b497:	ba 00 00 00 00       	mov    $0x0,%edx
    b49c:	48 89 ce             	mov    %rcx,%rsi
    b49f:	48 89 c7             	mov    %rax,%rdi
    b4a2:	e8 39 93 ff ff       	call   47e0 <vkDestroyFramebuffer@plt>
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    b4a7:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    b4ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4b0:	48 05 d8 00 00 00    	add    $0xd8,%rax
    b4b6:	48 89 c7             	mov    %rax,%rdi
    b4b9:	e8 0e 2a 00 00       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    b4be:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    b4c2:	0f 92 c0             	setb   %al
    b4c5:	84 c0                	test   %al,%al
    b4c7:	75 a9                	jne    b472 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x16>
  }

  vkDestroyPipeline(device, graphicsPipeline, nullptr);
    b4c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4cd:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    b4d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4d8:	48 8b 40 40          	mov    0x40(%rax),%rax
    b4dc:	ba 00 00 00 00       	mov    $0x0,%edx
    b4e1:	48 89 ce             	mov    %rcx,%rsi
    b4e4:	48 89 c7             	mov    %rax,%rdi
    b4e7:	e8 e4 8f ff ff       	call   44d0 <vkDestroyPipeline@plt>
  vkDestroyPipelineLayout(device, pipelineLayout, nullptr);
    b4ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4f0:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
    b4f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4fb:	48 8b 40 40          	mov    0x40(%rax),%rax
    b4ff:	ba 00 00 00 00       	mov    $0x0,%edx
    b504:	48 89 ce             	mov    %rcx,%rsi
    b507:	48 89 c7             	mov    %rax,%rdi
    b50a:	e8 a1 90 ff ff       	call   45b0 <vkDestroyPipelineLayout@plt>
  vkDestroyRenderPass(device, renderPass, nullptr);
    b50f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b513:	48 8b 88 c0 00 00 00 	mov    0xc0(%rax),%rcx
    b51a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b51e:	48 8b 40 40          	mov    0x40(%rax),%rax
    b522:	ba 00 00 00 00       	mov    $0x0,%edx
    b527:	48 89 ce             	mov    %rcx,%rsi
    b52a:	48 89 c7             	mov    %rax,%rdi
    b52d:	e8 ae 8e ff ff       	call   43e0 <vkDestroyRenderPass@plt>

  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    b532:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    b539:	00 
    b53a:	eb 3a                	jmp    b576 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x11a>
    vkDestroyImageView(device, swapChainImageViews[i], nullptr);
    b53c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b540:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    b547:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b54b:	48 89 c6             	mov    %rax,%rsi
    b54e:	48 89 d7             	mov    %rdx,%rdi
    b551:	e8 fc 22 00 00       	call   d852 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    b556:	48 8b 08             	mov    (%rax),%rcx
    b559:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b55d:	48 8b 40 40          	mov    0x40(%rax),%rax
    b561:	ba 00 00 00 00       	mov    $0x0,%edx
    b566:	48 89 ce             	mov    %rcx,%rsi
    b569:	48 89 c7             	mov    %rax,%rdi
    b56c:	e8 ef 92 ff ff       	call   4860 <vkDestroyImageView@plt>
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    b571:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    b576:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b57a:	48 05 a8 00 00 00    	add    $0xa8,%rax
    b580:	48 89 c7             	mov    %rax,%rdi
    b583:	e8 ee 25 00 00       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    b588:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    b58c:	0f 92 c0             	setb   %al
    b58f:	84 c0                	test   %al,%al
    b591:	75 a9                	jne    b53c <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0xe0>
  }

  vkDestroySwapchainKHR(device, swapChain, nullptr);
    b593:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b597:	48 8b 48 78          	mov    0x78(%rax),%rcx
    b59b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b59f:	48 8b 40 40          	mov    0x40(%rax),%rax
    b5a3:	ba 00 00 00 00       	mov    $0x0,%edx
    b5a8:	48 89 ce             	mov    %rcx,%rsi
    b5ab:	48 89 c7             	mov    %rax,%rdi
    b5ae:	e8 1d 8b ff ff       	call   40d0 <vkDestroySwapchainKHR@plt>
}
    b5b3:	90                   	nop
    b5b4:	c9                   	leave
    b5b5:	c3                   	ret

000000000000b5b6 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>:

void rtvc::RenderApplication::recreateSwapChain() {
    b5b6:	55                   	push   %rbp
    b5b7:	48 89 e5             	mov    %rsp,%rbp
    b5ba:	48 83 ec 20          	sub    $0x20,%rsp
    b5be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  int w = 0, h = 0;
    b5c2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    b5c9:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &w, &h);
    b5d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5d4:	48 8b 00             	mov    (%rax),%rax
    b5d7:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b5db:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    b5df:	48 89 ce             	mov    %rcx,%rsi
    b5e2:	48 89 c7             	mov    %rax,%rdi
    b5e5:	e8 96 91 ff ff       	call   4780 <glfwGetFramebufferSize@plt>
  while (w == 0 || h == 0) {
    b5ea:	eb 1f                	jmp    b60b <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x55>
    glfwGetFramebufferSize(window, &w, &h);
    b5ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5f0:	48 8b 00             	mov    (%rax),%rax
    b5f3:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b5f7:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    b5fb:	48 89 ce             	mov    %rcx,%rsi
    b5fe:	48 89 c7             	mov    %rax,%rdi
    b601:	e8 7a 91 ff ff       	call   4780 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
    b606:	e8 f5 8b ff ff       	call   4200 <glfwWaitEvents@plt>
  while (w == 0 || h == 0) {
    b60b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    b60e:	85 c0                	test   %eax,%eax
    b610:	74 da                	je     b5ec <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x36>
    b612:	8b 45 f8             	mov    -0x8(%rbp),%eax
    b615:	85 c0                	test   %eax,%eax
    b617:	74 d3                	je     b5ec <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x36>
  }

  vkDeviceWaitIdle(device);
    b619:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b61d:	48 8b 40 40          	mov    0x40(%rax),%rax
    b621:	48 89 c7             	mov    %rax,%rdi
    b624:	e8 87 8a ff ff       	call   40b0 <vkDeviceWaitIdle@plt>

  cleanUpSwapChain();
    b629:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b62d:	48 89 c7             	mov    %rax,%rdi
    b630:	e8 27 fe ff ff       	call   b45c <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>

  createSwapChain();
    b635:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b639:	48 89 c7             	mov    %rax,%rdi
    b63c:	e8 d5 d5 ff ff       	call   8c16 <_ZN4rtvc17RenderApplication15createSwapChainEv>
  createImageViews();
    b641:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b645:	48 89 c7             	mov    %rax,%rdi
    b648:	e8 43 d9 ff ff       	call   8f90 <_ZN4rtvc17RenderApplication16createImageViewsEv>
  createRenderPass();
    b64d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b651:	48 89 c7             	mov    %rax,%rdi
    b654:	e8 77 dd ff ff       	call   93d0 <_ZN4rtvc17RenderApplication16createRenderPassEv>
  createGraphicsPipeline();
    b659:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b65d:	48 89 c7             	mov    %rax,%rdi
    b660:	e8 71 df ff ff       	call   95d6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
  createFramebuffers();
    b665:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b669:	48 89 c7             	mov    %rax,%rdi
    b66c:	e8 d3 e9 ff ff       	call   a044 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
}
    b671:	90                   	nop
    b672:	c9                   	leave
    b673:	c3                   	ret

000000000000b674 <_ZN4rtvc17RenderApplication8mainLoopEv>:

void rtvc::RenderApplication::mainLoop() {
    b674:	55                   	push   %rbp
    b675:	48 89 e5             	mov    %rsp,%rbp
    b678:	53                   	push   %rbx
    b679:	48 83 ec 78          	sub    $0x78,%rsp
    b67d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  Timer time_total;
    b681:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b685:	48 89 c7             	mov    %rax,%rdi
    b688:	e8 63 28 00 00       	call   def0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    b68d:	f2 0f 10 05 83 f1 00 	movsd  0xf183(%rip),%xmm0        # 1a818 <_ZN6__pstl9execution2v1L5unseqE+0x5ad>
    b694:	00 
    b695:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    b69a:	e9 a0 00 00 00       	jmp    b73f <_ZN4rtvc17RenderApplication8mainLoopEv+0xcb>
    Timer time_circle;
    b69f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b6a3:	48 89 c7             	mov    %rax,%rdi
    b6a6:	e8 45 28 00 00       	call   def0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>

    glfwPollEvents();
    b6ab:	e8 20 8d ff ff       	call   43d0 <glfwPollEvents@plt>
    drawFrame();
    b6b0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b6b4:	48 89 c7             	mov    %rax,%rdi
    b6b7:	e8 c0 f8 ff ff       	call   af7c <_ZN4rtvc17RenderApplication9drawFrameEv>

    if (time_total.current() >= sec_to_mics) {
    b6bc:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b6c0:	48 89 c7             	mov    %rax,%rdi
    b6c3:	e8 c6 28 00 00       	call   df8e <_ZNK4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    b6c8:	66 48 0f 7e c0       	movq   %xmm0,%rax
    b6cd:	66 48 0f 6e d0       	movq   %rax,%xmm2
    b6d2:	66 0f 2f 15 3e f1 00 	comisd 0xf13e(%rip),%xmm2        # 1a818 <_ZN6__pstl9execution2v1L5unseqE+0x5ad>
    b6d9:	00 
    b6da:	0f 93 c0             	setae  %al
    b6dd:	84 c0                	test   %al,%al
    b6df:	74 52                	je     b733 <_ZN4rtvc17RenderApplication8mainLoopEv+0xbf>
      std::cout << sec_to_mics / time_circle.current() << " FPS\n";
    b6e1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b6e5:	48 89 c7             	mov    %rax,%rdi
    b6e8:	e8 a1 28 00 00       	call   df8e <_ZNK4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    b6ed:	f2 0f 10 0d 23 f1 00 	movsd  0xf123(%rip),%xmm1        # 1a818 <_ZN6__pstl9execution2v1L5unseqE+0x5ad>
    b6f4:	00 
    b6f5:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    b6f9:	66 48 0f 7e c8       	movq   %xmm1,%rax
    b6fe:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b703:	48 8d 05 76 dd 01 00 	lea    0x1dd76(%rip),%rax        # 29480 <_ZSt4cout@GLIBCXX_3.4>
    b70a:	48 89 c7             	mov    %rax,%rdi
    b70d:	e8 8e 91 ff ff       	call   48a0 <_ZNSolsEd@plt>
    b712:	48 89 c2             	mov    %rax,%rdx
    b715:	48 8d 05 4a f0 00 00 	lea    0xf04a(%rip),%rax        # 1a766 <_ZN6__pstl9execution2v1L5unseqE+0x4fb>
    b71c:	48 89 c6             	mov    %rax,%rsi
    b71f:	48 89 d7             	mov    %rdx,%rdi
    b722:	e8 d9 8c ff ff       	call   4400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    b727:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b72b:	48 89 c7             	mov    %rax,%rdi
    b72e:	e8 bd 28 00 00       	call   dff0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    b733:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b737:	48 89 c7             	mov    %rax,%rdi
    b73a:	e8 27 28 00 00       	call   df66 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    b73f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b743:	48 8b 00             	mov    (%rax),%rax
    b746:	48 89 c7             	mov    %rax,%rdi
    b749:	e8 42 91 ff ff       	call   4890 <glfwWindowShouldClose@plt>
    b74e:	85 c0                	test   %eax,%eax
    b750:	0f 94 c0             	sete   %al
    b753:	84 c0                	test   %al,%al
    b755:	0f 85 44 ff ff ff    	jne    b69f <_ZN4rtvc17RenderApplication8mainLoopEv+0x2b>

  vkDeviceWaitIdle(device);
    b75b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b75f:	48 8b 40 40          	mov    0x40(%rax),%rax
    b763:	48 89 c7             	mov    %rax,%rdi
    b766:	e8 45 89 ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
}
    b76b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b76f:	48 89 c7             	mov    %rax,%rdi
    b772:	e8 ef 27 00 00       	call   df66 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b777:	eb 2b                	jmp    b7a4 <_ZN4rtvc17RenderApplication8mainLoopEv+0x130>
  }
    b779:	48 89 c3             	mov    %rax,%rbx
    b77c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b780:	48 89 c7             	mov    %rax,%rdi
    b783:	e8 de 27 00 00       	call   df66 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b788:	eb 03                	jmp    b78d <_ZN4rtvc17RenderApplication8mainLoopEv+0x119>
}
    b78a:	48 89 c3             	mov    %rax,%rbx
    b78d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b791:	48 89 c7             	mov    %rax,%rdi
    b794:	e8 cd 27 00 00       	call   df66 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b799:	48 89 d8             	mov    %rbx,%rax
    b79c:	48 89 c7             	mov    %rax,%rdi
    b79f:	e8 9c 90 ff ff       	call   4840 <_Unwind_Resume@plt>
    b7a4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b7a8:	c9                   	leave
    b7a9:	c3                   	ret

000000000000b7aa <_ZN4rtvc17RenderApplication7cleanUpEv>:

void rtvc::RenderApplication::cleanUp() {
    b7aa:	55                   	push   %rbp
    b7ab:	48 89 e5             	mov    %rsp,%rbp
    b7ae:	48 83 ec 20          	sub    $0x20,%rsp
    b7b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanUpSwapChain();
    b7b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7ba:	48 89 c7             	mov    %rax,%rdi
    b7bd:	e8 9a fc ff ff       	call   b45c <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>

  vkDestroyBuffer(device, vertexBuffer, nullptr);
    b7c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7c6:	48 8b 88 60 01 00 00 	mov    0x160(%rax),%rcx
    b7cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7d1:	48 8b 40 40          	mov    0x40(%rax),%rax
    b7d5:	ba 00 00 00 00       	mov    $0x0,%edx
    b7da:	48 89 ce             	mov    %rcx,%rsi
    b7dd:	48 89 c7             	mov    %rax,%rdi
    b7e0:	e8 ab 89 ff ff       	call   4190 <vkDestroyBuffer@plt>
  vkFreeMemory(device, vertexBufferMemory, nullptr);
    b7e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7e9:	48 8b 88 68 01 00 00 	mov    0x168(%rax),%rcx
    b7f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7f4:	48 8b 40 40          	mov    0x40(%rax),%rax
    b7f8:	ba 00 00 00 00       	mov    $0x0,%edx
    b7fd:	48 89 ce             	mov    %rcx,%rsi
    b800:	48 89 c7             	mov    %rax,%rdi
    b803:	e8 98 8b ff ff       	call   43a0 <vkFreeMemory@plt>

  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    b808:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    b80f:	00 
    b810:	e9 a4 00 00 00       	jmp    b8b9 <_ZN4rtvc17RenderApplication7cleanUpEv+0x10f>
    vkDestroySemaphore(device, imageAvailableSemaphores[i], nullptr);
    b815:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b819:	48 8d 90 10 01 00 00 	lea    0x110(%rax),%rdx
    b820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b824:	48 89 c6             	mov    %rax,%rsi
    b827:	48 89 d7             	mov    %rdx,%rdi
    b82a:	e8 3d 26 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b82f:	48 8b 08             	mov    (%rax),%rcx
    b832:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b836:	48 8b 40 40          	mov    0x40(%rax),%rax
    b83a:	ba 00 00 00 00       	mov    $0x0,%edx
    b83f:	48 89 ce             	mov    %rcx,%rsi
    b842:	48 89 c7             	mov    %rax,%rdi
    b845:	e8 96 88 ff ff       	call   40e0 <vkDestroySemaphore@plt>
    vkDestroySemaphore(device, renderFinishedSemaphores[i], nullptr);
    b84a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b84e:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    b855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b859:	48 89 c6             	mov    %rax,%rsi
    b85c:	48 89 d7             	mov    %rdx,%rdi
    b85f:	e8 08 26 00 00       	call   de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b864:	48 8b 08             	mov    (%rax),%rcx
    b867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b86b:	48 8b 40 40          	mov    0x40(%rax),%rax
    b86f:	ba 00 00 00 00       	mov    $0x0,%edx
    b874:	48 89 ce             	mov    %rcx,%rsi
    b877:	48 89 c7             	mov    %rax,%rdi
    b87a:	e8 61 88 ff ff       	call   40e0 <vkDestroySemaphore@plt>
    vkDestroyFence(device, inFlightFences[i], nullptr);
    b87f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b883:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
    b88a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b88e:	48 89 c6             	mov    %rax,%rsi
    b891:	48 89 d7             	mov    %rdx,%rdi
    b894:	e8 f3 25 00 00       	call   de8c <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    b899:	48 8b 08             	mov    (%rax),%rcx
    b89c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8a0:	48 8b 40 40          	mov    0x40(%rax),%rax
    b8a4:	ba 00 00 00 00       	mov    $0x0,%edx
    b8a9:	48 89 ce             	mov    %rcx,%rsi
    b8ac:	48 89 c7             	mov    %rax,%rdi
    b8af:	e8 0c 8c ff ff       	call   44c0 <vkDestroyFence@plt>
  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    b8b4:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    b8b9:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
    b8be:	0f 86 51 ff ff ff    	jbe    b815 <_ZN4rtvc17RenderApplication7cleanUpEv+0x6b>
  }

  vkDestroyCommandPool(device, commandPool, nullptr);
    b8c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8c8:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    b8cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8d3:	48 8b 40 40          	mov    0x40(%rax),%rax
    b8d7:	ba 00 00 00 00       	mov    $0x0,%edx
    b8dc:	48 89 ce             	mov    %rcx,%rsi
    b8df:	48 89 c7             	mov    %rax,%rdi
    b8e2:	e8 b9 8d ff ff       	call   46a0 <vkDestroyCommandPool@plt>

  vkDestroyDevice(device, nullptr);
    b8e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8eb:	48 8b 40 40          	mov    0x40(%rax),%rax
    b8ef:	be 00 00 00 00       	mov    $0x0,%esi
    b8f4:	48 89 c7             	mov    %rax,%rdi
    b8f7:	e8 14 8a ff ff       	call   4310 <vkDestroyDevice@plt>

  if (enableValidationLayers)
    destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    b8fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b900:	48 8b 48 30          	mov    0x30(%rax),%rcx
    b904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b908:	48 8b 40 10          	mov    0x10(%rax),%rax
    b90c:	ba 00 00 00 00       	mov    $0x0,%edx
    b911:	48 89 ce             	mov    %rcx,%rsi
    b914:	48 89 c7             	mov    %rax,%rdi
    b917:	e8 c3 b7 ff ff       	call   70df <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>

  vkDestroySurfaceKHR(instance, surface, nullptr);
    b91c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b920:	48 8b 48 50          	mov    0x50(%rax),%rcx
    b924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b928:	48 8b 40 10          	mov    0x10(%rax),%rax
    b92c:	ba 00 00 00 00       	mov    $0x0,%edx
    b931:	48 89 ce             	mov    %rcx,%rsi
    b934:	48 89 c7             	mov    %rax,%rdi
    b937:	e8 f4 8e ff ff       	call   4830 <vkDestroySurfaceKHR@plt>

  vkDestroyInstance(instance, nullptr);
    b93c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b940:	48 8b 40 10          	mov    0x10(%rax),%rax
    b944:	be 00 00 00 00       	mov    $0x0,%esi
    b949:	48 89 c7             	mov    %rax,%rdi
    b94c:	e8 ef 8a ff ff       	call   4440 <vkDestroyInstance@plt>

  glfwDestroyWindow(window);
    b951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b955:	48 8b 00             	mov    (%rax),%rax
    b958:	48 89 c7             	mov    %rax,%rdi
    b95b:	e8 90 87 ff ff       	call   40f0 <glfwDestroyWindow@plt>

  glfwTerminate();
    b960:	e8 eb 8a ff ff       	call   4450 <glfwTerminate@plt>
}
    b965:	90                   	nop
    b966:	c9                   	leave
    b967:	c3                   	ret

000000000000b968 <_ZN4rtvc17RenderApplication3runEv>:

void rtvc::RenderApplication::run() {
    b968:	55                   	push   %rbp
    b969:	48 89 e5             	mov    %rsp,%rbp
    b96c:	48 83 ec 10          	sub    $0x10,%rsp
    b970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  initWindow();
    b974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b978:	48 89 c7             	mov    %rax,%rdi
    b97b:	e8 be f4 ff ff       	call   ae3e <_ZN4rtvc17RenderApplication10initWindowEv>
  initVulkan();
    b980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b984:	48 89 c7             	mov    %rax,%rdi
    b987:	e8 38 f5 ff ff       	call   aec4 <_ZN4rtvc17RenderApplication10initVulkanEv>
  mainLoop();
    b98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b990:	48 89 c7             	mov    %rax,%rdi
    b993:	e8 dc fc ff ff       	call   b674 <_ZN4rtvc17RenderApplication8mainLoopEv>
  cleanUp();
    b998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b99c:	48 89 c7             	mov    %rax,%rdi
    b99f:	e8 06 fe ff ff       	call   b7aa <_ZN4rtvc17RenderApplication7cleanUpEv>
    b9a4:	90                   	nop
    b9a5:	c9                   	leave
    b9a6:	c3                   	ret

000000000000b9a7 <_Z41__static_initialization_and_destruction_0ii>:
    b9a7:	55                   	push   %rbp
    b9a8:	48 89 e5             	mov    %rsp,%rbp
    b9ab:	41 55                	push   %r13
    b9ad:	41 54                	push   %r12
    b9af:	53                   	push   %rbx
    b9b0:	48 83 ec 58          	sub    $0x58,%rsp
    b9b4:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    b9b7:	89 75 98             	mov    %esi,-0x68(%rbp)
    b9ba:	83 7d 9c 01          	cmpl   $0x1,-0x64(%rbp)
    b9be:	0f 85 9f 01 00 00    	jne    bb63 <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    b9c4:	81 7d 98 ff ff 00 00 	cmpl   $0xffff,-0x68(%rbp)
    b9cb:	0f 85 92 01 00 00    	jne    bb63 <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    b9d1:	48 8d 05 08 dd 01 00 	lea    0x1dd08(%rip),%rax        # 296e0 <_ZStL8__ioinit>
    b9d8:	48 89 c7             	mov    %rax,%rdi
    b9db:	e8 40 8d ff ff       	call   4720 <_ZNSt8ios_base4InitC1Ev@plt>
    b9e0:	48 8d 05 79 da 01 00 	lea    0x1da79(%rip),%rax        # 29460 <__dso_handle>
    b9e7:	48 89 c2             	mov    %rax,%rdx
    b9ea:	48 8d 05 ef dc 01 00 	lea    0x1dcef(%rip),%rax        # 296e0 <_ZStL8__ioinit>
    b9f1:	48 89 c6             	mov    %rax,%rsi
    b9f4:	48 8b 05 cd d5 01 00 	mov    0x1d5cd(%rip),%rax        # 28fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    b9fb:	48 89 c7             	mov    %rax,%rdi
    b9fe:	e8 7d 89 ff ff       	call   4380 <__cxa_atexit@plt>
    ba03:	48 8d 05 ce dc 01 00 	lea    0x1dcce(%rip),%rax        # 296d8 <_ZGVN4rtvc9resources7shaders8triangleE>
    ba0a:	0f b6 00             	movzbl (%rax),%eax
    ba0d:	84 c0                	test   %al,%al
    ba0f:	0f 85 4e 01 00 00    	jne    bb63 <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    ba15:	48 8d 05 bc dc 01 00 	lea    0x1dcbc(%rip),%rax        # 296d8 <_ZGVN4rtvc9resources7shaders8triangleE>
    ba1c:	c6 00 01             	movb   $0x1,(%rax)
    ba1f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ba23:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    ba28:	f3 0f 10 05 f0 ed 00 	movss  0xedf0(%rip),%xmm0        # 1a820 <_ZN6__pstl9execution2v1L5unseqE+0x5b5>
    ba2f:	00 
    ba30:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    ba35:	f3 0f 10 05 e7 ed 00 	movss  0xede7(%rip),%xmm0        # 1a824 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    ba3c:	00 
    ba3d:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    ba42:	f3 0f 10 05 de ed 00 	movss  0xedde(%rip),%xmm0        # 1a828 <_ZN6__pstl9execution2v1L5unseqE+0x5bd>
    ba49:	00 
    ba4a:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    ba4f:	f3 0f 10 05 d5 ed 00 	movss  0xedd5(%rip),%xmm0        # 1a82c <_ZN6__pstl9execution2v1L5unseqE+0x5c1>
    ba56:	00 
    ba57:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    ba5c:	f3 0f 10 05 c0 ed 00 	movss  0xedc0(%rip),%xmm0        # 1a824 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    ba63:	00 
    ba64:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    ba69:	f3 0f 10 05 b3 ed 00 	movss  0xedb3(%rip),%xmm0        # 1a824 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    ba70:	00 
    ba71:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    ba76:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ba7a:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    ba7f:	f3 0f 10 05 a9 ed 00 	movss  0xeda9(%rip),%xmm0        # 1a830 <_ZN6__pstl9execution2v1L5unseqE+0x5c5>
    ba86:	00 
    ba87:	f3 0f 11 45 c0       	movss  %xmm0,-0x40(%rbp)
    ba8c:	f3 0f 10 05 a0 ed 00 	movss  0xeda0(%rip),%xmm0        # 1a834 <_ZN6__pstl9execution2v1L5unseqE+0x5c9>
    ba93:	00 
    ba94:	f3 0f 11 45 c4       	movss  %xmm0,-0x3c(%rbp)
    ba99:	f3 0f 10 05 7f ed 00 	movss  0xed7f(%rip),%xmm0        # 1a820 <_ZN6__pstl9execution2v1L5unseqE+0x5b5>
    baa0:	00 
    baa1:	f3 0f 11 45 c8       	movss  %xmm0,-0x38(%rbp)
    baa6:	f3 0f 10 05 76 ed 00 	movss  0xed76(%rip),%xmm0        # 1a824 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    baad:	00 
    baae:	f3 0f 11 45 cc       	movss  %xmm0,-0x34(%rbp)
    bab3:	f3 0f 10 05 55 ed 00 	movss  0xed55(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    baba:	00 
    babb:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    bac0:	f3 0f 10 05 48 ed 00 	movss  0xed48(%rip),%xmm0        # 1a810 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    bac7:	00 
    bac8:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    bacd:	f3 0f 10 05 53 ed 00 	movss  0xed53(%rip),%xmm0        # 1a828 <_ZN6__pstl9execution2v1L5unseqE+0x5bd>
    bad4:	00 
    bad5:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    bada:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    bade:	49 89 c4             	mov    %rax,%r12
    bae1:	41 bd 03 00 00 00    	mov    $0x3,%r13d
    bae7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    baeb:	48 89 c7             	mov    %rax,%rdi
    baee:	e8 8d 96 ff ff       	call   5180 <_ZNSaIN4rtvc6VertexEEC1Ev>
    baf3:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    baf7:	4c 89 e6             	mov    %r12,%rsi
    bafa:	4c 89 ef             	mov    %r13,%rdi
    bafd:	4c 89 e1             	mov    %r12,%rcx
    bb00:	4c 89 eb             	mov    %r13,%rbx
    bb03:	48 89 da             	mov    %rbx,%rdx
    bb06:	48 89 c1             	mov    %rax,%rcx
    bb09:	48 8d 05 b0 db 01 00 	lea    0x1dbb0(%rip),%rax        # 296c0 <_ZN4rtvc9resources7shaders8triangleE>
    bb10:	48 89 c7             	mov    %rax,%rdi
    bb13:	e8 a0 96 ff ff       	call   51b8 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    bb18:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    bb1c:	48 89 c7             	mov    %rax,%rdi
    bb1f:	e8 78 96 ff ff       	call   519c <_ZNSaIN4rtvc6VertexEED1Ev>
    bb24:	48 8d 05 35 d9 01 00 	lea    0x1d935(%rip),%rax        # 29460 <__dso_handle>
    bb2b:	48 89 c2             	mov    %rax,%rdx
    bb2e:	48 8d 05 8b db 01 00 	lea    0x1db8b(%rip),%rax        # 296c0 <_ZN4rtvc9resources7shaders8triangleE>
    bb35:	48 89 c6             	mov    %rax,%rsi
    bb38:	48 8d 05 a1 b4 ff ff 	lea    -0x4b5f(%rip),%rax        # 6fe0 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>
    bb3f:	48 89 c7             	mov    %rax,%rdi
    bb42:	e8 39 88 ff ff       	call   4380 <__cxa_atexit@plt>
    bb47:	eb 1a                	jmp    bb63 <_Z41__static_initialization_and_destruction_0ii+0x1bc>
    bb49:	48 89 c3             	mov    %rax,%rbx
    bb4c:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    bb50:	48 89 c7             	mov    %rax,%rdi
    bb53:	e8 44 96 ff ff       	call   519c <_ZNSaIN4rtvc6VertexEED1Ev>
    bb58:	48 89 d8             	mov    %rbx,%rax
    bb5b:	48 89 c7             	mov    %rax,%rdi
    bb5e:	e8 dd 8c ff ff       	call   4840 <_Unwind_Resume@plt>
    bb63:	90                   	nop
    bb64:	48 83 c4 58          	add    $0x58,%rsp
    bb68:	5b                   	pop    %rbx
    bb69:	41 5c                	pop    %r12
    bb6b:	41 5d                	pop    %r13
    bb6d:	5d                   	pop    %rbp
    bb6e:	c3                   	ret

000000000000bb6f <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    bb6f:	55                   	push   %rbp
    bb70:	48 89 e5             	mov    %rsp,%rbp
    bb73:	be ff ff 00 00       	mov    $0xffff,%esi
    bb78:	bf 01 00 00 00       	mov    $0x1,%edi
    bb7d:	e8 25 fe ff ff       	call   b9a7 <_Z41__static_initialization_and_destruction_0ii>
    bb82:	5d                   	pop    %rbp
    bb83:	c3                   	ret

000000000000bb84 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    bb84:	55                   	push   %rbp
    bb85:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    bb88:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    bb8d:	5d                   	pop    %rbp
    bb8e:	c3                   	ret

000000000000bb8f <_ZNSt14numeric_limitsIjE3maxEv>:

      static _GLIBCXX_CONSTEXPR unsigned int
      min() _GLIBCXX_USE_NOEXCEPT { return 0; }

      static _GLIBCXX_CONSTEXPR unsigned int
      max() _GLIBCXX_USE_NOEXCEPT { return __INT_MAX__ * 2U + 1; }
    bb8f:	55                   	push   %rbp
    bb90:	48 89 e5             	mov    %rsp,%rbp
    bb93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    bb98:	5d                   	pop    %rbp
    bb99:	c3                   	ret

000000000000bb9a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    bb9a:	55                   	push   %rbp
    bb9b:	48 89 e5             	mov    %rsp,%rbp
    bb9e:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    bba2:	e8 3a 00 00 00       	call   bbe1 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    bba7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bbab:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    bbaf:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    bbb3:	48 89 d6             	mov    %rdx,%rsi
    bbb6:	48 89 c7             	mov    %rax,%rdi
    bbb9:	e8 06 00 00 00       	call   bbc4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    bbbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbc2:	c9                   	leave
    bbc3:	c3                   	ret

000000000000bbc4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    bbc4:	55                   	push   %rbp
    bbc5:	48 89 e5             	mov    %rsp,%rbp
    bbc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    bbd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbd4:	48 8b 10             	mov    (%rax),%rdx
    bbd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbdb:	48 89 10             	mov    %rdx,(%rax)
    bbde:	90                   	nop
    bbdf:	5d                   	pop    %rbp
    bbe0:	c3                   	ret

000000000000bbe1 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    bbe1:	55                   	push   %rbp
    bbe2:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    bbe5:	b8 00 00 00 00       	mov    $0x0,%eax
    bbea:	5d                   	pop    %rbp
    bbeb:	c3                   	ret

000000000000bbec <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    bbec:	55                   	push   %rbp
    bbed:	48 89 e5             	mov    %rsp,%rbp
    bbf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    bbf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf8:	48 8b 00             	mov    (%rax),%rax
    bbfb:	5d                   	pop    %rbp
    bbfc:	c3                   	ret
    bbfd:	90                   	nop

000000000000bbfe <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    bbfe:	55                   	push   %rbp
    bbff:	48 89 e5             	mov    %rsp,%rbp
    bc02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc06:	48 8d 15 03 d1 01 00 	lea    0x1d103(%rip),%rdx        # 28d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    bc0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc11:	48 89 10             	mov    %rdx,(%rax)
    bc14:	90                   	nop
    bc15:	5d                   	pop    %rbp
    bc16:	c3                   	ret

000000000000bc17 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    bc17:	55                   	push   %rbp
    bc18:	48 89 e5             	mov    %rsp,%rbp
    bc1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc27:	5d                   	pop    %rbp
    bc28:	c3                   	ret

000000000000bc29 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    bc29:	55                   	push   %rbp
    bc2a:	48 89 e5             	mov    %rsp,%rbp
    bc2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc35:	90                   	nop
    bc36:	5d                   	pop    %rbp
    bc37:	c3                   	ret

000000000000bc38 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    bc38:	55                   	push   %rbp
    bc39:	48 89 e5             	mov    %rsp,%rbp
    bc3c:	48 83 ec 10          	sub    $0x10,%rsp
    bc40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    bc44:	e8 3b ff ff ff       	call   bb84 <_ZSt23__is_constant_evaluatedv>
    bc49:	84 c0                	test   %al,%al
    bc4b:	74 0e                	je     bc5b <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    bc4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc51:	48 89 c7             	mov    %rax,%rdi
    bc54:	e8 97 03 00 00       	call   bff0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    bc59:	eb 0d                	jmp    bc68 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    bc5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc5f:	48 89 c7             	mov    %rax,%rdi
    bc62:	e8 f9 84 ff ff       	call   4160 <strlen@plt>
    bc67:	90                   	nop
      }
    bc68:	c9                   	leave
    bc69:	c3                   	ret

000000000000bc6a <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    bc6a:	55                   	push   %rbp
    bc6b:	48 89 e5             	mov    %rsp,%rbp
    bc6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc76:	5d                   	pop    %rbp
    bc77:	c3                   	ret

000000000000bc78 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    bc78:	55                   	push   %rbp
    bc79:	48 89 e5             	mov    %rsp,%rbp
    bc7c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    bc7f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    bc82:	8b 45 fc             	mov    -0x4(%rbp),%eax
    bc85:	0b 45 f8             	or     -0x8(%rbp),%eax
    bc88:	5d                   	pop    %rbp
    bc89:	c3                   	ret

000000000000bc8a <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    bc8a:	55                   	push   %rbp
    bc8b:	48 89 e5             	mov    %rsp,%rbp
    bc8e:	48 83 ec 10          	sub    $0x10,%rsp
    bc92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    bc96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    bca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca4:	48 89 c7             	mov    %rax,%rdi
    bca7:	e8 04 00 00 00       	call   bcb0 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    bcac:	90                   	nop
    bcad:	c9                   	leave
    bcae:	c3                   	ret
    bcaf:	90                   	nop

000000000000bcb0 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    bcb0:	55                   	push   %rbp
    bcb1:	48 89 e5             	mov    %rsp,%rbp
    bcb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    bcb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcbc:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bcc3:	00 
      _M_header._M_left = &_M_header;
    bcc4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bcc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bccc:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    bcd0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bcd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd8:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    bcdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce0:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    bce7:	00 
    }
    bce8:	90                   	nop
    bce9:	5d                   	pop    %rbp
    bcea:	c3                   	ret
    bceb:	90                   	nop

000000000000bcec <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
    bcec:	55                   	push   %rbp
    bced:	48 89 e5             	mov    %rsp,%rbp
    bcf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    bcf4:	48 8d 05 71 e5 00 00 	lea    0xe571(%rip),%rax        # 1a26c <_ZN6__pstl9execution2v1L5unseqE+0x1>
    bcfb:	5d                   	pop    %rbp
    bcfc:	c3                   	ret
    bcfd:	90                   	nop

000000000000bcfe <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    bcfe:	55                   	push   %rbp
    bcff:	48 89 e5             	mov    %rsp,%rbp
    bd02:	48 83 ec 10          	sub    $0x10,%rsp
    bd06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd0e:	48 89 c7             	mov    %rax,%rdi
    bd11:	e8 e8 fe ff ff       	call   bbfe <_ZNSt9exceptionC1Ev>
    bd16:	48 8d 15 b3 cf 01 00 	lea    0x1cfb3(%rip),%rdx        # 28cd0 <_ZTVSt19bad_optional_access+0x10>
    bd1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd21:	48 89 10             	mov    %rdx,(%rax)
    bd24:	90                   	nop
    bd25:	c9                   	leave
    bd26:	c3                   	ret

000000000000bd27 <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    bd27:	55                   	push   %rbp
    bd28:	48 89 e5             	mov    %rsp,%rbp
    bd2b:	53                   	push   %rbx
    bd2c:	48 83 ec 08          	sub    $0x8,%rsp
    bd30:	bf 08 00 00 00       	mov    $0x8,%edi
    bd35:	e8 46 84 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    bd3a:	48 89 c3             	mov    %rax,%rbx
    bd3d:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    bd44:	48 89 df             	mov    %rbx,%rdi
    bd47:	e8 b2 ff ff ff       	call   bcfe <_ZNSt19bad_optional_accessC1Ev>
    bd4c:	48 8d 05 43 c9 00 00 	lea    0xc943(%rip),%rax        # 18696 <_ZNSt19bad_optional_accessD1Ev>
    bd53:	48 89 c2             	mov    %rax,%rdx
    bd56:	48 8d 05 fb cf 01 00 	lea    0x1cffb(%rip),%rax        # 28d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bd5d:	48 89 c6             	mov    %rax,%rsi
    bd60:	48 89 df             	mov    %rbx,%rdi
    bd63:	e8 88 8a ff ff       	call   47f0 <__cxa_throw@plt>

000000000000bd68 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>:

  struct QueueFamilyIndices {
    std::optional<uint32_t> graphicsFamily;
    std::optional<uint32_t> presentFamily;

    bool isComplete() {
    bd68:	55                   	push   %rbp
    bd69:	48 89 e5             	mov    %rsp,%rbp
    bd6c:	48 83 ec 10          	sub    $0x10,%rsp
    bd70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return graphicsFamily.has_value() && presentFamily.has_value();
    bd74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd78:	48 89 c7             	mov    %rax,%rdi
    bd7b:	e8 8e 03 00 00       	call   c10e <_ZNKSt8optionalIjE9has_valueEv>
    bd80:	84 c0                	test   %al,%al
    bd82:	74 1b                	je     bd9f <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x37>
    bd84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd88:	48 83 c0 08          	add    $0x8,%rax
    bd8c:	48 89 c7             	mov    %rax,%rdi
    bd8f:	e8 7a 03 00 00       	call   c10e <_ZNKSt8optionalIjE9has_valueEv>
    bd94:	84 c0                	test   %al,%al
    bd96:	74 07                	je     bd9f <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x37>
    bd98:	b8 01 00 00 00       	mov    $0x1,%eax
    bd9d:	eb 05                	jmp    bda4 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x3c>
    bd9f:	b8 00 00 00 00       	mov    $0x0,%eax
    }
    bda4:	c9                   	leave
    bda5:	c3                   	ret

000000000000bda6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    bda6:	55                   	push   %rbp
    bda7:	48 89 e5             	mov    %rsp,%rbp
    bdaa:	48 83 ec 10          	sub    $0x10,%rsp
    bdae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb6:	48 89 c7             	mov    %rax,%rdi
    bdb9:	e8 86 03 00 00       	call   c144 <_ZNSaI21VkExtensionPropertiesED1Ev>
    bdbe:	90                   	nop
    bdbf:	c9                   	leave
    bdc0:	c3                   	ret
    bdc1:	90                   	nop

000000000000bdc2 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way. Managing the pointer is the user's responsibility.
       */
      ~set() = default;
    bdc2:	55                   	push   %rbp
    bdc3:	48 89 e5             	mov    %rsp,%rbp
    bdc6:	48 83 ec 10          	sub    $0x10,%rsp
    bdca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdd2:	48 89 c7             	mov    %rax,%rdi
    bdd5:	e8 80 0a 00 00       	call   c85a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    bdda:	90                   	nop
    bddb:	c9                   	leave
    bddc:	c3                   	ret
    bddd:	90                   	nop

000000000000bdde <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    bdde:	55                   	push   %rbp
    bddf:	48 89 e5             	mov    %rsp,%rbp
    bde2:	48 83 ec 10          	sub    $0x10,%rsp
    bde6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdee:	48 89 c7             	mov    %rax,%rdi
    bdf1:	e8 06 0b 00 00       	call   c8fc <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    bdf6:	90                   	nop
    bdf7:	c9                   	leave
    bdf8:	c3                   	ret
    bdf9:	90                   	nop

000000000000bdfa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    bdfa:	55                   	push   %rbp
    bdfb:	48 89 e5             	mov    %rsp,%rbp
    bdfe:	48 83 ec 10          	sub    $0x10,%rsp
    be02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be0a:	48 89 c7             	mov    %rax,%rdi
    be0d:	e8 c2 0a 00 00       	call   c8d4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>
    be12:	90                   	nop
    be13:	c9                   	leave
    be14:	c3                   	ret
    be15:	90                   	nop

000000000000be16 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      vector() = default;
    be16:	55                   	push   %rbp
    be17:	48 89 e5             	mov    %rsp,%rbp
    be1a:	48 83 ec 10          	sub    $0x10,%rsp
    be1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be26:	48 89 c7             	mov    %rax,%rdi
    be29:	e8 cc ff ff ff       	call   bdfa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    be2e:	90                   	nop
    be2f:	c9                   	leave
    be30:	c3                   	ret
    be31:	90                   	nop

000000000000be32 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    be32:	55                   	push   %rbp
    be33:	48 89 e5             	mov    %rsp,%rbp
    be36:	48 83 ec 10          	sub    $0x10,%rsp
    be3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be42:	48 89 c7             	mov    %rax,%rdi
    be45:	e8 88 0b 00 00       	call   c9d2 <_ZNSaI16VkPresentModeKHRED1Ev>
    be4a:	90                   	nop
    be4b:	c9                   	leave
    be4c:	c3                   	ret
    be4d:	90                   	nop

000000000000be4e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    be4e:	55                   	push   %rbp
    be4f:	48 89 e5             	mov    %rsp,%rbp
    be52:	48 83 ec 10          	sub    $0x10,%rsp
    be56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be5e:	48 89 c7             	mov    %rax,%rdi
    be61:	e8 44 0b 00 00       	call   c9aa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>
    be66:	90                   	nop
    be67:	c9                   	leave
    be68:	c3                   	ret
    be69:	90                   	nop

000000000000be6a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>:
      vector() = default;
    be6a:	55                   	push   %rbp
    be6b:	48 89 e5             	mov    %rsp,%rbp
    be6e:	48 83 ec 10          	sub    $0x10,%rsp
    be72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be7a:	48 89 c7             	mov    %rax,%rdi
    be7d:	e8 cc ff ff ff       	call   be4e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>
    be82:	90                   	nop
    be83:	c9                   	leave
    be84:	c3                   	ret
    be85:	90                   	nop

000000000000be86 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsC1Ev>:

  VkSurfaceKHR surface;

  VkQueue presentQueue;

  struct SwapChainSupportDetails {
    be86:	55                   	push   %rbp
    be87:	48 89 e5             	mov    %rsp,%rbp
    be8a:	48 83 ec 10          	sub    $0x10,%rsp
    be8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be96:	48 83 c0 38          	add    $0x38,%rax
    be9a:	48 89 c7             	mov    %rax,%rdi
    be9d:	e8 74 ff ff ff       	call   be16 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    bea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bea6:	48 83 c0 50          	add    $0x50,%rax
    beaa:	48 89 c7             	mov    %rax,%rdi
    bead:	e8 b8 ff ff ff       	call   be6a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>
    beb2:	90                   	nop
    beb3:	c9                   	leave
    beb4:	c3                   	ret
    beb5:	90                   	nop

000000000000beb6 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>:
    beb6:	55                   	push   %rbp
    beb7:	48 89 e5             	mov    %rsp,%rbp
    beba:	48 83 ec 10          	sub    $0x10,%rsp
    bebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec6:	48 83 c0 50          	add    $0x50,%rax
    beca:	48 89 c7             	mov    %rax,%rdi
    becd:	e8 6a 0b 00 00       	call   ca3c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    bed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed6:	48 83 c0 38          	add    $0x38,%rax
    beda:	48 89 c7             	mov    %rax,%rdi
    bedd:	e8 84 0a 00 00       	call   c966 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    bee2:	90                   	nop
    bee3:	c9                   	leave
    bee4:	c3                   	ret
    bee5:	90                   	nop

000000000000bee6 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    bee6:	55                   	push   %rbp
    bee7:	48 89 e5             	mov    %rsp,%rbp
    beea:	48 83 ec 10          	sub    $0x10,%rsp
    beee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bef6:	48 89 c7             	mov    %rax,%rdi
    bef9:	e8 d4 11 00 00       	call   d0d2 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>
    befe:	90                   	nop
    beff:	c9                   	leave
    bf00:	c3                   	ret
    bf01:	90                   	nop

000000000000bf02 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      _Vector_base() = default;
    bf02:	55                   	push   %rbp
    bf03:	48 89 e5             	mov    %rsp,%rbp
    bf06:	48 83 ec 10          	sub    $0x10,%rsp
    bf0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf12:	48 89 c7             	mov    %rax,%rdi
    bf15:	e8 90 11 00 00       	call   d0aa <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>
    bf1a:	90                   	nop
    bf1b:	c9                   	leave
    bf1c:	c3                   	ret
    bf1d:	90                   	nop

000000000000bf1e <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      vector() = default;
    bf1e:	55                   	push   %rbp
    bf1f:	48 89 e5             	mov    %rsp,%rbp
    bf22:	48 83 ec 10          	sub    $0x10,%rsp
    bf26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf2e:	48 89 c7             	mov    %rax,%rdi
    bf31:	e8 cc ff ff ff       	call   bf02 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
    bf36:	90                   	nop
    bf37:	c9                   	leave
    bf38:	c3                   	ret
    bf39:	90                   	nop

000000000000bf3a <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    bf3a:	55                   	push   %rbp
    bf3b:	48 89 e5             	mov    %rsp,%rbp
    bf3e:	48 83 ec 10          	sub    $0x10,%rsp
    bf42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    bf46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4a:	48 89 c7             	mov    %rax,%rdi
    bf4d:	e8 1a 00 00 00       	call   bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    bf52:	84 c0                	test   %al,%al
    bf54:	74 0e                	je     bf64 <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
    bf56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf5a:	48 89 c7             	mov    %rax,%rdi
    bf5d:	e8 28 12 00 00       	call   d18a <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    bf62:	eb 05                	jmp    bf69 <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
    bf64:	e8 be fd ff ff       	call   bd27 <_ZSt27__throw_bad_optional_accessv>
      }
    bf69:	c9                   	leave
    bf6a:	c3                   	ret
    bf6b:	90                   	nop

000000000000bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    bf6c:	55                   	push   %rbp
    bf6d:	48 89 e5             	mov    %rsp,%rbp
    bf70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    bf74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf78:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    bf7c:	5d                   	pop    %rbp
    bf7d:	c3                   	ret

000000000000bf7e <_ZNSt3setIjSt4lessIjESaIjEED1Ev>:
    bf7e:	55                   	push   %rbp
    bf7f:	48 89 e5             	mov    %rsp,%rbp
    bf82:	48 83 ec 10          	sub    $0x10,%rsp
    bf86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf8e:	48 89 c7             	mov    %rax,%rdi
    bf91:	e8 3a 13 00 00       	call   d2d0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    bf96:	90                   	nop
    bf97:	c9                   	leave
    bf98:	c3                   	ret
    bf99:	90                   	nop

000000000000bf9a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    bf9a:	55                   	push   %rbp
    bf9b:	48 89 e5             	mov    %rsp,%rbp
    bf9e:	48 83 ec 10          	sub    $0x10,%rsp
    bfa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfaa:	48 89 c7             	mov    %rax,%rdi
    bfad:	e8 be 80 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    bfb2:	90                   	nop
    bfb3:	c9                   	leave
    bfb4:	c3                   	ret
    bfb5:	90                   	nop

000000000000bfb6 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
    bfb6:	55                   	push   %rbp
    bfb7:	48 89 e5             	mov    %rsp,%rbp
    bfba:	48 83 ec 10          	sub    $0x10,%rsp
    bfbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
    bfc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfc6:	48 89 c7             	mov    %rax,%rdi
    bfc9:	e8 02 00 00 00       	call   bfd0 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
    bfce:	c9                   	leave
    bfcf:	c3                   	ret

000000000000bfd0 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
    bfd0:	55                   	push   %rbp
    bfd1:	48 89 e5             	mov    %rsp,%rbp
    bfd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
    bfd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfdc:	5d                   	pop    %rbp
    bfdd:	c3                   	ret

000000000000bfde <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	  : __d(__t.time_since_epoch())
	  { }

	// observer
	constexpr duration
	time_since_epoch() const
    bfde:	55                   	push   %rbp
    bfdf:	48 89 e5             	mov    %rsp,%rbp
    bfe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    bfe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfea:	48 8b 00             	mov    (%rax),%rax
    bfed:	5d                   	pop    %rbp
    bfee:	c3                   	ret
    bfef:	90                   	nop

000000000000bff0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    bff0:	55                   	push   %rbp
    bff1:	48 89 e5             	mov    %rsp,%rbp
    bff4:	48 83 ec 20          	sub    $0x20,%rsp
    bff8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    bffc:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c003:	00 
      while (!eq(__p[__i], char_type()))
    c004:	eb 05                	jmp    c00b <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    c006:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    c00b:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    c00f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c013:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c017:	48 01 c2             	add    %rax,%rdx
    c01a:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    c01e:	48 89 c6             	mov    %rax,%rsi
    c021:	48 89 d7             	mov    %rdx,%rdi
    c024:	e8 e7 1f 00 00       	call   e010 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    c029:	83 f0 01             	xor    $0x1,%eax
    c02c:	84 c0                	test   %al,%al
    c02e:	75 d6                	jne    c006 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    c030:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    c034:	c9                   	leave
    c035:	c3                   	ret

000000000000c036 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    c036:	55                   	push   %rbp
    c037:	48 89 e5             	mov    %rsp,%rbp
    c03a:	48 83 ec 10          	sub    $0x10,%rsp
    c03e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c046:	48 89 c7             	mov    %rax,%rdi
    c049:	e8 22 80 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    c04e:	90                   	nop
    c04f:	c9                   	leave
    c050:	c3                   	ret
    c051:	90                   	nop

000000000000c052 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    c052:	55                   	push   %rbp
    c053:	48 89 e5             	mov    %rsp,%rbp
    c056:	53                   	push   %rbx
    c057:	48 83 ec 38          	sub    $0x38,%rsp
    c05b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c05f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c063:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    c067:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c06b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c06f:	48 89 c7             	mov    %rax,%rdi
    c072:	e8 69 82 ff ff       	call   42e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    c077:	48 89 c1             	mov    %rax,%rcx
    c07a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c07e:	48 89 c2             	mov    %rax,%rdx
    c081:	48 89 ce             	mov    %rcx,%rsi
    c084:	48 89 df             	mov    %rbx,%rdi
    c087:	e8 04 84 ff ff       	call   4490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    c08c:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c091:	75 0f                	jne    c0a2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    c093:	48 8d 05 d6 e6 00 00 	lea    0xe6d6(%rip),%rax        # 1a770 <_ZN6__pstl9execution2v1L5unseqE+0x505>
    c09a:	48 89 c7             	mov    %rax,%rdi
    c09d:	e8 ce 81 ff ff       	call   4270 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    c0a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c0a6:	48 89 c7             	mov    %rax,%rdi
    c0a9:	e8 8a fb ff ff       	call   bc38 <_ZNSt11char_traitsIcE6lengthEPKc>
    c0ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c0b2:	48 01 d0             	add    %rdx,%rax
    c0b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    c0b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0bd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c0c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0c5:	48 89 ce             	mov    %rcx,%rsi
    c0c8:	48 89 c7             	mov    %rax,%rdi
    c0cb:	e8 a6 1f 00 00       	call   e076 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    c0d0:	eb 1a                	jmp    c0ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    c0d2:	48 89 c3             	mov    %rax,%rbx
    c0d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0d9:	48 89 c7             	mov    %rax,%rdi
    c0dc:	e8 55 ff ff ff       	call   c036 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    c0e1:	48 89 d8             	mov    %rbx,%rax
    c0e4:	48 89 c7             	mov    %rax,%rdi
    c0e7:	e8 54 87 ff ff       	call   4840 <_Unwind_Resume@plt>
    c0ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c0f0:	c9                   	leave
    c0f1:	c3                   	ret

000000000000c0f2 <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c0f2:	55                   	push   %rbp
    c0f3:	48 89 e5             	mov    %rsp,%rbp
    c0f6:	48 83 ec 10          	sub    $0x10,%rsp
    c0fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c102:	48 89 c7             	mov    %rax,%rdi
    c105:	e8 54 20 00 00       	call   e15e <_ZNSt15__new_allocatorIjED1Ev>
    c10a:	90                   	nop
    c10b:	c9                   	leave
    c10c:	c3                   	ret
    c10d:	90                   	nop

000000000000c10e <_ZNKSt8optionalIjE9has_valueEv>:
      constexpr bool has_value() const noexcept
    c10e:	55                   	push   %rbp
    c10f:	48 89 e5             	mov    %rsp,%rbp
    c112:	48 83 ec 10          	sub    $0x10,%rsp
    c116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    c11a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c11e:	48 89 c7             	mov    %rax,%rdi
    c121:	e8 46 fe ff ff       	call   bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    c126:	c9                   	leave
    c127:	c3                   	ret

000000000000c128 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c128:	55                   	push   %rbp
    c129:	48 89 e5             	mov    %rsp,%rbp
    c12c:	48 83 ec 10          	sub    $0x10,%rsp
    c130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c138:	48 89 c7             	mov    %rax,%rdi
    c13b:	e8 2a 20 00 00       	call   e16a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    c140:	90                   	nop
    c141:	c9                   	leave
    c142:	c3                   	ret
    c143:	90                   	nop

000000000000c144 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c144:	55                   	push   %rbp
    c145:	48 89 e5             	mov    %rsp,%rbp
    c148:	48 83 ec 10          	sub    $0x10,%rsp
    c14c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c154:	48 89 c7             	mov    %rax,%rdi
    c157:	e8 1a 20 00 00       	call   e176 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    c15c:	90                   	nop
    c15d:	c9                   	leave
    c15e:	c3                   	ret
    c15f:	90                   	nop

000000000000c160 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c160:	55                   	push   %rbp
    c161:	48 89 e5             	mov    %rsp,%rbp
    c164:	53                   	push   %rbx
    c165:	48 83 ec 28          	sub    $0x28,%rsp
    c169:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c16d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c171:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c175:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c179:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c17d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c181:	48 89 d6             	mov    %rdx,%rsi
    c184:	48 89 c7             	mov    %rax,%rdi
    c187:	e8 f5 1f 00 00       	call   e181 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    c18c:	48 89 c1             	mov    %rax,%rcx
    c18f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c193:	48 89 c2             	mov    %rax,%rdx
    c196:	48 89 ce             	mov    %rcx,%rsi
    c199:	48 89 df             	mov    %rbx,%rdi
    c19c:	e8 41 20 00 00       	call   e1e2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    c1a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c1a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1a9:	48 89 d6             	mov    %rdx,%rsi
    c1ac:	48 89 c7             	mov    %rax,%rdi
    c1af:	e8 8c 20 00 00       	call   e240 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    c1b4:	eb 1a                	jmp    c1d0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    c1b6:	48 89 c3             	mov    %rax,%rbx
    c1b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1bd:	48 89 c7             	mov    %rax,%rdi
    c1c0:	e8 79 00 00 00       	call   c23e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    c1c5:	48 89 d8             	mov    %rbx,%rax
    c1c8:	48 89 c7             	mov    %rax,%rdi
    c1cb:	e8 70 86 ff ff       	call   4840 <_Unwind_Resume@plt>
    c1d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c1d4:	c9                   	leave
    c1d5:	c3                   	ret

000000000000c1d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c1d6:	55                   	push   %rbp
    c1d7:	48 89 e5             	mov    %rsp,%rbp
    c1da:	48 83 ec 10          	sub    $0x10,%rsp
    c1de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c1e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e6:	48 89 c7             	mov    %rax,%rdi
    c1e9:	e8 92 20 00 00       	call   e280 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c1ee:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c1f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1f5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c1f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1fd:	48 8b 00             	mov    (%rax),%rax
    c200:	48 89 ce             	mov    %rcx,%rsi
    c203:	48 89 c7             	mov    %rax,%rdi
    c206:	e8 83 20 00 00       	call   e28e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    c20b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20f:	48 89 c7             	mov    %rax,%rdi
    c212:	e8 27 00 00 00       	call   c23e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    c217:	90                   	nop
    c218:	c9                   	leave
    c219:	c3                   	ret

000000000000c21a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c21a:	55                   	push   %rbp
    c21b:	48 89 e5             	mov    %rsp,%rbp
    c21e:	48 83 ec 10          	sub    $0x10,%rsp
    c222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22a:	48 8b 10             	mov    (%rax),%rdx
    c22d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c231:	48 89 d6             	mov    %rdx,%rsi
    c234:	48 89 c7             	mov    %rax,%rdi
    c237:	e8 7c 20 00 00       	call   e2b8 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    c23c:	c9                   	leave
    c23d:	c3                   	ret

000000000000c23e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c23e:	55                   	push   %rbp
    c23f:	48 89 e5             	mov    %rsp,%rbp
    c242:	48 83 ec 10          	sub    $0x10,%rsp
    c246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c24a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c24e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c256:	48 8b 00             	mov    (%rax),%rax
    c259:	48 29 c2             	sub    %rax,%rdx
    c25c:	48 c1 fa 02          	sar    $0x2,%rdx
    c260:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    c267:	fc c0 0f 
    c26a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c26e:	48 89 c2             	mov    %rax,%rdx
    c271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c275:	48 8b 08             	mov    (%rax),%rcx
    c278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c27c:	48 89 ce             	mov    %rcx,%rsi
    c27f:	48 89 c7             	mov    %rax,%rdi
    c282:	e8 69 20 00 00       	call   e2f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c28b:	48 89 c7             	mov    %rax,%rdi
    c28e:	e8 13 fb ff ff       	call   bda6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    c293:	90                   	nop
    c294:	c9                   	leave
    c295:	c3                   	ret

000000000000c296 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>:
	vector(_InputIterator __first, _InputIterator __last,
    c296:	55                   	push   %rbp
    c297:	48 89 e5             	mov    %rsp,%rbp
    c29a:	53                   	push   %rbx
    c29b:	48 83 ec 38          	sub    $0x38,%rsp
    c29f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c2a3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c2a7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c2ab:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	: _Base(__a)
    c2af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c2b3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c2b7:	48 89 d6             	mov    %rdx,%rsi
    c2ba:	48 89 c7             	mov    %rax,%rdi
    c2bd:	e8 ac 97 ff ff       	call   5a6e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
			      std::__iterator_category(__first));
    c2c2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c2c6:	48 89 c7             	mov    %rax,%rdi
    c2c9:	e8 57 20 00 00       	call   e325 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
	  _M_range_initialize(__first, __last,
    c2ce:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c2d2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c2d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c2da:	48 89 ce             	mov    %rcx,%rsi
    c2dd:	48 89 c7             	mov    %rax,%rdi
    c2e0:	e8 7d 20 00 00       	call   e362 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>
	}
    c2e5:	eb 1a                	jmp    c301 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_+0x6b>
    c2e7:	48 89 c3             	mov    %rax,%rbx
    c2ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c2ee:	48 89 c7             	mov    %rax,%rdi
    c2f1:	e8 9e 97 ff ff       	call   5a94 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    c2f6:	48 89 d8             	mov    %rbx,%rax
    c2f9:	48 89 c7             	mov    %rax,%rdi
    c2fc:	e8 3f 85 ff ff       	call   4840 <_Unwind_Resume@plt>
    c301:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c305:	c9                   	leave
    c306:	c3                   	ret
    c307:	90                   	nop

000000000000c308 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
    c308:	55                   	push   %rbp
    c309:	48 89 e5             	mov    %rsp,%rbp
    c30c:	48 83 ec 10          	sub    $0x10,%rsp
    c310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c314:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    c318:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c31c:	48 89 c7             	mov    %rax,%rdi
    c31f:	e8 ed 20 00 00       	call   e411 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    c324:	48 89 c2             	mov    %rax,%rdx
    c327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c32b:	48 89 d6             	mov    %rdx,%rsi
    c32e:	48 89 c7             	mov    %rax,%rdi
    c331:	e8 ea 20 00 00       	call   e420 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    c336:	90                   	nop
    c337:	c9                   	leave
    c338:	c3                   	ret
    c339:	90                   	nop

000000000000c33a <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c33a:	55                   	push   %rbp
    c33b:	48 89 e5             	mov    %rsp,%rbp
    c33e:	48 83 ec 10          	sub    $0x10,%rsp
    c342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34a:	48 89 c7             	mov    %rax,%rdi
    c34d:	e8 72 21 00 00       	call   e4c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    c352:	90                   	nop
    c353:	c9                   	leave
    c354:	c3                   	ret
    c355:	90                   	nop

000000000000c356 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c356:	55                   	push   %rbp
    c357:	48 89 e5             	mov    %rsp,%rbp
    c35a:	48 83 ec 10          	sub    $0x10,%rsp
    c35e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c366:	48 89 c7             	mov    %rax,%rdi
    c369:	e8 62 21 00 00       	call   e4d0 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    c36e:	90                   	nop
    c36f:	c9                   	leave
    c370:	c3                   	ret
    c371:	90                   	nop

000000000000c372 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c372:	55                   	push   %rbp
    c373:	48 89 e5             	mov    %rsp,%rbp
    c376:	53                   	push   %rbx
    c377:	48 83 ec 28          	sub    $0x28,%rsp
    c37b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c37f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c383:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c387:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c38b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c38f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c393:	48 89 d6             	mov    %rdx,%rsi
    c396:	48 89 c7             	mov    %rax,%rdi
    c399:	e8 3d 21 00 00       	call   e4db <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    c39e:	48 89 c1             	mov    %rax,%rcx
    c3a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c3a5:	48 89 c2             	mov    %rax,%rdx
    c3a8:	48 89 ce             	mov    %rcx,%rsi
    c3ab:	48 89 df             	mov    %rbx,%rdi
    c3ae:	e8 a5 21 00 00       	call   e558 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    c3b3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c3b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3bb:	48 89 d6             	mov    %rdx,%rsi
    c3be:	48 89 c7             	mov    %rax,%rdi
    c3c1:	e8 48 22 00 00       	call   e60e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    c3c6:	eb 1a                	jmp    c3e2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    c3c8:	48 89 c3             	mov    %rax,%rbx
    c3cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3cf:	48 89 c7             	mov    %rax,%rdi
    c3d2:	e8 df 21 00 00       	call   e5b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    c3d7:	48 89 d8             	mov    %rbx,%rax
    c3da:	48 89 c7             	mov    %rax,%rdi
    c3dd:	e8 5e 84 ff ff       	call   4840 <_Unwind_Resume@plt>
    c3e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c3e6:	c9                   	leave
    c3e7:	c3                   	ret

000000000000c3e8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c3e8:	55                   	push   %rbp
    c3e9:	48 89 e5             	mov    %rsp,%rbp
    c3ec:	48 83 ec 10          	sub    $0x10,%rsp
    c3f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c3f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f8:	48 89 c7             	mov    %rax,%rdi
    c3fb:	e8 4e 22 00 00       	call   e64e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c400:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c407:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c40b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c40f:	48 8b 00             	mov    (%rax),%rax
    c412:	48 89 ce             	mov    %rcx,%rsi
    c415:	48 89 c7             	mov    %rax,%rdi
    c418:	e8 3f 22 00 00       	call   e65c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    c41d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c421:	48 89 c7             	mov    %rax,%rdi
    c424:	e8 8d 21 00 00       	call   e5b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    c429:	90                   	nop
    c42a:	c9                   	leave
    c42b:	c3                   	ret

000000000000c42c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c42c:	55                   	push   %rbp
    c42d:	48 89 e5             	mov    %rsp,%rbp
    c430:	48 83 ec 10          	sub    $0x10,%rsp
    c434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c43c:	48 8b 10             	mov    (%rax),%rdx
    c43f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c443:	48 89 d6             	mov    %rdx,%rsi
    c446:	48 89 c7             	mov    %rax,%rdi
    c449:	e8 38 22 00 00       	call   e686 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    c44e:	c9                   	leave
    c44f:	c3                   	ret

000000000000c450 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    c450:	55                   	push   %rbp
    c451:	48 89 e5             	mov    %rsp,%rbp
    c454:	48 83 ec 20          	sub    $0x20,%rsp
    c458:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    c45c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c460:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c464:	48 89 d6             	mov    %rdx,%rsi
    c467:	48 89 c7             	mov    %rax,%rdi
    c46a:	e8 29 22 00 00       	call   e698 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c46f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c473:	c9                   	leave
    c474:	c3                   	ret
    c475:	90                   	nop

000000000000c476 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    c476:	55                   	push   %rbp
    c477:	48 89 e5             	mov    %rsp,%rbp
    c47a:	48 83 ec 20          	sub    $0x20,%rsp
    c47e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    c482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c486:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c48a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c48e:	48 89 d6             	mov    %rdx,%rsi
    c491:	48 89 c7             	mov    %rax,%rdi
    c494:	e8 ff 21 00 00       	call   e698 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c49d:	c9                   	leave
    c49e:	c3                   	ret

000000000000c49f <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c49f:	55                   	push   %rbp
    c4a0:	48 89 e5             	mov    %rsp,%rbp
    c4a3:	53                   	push   %rbx
    c4a4:	48 83 ec 18          	sub    $0x18,%rsp
    c4a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c4ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    c4b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c4b4:	48 89 c7             	mov    %rax,%rdi
    c4b7:	e8 fa 21 00 00       	call   e6b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c4bc:	48 8b 18             	mov    (%rax),%rbx
    c4bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c4c3:	48 89 c7             	mov    %rax,%rdi
    c4c6:	e8 eb 21 00 00       	call   e6b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c4cb:	48 8b 00             	mov    (%rax),%rax
    c4ce:	48 39 c3             	cmp    %rax,%rbx
    c4d1:	0f 95 c0             	setne  %al
    c4d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c4d8:	c9                   	leave
    c4d9:	c3                   	ret

000000000000c4da <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c4da:	55                   	push   %rbp
    c4db:	48 89 e5             	mov    %rsp,%rbp
    c4de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c4e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e6:	48 8b 00             	mov    (%rax),%rax
    c4e9:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c4ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4f1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c4f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c4f8:	5d                   	pop    %rbp
    c4f9:	c3                   	ret

000000000000c4fa <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c4fa:	55                   	push   %rbp
    c4fb:	48 89 e5             	mov    %rsp,%rbp
    c4fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c506:	48 8b 00             	mov    (%rax),%rax
    c509:	5d                   	pop    %rbp
    c50a:	c3                   	ret
    c50b:	90                   	nop

000000000000c50c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c50c:	55                   	push   %rbp
    c50d:	48 89 e5             	mov    %rsp,%rbp
    c510:	48 83 ec 20          	sub    $0x20,%rsp
    c514:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c518:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c51c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c520:	48 89 d6             	mov    %rdx,%rsi
    c523:	48 89 c7             	mov    %rax,%rdi
    c526:	e8 99 21 00 00       	call   e6c4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c52b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c52f:	c9                   	leave
    c530:	c3                   	ret
    c531:	90                   	nop

000000000000c532 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c532:	55                   	push   %rbp
    c533:	48 89 e5             	mov    %rsp,%rbp
    c536:	48 83 ec 20          	sub    $0x20,%rsp
    c53a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c53e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c542:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c546:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c54a:	48 89 d6             	mov    %rdx,%rsi
    c54d:	48 89 c7             	mov    %rax,%rdi
    c550:	e8 6f 21 00 00       	call   e6c4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c559:	c9                   	leave
    c55a:	c3                   	ret

000000000000c55b <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c55b:	55                   	push   %rbp
    c55c:	48 89 e5             	mov    %rsp,%rbp
    c55f:	53                   	push   %rbx
    c560:	48 83 ec 18          	sub    $0x18,%rsp
    c564:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c568:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c56c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c570:	48 89 c7             	mov    %rax,%rdi
    c573:	e8 6a 21 00 00       	call   e6e2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c578:	48 8b 18             	mov    (%rax),%rbx
    c57b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c57f:	48 89 c7             	mov    %rax,%rdi
    c582:	e8 5b 21 00 00       	call   e6e2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c587:	48 8b 00             	mov    (%rax),%rax
    c58a:	48 39 c3             	cmp    %rax,%rbx
    c58d:	0f 95 c0             	setne  %al
    c590:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c594:	c9                   	leave
    c595:	c3                   	ret

000000000000c596 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c596:	55                   	push   %rbp
    c597:	48 89 e5             	mov    %rsp,%rbp
    c59a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5a2:	48 8b 00             	mov    (%rax),%rax
    c5a5:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    c5ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b0:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c5b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c5b7:	5d                   	pop    %rbp
    c5b8:	c3                   	ret
    c5b9:	90                   	nop

000000000000c5ba <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c5ba:	55                   	push   %rbp
    c5bb:	48 89 e5             	mov    %rsp,%rbp
    c5be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c6:	48 8b 00             	mov    (%rax),%rax
    c5c9:	5d                   	pop    %rbp
    c5ca:	c3                   	ret
    c5cb:	90                   	nop

000000000000c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    c5cc:	55                   	push   %rbp
    c5cd:	48 89 e5             	mov    %rsp,%rbp
    c5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    c5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e0:	48 8b 00             	mov    (%rax),%rax
    c5e3:	48 29 c2             	sub    %rax,%rdx
    c5e6:	48 89 d0             	mov    %rdx,%rax
    c5e9:	48 c1 f8 03          	sar    $0x3,%rax
    c5ed:	5d                   	pop    %rbp
    c5ee:	c3                   	ret
    c5ef:	90                   	nop

000000000000c5f0 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c5f0:	55                   	push   %rbp
    c5f1:	48 89 e5             	mov    %rsp,%rbp
    c5f4:	48 83 ec 10          	sub    $0x10,%rsp
    c5f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c5fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c600:	48 8b 10             	mov    (%rax),%rdx
    c603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c607:	48 89 d6             	mov    %rdx,%rsi
    c60a:	48 89 c7             	mov    %rax,%rdi
    c60d:	e8 de 20 00 00       	call   e6f0 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c612:	c9                   	leave
    c613:	c3                   	ret

000000000000c614 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    c614:	55                   	push   %rbp
    c615:	48 89 e5             	mov    %rsp,%rbp
    c618:	48 83 ec 10          	sub    $0x10,%rsp
    c61c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c624:	48 8b 10             	mov    (%rax),%rdx
    c627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c62b:	48 89 d6             	mov    %rdx,%rsi
    c62e:	48 89 c7             	mov    %rax,%rdi
    c631:	e8 ba 20 00 00       	call   e6f0 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c636:	c9                   	leave
    c637:	c3                   	ret

000000000000c638 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c638:	55                   	push   %rbp
    c639:	48 89 e5             	mov    %rsp,%rbp
    c63c:	48 83 ec 20          	sub    $0x20,%rsp
    c640:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c644:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c648:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c64c:	48 89 d6             	mov    %rdx,%rsi
    c64f:	48 89 c7             	mov    %rax,%rdi
    c652:	e8 ab 20 00 00       	call   e702 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c65b:	c9                   	leave
    c65c:	c3                   	ret
    c65d:	90                   	nop

000000000000c65e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c65e:	55                   	push   %rbp
    c65f:	48 89 e5             	mov    %rsp,%rbp
    c662:	48 83 ec 20          	sub    $0x20,%rsp
    c666:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c66a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c66e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c672:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c676:	48 89 d6             	mov    %rdx,%rsi
    c679:	48 89 c7             	mov    %rax,%rdi
    c67c:	e8 81 20 00 00       	call   e702 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c685:	c9                   	leave
    c686:	c3                   	ret

000000000000c687 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c687:	55                   	push   %rbp
    c688:	48 89 e5             	mov    %rsp,%rbp
    c68b:	53                   	push   %rbx
    c68c:	48 83 ec 18          	sub    $0x18,%rsp
    c690:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c694:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c698:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c69c:	48 89 c7             	mov    %rax,%rdi
    c69f:	e8 7c 20 00 00       	call   e720 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c6a4:	48 8b 18             	mov    (%rax),%rbx
    c6a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c6ab:	48 89 c7             	mov    %rax,%rdi
    c6ae:	e8 6d 20 00 00       	call   e720 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c6b3:	48 8b 00             	mov    (%rax),%rax
    c6b6:	48 39 c3             	cmp    %rax,%rbx
    c6b9:	0f 95 c0             	setne  %al
    c6bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6c0:	c9                   	leave
    c6c1:	c3                   	ret

000000000000c6c2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c6c2:	55                   	push   %rbp
    c6c3:	48 89 e5             	mov    %rsp,%rbp
    c6c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c6ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ce:	48 8b 00             	mov    (%rax),%rax
    c6d1:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    c6d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6dc:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c6df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c6e3:	5d                   	pop    %rbp
    c6e4:	c3                   	ret
    c6e5:	90                   	nop

000000000000c6e6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c6e6:	55                   	push   %rbp
    c6e7:	48 89 e5             	mov    %rsp,%rbp
    c6ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c6ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f2:	48 8b 00             	mov    (%rax),%rax
    c6f5:	5d                   	pop    %rbp
    c6f6:	c3                   	ret
    c6f7:	90                   	nop

000000000000c6f8 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c6f8:	55                   	push   %rbp
    c6f9:	48 89 e5             	mov    %rsp,%rbp
    c6fc:	48 83 ec 20          	sub    $0x20,%rsp
    c700:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c704:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c708:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c70c:	48 89 d6             	mov    %rdx,%rsi
    c70f:	48 89 c7             	mov    %rax,%rdi
    c712:	e8 17 20 00 00       	call   e72e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    c717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71b:	c9                   	leave
    c71c:	c3                   	ret
    c71d:	90                   	nop

000000000000c71e <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c71e:	55                   	push   %rbp
    c71f:	48 89 e5             	mov    %rsp,%rbp
    c722:	48 83 ec 20          	sub    $0x20,%rsp
    c726:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c72a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c72e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c732:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c736:	48 89 d6             	mov    %rdx,%rsi
    c739:	48 89 c7             	mov    %rax,%rdi
    c73c:	e8 ed 1f 00 00       	call   e72e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    c741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c745:	c9                   	leave
    c746:	c3                   	ret

000000000000c747 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c747:	55                   	push   %rbp
    c748:	48 89 e5             	mov    %rsp,%rbp
    c74b:	53                   	push   %rbx
    c74c:	48 83 ec 18          	sub    $0x18,%rsp
    c750:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c754:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c75c:	48 89 c7             	mov    %rax,%rdi
    c75f:	e8 e8 1f 00 00       	call   e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c764:	48 8b 18             	mov    (%rax),%rbx
    c767:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c76b:	48 89 c7             	mov    %rax,%rdi
    c76e:	e8 d9 1f 00 00       	call   e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c773:	48 8b 00             	mov    (%rax),%rax
    c776:	48 39 c3             	cmp    %rax,%rbx
    c779:	0f 95 c0             	setne  %al
    c77c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c780:	c9                   	leave
    c781:	c3                   	ret

000000000000c782 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c782:	55                   	push   %rbp
    c783:	48 89 e5             	mov    %rsp,%rbp
    c786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c78a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c78e:	48 8b 00             	mov    (%rax),%rax
    c791:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c799:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c79c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c7a0:	5d                   	pop    %rbp
    c7a1:	c3                   	ret

000000000000c7a2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c7a2:	55                   	push   %rbp
    c7a3:	48 89 e5             	mov    %rsp,%rbp
    c7a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c7aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ae:	48 8b 00             	mov    (%rax),%rax
    c7b1:	5d                   	pop    %rbp
    c7b2:	c3                   	ret
    c7b3:	90                   	nop

000000000000c7b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    c7b4:	55                   	push   %rbp
    c7b5:	48 89 e5             	mov    %rsp,%rbp
    c7b8:	48 83 ec 10          	sub    $0x10,%rsp
    c7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c4:	48 89 c7             	mov    %rax,%rdi
    c7c7:	e8 c6 1f 00 00       	call   e792 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    c7cc:	90                   	nop
    c7cd:	c9                   	leave
    c7ce:	c3                   	ret
    c7cf:	90                   	nop

000000000000c7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    c7d0:	55                   	push   %rbp
    c7d1:	48 89 e5             	mov    %rsp,%rbp
    c7d4:	48 83 ec 10          	sub    $0x10,%rsp
    c7d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e0:	48 89 c7             	mov    %rax,%rdi
    c7e3:	e8 72 1f 00 00       	call   e75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>
    c7e8:	90                   	nop
    c7e9:	c9                   	leave
    c7ea:	c3                   	ret
    c7eb:	90                   	nop

000000000000c7ec <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>:
	set(_InputIterator __first, _InputIterator __last)
    c7ec:	55                   	push   %rbp
    c7ed:	48 89 e5             	mov    %rsp,%rbp
    c7f0:	53                   	push   %rbx
    c7f1:	48 83 ec 28          	sub    $0x28,%rsp
    c7f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c7f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c7fd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _M_t()
    c801:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c805:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c809:	0f 11 00             	movups %xmm0,(%rax)
    c80c:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c810:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    c814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c818:	48 89 c7             	mov    %rax,%rdi
    c81b:	e8 b0 ff ff ff       	call   c7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>
	{ _M_t._M_insert_range_unique(__first, __last); }
    c820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c824:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c828:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c82c:	48 89 ce             	mov    %rcx,%rsi
    c82f:	48 89 c7             	mov    %rax,%rdi
    c832:	e8 77 1f 00 00       	call   e7ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>
    c837:	eb 1a                	jmp    c853 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_+0x67>
    c839:	48 89 c3             	mov    %rax,%rbx
    c83c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c840:	48 89 c7             	mov    %rax,%rdi
    c843:	e8 12 00 00 00       	call   c85a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    c848:	48 89 d8             	mov    %rbx,%rax
    c84b:	48 89 c7             	mov    %rax,%rdi
    c84e:	e8 ed 7f ff ff       	call   4840 <_Unwind_Resume@plt>
    c853:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c857:	c9                   	leave
    c858:	c3                   	ret
    c859:	90                   	nop

000000000000c85a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    c85a:	55                   	push   %rbp
    c85b:	48 89 e5             	mov    %rsp,%rbp
    c85e:	48 83 ec 10          	sub    $0x10,%rsp
    c862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    c866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c86a:	48 89 c7             	mov    %rax,%rdi
    c86d:	e8 fe 1f 00 00       	call   e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    c872:	48 89 c2             	mov    %rax,%rdx
    c875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c879:	48 89 d6             	mov    %rdx,%rsi
    c87c:	48 89 c7             	mov    %rax,%rdi
    c87f:	e8 86 1f 00 00       	call   e80a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
    c884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c888:	48 89 c7             	mov    %rax,%rdi
    c88b:	e8 24 ff ff ff       	call   c7b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>
    c890:	90                   	nop
    c891:	c9                   	leave
    c892:	c3                   	ret
    c893:	90                   	nop

000000000000c894 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
    c894:	55                   	push   %rbp
    c895:	48 89 e5             	mov    %rsp,%rbp
    c898:	48 83 ec 10          	sub    $0x10,%rsp
    c89c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.erase(__x); }
    c8a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c8ac:	48 89 d6             	mov    %rdx,%rsi
    c8af:	48 89 c7             	mov    %rax,%rdi
    c8b2:	e8 d3 1f 00 00       	call   e88a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    c8b7:	c9                   	leave
    c8b8:	c3                   	ret
    c8b9:	90                   	nop

000000000000c8ba <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    c8ba:	55                   	push   %rbp
    c8bb:	48 89 e5             	mov    %rsp,%rbp
    c8be:	48 83 ec 10          	sub    $0x10,%rsp
    c8c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.empty(); }
    c8c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8ca:	48 89 c7             	mov    %rax,%rdi
    c8cd:	e8 4c 20 00 00       	call   e91e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>
    c8d2:	c9                   	leave
    c8d3:	c3                   	ret

000000000000c8d4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    c8d4:	55                   	push   %rbp
    c8d5:	48 89 e5             	mov    %rsp,%rbp
    c8d8:	48 83 ec 10          	sub    $0x10,%rsp
    c8dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    c8e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8e4:	48 89 c7             	mov    %rax,%rdi
    c8e7:	e8 4a 20 00 00       	call   e936 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    c8ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f0:	48 89 c7             	mov    %rax,%rdi
    c8f3:	e8 5a 20 00 00       	call   e952 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    c8f8:	90                   	nop
    c8f9:	c9                   	leave
    c8fa:	c3                   	ret
    c8fb:	90                   	nop

000000000000c8fc <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
    c8fc:	55                   	push   %rbp
    c8fd:	48 89 e5             	mov    %rsp,%rbp
    c900:	48 83 ec 10          	sub    $0x10,%rsp
    c904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c90c:	48 89 c7             	mov    %rax,%rdi
    c90f:	e8 6c 20 00 00       	call   e980 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    c914:	90                   	nop
    c915:	c9                   	leave
    c916:	c3                   	ret
    c917:	90                   	nop

000000000000c918 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c918:	55                   	push   %rbp
    c919:	48 89 e5             	mov    %rsp,%rbp
    c91c:	48 83 ec 10          	sub    $0x10,%rsp
    c920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c928:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c92c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c930:	48 8b 00             	mov    (%rax),%rax
    c933:	48 29 c2             	sub    %rax,%rdx
    c936:	48 89 d0             	mov    %rdx,%rax
    c939:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c93d:	48 89 c2             	mov    %rax,%rdx
    c940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c944:	48 8b 08             	mov    (%rax),%rcx
    c947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c94b:	48 89 ce             	mov    %rcx,%rsi
    c94e:	48 89 c7             	mov    %rax,%rdi
    c951:	e8 36 20 00 00       	call   e98c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    c956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95a:	48 89 c7             	mov    %rax,%rdi
    c95d:	e8 7c f4 ff ff       	call   bdde <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    c962:	90                   	nop
    c963:	c9                   	leave
    c964:	c3                   	ret
    c965:	90                   	nop

000000000000c966 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c966:	55                   	push   %rbp
    c967:	48 89 e5             	mov    %rsp,%rbp
    c96a:	48 83 ec 10          	sub    $0x10,%rsp
    c96e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c976:	48 89 c7             	mov    %rax,%rdi
    c979:	e8 44 20 00 00       	call   e9c2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    c97e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c985:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c98d:	48 8b 00             	mov    (%rax),%rax
    c990:	48 89 ce             	mov    %rcx,%rsi
    c993:	48 89 c7             	mov    %rax,%rdi
    c996:	e8 35 20 00 00       	call   e9d0 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    c99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99f:	48 89 c7             	mov    %rax,%rdi
    c9a2:	e8 71 ff ff ff       	call   c918 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    c9a7:	90                   	nop
    c9a8:	c9                   	leave
    c9a9:	c3                   	ret

000000000000c9aa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    c9aa:	55                   	push   %rbp
    c9ab:	48 89 e5             	mov    %rsp,%rbp
    c9ae:	48 83 ec 10          	sub    $0x10,%rsp
    c9b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    c9b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ba:	48 89 c7             	mov    %rax,%rdi
    c9bd:	e8 38 20 00 00       	call   e9fa <_ZNSaI16VkPresentModeKHREC1Ev>
    c9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c6:	48 89 c7             	mov    %rax,%rdi
    c9c9:	e8 48 20 00 00       	call   ea16 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    c9ce:	90                   	nop
    c9cf:	c9                   	leave
    c9d0:	c3                   	ret
    c9d1:	90                   	nop

000000000000c9d2 <_ZNSaI16VkPresentModeKHRED1Ev>:
    c9d2:	55                   	push   %rbp
    c9d3:	48 89 e5             	mov    %rsp,%rbp
    c9d6:	48 83 ec 10          	sub    $0x10,%rsp
    c9da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9e2:	48 89 c7             	mov    %rax,%rdi
    c9e5:	e8 5a 20 00 00       	call   ea44 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    c9ea:	90                   	nop
    c9eb:	c9                   	leave
    c9ec:	c3                   	ret
    c9ed:	90                   	nop

000000000000c9ee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c9ee:	55                   	push   %rbp
    c9ef:	48 89 e5             	mov    %rsp,%rbp
    c9f2:	48 83 ec 10          	sub    $0x10,%rsp
    c9f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c9fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9fe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ca02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca06:	48 8b 00             	mov    (%rax),%rax
    ca09:	48 29 c2             	sub    %rax,%rdx
    ca0c:	48 89 d0             	mov    %rdx,%rax
    ca0f:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    ca13:	48 89 c2             	mov    %rax,%rdx
    ca16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca1a:	48 8b 08             	mov    (%rax),%rcx
    ca1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca21:	48 89 ce             	mov    %rcx,%rsi
    ca24:	48 89 c7             	mov    %rax,%rdi
    ca27:	e8 24 20 00 00       	call   ea50 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    ca2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca30:	48 89 c7             	mov    %rax,%rdi
    ca33:	e8 fa f3 ff ff       	call   be32 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    ca38:	90                   	nop
    ca39:	c9                   	leave
    ca3a:	c3                   	ret
    ca3b:	90                   	nop

000000000000ca3c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    ca3c:	55                   	push   %rbp
    ca3d:	48 89 e5             	mov    %rsp,%rbp
    ca40:	48 83 ec 10          	sub    $0x10,%rsp
    ca44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    ca48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca4c:	48 89 c7             	mov    %rax,%rdi
    ca4f:	e8 32 20 00 00       	call   ea86 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    ca54:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    ca57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca5b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ca5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca63:	48 8b 00             	mov    (%rax),%rax
    ca66:	48 89 ce             	mov    %rcx,%rsi
    ca69:	48 89 c7             	mov    %rax,%rdi
    ca6c:	e8 23 20 00 00       	call   ea94 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    ca71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca75:	48 89 c7             	mov    %rax,%rdi
    ca78:	e8 71 ff ff ff       	call   c9ee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    ca7d:	90                   	nop
    ca7e:	c9                   	leave
    ca7f:	c3                   	ret

000000000000ca80 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    ca80:	55                   	push   %rbp
    ca81:	48 89 e5             	mov    %rsp,%rbp
    ca84:	48 83 ec 10          	sub    $0x10,%rsp
    ca88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    ca90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca94:	48 89 c7             	mov    %rax,%rdi
    ca97:	e8 22 20 00 00       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    ca9c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    caa0:	0f 92 c0             	setb   %al
    caa3:	84 c0                	test   %al,%al
    caa5:	74 24                	je     cacb <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    caa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caab:	48 89 c7             	mov    %rax,%rdi
    caae:	e8 0b 20 00 00       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    cab3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cab7:	48 29 c2             	sub    %rax,%rdx
    caba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cabe:	48 89 d6             	mov    %rdx,%rsi
    cac1:	48 89 c7             	mov    %rax,%rdi
    cac4:	e8 19 20 00 00       	call   eae2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>
      }
    cac9:	eb 38                	jmp    cb03 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    cacb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cacf:	48 89 c7             	mov    %rax,%rdi
    cad2:	e8 e7 1f 00 00       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    cad7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    cadb:	0f 92 c0             	setb   %al
    cade:	84 c0                	test   %al,%al
    cae0:	74 21                	je     cb03 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    cae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cae6:	48 8b 00             	mov    (%rax),%rax
    cae9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    caed:	48 c1 e2 03          	shl    $0x3,%rdx
    caf1:	48 01 c2             	add    %rax,%rdx
    caf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caf8:	48 89 d6             	mov    %rdx,%rsi
    cafb:	48 89 c7             	mov    %rax,%rdi
    cafe:	e8 e9 21 00 00       	call   ecec <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    cb03:	90                   	nop
    cb04:	c9                   	leave
    cb05:	c3                   	ret

000000000000cb06 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    cb06:	55                   	push   %rbp
    cb07:	48 89 e5             	mov    %rsp,%rbp
    cb0a:	48 83 ec 10          	sub    $0x10,%rsp
    cb0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    cb12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb16:	48 8b 10             	mov    (%rax),%rdx
    cb19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb1d:	48 89 d6             	mov    %rdx,%rsi
    cb20:	48 89 c7             	mov    %rax,%rdi
    cb23:	e8 24 22 00 00       	call   ed4c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    cb28:	c9                   	leave
    cb29:	c3                   	ret

000000000000cb2a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    cb2a:	55                   	push   %rbp
    cb2b:	48 89 e5             	mov    %rsp,%rbp
    cb2e:	48 83 ec 10          	sub    $0x10,%rsp
    cb32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    cb3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb3e:	48 89 c7             	mov    %rax,%rdi
    cb41:	e8 18 22 00 00       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    cb46:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    cb4a:	0f 92 c0             	setb   %al
    cb4d:	84 c0                	test   %al,%al
    cb4f:	74 24                	je     cb75 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    cb51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb55:	48 89 c7             	mov    %rax,%rdi
    cb58:	e8 01 22 00 00       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    cb5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb61:	48 29 c2             	sub    %rax,%rdx
    cb64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb68:	48 89 d6             	mov    %rdx,%rsi
    cb6b:	48 89 c7             	mov    %rax,%rdi
    cb6e:	e8 0f 22 00 00       	call   ed82 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>
      }
    cb73:	eb 38                	jmp    cbad <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    cb75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb79:	48 89 c7             	mov    %rax,%rdi
    cb7c:	e8 dd 21 00 00       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    cb81:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    cb85:	0f 92 c0             	setb   %al
    cb88:	84 c0                	test   %al,%al
    cb8a:	74 21                	je     cbad <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    cb8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb90:	48 8b 00             	mov    (%rax),%rax
    cb93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb97:	48 c1 e2 02          	shl    $0x2,%rdx
    cb9b:	48 01 c2             	add    %rax,%rdx
    cb9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cba2:	48 89 d6             	mov    %rdx,%rsi
    cba5:	48 89 c7             	mov    %rax,%rdi
    cba8:	e8 df 23 00 00       	call   ef8c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    cbad:	90                   	nop
    cbae:	c9                   	leave
    cbaf:	c3                   	ret

000000000000cbb0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    cbb0:	55                   	push   %rbp
    cbb1:	48 89 e5             	mov    %rsp,%rbp
    cbb4:	48 83 ec 10          	sub    $0x10,%rsp
    cbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    cbbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc0:	48 8b 10             	mov    (%rax),%rdx
    cbc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc7:	48 89 d6             	mov    %rdx,%rsi
    cbca:	48 89 c7             	mov    %rax,%rdi
    cbcd:	e8 1a 24 00 00       	call   efec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    cbd2:	c9                   	leave
    cbd3:	c3                   	ret

000000000000cbd4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    cbd4:	55                   	push   %rbp
    cbd5:	48 89 e5             	mov    %rsp,%rbp
    cbd8:	48 83 ec 20          	sub    $0x20,%rsp
    cbdc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    cbe0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbe4:	48 89 c7             	mov    %rax,%rdi
    cbe7:	e8 ae 08 00 00       	call   d49a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    cbec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cbf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbf4:	48 89 c7             	mov    %rax,%rdi
    cbf7:	e8 78 08 00 00       	call   d474 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    cbfc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cc00:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    cc04:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc08:	48 89 d6             	mov    %rdx,%rsi
    cc0b:	48 89 c7             	mov    %rax,%rdi
    cc0e:	e8 eb 23 00 00       	call   effe <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cc13:	c9                   	leave
    cc14:	c3                   	ret
    cc15:	90                   	nop

000000000000cc16 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    cc16:	55                   	push   %rbp
    cc17:	48 89 e5             	mov    %rsp,%rbp
    cc1a:	48 83 ec 20          	sub    $0x20,%rsp
    cc1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    cc22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc26:	48 89 c7             	mov    %rax,%rdi
    cc29:	e8 48 09 00 00       	call   d576 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    cc2e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    cc32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc36:	48 89 c7             	mov    %rax,%rdi
    cc39:	e8 12 09 00 00       	call   d550 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    cc3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cc42:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    cc46:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc4a:	48 89 d6             	mov    %rdx,%rsi
    cc4d:	48 89 c7             	mov    %rax,%rdi
    cc50:	e8 e4 23 00 00       	call   f039 <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cc55:	c9                   	leave
    cc56:	c3                   	ret
    cc57:	90                   	nop

000000000000cc58 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    cc58:	55                   	push   %rbp
    cc59:	48 89 e5             	mov    %rsp,%rbp
    cc5c:	48 83 ec 10          	sub    $0x10,%rsp
    cc60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc68:	48 89 c7             	mov    %rax,%rdi
    cc6b:	e8 04 24 00 00       	call   f074 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    cc70:	90                   	nop
    cc71:	c9                   	leave
    cc72:	c3                   	ret
    cc73:	90                   	nop

000000000000cc74 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    cc74:	55                   	push   %rbp
    cc75:	48 89 e5             	mov    %rsp,%rbp
    cc78:	48 83 ec 10          	sub    $0x10,%rsp
    cc7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc84:	48 89 c7             	mov    %rax,%rdi
    cc87:	e8 f4 23 00 00       	call   f080 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    cc8c:	90                   	nop
    cc8d:	c9                   	leave
    cc8e:	c3                   	ret
    cc8f:	90                   	nop

000000000000cc90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    cc90:	55                   	push   %rbp
    cc91:	48 89 e5             	mov    %rsp,%rbp
    cc94:	53                   	push   %rbx
    cc95:	48 83 ec 28          	sub    $0x28,%rsp
    cc99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cca1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    cca5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    cca9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ccad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ccb1:	48 89 d6             	mov    %rdx,%rsi
    ccb4:	48 89 c7             	mov    %rax,%rdi
    ccb7:	e8 cf 23 00 00       	call   f08b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    ccbc:	48 89 c1             	mov    %rax,%rcx
    ccbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ccc3:	48 89 c2             	mov    %rax,%rdx
    ccc6:	48 89 ce             	mov    %rcx,%rsi
    ccc9:	48 89 df             	mov    %rbx,%rdi
    cccc:	e8 37 24 00 00       	call   f108 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    ccd1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ccd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccd9:	48 89 d6             	mov    %rdx,%rsi
    ccdc:	48 89 c7             	mov    %rax,%rdi
    ccdf:	e8 d0 24 00 00       	call   f1b4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    cce4:	eb 1a                	jmp    cd00 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    cce6:	48 89 c3             	mov    %rax,%rbx
    cce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cced:	48 89 c7             	mov    %rax,%rdi
    ccf0:	e8 71 24 00 00       	call   f166 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ccf5:	48 89 d8             	mov    %rbx,%rax
    ccf8:	48 89 c7             	mov    %rax,%rdi
    ccfb:	e8 40 7b ff ff       	call   4840 <_Unwind_Resume@plt>
    cd00:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cd04:	c9                   	leave
    cd05:	c3                   	ret

000000000000cd06 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    cd06:	55                   	push   %rbp
    cd07:	48 89 e5             	mov    %rsp,%rbp
    cd0a:	48 83 ec 10          	sub    $0x10,%rsp
    cd0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    cd12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd16:	48 89 c7             	mov    %rax,%rdi
    cd19:	e8 d6 24 00 00       	call   f1f4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    cd1e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    cd21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd25:	48 8b 48 08          	mov    0x8(%rax),%rcx
    cd29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd2d:	48 8b 00             	mov    (%rax),%rax
    cd30:	48 89 ce             	mov    %rcx,%rsi
    cd33:	48 89 c7             	mov    %rax,%rdi
    cd36:	e8 c7 24 00 00       	call   f202 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    cd3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd3f:	48 89 c7             	mov    %rax,%rdi
    cd42:	e8 1f 24 00 00       	call   f166 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    cd47:	90                   	nop
    cd48:	c9                   	leave
    cd49:	c3                   	ret

000000000000cd4a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    cd4a:	55                   	push   %rbp
    cd4b:	48 89 e5             	mov    %rsp,%rbp
    cd4e:	48 83 ec 10          	sub    $0x10,%rsp
    cd52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    cd56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd5a:	48 8b 10             	mov    (%rax),%rdx
    cd5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd61:	48 89 d6             	mov    %rdx,%rsi
    cd64:	48 89 c7             	mov    %rax,%rdi
    cd67:	e8 c0 24 00 00       	call   f22c <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    cd6c:	c9                   	leave
    cd6d:	c3                   	ret

000000000000cd6e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    cd6e:	55                   	push   %rbp
    cd6f:	48 89 e5             	mov    %rsp,%rbp
    cd72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    cd76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cd7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd82:	48 8b 00             	mov    (%rax),%rax
    cd85:	48 29 c2             	sub    %rax,%rdx
    cd88:	48 89 d0             	mov    %rdx,%rax
    cd8b:	48 c1 f8 03          	sar    $0x3,%rax
    cd8f:	5d                   	pop    %rbp
    cd90:	c3                   	ret
    cd91:	90                   	nop

000000000000cd92 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    cd92:	55                   	push   %rbp
    cd93:	48 89 e5             	mov    %rsp,%rbp
    cd96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    cd9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cda2:	48 8b 00             	mov    (%rax),%rax
    cda5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cda9:	48 c1 e2 03          	shl    $0x3,%rdx
    cdad:	48 01 d0             	add    %rdx,%rax
      }
    cdb0:	5d                   	pop    %rbp
    cdb1:	c3                   	ret

000000000000cdb2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cdb2:	55                   	push   %rbp
    cdb3:	48 89 e5             	mov    %rsp,%rbp
    cdb6:	48 83 ec 20          	sub    $0x20,%rsp
    cdba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cdbe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdc2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cdc6:	48 89 d6             	mov    %rdx,%rsi
    cdc9:	48 89 c7             	mov    %rax,%rdi
    cdcc:	e8 6d 24 00 00       	call   f23e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    cdd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdd5:	c9                   	leave
    cdd6:	c3                   	ret
    cdd7:	90                   	nop

000000000000cdd8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cdd8:	55                   	push   %rbp
    cdd9:	48 89 e5             	mov    %rsp,%rbp
    cddc:	48 83 ec 20          	sub    $0x20,%rsp
    cde0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cde4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cde8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cdec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cdf0:	48 89 d6             	mov    %rdx,%rsi
    cdf3:	48 89 c7             	mov    %rax,%rdi
    cdf6:	e8 43 24 00 00       	call   f23e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    cdfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdff:	c9                   	leave
    ce00:	c3                   	ret

000000000000ce01 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ce01:	55                   	push   %rbp
    ce02:	48 89 e5             	mov    %rsp,%rbp
    ce05:	53                   	push   %rbx
    ce06:	48 83 ec 18          	sub    $0x18,%rsp
    ce0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ce0e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    ce12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce16:	48 89 c7             	mov    %rax,%rdi
    ce19:	e8 3e 24 00 00       	call   f25c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    ce1e:	48 8b 18             	mov    (%rax),%rbx
    ce21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ce25:	48 89 c7             	mov    %rax,%rdi
    ce28:	e8 2f 24 00 00       	call   f25c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    ce2d:	48 8b 00             	mov    (%rax),%rax
    ce30:	48 39 c3             	cmp    %rax,%rbx
    ce33:	0f 95 c0             	setne  %al
    ce36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ce3a:	c9                   	leave
    ce3b:	c3                   	ret

000000000000ce3c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    ce3c:	55                   	push   %rbp
    ce3d:	48 89 e5             	mov    %rsp,%rbp
    ce40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    ce44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce48:	48 8b 00             	mov    (%rax),%rax
    ce4b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ce4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce53:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    ce56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ce5a:	5d                   	pop    %rbp
    ce5b:	c3                   	ret

000000000000ce5c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ce5c:	55                   	push   %rbp
    ce5d:	48 89 e5             	mov    %rsp,%rbp
    ce60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    ce64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce68:	48 8b 00             	mov    (%rax),%rax
    ce6b:	5d                   	pop    %rbp
    ce6c:	c3                   	ret
    ce6d:	90                   	nop

000000000000ce6e <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ce6e:	55                   	push   %rbp
    ce6f:	48 89 e5             	mov    %rsp,%rbp
    ce72:	48 83 ec 10          	sub    $0x10,%rsp
    ce76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce7e:	48 89 c7             	mov    %rax,%rdi
    ce81:	e8 e4 23 00 00       	call   f26a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    ce86:	90                   	nop
    ce87:	c9                   	leave
    ce88:	c3                   	ret
    ce89:	90                   	nop

000000000000ce8a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    ce8a:	55                   	push   %rbp
    ce8b:	48 89 e5             	mov    %rsp,%rbp
    ce8e:	48 83 ec 10          	sub    $0x10,%rsp
    ce92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce9a:	48 89 c7             	mov    %rax,%rdi
    ce9d:	e8 d4 23 00 00       	call   f276 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    cea2:	90                   	nop
    cea3:	c9                   	leave
    cea4:	c3                   	ret
    cea5:	90                   	nop

000000000000cea6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    cea6:	55                   	push   %rbp
    cea7:	48 89 e5             	mov    %rsp,%rbp
    ceaa:	53                   	push   %rbx
    ceab:	48 83 ec 28          	sub    $0x28,%rsp
    ceaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ceb3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ceb7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    cebb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    cebf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cec3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cec7:	48 89 d6             	mov    %rdx,%rsi
    ceca:	48 89 c7             	mov    %rax,%rdi
    cecd:	e8 af 23 00 00       	call   f281 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    ced2:	48 89 c1             	mov    %rax,%rcx
    ced5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ced9:	48 89 c2             	mov    %rax,%rdx
    cedc:	48 89 ce             	mov    %rcx,%rsi
    cedf:	48 89 df             	mov    %rbx,%rdi
    cee2:	e8 17 24 00 00       	call   f2fe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    cee7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ceeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceef:	48 89 d6             	mov    %rdx,%rsi
    cef2:	48 89 c7             	mov    %rax,%rdi
    cef5:	e8 ba 24 00 00       	call   f3b4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    cefa:	eb 1a                	jmp    cf16 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    cefc:	48 89 c3             	mov    %rax,%rbx
    ceff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf03:	48 89 c7             	mov    %rax,%rdi
    cf06:	e8 51 24 00 00       	call   f35c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    cf0b:	48 89 d8             	mov    %rbx,%rax
    cf0e:	48 89 c7             	mov    %rax,%rdi
    cf11:	e8 2a 79 ff ff       	call   4840 <_Unwind_Resume@plt>
    cf16:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cf1a:	c9                   	leave
    cf1b:	c3                   	ret

000000000000cf1c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    cf1c:	55                   	push   %rbp
    cf1d:	48 89 e5             	mov    %rsp,%rbp
    cf20:	48 83 ec 10          	sub    $0x10,%rsp
    cf24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    cf28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf2c:	48 89 c7             	mov    %rax,%rdi
    cf2f:	e8 c0 24 00 00       	call   f3f4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    cf34:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    cf37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf3b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    cf3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf43:	48 8b 00             	mov    (%rax),%rax
    cf46:	48 89 ce             	mov    %rcx,%rsi
    cf49:	48 89 c7             	mov    %rax,%rdi
    cf4c:	e8 b1 24 00 00       	call   f402 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    cf51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf55:	48 89 c7             	mov    %rax,%rdi
    cf58:	e8 ff 23 00 00       	call   f35c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    cf5d:	90                   	nop
    cf5e:	c9                   	leave
    cf5f:	c3                   	ret

000000000000cf60 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    cf60:	55                   	push   %rbp
    cf61:	48 89 e5             	mov    %rsp,%rbp
    cf64:	48 83 ec 10          	sub    $0x10,%rsp
    cf68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    cf6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf70:	48 8b 10             	mov    (%rax),%rdx
    cf73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf77:	48 89 d6             	mov    %rdx,%rsi
    cf7a:	48 89 c7             	mov    %rax,%rdi
    cf7d:	e8 aa 24 00 00       	call   f42c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    cf82:	c9                   	leave
    cf83:	c3                   	ret

000000000000cf84 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cf84:	55                   	push   %rbp
    cf85:	48 89 e5             	mov    %rsp,%rbp
    cf88:	48 83 ec 20          	sub    $0x20,%rsp
    cf8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cf90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf94:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cf98:	48 89 d6             	mov    %rdx,%rsi
    cf9b:	48 89 c7             	mov    %rax,%rdi
    cf9e:	e8 9b 24 00 00       	call   f43e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cfa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfa7:	c9                   	leave
    cfa8:	c3                   	ret
    cfa9:	90                   	nop

000000000000cfaa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cfaa:	55                   	push   %rbp
    cfab:	48 89 e5             	mov    %rsp,%rbp
    cfae:	48 83 ec 20          	sub    $0x20,%rsp
    cfb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cfb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfba:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cfbe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cfc2:	48 89 d6             	mov    %rdx,%rsi
    cfc5:	48 89 c7             	mov    %rax,%rdi
    cfc8:	e8 71 24 00 00       	call   f43e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cfcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfd1:	c9                   	leave
    cfd2:	c3                   	ret

000000000000cfd3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cfd3:	55                   	push   %rbp
    cfd4:	48 89 e5             	mov    %rsp,%rbp
    cfd7:	53                   	push   %rbx
    cfd8:	48 83 ec 18          	sub    $0x18,%rsp
    cfdc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cfe0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cfe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfe8:	48 89 c7             	mov    %rax,%rdi
    cfeb:	e8 6c 24 00 00       	call   f45c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cff0:	48 8b 18             	mov    (%rax),%rbx
    cff3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cff7:	48 89 c7             	mov    %rax,%rdi
    cffa:	e8 5d 24 00 00       	call   f45c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cfff:	48 8b 00             	mov    (%rax),%rax
    d002:	48 39 c3             	cmp    %rax,%rbx
    d005:	0f 95 c0             	setne  %al
    d008:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d00c:	c9                   	leave
    d00d:	c3                   	ret

000000000000d00e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d00e:	55                   	push   %rbp
    d00f:	48 89 e5             	mov    %rsp,%rbp
    d012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d01a:	48 8b 00             	mov    (%rax),%rax
    d01d:	48 8d 50 18          	lea    0x18(%rax),%rdx
    d021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d025:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    d028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d02c:	5d                   	pop    %rbp
    d02d:	c3                   	ret

000000000000d02e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d02e:	55                   	push   %rbp
    d02f:	48 89 e5             	mov    %rsp,%rbp
    d032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    d036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d03a:	48 8b 00             	mov    (%rax),%rax
    d03d:	5d                   	pop    %rbp
    d03e:	c3                   	ret
    d03f:	90                   	nop

000000000000d040 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>:
	operator=(_Up&& __u)
    d040:	55                   	push   %rbp
    d041:	48 89 e5             	mov    %rsp,%rbp
    d044:	53                   	push   %rbx
    d045:	48 83 ec 18          	sub    $0x18,%rsp
    d049:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d04d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (this->_M_is_engaged())
    d051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d055:	48 89 c7             	mov    %rax,%rdi
    d058:	e8 0f ef ff ff       	call   bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    d05d:	84 c0                	test   %al,%al
    d05f:	74 20                	je     d081 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x41>
	    this->_M_get() = std::forward<_Up>(__u);
    d061:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d065:	48 89 c7             	mov    %rax,%rdi
    d068:	e8 fd 23 00 00       	call   f46a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    d06d:	8b 00                	mov    (%rax),%eax
    d06f:	89 c3                	mov    %eax,%ebx
    d071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d075:	48 89 c7             	mov    %rax,%rdi
    d078:	e8 0d 01 00 00       	call   d18a <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    d07d:	89 18                	mov    %ebx,(%rax)
    d07f:	eb 1e                	jmp    d09f <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x5f>
	    this->_M_construct(std::forward<_Up>(__u));
    d081:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d085:	48 89 c7             	mov    %rax,%rdi
    d088:	e8 dd 23 00 00       	call   f46a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    d08d:	48 89 c2             	mov    %rax,%rdx
    d090:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d094:	48 89 d6             	mov    %rdx,%rsi
    d097:	48 89 c7             	mov    %rax,%rdi
    d09a:	e8 d9 23 00 00       	call   f478 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>
	  return *this;
    d09f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    d0a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d0a7:	c9                   	leave
    d0a8:	c3                   	ret
    d0a9:	90                   	nop

000000000000d0aa <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    d0aa:	55                   	push   %rbp
    d0ab:	48 89 e5             	mov    %rsp,%rbp
    d0ae:	48 83 ec 10          	sub    $0x10,%rsp
    d0b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    d0b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0ba:	48 89 c7             	mov    %rax,%rdi
    d0bd:	e8 ea 23 00 00       	call   f4ac <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>
    d0c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0c6:	48 89 c7             	mov    %rax,%rdi
    d0c9:	e8 fa 23 00 00       	call   f4c8 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d0ce:	90                   	nop
    d0cf:	c9                   	leave
    d0d0:	c3                   	ret
    d0d1:	90                   	nop

000000000000d0d2 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>:
    d0d2:	55                   	push   %rbp
    d0d3:	48 89 e5             	mov    %rsp,%rbp
    d0d6:	48 83 ec 10          	sub    $0x10,%rsp
    d0da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e2:	48 89 c7             	mov    %rax,%rdi
    d0e5:	e8 0c 24 00 00       	call   f4f6 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>
    d0ea:	90                   	nop
    d0eb:	c9                   	leave
    d0ec:	c3                   	ret
    d0ed:	90                   	nop

000000000000d0ee <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    d0ee:	55                   	push   %rbp
    d0ef:	48 89 e5             	mov    %rsp,%rbp
    d0f2:	48 83 ec 10          	sub    $0x10,%rsp
    d0f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    d0fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0fe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d106:	48 8b 00             	mov    (%rax),%rax
    d109:	48 29 c2             	sub    %rax,%rdx
    d10c:	48 c1 fa 03          	sar    $0x3,%rdx
    d110:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    d117:	cc cc cc 
    d11a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    d11e:	48 89 c2             	mov    %rax,%rdx
    d121:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d125:	48 8b 08             	mov    (%rax),%rcx
    d128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d12c:	48 89 ce             	mov    %rcx,%rsi
    d12f:	48 89 c7             	mov    %rax,%rdi
    d132:	e8 cb 23 00 00       	call   f502 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
    d137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d13b:	48 89 c7             	mov    %rax,%rdi
    d13e:	e8 a3 ed ff ff       	call   bee6 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>
    d143:	90                   	nop
    d144:	c9                   	leave
    d145:	c3                   	ret

000000000000d146 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    d146:	55                   	push   %rbp
    d147:	48 89 e5             	mov    %rsp,%rbp
    d14a:	48 83 ec 10          	sub    $0x10,%rsp
    d14e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    d152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d156:	48 89 c7             	mov    %rax,%rdi
    d159:	e8 da 23 00 00       	call   f538 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    d15e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    d161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d165:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d16d:	48 8b 00             	mov    (%rax),%rax
    d170:	48 89 ce             	mov    %rcx,%rsi
    d173:	48 89 c7             	mov    %rax,%rdi
    d176:	e8 cb 23 00 00       	call   f546 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>
      }
    d17b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d17f:	48 89 c7             	mov    %rax,%rdi
    d182:	e8 67 ff ff ff       	call   d0ee <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    d187:	90                   	nop
    d188:	c9                   	leave
    d189:	c3                   	ret

000000000000d18a <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    d18a:	55                   	push   %rbp
    d18b:	48 89 e5             	mov    %rsp,%rbp
    d18e:	48 83 ec 10          	sub    $0x10,%rsp
    d192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    d196:	e8 e9 e9 ff ff       	call   bb84 <_ZSt23__is_constant_evaluatedv>
    d19b:	84 c0                	test   %al,%al
    d19d:	74 1a                	je     d1b9 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    d19f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1a3:	48 89 c7             	mov    %rax,%rdi
    d1a6:	e8 c1 ed ff ff       	call   bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    d1ab:	83 f0 01             	xor    $0x1,%eax
    d1ae:	84 c0                	test   %al,%al
    d1b0:	74 07                	je     d1b9 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    d1b2:	b8 01 00 00 00       	mov    $0x1,%eax
    d1b7:	eb 05                	jmp    d1be <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    d1b9:	b8 00 00 00 00       	mov    $0x0,%eax
    d1be:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    d1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1c4:	48 89 c7             	mov    %rax,%rdi
    d1c7:	e8 a4 23 00 00       	call   f570 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
    d1cc:	c9                   	leave
    d1cd:	c3                   	ret

000000000000d1ce <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    d1ce:	55                   	push   %rbp
    d1cf:	48 89 e5             	mov    %rsp,%rbp
    d1d2:	48 83 ec 10          	sub    $0x10,%rsp
    d1d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1de:	48 89 c7             	mov    %rax,%rdi
    d1e1:	e8 98 23 00 00       	call   f57e <_ZNSt15__new_allocatorIjEC1Ev>
    d1e6:	90                   	nop
    d1e7:	c9                   	leave
    d1e8:	c3                   	ret
    d1e9:	90                   	nop

000000000000d1ea <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>:
      set(initializer_list<value_type> __l,
    d1ea:	55                   	push   %rbp
    d1eb:	48 89 e5             	mov    %rsp,%rbp
    d1ee:	41 54                	push   %r12
    d1f0:	53                   	push   %rbx
    d1f1:	48 83 ec 40          	sub    $0x40,%rsp
    d1f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d1f9:	48 89 f0             	mov    %rsi,%rax
    d1fc:	48 89 d6             	mov    %rdx,%rsi
    d1ff:	48 89 f2             	mov    %rsi,%rdx
    d202:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d206:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d20a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d20e:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      : _M_t(__comp, _Key_alloc_type(__a))
    d212:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d216:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    d21a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d21e:	48 89 d6             	mov    %rdx,%rsi
    d221:	48 89 c7             	mov    %rax,%rdi
    d224:	e8 61 23 00 00       	call   f58a <_ZNSaIjEC1ERKS_>
    d229:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    d22d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d231:	48 89 c6             	mov    %rax,%rsi
    d234:	48 89 df             	mov    %rbx,%rdi
    d237:	e8 74 23 00 00       	call   f5b0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>
    d23c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d240:	48 89 c7             	mov    %rax,%rdi
    d243:	e8 aa ee ff ff       	call   c0f2 <_ZNSaIjED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    d248:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d24c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d250:	48 89 c7             	mov    %rax,%rdi
    d253:	e8 d8 23 00 00       	call   f630 <_ZNKSt16initializer_listIjE3endEv>
    d258:	49 89 c4             	mov    %rax,%r12
    d25b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d25f:	48 89 c7             	mov    %rax,%rdi
    d262:	e8 b7 23 00 00       	call   f61e <_ZNKSt16initializer_listIjE5beginEv>
    d267:	4c 89 e2             	mov    %r12,%rdx
    d26a:	48 89 c6             	mov    %rax,%rsi
    d26d:	48 89 df             	mov    %rbx,%rdi
    d270:	e8 f1 23 00 00       	call   f666 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>
    d275:	eb 34                	jmp    d2ab <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_+0xc1>
      : _M_t(__comp, _Key_alloc_type(__a))
    d277:	48 89 c3             	mov    %rax,%rbx
    d27a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d27e:	48 89 c7             	mov    %rax,%rdi
    d281:	e8 6c ee ff ff       	call   c0f2 <_ZNSaIjED1Ev>
    d286:	48 89 d8             	mov    %rbx,%rax
    d289:	48 89 c7             	mov    %rax,%rdi
    d28c:	e8 af 75 ff ff       	call   4840 <_Unwind_Resume@plt>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    d291:	48 89 c3             	mov    %rax,%rbx
    d294:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d298:	48 89 c7             	mov    %rax,%rdi
    d29b:	e8 30 00 00 00       	call   d2d0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    d2a0:	48 89 d8             	mov    %rbx,%rax
    d2a3:	48 89 c7             	mov    %rax,%rdi
    d2a6:	e8 95 75 ff ff       	call   4840 <_Unwind_Resume@plt>
    d2ab:	48 83 c4 40          	add    $0x40,%rsp
    d2af:	5b                   	pop    %rbx
    d2b0:	41 5c                	pop    %r12
    d2b2:	5d                   	pop    %rbp
    d2b3:	c3                   	ret

000000000000d2b4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>:
	struct _Rb_tree_impl
    d2b4:	55                   	push   %rbp
    d2b5:	48 89 e5             	mov    %rsp,%rbp
    d2b8:	48 83 ec 10          	sub    $0x10,%rsp
    d2bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2c4:	48 89 c7             	mov    %rax,%rdi
    d2c7:	e8 12 24 00 00       	call   f6de <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    d2cc:	90                   	nop
    d2cd:	c9                   	leave
    d2ce:	c3                   	ret
    d2cf:	90                   	nop

000000000000d2d0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    d2d0:	55                   	push   %rbp
    d2d1:	48 89 e5             	mov    %rsp,%rbp
    d2d4:	48 83 ec 10          	sub    $0x10,%rsp
    d2d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    d2dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2e0:	48 89 c7             	mov    %rax,%rdi
    d2e3:	e8 78 24 00 00       	call   f760 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
    d2e8:	48 89 c2             	mov    %rax,%rdx
    d2eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2ef:	48 89 d6             	mov    %rdx,%rsi
    d2f2:	48 89 c7             	mov    %rax,%rdi
    d2f5:	e8 00 24 00 00       	call   f6fa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
    d2fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2fe:	48 89 c7             	mov    %rax,%rdi
    d301:	e8 ae ff ff ff       	call   d2b4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>
    d306:	90                   	nop
    d307:	c9                   	leave
    d308:	c3                   	ret
    d309:	90                   	nop

000000000000d30a <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d30a:	55                   	push   %rbp
    d30b:	48 89 e5             	mov    %rsp,%rbp
    d30e:	48 83 ec 10          	sub    $0x10,%rsp
    d312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.begin(); }
    d316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d31a:	48 89 c7             	mov    %rax,%rdi
    d31d:	e8 58 24 00 00       	call   f77a <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
    d322:	c9                   	leave
    d323:	c3                   	ret

000000000000d324 <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d324:	55                   	push   %rbp
    d325:	48 89 e5             	mov    %rsp,%rbp
    d328:	48 83 ec 10          	sub    $0x10,%rsp
    d32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    d330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d334:	48 89 c7             	mov    %rax,%rdi
    d337:	e8 68 24 00 00       	call   f7a4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    d33c:	c9                   	leave
    d33d:	c3                   	ret

000000000000d33e <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    d33e:	55                   	push   %rbp
    d33f:	48 89 e5             	mov    %rsp,%rbp
    d342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
    d34a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d34e:	48 8b 10             	mov    (%rax),%rdx
    d351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d355:	48 8b 00             	mov    (%rax),%rax
    d358:	48 39 c2             	cmp    %rax,%rdx
    d35b:	0f 95 c0             	setne  %al
    d35e:	5d                   	pop    %rbp
    d35f:	c3                   	ret

000000000000d360 <_ZNSt23_Rb_tree_const_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d360:	55                   	push   %rbp
    d361:	48 89 e5             	mov    %rsp,%rbp
    d364:	48 83 ec 10          	sub    $0x10,%rsp
    d368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    d36c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d370:	48 8b 00             	mov    (%rax),%rax
    d373:	48 89 c7             	mov    %rax,%rdi
    d376:	e8 a5 71 ff ff       	call   4520 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    d37b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d37f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    d382:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d386:	c9                   	leave
    d387:	c3                   	ret

000000000000d388 <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d388:	55                   	push   %rbp
    d389:	48 89 e5             	mov    %rsp,%rbp
    d38c:	48 83 ec 10          	sub    $0x10,%rsp
    d390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    d394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d398:	48 8b 00             	mov    (%rax),%rax
    d39b:	48 89 c7             	mov    %rax,%rdi
    d39e:	e8 2b 24 00 00       	call   f7ce <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
    d3a3:	c9                   	leave
    d3a4:	c3                   	ret
    d3a5:	90                   	nop

000000000000d3a6 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>:
      push_back(const value_type& __x)
    d3a6:	55                   	push   %rbp
    d3a7:	48 89 e5             	mov    %rsp,%rbp
    d3aa:	48 83 ec 10          	sub    $0x10,%rsp
    d3ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    d3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ba:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d3be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3c2:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3c6:	48 39 c2             	cmp    %rax,%rdx
    d3c9:	74 31                	je     d3fc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x56>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    d3cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3cf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d3d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3db:	48 89 ce             	mov    %rcx,%rsi
    d3de:	48 89 c7             	mov    %rax,%rdi
    d3e1:	e8 06 24 00 00       	call   f7ec <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    d3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ea:	48 8b 40 08          	mov    0x8(%rax),%rax
    d3ee:	48 8d 50 28          	lea    0x28(%rax),%rdx
    d3f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    d3fa:	eb 22                	jmp    d41e <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x78>
	  _M_realloc_insert(end(), __x);
    d3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d400:	48 89 c7             	mov    %rax,%rdi
    d403:	e8 1e 24 00 00       	call   f826 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>
    d408:	48 89 c1             	mov    %rax,%rcx
    d40b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d413:	48 89 ce             	mov    %rcx,%rsi
    d416:	48 89 c7             	mov    %rax,%rdi
    d419:	e8 32 24 00 00       	call   f850 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
      }
    d41e:	90                   	nop
    d41f:	c9                   	leave
    d420:	c3                   	ret
    d421:	90                   	nop

000000000000d422 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    d422:	55                   	push   %rbp
    d423:	48 89 e5             	mov    %rsp,%rbp
    d426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    d42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d42e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d436:	48 8b 00             	mov    (%rax),%rax
    d439:	48 29 c2             	sub    %rax,%rdx
    d43c:	48 c1 fa 03          	sar    $0x3,%rdx
    d440:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    d447:	cc cc cc 
    d44a:	48 0f af c2          	imul   %rdx,%rax
    d44e:	5d                   	pop    %rbp
    d44f:	c3                   	ret

000000000000d450 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d450:	55                   	push   %rbp
    d451:	48 89 e5             	mov    %rsp,%rbp
    d454:	48 83 ec 10          	sub    $0x10,%rsp
    d458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d45c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d460:	48 8b 10             	mov    (%rax),%rdx
    d463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d467:	48 89 d6             	mov    %rdx,%rsi
    d46a:	48 89 c7             	mov    %rax,%rdi
    d46d:	e8 98 25 00 00       	call   fa0a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    d472:	c9                   	leave
    d473:	c3                   	ret

000000000000d474 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d474:	55                   	push   %rbp
    d475:	48 89 e5             	mov    %rsp,%rbp
    d478:	48 83 ec 20          	sub    $0x20,%rsp
    d47c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    d480:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d484:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d488:	48 89 d6             	mov    %rdx,%rsi
    d48b:	48 89 c7             	mov    %rax,%rdi
    d48e:	e8 89 25 00 00       	call   fa1c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d497:	c9                   	leave
    d498:	c3                   	ret
    d499:	90                   	nop

000000000000d49a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d49a:	55                   	push   %rbp
    d49b:	48 89 e5             	mov    %rsp,%rbp
    d49e:	48 83 ec 20          	sub    $0x20,%rsp
    d4a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    d4a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4aa:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d4ae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d4b2:	48 89 d6             	mov    %rdx,%rsi
    d4b5:	48 89 c7             	mov    %rax,%rdi
    d4b8:	e8 5f 25 00 00       	call   fa1c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d4bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4c1:	c9                   	leave
    d4c2:	c3                   	ret

000000000000d4c3 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d4c3:	55                   	push   %rbp
    d4c4:	48 89 e5             	mov    %rsp,%rbp
    d4c7:	53                   	push   %rbx
    d4c8:	48 83 ec 18          	sub    $0x18,%rsp
    d4cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d4d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    d4d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4d8:	48 89 c7             	mov    %rax,%rdi
    d4db:	e8 5a 25 00 00       	call   fa3a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d4e0:	48 8b 18             	mov    (%rax),%rbx
    d4e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4e7:	48 89 c7             	mov    %rax,%rdi
    d4ea:	e8 4b 25 00 00       	call   fa3a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d4ef:	48 8b 00             	mov    (%rax),%rax
    d4f2:	48 39 c3             	cmp    %rax,%rbx
    d4f5:	0f 95 c0             	setne  %al
    d4f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d4fc:	c9                   	leave
    d4fd:	c3                   	ret

000000000000d4fe <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d4fe:	55                   	push   %rbp
    d4ff:	48 89 e5             	mov    %rsp,%rbp
    d502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d50a:	48 8b 00             	mov    (%rax),%rax
    d50d:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d515:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    d518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d51c:	5d                   	pop    %rbp
    d51d:	c3                   	ret

000000000000d51e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d51e:	55                   	push   %rbp
    d51f:	48 89 e5             	mov    %rsp,%rbp
    d522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    d526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d52a:	48 8b 00             	mov    (%rax),%rax
    d52d:	5d                   	pop    %rbp
    d52e:	c3                   	ret
    d52f:	90                   	nop

000000000000d530 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
    d530:	55                   	push   %rbp
    d531:	48 89 e5             	mov    %rsp,%rbp
    d534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    d53c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d540:	48 8b 00             	mov    (%rax),%rax
    d543:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d547:	48 c1 e2 03          	shl    $0x3,%rdx
    d54b:	48 01 d0             	add    %rdx,%rax
      }
    d54e:	5d                   	pop    %rbp
    d54f:	c3                   	ret

000000000000d550 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d550:	55                   	push   %rbp
    d551:	48 89 e5             	mov    %rsp,%rbp
    d554:	48 83 ec 20          	sub    $0x20,%rsp
    d558:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    d55c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d560:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d564:	48 89 d6             	mov    %rdx,%rsi
    d567:	48 89 c7             	mov    %rax,%rdi
    d56a:	e8 d9 24 00 00       	call   fa48 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d56f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d573:	c9                   	leave
    d574:	c3                   	ret
    d575:	90                   	nop

000000000000d576 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d576:	55                   	push   %rbp
    d577:	48 89 e5             	mov    %rsp,%rbp
    d57a:	48 83 ec 20          	sub    $0x20,%rsp
    d57e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    d582:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d586:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d58a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d58e:	48 89 d6             	mov    %rdx,%rsi
    d591:	48 89 c7             	mov    %rax,%rdi
    d594:	e8 af 24 00 00       	call   fa48 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d59d:	c9                   	leave
    d59e:	c3                   	ret

000000000000d59f <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d59f:	55                   	push   %rbp
    d5a0:	48 89 e5             	mov    %rsp,%rbp
    d5a3:	53                   	push   %rbx
    d5a4:	48 83 ec 18          	sub    $0x18,%rsp
    d5a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d5ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    d5b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5b4:	48 89 c7             	mov    %rax,%rdi
    d5b7:	e8 aa 24 00 00       	call   fa66 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d5bc:	48 8b 18             	mov    (%rax),%rbx
    d5bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d5c3:	48 89 c7             	mov    %rax,%rdi
    d5c6:	e8 9b 24 00 00       	call   fa66 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d5cb:	48 8b 00             	mov    (%rax),%rax
    d5ce:	48 39 c3             	cmp    %rax,%rbx
    d5d1:	0f 95 c0             	setne  %al
    d5d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d5d8:	c9                   	leave
    d5d9:	c3                   	ret

000000000000d5da <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d5da:	55                   	push   %rbp
    d5db:	48 89 e5             	mov    %rsp,%rbp
    d5de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e6:	48 8b 00             	mov    (%rax),%rax
    d5e9:	48 8d 50 04          	lea    0x4(%rax),%rdx
    d5ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5f1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    d5f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d5f8:	5d                   	pop    %rbp
    d5f9:	c3                   	ret

000000000000d5fa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d5fa:	55                   	push   %rbp
    d5fb:	48 89 e5             	mov    %rsp,%rbp
    d5fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    d602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d606:	48 8b 00             	mov    (%rax),%rax
    d609:	5d                   	pop    %rbp
    d60a:	c3                   	ret

000000000000d60b <_ZSt5clampIjERKT_S2_S2_S2_>:
   *  @retval `__val` otherwise.
   *  @pre `_Tp` is LessThanComparable and `(__hi < __lo)` is false.
   */
  template<typename _Tp>
    constexpr const _Tp&
    clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
    d60b:	55                   	push   %rbp
    d60c:	48 89 e5             	mov    %rsp,%rbp
    d60f:	48 83 ec 20          	sub    $0x20,%rsp
    d613:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d617:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d61b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      __glibcxx_assert(!(__hi < __lo));
    d61f:	e8 60 e5 ff ff       	call   bb84 <_ZSt23__is_constant_evaluatedv>
    d624:	84 c0                	test   %al,%al
    d626:	74 17                	je     d63f <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    d628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d62c:	8b 10                	mov    (%rax),%edx
    d62e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d632:	8b 00                	mov    (%rax),%eax
    d634:	39 c2                	cmp    %eax,%edx
    d636:	73 07                	jae    d63f <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    d638:	b8 01 00 00 00       	mov    $0x1,%eax
    d63d:	eb 05                	jmp    d644 <_ZSt5clampIjERKT_S2_S2_S2_+0x39>
    d63f:	b8 00 00 00 00       	mov    $0x0,%eax
    d644:	84 c0                	test   %al,%al
      return std::min(std::max(__val, __lo), __hi);
    d646:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d64a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d64e:	48 89 d6             	mov    %rdx,%rsi
    d651:	48 89 c7             	mov    %rax,%rdi
    d654:	e8 1b 24 00 00       	call   fa74 <_ZSt3maxIjERKT_S2_S2_>
    d659:	48 89 c2             	mov    %rax,%rdx
    d65c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d660:	48 89 c6             	mov    %rax,%rsi
    d663:	48 89 d7             	mov    %rdx,%rdi
    d666:	e8 31 24 00 00       	call   fa9c <_ZSt3minIjERKT_S2_S2_>
    }
    d66b:	c9                   	leave
    d66c:	c3                   	ret

000000000000d66d <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>:
	     && (!__lhs || *__lhs == *__rhs);
    }

  template<typename _Tp, typename _Up>
    constexpr auto
    operator!=(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
    d66d:	55                   	push   %rbp
    d66e:	48 89 e5             	mov    %rsp,%rbp
    d671:	53                   	push   %rbx
    d672:	48 83 ec 18          	sub    $0x18,%rsp
    d676:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d67a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    -> __optional_ne_t<_Tp, _Up>
    {
      return static_cast<bool>(__lhs) != static_cast<bool>(__rhs)
    d67e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d682:	48 89 c7             	mov    %rax,%rdi
    d685:	e8 3a 24 00 00       	call   fac4 <_ZNKSt8optionalIjEcvbEv>
    d68a:	89 c3                	mov    %eax,%ebx
    d68c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d690:	48 89 c7             	mov    %rax,%rdi
    d693:	e8 2c 24 00 00       	call   fac4 <_ZNKSt8optionalIjEcvbEv>
	|| (static_cast<bool>(__lhs) && *__lhs != *__rhs);
    d698:	38 c3                	cmp    %al,%bl
    d69a:	75 30                	jne    d6cc <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x5f>
    d69c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6a0:	48 89 c7             	mov    %rax,%rdi
    d6a3:	e8 1c 24 00 00       	call   fac4 <_ZNKSt8optionalIjEcvbEv>
    d6a8:	84 c0                	test   %al,%al
    d6aa:	74 27                	je     d6d3 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    d6ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6b0:	48 89 c7             	mov    %rax,%rdi
    d6b3:	e8 26 24 00 00       	call   fade <_ZNKRSt8optionalIjEdeEv>
    d6b8:	8b 18                	mov    (%rax),%ebx
    d6ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6be:	48 89 c7             	mov    %rax,%rdi
    d6c1:	e8 18 24 00 00       	call   fade <_ZNKRSt8optionalIjEdeEv>
    d6c6:	8b 00                	mov    (%rax),%eax
    d6c8:	39 c3                	cmp    %eax,%ebx
    d6ca:	74 07                	je     d6d3 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    d6cc:	b8 01 00 00 00       	mov    $0x1,%eax
    d6d1:	eb 05                	jmp    d6d8 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x6b>
    d6d3:	b8 00 00 00 00       	mov    $0x0,%eax
    }
    d6d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d6dc:	c9                   	leave
    d6dd:	c3                   	ret

000000000000d6de <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    d6de:	55                   	push   %rbp
    d6df:	48 89 e5             	mov    %rsp,%rbp
    d6e2:	48 83 ec 10          	sub    $0x10,%rsp
    d6e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    d6ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6f2:	48 89 c7             	mov    %rax,%rdi
    d6f5:	e8 8e 00 00 00       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    d6fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d6fe:	0f 92 c0             	setb   %al
    d701:	84 c0                	test   %al,%al
    d703:	74 24                	je     d729 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    d705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d709:	48 89 c7             	mov    %rax,%rdi
    d70c:	e8 77 00 00 00       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    d711:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d715:	48 29 c2             	sub    %rax,%rdx
    d718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d71c:	48 89 d6             	mov    %rdx,%rsi
    d71f:	48 89 c7             	mov    %rax,%rdi
    d722:	e8 d1 23 00 00       	call   faf8 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>
      }
    d727:	eb 38                	jmp    d761 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    d729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d72d:	48 89 c7             	mov    %rax,%rdi
    d730:	e8 53 00 00 00       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    d735:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    d739:	0f 92 c0             	setb   %al
    d73c:	84 c0                	test   %al,%al
    d73e:	74 21                	je     d761 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    d740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d744:	48 8b 00             	mov    (%rax),%rax
    d747:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d74b:	48 c1 e2 03          	shl    $0x3,%rdx
    d74f:	48 01 c2             	add    %rax,%rdx
    d752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d756:	48 89 d6             	mov    %rdx,%rsi
    d759:	48 89 c7             	mov    %rax,%rdi
    d75c:	e8 a1 25 00 00       	call   fd02 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    d761:	90                   	nop
    d762:	c9                   	leave
    d763:	c3                   	ret

000000000000d764 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d764:	55                   	push   %rbp
    d765:	48 89 e5             	mov    %rsp,%rbp
    d768:	48 83 ec 10          	sub    $0x10,%rsp
    d76c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d774:	48 8b 10             	mov    (%rax),%rdx
    d777:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d77b:	48 89 d6             	mov    %rdx,%rsi
    d77e:	48 89 c7             	mov    %rax,%rdi
    d781:	e8 dc 25 00 00       	call   fd62 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    d786:	c9                   	leave
    d787:	c3                   	ret

000000000000d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    d788:	55                   	push   %rbp
    d789:	48 89 e5             	mov    %rsp,%rbp
    d78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    d790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d794:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d79c:	48 8b 00             	mov    (%rax),%rax
    d79f:	48 29 c2             	sub    %rax,%rdx
    d7a2:	48 89 d0             	mov    %rdx,%rax
    d7a5:	48 c1 f8 03          	sar    $0x3,%rax
    d7a9:	5d                   	pop    %rbp
    d7aa:	c3                   	ret
    d7ab:	90                   	nop

000000000000d7ac <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    d7ac:	55                   	push   %rbp
    d7ad:	48 89 e5             	mov    %rsp,%rbp
    d7b0:	48 83 ec 10          	sub    $0x10,%rsp
    d7b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    d7bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7c0:	48 89 c7             	mov    %rax,%rdi
    d7c3:	e8 ae 03 00 00       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    d7c8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d7cc:	0f 92 c0             	setb   %al
    d7cf:	84 c0                	test   %al,%al
    d7d1:	74 24                	je     d7f7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    d7d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7d7:	48 89 c7             	mov    %rax,%rdi
    d7da:	e8 97 03 00 00       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    d7df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d7e3:	48 29 c2             	sub    %rax,%rdx
    d7e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7ea:	48 89 d6             	mov    %rdx,%rsi
    d7ed:	48 89 c7             	mov    %rax,%rdi
    d7f0:	e8 7f 25 00 00       	call   fd74 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
    d7f5:	eb 38                	jmp    d82f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    d7f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7fb:	48 89 c7             	mov    %rax,%rdi
    d7fe:	e8 73 03 00 00       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    d803:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    d807:	0f 92 c0             	setb   %al
    d80a:	84 c0                	test   %al,%al
    d80c:	74 21                	je     d82f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    d80e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d812:	48 8b 00             	mov    (%rax),%rax
    d815:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d819:	48 c1 e2 03          	shl    $0x3,%rdx
    d81d:	48 01 c2             	add    %rax,%rdx
    d820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d824:	48 89 d6             	mov    %rdx,%rsi
    d827:	48 89 c7             	mov    %rax,%rdi
    d82a:	e8 4f 27 00 00       	call   ff7e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    d82f:	90                   	nop
    d830:	c9                   	leave
    d831:	c3                   	ret

000000000000d832 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    d832:	55                   	push   %rbp
    d833:	48 89 e5             	mov    %rsp,%rbp
    d836:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d83a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    d83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d842:	48 8b 00             	mov    (%rax),%rax
    d845:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d849:	48 c1 e2 03          	shl    $0x3,%rdx
    d84d:	48 01 d0             	add    %rdx,%rax
      }
    d850:	5d                   	pop    %rbp
    d851:	c3                   	ret

000000000000d852 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    d852:	55                   	push   %rbp
    d853:	48 89 e5             	mov    %rsp,%rbp
    d856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d85a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    d85e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d862:	48 8b 00             	mov    (%rax),%rax
    d865:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d869:	48 c1 e2 03          	shl    $0x3,%rdx
    d86d:	48 01 d0             	add    %rdx,%rax
      }
    d870:	5d                   	pop    %rbp
    d871:	c3                   	ret

000000000000d872 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    d872:	55                   	push   %rbp
    d873:	48 89 e5             	mov    %rsp,%rbp
    d876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d87a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d87e:	48 8b 00             	mov    (%rax),%rax
    d881:	5d                   	pop    %rbp
    d882:	c3                   	ret
    d883:	90                   	nop

000000000000d884 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    d884:	55                   	push   %rbp
    d885:	48 89 e5             	mov    %rsp,%rbp
    d888:	53                   	push   %rbx
    d889:	48 83 ec 28          	sub    $0x28,%rsp
    d88d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d891:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d895:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    d899:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d89d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d8a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d8a5:	48 89 d6             	mov    %rdx,%rsi
    d8a8:	48 89 c7             	mov    %rax,%rdi
    d8ab:	e8 2e 27 00 00       	call   ffde <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    d8b0:	48 89 c1             	mov    %rax,%rcx
    d8b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8b7:	48 89 c2             	mov    %rax,%rdx
    d8ba:	48 89 ce             	mov    %rcx,%rsi
    d8bd:	48 89 df             	mov    %rbx,%rdi
    d8c0:	e8 79 27 00 00       	call   1003e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    d8c5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d8c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8cd:	48 89 d6             	mov    %rdx,%rsi
    d8d0:	48 89 c7             	mov    %rax,%rdi
    d8d3:	e8 c4 27 00 00       	call   1009c <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    d8d8:	eb 1a                	jmp    d8f4 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    d8da:	48 89 c3             	mov    %rax,%rbx
    d8dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d8e1:	48 89 c7             	mov    %rax,%rdi
    d8e4:	e8 a9 00 00 00       	call   d992 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    d8e9:	48 89 d8             	mov    %rbx,%rax
    d8ec:	48 89 c7             	mov    %rax,%rdi
    d8ef:	e8 4c 6f ff ff       	call   4840 <_Unwind_Resume@plt>
    d8f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d8f8:	c9                   	leave
    d8f9:	c3                   	ret

000000000000d8fa <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    d8fa:	55                   	push   %rbp
    d8fb:	48 89 e5             	mov    %rsp,%rbp
    d8fe:	48 83 ec 10          	sub    $0x10,%rsp
    d902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    d906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d90a:	48 89 c7             	mov    %rax,%rdi
    d90d:	e8 ca 27 00 00       	call   100dc <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    d912:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    d915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d919:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d91d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d921:	48 8b 00             	mov    (%rax),%rax
    d924:	48 89 ce             	mov    %rcx,%rsi
    d927:	48 89 c7             	mov    %rax,%rdi
    d92a:	e8 bb 27 00 00       	call   100ea <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    d92f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d933:	48 89 c7             	mov    %rax,%rdi
    d936:	e8 57 00 00 00       	call   d992 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    d93b:	90                   	nop
    d93c:	c9                   	leave
    d93d:	c3                   	ret

000000000000d93e <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    d93e:	55                   	push   %rbp
    d93f:	48 89 e5             	mov    %rsp,%rbp
    d942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d946:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    d94a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d94e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d952:	48 89 10             	mov    %rdx,(%rax)
    d955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d959:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    d960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d964:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    d96b:	90                   	nop
    d96c:	5d                   	pop    %rbp
    d96d:	c3                   	ret

000000000000d96e <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d96e:	55                   	push   %rbp
    d96f:	48 89 e5             	mov    %rsp,%rbp
    d972:	48 83 ec 10          	sub    $0x10,%rsp
    d976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d97e:	48 8b 10             	mov    (%rax),%rdx
    d981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d985:	48 89 d6             	mov    %rdx,%rsi
    d988:	48 89 c7             	mov    %rax,%rdi
    d98b:	e8 84 27 00 00       	call   10114 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    d990:	c9                   	leave
    d991:	c3                   	ret

000000000000d992 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    d992:	55                   	push   %rbp
    d993:	48 89 e5             	mov    %rsp,%rbp
    d996:	48 83 ec 10          	sub    $0x10,%rsp
    d99a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    d99e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9a2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d9a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9aa:	48 8b 00             	mov    (%rax),%rax
    d9ad:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    d9b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b4:	48 8b 08             	mov    (%rax),%rcx
    d9b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9bb:	48 89 ce             	mov    %rcx,%rsi
    d9be:	48 89 c7             	mov    %rax,%rdi
    d9c1:	e8 60 27 00 00       	call   10126 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    d9c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9ca:	48 89 c7             	mov    %rax,%rdi
    d9cd:	e8 c8 e5 ff ff       	call   bf9a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    d9d2:	90                   	nop
    d9d3:	c9                   	leave
    d9d4:	c3                   	ret
    d9d5:	90                   	nop

000000000000d9d6 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    d9d6:	55                   	push   %rbp
    d9d7:	48 89 e5             	mov    %rsp,%rbp
    d9da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    d9de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9e2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9ea:	48 8b 00             	mov    (%rax),%rax
    d9ed:	48 29 c2             	sub    %rax,%rdx
    d9f0:	48 89 d0             	mov    %rdx,%rax
    d9f3:	5d                   	pop    %rbp
    d9f4:	c3                   	ret
    d9f5:	90                   	nop

000000000000d9f6 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    d9f6:	55                   	push   %rbp
    d9f7:	48 89 e5             	mov    %rsp,%rbp
    d9fa:	48 83 ec 10          	sub    $0x10,%rsp
    d9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    da02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da06:	48 8b 10             	mov    (%rax),%rdx
    da09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da0d:	48 89 d6             	mov    %rdx,%rsi
    da10:	48 89 c7             	mov    %rax,%rdi
    da13:	e8 fc 26 00 00       	call   10114 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    da18:	c9                   	leave
    da19:	c3                   	ret

000000000000da1a <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
    da1a:	55                   	push   %rbp
    da1b:	48 89 e5             	mov    %rsp,%rbp
    da1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da22:	b8 02 00 00 00       	mov    $0x2,%eax
    da27:	5d                   	pop    %rbp
    da28:	c3                   	ret
    da29:	90                   	nop

000000000000da2a <_ZNSaI14VkDynamicStateEC1Ev>:
    da2a:	55                   	push   %rbp
    da2b:	48 89 e5             	mov    %rsp,%rbp
    da2e:	48 83 ec 10          	sub    $0x10,%rsp
    da32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da3a:	48 89 c7             	mov    %rax,%rdi
    da3d:	e8 1a 27 00 00       	call   1015c <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>
    da42:	90                   	nop
    da43:	c9                   	leave
    da44:	c3                   	ret
    da45:	90                   	nop

000000000000da46 <_ZNSaI14VkDynamicStateED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    da46:	55                   	push   %rbp
    da47:	48 89 e5             	mov    %rsp,%rbp
    da4a:	48 83 ec 10          	sub    $0x10,%rsp
    da4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da56:	48 89 c7             	mov    %rax,%rdi
    da59:	e8 0a 27 00 00       	call   10168 <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>
    da5e:	90                   	nop
    da5f:	c9                   	leave
    da60:	c3                   	ret
    da61:	90                   	nop

000000000000da62 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
    da62:	55                   	push   %rbp
    da63:	48 89 e5             	mov    %rsp,%rbp
    da66:	53                   	push   %rbx
    da67:	48 83 ec 38          	sub    $0x38,%rsp
    da6b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    da6f:	48 89 f0             	mov    %rsi,%rax
    da72:	48 89 d6             	mov    %rdx,%rsi
    da75:	48 89 f2             	mov    %rsi,%rdx
    da78:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    da7c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    da80:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    da84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    da8c:	48 89 d6             	mov    %rdx,%rsi
    da8f:	48 89 c7             	mov    %rax,%rdi
    da92:	e8 f9 26 00 00       	call   10190 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
    da97:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    da9b:	48 89 c7             	mov    %rax,%rdi
    da9e:	e8 73 27 00 00       	call   10216 <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>
    daa3:	48 89 c3             	mov    %rax,%rbx
    daa6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    daaa:	48 89 c7             	mov    %rax,%rdi
    daad:	e8 52 27 00 00       	call   10204 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
    dab2:	48 89 c1             	mov    %rax,%rcx
    dab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dab9:	48 89 da             	mov    %rbx,%rdx
    dabc:	48 89 ce             	mov    %rcx,%rsi
    dabf:	48 89 c7             	mov    %rax,%rdi
    dac2:	e8 b5 27 00 00       	call   1027c <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
    dac7:	eb 1a                	jmp    dae3 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
    dac9:	48 89 c3             	mov    %rax,%rbx
    dacc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dad0:	48 89 c7             	mov    %rax,%rdi
    dad3:	e8 de 26 00 00       	call   101b6 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
    dad8:	48 89 d8             	mov    %rbx,%rax
    dadb:	48 89 c7             	mov    %rax,%rdi
    dade:	e8 5d 6d ff ff       	call   4840 <_Unwind_Resume@plt>
    dae3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dae7:	c9                   	leave
    dae8:	c3                   	ret
    dae9:	90                   	nop

000000000000daea <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    daea:	55                   	push   %rbp
    daeb:	48 89 e5             	mov    %rsp,%rbp
    daee:	48 83 ec 10          	sub    $0x10,%rsp
    daf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    daf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dafa:	48 89 c7             	mov    %rax,%rdi
    dafd:	e8 2a 28 00 00       	call   1032c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
    db02:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    db05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db09:	48 8b 48 08          	mov    0x8(%rax),%rcx
    db0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db11:	48 8b 00             	mov    (%rax),%rax
    db14:	48 89 ce             	mov    %rcx,%rsi
    db17:	48 89 c7             	mov    %rax,%rdi
    db1a:	e8 1b 28 00 00       	call   1033a <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>
      }
    db1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db23:	48 89 c7             	mov    %rax,%rdi
    db26:	e8 8b 26 00 00       	call   101b6 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
    db2b:	90                   	nop
    db2c:	c9                   	leave
    db2d:	c3                   	ret

000000000000db2e <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    db2e:	55                   	push   %rbp
    db2f:	48 89 e5             	mov    %rsp,%rbp
    db32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    db36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db3a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    db3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db42:	48 8b 00             	mov    (%rax),%rax
    db45:	48 29 c2             	sub    %rax,%rdx
    db48:	48 89 d0             	mov    %rdx,%rax
    db4b:	48 c1 f8 02          	sar    $0x2,%rax
    db4f:	5d                   	pop    %rbp
    db50:	c3                   	ret
    db51:	90                   	nop

000000000000db52 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    db52:	55                   	push   %rbp
    db53:	48 89 e5             	mov    %rsp,%rbp
    db56:	48 83 ec 10          	sub    $0x10,%rsp
    db5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    db5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db62:	48 8b 10             	mov    (%rax),%rdx
    db65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db69:	48 89 d6             	mov    %rdx,%rsi
    db6c:	48 89 c7             	mov    %rax,%rdi
    db6f:	e8 f0 27 00 00       	call   10364 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    db74:	c9                   	leave
    db75:	c3                   	ret

000000000000db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    db76:	55                   	push   %rbp
    db77:	48 89 e5             	mov    %rsp,%rbp
    db7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    db7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db82:	48 8b 50 08          	mov    0x8(%rax),%rdx
    db86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db8a:	48 8b 00             	mov    (%rax),%rax
    db8d:	48 29 c2             	sub    %rax,%rdx
    db90:	48 89 d0             	mov    %rdx,%rax
    db93:	48 c1 f8 03          	sar    $0x3,%rax
    db97:	5d                   	pop    %rbp
    db98:	c3                   	ret
    db99:	90                   	nop

000000000000db9a <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    db9a:	55                   	push   %rbp
    db9b:	48 89 e5             	mov    %rsp,%rbp
    db9e:	48 83 ec 10          	sub    $0x10,%rsp
    dba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dba6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    dbaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbae:	48 89 c7             	mov    %rax,%rdi
    dbb1:	e8 16 03 00 00       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    dbb6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    dbba:	0f 92 c0             	setb   %al
    dbbd:	84 c0                	test   %al,%al
    dbbf:	74 24                	je     dbe5 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    dbc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbc5:	48 89 c7             	mov    %rax,%rdi
    dbc8:	e8 ff 02 00 00       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    dbcd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dbd1:	48 29 c2             	sub    %rax,%rdx
    dbd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbd8:	48 89 d6             	mov    %rdx,%rsi
    dbdb:	48 89 c7             	mov    %rax,%rdi
    dbde:	e8 93 27 00 00       	call   10376 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
    dbe3:	eb 38                	jmp    dc1d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    dbe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbe9:	48 89 c7             	mov    %rax,%rdi
    dbec:	e8 db 02 00 00       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    dbf1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    dbf5:	0f 92 c0             	setb   %al
    dbf8:	84 c0                	test   %al,%al
    dbfa:	74 21                	je     dc1d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    dbfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc00:	48 8b 00             	mov    (%rax),%rax
    dc03:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc07:	48 c1 e2 03          	shl    $0x3,%rdx
    dc0b:	48 01 c2             	add    %rax,%rdx
    dc0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc12:	48 89 d6             	mov    %rdx,%rsi
    dc15:	48 89 c7             	mov    %rax,%rdi
    dc18:	e8 63 29 00 00       	call   10580 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    dc1d:	90                   	nop
    dc1e:	c9                   	leave
    dc1f:	c3                   	ret

000000000000dc20 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    dc20:	55                   	push   %rbp
    dc21:	48 89 e5             	mov    %rsp,%rbp
    dc24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    dc2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc30:	48 8b 00             	mov    (%rax),%rax
    dc33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc37:	48 c1 e2 03          	shl    $0x3,%rdx
    dc3b:	48 01 d0             	add    %rdx,%rax
      }
    dc3e:	5d                   	pop    %rbp
    dc3f:	c3                   	ret

000000000000dc40 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dc40:	55                   	push   %rbp
    dc41:	48 89 e5             	mov    %rsp,%rbp
    dc44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dc48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc4c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dc50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc54:	48 8b 00             	mov    (%rax),%rax
    dc57:	48 29 c2             	sub    %rax,%rdx
    dc5a:	48 c1 fa 02          	sar    $0x2,%rdx
    dc5e:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    dc65:	cc cc cc 
    dc68:	48 0f af c2          	imul   %rdx,%rax
    dc6c:	5d                   	pop    %rbp
    dc6d:	c3                   	ret

000000000000dc6e <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    dc6e:	55                   	push   %rbp
    dc6f:	48 89 e5             	mov    %rsp,%rbp
    dc72:	48 83 ec 10          	sub    $0x10,%rsp
    dc76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    dc7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc7e:	48 8b 10             	mov    (%rax),%rdx
    dc81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc85:	48 89 d6             	mov    %rdx,%rsi
    dc88:	48 89 c7             	mov    %rax,%rdi
    dc8b:	e8 50 29 00 00       	call   105e0 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    dc90:	c9                   	leave
    dc91:	c3                   	ret

000000000000dc92 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    dc92:	55                   	push   %rbp
    dc93:	48 89 e5             	mov    %rsp,%rbp
    dc96:	48 83 ec 10          	sub    $0x10,%rsp
    dc9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    dca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dca6:	48 89 c7             	mov    %rax,%rdi
    dca9:	e8 6a 00 00 00       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    dcae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    dcb2:	0f 92 c0             	setb   %al
    dcb5:	84 c0                	test   %al,%al
    dcb7:	74 24                	je     dcdd <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    dcb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcbd:	48 89 c7             	mov    %rax,%rdi
    dcc0:	e8 53 00 00 00       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    dcc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dcc9:	48 29 c2             	sub    %rax,%rdx
    dccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcd0:	48 89 d6             	mov    %rdx,%rsi
    dcd3:	48 89 c7             	mov    %rax,%rdi
    dcd6:	e8 17 29 00 00       	call   105f2 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm>
      }
    dcdb:	eb 38                	jmp    dd15 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    dcdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dce1:	48 89 c7             	mov    %rax,%rdi
    dce4:	e8 2f 00 00 00       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    dce9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    dced:	0f 92 c0             	setb   %al
    dcf0:	84 c0                	test   %al,%al
    dcf2:	74 21                	je     dd15 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    dcf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcf8:	48 8b 00             	mov    (%rax),%rax
    dcfb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dcff:	48 c1 e2 03          	shl    $0x3,%rdx
    dd03:	48 01 c2             	add    %rax,%rdx
    dd06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd0a:	48 89 d6             	mov    %rdx,%rsi
    dd0d:	48 89 c7             	mov    %rax,%rdi
    dd10:	e8 e7 2a 00 00       	call   107fc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    dd15:	90                   	nop
    dd16:	c9                   	leave
    dd17:	c3                   	ret

000000000000dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dd18:	55                   	push   %rbp
    dd19:	48 89 e5             	mov    %rsp,%rbp
    dd1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dd20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd24:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dd28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd2c:	48 8b 00             	mov    (%rax),%rax
    dd2f:	48 29 c2             	sub    %rax,%rdx
    dd32:	48 89 d0             	mov    %rdx,%rax
    dd35:	48 c1 f8 03          	sar    $0x3,%rax
    dd39:	5d                   	pop    %rbp
    dd3a:	c3                   	ret
    dd3b:	90                   	nop

000000000000dd3c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    dd3c:	55                   	push   %rbp
    dd3d:	48 89 e5             	mov    %rsp,%rbp
    dd40:	48 83 ec 10          	sub    $0x10,%rsp
    dd44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    dd48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd4c:	48 8b 10             	mov    (%rax),%rdx
    dd4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd53:	48 89 d6             	mov    %rdx,%rsi
    dd56:	48 89 c7             	mov    %rax,%rdi
    dd59:	e8 fe 2a 00 00       	call   1085c <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    dd5e:	c9                   	leave
    dd5f:	c3                   	ret

000000000000dd60 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    dd60:	55                   	push   %rbp
    dd61:	48 89 e5             	mov    %rsp,%rbp
    dd64:	48 83 ec 10          	sub    $0x10,%rsp
    dd68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    dd70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd74:	48 89 c7             	mov    %rax,%rdi
    dd77:	e8 f2 2a 00 00       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    dd7c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    dd80:	0f 92 c0             	setb   %al
    dd83:	84 c0                	test   %al,%al
    dd85:	74 24                	je     ddab <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    dd87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd8b:	48 89 c7             	mov    %rax,%rdi
    dd8e:	e8 db 2a 00 00       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    dd93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd97:	48 29 c2             	sub    %rax,%rdx
    dd9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd9e:	48 89 d6             	mov    %rdx,%rsi
    dda1:	48 89 c7             	mov    %rax,%rdi
    dda4:	e8 e9 2a 00 00       	call   10892 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
    dda9:	eb 38                	jmp    dde3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    ddab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddaf:	48 89 c7             	mov    %rax,%rdi
    ddb2:	e8 b7 2a 00 00       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    ddb7:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    ddbb:	0f 92 c0             	setb   %al
    ddbe:	84 c0                	test   %al,%al
    ddc0:	74 21                	je     dde3 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    ddc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddc6:	48 8b 00             	mov    (%rax),%rax
    ddc9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ddcd:	48 c1 e2 03          	shl    $0x3,%rdx
    ddd1:	48 01 c2             	add    %rax,%rdx
    ddd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddd8:	48 89 d6             	mov    %rdx,%rsi
    dddb:	48 89 c7             	mov    %rax,%rdi
    ddde:	e8 b9 2c 00 00       	call   10a9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    dde3:	90                   	nop
    dde4:	c9                   	leave
    dde5:	c3                   	ret

000000000000dde6 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    dde6:	55                   	push   %rbp
    dde7:	48 89 e5             	mov    %rsp,%rbp
    ddea:	48 83 ec 10          	sub    $0x10,%rsp
    ddee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    ddf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddfa:	48 89 c7             	mov    %rax,%rdi
    ddfd:	e8 fa 2c 00 00       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
    de02:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    de06:	0f 92 c0             	setb   %al
    de09:	84 c0                	test   %al,%al
    de0b:	74 24                	je     de31 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    de0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de11:	48 89 c7             	mov    %rax,%rdi
    de14:	e8 e3 2c 00 00       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
    de19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    de1d:	48 29 c2             	sub    %rax,%rdx
    de20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de24:	48 89 d6             	mov    %rdx,%rsi
    de27:	48 89 c7             	mov    %rax,%rdi
    de2a:	e8 f1 2c 00 00       	call   10b20 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
    de2f:	eb 38                	jmp    de69 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    de31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de35:	48 89 c7             	mov    %rax,%rdi
    de38:	e8 bf 2c 00 00       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
    de3d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    de41:	0f 92 c0             	setb   %al
    de44:	84 c0                	test   %al,%al
    de46:	74 21                	je     de69 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    de48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de4c:	48 8b 00             	mov    (%rax),%rax
    de4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    de53:	48 c1 e2 03          	shl    $0x3,%rdx
    de57:	48 01 c2             	add    %rax,%rdx
    de5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de5e:	48 89 d6             	mov    %rdx,%rsi
    de61:	48 89 c7             	mov    %rax,%rdi
    de64:	e8 c1 2e 00 00       	call   10d2a <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    de69:	90                   	nop
    de6a:	c9                   	leave
    de6b:	c3                   	ret

000000000000de6c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    de6c:	55                   	push   %rbp
    de6d:	48 89 e5             	mov    %rsp,%rbp
    de70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    de78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de7c:	48 8b 00             	mov    (%rax),%rax
    de7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    de83:	48 c1 e2 03          	shl    $0x3,%rdx
    de87:	48 01 d0             	add    %rdx,%rax
      }
    de8a:	5d                   	pop    %rbp
    de8b:	c3                   	ret

000000000000de8c <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    de8c:	55                   	push   %rbp
    de8d:	48 89 e5             	mov    %rsp,%rbp
    de90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    de98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de9c:	48 8b 00             	mov    (%rax),%rax
    de9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dea3:	48 c1 e2 03          	shl    $0x3,%rdx
    dea7:	48 01 d0             	add    %rdx,%rax
      }
    deaa:	5d                   	pop    %rbp
    deab:	c3                   	ret

000000000000deac <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    deac:	55                   	push   %rbp
    dead:	48 89 e5             	mov    %rsp,%rbp
    deb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    deb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    debc:	48 8b 00             	mov    (%rax),%rax
    debf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dec3:	48 c1 e2 03          	shl    $0x3,%rdx
    dec7:	48 01 d0             	add    %rdx,%rax
      }
    deca:	5d                   	pop    %rbp
    decb:	c3                   	ret

000000000000decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    decc:	55                   	push   %rbp
    decd:	48 89 e5             	mov    %rsp,%rbp
    ded0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    ded4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ded8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dee0:	48 8b 00             	mov    (%rax),%rax
    dee3:	48 29 c2             	sub    %rax,%rdx
    dee6:	48 89 d0             	mov    %rdx,%rax
    dee9:	48 c1 f8 03          	sar    $0x3,%rax
    deed:	5d                   	pop    %rbp
    deee:	c3                   	ret
    deef:	90                   	nop

000000000000def0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
private:
  std::chrono::high_resolution_clock::time_point start;
  std::string time_unit;

public:
  Timer() {
    def0:	55                   	push   %rbp
    def1:	48 89 e5             	mov    %rsp,%rbp
    def4:	53                   	push   %rbx
    def5:	48 83 ec 18          	sub    $0x18,%rsp
    def9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    defd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df01:	48 89 c7             	mov    %rax,%rdi
    df04:	e8 81 2e 00 00       	call   10d8a <_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    df09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df0d:	48 83 c0 08          	add    $0x8,%rax
    df11:	48 89 c7             	mov    %rax,%rdi
    df14:	e8 57 67 ff ff       	call   4670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
    if (std::is_same_v<DurationType, mic>)
      this->time_unit = "μs";
    df19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df1d:	48 83 c0 08          	add    $0x8,%rax
    df21:	48 8d 15 7a c8 00 00 	lea    0xc87a(%rip),%rdx        # 1a7a2 <_ZN6__pstl9execution2v1L5unseqE+0x537>
    df28:	48 89 d6             	mov    %rdx,%rsi
    df2b:	48 89 c7             	mov    %rax,%rdi
    df2e:	e8 1d 67 ff ff       	call   4650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    else if (std::is_same_v<DurationType, hr>)
      this->time_unit = "hrs";
    else
      static_assert("Unkown time unit.");

    this->start = std::chrono::high_resolution_clock::now();
    df33:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    df37:	e8 04 61 ff ff       	call   4040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
    df3c:	48 89 03             	mov    %rax,(%rbx)
  }
    df3f:	eb 1e                	jmp    df5f <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    df41:	48 89 c3             	mov    %rax,%rbx
    df44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df48:	48 83 c0 08          	add    $0x8,%rax
    df4c:	48 89 c7             	mov    %rax,%rdi
    df4f:	e8 dc 62 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    df54:	48 89 d8             	mov    %rbx,%rax
    df57:	48 89 c7             	mov    %rax,%rdi
    df5a:	e8 e1 68 ff ff       	call   4840 <_Unwind_Resume@plt>
    df5f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df63:	c9                   	leave
    df64:	c3                   	ret
    df65:	90                   	nop

000000000000df66 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:

  ~Timer() {
    df66:	55                   	push   %rbp
    df67:	48 89 e5             	mov    %rsp,%rbp
    df6a:	48 83 ec 20          	sub    $0x20,%rsp
    df6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::high_resolution_clock::now();
    df72:	e8 c9 60 ff ff       	call   4040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
    df77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (when_destroyed == announce)
      std::cout
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }
    df7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df7f:	48 83 c0 08          	add    $0x8,%rax
    df83:	48 89 c7             	mov    %rax,%rdi
    df86:	e8 a5 62 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    df8b:	90                   	nop
    df8c:	c9                   	leave
    df8d:	c3                   	ret

000000000000df8e <_ZNK4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:

  double current() const {
    df8e:	55                   	push   %rbp
    df8f:	48 89 e5             	mov    %rsp,%rbp
    df92:	53                   	push   %rbx
    df93:	48 83 ec 38          	sub    $0x38,%rsp
    df97:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::high_resolution_clock::now() - start)
    df9b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    df9f:	e8 9c 60 ff ff       	call   4040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
    dfa4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    dfa8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    dfac:	48 89 de             	mov    %rbx,%rsi
    dfaf:	48 89 c7             	mov    %rax,%rdi
    dfb2:	e8 f3 2d 00 00       	call   10daa <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    dfb7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    dfbb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    dfbf:	48 89 c7             	mov    %rax,%rdi
    dfc2:	e8 28 2e 00 00       	call   10def <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    dfc7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    dfcb:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    dfcf:	48 89 c7             	mov    %rax,%rdi
    dfd2:	e8 33 2e 00 00       	call   10e0a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
    dfd7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dfdb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    dfe0:	66 48 0f 7e c0       	movq   %xmm0,%rax
  }
    dfe5:	66 48 0f 6e c0       	movq   %rax,%xmm0
    dfea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dfee:	c9                   	leave
    dfef:	c3                   	ret

000000000000dff0 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::high_resolution_clock::now(); }
    dff0:	55                   	push   %rbp
    dff1:	48 89 e5             	mov    %rsp,%rbp
    dff4:	53                   	push   %rbx
    dff5:	48 83 ec 18          	sub    $0x18,%rsp
    dff9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dffd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e001:	e8 3a 60 ff ff       	call   4040 <_ZNSt6chrono3_V212system_clock3nowEv@plt>
    e006:	48 89 03             	mov    %rax,(%rbx)
    e009:	90                   	nop
    e00a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e00e:	c9                   	leave
    e00f:	c3                   	ret

000000000000e010 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    e010:	55                   	push   %rbp
    e011:	48 89 e5             	mov    %rsp,%rbp
    e014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e018:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    e01c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e020:	0f b6 10             	movzbl (%rax),%edx
    e023:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e027:	0f b6 00             	movzbl (%rax),%eax
    e02a:	38 c2                	cmp    %al,%dl
    e02c:	0f 94 c0             	sete   %al
    e02f:	5d                   	pop    %rbp
    e030:	c3                   	ret
    e031:	90                   	nop

000000000000e032 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    e032:	55                   	push   %rbp
    e033:	48 89 e5             	mov    %rsp,%rbp
    e036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e03a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e03e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e042:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e046:	48 89 10             	mov    %rdx,(%rax)
    e049:	90                   	nop
    e04a:	5d                   	pop    %rbp
    e04b:	c3                   	ret

000000000000e04c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    e04c:	55                   	push   %rbp
    e04d:	48 89 e5             	mov    %rsp,%rbp
    e050:	48 83 ec 10          	sub    $0x10,%rsp
    e054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e05c:	48 8b 00             	mov    (%rax),%rax
    e05f:	48 85 c0             	test   %rax,%rax
    e062:	74 0f                	je     e073 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    e064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e068:	48 8b 00             	mov    (%rax),%rax
    e06b:	48 89 c7             	mov    %rax,%rdi
    e06e:	e8 0d 65 ff ff       	call   4580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    e073:	90                   	nop
    e074:	c9                   	leave
    e075:	c3                   	ret

000000000000e076 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    e076:	55                   	push   %rbp
    e077:	48 89 e5             	mov    %rsp,%rbp
    e07a:	48 83 ec 40          	sub    $0x40,%rsp
    e07e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e082:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e086:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    e08a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e08e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e092:	48 89 d6             	mov    %rdx,%rsi
    e095:	48 89 c7             	mov    %rax,%rdi
    e098:	e8 89 2d 00 00       	call   10e26 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    e09d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    e0a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e0a5:	48 83 f8 0f          	cmp    $0xf,%rax
    e0a9:	76 3f                	jbe    e0ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    e0ab:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    e0af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e0b3:	ba 00 00 00 00       	mov    $0x0,%edx
    e0b8:	48 89 ce             	mov    %rcx,%rsi
    e0bb:	48 89 c7             	mov    %rax,%rdi
    e0be:	e8 ad 67 ff ff       	call   4870 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    e0c3:	48 89 c2             	mov    %rax,%rdx
    e0c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e0ca:	48 89 d6             	mov    %rdx,%rsi
    e0cd:	48 89 c7             	mov    %rax,%rdi
    e0d0:	e8 6b 62 ff ff       	call   4340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    e0d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e0d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e0dd:	48 89 d6             	mov    %rdx,%rsi
    e0e0:	48 89 c7             	mov    %rax,%rdi
    e0e3:	e8 e8 67 ff ff       	call   48d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    e0e8:	eb 15                	jmp    e0ff <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    e0ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e0ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    e0f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0f6:	48 89 c7             	mov    %rax,%rdi
    e0f9:	e8 e2 61 ff ff       	call   42e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    e0fe:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    e0ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e103:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e107:	48 89 d6             	mov    %rdx,%rsi
    e10a:	48 89 c7             	mov    %rax,%rdi
    e10d:	e8 20 ff ff ff       	call   e032 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    e112:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e116:	48 89 c7             	mov    %rax,%rdi
    e119:	e8 c2 63 ff ff       	call   44e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    e11e:	48 89 c1             	mov    %rax,%rcx
    e121:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e125:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e129:	48 89 c6             	mov    %rax,%rsi
    e12c:	48 89 cf             	mov    %rcx,%rdi
    e12f:	e8 bc 63 ff ff       	call   44f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    e134:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e13b:	00 

	_M_set_length(__dnew);
    e13c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e140:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e144:	48 89 d6             	mov    %rdx,%rsi
    e147:	48 89 c7             	mov    %rax,%rdi
    e14a:	e8 01 61 ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    e14f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e153:	48 89 c7             	mov    %rax,%rdi
    e156:	e8 f1 fe ff ff       	call   e04c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    e15b:	c9                   	leave
    e15c:	c3                   	ret
    e15d:	90                   	nop

000000000000e15e <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e15e:	55                   	push   %rbp
    e15f:	48 89 e5             	mov    %rsp,%rbp
    e162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e166:	90                   	nop
    e167:	5d                   	pop    %rbp
    e168:	c3                   	ret
    e169:	90                   	nop

000000000000e16a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e16a:	55                   	push   %rbp
    e16b:	48 89 e5             	mov    %rsp,%rbp
    e16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e172:	90                   	nop
    e173:	5d                   	pop    %rbp
    e174:	c3                   	ret
    e175:	90                   	nop

000000000000e176 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e176:	55                   	push   %rbp
    e177:	48 89 e5             	mov    %rsp,%rbp
    e17a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e17e:	90                   	nop
    e17f:	5d                   	pop    %rbp
    e180:	c3                   	ret

000000000000e181 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e181:	55                   	push   %rbp
    e182:	48 89 e5             	mov    %rsp,%rbp
    e185:	53                   	push   %rbx
    e186:	48 83 ec 28          	sub    $0x28,%rsp
    e18a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e18e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e192:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e196:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e19a:	48 89 d6             	mov    %rdx,%rsi
    e19d:	48 89 c7             	mov    %rax,%rdi
    e1a0:	e8 25 01 00 00       	call   e2ca <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    e1a5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e1a9:	48 89 c7             	mov    %rax,%rdi
    e1ac:	e8 a6 2c 00 00       	call   10e57 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    e1b1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e1b5:	0f 92 c3             	setb   %bl
    e1b8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e1bc:	48 89 c7             	mov    %rax,%rdi
    e1bf:	e8 80 df ff ff       	call   c144 <_ZNSaI21VkExtensionPropertiesED1Ev>
    e1c4:	84 db                	test   %bl,%bl
    e1c6:	74 0f                	je     e1d7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    e1c8:	48 8d 05 d9 c5 00 00 	lea    0xc5d9(%rip),%rax        # 1a7a8 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    e1cf:	48 89 c7             	mov    %rax,%rdi
    e1d2:	e8 d9 5f ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    e1d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e1db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e1df:	c9                   	leave
    e1e0:	c3                   	ret
    e1e1:	90                   	nop

000000000000e1e2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    e1e2:	55                   	push   %rbp
    e1e3:	48 89 e5             	mov    %rsp,%rbp
    e1e6:	53                   	push   %rbx
    e1e7:	48 83 ec 28          	sub    $0x28,%rsp
    e1eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e1ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e1f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    e1f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1fb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e1ff:	48 89 d6             	mov    %rdx,%rsi
    e202:	48 89 c7             	mov    %rax,%rdi
    e205:	e8 90 2c 00 00       	call   10e9a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    e20a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e20e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e212:	48 89 d6             	mov    %rdx,%rsi
    e215:	48 89 c7             	mov    %rax,%rdi
    e218:	e8 af 2c 00 00       	call   10ecc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    e21d:	eb 1a                	jmp    e239 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    e21f:	48 89 c3             	mov    %rax,%rbx
    e222:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e226:	48 89 c7             	mov    %rax,%rdi
    e229:	e8 78 db ff ff       	call   bda6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    e22e:	48 89 d8             	mov    %rbx,%rax
    e231:	48 89 c7             	mov    %rax,%rdi
    e234:	e8 07 66 ff ff       	call   4840 <_Unwind_Resume@plt>
    e239:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e23d:	c9                   	leave
    e23e:	c3                   	ret
    e23f:	90                   	nop

000000000000e240 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    e240:	55                   	push   %rbp
    e241:	48 89 e5             	mov    %rsp,%rbp
    e244:	48 83 ec 10          	sub    $0x10,%rsp
    e248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e24c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    e250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e254:	48 89 c7             	mov    %rax,%rdi
    e257:	e8 24 00 00 00       	call   e280 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    e25c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    e25f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e263:	48 8b 00             	mov    (%rax),%rax
    e266:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e26a:	48 89 ce             	mov    %rcx,%rsi
    e26d:	48 89 c7             	mov    %rax,%rdi
    e270:	e8 b8 2c 00 00       	call   10f2d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    e275:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e279:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    e27d:	90                   	nop
    e27e:	c9                   	leave
    e27f:	c3                   	ret

000000000000e280 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e280:	55                   	push   %rbp
    e281:	48 89 e5             	mov    %rsp,%rbp
    e284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e28c:	5d                   	pop    %rbp
    e28d:	c3                   	ret

000000000000e28e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e28e:	55                   	push   %rbp
    e28f:	48 89 e5             	mov    %rsp,%rbp
    e292:	48 83 ec 20          	sub    $0x20,%rsp
    e296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e29a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e29e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e2a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2aa:	48 89 d6             	mov    %rdx,%rsi
    e2ad:	48 89 c7             	mov    %rax,%rdi
    e2b0:	e8 a1 2c 00 00       	call   10f56 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    e2b5:	90                   	nop
    e2b6:	c9                   	leave
    e2b7:	c3                   	ret

000000000000e2b8 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    e2b8:	55                   	push   %rbp
    e2b9:	48 89 e5             	mov    %rsp,%rbp
    e2bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    e2c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e2c8:	5d                   	pop    %rbp
    e2c9:	c3                   	ret

000000000000e2ca <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    e2ca:	55                   	push   %rbp
    e2cb:	48 89 e5             	mov    %rsp,%rbp
    e2ce:	48 83 ec 10          	sub    $0x10,%rsp
    e2d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    e2da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2e2:	48 89 d6             	mov    %rdx,%rsi
    e2e5:	48 89 c7             	mov    %rax,%rdi
    e2e8:	e8 8f 2c 00 00       	call   10f7c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    e2ed:	90                   	nop
    e2ee:	c9                   	leave
    e2ef:	c3                   	ret

000000000000e2f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    e2f0:	55                   	push   %rbp
    e2f1:	48 89 e5             	mov    %rsp,%rbp
    e2f4:	48 83 ec 20          	sub    $0x20,%rsp
    e2f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e300:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e304:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e309:	74 17                	je     e322 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e30b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e30f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e313:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e317:	48 89 ce             	mov    %rcx,%rsi
    e31a:	48 89 c7             	mov    %rax,%rdi
    e31d:	e8 69 2c 00 00       	call   10f8b <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    e322:	90                   	nop
    e323:	c9                   	leave
    e324:	c3                   	ret

000000000000e325 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    e325:	55                   	push   %rbp
    e326:	48 89 e5             	mov    %rsp,%rbp
    e329:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    e32d:	90                   	nop
    e32e:	5d                   	pop    %rbp
    e32f:	c3                   	ret

000000000000e330 <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
    e330:	55                   	push   %rbp
    e331:	48 89 e5             	mov    %rsp,%rbp
    e334:	48 83 ec 10          	sub    $0x10,%rsp
    e338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e33c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    e340:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e344:	48 89 c7             	mov    %rax,%rdi
    e347:	e8 d9 ff ff ff       	call   e325 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
    e34c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e350:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e354:	48 89 d6             	mov    %rdx,%rsi
    e357:	48 89 c7             	mov    %rax,%rdi
    e35a:	e8 5a 2c 00 00       	call   10fb9 <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
    e35f:	c9                   	leave
    e360:	c3                   	ret
    e361:	90                   	nop

000000000000e362 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    e362:	55                   	push   %rbp
    e363:	48 89 e5             	mov    %rsp,%rbp
    e366:	53                   	push   %rbx
    e367:	48 83 ec 38          	sub    $0x38,%rsp
    e36b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e36f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e373:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    e377:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e37b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e37f:	48 89 d6             	mov    %rdx,%rsi
    e382:	48 89 c7             	mov    %rax,%rdi
    e385:	e8 a6 ff ff ff       	call   e330 <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>
    e38a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    e38e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e392:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e396:	48 89 c7             	mov    %rax,%rdi
    e399:	e8 6c 78 ff ff       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e39e:	48 89 c2             	mov    %rax,%rdx
    e3a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3a5:	48 89 d6             	mov    %rdx,%rsi
    e3a8:	48 89 c7             	mov    %rax,%rdi
    e3ab:	e8 4b 7f ff ff       	call   62fb <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    e3b0:	48 89 c6             	mov    %rax,%rsi
    e3b3:	48 89 df             	mov    %rbx,%rdi
    e3b6:	e8 a1 7f ff ff       	call   635c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    e3bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e3bf:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    e3c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3c6:	48 8b 00             	mov    (%rax),%rax
    e3c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3cd:	48 c1 e2 03          	shl    $0x3,%rdx
    e3d1:	48 01 c2             	add    %rax,%rdx
    e3d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    e3dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3e0:	48 89 c7             	mov    %rax,%rdi
    e3e3:	e8 22 78 ff ff       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e3e8:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    e3eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3ef:	48 8b 10             	mov    (%rax),%rdx
    e3f2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    e3f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e3fa:	48 89 c7             	mov    %rax,%rdi
    e3fd:	e8 d1 2b 00 00       	call   10fd3 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    e402:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e406:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    e40a:	90                   	nop
    e40b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e40f:	c9                   	leave
    e410:	c3                   	ret

000000000000e411 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    e411:	55                   	push   %rbp
    e412:	48 89 e5             	mov    %rsp,%rbp
    e415:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    e419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e41d:	5d                   	pop    %rbp
    e41e:	c3                   	ret
    e41f:	90                   	nop

000000000000e420 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    e420:	55                   	push   %rbp
    e421:	48 89 e5             	mov    %rsp,%rbp
    e424:	53                   	push   %rbx
    e425:	48 83 ec 18          	sub    $0x18,%rsp
    e429:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e42d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    e431:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e435:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e439:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e43d:	48 8b 40 10          	mov    0x10(%rax),%rax
    e441:	48 39 c2             	cmp    %rax,%rdx
    e444:	74 3c                	je     e482 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    e446:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e44a:	48 89 c7             	mov    %rax,%rdi
    e44d:	e8 b2 2b 00 00       	call   11004 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    e452:	48 89 c2             	mov    %rax,%rdx
    e455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e459:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e45d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e461:	48 89 ce             	mov    %rcx,%rsi
    e464:	48 89 c7             	mov    %rax,%rdi
    e467:	e8 a6 2b 00 00       	call   11012 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    e46c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e470:	48 8b 40 08          	mov    0x8(%rax),%rax
    e474:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e478:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e47c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e480:	eb 30                	jmp    e4b2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    e482:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e486:	48 89 c7             	mov    %rax,%rdi
    e489:	e8 76 2b 00 00       	call   11004 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    e48e:	48 89 c3             	mov    %rax,%rbx
    e491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e495:	48 89 c7             	mov    %rax,%rdi
    e498:	e8 81 e2 ff ff       	call   c71e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    e49d:	48 89 c1             	mov    %rax,%rcx
    e4a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4a4:	48 89 da             	mov    %rbx,%rdx
    e4a7:	48 89 ce             	mov    %rcx,%rsi
    e4aa:	48 89 c7             	mov    %rax,%rdi
    e4ad:	e8 9a 2b 00 00       	call   1104c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    e4b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4b6:	48 89 c7             	mov    %rax,%rdi
    e4b9:	e8 20 2d 00 00       	call   111de <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    e4be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e4c2:	c9                   	leave
    e4c3:	c3                   	ret

000000000000e4c4 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e4c4:	55                   	push   %rbp
    e4c5:	48 89 e5             	mov    %rsp,%rbp
    e4c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4cc:	90                   	nop
    e4cd:	5d                   	pop    %rbp
    e4ce:	c3                   	ret
    e4cf:	90                   	nop

000000000000e4d0 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e4d0:	55                   	push   %rbp
    e4d1:	48 89 e5             	mov    %rsp,%rbp
    e4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4d8:	90                   	nop
    e4d9:	5d                   	pop    %rbp
    e4da:	c3                   	ret

000000000000e4db <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e4db:	55                   	push   %rbp
    e4dc:	48 89 e5             	mov    %rsp,%rbp
    e4df:	53                   	push   %rbx
    e4e0:	48 83 ec 28          	sub    $0x28,%rsp
    e4e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e4e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e4ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e4f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e4f4:	48 89 d6             	mov    %rdx,%rsi
    e4f7:	48 89 c7             	mov    %rax,%rdi
    e4fa:	e8 61 2d 00 00       	call   11260 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    e4ff:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e503:	48 89 c7             	mov    %rax,%rdi
    e506:	e8 12 2d 00 00       	call   1121d <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    e50b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e50f:	0f 92 c3             	setb   %bl
    e512:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e516:	48 89 c7             	mov    %rax,%rdi
    e519:	e8 38 de ff ff       	call   c356 <_ZNSaI17VkLayerPropertiesED1Ev>
    e51e:	84 db                	test   %bl,%bl
    e520:	74 0f                	je     e531 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    e522:	48 8d 05 7f c2 00 00 	lea    0xc27f(%rip),%rax        # 1a7a8 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    e529:	48 89 c7             	mov    %rax,%rdi
    e52c:	e8 7f 5c ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    e531:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e535:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e539:	c9                   	leave
    e53a:	c3                   	ret
    e53b:	90                   	nop

000000000000e53c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    e53c:	55                   	push   %rbp
    e53d:	48 89 e5             	mov    %rsp,%rbp
    e540:	48 83 ec 10          	sub    $0x10,%rsp
    e544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e54c:	48 89 c7             	mov    %rax,%rdi
    e54f:	e8 02 de ff ff       	call   c356 <_ZNSaI17VkLayerPropertiesED1Ev>
    e554:	90                   	nop
    e555:	c9                   	leave
    e556:	c3                   	ret
    e557:	90                   	nop

000000000000e558 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    e558:	55                   	push   %rbp
    e559:	48 89 e5             	mov    %rsp,%rbp
    e55c:	53                   	push   %rbx
    e55d:	48 83 ec 28          	sub    $0x28,%rsp
    e561:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e565:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e569:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    e56d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e571:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e575:	48 89 d6             	mov    %rdx,%rsi
    e578:	48 89 c7             	mov    %rax,%rdi
    e57b:	e8 06 2d 00 00       	call   11286 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    e580:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e584:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e588:	48 89 d6             	mov    %rdx,%rsi
    e58b:	48 89 c7             	mov    %rax,%rdi
    e58e:	e8 25 2d 00 00       	call   112b8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    e593:	eb 1a                	jmp    e5af <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    e595:	48 89 c3             	mov    %rax,%rbx
    e598:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e59c:	48 89 c7             	mov    %rax,%rdi
    e59f:	e8 98 ff ff ff       	call   e53c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    e5a4:	48 89 d8             	mov    %rbx,%rax
    e5a7:	48 89 c7             	mov    %rax,%rdi
    e5aa:	e8 91 62 ff ff       	call   4840 <_Unwind_Resume@plt>
    e5af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e5b3:	c9                   	leave
    e5b4:	c3                   	ret
    e5b5:	90                   	nop

000000000000e5b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e5b6:	55                   	push   %rbp
    e5b7:	48 89 e5             	mov    %rsp,%rbp
    e5ba:	48 83 ec 10          	sub    $0x10,%rsp
    e5be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e5ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5ce:	48 8b 00             	mov    (%rax),%rax
    e5d1:	48 29 c2             	sub    %rax,%rdx
    e5d4:	48 c1 fa 03          	sar    $0x3,%rdx
    e5d8:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    e5df:	fc c0 0f 
    e5e2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    e5e6:	48 89 c2             	mov    %rax,%rdx
    e5e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5ed:	48 8b 08             	mov    (%rax),%rcx
    e5f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5f4:	48 89 ce             	mov    %rcx,%rsi
    e5f7:	48 89 c7             	mov    %rax,%rdi
    e5fa:	e8 1b 2d 00 00       	call   1131a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    e5ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e603:	48 89 c7             	mov    %rax,%rdi
    e606:	e8 31 ff ff ff       	call   e53c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    e60b:	90                   	nop
    e60c:	c9                   	leave
    e60d:	c3                   	ret

000000000000e60e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    e60e:	55                   	push   %rbp
    e60f:	48 89 e5             	mov    %rsp,%rbp
    e612:	48 83 ec 10          	sub    $0x10,%rsp
    e616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e61a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    e61e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e622:	48 89 c7             	mov    %rax,%rdi
    e625:	e8 24 00 00 00       	call   e64e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    e62a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    e62d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e631:	48 8b 00             	mov    (%rax),%rax
    e634:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e638:	48 89 ce             	mov    %rcx,%rsi
    e63b:	48 89 c7             	mov    %rax,%rdi
    e63e:	e8 0c 2d 00 00       	call   1134f <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    e643:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e647:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    e64b:	90                   	nop
    e64c:	c9                   	leave
    e64d:	c3                   	ret

000000000000e64e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e64e:	55                   	push   %rbp
    e64f:	48 89 e5             	mov    %rsp,%rbp
    e652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e65a:	5d                   	pop    %rbp
    e65b:	c3                   	ret

000000000000e65c <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e65c:	55                   	push   %rbp
    e65d:	48 89 e5             	mov    %rsp,%rbp
    e660:	48 83 ec 20          	sub    $0x20,%rsp
    e664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e66c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e670:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e678:	48 89 d6             	mov    %rdx,%rsi
    e67b:	48 89 c7             	mov    %rax,%rdi
    e67e:	e8 f5 2c 00 00       	call   11378 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    e683:	90                   	nop
    e684:	c9                   	leave
    e685:	c3                   	ret

000000000000e686 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    e686:	55                   	push   %rbp
    e687:	48 89 e5             	mov    %rsp,%rbp
    e68a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e68e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    e692:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e696:	5d                   	pop    %rbp
    e697:	c3                   	ret

000000000000e698 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e698:	55                   	push   %rbp
    e699:	48 89 e5             	mov    %rsp,%rbp
    e69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e6a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e6a8:	48 8b 10             	mov    (%rax),%rdx
    e6ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6af:	48 89 10             	mov    %rdx,(%rax)
    e6b2:	90                   	nop
    e6b3:	5d                   	pop    %rbp
    e6b4:	c3                   	ret
    e6b5:	90                   	nop

000000000000e6b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e6b6:	55                   	push   %rbp
    e6b7:	48 89 e5             	mov    %rsp,%rbp
    e6ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e6be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6c2:	5d                   	pop    %rbp
    e6c3:	c3                   	ret

000000000000e6c4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e6c4:	55                   	push   %rbp
    e6c5:	48 89 e5             	mov    %rsp,%rbp
    e6c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e6d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e6d4:	48 8b 10             	mov    (%rax),%rdx
    e6d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6db:	48 89 10             	mov    %rdx,(%rax)
    e6de:	90                   	nop
    e6df:	5d                   	pop    %rbp
    e6e0:	c3                   	ret
    e6e1:	90                   	nop

000000000000e6e2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e6e2:	55                   	push   %rbp
    e6e3:	48 89 e5             	mov    %rsp,%rbp
    e6e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6ee:	5d                   	pop    %rbp
    e6ef:	c3                   	ret

000000000000e6f0 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    e6f0:	55                   	push   %rbp
    e6f1:	48 89 e5             	mov    %rsp,%rbp
    e6f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    e6fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e700:	5d                   	pop    %rbp
    e701:	c3                   	ret

000000000000e702 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e702:	55                   	push   %rbp
    e703:	48 89 e5             	mov    %rsp,%rbp
    e706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e70a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e70e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e712:	48 8b 10             	mov    (%rax),%rdx
    e715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e719:	48 89 10             	mov    %rdx,(%rax)
    e71c:	90                   	nop
    e71d:	5d                   	pop    %rbp
    e71e:	c3                   	ret
    e71f:	90                   	nop

000000000000e720 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e720:	55                   	push   %rbp
    e721:	48 89 e5             	mov    %rsp,%rbp
    e724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e72c:	5d                   	pop    %rbp
    e72d:	c3                   	ret

000000000000e72e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e72e:	55                   	push   %rbp
    e72f:	48 89 e5             	mov    %rsp,%rbp
    e732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e73a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e73e:	48 8b 10             	mov    (%rax),%rdx
    e741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e745:	48 89 10             	mov    %rdx,(%rax)
    e748:	90                   	nop
    e749:	5d                   	pop    %rbp
    e74a:	c3                   	ret
    e74b:	90                   	nop

000000000000e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e74c:	55                   	push   %rbp
    e74d:	48 89 e5             	mov    %rsp,%rbp
    e750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e758:	5d                   	pop    %rbp
    e759:	c3                   	ret

000000000000e75a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    e75a:	55                   	push   %rbp
    e75b:	48 89 e5             	mov    %rsp,%rbp
    e75e:	48 83 ec 10          	sub    $0x10,%rsp
    e762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    e766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e76a:	48 89 c7             	mov    %rax,%rdi
    e76d:	e8 2c 2c 00 00       	call   1139e <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    e772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e776:	48 89 c7             	mov    %rax,%rdi
    e779:	e8 3c 2c 00 00       	call   113ba <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    e77e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e782:	48 83 c0 08          	add    $0x8,%rax
    e786:	48 89 c7             	mov    %rax,%rdi
    e789:	e8 fc d4 ff ff       	call   bc8a <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    e78e:	90                   	nop
    e78f:	c9                   	leave
    e790:	c3                   	ret
    e791:	90                   	nop

000000000000e792 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    e792:	55                   	push   %rbp
    e793:	48 89 e5             	mov    %rsp,%rbp
    e796:	48 83 ec 10          	sub    $0x10,%rsp
    e79a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e79e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7a2:	48 89 c7             	mov    %rax,%rdi
    e7a5:	e8 1c 2c 00 00       	call   113c6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    e7aa:	90                   	nop
    e7ab:	c9                   	leave
    e7ac:	c3                   	ret
    e7ad:	90                   	nop

000000000000e7ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>:
	    _M_insert_unique_(end(), *__first, __an);
	}

      template<typename _InputIterator>
	__enable_if_t<!__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    e7ae:	55                   	push   %rbp
    e7af:	48 89 e5             	mov    %rsp,%rbp
    e7b2:	48 83 ec 20          	sub    $0x20,%rsp
    e7b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e7be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	{
	  for (; __first != __last; ++__first)
    e7c2:	eb 2a                	jmp    e7ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x40>
	    _M_emplace_unique(*__first);
    e7c4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    e7c8:	48 89 c7             	mov    %rax,%rdi
    e7cb:	e8 2a dd ff ff       	call   c4fa <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e7d0:	48 89 c2             	mov    %rax,%rdx
    e7d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7d7:	48 89 d6             	mov    %rdx,%rsi
    e7da:	48 89 c7             	mov    %rax,%rdi
    e7dd:	e8 f0 2b 00 00       	call   113d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>
	  for (; __first != __last; ++__first)
    e7e2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    e7e6:	48 89 c7             	mov    %rax,%rdi
    e7e9:	e8 ec dc ff ff       	call   c4da <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    e7ee:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    e7f2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    e7f6:	48 89 d6             	mov    %rdx,%rsi
    e7f9:	48 89 c7             	mov    %rax,%rdi
    e7fc:	e8 9e dc ff ff       	call   c49f <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    e801:	84 c0                	test   %al,%al
    e803:	75 bf                	jne    e7c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x16>
	}
    e805:	90                   	nop
    e806:	90                   	nop
    e807:	c9                   	leave
    e808:	c3                   	ret
    e809:	90                   	nop

000000000000e80a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e80a:	55                   	push   %rbp
    e80b:	48 89 e5             	mov    %rsp,%rbp
    e80e:	48 83 ec 20          	sub    $0x20,%rsp
    e812:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e816:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    e81a:	eb 49                	jmp    e865 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    e81c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e820:	48 89 c7             	mov    %rax,%rdi
    e823:	e8 ce 2c 00 00       	call   114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    e828:	48 89 c2             	mov    %rax,%rdx
    e82b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e82f:	48 89 d6             	mov    %rdx,%rsi
    e832:	48 89 c7             	mov    %rax,%rdi
    e835:	e8 d0 ff ff ff       	call   e80a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	  _Link_type __y = _S_left(__x);
    e83a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e83e:	48 89 c7             	mov    %rax,%rdi
    e841:	e8 c2 2c 00 00       	call   11508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    e846:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    e84a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e84e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e852:	48 89 d6             	mov    %rdx,%rsi
    e855:	48 89 c7             	mov    %rax,%rdi
    e858:	e8 bd 2c 00 00       	call   1151a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	  __x = __y;
    e85d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e861:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    e865:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e86a:	75 b0                	jne    e81c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x12>
	}
    }
    e86c:	90                   	nop
    e86d:	90                   	nop
    e86e:	c9                   	leave
    e86f:	c3                   	ret

000000000000e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    e870:	55                   	push   %rbp
    e871:	48 89 e5             	mov    %rsp,%rbp
    e874:	48 83 ec 10          	sub    $0x10,%rsp
    e878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    e87c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e880:	48 89 c7             	mov    %rax,%rdi
    e883:	e8 cc 2c 00 00       	call   11554 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>
    e888:	c9                   	leave
    e889:	c3                   	ret

000000000000e88a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e88a:	55                   	push   %rbp
    e88b:	48 89 e5             	mov    %rsp,%rbp
    e88e:	48 83 ec 40          	sub    $0x40,%rsp
    e892:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e896:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
    e89a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e89e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8a2:	48 89 d6             	mov    %rdx,%rsi
    e8a5:	48 89 c7             	mov    %rax,%rdi
    e8a8:	e8 b9 2c 00 00       	call   11566 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>
    e8ad:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e8b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const size_type __old_size = size();
    e8b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8b9:	48 89 c7             	mov    %rax,%rdi
    e8bc:	e8 43 2e 00 00       	call   11704 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    e8c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_erase_aux(__p.first, __p.second);
    e8c5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e8c9:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e8cd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e8d1:	48 89 d6             	mov    %rdx,%rsi
    e8d4:	48 89 c7             	mov    %rax,%rdi
    e8d7:	e8 3a 2e 00 00       	call   11716 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    e8dc:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e8e0:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    e8e4:	48 89 d6             	mov    %rdx,%rsi
    e8e7:	48 89 c7             	mov    %rax,%rdi
    e8ea:	e8 27 2e 00 00       	call   11716 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    e8ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e8f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e8f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8fb:	48 89 ce             	mov    %rcx,%rsi
    e8fe:	48 89 c7             	mov    %rax,%rdi
    e901:	e8 2e 2e 00 00       	call   11734 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>
      return __old_size - size();
    e906:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e90a:	48 89 c7             	mov    %rax,%rdi
    e90d:	e8 f2 2d 00 00       	call   11704 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    e912:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e916:	48 29 c2             	sub    %rax,%rdx
    e919:	48 89 d0             	mov    %rdx,%rax
    }
    e91c:	c9                   	leave
    e91d:	c3                   	ret

000000000000e91e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    e91e:	55                   	push   %rbp
    e91f:	48 89 e5             	mov    %rsp,%rbp
    e922:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count == 0; }
    e926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e92a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e92e:	48 85 c0             	test   %rax,%rax
    e931:	0f 94 c0             	sete   %al
    e934:	5d                   	pop    %rbp
    e935:	c3                   	ret

000000000000e936 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    e936:	55                   	push   %rbp
    e937:	48 89 e5             	mov    %rsp,%rbp
    e93a:	48 83 ec 10          	sub    $0x10,%rsp
    e93e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e946:	48 89 c7             	mov    %rax,%rdi
    e949:	e8 ca 2e 00 00       	call   11818 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    e94e:	90                   	nop
    e94f:	c9                   	leave
    e950:	c3                   	ret
    e951:	90                   	nop

000000000000e952 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    e952:	55                   	push   %rbp
    e953:	48 89 e5             	mov    %rsp,%rbp
    e956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    e95a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e95e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e969:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e970:	00 
    e971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e975:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    e97c:	00 
	{ }
    e97d:	90                   	nop
    e97e:	5d                   	pop    %rbp
    e97f:	c3                   	ret

000000000000e980 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
    e980:	55                   	push   %rbp
    e981:	48 89 e5             	mov    %rsp,%rbp
    e984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e988:	90                   	nop
    e989:	5d                   	pop    %rbp
    e98a:	c3                   	ret
    e98b:	90                   	nop

000000000000e98c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    e98c:	55                   	push   %rbp
    e98d:	48 89 e5             	mov    %rsp,%rbp
    e990:	48 83 ec 20          	sub    $0x20,%rsp
    e994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e998:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e99c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e9a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e9a5:	74 17                	je     e9be <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e9a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e9af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e9b3:	48 89 ce             	mov    %rcx,%rsi
    e9b6:	48 89 c7             	mov    %rax,%rdi
    e9b9:	e8 65 2e 00 00       	call   11823 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    e9be:	90                   	nop
    e9bf:	c9                   	leave
    e9c0:	c3                   	ret
    e9c1:	90                   	nop

000000000000e9c2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e9c2:	55                   	push   %rbp
    e9c3:	48 89 e5             	mov    %rsp,%rbp
    e9c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e9ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ce:	5d                   	pop    %rbp
    e9cf:	c3                   	ret

000000000000e9d0 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e9d0:	55                   	push   %rbp
    e9d1:	48 89 e5             	mov    %rsp,%rbp
    e9d4:	48 83 ec 20          	sub    $0x20,%rsp
    e9d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e9e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e9e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e9e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ec:	48 89 d6             	mov    %rdx,%rsi
    e9ef:	48 89 c7             	mov    %rax,%rdi
    e9f2:	e8 5a 2e 00 00       	call   11851 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    e9f7:	90                   	nop
    e9f8:	c9                   	leave
    e9f9:	c3                   	ret

000000000000e9fa <_ZNSaI16VkPresentModeKHREC1Ev>:
    e9fa:	55                   	push   %rbp
    e9fb:	48 89 e5             	mov    %rsp,%rbp
    e9fe:	48 83 ec 10          	sub    $0x10,%rsp
    ea02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea0a:	48 89 c7             	mov    %rax,%rdi
    ea0d:	e8 66 2e 00 00       	call   11878 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    ea12:	90                   	nop
    ea13:	c9                   	leave
    ea14:	c3                   	ret
    ea15:	90                   	nop

000000000000ea16 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ea16:	55                   	push   %rbp
    ea17:	48 89 e5             	mov    %rsp,%rbp
    ea1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ea1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea22:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ea29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ea34:	00 
    ea35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea39:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ea40:	00 
	{ }
    ea41:	90                   	nop
    ea42:	5d                   	pop    %rbp
    ea43:	c3                   	ret

000000000000ea44 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
    ea44:	55                   	push   %rbp
    ea45:	48 89 e5             	mov    %rsp,%rbp
    ea48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea4c:	90                   	nop
    ea4d:	5d                   	pop    %rbp
    ea4e:	c3                   	ret
    ea4f:	90                   	nop

000000000000ea50 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    ea50:	55                   	push   %rbp
    ea51:	48 89 e5             	mov    %rsp,%rbp
    ea54:	48 83 ec 20          	sub    $0x20,%rsp
    ea58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ea64:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ea69:	74 17                	je     ea82 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ea6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ea73:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ea77:	48 89 ce             	mov    %rcx,%rsi
    ea7a:	48 89 c7             	mov    %rax,%rdi
    ea7d:	e8 01 2e 00 00       	call   11883 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    ea82:	90                   	nop
    ea83:	c9                   	leave
    ea84:	c3                   	ret
    ea85:	90                   	nop

000000000000ea86 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ea86:	55                   	push   %rbp
    ea87:	48 89 e5             	mov    %rsp,%rbp
    ea8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ea8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea92:	5d                   	pop    %rbp
    ea93:	c3                   	ret

000000000000ea94 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ea94:	55                   	push   %rbp
    ea95:	48 89 e5             	mov    %rsp,%rbp
    ea98:	48 83 ec 20          	sub    $0x20,%rsp
    ea9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eaa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eaa4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    eaa8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eaac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eab0:	48 89 d6             	mov    %rdx,%rsi
    eab3:	48 89 c7             	mov    %rax,%rdi
    eab6:	e8 f6 2d 00 00       	call   118b1 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    eabb:	90                   	nop
    eabc:	c9                   	leave
    eabd:	c3                   	ret

000000000000eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    eabe:	55                   	push   %rbp
    eabf:	48 89 e5             	mov    %rsp,%rbp
    eac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    eac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    eace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ead2:	48 8b 00             	mov    (%rax),%rax
    ead5:	48 29 c2             	sub    %rax,%rdx
    ead8:	48 89 d0             	mov    %rdx,%rax
    eadb:	48 c1 f8 03          	sar    $0x3,%rax
    eadf:	5d                   	pop    %rbp
    eae0:	c3                   	ret
    eae1:	90                   	nop

000000000000eae2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    eae2:	55                   	push   %rbp
    eae3:	48 89 e5             	mov    %rsp,%rbp
    eae6:	53                   	push   %rbx
    eae7:	48 83 ec 38          	sub    $0x38,%rsp
    eaeb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    eaef:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    eaf3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    eaf8:	0f 84 e7 01 00 00    	je     ece5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    eafe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb02:	48 89 c7             	mov    %rax,%rdi
    eb05:	e8 b4 ff ff ff       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    eb0a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    eb0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb12:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    eb16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb1a:	48 8b 40 08          	mov    0x8(%rax),%rax
    eb1e:	48 29 c2             	sub    %rax,%rdx
    eb21:	48 89 d0             	mov    %rdx,%rax
    eb24:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    eb28:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    eb2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb30:	48 89 c7             	mov    %rax,%rdi
    eb33:	e8 a0 2d 00 00       	call   118d8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    eb38:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    eb3c:	72 16                	jb     eb54 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x72>
    eb3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb42:	48 89 c7             	mov    %rax,%rdi
    eb45:	e8 8e 2d 00 00       	call   118d8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    eb4a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    eb4e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    eb52:	73 07                	jae    eb5b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x79>
    eb54:	b8 01 00 00 00       	mov    $0x1,%eax
    eb59:	eb 05                	jmp    eb60 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x7e>
    eb5b:	b8 00 00 00 00       	mov    $0x0,%eax
    eb60:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    eb62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb66:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    eb6a:	72 33                	jb     eb9f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    eb6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb70:	48 89 c7             	mov    %rax,%rdi
    eb73:	e8 4a fe ff ff       	call   e9c2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    eb78:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    eb7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb7f:	48 8b 40 08          	mov    0x8(%rax),%rax
    eb83:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    eb87:	48 89 ce             	mov    %rcx,%rsi
    eb8a:	48 89 c7             	mov    %rax,%rdi
    eb8d:	e8 68 2d 00 00       	call   118fa <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    eb92:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eb96:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    eb9a:	e9 46 01 00 00       	jmp    ece5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    eb9f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    eba3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eba7:	48 8d 15 2b bc 00 00 	lea    0xbc2b(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
    ebae:	48 89 ce             	mov    %rcx,%rsi
    ebb1:	48 89 c7             	mov    %rax,%rdi
    ebb4:	e8 6b 2d 00 00       	call   11924 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>
    ebb9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    ebbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ebc1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ebc5:	48 89 d6             	mov    %rdx,%rsi
    ebc8:	48 89 c7             	mov    %rax,%rdi
    ebcb:	e8 1c 2e 00 00       	call   119ec <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    ebd0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    ebd4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ebd8:	48 89 c7             	mov    %rax,%rdi
    ebdb:	e8 e2 fd ff ff       	call   e9c2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    ebe0:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    ebe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ebe7:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    ebee:	00 
    ebef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ebf3:	48 01 c1             	add    %rax,%rcx
    ebf6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ebfa:	48 89 c6             	mov    %rax,%rsi
    ebfd:	48 89 cf             	mov    %rcx,%rdi
    ec00:	e8 f5 2c 00 00       	call   118fa <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    ec05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec09:	48 89 c7             	mov    %rax,%rdi
    ec0c:	e8 b1 fd ff ff       	call   e9c2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    ec11:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    ec14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec18:	48 8b 70 08          	mov    0x8(%rax),%rsi
    ec1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec20:	48 8b 00             	mov    (%rax),%rax
    ec23:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ec27:	48 89 c7             	mov    %rax,%rdi
    ec2a:	e8 f0 2d 00 00       	call   11a1f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    ec2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    ec33:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ec37:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    ec3b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ec3f:	48 8b 12             	mov    (%rdx),%rdx
    ec42:	48 29 d1             	sub    %rdx,%rcx
    ec45:	48 c1 f9 03          	sar    $0x3,%rcx
    ec49:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    ec4c:	48 89 d6             	mov    %rdx,%rsi
    ec4f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ec53:	48 8b 0a             	mov    (%rdx),%rcx
    ec56:	48 89 f2             	mov    %rsi,%rdx
    ec59:	48 89 ce             	mov    %rcx,%rsi
    ec5c:	48 89 c7             	mov    %rax,%rdi
    ec5f:	e8 28 fd ff ff       	call   e98c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    ec64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec68:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ec6c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    ec6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ec73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ec77:	48 01 d0             	add    %rdx,%rax
    ec7a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ec81:	00 
    ec82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ec86:	48 01 c2             	add    %rax,%rdx
    ec89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec8d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    ec91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec95:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ec9c:	00 
    ec9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eca1:	48 01 c2             	add    %rax,%rdx
    eca4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eca8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    ecac:	eb 37                	jmp    ece5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    ecae:	48 89 c7             	mov    %rax,%rdi
    ecb1:	e8 7a 54 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    ecb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ecba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ecbe:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    ecc2:	48 89 ce             	mov    %rcx,%rsi
    ecc5:	48 89 c7             	mov    %rax,%rdi
    ecc8:	e8 bf fc ff ff       	call   e98c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    eccd:	e8 1e 5a ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
    ecd2:	48 89 c3             	mov    %rax,%rbx
    ecd5:	e8 e6 5a ff ff       	call   47c0 <__cxa_end_catch@plt>
    ecda:	48 89 d8             	mov    %rbx,%rax
    ecdd:	48 89 c7             	mov    %rax,%rdi
    ece0:	e8 5b 5b ff ff       	call   4840 <_Unwind_Resume@plt>
    }
    ece5:	90                   	nop
    ece6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ecea:	c9                   	leave
    eceb:	c3                   	ret

000000000000ecec <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    ecec:	55                   	push   %rbp
    eced:	48 89 e5             	mov    %rsp,%rbp
    ecf0:	48 83 ec 20          	sub    $0x20,%rsp
    ecf4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ecf8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    ecfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed00:	48 8b 40 08          	mov    0x8(%rax),%rax
    ed04:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ed08:	48 c1 f8 03          	sar    $0x3,%rax
    ed0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ed10:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ed15:	74 32                	je     ed49 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    ed17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed1b:	48 89 c7             	mov    %rax,%rdi
    ed1e:	e8 9f fc ff ff       	call   e9c2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    ed23:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    ed26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed2a:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ed2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ed32:	48 89 ce             	mov    %rcx,%rsi
    ed35:	48 89 c7             	mov    %rax,%rdi
    ed38:	e8 93 fc ff ff       	call   e9d0 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    ed3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed41:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ed45:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    ed49:	90                   	nop
    ed4a:	c9                   	leave
    ed4b:	c3                   	ret

000000000000ed4c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ed4c:	55                   	push   %rbp
    ed4d:	48 89 e5             	mov    %rsp,%rbp
    ed50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ed58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed5c:	5d                   	pop    %rbp
    ed5d:	c3                   	ret

000000000000ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    ed5e:	55                   	push   %rbp
    ed5f:	48 89 e5             	mov    %rsp,%rbp
    ed62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    ed66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed6a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ed6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed72:	48 8b 00             	mov    (%rax),%rax
    ed75:	48 29 c2             	sub    %rax,%rdx
    ed78:	48 89 d0             	mov    %rdx,%rax
    ed7b:	48 c1 f8 02          	sar    $0x2,%rax
    ed7f:	5d                   	pop    %rbp
    ed80:	c3                   	ret
    ed81:	90                   	nop

000000000000ed82 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    ed82:	55                   	push   %rbp
    ed83:	48 89 e5             	mov    %rsp,%rbp
    ed86:	53                   	push   %rbx
    ed87:	48 83 ec 38          	sub    $0x38,%rsp
    ed8b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    ed8f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    ed93:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    ed98:	0f 84 e7 01 00 00    	je     ef85 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    ed9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eda2:	48 89 c7             	mov    %rax,%rdi
    eda5:	e8 b4 ff ff ff       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    edaa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    edae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    edb2:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    edb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    edba:	48 8b 40 08          	mov    0x8(%rax),%rax
    edbe:	48 29 c2             	sub    %rax,%rdx
    edc1:	48 89 d0             	mov    %rdx,%rax
    edc4:	48 c1 f8 02          	sar    $0x2,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    edc8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    edcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    edd0:	48 89 c7             	mov    %rax,%rdi
    edd3:	e8 7a 2c 00 00       	call   11a52 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    edd8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    eddc:	72 16                	jb     edf4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x72>
    edde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ede2:	48 89 c7             	mov    %rax,%rdi
    ede5:	e8 68 2c 00 00       	call   11a52 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    edea:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    edee:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    edf2:	73 07                	jae    edfb <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x79>
    edf4:	b8 01 00 00 00       	mov    $0x1,%eax
    edf9:	eb 05                	jmp    ee00 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x7e>
    edfb:	b8 00 00 00 00       	mov    $0x0,%eax
    ee00:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    ee02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ee06:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    ee0a:	72 33                	jb     ee3f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    ee0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee10:	48 89 c7             	mov    %rax,%rdi
    ee13:	e8 6e fc ff ff       	call   ea86 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    ee18:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    ee1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee1f:	48 8b 40 08          	mov    0x8(%rax),%rax
    ee23:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    ee27:	48 89 ce             	mov    %rcx,%rsi
    ee2a:	48 89 c7             	mov    %rax,%rdi
    ee2d:	e8 42 2c 00 00       	call   11a74 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    ee32:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ee36:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    ee3a:	e9 46 01 00 00       	jmp    ef85 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    ee3f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    ee43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee47:	48 8d 15 8b b9 00 00 	lea    0xb98b(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
    ee4e:	48 89 ce             	mov    %rcx,%rsi
    ee51:	48 89 c7             	mov    %rax,%rdi
    ee54:	e8 45 2c 00 00       	call   11a9e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>
    ee59:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    ee5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee61:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ee65:	48 89 d6             	mov    %rdx,%rsi
    ee68:	48 89 c7             	mov    %rax,%rdi
    ee6b:	e8 f6 2c 00 00       	call   11b66 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    ee70:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    ee74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee78:	48 89 c7             	mov    %rax,%rdi
    ee7b:	e8 06 fc ff ff       	call   ea86 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    ee80:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    ee83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee87:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    ee8e:	00 
    ee8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ee93:	48 01 c1             	add    %rax,%rcx
    ee96:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ee9a:	48 89 c6             	mov    %rax,%rsi
    ee9d:	48 89 cf             	mov    %rcx,%rdi
    eea0:	e8 cf 2b 00 00       	call   11a74 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    eea5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eea9:	48 89 c7             	mov    %rax,%rdi
    eeac:	e8 d5 fb ff ff       	call   ea86 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    eeb1:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    eeb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eeb8:	48 8b 70 08          	mov    0x8(%rax),%rsi
    eebc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eec0:	48 8b 00             	mov    (%rax),%rax
    eec3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    eec7:	48 89 c7             	mov    %rax,%rdi
    eeca:	e8 ca 2c 00 00       	call   11b99 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    eecf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    eed3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eed7:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    eedb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eedf:	48 8b 12             	mov    (%rdx),%rdx
    eee2:	48 29 d1             	sub    %rdx,%rcx
    eee5:	48 c1 f9 02          	sar    $0x2,%rcx
    eee9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    eeec:	48 89 d6             	mov    %rdx,%rsi
    eeef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eef3:	48 8b 0a             	mov    (%rdx),%rcx
    eef6:	48 89 f2             	mov    %rsi,%rdx
    eef9:	48 89 ce             	mov    %rcx,%rsi
    eefc:	48 89 c7             	mov    %rax,%rdi
    eeff:	e8 4c fb ff ff       	call   ea50 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    ef04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ef0c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    ef0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ef17:	48 01 d0             	add    %rdx,%rax
    ef1a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ef21:	00 
    ef22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ef26:	48 01 c2             	add    %rax,%rdx
    ef29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef2d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    ef31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef35:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ef3c:	00 
    ef3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ef41:	48 01 c2             	add    %rax,%rdx
    ef44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef48:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    ef4c:	eb 37                	jmp    ef85 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    ef4e:	48 89 c7             	mov    %rax,%rdi
    ef51:	e8 da 51 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    ef56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef5a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ef5e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    ef62:	48 89 ce             	mov    %rcx,%rsi
    ef65:	48 89 c7             	mov    %rax,%rdi
    ef68:	e8 e3 fa ff ff       	call   ea50 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    ef6d:	e8 7e 57 ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
    ef72:	48 89 c3             	mov    %rax,%rbx
    ef75:	e8 46 58 ff ff       	call   47c0 <__cxa_end_catch@plt>
    ef7a:	48 89 d8             	mov    %rbx,%rax
    ef7d:	48 89 c7             	mov    %rax,%rdi
    ef80:	e8 bb 58 ff ff       	call   4840 <_Unwind_Resume@plt>
    }
    ef85:	90                   	nop
    ef86:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ef8a:	c9                   	leave
    ef8b:	c3                   	ret

000000000000ef8c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    ef8c:	55                   	push   %rbp
    ef8d:	48 89 e5             	mov    %rsp,%rbp
    ef90:	48 83 ec 20          	sub    $0x20,%rsp
    ef94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ef98:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    ef9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efa0:	48 8b 40 08          	mov    0x8(%rax),%rax
    efa4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    efa8:	48 c1 f8 02          	sar    $0x2,%rax
    efac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    efb0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    efb5:	74 32                	je     efe9 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    efb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efbb:	48 89 c7             	mov    %rax,%rdi
    efbe:	e8 c3 fa ff ff       	call   ea86 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    efc3:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    efc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efca:	48 8b 48 08          	mov    0x8(%rax),%rcx
    efce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    efd2:	48 89 ce             	mov    %rcx,%rsi
    efd5:	48 89 c7             	mov    %rax,%rdi
    efd8:	e8 b7 fa ff ff       	call   ea94 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    efdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efe1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    efe5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    efe9:	90                   	nop
    efea:	c9                   	leave
    efeb:	c3                   	ret

000000000000efec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    efec:	55                   	push   %rbp
    efed:	48 89 e5             	mov    %rsp,%rbp
    eff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eff4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    eff8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    effc:	5d                   	pop    %rbp
    effd:	c3                   	ret

000000000000effe <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    effe:	55                   	push   %rbp
    efff:	48 89 e5             	mov    %rsp,%rbp
    f002:	53                   	push   %rbx
    f003:	48 83 ec 18          	sub    $0x18,%rsp
    f007:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f00b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    f00f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f013:	48 89 c7             	mov    %rax,%rdi
    f016:	e8 1f 0a 00 00       	call   fa3a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f01b:	48 8b 18             	mov    (%rax),%rbx
    f01e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f022:	48 89 c7             	mov    %rax,%rdi
    f025:	e8 10 0a 00 00       	call   fa3a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f02a:	48 8b 00             	mov    (%rax),%rax
    f02d:	48 39 c3             	cmp    %rax,%rbx
    f030:	0f 94 c0             	sete   %al
    f033:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f037:	c9                   	leave
    f038:	c3                   	ret

000000000000f039 <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    f039:	55                   	push   %rbp
    f03a:	48 89 e5             	mov    %rsp,%rbp
    f03d:	53                   	push   %rbx
    f03e:	48 83 ec 18          	sub    $0x18,%rsp
    f042:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f046:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    f04a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f04e:	48 89 c7             	mov    %rax,%rdi
    f051:	e8 10 0a 00 00       	call   fa66 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f056:	48 8b 18             	mov    (%rax),%rbx
    f059:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f05d:	48 89 c7             	mov    %rax,%rdi
    f060:	e8 01 0a 00 00       	call   fa66 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f065:	48 8b 00             	mov    (%rax),%rax
    f068:	48 39 c3             	cmp    %rax,%rbx
    f06b:	0f 94 c0             	sete   %al
    f06e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f072:	c9                   	leave
    f073:	c3                   	ret

000000000000f074 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f074:	55                   	push   %rbp
    f075:	48 89 e5             	mov    %rsp,%rbp
    f078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f07c:	90                   	nop
    f07d:	5d                   	pop    %rbp
    f07e:	c3                   	ret
    f07f:	90                   	nop

000000000000f080 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f080:	55                   	push   %rbp
    f081:	48 89 e5             	mov    %rsp,%rbp
    f084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f088:	90                   	nop
    f089:	5d                   	pop    %rbp
    f08a:	c3                   	ret

000000000000f08b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    f08b:	55                   	push   %rbp
    f08c:	48 89 e5             	mov    %rsp,%rbp
    f08f:	53                   	push   %rbx
    f090:	48 83 ec 28          	sub    $0x28,%rsp
    f094:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f098:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    f09c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f0a0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f0a4:	48 89 d6             	mov    %rdx,%rsi
    f0a7:	48 89 c7             	mov    %rax,%rdi
    f0aa:	e8 5f 2b 00 00       	call   11c0e <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    f0af:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f0b3:	48 89 c7             	mov    %rax,%rdi
    f0b6:	e8 10 2b 00 00       	call   11bcb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    f0bb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    f0bf:	0f 92 c3             	setb   %bl
    f0c2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f0c6:	48 89 c7             	mov    %rax,%rdi
    f0c9:	e8 a6 db ff ff       	call   cc74 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    f0ce:	84 db                	test   %bl,%bl
    f0d0:	74 0f                	je     f0e1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    f0d2:	48 8d 05 cf b6 00 00 	lea    0xb6cf(%rip),%rax        # 1a7a8 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    f0d9:	48 89 c7             	mov    %rax,%rdi
    f0dc:	e8 cf 50 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    f0e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    f0e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f0e9:	c9                   	leave
    f0ea:	c3                   	ret
    f0eb:	90                   	nop

000000000000f0ec <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    f0ec:	55                   	push   %rbp
    f0ed:	48 89 e5             	mov    %rsp,%rbp
    f0f0:	48 83 ec 10          	sub    $0x10,%rsp
    f0f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0fc:	48 89 c7             	mov    %rax,%rdi
    f0ff:	e8 70 db ff ff       	call   cc74 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    f104:	90                   	nop
    f105:	c9                   	leave
    f106:	c3                   	ret
    f107:	90                   	nop

000000000000f108 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    f108:	55                   	push   %rbp
    f109:	48 89 e5             	mov    %rsp,%rbp
    f10c:	53                   	push   %rbx
    f10d:	48 83 ec 28          	sub    $0x28,%rsp
    f111:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f115:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f119:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    f11d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f121:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f125:	48 89 d6             	mov    %rdx,%rsi
    f128:	48 89 c7             	mov    %rax,%rdi
    f12b:	e8 04 2b 00 00       	call   11c34 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    f130:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f138:	48 89 d6             	mov    %rdx,%rsi
    f13b:	48 89 c7             	mov    %rax,%rdi
    f13e:	e8 23 2b 00 00       	call   11c66 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    f143:	eb 1a                	jmp    f15f <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    f145:	48 89 c3             	mov    %rax,%rbx
    f148:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f14c:	48 89 c7             	mov    %rax,%rdi
    f14f:	e8 98 ff ff ff       	call   f0ec <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    f154:	48 89 d8             	mov    %rbx,%rax
    f157:	48 89 c7             	mov    %rax,%rdi
    f15a:	e8 e1 56 ff ff       	call   4840 <_Unwind_Resume@plt>
    f15f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f163:	c9                   	leave
    f164:	c3                   	ret
    f165:	90                   	nop

000000000000f166 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    f166:	55                   	push   %rbp
    f167:	48 89 e5             	mov    %rsp,%rbp
    f16a:	48 83 ec 10          	sub    $0x10,%rsp
    f16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    f172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f176:	48 8b 50 10          	mov    0x10(%rax),%rdx
    f17a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f17e:	48 8b 00             	mov    (%rax),%rax
    f181:	48 29 c2             	sub    %rax,%rdx
    f184:	48 89 d0             	mov    %rdx,%rax
    f187:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    f18b:	48 89 c2             	mov    %rax,%rdx
    f18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f192:	48 8b 08             	mov    (%rax),%rcx
    f195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f199:	48 89 ce             	mov    %rcx,%rsi
    f19c:	48 89 c7             	mov    %rax,%rdi
    f19f:	e8 18 2b 00 00       	call   11cbc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    f1a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1a8:	48 89 c7             	mov    %rax,%rdi
    f1ab:	e8 3c ff ff ff       	call   f0ec <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    f1b0:	90                   	nop
    f1b1:	c9                   	leave
    f1b2:	c3                   	ret
    f1b3:	90                   	nop

000000000000f1b4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    f1b4:	55                   	push   %rbp
    f1b5:	48 89 e5             	mov    %rsp,%rbp
    f1b8:	48 83 ec 10          	sub    $0x10,%rsp
    f1bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    f1c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1c8:	48 89 c7             	mov    %rax,%rdi
    f1cb:	e8 24 00 00 00       	call   f1f4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f1d0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    f1d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1d7:	48 8b 00             	mov    (%rax),%rax
    f1da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f1de:	48 89 ce             	mov    %rcx,%rsi
    f1e1:	48 89 c7             	mov    %rax,%rdi
    f1e4:	e8 08 2b 00 00       	call   11cf1 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    f1e9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f1ed:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    f1f1:	90                   	nop
    f1f2:	c9                   	leave
    f1f3:	c3                   	ret

000000000000f1f4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    f1f4:	55                   	push   %rbp
    f1f5:	48 89 e5             	mov    %rsp,%rbp
    f1f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f1fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f200:	5d                   	pop    %rbp
    f201:	c3                   	ret

000000000000f202 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    f202:	55                   	push   %rbp
    f203:	48 89 e5             	mov    %rsp,%rbp
    f206:	48 83 ec 20          	sub    $0x20,%rsp
    f20a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f20e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f212:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    f216:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f21a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f21e:	48 89 d6             	mov    %rdx,%rsi
    f221:	48 89 c7             	mov    %rax,%rdi
    f224:	e8 f1 2a 00 00       	call   11d1a <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    f229:	90                   	nop
    f22a:	c9                   	leave
    f22b:	c3                   	ret

000000000000f22c <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    f22c:	55                   	push   %rbp
    f22d:	48 89 e5             	mov    %rsp,%rbp
    f230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    f238:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f23c:	5d                   	pop    %rbp
    f23d:	c3                   	ret

000000000000f23e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f23e:	55                   	push   %rbp
    f23f:	48 89 e5             	mov    %rsp,%rbp
    f242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f246:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f24a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f24e:	48 8b 10             	mov    (%rax),%rdx
    f251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f255:	48 89 10             	mov    %rdx,(%rax)
    f258:	90                   	nop
    f259:	5d                   	pop    %rbp
    f25a:	c3                   	ret
    f25b:	90                   	nop

000000000000f25c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f25c:	55                   	push   %rbp
    f25d:	48 89 e5             	mov    %rsp,%rbp
    f260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f268:	5d                   	pop    %rbp
    f269:	c3                   	ret

000000000000f26a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f26a:	55                   	push   %rbp
    f26b:	48 89 e5             	mov    %rsp,%rbp
    f26e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f272:	90                   	nop
    f273:	5d                   	pop    %rbp
    f274:	c3                   	ret
    f275:	90                   	nop

000000000000f276 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f276:	55                   	push   %rbp
    f277:	48 89 e5             	mov    %rsp,%rbp
    f27a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f27e:	90                   	nop
    f27f:	5d                   	pop    %rbp
    f280:	c3                   	ret

000000000000f281 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    f281:	55                   	push   %rbp
    f282:	48 89 e5             	mov    %rsp,%rbp
    f285:	53                   	push   %rbx
    f286:	48 83 ec 28          	sub    $0x28,%rsp
    f28a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f28e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    f292:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f296:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f29a:	48 89 d6             	mov    %rdx,%rsi
    f29d:	48 89 c7             	mov    %rax,%rdi
    f2a0:	e8 dd 2a 00 00       	call   11d82 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    f2a5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f2a9:	48 89 c7             	mov    %rax,%rdi
    f2ac:	e8 8f 2a 00 00       	call   11d40 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    f2b1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    f2b5:	0f 92 c3             	setb   %bl
    f2b8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f2bc:	48 89 c7             	mov    %rax,%rdi
    f2bf:	e8 c6 db ff ff       	call   ce8a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    f2c4:	84 db                	test   %bl,%bl
    f2c6:	74 0f                	je     f2d7 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    f2c8:	48 8d 05 d9 b4 00 00 	lea    0xb4d9(%rip),%rax        # 1a7a8 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    f2cf:	48 89 c7             	mov    %rax,%rdi
    f2d2:	e8 d9 4e ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    f2d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    f2db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f2df:	c9                   	leave
    f2e0:	c3                   	ret
    f2e1:	90                   	nop

000000000000f2e2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    f2e2:	55                   	push   %rbp
    f2e3:	48 89 e5             	mov    %rsp,%rbp
    f2e6:	48 83 ec 10          	sub    $0x10,%rsp
    f2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2f2:	48 89 c7             	mov    %rax,%rdi
    f2f5:	e8 90 db ff ff       	call   ce8a <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    f2fa:	90                   	nop
    f2fb:	c9                   	leave
    f2fc:	c3                   	ret
    f2fd:	90                   	nop

000000000000f2fe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    f2fe:	55                   	push   %rbp
    f2ff:	48 89 e5             	mov    %rsp,%rbp
    f302:	53                   	push   %rbx
    f303:	48 83 ec 28          	sub    $0x28,%rsp
    f307:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f30b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f30f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    f313:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f317:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f31b:	48 89 d6             	mov    %rdx,%rsi
    f31e:	48 89 c7             	mov    %rax,%rdi
    f321:	e8 82 2a 00 00       	call   11da8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    f326:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f32a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f32e:	48 89 d6             	mov    %rdx,%rsi
    f331:	48 89 c7             	mov    %rax,%rdi
    f334:	e8 a1 2a 00 00       	call   11dda <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    f339:	eb 1a                	jmp    f355 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    f33b:	48 89 c3             	mov    %rax,%rbx
    f33e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f342:	48 89 c7             	mov    %rax,%rdi
    f345:	e8 98 ff ff ff       	call   f2e2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    f34a:	48 89 d8             	mov    %rbx,%rax
    f34d:	48 89 c7             	mov    %rax,%rdi
    f350:	e8 eb 54 ff ff       	call   4840 <_Unwind_Resume@plt>
    f355:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f359:	c9                   	leave
    f35a:	c3                   	ret
    f35b:	90                   	nop

000000000000f35c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    f35c:	55                   	push   %rbp
    f35d:	48 89 e5             	mov    %rsp,%rbp
    f360:	48 83 ec 10          	sub    $0x10,%rsp
    f364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    f368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f36c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    f370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f374:	48 8b 00             	mov    (%rax),%rax
    f377:	48 29 c2             	sub    %rax,%rdx
    f37a:	48 c1 fa 03          	sar    $0x3,%rdx
    f37e:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    f385:	aa aa aa 
    f388:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    f38c:	48 89 c2             	mov    %rax,%rdx
    f38f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f393:	48 8b 08             	mov    (%rax),%rcx
    f396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f39a:	48 89 ce             	mov    %rcx,%rsi
    f39d:	48 89 c7             	mov    %rax,%rdi
    f3a0:	e8 95 2a 00 00       	call   11e3a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    f3a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3a9:	48 89 c7             	mov    %rax,%rdi
    f3ac:	e8 31 ff ff ff       	call   f2e2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    f3b1:	90                   	nop
    f3b2:	c9                   	leave
    f3b3:	c3                   	ret

000000000000f3b4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    f3b4:	55                   	push   %rbp
    f3b5:	48 89 e5             	mov    %rsp,%rbp
    f3b8:	48 83 ec 10          	sub    $0x10,%rsp
    f3bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    f3c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3c8:	48 89 c7             	mov    %rax,%rdi
    f3cb:	e8 24 00 00 00       	call   f3f4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    f3d0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    f3d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3d7:	48 8b 00             	mov    (%rax),%rax
    f3da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f3de:	48 89 ce             	mov    %rcx,%rsi
    f3e1:	48 89 c7             	mov    %rax,%rdi
    f3e4:	e8 86 2a 00 00       	call   11e6f <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    f3e9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f3ed:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    f3f1:	90                   	nop
    f3f2:	c9                   	leave
    f3f3:	c3                   	ret

000000000000f3f4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    f3f4:	55                   	push   %rbp
    f3f5:	48 89 e5             	mov    %rsp,%rbp
    f3f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f3fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f400:	5d                   	pop    %rbp
    f401:	c3                   	ret

000000000000f402 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    f402:	55                   	push   %rbp
    f403:	48 89 e5             	mov    %rsp,%rbp
    f406:	48 83 ec 20          	sub    $0x20,%rsp
    f40a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f40e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f412:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    f416:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f41a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f41e:	48 89 d6             	mov    %rdx,%rsi
    f421:	48 89 c7             	mov    %rax,%rdi
    f424:	e8 6f 2a 00 00       	call   11e98 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    f429:	90                   	nop
    f42a:	c9                   	leave
    f42b:	c3                   	ret

000000000000f42c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    f42c:	55                   	push   %rbp
    f42d:	48 89 e5             	mov    %rsp,%rbp
    f430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f434:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    f438:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f43c:	5d                   	pop    %rbp
    f43d:	c3                   	ret

000000000000f43e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f43e:	55                   	push   %rbp
    f43f:	48 89 e5             	mov    %rsp,%rbp
    f442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f446:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f44a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f44e:	48 8b 10             	mov    (%rax),%rdx
    f451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f455:	48 89 10             	mov    %rdx,(%rax)
    f458:	90                   	nop
    f459:	5d                   	pop    %rbp
    f45a:	c3                   	ret
    f45b:	90                   	nop

000000000000f45c <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f45c:	55                   	push   %rbp
    f45d:	48 89 e5             	mov    %rsp,%rbp
    f460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f468:	5d                   	pop    %rbp
    f469:	c3                   	ret

000000000000f46a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f46a:	55                   	push   %rbp
    f46b:	48 89 e5             	mov    %rsp,%rbp
    f46e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f476:	5d                   	pop    %rbp
    f477:	c3                   	ret

000000000000f478 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    f478:	55                   	push   %rbp
    f479:	48 89 e5             	mov    %rsp,%rbp
    f47c:	53                   	push   %rbx
    f47d:	48 83 ec 18          	sub    $0x18,%rsp
    f481:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f485:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    f489:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f48d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f491:	48 89 c7             	mov    %rax,%rdi
    f494:	e8 d1 ff ff ff       	call   f46a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    f499:	48 89 c6             	mov    %rax,%rsi
    f49c:	48 89 df             	mov    %rbx,%rdi
    f49f:	e8 1a 2a 00 00       	call   11ebe <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>
	}
    f4a4:	90                   	nop
    f4a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f4a9:	c9                   	leave
    f4aa:	c3                   	ret
    f4ab:	90                   	nop

000000000000f4ac <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>:
    f4ac:	55                   	push   %rbp
    f4ad:	48 89 e5             	mov    %rsp,%rbp
    f4b0:	48 83 ec 10          	sub    $0x10,%rsp
    f4b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4bc:	48 89 c7             	mov    %rax,%rdi
    f4bf:	e8 40 2a 00 00       	call   11f04 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>
    f4c4:	90                   	nop
    f4c5:	c9                   	leave
    f4c6:	c3                   	ret
    f4c7:	90                   	nop

000000000000f4c8 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    f4c8:	55                   	push   %rbp
    f4c9:	48 89 e5             	mov    %rsp,%rbp
    f4cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    f4d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f4db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4df:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f4e6:	00 
    f4e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f4f2:	00 
	{ }
    f4f3:	90                   	nop
    f4f4:	5d                   	pop    %rbp
    f4f5:	c3                   	ret

000000000000f4f6 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>:
    f4f6:	55                   	push   %rbp
    f4f7:	48 89 e5             	mov    %rsp,%rbp
    f4fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4fe:	90                   	nop
    f4ff:	5d                   	pop    %rbp
    f500:	c3                   	ret
    f501:	90                   	nop

000000000000f502 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    f502:	55                   	push   %rbp
    f503:	48 89 e5             	mov    %rsp,%rbp
    f506:	48 83 ec 20          	sub    $0x20,%rsp
    f50a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f50e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f512:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    f516:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f51b:	74 17                	je     f534 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    f51d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f521:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f525:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f529:	48 89 ce             	mov    %rcx,%rsi
    f52c:	48 89 c7             	mov    %rax,%rdi
    f52f:	e8 db 29 00 00       	call   11f0f <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>
      }
    f534:	90                   	nop
    f535:	c9                   	leave
    f536:	c3                   	ret
    f537:	90                   	nop

000000000000f538 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    f538:	55                   	push   %rbp
    f539:	48 89 e5             	mov    %rsp,%rbp
    f53c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f544:	5d                   	pop    %rbp
    f545:	c3                   	ret

000000000000f546 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    f546:	55                   	push   %rbp
    f547:	48 89 e5             	mov    %rsp,%rbp
    f54a:	48 83 ec 20          	sub    $0x20,%rsp
    f54e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f552:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f556:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    f55a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f55e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f562:	48 89 d6             	mov    %rdx,%rsi
    f565:	48 89 c7             	mov    %rax,%rdi
    f568:	e8 d0 29 00 00       	call   11f3d <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>
    }
    f56d:	90                   	nop
    f56e:	c9                   	leave
    f56f:	c3                   	ret

000000000000f570 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
    f570:	55                   	push   %rbp
    f571:	48 89 e5             	mov    %rsp,%rbp
    f574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    f578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f57c:	5d                   	pop    %rbp
    f57d:	c3                   	ret

000000000000f57e <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f57e:	55                   	push   %rbp
    f57f:	48 89 e5             	mov    %rsp,%rbp
    f582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f586:	90                   	nop
    f587:	5d                   	pop    %rbp
    f588:	c3                   	ret
    f589:	90                   	nop

000000000000f58a <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    f58a:	55                   	push   %rbp
    f58b:	48 89 e5             	mov    %rsp,%rbp
    f58e:	48 83 ec 10          	sub    $0x10,%rsp
    f592:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f596:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    f59a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5a2:	48 89 d6             	mov    %rdx,%rsi
    f5a5:	48 89 c7             	mov    %rax,%rdi
    f5a8:	e8 b7 29 00 00       	call   11f64 <_ZNSt15__new_allocatorIjEC1ERKS0_>
    f5ad:	90                   	nop
    f5ae:	c9                   	leave
    f5af:	c3                   	ret

000000000000f5b0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>:
      _Rb_tree(const _Compare& __comp,
    f5b0:	55                   	push   %rbp
    f5b1:	48 89 e5             	mov    %rsp,%rbp
    f5b4:	53                   	push   %rbx
    f5b5:	48 83 ec 38          	sub    $0x38,%rsp
    f5b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f5bd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f5c1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_impl(__comp, _Node_allocator(__a)) { }
    f5c5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    f5c9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f5cd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f5d1:	48 89 d6             	mov    %rdx,%rsi
    f5d4:	48 89 c7             	mov    %rax,%rdi
    f5d7:	e8 98 29 00 00       	call   11f74 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>
    f5dc:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    f5e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f5e4:	48 89 c6             	mov    %rax,%rsi
    f5e7:	48 89 df             	mov    %rbx,%rdi
    f5ea:	e8 a5 29 00 00       	call   11f94 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>
    f5ef:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f5f3:	48 89 c7             	mov    %rax,%rdi
    f5f6:	e8 e3 00 00 00       	call   f6de <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    f5fb:	eb 1a                	jmp    f617 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_+0x67>
    f5fd:	48 89 c3             	mov    %rax,%rbx
    f600:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f604:	48 89 c7             	mov    %rax,%rdi
    f607:	e8 d2 00 00 00       	call   f6de <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    f60c:	48 89 d8             	mov    %rbx,%rax
    f60f:	48 89 c7             	mov    %rax,%rdi
    f612:	e8 29 52 ff ff       	call   4840 <_Unwind_Resume@plt>
    f617:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f61b:	c9                   	leave
    f61c:	c3                   	ret
    f61d:	90                   	nop

000000000000f61e <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
    f61e:	55                   	push   %rbp
    f61f:	48 89 e5             	mov    %rsp,%rbp
    f622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f62a:	48 8b 00             	mov    (%rax),%rax
    f62d:	5d                   	pop    %rbp
    f62e:	c3                   	ret
    f62f:	90                   	nop

000000000000f630 <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
    f630:	55                   	push   %rbp
    f631:	48 89 e5             	mov    %rsp,%rbp
    f634:	53                   	push   %rbx
    f635:	48 83 ec 18          	sub    $0x18,%rsp
    f639:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f63d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f641:	48 89 c7             	mov    %rax,%rdi
    f644:	e8 d5 ff ff ff       	call   f61e <_ZNKSt16initializer_listIjE5beginEv>
    f649:	48 89 c3             	mov    %rax,%rbx
    f64c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f650:	48 89 c7             	mov    %rax,%rdi
    f653:	e8 94 29 00 00       	call   11fec <_ZNKSt16initializer_listIjE4sizeEv>
    f658:	48 c1 e0 02          	shl    $0x2,%rax
    f65c:	48 01 d8             	add    %rbx,%rax
    f65f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f663:	c9                   	leave
    f664:	c3                   	ret
    f665:	90                   	nop

000000000000f666 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    f666:	55                   	push   %rbp
    f667:	48 89 e5             	mov    %rsp,%rbp
    f66a:	48 83 ec 40          	sub    $0x40,%rsp
    f66e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f672:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f676:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Alloc_node __an(*this);
    f67a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f67e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f682:	48 89 d6             	mov    %rdx,%rsi
    f685:	48 89 c7             	mov    %rax,%rdi
    f688:	e8 71 29 00 00       	call   11ffe <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>
	  for (; __first != __last; ++__first)
    f68d:	eb 40                	jmp    f6cf <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x69>
	    _M_insert_unique_(end(), *__first, __an);
    f68f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f693:	48 89 c7             	mov    %rax,%rdi
    f696:	e8 7d 29 00 00       	call   12018 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    f69b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f69f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f6a3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f6a7:	48 89 d6             	mov    %rdx,%rsi
    f6aa:	48 89 c7             	mov    %rax,%rdi
    f6ad:	e8 90 29 00 00       	call   12042 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>
    f6b2:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    f6b6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f6ba:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    f6be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f6c2:	48 89 c7             	mov    %rax,%rdi
    f6c5:	e8 96 29 00 00       	call   12060 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>
	  for (; __first != __last; ++__first)
    f6ca:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
    f6cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f6d3:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    f6d7:	75 b6                	jne    f68f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x29>
	}
    f6d9:	90                   	nop
    f6da:	90                   	nop
    f6db:	c9                   	leave
    f6dc:	c3                   	ret
    f6dd:	90                   	nop

000000000000f6de <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    f6de:	55                   	push   %rbp
    f6df:	48 89 e5             	mov    %rsp,%rbp
    f6e2:	48 83 ec 10          	sub    $0x10,%rsp
    f6e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6ee:	48 89 c7             	mov    %rax,%rdi
    f6f1:	e8 02 2a 00 00       	call   120f8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>
    f6f6:	90                   	nop
    f6f7:	c9                   	leave
    f6f8:	c3                   	ret
    f6f9:	90                   	nop

000000000000f6fa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f6fa:	55                   	push   %rbp
    f6fb:	48 89 e5             	mov    %rsp,%rbp
    f6fe:	48 83 ec 20          	sub    $0x20,%rsp
    f702:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f706:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    f70a:	eb 49                	jmp    f755 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x5b>
	  _M_erase(_S_right(__x));
    f70c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f710:	48 89 c7             	mov    %rax,%rdi
    f713:	e8 eb 29 00 00       	call   12103 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    f718:	48 89 c2             	mov    %rax,%rdx
    f71b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f71f:	48 89 d6             	mov    %rdx,%rsi
    f722:	48 89 c7             	mov    %rax,%rdi
    f725:	e8 d0 ff ff ff       	call   f6fa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
	  _Link_type __y = _S_left(__x);
    f72a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f72e:	48 89 c7             	mov    %rax,%rdi
    f731:	e8 df 29 00 00       	call   12115 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
    f736:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    f73a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f73e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f742:	48 89 d6             	mov    %rdx,%rsi
    f745:	48 89 c7             	mov    %rax,%rdi
    f748:	e8 db 29 00 00       	call   12128 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>
	  __x = __y;
    f74d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f751:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    f755:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f75a:	75 b0                	jne    f70c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x12>
    }
    f75c:	90                   	nop
    f75d:	90                   	nop
    f75e:	c9                   	leave
    f75f:	c3                   	ret

000000000000f760 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    f760:	55                   	push   %rbp
    f761:	48 89 e5             	mov    %rsp,%rbp
    f764:	48 83 ec 10          	sub    $0x10,%rsp
    f768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    f76c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f770:	48 89 c7             	mov    %rax,%rdi
    f773:	e8 ea 29 00 00       	call   12162 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>
    f778:	c9                   	leave
    f779:	c3                   	ret

000000000000f77a <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    f77a:	55                   	push   %rbp
    f77b:	48 89 e5             	mov    %rsp,%rbp
    f77e:	48 83 ec 20          	sub    $0x20,%rsp
    f782:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
    f786:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f78a:	48 8b 50 18          	mov    0x18(%rax),%rdx
    f78e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f792:	48 89 d6             	mov    %rdx,%rsi
    f795:	48 89 c7             	mov    %rax,%rdi
    f798:	e8 d7 29 00 00       	call   12174 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    f79d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7a1:	c9                   	leave
    f7a2:	c3                   	ret
    f7a3:	90                   	nop

000000000000f7a4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    f7a4:	55                   	push   %rbp
    f7a5:	48 89 e5             	mov    %rsp,%rbp
    f7a8:	48 83 ec 20          	sub    $0x20,%rsp
    f7ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(&this->_M_impl._M_header); }
    f7b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7b4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f7b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f7bc:	48 89 d6             	mov    %rdx,%rsi
    f7bf:	48 89 c7             	mov    %rax,%rdi
    f7c2:	e8 ad 29 00 00       	call   12174 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    f7c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7cb:	c9                   	leave
    f7cc:	c3                   	ret
    f7cd:	90                   	nop

000000000000f7ce <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr() const
    f7ce:	55                   	push   %rbp
    f7cf:	48 89 e5             	mov    %rsp,%rbp
    f7d2:	48 83 ec 10          	sub    $0x10,%rsp
    f7d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    f7da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7de:	48 83 c0 20          	add    $0x20,%rax
    f7e2:	48 89 c7             	mov    %rax,%rdi
    f7e5:	e8 a4 29 00 00       	call   1218e <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
    f7ea:	c9                   	leave
    f7eb:	c3                   	ret

000000000000f7ec <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    f7ec:	55                   	push   %rbp
    f7ed:	48 89 e5             	mov    %rsp,%rbp
    f7f0:	48 83 ec 20          	sub    $0x20,%rsp
    f7f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f7f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f7fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    f800:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f804:	48 89 c7             	mov    %rax,%rdi
    f807:	e8 9c 29 00 00       	call   121a8 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    f80c:	48 89 c2             	mov    %rax,%rdx
    f80f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f817:	48 89 ce             	mov    %rcx,%rsi
    f81a:	48 89 c7             	mov    %rax,%rdi
    f81d:	e8 94 29 00 00       	call   121b6 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>
	}
    f822:	90                   	nop
    f823:	c9                   	leave
    f824:	c3                   	ret
    f825:	90                   	nop

000000000000f826 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    f826:	55                   	push   %rbp
    f827:	48 89 e5             	mov    %rsp,%rbp
    f82a:	48 83 ec 20          	sub    $0x20,%rsp
    f82e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    f832:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f836:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f83a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f83e:	48 89 d6             	mov    %rdx,%rsi
    f841:	48 89 c7             	mov    %rax,%rdi
    f844:	e8 cf 29 00 00       	call   12218 <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    f849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f84d:	c9                   	leave
    f84e:	c3                   	ret
    f84f:	90                   	nop

000000000000f850 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
    f850:	55                   	push   %rbp
    f851:	48 89 e5             	mov    %rsp,%rbp
    f854:	53                   	push   %rbx
    f855:	48 83 ec 68          	sub    $0x68,%rsp
    f859:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    f85d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    f861:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    f865:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f869:	48 8d 15 83 af 00 00 	lea    0xaf83(%rip),%rdx        # 1a7f3 <_ZN6__pstl9execution2v1L5unseqE+0x588>
    f870:	be 01 00 00 00       	mov    $0x1,%esi
    f875:	48 89 c7             	mov    %rax,%rdi
    f878:	e8 b9 29 00 00       	call   12236 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>
    f87d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    f881:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f885:	48 8b 00             	mov    (%rax),%rax
    f888:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    f88c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f890:	48 8b 40 08          	mov    0x8(%rax),%rax
    f894:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    f898:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f89c:	48 89 c7             	mov    %rax,%rdi
    f89f:	e8 5a 2a 00 00       	call   122fe <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>
    f8a4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f8a8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    f8ac:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f8b0:	48 89 d6             	mov    %rdx,%rsi
    f8b3:	48 89 c7             	mov    %rax,%rdi
    f8b6:	e8 68 2a 00 00       	call   12323 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
    f8bb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    f8bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f8c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f8c7:	48 89 d6             	mov    %rdx,%rsi
    f8ca:	48 89 c7             	mov    %rax,%rdi
    f8cd:	e8 9e 2a 00 00       	call   12370 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>
    f8d2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    f8d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f8da:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    f8de:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    f8e2:	48 89 c7             	mov    %rax,%rdi
    f8e5:	e8 be 28 00 00       	call   121a8 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    f8ea:	48 89 c6             	mov    %rax,%rsi
				   __new_start + __elems_before,
    f8ed:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f8f1:	48 89 d0             	mov    %rdx,%rax
    f8f4:	48 c1 e0 02          	shl    $0x2,%rax
    f8f8:	48 01 d0             	add    %rdx,%rax
    f8fb:	48 c1 e0 03          	shl    $0x3,%rax
    f8ff:	48 89 c2             	mov    %rax,%rdx
	  _Alloc_traits::construct(this->_M_impl,
    f902:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f906:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f90a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f90e:	48 89 f2             	mov    %rsi,%rdx
    f911:	48 89 ce             	mov    %rcx,%rsi
    f914:	48 89 c7             	mov    %rax,%rdi
    f917:	e8 d0 fe ff ff       	call   f7ec <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
    f91c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    f923:	00 
					 __new_start, _M_get_Tp_allocator());
    f924:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f928:	48 89 c7             	mov    %rax,%rdi
    f92b:	e8 08 fc ff ff       	call   f538 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    f930:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    f933:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f937:	48 89 c7             	mov    %rax,%rdi
    f93a:	e8 97 2a 00 00       	call   123d6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    f93f:	48 8b 30             	mov    (%rax),%rsi
    f942:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f946:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f94a:	48 89 d9             	mov    %rbx,%rcx
    f94d:	48 89 c7             	mov    %rax,%rdi
    f950:	e8 4e 2a 00 00       	call   123a3 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    f955:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    f959:	48 83 45 c0 28       	addq   $0x28,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    f95e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f962:	48 89 c7             	mov    %rax,%rdi
    f965:	e8 ce fb ff ff       	call   f538 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    f96a:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    f96d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    f971:	48 89 c7             	mov    %rax,%rdi
    f974:	e8 5d 2a 00 00       	call   123d6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    f979:	48 8b 00             	mov    (%rax),%rax
    f97c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f980:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    f984:	48 89 d9             	mov    %rbx,%rcx
    f987:	48 89 c7             	mov    %rax,%rdi
    f98a:	e8 14 2a 00 00       	call   123a3 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    f98f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    f993:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    f997:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    f99b:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    f99f:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    f9a3:	48 89 d1             	mov    %rdx,%rcx
    f9a6:	48 c1 f9 03          	sar    $0x3,%rcx
    f9aa:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
    f9b1:	cc cc cc 
    f9b4:	48 0f af d1          	imul   %rcx,%rdx
      _M_deallocate(__old_start,
    f9b8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f9bc:	48 89 ce             	mov    %rcx,%rsi
    f9bf:	48 89 c7             	mov    %rax,%rdi
    f9c2:	e8 3b fb ff ff       	call   f502 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      this->_M_impl._M_start = __new_start;
    f9c7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f9cb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f9cf:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    f9d2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f9d6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f9da:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    f9de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f9e2:	48 89 d0             	mov    %rdx,%rax
    f9e5:	48 c1 e0 02          	shl    $0x2,%rax
    f9e9:	48 01 d0             	add    %rdx,%rax
    f9ec:	48 c1 e0 03          	shl    $0x3,%rax
    f9f0:	48 89 c2             	mov    %rax,%rdx
    f9f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f9f7:	48 01 c2             	add    %rax,%rdx
    f9fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f9fe:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    fa02:	90                   	nop
    fa03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fa07:	c9                   	leave
    fa08:	c3                   	ret
    fa09:	90                   	nop

000000000000fa0a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    fa0a:	55                   	push   %rbp
    fa0b:	48 89 e5             	mov    %rsp,%rbp
    fa0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    fa16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa1a:	5d                   	pop    %rbp
    fa1b:	c3                   	ret

000000000000fa1c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    fa1c:	55                   	push   %rbp
    fa1d:	48 89 e5             	mov    %rsp,%rbp
    fa20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    fa28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa2c:	48 8b 10             	mov    (%rax),%rdx
    fa2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa33:	48 89 10             	mov    %rdx,(%rax)
    fa36:	90                   	nop
    fa37:	5d                   	pop    %rbp
    fa38:	c3                   	ret
    fa39:	90                   	nop

000000000000fa3a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    fa3a:	55                   	push   %rbp
    fa3b:	48 89 e5             	mov    %rsp,%rbp
    fa3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    fa42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa46:	5d                   	pop    %rbp
    fa47:	c3                   	ret

000000000000fa48 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    fa48:	55                   	push   %rbp
    fa49:	48 89 e5             	mov    %rsp,%rbp
    fa4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    fa54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa58:	48 8b 10             	mov    (%rax),%rdx
    fa5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa5f:	48 89 10             	mov    %rdx,(%rax)
    fa62:	90                   	nop
    fa63:	5d                   	pop    %rbp
    fa64:	c3                   	ret
    fa65:	90                   	nop

000000000000fa66 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    fa66:	55                   	push   %rbp
    fa67:	48 89 e5             	mov    %rsp,%rbp
    fa6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    fa6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa72:	5d                   	pop    %rbp
    fa73:	c3                   	ret

000000000000fa74 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    fa74:	55                   	push   %rbp
    fa75:	48 89 e5             	mov    %rsp,%rbp
    fa78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    fa80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa84:	8b 10                	mov    (%rax),%edx
    fa86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa8a:	8b 00                	mov    (%rax),%eax
    fa8c:	39 c2                	cmp    %eax,%edx
    fa8e:	73 06                	jae    fa96 <_ZSt3maxIjERKT_S2_S2_+0x22>
	return __b;
    fa90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa94:	eb 04                	jmp    fa9a <_ZSt3maxIjERKT_S2_S2_+0x26>
      return __a;
    fa96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    fa9a:	5d                   	pop    %rbp
    fa9b:	c3                   	ret

000000000000fa9c <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    fa9c:	55                   	push   %rbp
    fa9d:	48 89 e5             	mov    %rsp,%rbp
    faa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    faa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    faa8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    faac:	8b 10                	mov    (%rax),%edx
    faae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab2:	8b 00                	mov    (%rax),%eax
    fab4:	39 c2                	cmp    %eax,%edx
    fab6:	73 06                	jae    fabe <_ZSt3minIjERKT_S2_S2_+0x22>
	return __b;
    fab8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fabc:	eb 04                	jmp    fac2 <_ZSt3minIjERKT_S2_S2_+0x26>
      return __a;
    fabe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    fac2:	5d                   	pop    %rbp
    fac3:	c3                   	ret

000000000000fac4 <_ZNKSt8optionalIjEcvbEv>:
      constexpr explicit operator bool() const noexcept
    fac4:	55                   	push   %rbp
    fac5:	48 89 e5             	mov    %rsp,%rbp
    fac8:	48 83 ec 10          	sub    $0x10,%rsp
    facc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    fad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fad4:	48 89 c7             	mov    %rax,%rdi
    fad7:	e8 90 c4 ff ff       	call   bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    fadc:	c9                   	leave
    fadd:	c3                   	ret

000000000000fade <_ZNKRSt8optionalIjEdeEv>:
      operator*() const& noexcept
    fade:	55                   	push   %rbp
    fadf:	48 89 e5             	mov    %rsp,%rbp
    fae2:	48 83 ec 10          	sub    $0x10,%rsp
    fae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_get(); }
    faea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    faee:	48 89 c7             	mov    %rax,%rdi
    faf1:	e8 ee 28 00 00       	call   123e4 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    faf6:	c9                   	leave
    faf7:	c3                   	ret

000000000000faf8 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    faf8:	55                   	push   %rbp
    faf9:	48 89 e5             	mov    %rsp,%rbp
    fafc:	53                   	push   %rbx
    fafd:	48 83 ec 38          	sub    $0x38,%rsp
    fb01:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    fb05:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    fb09:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    fb0e:	0f 84 e7 01 00 00    	je     fcfb <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    fb14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb18:	48 89 c7             	mov    %rax,%rdi
    fb1b:	e8 68 dc ff ff       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    fb20:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    fb24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb28:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    fb2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb30:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb34:	48 29 c2             	sub    %rax,%rdx
    fb37:	48 89 d0             	mov    %rdx,%rax
    fb3a:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    fb3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    fb42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb46:	48 89 c7             	mov    %rax,%rdi
    fb49:	e8 da 28 00 00       	call   12428 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    fb4e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fb52:	72 16                	jb     fb6a <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x72>
    fb54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb58:	48 89 c7             	mov    %rax,%rdi
    fb5b:	e8 c8 28 00 00       	call   12428 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    fb60:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    fb64:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    fb68:	73 07                	jae    fb71 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x79>
    fb6a:	b8 01 00 00 00       	mov    $0x1,%eax
    fb6f:	eb 05                	jmp    fb76 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x7e>
    fb71:	b8 00 00 00 00       	mov    $0x0,%eax
    fb76:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    fb78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fb7c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    fb80:	72 33                	jb     fbb5 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    fb82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb86:	48 89 c7             	mov    %rax,%rdi
    fb89:	e8 40 61 ff ff       	call   5cce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fb8e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    fb91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb95:	48 8b 40 08          	mov    0x8(%rax),%rax
    fb99:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    fb9d:	48 89 ce             	mov    %rcx,%rsi
    fba0:	48 89 c7             	mov    %rax,%rdi
    fba3:	e8 a2 28 00 00       	call   1244a <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    fba8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fbac:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    fbb0:	e9 46 01 00 00       	jmp    fcfb <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    fbb5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    fbb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fbbd:	48 8d 15 15 ac 00 00 	lea    0xac15(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
    fbc4:	48 89 ce             	mov    %rcx,%rsi
    fbc7:	48 89 c7             	mov    %rax,%rdi
    fbca:	e8 a5 28 00 00       	call   12474 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>
    fbcf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    fbd3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fbd7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fbdb:	48 89 d6             	mov    %rdx,%rsi
    fbde:	48 89 c7             	mov    %rax,%rdi
    fbe1:	e8 56 29 00 00       	call   1253c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    fbe6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    fbea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fbee:	48 89 c7             	mov    %rax,%rdi
    fbf1:	e8 d8 60 ff ff       	call   5cce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fbf6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    fbf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fbfd:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    fc04:	00 
    fc05:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc09:	48 01 c1             	add    %rax,%rcx
    fc0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fc10:	48 89 c6             	mov    %rax,%rsi
    fc13:	48 89 cf             	mov    %rcx,%rdi
    fc16:	e8 2f 28 00 00       	call   1244a <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    fc1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fc1f:	48 89 c7             	mov    %rax,%rdi
    fc22:	e8 a7 60 ff ff       	call   5cce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fc27:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    fc2a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fc2e:	48 8b 70 08          	mov    0x8(%rax),%rsi
    fc32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fc36:	48 8b 00             	mov    (%rax),%rax
    fc39:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fc3d:	48 89 c7             	mov    %rax,%rdi
    fc40:	e8 2a 29 00 00       	call   1256f <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    fc45:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    fc49:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fc4d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    fc51:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fc55:	48 8b 12             	mov    (%rdx),%rdx
    fc58:	48 29 d1             	sub    %rdx,%rcx
    fc5b:	48 c1 f9 03          	sar    $0x3,%rcx
    fc5f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    fc62:	48 89 d6             	mov    %rdx,%rsi
    fc65:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fc69:	48 8b 0a             	mov    (%rdx),%rcx
    fc6c:	48 89 f2             	mov    %rsi,%rdx
    fc6f:	48 89 ce             	mov    %rcx,%rsi
    fc72:	48 89 c7             	mov    %rax,%rdi
    fc75:	e8 1e 60 ff ff       	call   5c98 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    fc7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fc7e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fc82:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    fc85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fc89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fc8d:	48 01 d0             	add    %rdx,%rax
    fc90:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fc97:	00 
    fc98:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc9c:	48 01 c2             	add    %rax,%rdx
    fc9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fca3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    fca7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fcab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fcb2:	00 
    fcb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fcb7:	48 01 c2             	add    %rax,%rdx
    fcba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fcbe:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    fcc2:	eb 37                	jmp    fcfb <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    fcc4:	48 89 c7             	mov    %rax,%rdi
    fcc7:	e8 64 44 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    fccc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fcd0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fcd4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    fcd8:	48 89 ce             	mov    %rcx,%rsi
    fcdb:	48 89 c7             	mov    %rax,%rdi
    fcde:	e8 b5 5f ff ff       	call   5c98 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    fce3:	e8 08 4a ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
    fce8:	48 89 c3             	mov    %rax,%rbx
    fceb:	e8 d0 4a ff ff       	call   47c0 <__cxa_end_catch@plt>
    fcf0:	48 89 d8             	mov    %rbx,%rax
    fcf3:	48 89 c7             	mov    %rax,%rdi
    fcf6:	e8 45 4b ff ff       	call   4840 <_Unwind_Resume@plt>
    }
    fcfb:	90                   	nop
    fcfc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fd00:	c9                   	leave
    fd01:	c3                   	ret

000000000000fd02 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    fd02:	55                   	push   %rbp
    fd03:	48 89 e5             	mov    %rsp,%rbp
    fd06:	48 83 ec 20          	sub    $0x20,%rsp
    fd0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd0e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    fd12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd16:	48 8b 40 08          	mov    0x8(%rax),%rax
    fd1a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    fd1e:	48 c1 f8 03          	sar    $0x3,%rax
    fd22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fd26:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    fd2b:	74 32                	je     fd5f <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    fd2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd31:	48 89 c7             	mov    %rax,%rdi
    fd34:	e8 95 5f ff ff       	call   5cce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fd39:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    fd3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd40:	48 8b 48 08          	mov    0x8(%rax),%rcx
    fd44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd48:	48 89 ce             	mov    %rcx,%rsi
    fd4b:	48 89 c7             	mov    %rax,%rdi
    fd4e:	e8 89 5f ff ff       	call   5cdc <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    fd53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd57:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fd5b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    fd5f:	90                   	nop
    fd60:	c9                   	leave
    fd61:	c3                   	ret

000000000000fd62 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    fd62:	55                   	push   %rbp
    fd63:	48 89 e5             	mov    %rsp,%rbp
    fd66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    fd6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fd72:	5d                   	pop    %rbp
    fd73:	c3                   	ret

000000000000fd74 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    fd74:	55                   	push   %rbp
    fd75:	48 89 e5             	mov    %rsp,%rbp
    fd78:	53                   	push   %rbx
    fd79:	48 83 ec 38          	sub    $0x38,%rsp
    fd7d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    fd81:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    fd85:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    fd8a:	0f 84 e7 01 00 00    	je     ff77 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    fd90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fd94:	48 89 c7             	mov    %rax,%rdi
    fd97:	e8 da dd ff ff       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    fd9c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    fda0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fda4:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    fda8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fdac:	48 8b 40 08          	mov    0x8(%rax),%rax
    fdb0:	48 29 c2             	sub    %rax,%rdx
    fdb3:	48 89 d0             	mov    %rdx,%rax
    fdb6:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    fdba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    fdbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fdc2:	48 89 c7             	mov    %rax,%rdi
    fdc5:	e8 d8 27 00 00       	call   125a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    fdca:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fdce:	72 16                	jb     fde6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
    fdd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fdd4:	48 89 c7             	mov    %rax,%rdi
    fdd7:	e8 c6 27 00 00       	call   125a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    fddc:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    fde0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    fde4:	73 07                	jae    fded <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
    fde6:	b8 01 00 00 00       	mov    $0x1,%eax
    fdeb:	eb 05                	jmp    fdf2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
    fded:	b8 00 00 00 00       	mov    $0x0,%eax
    fdf2:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    fdf4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdf8:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    fdfc:	72 33                	jb     fe31 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    fdfe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fe02:	48 89 c7             	mov    %rax,%rdi
    fe05:	e8 88 5f ff ff       	call   5d92 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fe0a:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    fe0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fe11:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe15:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    fe19:	48 89 ce             	mov    %rcx,%rsi
    fe1c:	48 89 c7             	mov    %rax,%rdi
    fe1f:	e8 a0 27 00 00       	call   125c4 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    fe24:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fe28:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    fe2c:	e9 46 01 00 00       	jmp    ff77 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    fe31:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    fe35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fe39:	48 8d 15 99 a9 00 00 	lea    0xa999(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
    fe40:	48 89 ce             	mov    %rcx,%rsi
    fe43:	48 89 c7             	mov    %rax,%rdi
    fe46:	e8 a3 27 00 00       	call   125ee <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
    fe4b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    fe4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fe53:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fe57:	48 89 d6             	mov    %rdx,%rsi
    fe5a:	48 89 c7             	mov    %rax,%rdi
    fe5d:	e8 54 28 00 00       	call   126b6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
    fe62:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    fe66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fe6a:	48 89 c7             	mov    %rax,%rdi
    fe6d:	e8 20 5f ff ff       	call   5d92 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fe72:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    fe75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe79:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    fe80:	00 
    fe81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fe85:	48 01 c1             	add    %rax,%rcx
    fe88:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fe8c:	48 89 c6             	mov    %rax,%rsi
    fe8f:	48 89 cf             	mov    %rcx,%rdi
    fe92:	e8 2d 27 00 00       	call   125c4 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    fe97:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fe9b:	48 89 c7             	mov    %rax,%rdi
    fe9e:	e8 ef 5e ff ff       	call   5d92 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    fea3:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    fea6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    feaa:	48 8b 70 08          	mov    0x8(%rax),%rsi
    feae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    feb2:	48 8b 00             	mov    (%rax),%rax
    feb5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    feb9:	48 89 c7             	mov    %rax,%rdi
    febc:	e8 28 28 00 00       	call   126e9 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    fec1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    fec5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fec9:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    fecd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fed1:	48 8b 12             	mov    (%rdx),%rdx
    fed4:	48 29 d1             	sub    %rdx,%rcx
    fed7:	48 c1 f9 03          	sar    $0x3,%rcx
    fedb:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    fede:	48 89 d6             	mov    %rdx,%rsi
    fee1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fee5:	48 8b 0a             	mov    (%rdx),%rcx
    fee8:	48 89 f2             	mov    %rsi,%rdx
    feeb:	48 89 ce             	mov    %rcx,%rsi
    feee:	48 89 c7             	mov    %rax,%rdi
    fef1:	e8 66 5e ff ff       	call   5d5c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    fef6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fefa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fefe:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    ff01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ff05:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ff09:	48 01 d0             	add    %rdx,%rax
    ff0c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ff13:	00 
    ff14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff18:	48 01 c2             	add    %rax,%rdx
    ff1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ff1f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    ff23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff27:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ff2e:	00 
    ff2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff33:	48 01 c2             	add    %rax,%rdx
    ff36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ff3a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    ff3e:	eb 37                	jmp    ff77 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    ff40:	48 89 c7             	mov    %rax,%rdi
    ff43:	e8 e8 41 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    ff48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ff4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ff50:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    ff54:	48 89 ce             	mov    %rcx,%rsi
    ff57:	48 89 c7             	mov    %rax,%rdi
    ff5a:	e8 fd 5d ff ff       	call   5d5c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    ff5f:	e8 8c 47 ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
    ff64:	48 89 c3             	mov    %rax,%rbx
    ff67:	e8 54 48 ff ff       	call   47c0 <__cxa_end_catch@plt>
    ff6c:	48 89 d8             	mov    %rbx,%rax
    ff6f:	48 89 c7             	mov    %rax,%rdi
    ff72:	e8 c9 48 ff ff       	call   4840 <_Unwind_Resume@plt>
    }
    ff77:	90                   	nop
    ff78:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ff7c:	c9                   	leave
    ff7d:	c3                   	ret

000000000000ff7e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    ff7e:	55                   	push   %rbp
    ff7f:	48 89 e5             	mov    %rsp,%rbp
    ff82:	48 83 ec 20          	sub    $0x20,%rsp
    ff86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ff8a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    ff8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff92:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff96:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ff9a:	48 c1 f8 03          	sar    $0x3,%rax
    ff9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ffa2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ffa7:	74 32                	je     ffdb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    ffa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffad:	48 89 c7             	mov    %rax,%rdi
    ffb0:	e8 dd 5d ff ff       	call   5d92 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ffb5:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    ffb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffbc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ffc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffc4:	48 89 ce             	mov    %rcx,%rsi
    ffc7:	48 89 c7             	mov    %rax,%rdi
    ffca:	e8 d1 5d ff ff       	call   5da0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    ffcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffd3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ffd7:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    ffdb:	90                   	nop
    ffdc:	c9                   	leave
    ffdd:	c3                   	ret

000000000000ffde <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ffde:	55                   	push   %rbp
    ffdf:	48 89 e5             	mov    %rsp,%rbp
    ffe2:	53                   	push   %rbx
    ffe3:	48 83 ec 28          	sub    $0x28,%rsp
    ffe7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ffeb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ffef:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fff3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    fff7:	48 89 d6             	mov    %rdx,%rsi
    fffa:	48 89 c7             	mov    %rax,%rdi
    fffd:	e8 de 41 ff ff       	call   41e0 <_ZNSaIcEC1ERKS_@plt>
   10002:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10006:	48 89 c7             	mov    %rax,%rdi
   10009:	e8 0d 27 00 00       	call   1271b <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
   1000e:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   10012:	0f 92 c3             	setb   %bl
   10015:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10019:	48 89 c7             	mov    %rax,%rdi
   1001c:	e8 8f 44 ff ff       	call   44b0 <_ZNSaIcED1Ev@plt>
   10021:	84 db                	test   %bl,%bl
   10023:	74 0f                	je     10034 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   10025:	48 8d 05 7c a7 00 00 	lea    0xa77c(%rip),%rax        # 1a7a8 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
   1002c:	48 89 c7             	mov    %rax,%rdi
   1002f:	e8 7c 41 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   10034:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   10038:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1003c:	c9                   	leave
   1003d:	c3                   	ret

000000000001003e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1003e:	55                   	push   %rbp
   1003f:	48 89 e5             	mov    %rsp,%rbp
   10042:	53                   	push   %rbx
   10043:	48 83 ec 28          	sub    $0x28,%rsp
   10047:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1004b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1004f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   10053:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10057:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1005b:	48 89 d6             	mov    %rdx,%rsi
   1005e:	48 89 c7             	mov    %rax,%rdi
   10061:	e8 f8 26 00 00       	call   1275e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
   10066:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1006a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1006e:	48 89 d6             	mov    %rdx,%rsi
   10071:	48 89 c7             	mov    %rax,%rdi
   10074:	e8 17 27 00 00       	call   12790 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
   10079:	eb 1a                	jmp    10095 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
   1007b:	48 89 c3             	mov    %rax,%rbx
   1007e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10082:	48 89 c7             	mov    %rax,%rdi
   10085:	e8 10 bf ff ff       	call   bf9a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
   1008a:	48 89 d8             	mov    %rbx,%rax
   1008d:	48 89 c7             	mov    %rax,%rdi
   10090:	e8 ab 47 ff ff       	call   4840 <_Unwind_Resume@plt>
   10095:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10099:	c9                   	leave
   1009a:	c3                   	ret
   1009b:	90                   	nop

000000000001009c <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   1009c:	55                   	push   %rbp
   1009d:	48 89 e5             	mov    %rsp,%rbp
   100a0:	48 83 ec 10          	sub    $0x10,%rsp
   100a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   100ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100b0:	48 89 c7             	mov    %rax,%rdi
   100b3:	e8 24 00 00 00       	call   100dc <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
   100b8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   100bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100bf:	48 8b 00             	mov    (%rax),%rax
   100c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   100c6:	48 89 ce             	mov    %rcx,%rsi
   100c9:	48 89 c7             	mov    %rax,%rdi
   100cc:	e8 11 27 00 00       	call   127e2 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   100d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   100d5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   100d9:	90                   	nop
   100da:	c9                   	leave
   100db:	c3                   	ret

00000000000100dc <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   100dc:	55                   	push   %rbp
   100dd:	48 89 e5             	mov    %rsp,%rbp
   100e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   100e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e8:	5d                   	pop    %rbp
   100e9:	c3                   	ret

00000000000100ea <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   100ea:	55                   	push   %rbp
   100eb:	48 89 e5             	mov    %rsp,%rbp
   100ee:	48 83 ec 20          	sub    $0x20,%rsp
   100f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   100fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   100fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10106:	48 89 d6             	mov    %rdx,%rsi
   10109:	48 89 c7             	mov    %rax,%rdi
   1010c:	e8 fa 26 00 00       	call   1280b <_ZSt8_DestroyIPcEvT_S1_>
    }
   10111:	90                   	nop
   10112:	c9                   	leave
   10113:	c3                   	ret

0000000000010114 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10114:	55                   	push   %rbp
   10115:	48 89 e5             	mov    %rsp,%rbp
   10118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1011c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10120:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10124:	5d                   	pop    %rbp
   10125:	c3                   	ret

0000000000010126 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
   10126:	55                   	push   %rbp
   10127:	48 89 e5             	mov    %rsp,%rbp
   1012a:	48 83 ec 20          	sub    $0x20,%rsp
   1012e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10136:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1013a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1013f:	74 17                	je     10158 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   10141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10145:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10149:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1014d:	48 89 ce             	mov    %rcx,%rsi
   10150:	48 89 c7             	mov    %rax,%rdi
   10153:	e8 d9 26 00 00       	call   12831 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
   10158:	90                   	nop
   10159:	c9                   	leave
   1015a:	c3                   	ret
   1015b:	90                   	nop

000000000001015c <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>:
   1015c:	55                   	push   %rbp
   1015d:	48 89 e5             	mov    %rsp,%rbp
   10160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10164:	90                   	nop
   10165:	5d                   	pop    %rbp
   10166:	c3                   	ret
   10167:	90                   	nop

0000000000010168 <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   10168:	55                   	push   %rbp
   10169:	48 89 e5             	mov    %rsp,%rbp
   1016c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10170:	90                   	nop
   10171:	5d                   	pop    %rbp
   10172:	c3                   	ret
   10173:	90                   	nop

0000000000010174 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   10174:	55                   	push   %rbp
   10175:	48 89 e5             	mov    %rsp,%rbp
   10178:	48 83 ec 10          	sub    $0x10,%rsp
   1017c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10184:	48 89 c7             	mov    %rax,%rdi
   10187:	e8 ba d8 ff ff       	call   da46 <_ZNSaI14VkDynamicStateED1Ev>
   1018c:	90                   	nop
   1018d:	c9                   	leave
   1018e:	c3                   	ret
   1018f:	90                   	nop

0000000000010190 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   10190:	55                   	push   %rbp
   10191:	48 89 e5             	mov    %rsp,%rbp
   10194:	48 83 ec 10          	sub    $0x10,%rsp
   10198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1019c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   101a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   101a8:	48 89 d6             	mov    %rdx,%rsi
   101ab:	48 89 c7             	mov    %rax,%rdi
   101ae:	e8 ad 26 00 00       	call   12860 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>
   101b3:	90                   	nop
   101b4:	c9                   	leave
   101b5:	c3                   	ret

00000000000101b6 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   101b6:	55                   	push   %rbp
   101b7:	48 89 e5             	mov    %rsp,%rbp
   101ba:	48 83 ec 10          	sub    $0x10,%rsp
   101be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   101c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   101ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ce:	48 8b 00             	mov    (%rax),%rax
   101d1:	48 29 c2             	sub    %rax,%rdx
   101d4:	48 89 d0             	mov    %rdx,%rax
   101d7:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   101db:	48 89 c2             	mov    %rax,%rdx
   101de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101e2:	48 8b 08             	mov    (%rax),%rcx
   101e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101e9:	48 89 ce             	mov    %rcx,%rsi
   101ec:	48 89 c7             	mov    %rax,%rdi
   101ef:	e8 9e 26 00 00       	call   12892 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>
      }
   101f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f8:	48 89 c7             	mov    %rax,%rdi
   101fb:	e8 74 ff ff ff       	call   10174 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>
   10200:	90                   	nop
   10201:	c9                   	leave
   10202:	c3                   	ret
   10203:	90                   	nop

0000000000010204 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>:
      begin() const noexcept { return _M_array; }
   10204:	55                   	push   %rbp
   10205:	48 89 e5             	mov    %rsp,%rbp
   10208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1020c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10210:	48 8b 00             	mov    (%rax),%rax
   10213:	5d                   	pop    %rbp
   10214:	c3                   	ret
   10215:	90                   	nop

0000000000010216 <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>:
      end() const noexcept { return begin() + size(); }
   10216:	55                   	push   %rbp
   10217:	48 89 e5             	mov    %rsp,%rbp
   1021a:	53                   	push   %rbx
   1021b:	48 83 ec 18          	sub    $0x18,%rsp
   1021f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10223:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10227:	48 89 c7             	mov    %rax,%rdi
   1022a:	e8 d5 ff ff ff       	call   10204 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
   1022f:	48 89 c3             	mov    %rax,%rbx
   10232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10236:	48 89 c7             	mov    %rax,%rdi
   10239:	e8 8a 26 00 00       	call   128c8 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>
   1023e:	48 c1 e0 02          	shl    $0x2,%rax
   10242:	48 01 d8             	add    %rbx,%rax
   10245:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10249:	c9                   	leave
   1024a:	c3                   	ret

000000000001024b <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   1024b:	55                   	push   %rbp
   1024c:	48 89 e5             	mov    %rsp,%rbp
   1024f:	48 83 ec 10          	sub    $0x10,%rsp
   10253:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10257:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1025b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1025f:	48 89 c7             	mov    %rax,%rdi
   10262:	e8 73 26 00 00       	call   128da <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   10267:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1026b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1026f:	48 89 d6             	mov    %rdx,%rsi
   10272:	48 89 c7             	mov    %rax,%rdi
   10275:	e8 6b 26 00 00       	call   128e5 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   1027a:	c9                   	leave
   1027b:	c3                   	ret

000000000001027c <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1027c:	55                   	push   %rbp
   1027d:	48 89 e5             	mov    %rsp,%rbp
   10280:	53                   	push   %rbx
   10281:	48 83 ec 38          	sub    $0x38,%rsp
   10285:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10289:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1028d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   10291:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10295:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10299:	48 89 d6             	mov    %rdx,%rsi
   1029c:	48 89 c7             	mov    %rax,%rdi
   1029f:	e8 a7 ff ff ff       	call   1024b <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   102a4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   102a8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   102ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102b0:	48 89 c7             	mov    %rax,%rdi
   102b3:	e8 74 00 00 00       	call   1032c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   102b8:	48 89 c2             	mov    %rax,%rdx
   102bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102bf:	48 89 d6             	mov    %rdx,%rsi
   102c2:	48 89 c7             	mov    %rax,%rdi
   102c5:	e8 35 26 00 00       	call   128ff <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>
   102ca:	48 89 c6             	mov    %rax,%rsi
   102cd:	48 89 df             	mov    %rbx,%rdi
   102d0:	e8 8b 26 00 00       	call   12960 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>
   102d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   102d9:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   102dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102e0:	48 8b 00             	mov    (%rax),%rax
   102e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   102e7:	48 c1 e2 02          	shl    $0x2,%rdx
   102eb:	48 01 c2             	add    %rax,%rdx
   102ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102f2:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   102f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102fa:	48 89 c7             	mov    %rax,%rdi
   102fd:	e8 2a 00 00 00       	call   1032c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   10302:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   10305:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10309:	48 8b 10             	mov    (%rax),%rdx
   1030c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   10310:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10314:	48 89 c7             	mov    %rax,%rdi
   10317:	e8 77 26 00 00       	call   12993 <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   1031c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10320:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   10324:	90                   	nop
   10325:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10329:	c9                   	leave
   1032a:	c3                   	ret
   1032b:	90                   	nop

000000000001032c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1032c:	55                   	push   %rbp
   1032d:	48 89 e5             	mov    %rsp,%rbp
   10330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10338:	5d                   	pop    %rbp
   10339:	c3                   	ret

000000000001033a <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1033a:	55                   	push   %rbp
   1033b:	48 89 e5             	mov    %rsp,%rbp
   1033e:	48 83 ec 20          	sub    $0x20,%rsp
   10342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1034a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1034e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10356:	48 89 d6             	mov    %rdx,%rsi
   10359:	48 89 c7             	mov    %rax,%rdi
   1035c:	e8 63 26 00 00       	call   129c4 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>
    }
   10361:	90                   	nop
   10362:	c9                   	leave
   10363:	c3                   	ret

0000000000010364 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10364:	55                   	push   %rbp
   10365:	48 89 e5             	mov    %rsp,%rbp
   10368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1036c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10370:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10374:	5d                   	pop    %rbp
   10375:	c3                   	ret

0000000000010376 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   10376:	55                   	push   %rbp
   10377:	48 89 e5             	mov    %rsp,%rbp
   1037a:	53                   	push   %rbx
   1037b:	48 83 ec 38          	sub    $0x38,%rsp
   1037f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10383:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   10387:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1038c:	0f 84 e7 01 00 00    	je     10579 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   10392:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10396:	48 89 c7             	mov    %rax,%rdi
   10399:	e8 2e db ff ff       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1039e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   103a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103a6:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   103aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103ae:	48 8b 40 08          	mov    0x8(%rax),%rax
   103b2:	48 29 c2             	sub    %rax,%rdx
   103b5:	48 89 d0             	mov    %rdx,%rax
   103b8:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   103bc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   103c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103c4:	48 89 c7             	mov    %rax,%rdi
   103c7:	e8 1e 26 00 00       	call   129ea <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   103cc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   103d0:	72 16                	jb     103e8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   103d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103d6:	48 89 c7             	mov    %rax,%rdi
   103d9:	e8 0c 26 00 00       	call   129ea <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   103de:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   103e2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   103e6:	73 07                	jae    103ef <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   103e8:	b8 01 00 00 00       	mov    $0x1,%eax
   103ed:	eb 05                	jmp    103f4 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   103ef:	b8 00 00 00 00       	mov    $0x0,%eax
   103f4:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   103f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   103fa:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   103fe:	72 33                	jb     10433 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   10400:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10404:	48 89 c7             	mov    %rax,%rdi
   10407:	e8 4a 5a ff ff       	call   5e56 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1040c:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1040f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10413:	48 8b 40 08          	mov    0x8(%rax),%rax
   10417:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1041b:	48 89 ce             	mov    %rcx,%rsi
   1041e:	48 89 c7             	mov    %rax,%rdi
   10421:	e8 e6 25 00 00       	call   12a0c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10426:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1042a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1042e:	e9 46 01 00 00       	jmp    10579 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10433:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10437:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1043b:	48 8d 15 97 a3 00 00 	lea    0xa397(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10442:	48 89 ce             	mov    %rcx,%rsi
   10445:	48 89 c7             	mov    %rax,%rdi
   10448:	e8 e9 25 00 00       	call   12a36 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   1044d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10451:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10455:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10459:	48 89 d6             	mov    %rdx,%rsi
   1045c:	48 89 c7             	mov    %rax,%rdi
   1045f:	e8 9a 26 00 00       	call   12afe <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   10464:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10468:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1046c:	48 89 c7             	mov    %rax,%rdi
   1046f:	e8 e2 59 ff ff       	call   5e56 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10474:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10477:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1047b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10482:	00 
   10483:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10487:	48 01 c1             	add    %rax,%rcx
   1048a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1048e:	48 89 c6             	mov    %rax,%rsi
   10491:	48 89 cf             	mov    %rcx,%rdi
   10494:	e8 73 25 00 00       	call   12a0c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   10499:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1049d:	48 89 c7             	mov    %rax,%rdi
   104a0:	e8 b1 59 ff ff       	call   5e56 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   104a5:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   104a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104ac:	48 8b 70 08          	mov    0x8(%rax),%rsi
   104b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104b4:	48 8b 00             	mov    (%rax),%rax
   104b7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   104bb:	48 89 c7             	mov    %rax,%rdi
   104be:	e8 6e 26 00 00       	call   12b31 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   104c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   104c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   104cb:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   104cf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   104d3:	48 8b 12             	mov    (%rdx),%rdx
   104d6:	48 29 d1             	sub    %rdx,%rcx
   104d9:	48 c1 f9 03          	sar    $0x3,%rcx
   104dd:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   104e0:	48 89 d6             	mov    %rdx,%rsi
   104e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   104e7:	48 8b 0a             	mov    (%rdx),%rcx
   104ea:	48 89 f2             	mov    %rsi,%rdx
   104ed:	48 89 ce             	mov    %rcx,%rsi
   104f0:	48 89 c7             	mov    %rax,%rdi
   104f3:	e8 28 59 ff ff       	call   5e20 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   104f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10500:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10503:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10507:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1050b:	48 01 d0             	add    %rdx,%rax
   1050e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10515:	00 
   10516:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1051a:	48 01 c2             	add    %rax,%rdx
   1051d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10521:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10525:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10529:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10530:	00 
   10531:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10535:	48 01 c2             	add    %rax,%rdx
   10538:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1053c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10540:	eb 37                	jmp    10579 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10542:	48 89 c7             	mov    %rax,%rdi
   10545:	e8 e6 3b ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1054a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1054e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10552:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10556:	48 89 ce             	mov    %rcx,%rsi
   10559:	48 89 c7             	mov    %rax,%rdi
   1055c:	e8 bf 58 ff ff       	call   5e20 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10561:	e8 8a 41 ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
   10566:	48 89 c3             	mov    %rax,%rbx
   10569:	e8 52 42 ff ff       	call   47c0 <__cxa_end_catch@plt>
   1056e:	48 89 d8             	mov    %rbx,%rax
   10571:	48 89 c7             	mov    %rax,%rdi
   10574:	e8 c7 42 ff ff       	call   4840 <_Unwind_Resume@plt>
    }
   10579:	90                   	nop
   1057a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1057e:	c9                   	leave
   1057f:	c3                   	ret

0000000000010580 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10580:	55                   	push   %rbp
   10581:	48 89 e5             	mov    %rsp,%rbp
   10584:	48 83 ec 20          	sub    $0x20,%rsp
   10588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1058c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10594:	48 8b 40 08          	mov    0x8(%rax),%rax
   10598:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1059c:	48 c1 f8 03          	sar    $0x3,%rax
   105a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   105a4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   105a9:	74 32                	je     105dd <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   105ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105af:	48 89 c7             	mov    %rax,%rdi
   105b2:	e8 9f 58 ff ff       	call   5e56 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   105b7:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   105ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105be:	48 8b 48 08          	mov    0x8(%rax),%rcx
   105c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   105c6:	48 89 ce             	mov    %rcx,%rsi
   105c9:	48 89 c7             	mov    %rax,%rdi
   105cc:	e8 93 58 ff ff       	call   5e64 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   105d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   105d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   105dd:	90                   	nop
   105de:	c9                   	leave
   105df:	c3                   	ret

00000000000105e0 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   105e0:	55                   	push   %rbp
   105e1:	48 89 e5             	mov    %rsp,%rbp
   105e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   105ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   105f0:	5d                   	pop    %rbp
   105f1:	c3                   	ret

00000000000105f2 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   105f2:	55                   	push   %rbp
   105f3:	48 89 e5             	mov    %rsp,%rbp
   105f6:	53                   	push   %rbx
   105f7:	48 83 ec 38          	sub    $0x38,%rsp
   105fb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   105ff:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   10603:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10608:	0f 84 e7 01 00 00    	je     107f5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1060e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10612:	48 89 c7             	mov    %rax,%rdi
   10615:	e8 fe d6 ff ff       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   1061a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1061e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10622:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   10626:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1062a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1062e:	48 29 c2             	sub    %rax,%rdx
   10631:	48 89 d0             	mov    %rdx,%rax
   10634:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10638:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1063c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10640:	48 89 c7             	mov    %rax,%rdi
   10643:	e8 1c 25 00 00       	call   12b64 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   10648:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1064c:	72 16                	jb     10664 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   1064e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10652:	48 89 c7             	mov    %rax,%rdi
   10655:	e8 0a 25 00 00       	call   12b64 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   1065a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1065e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10662:	73 07                	jae    1066b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   10664:	b8 01 00 00 00       	mov    $0x1,%eax
   10669:	eb 05                	jmp    10670 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   1066b:	b8 00 00 00 00       	mov    $0x0,%eax
   10670:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10672:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10676:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1067a:	72 33                	jb     106af <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1067c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10680:	48 89 c7             	mov    %rax,%rdi
   10683:	e8 92 58 ff ff       	call   5f1a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10688:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1068b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1068f:	48 8b 40 08          	mov    0x8(%rax),%rax
   10693:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10697:	48 89 ce             	mov    %rcx,%rsi
   1069a:	48 89 c7             	mov    %rax,%rdi
   1069d:	e8 e4 24 00 00       	call   12b86 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   106a2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   106a6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   106aa:	e9 46 01 00 00       	jmp    107f5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   106af:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   106b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   106b7:	48 8d 15 1b a1 00 00 	lea    0xa11b(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   106be:	48 89 ce             	mov    %rcx,%rsi
   106c1:	48 89 c7             	mov    %rax,%rdi
   106c4:	e8 e7 24 00 00       	call   12bb0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc>
   106c9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   106cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   106d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   106d5:	48 89 d6             	mov    %rdx,%rsi
   106d8:	48 89 c7             	mov    %rax,%rdi
   106db:	e8 98 25 00 00       	call   12c78 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
   106e0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   106e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   106e8:	48 89 c7             	mov    %rax,%rdi
   106eb:	e8 2a 58 ff ff       	call   5f1a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   106f0:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   106f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106f7:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   106fe:	00 
   106ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10703:	48 01 c1             	add    %rax,%rcx
   10706:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1070a:	48 89 c6             	mov    %rax,%rsi
   1070d:	48 89 cf             	mov    %rcx,%rdi
   10710:	e8 71 24 00 00       	call   12b86 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   10715:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10719:	48 89 c7             	mov    %rax,%rdi
   1071c:	e8 f9 57 ff ff       	call   5f1a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10721:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   10724:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10728:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1072c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10730:	48 8b 00             	mov    (%rax),%rax
   10733:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10737:	48 89 c7             	mov    %rax,%rdi
   1073a:	e8 6c 25 00 00       	call   12cab <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1073f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10743:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10747:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1074b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1074f:	48 8b 12             	mov    (%rdx),%rdx
   10752:	48 29 d1             	sub    %rdx,%rcx
   10755:	48 c1 f9 03          	sar    $0x3,%rcx
   10759:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1075c:	48 89 d6             	mov    %rdx,%rsi
   1075f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10763:	48 8b 0a             	mov    (%rdx),%rcx
   10766:	48 89 f2             	mov    %rsi,%rdx
   10769:	48 89 ce             	mov    %rcx,%rsi
   1076c:	48 89 c7             	mov    %rax,%rdi
   1076f:	e8 70 57 ff ff       	call   5ee4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10774:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10778:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1077c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1077f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10783:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10787:	48 01 d0             	add    %rdx,%rax
   1078a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10791:	00 
   10792:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10796:	48 01 c2             	add    %rax,%rdx
   10799:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1079d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   107a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   107ac:	00 
   107ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   107b1:	48 01 c2             	add    %rax,%rdx
   107b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   107b8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   107bc:	eb 37                	jmp    107f5 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   107be:	48 89 c7             	mov    %rax,%rdi
   107c1:	e8 6a 39 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   107c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   107ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   107ce:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   107d2:	48 89 ce             	mov    %rcx,%rsi
   107d5:	48 89 c7             	mov    %rax,%rdi
   107d8:	e8 07 57 ff ff       	call   5ee4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   107dd:	e8 0e 3f ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
   107e2:	48 89 c3             	mov    %rax,%rbx
   107e5:	e8 d6 3f ff ff       	call   47c0 <__cxa_end_catch@plt>
   107ea:	48 89 d8             	mov    %rbx,%rax
   107ed:	48 89 c7             	mov    %rax,%rdi
   107f0:	e8 4b 40 ff ff       	call   4840 <_Unwind_Resume@plt>
    }
   107f5:	90                   	nop
   107f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   107fa:	c9                   	leave
   107fb:	c3                   	ret

00000000000107fc <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   107fc:	55                   	push   %rbp
   107fd:	48 89 e5             	mov    %rsp,%rbp
   10800:	48 83 ec 20          	sub    $0x20,%rsp
   10804:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10808:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1080c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10810:	48 8b 40 08          	mov    0x8(%rax),%rax
   10814:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10818:	48 c1 f8 03          	sar    $0x3,%rax
   1081c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10820:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10825:	74 32                	je     10859 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   10827:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1082b:	48 89 c7             	mov    %rax,%rdi
   1082e:	e8 e7 56 ff ff       	call   5f1a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10833:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1083a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1083e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10842:	48 89 ce             	mov    %rcx,%rsi
   10845:	48 89 c7             	mov    %rax,%rdi
   10848:	e8 db 56 ff ff       	call   5f28 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1084d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10851:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10855:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   10859:	90                   	nop
   1085a:	c9                   	leave
   1085b:	c3                   	ret

000000000001085c <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1085c:	55                   	push   %rbp
   1085d:	48 89 e5             	mov    %rsp,%rbp
   10860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10864:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10868:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1086c:	5d                   	pop    %rbp
   1086d:	c3                   	ret

000000000001086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1086e:	55                   	push   %rbp
   1086f:	48 89 e5             	mov    %rsp,%rbp
   10872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1087a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1087e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10882:	48 8b 00             	mov    (%rax),%rax
   10885:	48 29 c2             	sub    %rax,%rdx
   10888:	48 89 d0             	mov    %rdx,%rax
   1088b:	48 c1 f8 03          	sar    $0x3,%rax
   1088f:	5d                   	pop    %rbp
   10890:	c3                   	ret
   10891:	90                   	nop

0000000000010892 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   10892:	55                   	push   %rbp
   10893:	48 89 e5             	mov    %rsp,%rbp
   10896:	53                   	push   %rbx
   10897:	48 83 ec 38          	sub    $0x38,%rsp
   1089b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1089f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   108a3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   108a8:	0f 84 e7 01 00 00    	je     10a95 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   108ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108b2:	48 89 c7             	mov    %rax,%rdi
   108b5:	e8 b4 ff ff ff       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   108ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   108be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108c2:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   108c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108ca:	48 8b 40 08          	mov    0x8(%rax),%rax
   108ce:	48 29 c2             	sub    %rax,%rdx
   108d1:	48 89 d0             	mov    %rdx,%rax
   108d4:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   108d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   108dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108e0:	48 89 c7             	mov    %rax,%rdi
   108e3:	e8 f6 23 00 00       	call   12cde <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   108e8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   108ec:	72 16                	jb     10904 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   108ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108f2:	48 89 c7             	mov    %rax,%rdi
   108f5:	e8 e4 23 00 00       	call   12cde <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   108fa:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   108fe:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10902:	73 07                	jae    1090b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   10904:	b8 01 00 00 00       	mov    $0x1,%eax
   10909:	eb 05                	jmp    10910 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   1090b:	b8 00 00 00 00       	mov    $0x0,%eax
   10910:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10912:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10916:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1091a:	72 33                	jb     1094f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1091c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10920:	48 89 c7             	mov    %rax,%rdi
   10923:	e8 b6 56 ff ff       	call   5fde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10928:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1092b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1092f:	48 8b 40 08          	mov    0x8(%rax),%rax
   10933:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10937:	48 89 ce             	mov    %rcx,%rsi
   1093a:	48 89 c7             	mov    %rax,%rdi
   1093d:	e8 be 23 00 00       	call   12d00 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10942:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10946:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1094a:	e9 46 01 00 00       	jmp    10a95 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1094f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10953:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10957:	48 8d 15 7b 9e 00 00 	lea    0x9e7b(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   1095e:	48 89 ce             	mov    %rcx,%rsi
   10961:	48 89 c7             	mov    %rax,%rdi
   10964:	e8 c1 23 00 00       	call   12d2a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   10969:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1096d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10971:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10975:	48 89 d6             	mov    %rdx,%rsi
   10978:	48 89 c7             	mov    %rax,%rdi
   1097b:	e8 72 24 00 00       	call   12df2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   10980:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10984:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10988:	48 89 c7             	mov    %rax,%rdi
   1098b:	e8 4e 56 ff ff       	call   5fde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10990:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10997:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1099e:	00 
   1099f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   109a3:	48 01 c1             	add    %rax,%rcx
   109a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   109aa:	48 89 c6             	mov    %rax,%rsi
   109ad:	48 89 cf             	mov    %rcx,%rdi
   109b0:	e8 4b 23 00 00       	call   12d00 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   109b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109b9:	48 89 c7             	mov    %rax,%rdi
   109bc:	e8 1d 56 ff ff       	call   5fde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   109c1:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   109c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109c8:	48 8b 70 08          	mov    0x8(%rax),%rsi
   109cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109d0:	48 8b 00             	mov    (%rax),%rax
   109d3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   109d7:	48 89 c7             	mov    %rax,%rdi
   109da:	e8 46 24 00 00       	call   12e25 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   109df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   109e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   109e7:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   109eb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   109ef:	48 8b 12             	mov    (%rdx),%rdx
   109f2:	48 29 d1             	sub    %rdx,%rcx
   109f5:	48 c1 f9 03          	sar    $0x3,%rcx
   109f9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   109fc:	48 89 d6             	mov    %rdx,%rsi
   109ff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10a03:	48 8b 0a             	mov    (%rdx),%rcx
   10a06:	48 89 f2             	mov    %rsi,%rdx
   10a09:	48 89 ce             	mov    %rcx,%rsi
   10a0c:	48 89 c7             	mov    %rax,%rdi
   10a0f:	e8 94 55 ff ff       	call   5fa8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10a14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a18:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10a1c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10a1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10a23:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10a27:	48 01 d0             	add    %rdx,%rax
   10a2a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10a31:	00 
   10a32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10a36:	48 01 c2             	add    %rax,%rdx
   10a39:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a3d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10a41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a45:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10a4c:	00 
   10a4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10a51:	48 01 c2             	add    %rax,%rdx
   10a54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a58:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10a5c:	eb 37                	jmp    10a95 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10a5e:	48 89 c7             	mov    %rax,%rdi
   10a61:	e8 ca 36 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   10a66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a6a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10a6e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10a72:	48 89 ce             	mov    %rcx,%rsi
   10a75:	48 89 c7             	mov    %rax,%rdi
   10a78:	e8 2b 55 ff ff       	call   5fa8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10a7d:	e8 6e 3c ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
   10a82:	48 89 c3             	mov    %rax,%rbx
   10a85:	e8 36 3d ff ff       	call   47c0 <__cxa_end_catch@plt>
   10a8a:	48 89 d8             	mov    %rbx,%rax
   10a8d:	48 89 c7             	mov    %rax,%rdi
   10a90:	e8 ab 3d ff ff       	call   4840 <_Unwind_Resume@plt>
    }
   10a95:	90                   	nop
   10a96:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10a9a:	c9                   	leave
   10a9b:	c3                   	ret

0000000000010a9c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10a9c:	55                   	push   %rbp
   10a9d:	48 89 e5             	mov    %rsp,%rbp
   10aa0:	48 83 ec 20          	sub    $0x20,%rsp
   10aa4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10aa8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10aac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab0:	48 8b 40 08          	mov    0x8(%rax),%rax
   10ab4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10ab8:	48 c1 f8 03          	sar    $0x3,%rax
   10abc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10ac0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10ac5:	74 32                	je     10af9 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   10ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10acb:	48 89 c7             	mov    %rax,%rdi
   10ace:	e8 0b 55 ff ff       	call   5fde <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10ad3:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ada:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10ade:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ae2:	48 89 ce             	mov    %rcx,%rsi
   10ae5:	48 89 c7             	mov    %rax,%rdi
   10ae8:	e8 ff 54 ff ff       	call   5fec <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   10aed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10af1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10af5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   10af9:	90                   	nop
   10afa:	c9                   	leave
   10afb:	c3                   	ret

0000000000010afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10afc:	55                   	push   %rbp
   10afd:	48 89 e5             	mov    %rsp,%rbp
   10b00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b08:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b10:	48 8b 00             	mov    (%rax),%rax
   10b13:	48 29 c2             	sub    %rax,%rdx
   10b16:	48 89 d0             	mov    %rdx,%rax
   10b19:	48 c1 f8 03          	sar    $0x3,%rax
   10b1d:	5d                   	pop    %rbp
   10b1e:	c3                   	ret
   10b1f:	90                   	nop

0000000000010b20 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   10b20:	55                   	push   %rbp
   10b21:	48 89 e5             	mov    %rsp,%rbp
   10b24:	53                   	push   %rbx
   10b25:	48 83 ec 38          	sub    $0x38,%rsp
   10b29:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10b2d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   10b31:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10b36:	0f 84 e7 01 00 00    	je     10d23 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   10b3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b40:	48 89 c7             	mov    %rax,%rdi
   10b43:	e8 b4 ff ff ff       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   10b48:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10b4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b50:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   10b54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b58:	48 8b 40 08          	mov    0x8(%rax),%rax
   10b5c:	48 29 c2             	sub    %rax,%rdx
   10b5f:	48 89 d0             	mov    %rdx,%rax
   10b62:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10b66:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   10b6a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b6e:	48 89 c7             	mov    %rax,%rdi
   10b71:	e8 e2 22 00 00       	call   12e58 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   10b76:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10b7a:	72 16                	jb     10b92 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   10b7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b80:	48 89 c7             	mov    %rax,%rdi
   10b83:	e8 d0 22 00 00       	call   12e58 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   10b88:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10b8c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10b90:	73 07                	jae    10b99 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   10b92:	b8 01 00 00 00       	mov    $0x1,%eax
   10b97:	eb 05                	jmp    10b9e <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   10b99:	b8 00 00 00 00       	mov    $0x0,%eax
   10b9e:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10ba0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ba4:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   10ba8:	72 33                	jb     10bdd <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   10baa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10bae:	48 89 c7             	mov    %rax,%rdi
   10bb1:	e8 ec 54 ff ff       	call   60a2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10bb6:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   10bb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10bbd:	48 8b 40 08          	mov    0x8(%rax),%rax
   10bc1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10bc5:	48 89 ce             	mov    %rcx,%rsi
   10bc8:	48 89 c7             	mov    %rax,%rdi
   10bcb:	e8 aa 22 00 00       	call   12e7a <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10bd0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10bd4:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   10bd8:	e9 46 01 00 00       	jmp    10d23 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10bdd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10be1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10be5:	48 8d 15 ed 9b 00 00 	lea    0x9bed(%rip),%rdx        # 1a7d9 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10bec:	48 89 ce             	mov    %rcx,%rsi
   10bef:	48 89 c7             	mov    %rax,%rdi
   10bf2:	e8 ad 22 00 00       	call   12ea4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   10bf7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10bfb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10bff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10c03:	48 89 d6             	mov    %rdx,%rsi
   10c06:	48 89 c7             	mov    %rax,%rdi
   10c09:	e8 5e 23 00 00       	call   12f6c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   10c0e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10c12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c16:	48 89 c7             	mov    %rax,%rdi
   10c19:	e8 84 54 ff ff       	call   60a2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10c1e:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10c21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c25:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10c2c:	00 
   10c2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10c31:	48 01 c1             	add    %rax,%rcx
   10c34:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10c38:	48 89 c6             	mov    %rax,%rsi
   10c3b:	48 89 cf             	mov    %rcx,%rdi
   10c3e:	e8 37 22 00 00       	call   12e7a <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   10c43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c47:	48 89 c7             	mov    %rax,%rdi
   10c4a:	e8 53 54 ff ff       	call   60a2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10c4f:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   10c52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c56:	48 8b 70 08          	mov    0x8(%rax),%rsi
   10c5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c5e:	48 8b 00             	mov    (%rax),%rax
   10c61:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10c65:	48 89 c7             	mov    %rax,%rdi
   10c68:	e8 32 23 00 00       	call   12f9f <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   10c6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10c71:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10c75:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   10c79:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10c7d:	48 8b 12             	mov    (%rdx),%rdx
   10c80:	48 29 d1             	sub    %rdx,%rcx
   10c83:	48 c1 f9 03          	sar    $0x3,%rcx
   10c87:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   10c8a:	48 89 d6             	mov    %rdx,%rsi
   10c8d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10c91:	48 8b 0a             	mov    (%rdx),%rcx
   10c94:	48 89 f2             	mov    %rsi,%rdx
   10c97:	48 89 ce             	mov    %rcx,%rsi
   10c9a:	48 89 c7             	mov    %rax,%rdi
   10c9d:	e8 ca 53 ff ff       	call   606c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10ca2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ca6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10caa:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10cad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10cb1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10cb5:	48 01 d0             	add    %rdx,%rax
   10cb8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10cbf:	00 
   10cc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10cc4:	48 01 c2             	add    %rax,%rdx
   10cc7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ccb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10ccf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10cd3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10cda:	00 
   10cdb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10cdf:	48 01 c2             	add    %rax,%rdx
   10ce2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ce6:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10cea:	eb 37                	jmp    10d23 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10cec:	48 89 c7             	mov    %rax,%rdi
   10cef:	e8 3c 34 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   10cf4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10cf8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10cfc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10d00:	48 89 ce             	mov    %rcx,%rsi
   10d03:	48 89 c7             	mov    %rax,%rdi
   10d06:	e8 61 53 ff ff       	call   606c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10d0b:	e8 e0 39 ff ff       	call   46f0 <__cxa_rethrow@plt>
		  __catch(...)
   10d10:	48 89 c3             	mov    %rax,%rbx
   10d13:	e8 a8 3a ff ff       	call   47c0 <__cxa_end_catch@plt>
   10d18:	48 89 d8             	mov    %rbx,%rax
   10d1b:	48 89 c7             	mov    %rax,%rdi
   10d1e:	e8 1d 3b ff ff       	call   4840 <_Unwind_Resume@plt>
    }
   10d23:	90                   	nop
   10d24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10d28:	c9                   	leave
   10d29:	c3                   	ret

0000000000010d2a <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10d2a:	55                   	push   %rbp
   10d2b:	48 89 e5             	mov    %rsp,%rbp
   10d2e:	48 83 ec 20          	sub    $0x20,%rsp
   10d32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10d3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d3e:	48 8b 40 08          	mov    0x8(%rax),%rax
   10d42:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10d46:	48 c1 f8 03          	sar    $0x3,%rax
   10d4a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10d4e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10d53:	74 32                	je     10d87 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   10d55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d59:	48 89 c7             	mov    %rax,%rdi
   10d5c:	e8 41 53 ff ff       	call   60a2 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10d61:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10d64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d68:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10d6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d70:	48 89 ce             	mov    %rcx,%rsi
   10d73:	48 89 c7             	mov    %rax,%rdi
   10d76:	e8 35 53 ff ff       	call   60b0 <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   10d7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10d83:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   10d87:	90                   	nop
   10d88:	c9                   	leave
   10d89:	c3                   	ret

0000000000010d8a <_ZNSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   10d8a:	55                   	push   %rbp
   10d8b:	48 89 e5             	mov    %rsp,%rbp
   10d8e:	53                   	push   %rbx
   10d8f:	48 83 ec 18          	sub    $0x18,%rsp
   10d93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d97:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10d9b:	e8 fa ad ff ff       	call   bb9a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   10da0:	48 89 03             	mov    %rax,(%rbx)
	{ }
   10da3:	90                   	nop
   10da4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10da8:	c9                   	leave
   10da9:	c3                   	ret

0000000000010daa <_ZNSt6chronomiINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   10daa:	55                   	push   %rbp
   10dab:	48 89 e5             	mov    %rsp,%rbp
   10dae:	48 83 ec 20          	sub    $0x20,%rsp
   10db2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10db6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   10dba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10dbe:	48 89 c7             	mov    %rax,%rdi
   10dc1:	e8 18 b2 ff ff       	call   bfde <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   10dc6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10dca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10dce:	48 89 c7             	mov    %rax,%rdi
   10dd1:	e8 08 b2 ff ff       	call   bfde <_ZNKSt6chrono10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   10dd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10dda:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10dde:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10de2:	48 89 d6             	mov    %rdx,%rsi
   10de5:	48 89 c7             	mov    %rax,%rdi
   10de8:	e8 e4 21 00 00       	call   12fd1 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   10ded:	c9                   	leave
   10dee:	c3                   	ret

0000000000010def <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   10def:	55                   	push   %rbp
   10df0:	48 89 e5             	mov    %rsp,%rbp
   10df3:	48 83 ec 10          	sub    $0x10,%rsp
   10df7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   10dfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dff:	48 89 c7             	mov    %rax,%rdi
   10e02:	e8 33 22 00 00       	call   1303a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   10e07:	c9                   	leave
   10e08:	c3                   	ret
   10e09:	90                   	nop

0000000000010e0a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   10e0a:	55                   	push   %rbp
   10e0b:	48 89 e5             	mov    %rsp,%rbp
   10e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   10e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e16:	48 8b 00             	mov    (%rax),%rax
   10e19:	5d                   	pop    %rbp
   10e1a:	c3                   	ret

0000000000010e1b <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
   10e1b:	55                   	push   %rbp
   10e1c:	48 89 e5             	mov    %rsp,%rbp
   10e1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10e23:	90                   	nop
   10e24:	5d                   	pop    %rbp
   10e25:	c3                   	ret

0000000000010e26 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   10e26:	55                   	push   %rbp
   10e27:	48 89 e5             	mov    %rsp,%rbp
   10e2a:	48 83 ec 10          	sub    $0x10,%rsp
   10e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   10e36:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10e3a:	48 89 c7             	mov    %rax,%rdi
   10e3d:	e8 51 22 00 00       	call   13093 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   10e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10e4a:	48 89 d6             	mov    %rdx,%rsi
   10e4d:	48 89 c7             	mov    %rax,%rdi
   10e50:	e8 49 22 00 00       	call   1309e <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   10e55:	c9                   	leave
   10e56:	c3                   	ret

0000000000010e57 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   10e57:	55                   	push   %rbp
   10e58:	48 89 e5             	mov    %rsp,%rbp
   10e5b:	48 83 ec 20          	sub    $0x20,%rsp
   10e5f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   10e63:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   10e6a:	07 7e 00 
   10e6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   10e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e75:	48 89 c7             	mov    %rax,%rdi
   10e78:	e8 62 22 00 00       	call   130df <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
   10e7d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   10e81:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10e85:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10e89:	48 89 d6             	mov    %rdx,%rsi
   10e8c:	48 89 c7             	mov    %rax,%rdi
   10e8f:	e8 91 57 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   10e94:	48 8b 00             	mov    (%rax),%rax
      }
   10e97:	c9                   	leave
   10e98:	c3                   	ret
   10e99:	90                   	nop

0000000000010e9a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   10e9a:	55                   	push   %rbp
   10e9b:	48 89 e5             	mov    %rsp,%rbp
   10e9e:	48 83 ec 10          	sub    $0x10,%rsp
   10ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ea6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   10eaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eb2:	48 89 d6             	mov    %rdx,%rsi
   10eb5:	48 89 c7             	mov    %rax,%rdi
   10eb8:	e8 0d d4 ff ff       	call   e2ca <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
   10ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ec1:	48 89 c7             	mov    %rax,%rdi
   10ec4:	e8 31 22 00 00       	call   130fa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   10ec9:	90                   	nop
   10eca:	c9                   	leave
   10ecb:	c3                   	ret

0000000000010ecc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   10ecc:	55                   	push   %rbp
   10ecd:	48 89 e5             	mov    %rsp,%rbp
   10ed0:	48 83 ec 10          	sub    $0x10,%rsp
   10ed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ed8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   10edc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ee4:	48 89 d6             	mov    %rdx,%rsi
   10ee7:	48 89 c7             	mov    %rax,%rdi
   10eea:	e8 39 22 00 00       	call   13128 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
   10eef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10ef3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   10ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10efa:	48 8b 10             	mov    (%rax),%rdx
   10efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f01:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   10f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f09:	48 8b 08             	mov    (%rax),%rcx
   10f0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10f10:	48 89 d0             	mov    %rdx,%rax
   10f13:	48 c1 e0 06          	shl    $0x6,%rax
   10f17:	48 01 d0             	add    %rdx,%rax
   10f1a:	48 c1 e0 02          	shl    $0x2,%rax
   10f1e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   10f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f26:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   10f2a:	90                   	nop
   10f2b:	c9                   	leave
   10f2c:	c3                   	ret

0000000000010f2d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   10f2d:	55                   	push   %rbp
   10f2e:	48 89 e5             	mov    %rsp,%rbp
   10f31:	48 83 ec 20          	sub    $0x20,%rsp
   10f35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f39:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10f3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
   10f41:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10f45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f49:	48 89 d6             	mov    %rdx,%rsi
   10f4c:	48 89 c7             	mov    %rax,%rdi
   10f4f:	e8 07 22 00 00       	call   1315b <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
   10f54:	c9                   	leave
   10f55:	c3                   	ret

0000000000010f56 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   10f56:	55                   	push   %rbp
   10f57:	48 89 e5             	mov    %rsp,%rbp
   10f5a:	48 83 ec 10          	sub    $0x10,%rsp
   10f5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   10f66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10f6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f6e:	48 89 d6             	mov    %rdx,%rsi
   10f71:	48 89 c7             	mov    %rax,%rdi
   10f74:	e8 0b 22 00 00       	call   13184 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
   10f79:	90                   	nop
   10f7a:	c9                   	leave
   10f7b:	c3                   	ret

0000000000010f7c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   10f7c:	55                   	push   %rbp
   10f7d:	48 89 e5             	mov    %rsp,%rbp
   10f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10f88:	90                   	nop
   10f89:	5d                   	pop    %rbp
   10f8a:	c3                   	ret

0000000000010f8b <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   10f8b:	55                   	push   %rbp
   10f8c:	48 89 e5             	mov    %rsp,%rbp
   10f8f:	48 83 ec 20          	sub    $0x20,%rsp
   10f93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10f9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   10f9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10fa3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fab:	48 89 ce             	mov    %rcx,%rsi
   10fae:	48 89 c7             	mov    %rax,%rdi
   10fb1:	e8 de 21 00 00       	call   13194 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
   10fb6:	90                   	nop
   10fb7:	c9                   	leave
   10fb8:	c3                   	ret

0000000000010fb9 <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   10fb9:	55                   	push   %rbp
   10fba:	48 89 e5             	mov    %rsp,%rbp
   10fbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fc1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   10fc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10fc9:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   10fcd:	48 c1 f8 03          	sar    $0x3,%rax
    }
   10fd1:	5d                   	pop    %rbp
   10fd2:	c3                   	ret

0000000000010fd3 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   10fd3:	55                   	push   %rbp
   10fd4:	48 89 e5             	mov    %rsp,%rbp
   10fd7:	48 83 ec 20          	sub    $0x20,%rsp
   10fdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fdf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10fe3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   10fe7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   10feb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10fef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ff7:	48 89 ce             	mov    %rcx,%rsi
   10ffa:	48 89 c7             	mov    %rax,%rdi
   10ffd:	e8 cc 21 00 00       	call   131ce <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>
    }
   11002:	c9                   	leave
   11003:	c3                   	ret

0000000000011004 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11004:	55                   	push   %rbp
   11005:	48 89 e5             	mov    %rsp,%rbp
   11008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1100c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11010:	5d                   	pop    %rbp
   11011:	c3                   	ret

0000000000011012 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   11012:	55                   	push   %rbp
   11013:	48 89 e5             	mov    %rsp,%rbp
   11016:	48 83 ec 20          	sub    $0x20,%rsp
   1101a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1101e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11022:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   11026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1102a:	48 89 c7             	mov    %rax,%rdi
   1102d:	e8 d2 ff ff ff       	call   11004 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   11032:	48 89 c2             	mov    %rax,%rdx
   11035:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1103d:	48 89 ce             	mov    %rcx,%rsi
   11040:	48 89 c7             	mov    %rax,%rdi
   11043:	e8 bc 21 00 00       	call   13204 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
   11048:	90                   	nop
   11049:	c9                   	leave
   1104a:	c3                   	ret
   1104b:	90                   	nop

000000000001104c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   1104c:	55                   	push   %rbp
   1104d:	48 89 e5             	mov    %rsp,%rbp
   11050:	53                   	push   %rbx
   11051:	48 83 ec 68          	sub    $0x68,%rsp
   11055:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   11059:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1105d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   11061:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11065:	48 8d 15 87 97 00 00 	lea    0x9787(%rip),%rdx        # 1a7f3 <_ZN6__pstl9execution2v1L5unseqE+0x588>
   1106c:	be 01 00 00 00       	mov    $0x1,%esi
   11071:	48 89 c7             	mov    %rax,%rdi
   11074:	e8 cd 21 00 00       	call   13246 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   11079:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1107d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11081:	48 8b 00             	mov    (%rax),%rax
   11084:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   11088:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1108c:	48 8b 40 08          	mov    0x8(%rax),%rax
   11090:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   11094:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11098:	48 89 c7             	mov    %rax,%rdi
   1109b:	e8 58 b6 ff ff       	call   c6f8 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   110a0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   110a4:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   110a8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   110ac:	48 89 d6             	mov    %rdx,%rsi
   110af:	48 89 c7             	mov    %rax,%rdi
   110b2:	e8 57 22 00 00       	call   1330e <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   110b7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   110bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   110bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   110c3:	48 89 d6             	mov    %rdx,%rsi
   110c6:	48 89 c7             	mov    %rax,%rdi
   110c9:	e8 8e 52 ff ff       	call   635c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   110ce:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   110d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   110d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   110da:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   110de:	48 89 c7             	mov    %rax,%rdi
   110e1:	e8 1e ff ff ff       	call   11004 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   110e6:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   110e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   110ed:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   110f4:	00 
	  _Alloc_traits::construct(this->_M_impl,
   110f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   110f9:	48 01 c1             	add    %rax,%rcx
   110fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11100:	48 89 ce             	mov    %rcx,%rsi
   11103:	48 89 c7             	mov    %rax,%rdi
   11106:	e8 07 ff ff ff       	call   11012 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   1110b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   11112:	00 
					 __new_start, _M_get_Tp_allocator());
   11113:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11117:	48 89 c7             	mov    %rax,%rdi
   1111a:	e8 eb 4a ff ff       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1111f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   11122:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11126:	48 89 c7             	mov    %rax,%rdi
   11129:	e8 1e d6 ff ff       	call   e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1112e:	48 8b 30             	mov    (%rax),%rsi
   11131:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11135:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11139:	48 89 d9             	mov    %rbx,%rcx
   1113c:	48 89 c7             	mov    %rax,%rdi
   1113f:	e8 0c 22 00 00       	call   13350 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11144:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   11148:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   1114d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11151:	48 89 c7             	mov    %rax,%rdi
   11154:	e8 b1 4a ff ff       	call   5c0a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11159:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1115c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11160:	48 89 c7             	mov    %rax,%rdi
   11163:	e8 e4 d5 ff ff       	call   e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11168:	48 8b 00             	mov    (%rax),%rax
   1116b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1116f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11173:	48 89 d9             	mov    %rbx,%rcx
   11176:	48 89 c7             	mov    %rax,%rdi
   11179:	e8 d2 21 00 00       	call   13350 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1117e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   11182:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   11186:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1118a:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1118e:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   11192:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   11196:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1119a:	48 89 ce             	mov    %rcx,%rsi
   1119d:	48 89 c7             	mov    %rax,%rdi
   111a0:	e8 e9 50 ff ff       	call   628e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   111a5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   111a9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   111ad:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   111b0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   111b4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   111b8:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   111bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111c0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   111c7:	00 
   111c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111cc:	48 01 c2             	add    %rax,%rdx
   111cf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   111d3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   111d7:	90                   	nop
   111d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   111dc:	c9                   	leave
   111dd:	c3                   	ret

00000000000111de <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   111de:	55                   	push   %rbp
   111df:	48 89 e5             	mov    %rsp,%rbp
   111e2:	48 83 ec 20          	sub    $0x20,%rsp
   111e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   111ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111ee:	48 89 c7             	mov    %rax,%rdi
   111f1:	e8 28 b5 ff ff       	call   c71e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   111f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   111fa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   111fe:	be 01 00 00 00       	mov    $0x1,%esi
   11203:	48 89 c7             	mov    %rax,%rdi
   11206:	e8 77 21 00 00       	call   13382 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   1120b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1120f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   11213:	48 89 c7             	mov    %rax,%rdi
   11216:	e8 87 b5 ff ff       	call   c7a2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   1121b:	c9                   	leave
   1121c:	c3                   	ret

000000000001121d <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1121d:	55                   	push   %rbp
   1121e:	48 89 e5             	mov    %rsp,%rbp
   11221:	48 83 ec 20          	sub    $0x20,%rsp
   11225:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   11229:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   11230:	03 3f 00 
   11233:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   11237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1123b:	48 89 c7             	mov    %rax,%rdi
   1123e:	e8 81 21 00 00       	call   133c4 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
   11243:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   11247:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1124b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1124f:	48 89 d6             	mov    %rdx,%rsi
   11252:	48 89 c7             	mov    %rax,%rdi
   11255:	e8 cb 53 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   1125a:	48 8b 00             	mov    (%rax),%rax
      }
   1125d:	c9                   	leave
   1125e:	c3                   	ret
   1125f:	90                   	nop

0000000000011260 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   11260:	55                   	push   %rbp
   11261:	48 89 e5             	mov    %rsp,%rbp
   11264:	48 83 ec 10          	sub    $0x10,%rsp
   11268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1126c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   11270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11278:	48 89 d6             	mov    %rdx,%rsi
   1127b:	48 89 c7             	mov    %rax,%rdi
   1127e:	e8 5b 21 00 00       	call   133de <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
   11283:	90                   	nop
   11284:	c9                   	leave
   11285:	c3                   	ret

0000000000011286 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   11286:	55                   	push   %rbp
   11287:	48 89 e5             	mov    %rsp,%rbp
   1128a:	48 83 ec 10          	sub    $0x10,%rsp
   1128e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   11296:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1129a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1129e:	48 89 d6             	mov    %rdx,%rsi
   112a1:	48 89 c7             	mov    %rax,%rdi
   112a4:	e8 b7 ff ff ff       	call   11260 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
   112a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112ad:	48 89 c7             	mov    %rax,%rdi
   112b0:	e8 39 21 00 00       	call   133ee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   112b5:	90                   	nop
   112b6:	c9                   	leave
   112b7:	c3                   	ret

00000000000112b8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   112b8:	55                   	push   %rbp
   112b9:	48 89 e5             	mov    %rsp,%rbp
   112bc:	48 83 ec 10          	sub    $0x10,%rsp
   112c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   112c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   112c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   112cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112d0:	48 89 d6             	mov    %rdx,%rsi
   112d3:	48 89 c7             	mov    %rax,%rdi
   112d6:	e8 41 21 00 00       	call   1341c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
   112db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   112df:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   112e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112e6:	48 8b 10             	mov    (%rax),%rdx
   112e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   112f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112f5:	48 8b 08             	mov    (%rax),%rcx
   112f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   112fc:	48 89 d0             	mov    %rdx,%rax
   112ff:	48 c1 e0 06          	shl    $0x6,%rax
   11303:	48 01 d0             	add    %rdx,%rax
   11306:	48 c1 e0 03          	shl    $0x3,%rax
   1130a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1130e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11312:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   11316:	90                   	nop
   11317:	c9                   	leave
   11318:	c3                   	ret
   11319:	90                   	nop

000000000001131a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   1131a:	55                   	push   %rbp
   1131b:	48 89 e5             	mov    %rsp,%rbp
   1131e:	48 83 ec 20          	sub    $0x20,%rsp
   11322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11326:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1132a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1132e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11333:	74 17                	je     1134c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   11335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11339:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1133d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11341:	48 89 ce             	mov    %rcx,%rsi
   11344:	48 89 c7             	mov    %rax,%rdi
   11347:	e8 03 21 00 00       	call   1344f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
   1134c:	90                   	nop
   1134d:	c9                   	leave
   1134e:	c3                   	ret

000000000001134f <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1134f:	55                   	push   %rbp
   11350:	48 89 e5             	mov    %rsp,%rbp
   11353:	48 83 ec 20          	sub    $0x20,%rsp
   11357:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1135b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1135f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11363:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1136b:	48 89 d6             	mov    %rdx,%rsi
   1136e:	48 89 c7             	mov    %rax,%rdi
   11371:	e8 07 21 00 00       	call   1347d <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
   11376:	c9                   	leave
   11377:	c3                   	ret

0000000000011378 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11378:	55                   	push   %rbp
   11379:	48 89 e5             	mov    %rsp,%rbp
   1137c:	48 83 ec 10          	sub    $0x10,%rsp
   11380:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11384:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11388:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1138c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11390:	48 89 d6             	mov    %rdx,%rsi
   11393:	48 89 c7             	mov    %rax,%rdi
   11396:	e8 0b 21 00 00       	call   134a6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
   1139b:	90                   	nop
   1139c:	c9                   	leave
   1139d:	c3                   	ret

000000000001139e <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   1139e:	55                   	push   %rbp
   1139f:	48 89 e5             	mov    %rsp,%rbp
   113a2:	48 83 ec 10          	sub    $0x10,%rsp
   113a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   113aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113ae:	48 89 c7             	mov    %rax,%rdi
   113b1:	e8 00 21 00 00       	call   134b6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   113b6:	90                   	nop
   113b7:	c9                   	leave
   113b8:	c3                   	ret
   113b9:	90                   	nop

00000000000113ba <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   113ba:	55                   	push   %rbp
   113bb:	48 89 e5             	mov    %rsp,%rbp
   113be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   113c2:	90                   	nop
   113c3:	5d                   	pop    %rbp
   113c4:	c3                   	ret
   113c5:	90                   	nop

00000000000113c6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   113c6:	55                   	push   %rbp
   113c7:	48 89 e5             	mov    %rsp,%rbp
   113ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   113ce:	90                   	nop
   113cf:	5d                   	pop    %rbp
   113d0:	c3                   	ret
   113d1:	90                   	nop

00000000000113d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   113d2:	55                   	push   %rbp
   113d3:	48 89 e5             	mov    %rsp,%rbp
   113d6:	41 55                	push   %r13
   113d8:	41 54                	push   %r12
   113da:	53                   	push   %rbx
   113db:	48 83 ec 78          	sub    $0x78,%rsp
   113df:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   113e6:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   113ed:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   113f4:	48 89 c7             	mov    %rax,%rdi
   113f7:	e8 c5 20 00 00       	call   134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   113fc:	48 89 c2             	mov    %rax,%rdx
   113ff:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
   11406:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1140a:	48 89 ce             	mov    %rcx,%rsi
   1140d:	48 89 c7             	mov    %rax,%rdi
   11410:	e8 bb 20 00 00       	call   134d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>
	auto __res = _M_get_insert_unique_pos(__z._M_key());
   11415:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11419:	48 89 c7             	mov    %rax,%rdi
   1141c:	e8 a3 22 00 00       	call   136c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>
   11421:	48 89 c2             	mov    %rax,%rdx
   11424:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1142b:	48 89 d6             	mov    %rdx,%rsi
   1142e:	48 89 c7             	mov    %rax,%rdi
   11431:	e8 18 21 00 00       	call   1354e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>
   11436:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1143a:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
	if (__res.second)
   1143e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11442:	48 85 c0             	test   %rax,%rax
   11445:	74 40                	je     11487 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xb5>
	  return {__z._M_insert(__res), true};
   11447:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   1144b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   1144f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11453:	48 89 ce             	mov    %rcx,%rsi
   11456:	48 89 c7             	mov    %rax,%rdi
   11459:	e8 84 22 00 00       	call   136e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>
   1145e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   11462:	c6 45 bf 01          	movb   $0x1,-0x41(%rbp)
   11466:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   1146a:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1146e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11472:	48 89 ce             	mov    %rcx,%rsi
   11475:	48 89 c7             	mov    %rax,%rdi
   11478:	e8 bb 22 00 00       	call   13738 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
   1147d:	4c 8b 65 a0          	mov    -0x60(%rbp),%r12
   11481:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
   11485:	eb 36                	jmp    114bd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xeb>
	return {iterator(__res.first), false};
   11487:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   1148b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1148f:	48 89 d6             	mov    %rdx,%rsi
   11492:	48 89 c7             	mov    %rax,%rdi
   11495:	e8 e2 22 00 00       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   1149a:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
   1149e:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   114a2:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   114a6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   114aa:	48 89 ce             	mov    %rcx,%rsi
   114ad:	48 89 c7             	mov    %rax,%rdi
   114b0:	e8 83 22 00 00       	call   13738 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
   114b5:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
   114b9:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
      }
   114bd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   114c1:	48 89 c7             	mov    %rax,%rdi
   114c4:	e8 4f 20 00 00       	call   13518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
   114c9:	4c 89 e0             	mov    %r12,%rax
   114cc:	4c 89 ea             	mov    %r13,%rdx
   114cf:	eb 1a                	jmp    114eb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0x119>
   114d1:	48 89 c3             	mov    %rax,%rbx
   114d4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   114d8:	48 89 c7             	mov    %rax,%rdi
   114db:	e8 38 20 00 00       	call   13518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
   114e0:	48 89 d8             	mov    %rbx,%rax
   114e3:	48 89 c7             	mov    %rax,%rdi
   114e6:	e8 55 33 ff ff       	call   4840 <_Unwind_Resume@plt>
   114eb:	48 83 c4 78          	add    $0x78,%rsp
   114ef:	5b                   	pop    %rbx
   114f0:	41 5c                	pop    %r12
   114f2:	41 5d                	pop    %r13
   114f4:	5d                   	pop    %rbp
   114f5:	c3                   	ret

00000000000114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   114f6:	55                   	push   %rbp
   114f7:	48 89 e5             	mov    %rsp,%rbp
   114fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   114fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11502:	48 8b 40 18          	mov    0x18(%rax),%rax
   11506:	5d                   	pop    %rbp
   11507:	c3                   	ret

0000000000011508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   11508:	55                   	push   %rbp
   11509:	48 89 e5             	mov    %rsp,%rbp
   1150c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   11510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11514:	48 8b 40 10          	mov    0x10(%rax),%rax
   11518:	5d                   	pop    %rbp
   11519:	c3                   	ret

000000000001151a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1151a:	55                   	push   %rbp
   1151b:	48 89 e5             	mov    %rsp,%rbp
   1151e:	48 83 ec 10          	sub    $0x10,%rsp
   11522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   1152a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1152e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11532:	48 89 d6             	mov    %rdx,%rsi
   11535:	48 89 c7             	mov    %rax,%rdi
   11538:	e8 59 22 00 00       	call   13796 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>
	_M_put_node(__p);
   1153d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11545:	48 89 d6             	mov    %rdx,%rsi
   11548:	48 89 c7             	mov    %rax,%rdi
   1154b:	e8 84 22 00 00       	call   137d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
      }
   11550:	90                   	nop
   11551:	c9                   	leave
   11552:	c3                   	ret
   11553:	90                   	nop

0000000000011554 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   11554:	55                   	push   %rbp
   11555:	48 89 e5             	mov    %rsp,%rbp
   11558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1155c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11560:	48 8b 40 10          	mov    0x10(%rax),%rax
   11564:	5d                   	pop    %rbp
   11565:	c3                   	ret

0000000000011566 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11566:	55                   	push   %rbp
   11567:	48 89 e5             	mov    %rsp,%rbp
   1156a:	53                   	push   %rbx
   1156b:	48 83 ec 78          	sub    $0x78,%rsp
   1156f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   11573:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   11577:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1157b:	48 89 c7             	mov    %rax,%rdi
   1157e:	e8 ed d2 ff ff       	call   e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
   11583:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Base_ptr __y = _M_end();
   11587:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1158b:	48 89 c7             	mov    %rax,%rdi
   1158e:	e8 77 22 00 00       	call   1380a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   11593:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   11597:	e9 12 01 00 00       	jmp    116ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
   1159c:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   115a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115a4:	48 89 c7             	mov    %rax,%rdi
   115a7:	e8 70 22 00 00       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   115ac:	48 89 c1             	mov    %rax,%rcx
   115af:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   115b3:	48 89 c2             	mov    %rax,%rdx
   115b6:	48 89 ce             	mov    %rcx,%rsi
   115b9:	48 89 df             	mov    %rbx,%rdi
   115bc:	e8 87 22 00 00       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   115c1:	84 c0                	test   %al,%al
   115c3:	74 15                	je     115da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x74>
	    __x = _S_right(__x);
   115c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115c9:	48 89 c7             	mov    %rax,%rdi
   115cc:	e8 25 ff ff ff       	call   114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   115d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   115d5:	e9 d4 00 00 00       	jmp    116ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
   115da:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   115de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115e2:	48 89 c7             	mov    %rax,%rdi
   115e5:	e8 32 22 00 00       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   115ea:	48 89 c2             	mov    %rax,%rdx
   115ed:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   115f1:	48 89 c6             	mov    %rax,%rsi
   115f4:	48 89 df             	mov    %rbx,%rdi
   115f7:	e8 4c 22 00 00       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   115fc:	84 c0                	test   %al,%al
   115fe:	74 1d                	je     1161d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xb7>
	    __y = __x, __x = _S_left(__x);
   11600:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11604:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1160c:	48 89 c7             	mov    %rax,%rdi
   1160f:	e8 f4 fe ff ff       	call   11508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   11614:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11618:	e9 91 00 00 00       	jmp    116ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	      _Link_type __xu(__x);
   1161d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11621:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      _Base_ptr __yu(__y);
   11625:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11629:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	      __y = __x, __x = _S_left(__x);
   1162d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11631:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11635:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11639:	48 89 c7             	mov    %rax,%rdi
   1163c:	e8 c7 fe ff ff       	call   11508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   11641:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	      __xu = _S_right(__xu);
   11645:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11649:	48 89 c7             	mov    %rax,%rdi
   1164c:	e8 a5 fe ff ff       	call   114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   11651:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
				    _M_upper_bound(__xu, __yu, __k));
   11655:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   11659:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1165d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11661:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11665:	48 89 c7             	mov    %rax,%rdi
   11668:	e8 9b 22 00 00       	call   13908 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
   1166d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
			  iterator>(_M_lower_bound(__x, __y, __k),
   11671:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   11675:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11679:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   1167d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11681:	48 89 c7             	mov    %rax,%rdi
   11684:	e8 e9 21 00 00       	call   13872 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
   11689:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
	      return pair<iterator,
   1168d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   11691:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
   11695:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11699:	48 89 ce             	mov    %rcx,%rsi
   1169c:	48 89 c7             	mov    %rax,%rdi
   1169f:	e8 f4 22 00 00       	call   13998 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				    _M_upper_bound(__xu, __yu, __k));
   116a4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   116a8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   116ac:	eb 50                	jmp    116fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x198>
      while (__x != 0)
   116ae:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   116b3:	0f 85 e3 fe ff ff    	jne    1159c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x36>
				      iterator(__y));
   116b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   116bd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   116c1:	48 89 d6             	mov    %rdx,%rsi
   116c4:	48 89 c7             	mov    %rax,%rdi
   116c7:	e8 b0 20 00 00       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      return pair<iterator, iterator>(iterator(__y),
   116cc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   116d0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   116d4:	48 89 d6             	mov    %rdx,%rsi
   116d7:	48 89 c7             	mov    %rax,%rdi
   116da:	e8 9d 20 00 00       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   116df:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   116e3:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   116e7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   116eb:	48 89 ce             	mov    %rcx,%rsi
   116ee:	48 89 c7             	mov    %rax,%rdi
   116f1:	e8 a2 22 00 00       	call   13998 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				      iterator(__y));
   116f6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   116fa:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    }
   116fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11702:	c9                   	leave
   11703:	c3                   	ret

0000000000011704 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11704:	55                   	push   %rbp
   11705:	48 89 e5             	mov    %rsp,%rbp
   11708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1170c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11710:	48 8b 40 28          	mov    0x28(%rax),%rax
   11714:	5d                   	pop    %rbp
   11715:	c3                   	ret

0000000000011716 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   11716:	55                   	push   %rbp
   11717:	48 89 e5             	mov    %rsp,%rbp
   1171a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1171e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   11722:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11726:	48 8b 10             	mov    (%rax),%rdx
   11729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1172d:	48 89 10             	mov    %rdx,(%rax)
   11730:	90                   	nop
   11731:	5d                   	pop    %rbp
   11732:	c3                   	ret
   11733:	90                   	nop

0000000000011734 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11734:	55                   	push   %rbp
   11735:	48 89 e5             	mov    %rsp,%rbp
   11738:	48 83 ec 40          	sub    $0x40,%rsp
   1173c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11740:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11744:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      if (__first == begin() && __last == end())
   11748:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1174c:	48 89 c7             	mov    %rax,%rdi
   1174f:	e8 88 22 00 00       	call   139dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
   11754:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11758:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1175c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11760:	48 89 d6             	mov    %rdx,%rsi
   11763:	48 89 c7             	mov    %rax,%rdi
   11766:	e8 ab ff ff ff       	call   11716 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
   1176b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1176f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11773:	48 89 d6             	mov    %rdx,%rsi
   11776:	48 89 c7             	mov    %rax,%rdi
   11779:	e8 87 22 00 00       	call   13a05 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   1177e:	84 c0                	test   %al,%al
   11780:	74 41                	je     117c3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
   11782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11786:	48 89 c7             	mov    %rax,%rdi
   11789:	e8 9a 22 00 00       	call   13a28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>
   1178e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11792:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   11796:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1179a:	48 89 d6             	mov    %rdx,%rsi
   1179d:	48 89 c7             	mov    %rax,%rdi
   117a0:	e8 71 ff ff ff       	call   11716 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
   117a5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   117a9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   117ad:	48 89 d6             	mov    %rdx,%rsi
   117b0:	48 89 c7             	mov    %rax,%rdi
   117b3:	e8 4d 22 00 00       	call   13a05 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   117b8:	84 c0                	test   %al,%al
   117ba:	74 07                	je     117c3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
   117bc:	b8 01 00 00 00       	mov    $0x1,%eax
   117c1:	eb 05                	jmp    117c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x94>
   117c3:	b8 00 00 00 00       	mov    $0x0,%eax
   117c8:	84 c0                	test   %al,%al
   117ca:	74 31                	je     117fd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xc9>
	clear();
   117cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117d0:	48 89 c7             	mov    %rax,%rdi
   117d3:	e8 7a 22 00 00       	call   13a52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>
    }
   117d8:	eb 3a                	jmp    11814 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xe0>
	  _M_erase_aux(__first++);
   117da:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   117de:	be 00 00 00 00       	mov    $0x0,%esi
   117e3:	48 89 c7             	mov    %rax,%rdi
   117e6:	e8 c7 22 00 00       	call   13ab2 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>
   117eb:	48 89 c2             	mov    %rax,%rdx
   117ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117f2:	48 89 d6             	mov    %rdx,%rsi
   117f5:	48 89 c7             	mov    %rax,%rdi
   117f8:	e8 eb 22 00 00       	call   13ae8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>
	while (__first != __last)
   117fd:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   11801:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11805:	48 89 d6             	mov    %rdx,%rsi
   11808:	48 89 c7             	mov    %rax,%rdi
   1180b:	e8 7f 22 00 00       	call   13a8f <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   11810:	84 c0                	test   %al,%al
   11812:	75 c6                	jne    117da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xa6>
    }
   11814:	90                   	nop
   11815:	c9                   	leave
   11816:	c3                   	ret
   11817:	90                   	nop

0000000000011818 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   11818:	55                   	push   %rbp
   11819:	48 89 e5             	mov    %rsp,%rbp
   1181c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11820:	90                   	nop
   11821:	5d                   	pop    %rbp
   11822:	c3                   	ret

0000000000011823 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11823:	55                   	push   %rbp
   11824:	48 89 e5             	mov    %rsp,%rbp
   11827:	48 83 ec 20          	sub    $0x20,%rsp
   1182b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1182f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11833:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   11837:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1183b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1183f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11843:	48 89 ce             	mov    %rcx,%rsi
   11846:	48 89 c7             	mov    %rax,%rdi
   11849:	e8 f0 22 00 00       	call   13b3e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
   1184e:	90                   	nop
   1184f:	c9                   	leave
   11850:	c3                   	ret

0000000000011851 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11851:	55                   	push   %rbp
   11852:	48 89 e5             	mov    %rsp,%rbp
   11855:	48 83 ec 10          	sub    $0x10,%rsp
   11859:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1185d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11861:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11869:	48 89 d6             	mov    %rdx,%rsi
   1186c:	48 89 c7             	mov    %rax,%rdi
   1186f:	e8 fb 22 00 00       	call   13b6f <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
   11874:	90                   	nop
   11875:	c9                   	leave
   11876:	c3                   	ret
   11877:	90                   	nop

0000000000011878 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
   11878:	55                   	push   %rbp
   11879:	48 89 e5             	mov    %rsp,%rbp
   1187c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11880:	90                   	nop
   11881:	5d                   	pop    %rbp
   11882:	c3                   	ret

0000000000011883 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11883:	55                   	push   %rbp
   11884:	48 89 e5             	mov    %rsp,%rbp
   11887:	48 83 ec 20          	sub    $0x20,%rsp
   1188b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1188f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11893:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   11897:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1189b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1189f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118a3:	48 89 ce             	mov    %rcx,%rsi
   118a6:	48 89 c7             	mov    %rax,%rdi
   118a9:	e8 d0 22 00 00       	call   13b7e <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
   118ae:	90                   	nop
   118af:	c9                   	leave
   118b0:	c3                   	ret

00000000000118b1 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   118b1:	55                   	push   %rbp
   118b2:	48 89 e5             	mov    %rsp,%rbp
   118b5:	48 83 ec 10          	sub    $0x10,%rsp
   118b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   118c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   118c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118c9:	48 89 d6             	mov    %rdx,%rsi
   118cc:	48 89 c7             	mov    %rax,%rdi
   118cf:	e8 db 22 00 00       	call   13baf <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
   118d4:	90                   	nop
   118d5:	c9                   	leave
   118d6:	c3                   	ret
   118d7:	90                   	nop

00000000000118d8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   118d8:	55                   	push   %rbp
   118d9:	48 89 e5             	mov    %rsp,%rbp
   118dc:	48 83 ec 10          	sub    $0x10,%rsp
   118e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   118e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118e8:	48 89 c7             	mov    %rax,%rdi
   118eb:	e8 10 23 00 00       	call   13c00 <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
   118f0:	48 89 c7             	mov    %rax,%rdi
   118f3:	e8 c6 22 00 00       	call   13bbe <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
   118f8:	c9                   	leave
   118f9:	c3                   	ret

00000000000118fa <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   118fa:	55                   	push   %rbp
   118fb:	48 89 e5             	mov    %rsp,%rbp
   118fe:	48 83 ec 20          	sub    $0x20,%rsp
   11902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11906:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1190a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1190e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11916:	48 89 d6             	mov    %rdx,%rsi
   11919:	48 89 c7             	mov    %rax,%rdi
   1191c:	e8 ed 22 00 00       	call   13c0e <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
   11921:	c9                   	leave
   11922:	c3                   	ret
   11923:	90                   	nop

0000000000011924 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   11924:	55                   	push   %rbp
   11925:	48 89 e5             	mov    %rsp,%rbp
   11928:	53                   	push   %rbx
   11929:	48 83 ec 38          	sub    $0x38,%rsp
   1192d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11931:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11935:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   11939:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1193d:	48 89 c7             	mov    %rax,%rdi
   11940:	e8 93 ff ff ff       	call   118d8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
   11945:	48 89 c3             	mov    %rax,%rbx
   11948:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1194c:	48 89 c7             	mov    %rax,%rdi
   1194f:	e8 6a d1 ff ff       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   11954:	48 29 c3             	sub    %rax,%rbx
   11957:	48 89 da             	mov    %rbx,%rdx
   1195a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1195e:	48 39 c2             	cmp    %rax,%rdx
   11961:	0f 92 c0             	setb   %al
   11964:	84 c0                	test   %al,%al
   11966:	74 0c                	je     11974 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   11968:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1196c:	48 89 c7             	mov    %rax,%rdi
   1196f:	e8 3c 28 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   11974:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11978:	48 89 c7             	mov    %rax,%rdi
   1197b:	e8 3e d1 ff ff       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   11980:	48 89 c3             	mov    %rax,%rbx
   11983:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11987:	48 89 c7             	mov    %rax,%rdi
   1198a:	e8 2f d1 ff ff       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   1198f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11993:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   11997:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1199b:	48 89 d6             	mov    %rdx,%rsi
   1199e:	48 89 c7             	mov    %rax,%rdi
   119a1:	e8 0e 17 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   119a6:	48 8b 00             	mov    (%rax),%rax
   119a9:	48 01 d8             	add    %rbx,%rax
   119ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   119b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119b4:	48 89 c7             	mov    %rax,%rdi
   119b7:	e8 02 d1 ff ff       	call   eabe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   119bc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   119c0:	72 12                	jb     119d4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
   119c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119c6:	48 89 c7             	mov    %rax,%rdi
   119c9:	e8 0a ff ff ff       	call   118d8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
   119ce:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   119d2:	73 0e                	jae    119e2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
   119d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119d8:	48 89 c7             	mov    %rax,%rdi
   119db:	e8 f8 fe ff ff       	call   118d8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
   119e0:	eb 04                	jmp    119e6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
   119e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   119e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   119ea:	c9                   	leave
   119eb:	c3                   	ret

00000000000119ec <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   119ec:	55                   	push   %rbp
   119ed:	48 89 e5             	mov    %rsp,%rbp
   119f0:	48 83 ec 10          	sub    $0x10,%rsp
   119f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   119fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11a01:	74 15                	je     11a18 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
   11a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a07:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a0b:	48 89 d6             	mov    %rdx,%rsi
   11a0e:	48 89 c7             	mov    %rax,%rdi
   11a11:	e8 21 22 00 00       	call   13c37 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
   11a16:	eb 05                	jmp    11a1d <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
   11a18:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   11a1d:	c9                   	leave
   11a1e:	c3                   	ret

0000000000011a1f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   11a1f:	55                   	push   %rbp
   11a20:	48 89 e5             	mov    %rsp,%rbp
   11a23:	48 83 ec 20          	sub    $0x20,%rsp
   11a27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a2b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11a2f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   11a33:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   11a37:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11a3b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11a3f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   11a43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a47:	48 89 c7             	mov    %rax,%rdi
   11a4a:	e8 12 22 00 00       	call   13c61 <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
   11a4f:	c9                   	leave
   11a50:	c3                   	ret
   11a51:	90                   	nop

0000000000011a52 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   11a52:	55                   	push   %rbp
   11a53:	48 89 e5             	mov    %rsp,%rbp
   11a56:	48 83 ec 10          	sub    $0x10,%rsp
   11a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   11a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a62:	48 89 c7             	mov    %rax,%rdi
   11a65:	e8 9c 22 00 00       	call   13d06 <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
   11a6a:	48 89 c7             	mov    %rax,%rdi
   11a6d:	e8 52 22 00 00       	call   13cc4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
   11a72:	c9                   	leave
   11a73:	c3                   	ret

0000000000011a74 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   11a74:	55                   	push   %rbp
   11a75:	48 89 e5             	mov    %rsp,%rbp
   11a78:	48 83 ec 20          	sub    $0x20,%rsp
   11a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11a84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11a88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a90:	48 89 d6             	mov    %rdx,%rsi
   11a93:	48 89 c7             	mov    %rax,%rdi
   11a96:	e8 79 22 00 00       	call   13d14 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
   11a9b:	c9                   	leave
   11a9c:	c3                   	ret
   11a9d:	90                   	nop

0000000000011a9e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   11a9e:	55                   	push   %rbp
   11a9f:	48 89 e5             	mov    %rsp,%rbp
   11aa2:	53                   	push   %rbx
   11aa3:	48 83 ec 38          	sub    $0x38,%rsp
   11aa7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11aab:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11aaf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   11ab3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11ab7:	48 89 c7             	mov    %rax,%rdi
   11aba:	e8 93 ff ff ff       	call   11a52 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
   11abf:	48 89 c3             	mov    %rax,%rbx
   11ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11ac6:	48 89 c7             	mov    %rax,%rdi
   11ac9:	e8 90 d2 ff ff       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   11ace:	48 29 c3             	sub    %rax,%rbx
   11ad1:	48 89 da             	mov    %rbx,%rdx
   11ad4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ad8:	48 39 c2             	cmp    %rax,%rdx
   11adb:	0f 92 c0             	setb   %al
   11ade:	84 c0                	test   %al,%al
   11ae0:	74 0c                	je     11aee <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   11ae2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ae6:	48 89 c7             	mov    %rax,%rdi
   11ae9:	e8 c2 26 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   11aee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11af2:	48 89 c7             	mov    %rax,%rdi
   11af5:	e8 64 d2 ff ff       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   11afa:	48 89 c3             	mov    %rax,%rbx
   11afd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11b01:	48 89 c7             	mov    %rax,%rdi
   11b04:	e8 55 d2 ff ff       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   11b09:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11b0d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   11b11:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11b15:	48 89 d6             	mov    %rdx,%rsi
   11b18:	48 89 c7             	mov    %rax,%rdi
   11b1b:	e8 94 15 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   11b20:	48 8b 00             	mov    (%rax),%rax
   11b23:	48 01 d8             	add    %rbx,%rax
   11b26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   11b2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11b2e:	48 89 c7             	mov    %rax,%rdi
   11b31:	e8 28 d2 ff ff       	call   ed5e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   11b36:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11b3a:	72 12                	jb     11b4e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
   11b3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11b40:	48 89 c7             	mov    %rax,%rdi
   11b43:	e8 0a ff ff ff       	call   11a52 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
   11b48:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11b4c:	73 0e                	jae    11b5c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
   11b4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11b52:	48 89 c7             	mov    %rax,%rdi
   11b55:	e8 f8 fe ff ff       	call   11a52 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
   11b5a:	eb 04                	jmp    11b60 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
   11b5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   11b60:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11b64:	c9                   	leave
   11b65:	c3                   	ret

0000000000011b66 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   11b66:	55                   	push   %rbp
   11b67:	48 89 e5             	mov    %rsp,%rbp
   11b6a:	48 83 ec 10          	sub    $0x10,%rsp
   11b6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   11b76:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11b7b:	74 15                	je     11b92 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
   11b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11b85:	48 89 d6             	mov    %rdx,%rsi
   11b88:	48 89 c7             	mov    %rax,%rdi
   11b8b:	e8 ad 21 00 00       	call   13d3d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
   11b90:	eb 05                	jmp    11b97 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
   11b92:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   11b97:	c9                   	leave
   11b98:	c3                   	ret

0000000000011b99 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   11b99:	55                   	push   %rbp
   11b9a:	48 89 e5             	mov    %rsp,%rbp
   11b9d:	48 83 ec 20          	sub    $0x20,%rsp
   11ba1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ba5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11ba9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   11bad:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   11bb1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11bb5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11bb9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   11bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bc1:	48 89 c7             	mov    %rax,%rdi
   11bc4:	e8 9e 21 00 00       	call   13d67 <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
   11bc9:	c9                   	leave
   11bca:	c3                   	ret

0000000000011bcb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   11bcb:	55                   	push   %rbp
   11bcc:	48 89 e5             	mov    %rsp,%rbp
   11bcf:	48 83 ec 20          	sub    $0x20,%rsp
   11bd3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   11bd7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   11bde:	ff ff 0f 
   11be1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   11be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11be9:	48 89 c7             	mov    %rax,%rdi
   11bec:	e8 d9 21 00 00       	call   13dca <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
   11bf1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   11bf5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11bf9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11bfd:	48 89 d6             	mov    %rdx,%rsi
   11c00:	48 89 c7             	mov    %rax,%rdi
   11c03:	e8 1d 4a ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   11c08:	48 8b 00             	mov    (%rax),%rax
      }
   11c0b:	c9                   	leave
   11c0c:	c3                   	ret
   11c0d:	90                   	nop

0000000000011c0e <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   11c0e:	55                   	push   %rbp
   11c0f:	48 89 e5             	mov    %rsp,%rbp
   11c12:	48 83 ec 10          	sub    $0x10,%rsp
   11c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   11c1e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c26:	48 89 d6             	mov    %rdx,%rsi
   11c29:	48 89 c7             	mov    %rax,%rdi
   11c2c:	e8 b3 21 00 00       	call   13de4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
   11c31:	90                   	nop
   11c32:	c9                   	leave
   11c33:	c3                   	ret

0000000000011c34 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   11c34:	55                   	push   %rbp
   11c35:	48 89 e5             	mov    %rsp,%rbp
   11c38:	48 83 ec 10          	sub    $0x10,%rsp
   11c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   11c44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c4c:	48 89 d6             	mov    %rdx,%rsi
   11c4f:	48 89 c7             	mov    %rax,%rdi
   11c52:	e8 b7 ff ff ff       	call   11c0e <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
   11c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c5b:	48 89 c7             	mov    %rax,%rdi
   11c5e:	e8 91 21 00 00       	call   13df4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11c63:	90                   	nop
   11c64:	c9                   	leave
   11c65:	c3                   	ret

0000000000011c66 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   11c66:	55                   	push   %rbp
   11c67:	48 89 e5             	mov    %rsp,%rbp
   11c6a:	48 83 ec 10          	sub    $0x10,%rsp
   11c6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   11c76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c7e:	48 89 d6             	mov    %rdx,%rsi
   11c81:	48 89 c7             	mov    %rax,%rdi
   11c84:	e8 99 21 00 00       	call   13e22 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
   11c89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11c8d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   11c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c94:	48 8b 10             	mov    (%rax),%rdx
   11c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c9b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ca3:	48 8b 00             	mov    (%rax),%rax
   11ca6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11caa:	48 c1 e2 03          	shl    $0x3,%rdx
   11cae:	48 01 c2             	add    %rax,%rdx
   11cb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cb5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   11cb9:	90                   	nop
   11cba:	c9                   	leave
   11cbb:	c3                   	ret

0000000000011cbc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   11cbc:	55                   	push   %rbp
   11cbd:	48 89 e5             	mov    %rsp,%rbp
   11cc0:	48 83 ec 20          	sub    $0x20,%rsp
   11cc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11ccc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   11cd0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11cd5:	74 17                	je     11cee <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   11cd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cdb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11cdf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11ce3:	48 89 ce             	mov    %rcx,%rsi
   11ce6:	48 89 c7             	mov    %rax,%rdi
   11ce9:	e8 67 21 00 00       	call   13e55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
   11cee:	90                   	nop
   11cef:	c9                   	leave
   11cf0:	c3                   	ret

0000000000011cf1 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   11cf1:	55                   	push   %rbp
   11cf2:	48 89 e5             	mov    %rsp,%rbp
   11cf5:	48 83 ec 20          	sub    $0x20,%rsp
   11cf9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cfd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11d01:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11d05:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d0d:	48 89 d6             	mov    %rdx,%rsi
   11d10:	48 89 c7             	mov    %rax,%rdi
   11d13:	e8 6b 21 00 00       	call   13e83 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
   11d18:	c9                   	leave
   11d19:	c3                   	ret

0000000000011d1a <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11d1a:	55                   	push   %rbp
   11d1b:	48 89 e5             	mov    %rsp,%rbp
   11d1e:	48 83 ec 10          	sub    $0x10,%rsp
   11d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11d2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d32:	48 89 d6             	mov    %rdx,%rsi
   11d35:	48 89 c7             	mov    %rax,%rdi
   11d38:	e8 6f 21 00 00       	call   13eac <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
   11d3d:	90                   	nop
   11d3e:	c9                   	leave
   11d3f:	c3                   	ret

0000000000011d40 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   11d40:	55                   	push   %rbp
   11d41:	48 89 e5             	mov    %rsp,%rbp
   11d44:	48 83 ec 20          	sub    $0x20,%rsp
   11d48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   11d4c:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   11d53:	55 55 05 
   11d56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   11d5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d5e:	48 89 c7             	mov    %rax,%rdi
   11d61:	e8 55 21 00 00       	call   13ebb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
   11d66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   11d6a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11d6e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11d72:	48 89 d6             	mov    %rdx,%rsi
   11d75:	48 89 c7             	mov    %rax,%rdi
   11d78:	e8 a8 48 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   11d7d:	48 8b 00             	mov    (%rax),%rax
      }
   11d80:	c9                   	leave
   11d81:	c3                   	ret

0000000000011d82 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   11d82:	55                   	push   %rbp
   11d83:	48 89 e5             	mov    %rsp,%rbp
   11d86:	48 83 ec 10          	sub    $0x10,%rsp
   11d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   11d92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d9a:	48 89 d6             	mov    %rdx,%rsi
   11d9d:	48 89 c7             	mov    %rax,%rdi
   11da0:	e8 31 21 00 00       	call   13ed6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
   11da5:	90                   	nop
   11da6:	c9                   	leave
   11da7:	c3                   	ret

0000000000011da8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   11da8:	55                   	push   %rbp
   11da9:	48 89 e5             	mov    %rsp,%rbp
   11dac:	48 83 ec 10          	sub    $0x10,%rsp
   11db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11db4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   11db8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dc0:	48 89 d6             	mov    %rdx,%rsi
   11dc3:	48 89 c7             	mov    %rax,%rdi
   11dc6:	e8 b7 ff ff ff       	call   11d82 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
   11dcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dcf:	48 89 c7             	mov    %rax,%rdi
   11dd2:	e8 0f 21 00 00       	call   13ee6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   11dd7:	90                   	nop
   11dd8:	c9                   	leave
   11dd9:	c3                   	ret

0000000000011dda <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   11dda:	55                   	push   %rbp
   11ddb:	48 89 e5             	mov    %rsp,%rbp
   11dde:	48 83 ec 10          	sub    $0x10,%rsp
   11de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11de6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   11dea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11df2:	48 89 d6             	mov    %rdx,%rsi
   11df5:	48 89 c7             	mov    %rax,%rdi
   11df8:	e8 17 21 00 00       	call   13f14 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
   11dfd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11e01:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   11e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e08:	48 8b 10             	mov    (%rax),%rdx
   11e0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e0f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e17:	48 8b 08             	mov    (%rax),%rcx
   11e1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11e1e:	48 89 d0             	mov    %rdx,%rax
   11e21:	48 01 c0             	add    %rax,%rax
   11e24:	48 01 d0             	add    %rdx,%rax
   11e27:	48 c1 e0 03          	shl    $0x3,%rax
   11e2b:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   11e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e33:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   11e37:	90                   	nop
   11e38:	c9                   	leave
   11e39:	c3                   	ret

0000000000011e3a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   11e3a:	55                   	push   %rbp
   11e3b:	48 89 e5             	mov    %rsp,%rbp
   11e3e:	48 83 ec 20          	sub    $0x20,%rsp
   11e42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11e4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   11e4e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11e53:	74 17                	je     11e6c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   11e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11e5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11e61:	48 89 ce             	mov    %rcx,%rsi
   11e64:	48 89 c7             	mov    %rax,%rdi
   11e67:	e8 db 20 00 00       	call   13f47 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
   11e6c:	90                   	nop
   11e6d:	c9                   	leave
   11e6e:	c3                   	ret

0000000000011e6f <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   11e6f:	55                   	push   %rbp
   11e70:	48 89 e5             	mov    %rsp,%rbp
   11e73:	48 83 ec 20          	sub    $0x20,%rsp
   11e77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11e7f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11e83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e8b:	48 89 d6             	mov    %rdx,%rsi
   11e8e:	48 89 c7             	mov    %rax,%rdi
   11e91:	e8 df 20 00 00       	call   13f75 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
   11e96:	c9                   	leave
   11e97:	c3                   	ret

0000000000011e98 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11e98:	55                   	push   %rbp
   11e99:	48 89 e5             	mov    %rsp,%rbp
   11e9c:	48 83 ec 10          	sub    $0x10,%rsp
   11ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11ea8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11eb0:	48 89 d6             	mov    %rdx,%rsi
   11eb3:	48 89 c7             	mov    %rax,%rdi
   11eb6:	e8 e3 20 00 00       	call   13f9e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
   11ebb:	90                   	nop
   11ebc:	c9                   	leave
   11ebd:	c3                   	ret

0000000000011ebe <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
   11ebe:	55                   	push   %rbp
   11ebf:	48 89 e5             	mov    %rsp,%rbp
   11ec2:	53                   	push   %rbx
   11ec3:	48 83 ec 18          	sub    $0x18,%rsp
   11ec7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ecb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   11ecf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ed3:	48 89 c7             	mov    %rax,%rdi
   11ed6:	e8 8f d5 ff ff       	call   f46a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
   11edb:	48 89 c3             	mov    %rax,%rbx
   11ede:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ee2:	48 89 c7             	mov    %rax,%rdi
   11ee5:	e8 c3 20 00 00       	call   13fad <_ZSt11__addressofIjEPT_RS0_>
   11eea:	48 89 de             	mov    %rbx,%rsi
   11eed:	48 89 c7             	mov    %rax,%rdi
   11ef0:	e8 c6 20 00 00       	call   13fbb <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>
	  this->_M_engaged = true;
   11ef5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ef9:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	}
   11efd:	90                   	nop
   11efe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11f02:	c9                   	leave
   11f03:	c3                   	ret

0000000000011f04 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>:
   11f04:	55                   	push   %rbp
   11f05:	48 89 e5             	mov    %rsp,%rbp
   11f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f0c:	90                   	nop
   11f0d:	5d                   	pop    %rbp
   11f0e:	c3                   	ret

0000000000011f0f <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11f0f:	55                   	push   %rbp
   11f10:	48 89 e5             	mov    %rsp,%rbp
   11f13:	48 83 ec 20          	sub    $0x20,%rsp
   11f17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f1b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f1f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   11f23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11f27:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f2f:	48 89 ce             	mov    %rcx,%rsi
   11f32:	48 89 c7             	mov    %rax,%rdi
   11f35:	e8 be 20 00 00       	call   13ff8 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>
   11f3a:	90                   	nop
   11f3b:	c9                   	leave
   11f3c:	c3                   	ret

0000000000011f3d <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11f3d:	55                   	push   %rbp
   11f3e:	48 89 e5             	mov    %rsp,%rbp
   11f41:	48 83 ec 10          	sub    $0x10,%rsp
   11f45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11f4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11f51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f55:	48 89 d6             	mov    %rdx,%rsi
   11f58:	48 89 c7             	mov    %rax,%rdi
   11f5b:	e8 d2 20 00 00       	call   14032 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>
    }
   11f60:	90                   	nop
   11f61:	c9                   	leave
   11f62:	c3                   	ret
   11f63:	90                   	nop

0000000000011f64 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   11f64:	55                   	push   %rbp
   11f65:	48 89 e5             	mov    %rsp,%rbp
   11f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f70:	90                   	nop
   11f71:	5d                   	pop    %rbp
   11f72:	c3                   	ret
   11f73:	90                   	nop

0000000000011f74 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
   11f74:	55                   	push   %rbp
   11f75:	48 89 e5             	mov    %rsp,%rbp
   11f78:	48 83 ec 10          	sub    $0x10,%rsp
   11f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f88:	48 89 c7             	mov    %rax,%rdi
   11f8b:	e8 b2 20 00 00       	call   14042 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>
   11f90:	90                   	nop
   11f91:	c9                   	leave
   11f92:	c3                   	ret
   11f93:	90                   	nop

0000000000011f94 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
   11f94:	55                   	push   %rbp
   11f95:	48 89 e5             	mov    %rsp,%rbp
   11f98:	48 83 ec 20          	sub    $0x20,%rsp
   11f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11fa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11fa4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
   11fa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fac:	48 89 c7             	mov    %rax,%rdi
   11faf:	e8 99 20 00 00       	call   1404d <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>
   11fb4:	48 89 c2             	mov    %rax,%rdx
   11fb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fbb:	48 89 d6             	mov    %rdx,%rsi
   11fbe:	48 89 c7             	mov    %rax,%rdi
   11fc1:	e8 96 20 00 00       	call   1405c <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>
   11fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11fce:	48 89 d6             	mov    %rdx,%rsi
   11fd1:	48 89 c7             	mov    %rax,%rdi
   11fd4:	e8 a9 20 00 00       	call   14082 <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>
   11fd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fdd:	48 83 c0 08          	add    $0x8,%rax
   11fe1:	48 89 c7             	mov    %rax,%rdi
   11fe4:	e8 a1 9c ff ff       	call   bc8a <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   11fe9:	90                   	nop
   11fea:	c9                   	leave
   11feb:	c3                   	ret

0000000000011fec <_ZNKSt16initializer_listIjE4sizeEv>:
      size() const noexcept { return _M_len; }
   11fec:	55                   	push   %rbp
   11fed:	48 89 e5             	mov    %rsp,%rbp
   11ff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ff8:	48 8b 40 08          	mov    0x8(%rax),%rax
   11ffc:	5d                   	pop    %rbp
   11ffd:	c3                   	ret

0000000000011ffe <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>:
	_Alloc_node(_Rb_tree& __t)
   11ffe:	55                   	push   %rbp
   11fff:	48 89 e5             	mov    %rsp,%rbp
   12002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12006:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__t) { }
   1200a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1200e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12012:	48 89 10             	mov    %rdx,(%rax)
   12015:	90                   	nop
   12016:	5d                   	pop    %rbp
   12017:	c3                   	ret

0000000000012018 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12018:	55                   	push   %rbp
   12019:	48 89 e5             	mov    %rsp,%rbp
   1201c:	48 83 ec 20          	sub    $0x20,%rsp
   12020:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   12024:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12028:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1202c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12030:	48 89 d6             	mov    %rdx,%rsi
   12033:	48 89 c7             	mov    %rax,%rdi
   12036:	e8 57 20 00 00       	call   14092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   1203b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1203f:	c9                   	leave
   12040:	c3                   	ret
   12041:	90                   	nop

0000000000012042 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   12042:	55                   	push   %rbp
   12043:	48 89 e5             	mov    %rsp,%rbp
   12046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1204a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   1204e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12052:	48 8b 10             	mov    (%rax),%rdx
   12055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12059:	48 89 10             	mov    %rdx,(%rax)
   1205c:	90                   	nop
   1205d:	5d                   	pop    %rbp
   1205e:	c3                   	ret
   1205f:	90                   	nop

0000000000012060 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12060:	55                   	push   %rbp
   12061:	48 89 e5             	mov    %rsp,%rbp
   12064:	48 83 ec 40          	sub    $0x40,%rsp
   12068:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1206c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12070:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12074:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
   12078:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1207c:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
   12080:	48 89 d6             	mov    %rdx,%rsi
   12083:	48 89 c7             	mov    %rax,%rdi
   12086:	e8 6f 24 00 00       	call   144fa <_ZNKSt9_IdentityIjEclERKj>
   1208b:	48 89 c2             	mov    %rax,%rdx
   1208e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   12092:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12096:	48 89 ce             	mov    %rcx,%rsi
   12099:	48 89 c7             	mov    %rax,%rdi
   1209c:	e8 0b 20 00 00       	call   140ac <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>
   120a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   120a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__res.second)
   120a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120ad:	48 85 c0             	test   %rax,%rax
   120b0:	74 2c                	je     120de <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x7e>
	return _M_insert_(__res.first, __res.second,
   120b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   120b6:	48 89 c7             	mov    %rax,%rdi
   120b9:	e8 4e 24 00 00       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   120be:	48 89 c1             	mov    %rax,%rcx
   120c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120c5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   120c9:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   120cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120d1:	49 89 f8             	mov    %rdi,%r8
   120d4:	48 89 c7             	mov    %rax,%rdi
   120d7:	e8 3e 24 00 00       	call   1451a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>
			  __node_gen);
   120dc:	eb 17                	jmp    120f5 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x95>
      return iterator(__res.first);
   120de:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   120e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   120e6:	48 89 d6             	mov    %rdx,%rsi
   120e9:	48 89 c7             	mov    %rax,%rdi
   120ec:	e8 a1 1f 00 00       	call   14092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   120f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   120f5:	c9                   	leave
   120f6:	c3                   	ret
   120f7:	90                   	nop

00000000000120f8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   120f8:	55                   	push   %rbp
   120f9:	48 89 e5             	mov    %rsp,%rbp
   120fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12100:	90                   	nop
   12101:	5d                   	pop    %rbp
   12102:	c3                   	ret

0000000000012103 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12103:	55                   	push   %rbp
   12104:	48 89 e5             	mov    %rsp,%rbp
   12107:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1210b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1210f:	48 8b 40 18          	mov    0x18(%rax),%rax
   12113:	5d                   	pop    %rbp
   12114:	c3                   	ret

0000000000012115 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12115:	55                   	push   %rbp
   12116:	48 89 e5             	mov    %rsp,%rbp
   12119:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1211d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12121:	48 8b 40 10          	mov    0x10(%rax),%rax
   12125:	5d                   	pop    %rbp
   12126:	c3                   	ret
   12127:	90                   	nop

0000000000012128 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12128:	55                   	push   %rbp
   12129:	48 89 e5             	mov    %rsp,%rbp
   1212c:	48 83 ec 10          	sub    $0x10,%rsp
   12130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12134:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   12138:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1213c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12140:	48 89 d6             	mov    %rdx,%rsi
   12143:	48 89 c7             	mov    %rax,%rdi
   12146:	e8 bf 24 00 00       	call   1460a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>
	_M_put_node(__p);
   1214b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1214f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12153:	48 89 d6             	mov    %rdx,%rsi
   12156:	48 89 c7             	mov    %rax,%rdi
   12159:	e8 ea 24 00 00       	call   14648 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>
      }
   1215e:	90                   	nop
   1215f:	c9                   	leave
   12160:	c3                   	ret
   12161:	90                   	nop

0000000000012162 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   12162:	55                   	push   %rbp
   12163:	48 89 e5             	mov    %rsp,%rbp
   12166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   1216a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216e:	48 8b 40 10          	mov    0x10(%rax),%rax
   12172:	5d                   	pop    %rbp
   12173:	c3                   	ret

0000000000012174 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12174:	55                   	push   %rbp
   12175:	48 89 e5             	mov    %rsp,%rbp
   12178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1217c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   12180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12184:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12188:	48 89 10             	mov    %rdx,(%rax)
   1218b:	90                   	nop
   1218c:	5d                   	pop    %rbp
   1218d:	c3                   	ret

000000000001218e <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
   1218e:	55                   	push   %rbp
   1218f:	48 89 e5             	mov    %rsp,%rbp
   12192:	48 83 ec 10          	sub    $0x10,%rsp
   12196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   1219a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1219e:	48 89 c7             	mov    %rax,%rdi
   121a1:	e8 d8 24 00 00       	call   1467e <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
   121a6:	c9                   	leave
   121a7:	c3                   	ret

00000000000121a8 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   121a8:	55                   	push   %rbp
   121a9:	48 89 e5             	mov    %rsp,%rbp
   121ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   121b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b4:	5d                   	pop    %rbp
   121b5:	c3                   	ret

00000000000121b6 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   121b6:	55                   	push   %rbp
   121b7:	48 89 e5             	mov    %rsp,%rbp
   121ba:	53                   	push   %rbx
   121bb:	48 83 ec 28          	sub    $0x28,%rsp
   121bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   121c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   121c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   121cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   121cf:	48 89 c6             	mov    %rax,%rsi
   121d2:	bf 28 00 00 00       	mov    $0x28,%edi
   121d7:	e8 3b 9a ff ff       	call   bc17 <_ZnwmPv>
   121dc:	48 89 c3             	mov    %rax,%rbx
   121df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   121e3:	48 89 c7             	mov    %rax,%rdi
   121e6:	e8 bd ff ff ff       	call   121a8 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
   121eb:	48 8b 30             	mov    (%rax),%rsi
   121ee:	48 8b 78 08          	mov    0x8(%rax),%rdi
   121f2:	48 89 33             	mov    %rsi,(%rbx)
   121f5:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
   121f9:	48 8b 70 10          	mov    0x10(%rax),%rsi
   121fd:	48 8b 78 18          	mov    0x18(%rax),%rdi
   12201:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   12205:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
   12209:	48 8b 40 20          	mov    0x20(%rax),%rax
   1220d:	48 89 43 20          	mov    %rax,0x20(%rbx)
   12211:	90                   	nop
   12212:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12216:	c9                   	leave
   12217:	c3                   	ret

0000000000012218 <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12218:	55                   	push   %rbp
   12219:	48 89 e5             	mov    %rsp,%rbp
   1221c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12220:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12224:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12228:	48 8b 10             	mov    (%rax),%rdx
   1222b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1222f:	48 89 10             	mov    %rdx,(%rax)
   12232:	90                   	nop
   12233:	5d                   	pop    %rbp
   12234:	c3                   	ret
   12235:	90                   	nop

0000000000012236 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12236:	55                   	push   %rbp
   12237:	48 89 e5             	mov    %rsp,%rbp
   1223a:	53                   	push   %rbx
   1223b:	48 83 ec 38          	sub    $0x38,%rsp
   1223f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12243:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12247:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1224b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1224f:	48 89 c7             	mov    %rax,%rdi
   12252:	e8 35 24 00 00       	call   1468c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
   12257:	48 89 c3             	mov    %rax,%rbx
   1225a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1225e:	48 89 c7             	mov    %rax,%rdi
   12261:	e8 bc b1 ff ff       	call   d422 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   12266:	48 29 c3             	sub    %rax,%rbx
   12269:	48 89 da             	mov    %rbx,%rdx
   1226c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12270:	48 39 c2             	cmp    %rax,%rdx
   12273:	0f 92 c0             	setb   %al
   12276:	84 c0                	test   %al,%al
   12278:	74 0c                	je     12286 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1227a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1227e:	48 89 c7             	mov    %rax,%rdi
   12281:	e8 2a 1f ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12286:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1228a:	48 89 c7             	mov    %rax,%rdi
   1228d:	e8 90 b1 ff ff       	call   d422 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   12292:	48 89 c3             	mov    %rax,%rbx
   12295:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12299:	48 89 c7             	mov    %rax,%rdi
   1229c:	e8 81 b1 ff ff       	call   d422 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   122a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   122a5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   122a9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   122ad:	48 89 d6             	mov    %rdx,%rsi
   122b0:	48 89 c7             	mov    %rax,%rdi
   122b3:	e8 fc 0d 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   122b8:	48 8b 00             	mov    (%rax),%rax
   122bb:	48 01 d8             	add    %rbx,%rax
   122be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   122c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122c6:	48 89 c7             	mov    %rax,%rdi
   122c9:	e8 54 b1 ff ff       	call   d422 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   122ce:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   122d2:	72 12                	jb     122e6 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xb0>
   122d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122d8:	48 89 c7             	mov    %rax,%rdi
   122db:	e8 ac 23 00 00       	call   1468c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
   122e0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   122e4:	73 0e                	jae    122f4 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xbe>
   122e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122ea:	48 89 c7             	mov    %rax,%rdi
   122ed:	e8 9a 23 00 00       	call   1468c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
   122f2:	eb 04                	jmp    122f8 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xc2>
   122f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   122f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   122fc:	c9                   	leave
   122fd:	c3                   	ret

00000000000122fe <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   122fe:	55                   	push   %rbp
   122ff:	48 89 e5             	mov    %rsp,%rbp
   12302:	48 83 ec 20          	sub    $0x20,%rsp
   12306:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1230a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1230e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12312:	48 89 d6             	mov    %rdx,%rsi
   12315:	48 89 c7             	mov    %rax,%rdi
   12318:	e8 fb fe ff ff       	call   12218 <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1231d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12321:	c9                   	leave
   12322:	c3                   	ret

0000000000012323 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   12323:	55                   	push   %rbp
   12324:	48 89 e5             	mov    %rsp,%rbp
   12327:	53                   	push   %rbx
   12328:	48 83 ec 18          	sub    $0x18,%rsp
   1232c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12330:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   12334:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12338:	48 89 c7             	mov    %rax,%rdi
   1233b:	e8 96 00 00 00       	call   123d6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
   12340:	48 8b 18             	mov    (%rax),%rbx
   12343:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12347:	48 89 c7             	mov    %rax,%rdi
   1234a:	e8 87 00 00 00       	call   123d6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
   1234f:	48 8b 00             	mov    (%rax),%rax
   12352:	48 29 c3             	sub    %rax,%rbx
   12355:	48 89 da             	mov    %rbx,%rdx
   12358:	48 c1 fa 03          	sar    $0x3,%rdx
   1235c:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   12363:	cc cc cc 
   12366:	48 0f af c2          	imul   %rdx,%rax
   1236a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1236e:	c9                   	leave
   1236f:	c3                   	ret

0000000000012370 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12370:	55                   	push   %rbp
   12371:	48 89 e5             	mov    %rsp,%rbp
   12374:	48 83 ec 10          	sub    $0x10,%rsp
   12378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1237c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12380:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12385:	74 15                	je     1239c <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   12387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1238b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1238f:	48 89 d6             	mov    %rdx,%rsi
   12392:	48 89 c7             	mov    %rax,%rdi
   12395:	e8 14 23 00 00       	call   146ae <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>
   1239a:	eb 05                	jmp    123a1 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   1239c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   123a1:	c9                   	leave
   123a2:	c3                   	ret

00000000000123a3 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   123a3:	55                   	push   %rbp
   123a4:	48 89 e5             	mov    %rsp,%rbp
   123a7:	48 83 ec 20          	sub    $0x20,%rsp
   123ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   123b3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   123b7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   123bb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   123bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   123c3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   123c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123cb:	48 89 c7             	mov    %rax,%rdi
   123ce:	e8 05 23 00 00       	call   146d8 <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
   123d3:	c9                   	leave
   123d4:	c3                   	ret
   123d5:	90                   	nop

00000000000123d6 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   123d6:	55                   	push   %rbp
   123d7:	48 89 e5             	mov    %rsp,%rbp
   123da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   123de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e2:	5d                   	pop    %rbp
   123e3:	c3                   	ret

00000000000123e4 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() const noexcept
   123e4:	55                   	push   %rbp
   123e5:	48 89 e5             	mov    %rsp,%rbp
   123e8:	48 83 ec 10          	sub    $0x10,%rsp
   123ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   123f0:	e8 8f 97 ff ff       	call   bb84 <_ZSt23__is_constant_evaluatedv>
   123f5:	84 c0                	test   %al,%al
   123f7:	74 1a                	je     12413 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
   123f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123fd:	48 89 c7             	mov    %rax,%rdi
   12400:	e8 67 9b ff ff       	call   bf6c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
   12405:	83 f0 01             	xor    $0x1,%eax
   12408:	84 c0                	test   %al,%al
   1240a:	74 07                	je     12413 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
   1240c:	b8 01 00 00 00       	mov    $0x1,%eax
   12411:	eb 05                	jmp    12418 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
   12413:	b8 00 00 00 00       	mov    $0x0,%eax
   12418:	84 c0                	test   %al,%al
	return static_cast<const _Dp*>(this)->_M_payload._M_get();
   1241a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1241e:	48 89 c7             	mov    %rax,%rdi
   12421:	e8 16 23 00 00       	call   1473c <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>
      }
   12426:	c9                   	leave
   12427:	c3                   	ret

0000000000012428 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   12428:	55                   	push   %rbp
   12429:	48 89 e5             	mov    %rsp,%rbp
   1242c:	48 83 ec 10          	sub    $0x10,%rsp
   12430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12438:	48 89 c7             	mov    %rax,%rdi
   1243b:	e8 4c 23 00 00       	call   1478c <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12440:	48 89 c7             	mov    %rax,%rdi
   12443:	e8 02 23 00 00       	call   1474a <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
   12448:	c9                   	leave
   12449:	c3                   	ret

000000000001244a <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1244a:	55                   	push   %rbp
   1244b:	48 89 e5             	mov    %rsp,%rbp
   1244e:	48 83 ec 20          	sub    $0x20,%rsp
   12452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12456:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1245a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1245e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12466:	48 89 d6             	mov    %rdx,%rsi
   12469:	48 89 c7             	mov    %rax,%rdi
   1246c:	e8 29 23 00 00       	call   1479a <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
   12471:	c9                   	leave
   12472:	c3                   	ret
   12473:	90                   	nop

0000000000012474 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12474:	55                   	push   %rbp
   12475:	48 89 e5             	mov    %rsp,%rbp
   12478:	53                   	push   %rbx
   12479:	48 83 ec 38          	sub    $0x38,%rsp
   1247d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12481:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12485:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12489:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1248d:	48 89 c7             	mov    %rax,%rdi
   12490:	e8 93 ff ff ff       	call   12428 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   12495:	48 89 c3             	mov    %rax,%rbx
   12498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1249c:	48 89 c7             	mov    %rax,%rdi
   1249f:	e8 e4 b2 ff ff       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   124a4:	48 29 c3             	sub    %rax,%rbx
   124a7:	48 89 da             	mov    %rbx,%rdx
   124aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   124ae:	48 39 c2             	cmp    %rax,%rdx
   124b1:	0f 92 c0             	setb   %al
   124b4:	84 c0                	test   %al,%al
   124b6:	74 0c                	je     124c4 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   124b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   124bc:	48 89 c7             	mov    %rax,%rdi
   124bf:	e8 ec 1c ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   124c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   124c8:	48 89 c7             	mov    %rax,%rdi
   124cb:	e8 b8 b2 ff ff       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   124d0:	48 89 c3             	mov    %rax,%rbx
   124d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   124d7:	48 89 c7             	mov    %rax,%rdi
   124da:	e8 a9 b2 ff ff       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   124df:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   124e3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   124e7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   124eb:	48 89 d6             	mov    %rdx,%rsi
   124ee:	48 89 c7             	mov    %rax,%rdi
   124f1:	e8 be 0b 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   124f6:	48 8b 00             	mov    (%rax),%rax
   124f9:	48 01 d8             	add    %rbx,%rax
   124fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12504:	48 89 c7             	mov    %rax,%rdi
   12507:	e8 7c b2 ff ff       	call   d788 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   1250c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12510:	72 12                	jb     12524 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12512:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12516:	48 89 c7             	mov    %rax,%rdi
   12519:	e8 0a ff ff ff       	call   12428 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   1251e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12522:	73 0e                	jae    12532 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12524:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12528:	48 89 c7             	mov    %rax,%rdi
   1252b:	e8 f8 fe ff ff       	call   12428 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   12530:	eb 04                	jmp    12536 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12532:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12536:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1253a:	c9                   	leave
   1253b:	c3                   	ret

000000000001253c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1253c:	55                   	push   %rbp
   1253d:	48 89 e5             	mov    %rsp,%rbp
   12540:	48 83 ec 10          	sub    $0x10,%rsp
   12544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12548:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1254c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12551:	74 15                	je     12568 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
   12553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12557:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1255b:	48 89 d6             	mov    %rdx,%rsi
   1255e:	48 89 c7             	mov    %rax,%rdi
   12561:	e8 5d 22 00 00       	call   147c3 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
   12566:	eb 05                	jmp    1256d <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
   12568:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1256d:	c9                   	leave
   1256e:	c3                   	ret

000000000001256f <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1256f:	55                   	push   %rbp
   12570:	48 89 e5             	mov    %rsp,%rbp
   12573:	48 83 ec 20          	sub    $0x20,%rsp
   12577:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1257b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1257f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12583:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12587:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1258b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1258f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12597:	48 89 c7             	mov    %rax,%rdi
   1259a:	e8 4e 22 00 00       	call   147ed <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1259f:	c9                   	leave
   125a0:	c3                   	ret
   125a1:	90                   	nop

00000000000125a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   125a2:	55                   	push   %rbp
   125a3:	48 89 e5             	mov    %rsp,%rbp
   125a6:	48 83 ec 10          	sub    $0x10,%rsp
   125aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   125ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125b2:	48 89 c7             	mov    %rax,%rdi
   125b5:	e8 d8 22 00 00       	call   14892 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   125ba:	48 89 c7             	mov    %rax,%rdi
   125bd:	e8 8e 22 00 00       	call   14850 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   125c2:	c9                   	leave
   125c3:	c3                   	ret

00000000000125c4 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   125c4:	55                   	push   %rbp
   125c5:	48 89 e5             	mov    %rsp,%rbp
   125c8:	48 83 ec 20          	sub    $0x20,%rsp
   125cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   125d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   125d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   125dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125e0:	48 89 d6             	mov    %rdx,%rsi
   125e3:	48 89 c7             	mov    %rax,%rdi
   125e6:	e8 b5 22 00 00       	call   148a0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   125eb:	c9                   	leave
   125ec:	c3                   	ret
   125ed:	90                   	nop

00000000000125ee <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   125ee:	55                   	push   %rbp
   125ef:	48 89 e5             	mov    %rsp,%rbp
   125f2:	53                   	push   %rbx
   125f3:	48 83 ec 38          	sub    $0x38,%rsp
   125f7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   125fb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   125ff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12603:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12607:	48 89 c7             	mov    %rax,%rdi
   1260a:	e8 93 ff ff ff       	call   125a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1260f:	48 89 c3             	mov    %rax,%rbx
   12612:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12616:	48 89 c7             	mov    %rax,%rdi
   12619:	e8 58 b5 ff ff       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1261e:	48 29 c3             	sub    %rax,%rbx
   12621:	48 89 da             	mov    %rbx,%rdx
   12624:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12628:	48 39 c2             	cmp    %rax,%rdx
   1262b:	0f 92 c0             	setb   %al
   1262e:	84 c0                	test   %al,%al
   12630:	74 0c                	je     1263e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12632:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12636:	48 89 c7             	mov    %rax,%rdi
   12639:	e8 72 1b ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1263e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12642:	48 89 c7             	mov    %rax,%rdi
   12645:	e8 2c b5 ff ff       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1264a:	48 89 c3             	mov    %rax,%rbx
   1264d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12651:	48 89 c7             	mov    %rax,%rdi
   12654:	e8 1d b5 ff ff       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12659:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1265d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12661:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12665:	48 89 d6             	mov    %rdx,%rsi
   12668:	48 89 c7             	mov    %rax,%rdi
   1266b:	e8 44 0a 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   12670:	48 8b 00             	mov    (%rax),%rax
   12673:	48 01 d8             	add    %rbx,%rax
   12676:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1267a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1267e:	48 89 c7             	mov    %rax,%rdi
   12681:	e8 f0 b4 ff ff       	call   db76 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12686:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1268a:	72 12                	jb     1269e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1268c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12690:	48 89 c7             	mov    %rax,%rdi
   12693:	e8 0a ff ff ff       	call   125a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12698:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1269c:	73 0e                	jae    126ac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1269e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   126a2:	48 89 c7             	mov    %rax,%rdi
   126a5:	e8 f8 fe ff ff       	call   125a2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   126aa:	eb 04                	jmp    126b0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   126ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   126b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   126b4:	c9                   	leave
   126b5:	c3                   	ret

00000000000126b6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   126b6:	55                   	push   %rbp
   126b7:	48 89 e5             	mov    %rsp,%rbp
   126ba:	48 83 ec 10          	sub    $0x10,%rsp
   126be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   126c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   126cb:	74 15                	je     126e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   126cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126d5:	48 89 d6             	mov    %rdx,%rsi
   126d8:	48 89 c7             	mov    %rax,%rdi
   126db:	e8 e9 21 00 00       	call   148c9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   126e0:	eb 05                	jmp    126e7 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   126e2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   126e7:	c9                   	leave
   126e8:	c3                   	ret

00000000000126e9 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   126e9:	55                   	push   %rbp
   126ea:	48 89 e5             	mov    %rsp,%rbp
   126ed:	48 83 ec 20          	sub    $0x20,%rsp
   126f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   126f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   126fd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12701:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12705:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12709:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1270d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12711:	48 89 c7             	mov    %rax,%rdi
   12714:	e8 da 21 00 00       	call   148f3 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12719:	c9                   	leave
   1271a:	c3                   	ret

000000000001271b <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1271b:	55                   	push   %rbp
   1271c:	48 89 e5             	mov    %rsp,%rbp
   1271f:	48 83 ec 20          	sub    $0x20,%rsp
   12723:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   12727:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   1272e:	ff ff 7f 
   12731:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   12735:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12739:	48 89 c7             	mov    %rax,%rdi
   1273c:	e8 15 22 00 00       	call   14956 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
   12741:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   12745:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   12749:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1274d:	48 89 d6             	mov    %rdx,%rsi
   12750:	48 89 c7             	mov    %rax,%rdi
   12753:	e8 cd 3e ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   12758:	48 8b 00             	mov    (%rax),%rax
      }
   1275b:	c9                   	leave
   1275c:	c3                   	ret
   1275d:	90                   	nop

000000000001275e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1275e:	55                   	push   %rbp
   1275f:	48 89 e5             	mov    %rsp,%rbp
   12762:	48 83 ec 10          	sub    $0x10,%rsp
   12766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1276a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1276e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12776:	48 89 d6             	mov    %rdx,%rsi
   12779:	48 89 c7             	mov    %rax,%rdi
   1277c:	e8 4f 1f ff ff       	call   46d0 <_ZNSaIcEC2ERKS_@plt>
   12781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12785:	48 89 c7             	mov    %rax,%rdi
   12788:	e8 e3 21 00 00       	call   14970 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
   1278d:	90                   	nop
   1278e:	c9                   	leave
   1278f:	c3                   	ret

0000000000012790 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   12790:	55                   	push   %rbp
   12791:	48 89 e5             	mov    %rsp,%rbp
   12794:	48 83 ec 10          	sub    $0x10,%rsp
   12798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1279c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   127a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127a8:	48 89 d6             	mov    %rdx,%rsi
   127ab:	48 89 c7             	mov    %rax,%rdi
   127ae:	e8 eb 21 00 00       	call   1499e <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
   127b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   127b7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   127ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127be:	48 8b 10             	mov    (%rax),%rdx
   127c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127c5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   127c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127cd:	48 8b 10             	mov    (%rax),%rdx
   127d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127d4:	48 01 c2             	add    %rax,%rdx
   127d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127db:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   127df:	90                   	nop
   127e0:	c9                   	leave
   127e1:	c3                   	ret

00000000000127e2 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   127e2:	55                   	push   %rbp
   127e3:	48 89 e5             	mov    %rsp,%rbp
   127e6:	48 83 ec 20          	sub    $0x20,%rsp
   127ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   127f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   127f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127fe:	48 89 d6             	mov    %rdx,%rsi
   12801:	48 89 c7             	mov    %rax,%rdi
   12804:	e8 c8 21 00 00       	call   149d1 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
   12809:	c9                   	leave
   1280a:	c3                   	ret

000000000001280b <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1280b:	55                   	push   %rbp
   1280c:	48 89 e5             	mov    %rsp,%rbp
   1280f:	48 83 ec 10          	sub    $0x10,%rsp
   12813:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12817:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1281b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1281f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12823:	48 89 d6             	mov    %rdx,%rsi
   12826:	48 89 c7             	mov    %rax,%rdi
   12829:	e8 cc 21 00 00       	call   149fa <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
   1282e:	90                   	nop
   1282f:	c9                   	leave
   12830:	c3                   	ret

0000000000012831 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   12831:	55                   	push   %rbp
   12832:	48 89 e5             	mov    %rsp,%rbp
   12835:	48 83 ec 20          	sub    $0x20,%rsp
   12839:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1283d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12841:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   12845:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12849:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1284d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12851:	48 89 ce             	mov    %rcx,%rsi
   12854:	48 89 c7             	mov    %rax,%rdi
   12857:	e8 ae 21 00 00       	call   14a0a <_ZNSt15__new_allocatorIcE10deallocateEPcm>
   1285c:	90                   	nop
   1285d:	c9                   	leave
   1285e:	c3                   	ret
   1285f:	90                   	nop

0000000000012860 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   12860:	55                   	push   %rbp
   12861:	48 89 e5             	mov    %rsp,%rbp
   12864:	48 83 ec 10          	sub    $0x10,%rsp
   12868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1286c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   12870:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12878:	48 89 d6             	mov    %rdx,%rsi
   1287b:	48 89 c7             	mov    %rax,%rdi
   1287e:	e8 b1 21 00 00       	call   14a34 <_ZNSaI14VkDynamicStateEC1ERKS0_>
   12883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12887:	48 89 c7             	mov    %rax,%rdi
   1288a:	e8 cb 21 00 00       	call   14a5a <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   1288f:	90                   	nop
   12890:	c9                   	leave
   12891:	c3                   	ret

0000000000012892 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   12892:	55                   	push   %rbp
   12893:	48 89 e5             	mov    %rsp,%rbp
   12896:	48 83 ec 20          	sub    $0x20,%rsp
   1289a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1289e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   128a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   128a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   128ab:	74 17                	je     128c4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   128ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   128b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   128b9:	48 89 ce             	mov    %rcx,%rsi
   128bc:	48 89 c7             	mov    %rax,%rdi
   128bf:	e8 c4 21 00 00       	call   14a88 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>
      }
   128c4:	90                   	nop
   128c5:	c9                   	leave
   128c6:	c3                   	ret
   128c7:	90                   	nop

00000000000128c8 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>:
   128c8:	55                   	push   %rbp
   128c9:	48 89 e5             	mov    %rsp,%rbp
   128cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128d4:	48 8b 40 08          	mov    0x8(%rax),%rax
   128d8:	5d                   	pop    %rbp
   128d9:	c3                   	ret

00000000000128da <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   128da:	55                   	push   %rbp
   128db:	48 89 e5             	mov    %rsp,%rbp
   128de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   128e2:	90                   	nop
   128e3:	5d                   	pop    %rbp
   128e4:	c3                   	ret

00000000000128e5 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   128e5:	55                   	push   %rbp
   128e6:	48 89 e5             	mov    %rsp,%rbp
   128e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   128f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128f5:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   128f9:	48 c1 f8 02          	sar    $0x2,%rax
    }
   128fd:	5d                   	pop    %rbp
   128fe:	c3                   	ret

00000000000128ff <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   128ff:	55                   	push   %rbp
   12900:	48 89 e5             	mov    %rsp,%rbp
   12903:	53                   	push   %rbx
   12904:	48 83 ec 28          	sub    $0x28,%rsp
   12908:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1290c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   12910:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12914:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   12918:	48 89 d6             	mov    %rdx,%rsi
   1291b:	48 89 c7             	mov    %rax,%rdi
   1291e:	e8 11 21 00 00       	call   14a34 <_ZNSaI14VkDynamicStateEC1ERKS0_>
   12923:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   12927:	48 89 c7             	mov    %rax,%rdi
   1292a:	e8 87 21 00 00       	call   14ab6 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>
   1292f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   12933:	0f 92 c3             	setb   %bl
   12936:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1293a:	48 89 c7             	mov    %rax,%rdi
   1293d:	e8 04 b1 ff ff       	call   da46 <_ZNSaI14VkDynamicStateED1Ev>
   12942:	84 db                	test   %bl,%bl
   12944:	74 0f                	je     12955 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   12946:	48 8d 05 5b 7e 00 00 	lea    0x7e5b(%rip),%rax        # 1a7a8 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
   1294d:	48 89 c7             	mov    %rax,%rdi
   12950:	e8 5b 18 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   12955:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   12959:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1295d:	c9                   	leave
   1295e:	c3                   	ret
   1295f:	90                   	nop

0000000000012960 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12960:	55                   	push   %rbp
   12961:	48 89 e5             	mov    %rsp,%rbp
   12964:	48 83 ec 10          	sub    $0x10,%rsp
   12968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1296c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12970:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12975:	74 15                	je     1298c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x2c>
   12977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1297b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1297f:	48 89 d6             	mov    %rdx,%rsi
   12982:	48 89 c7             	mov    %rax,%rdi
   12985:	e8 6e 21 00 00       	call   14af8 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>
   1298a:	eb 05                	jmp    12991 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x31>
   1298c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12991:	c9                   	leave
   12992:	c3                   	ret

0000000000012993 <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   12993:	55                   	push   %rbp
   12994:	48 89 e5             	mov    %rsp,%rbp
   12997:	48 83 ec 20          	sub    $0x20,%rsp
   1299b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1299f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   129a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   129a7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   129ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   129af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   129b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129b7:	48 89 ce             	mov    %rcx,%rsi
   129ba:	48 89 c7             	mov    %rax,%rdi
   129bd:	e8 60 21 00 00       	call   14b22 <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
    }
   129c2:	c9                   	leave
   129c3:	c3                   	ret

00000000000129c4 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   129c4:	55                   	push   %rbp
   129c5:	48 89 e5             	mov    %rsp,%rbp
   129c8:	48 83 ec 10          	sub    $0x10,%rsp
   129cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   129d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   129d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129dc:	48 89 d6             	mov    %rdx,%rsi
   129df:	48 89 c7             	mov    %rax,%rdi
   129e2:	e8 70 21 00 00       	call   14b57 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>
    }
   129e7:	90                   	nop
   129e8:	c9                   	leave
   129e9:	c3                   	ret

00000000000129ea <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   129ea:	55                   	push   %rbp
   129eb:	48 89 e5             	mov    %rsp,%rbp
   129ee:	48 83 ec 10          	sub    $0x10,%rsp
   129f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   129f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129fa:	48 89 c7             	mov    %rax,%rdi
   129fd:	e8 a6 21 00 00       	call   14ba8 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12a02:	48 89 c7             	mov    %rax,%rdi
   12a05:	e8 5c 21 00 00       	call   14b66 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   12a0a:	c9                   	leave
   12a0b:	c3                   	ret

0000000000012a0c <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12a0c:	55                   	push   %rbp
   12a0d:	48 89 e5             	mov    %rsp,%rbp
   12a10:	48 83 ec 20          	sub    $0x20,%rsp
   12a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12a1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12a20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a28:	48 89 d6             	mov    %rdx,%rsi
   12a2b:	48 89 c7             	mov    %rax,%rdi
   12a2e:	e8 83 21 00 00       	call   14bb6 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   12a33:	c9                   	leave
   12a34:	c3                   	ret
   12a35:	90                   	nop

0000000000012a36 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12a36:	55                   	push   %rbp
   12a37:	48 89 e5             	mov    %rsp,%rbp
   12a3a:	53                   	push   %rbx
   12a3b:	48 83 ec 38          	sub    $0x38,%rsp
   12a3f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12a43:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12a47:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12a4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a4f:	48 89 c7             	mov    %rax,%rdi
   12a52:	e8 93 ff ff ff       	call   129ea <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12a57:	48 89 c3             	mov    %rax,%rbx
   12a5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a5e:	48 89 c7             	mov    %rax,%rdi
   12a61:	e8 66 b4 ff ff       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12a66:	48 29 c3             	sub    %rax,%rbx
   12a69:	48 89 da             	mov    %rbx,%rdx
   12a6c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a70:	48 39 c2             	cmp    %rax,%rdx
   12a73:	0f 92 c0             	setb   %al
   12a76:	84 c0                	test   %al,%al
   12a78:	74 0c                	je     12a86 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12a7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a7e:	48 89 c7             	mov    %rax,%rdi
   12a81:	e8 2a 17 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12a86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a8a:	48 89 c7             	mov    %rax,%rdi
   12a8d:	e8 3a b4 ff ff       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12a92:	48 89 c3             	mov    %rax,%rbx
   12a95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a99:	48 89 c7             	mov    %rax,%rdi
   12a9c:	e8 2b b4 ff ff       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12aa1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12aa5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12aa9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12aad:	48 89 d6             	mov    %rdx,%rsi
   12ab0:	48 89 c7             	mov    %rax,%rdi
   12ab3:	e8 fc 05 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   12ab8:	48 8b 00             	mov    (%rax),%rax
   12abb:	48 01 d8             	add    %rbx,%rax
   12abe:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ac6:	48 89 c7             	mov    %rax,%rdi
   12ac9:	e8 fe b3 ff ff       	call   decc <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12ace:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12ad2:	72 12                	jb     12ae6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12ad4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ad8:	48 89 c7             	mov    %rax,%rdi
   12adb:	e8 0a ff ff ff       	call   129ea <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12ae0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12ae4:	73 0e                	jae    12af4 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12ae6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12aea:	48 89 c7             	mov    %rax,%rdi
   12aed:	e8 f8 fe ff ff       	call   129ea <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   12af2:	eb 04                	jmp    12af8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12af4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12af8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12afc:	c9                   	leave
   12afd:	c3                   	ret

0000000000012afe <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12afe:	55                   	push   %rbp
   12aff:	48 89 e5             	mov    %rsp,%rbp
   12b02:	48 83 ec 10          	sub    $0x10,%rsp
   12b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12b0e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12b13:	74 15                	je     12b2a <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   12b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b1d:	48 89 d6             	mov    %rdx,%rsi
   12b20:	48 89 c7             	mov    %rax,%rdi
   12b23:	e8 b7 20 00 00       	call   14bdf <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   12b28:	eb 05                	jmp    12b2f <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   12b2a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12b2f:	c9                   	leave
   12b30:	c3                   	ret

0000000000012b31 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12b31:	55                   	push   %rbp
   12b32:	48 89 e5             	mov    %rsp,%rbp
   12b35:	48 83 ec 20          	sub    $0x20,%rsp
   12b39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12b41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12b45:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12b49:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12b4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b51:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12b55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b59:	48 89 c7             	mov    %rax,%rdi
   12b5c:	e8 a8 20 00 00       	call   14c09 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12b61:	c9                   	leave
   12b62:	c3                   	ret
   12b63:	90                   	nop

0000000000012b64 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   12b64:	55                   	push   %rbp
   12b65:	48 89 e5             	mov    %rsp,%rbp
   12b68:	48 83 ec 10          	sub    $0x10,%rsp
   12b6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b74:	48 89 c7             	mov    %rax,%rdi
   12b77:	e8 32 21 00 00       	call   14cae <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12b7c:	48 89 c7             	mov    %rax,%rdi
   12b7f:	e8 e8 20 00 00       	call   14c6c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   12b84:	c9                   	leave
   12b85:	c3                   	ret

0000000000012b86 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12b86:	55                   	push   %rbp
   12b87:	48 89 e5             	mov    %rsp,%rbp
   12b8a:	48 83 ec 20          	sub    $0x20,%rsp
   12b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12b96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12b9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ba2:	48 89 d6             	mov    %rdx,%rsi
   12ba5:	48 89 c7             	mov    %rax,%rdi
   12ba8:	e8 0f 21 00 00       	call   14cbc <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
   12bad:	c9                   	leave
   12bae:	c3                   	ret
   12baf:	90                   	nop

0000000000012bb0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12bb0:	55                   	push   %rbp
   12bb1:	48 89 e5             	mov    %rsp,%rbp
   12bb4:	53                   	push   %rbx
   12bb5:	48 83 ec 38          	sub    $0x38,%rsp
   12bb9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12bbd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12bc1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12bc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bc9:	48 89 c7             	mov    %rax,%rdi
   12bcc:	e8 93 ff ff ff       	call   12b64 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   12bd1:	48 89 c3             	mov    %rax,%rbx
   12bd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bd8:	48 89 c7             	mov    %rax,%rdi
   12bdb:	e8 38 b1 ff ff       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   12be0:	48 29 c3             	sub    %rax,%rbx
   12be3:	48 89 da             	mov    %rbx,%rdx
   12be6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12bea:	48 39 c2             	cmp    %rax,%rdx
   12bed:	0f 92 c0             	setb   %al
   12bf0:	84 c0                	test   %al,%al
   12bf2:	74 0c                	je     12c00 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12bf4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12bf8:	48 89 c7             	mov    %rax,%rdi
   12bfb:	e8 b0 15 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12c00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c04:	48 89 c7             	mov    %rax,%rdi
   12c07:	e8 0c b1 ff ff       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   12c0c:	48 89 c3             	mov    %rax,%rbx
   12c0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c13:	48 89 c7             	mov    %rax,%rdi
   12c16:	e8 fd b0 ff ff       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   12c1b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12c1f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12c23:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12c27:	48 89 d6             	mov    %rdx,%rsi
   12c2a:	48 89 c7             	mov    %rax,%rdi
   12c2d:	e8 82 04 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   12c32:	48 8b 00             	mov    (%rax),%rax
   12c35:	48 01 d8             	add    %rbx,%rax
   12c38:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12c3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c40:	48 89 c7             	mov    %rax,%rdi
   12c43:	e8 d0 b0 ff ff       	call   dd18 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   12c48:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12c4c:	72 12                	jb     12c60 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12c4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c52:	48 89 c7             	mov    %rax,%rdi
   12c55:	e8 0a ff ff ff       	call   12b64 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   12c5a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12c5e:	73 0e                	jae    12c6e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12c60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c64:	48 89 c7             	mov    %rax,%rdi
   12c67:	e8 f8 fe ff ff       	call   12b64 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   12c6c:	eb 04                	jmp    12c72 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12c6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12c72:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12c76:	c9                   	leave
   12c77:	c3                   	ret

0000000000012c78 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12c78:	55                   	push   %rbp
   12c79:	48 89 e5             	mov    %rsp,%rbp
   12c7c:	48 83 ec 10          	sub    $0x10,%rsp
   12c80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12c88:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12c8d:	74 15                	je     12ca4 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   12c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c97:	48 89 d6             	mov    %rdx,%rsi
   12c9a:	48 89 c7             	mov    %rax,%rdi
   12c9d:	e8 43 20 00 00       	call   14ce5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
   12ca2:	eb 05                	jmp    12ca9 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
   12ca4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12ca9:	c9                   	leave
   12caa:	c3                   	ret

0000000000012cab <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12cab:	55                   	push   %rbp
   12cac:	48 89 e5             	mov    %rsp,%rbp
   12caf:	48 83 ec 20          	sub    $0x20,%rsp
   12cb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12cb7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12cbb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12cbf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12cc3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12cc7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12ccb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12ccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cd3:	48 89 c7             	mov    %rax,%rdi
   12cd6:	e8 34 20 00 00       	call   14d0f <_ZSt12__relocate_aIPP17VkCommandBuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12cdb:	c9                   	leave
   12cdc:	c3                   	ret
   12cdd:	90                   	nop

0000000000012cde <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   12cde:	55                   	push   %rbp
   12cdf:	48 89 e5             	mov    %rsp,%rbp
   12ce2:	48 83 ec 10          	sub    $0x10,%rsp
   12ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cee:	48 89 c7             	mov    %rax,%rdi
   12cf1:	e8 be 20 00 00       	call   14db4 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12cf6:	48 89 c7             	mov    %rax,%rdi
   12cf9:	e8 74 20 00 00       	call   14d72 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   12cfe:	c9                   	leave
   12cff:	c3                   	ret

0000000000012d00 <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12d00:	55                   	push   %rbp
   12d01:	48 89 e5             	mov    %rsp,%rbp
   12d04:	48 83 ec 20          	sub    $0x20,%rsp
   12d08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12d10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12d14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d1c:	48 89 d6             	mov    %rdx,%rsi
   12d1f:	48 89 c7             	mov    %rax,%rdi
   12d22:	e8 9b 20 00 00       	call   14dc2 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   12d27:	c9                   	leave
   12d28:	c3                   	ret
   12d29:	90                   	nop

0000000000012d2a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12d2a:	55                   	push   %rbp
   12d2b:	48 89 e5             	mov    %rsp,%rbp
   12d2e:	53                   	push   %rbx
   12d2f:	48 83 ec 38          	sub    $0x38,%rsp
   12d33:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12d37:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12d3b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12d3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d43:	48 89 c7             	mov    %rax,%rdi
   12d46:	e8 93 ff ff ff       	call   12cde <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   12d4b:	48 89 c3             	mov    %rax,%rbx
   12d4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d52:	48 89 c7             	mov    %rax,%rdi
   12d55:	e8 14 db ff ff       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12d5a:	48 29 c3             	sub    %rax,%rbx
   12d5d:	48 89 da             	mov    %rbx,%rdx
   12d60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12d64:	48 39 c2             	cmp    %rax,%rdx
   12d67:	0f 92 c0             	setb   %al
   12d6a:	84 c0                	test   %al,%al
   12d6c:	74 0c                	je     12d7a <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12d6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d72:	48 89 c7             	mov    %rax,%rdi
   12d75:	e8 36 14 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12d7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d7e:	48 89 c7             	mov    %rax,%rdi
   12d81:	e8 e8 da ff ff       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12d86:	48 89 c3             	mov    %rax,%rbx
   12d89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d8d:	48 89 c7             	mov    %rax,%rdi
   12d90:	e8 d9 da ff ff       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12d95:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12d99:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12d9d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12da1:	48 89 d6             	mov    %rdx,%rsi
   12da4:	48 89 c7             	mov    %rax,%rdi
   12da7:	e8 08 03 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   12dac:	48 8b 00             	mov    (%rax),%rax
   12daf:	48 01 d8             	add    %rbx,%rax
   12db2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12db6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12dba:	48 89 c7             	mov    %rax,%rdi
   12dbd:	e8 ac da ff ff       	call   1086e <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   12dc2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12dc6:	72 12                	jb     12dda <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12dc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12dcc:	48 89 c7             	mov    %rax,%rdi
   12dcf:	e8 0a ff ff ff       	call   12cde <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   12dd4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12dd8:	73 0e                	jae    12de8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12dda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12dde:	48 89 c7             	mov    %rax,%rdi
   12de1:	e8 f8 fe ff ff       	call   12cde <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   12de6:	eb 04                	jmp    12dec <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12dec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12df0:	c9                   	leave
   12df1:	c3                   	ret

0000000000012df2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12df2:	55                   	push   %rbp
   12df3:	48 89 e5             	mov    %rsp,%rbp
   12df6:	48 83 ec 10          	sub    $0x10,%rsp
   12dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12dfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12e02:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12e07:	74 15                	je     12e1e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   12e09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e0d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12e11:	48 89 d6             	mov    %rdx,%rsi
   12e14:	48 89 c7             	mov    %rax,%rdi
   12e17:	e8 cf 1f 00 00       	call   14deb <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   12e1c:	eb 05                	jmp    12e23 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   12e1e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12e23:	c9                   	leave
   12e24:	c3                   	ret

0000000000012e25 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12e25:	55                   	push   %rbp
   12e26:	48 89 e5             	mov    %rsp,%rbp
   12e29:	48 83 ec 20          	sub    $0x20,%rsp
   12e2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12e35:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12e39:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12e3d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12e41:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12e45:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12e49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e4d:	48 89 c7             	mov    %rax,%rdi
   12e50:	e8 c0 1f 00 00       	call   14e15 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12e55:	c9                   	leave
   12e56:	c3                   	ret
   12e57:	90                   	nop

0000000000012e58 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   12e58:	55                   	push   %rbp
   12e59:	48 89 e5             	mov    %rsp,%rbp
   12e5c:	48 83 ec 10          	sub    $0x10,%rsp
   12e60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e68:	48 89 c7             	mov    %rax,%rdi
   12e6b:	e8 4a 20 00 00       	call   14eba <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12e70:	48 89 c7             	mov    %rax,%rdi
   12e73:	e8 00 20 00 00       	call   14e78 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   12e78:	c9                   	leave
   12e79:	c3                   	ret

0000000000012e7a <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12e7a:	55                   	push   %rbp
   12e7b:	48 89 e5             	mov    %rsp,%rbp
   12e7e:	48 83 ec 20          	sub    $0x20,%rsp
   12e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12e8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12e8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e96:	48 89 d6             	mov    %rdx,%rsi
   12e99:	48 89 c7             	mov    %rax,%rdi
   12e9c:	e8 27 20 00 00       	call   14ec8 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   12ea1:	c9                   	leave
   12ea2:	c3                   	ret
   12ea3:	90                   	nop

0000000000012ea4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12ea4:	55                   	push   %rbp
   12ea5:	48 89 e5             	mov    %rsp,%rbp
   12ea8:	53                   	push   %rbx
   12ea9:	48 83 ec 38          	sub    $0x38,%rsp
   12ead:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12eb1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12eb5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12eb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ebd:	48 89 c7             	mov    %rax,%rdi
   12ec0:	e8 93 ff ff ff       	call   12e58 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   12ec5:	48 89 c3             	mov    %rax,%rbx
   12ec8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ecc:	48 89 c7             	mov    %rax,%rdi
   12ecf:	e8 28 dc ff ff       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12ed4:	48 29 c3             	sub    %rax,%rbx
   12ed7:	48 89 da             	mov    %rbx,%rdx
   12eda:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12ede:	48 39 c2             	cmp    %rax,%rdx
   12ee1:	0f 92 c0             	setb   %al
   12ee4:	84 c0                	test   %al,%al
   12ee6:	74 0c                	je     12ef4 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12ee8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12eec:	48 89 c7             	mov    %rax,%rdi
   12eef:	e8 bc 12 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12ef4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ef8:	48 89 c7             	mov    %rax,%rdi
   12efb:	e8 fc db ff ff       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12f00:	48 89 c3             	mov    %rax,%rbx
   12f03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f07:	48 89 c7             	mov    %rax,%rdi
   12f0a:	e8 ed db ff ff       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12f0f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12f13:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12f17:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12f1b:	48 89 d6             	mov    %rdx,%rsi
   12f1e:	48 89 c7             	mov    %rax,%rdi
   12f21:	e8 8e 01 00 00       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   12f26:	48 8b 00             	mov    (%rax),%rax
   12f29:	48 01 d8             	add    %rbx,%rax
   12f2c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12f30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f34:	48 89 c7             	mov    %rax,%rdi
   12f37:	e8 c0 db ff ff       	call   10afc <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   12f3c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12f40:	72 12                	jb     12f54 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12f42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f46:	48 89 c7             	mov    %rax,%rdi
   12f49:	e8 0a ff ff ff       	call   12e58 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   12f4e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12f52:	73 0e                	jae    12f62 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12f54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f58:	48 89 c7             	mov    %rax,%rdi
   12f5b:	e8 f8 fe ff ff       	call   12e58 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   12f60:	eb 04                	jmp    12f66 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12f66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12f6a:	c9                   	leave
   12f6b:	c3                   	ret

0000000000012f6c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12f6c:	55                   	push   %rbp
   12f6d:	48 89 e5             	mov    %rsp,%rbp
   12f70:	48 83 ec 10          	sub    $0x10,%rsp
   12f74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12f7c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12f81:	74 15                	je     12f98 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   12f83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12f8b:	48 89 d6             	mov    %rdx,%rsi
   12f8e:	48 89 c7             	mov    %rax,%rdi
   12f91:	e8 5b 1f 00 00       	call   14ef1 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   12f96:	eb 05                	jmp    12f9d <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   12f98:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12f9d:	c9                   	leave
   12f9e:	c3                   	ret

0000000000012f9f <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12f9f:	55                   	push   %rbp
   12fa0:	48 89 e5             	mov    %rsp,%rbp
   12fa3:	48 83 ec 20          	sub    $0x20,%rsp
   12fa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12fab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12faf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12fb3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12fb7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12fbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12fbf:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fc7:	48 89 c7             	mov    %rax,%rdi
   12fca:	e8 4c 1f 00 00       	call   14f1b <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12fcf:	c9                   	leave
   12fd0:	c3                   	ret

0000000000012fd1 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   12fd1:	55                   	push   %rbp
   12fd2:	48 89 e5             	mov    %rsp,%rbp
   12fd5:	53                   	push   %rbx
   12fd6:	48 83 ec 38          	sub    $0x38,%rsp
   12fda:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12fde:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   12fe2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12fe6:	48 8b 00             	mov    (%rax),%rax
   12fe9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12fed:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12ff1:	48 89 c7             	mov    %rax,%rdi
   12ff4:	e8 f3 8b ff ff       	call   bbec <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   12ff9:	48 89 c3             	mov    %rax,%rbx
   12ffc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13000:	48 8b 00             	mov    (%rax),%rax
   13003:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13007:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1300b:	48 89 c7             	mov    %rax,%rdi
   1300e:	e8 d9 8b ff ff       	call   bbec <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13013:	48 29 c3             	sub    %rax,%rbx
   13016:	48 89 da             	mov    %rbx,%rdx
   13019:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1301d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   13021:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13025:	48 89 d6             	mov    %rdx,%rsi
   13028:	48 89 c7             	mov    %rax,%rdi
   1302b:	e8 94 8b ff ff       	call   bbc4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   13030:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   13034:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13038:	c9                   	leave
   13039:	c3                   	ret

000000000001303a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   1303a:	55                   	push   %rbp
   1303b:	48 89 e5             	mov    %rsp,%rbp
   1303e:	48 83 ec 20          	sub    $0x20,%rsp
   13042:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   13046:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1304a:	48 89 c7             	mov    %rax,%rdi
   1304d:	e8 9a 8b ff ff       	call   bbec <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13052:	48 89 c1             	mov    %rax,%rcx
   13055:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   1305c:	9b c4 20 
   1305f:	48 89 c8             	mov    %rcx,%rax
   13062:	48 f7 ea             	imul   %rdx
   13065:	48 89 d0             	mov    %rdx,%rax
   13068:	48 c1 f8 07          	sar    $0x7,%rax
   1306c:	48 c1 f9 3f          	sar    $0x3f,%rcx
   13070:	48 89 ca             	mov    %rcx,%rdx
   13073:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   13076:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1307a:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1307e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13082:	48 89 d6             	mov    %rdx,%rsi
   13085:	48 89 c7             	mov    %rax,%rdi
   13088:	e8 f1 1e 00 00       	call   14f7e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1308d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   13091:	c9                   	leave
   13092:	c3                   	ret

0000000000013093 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   13093:	55                   	push   %rbp
   13094:	48 89 e5             	mov    %rsp,%rbp
   13097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1309b:	90                   	nop
   1309c:	5d                   	pop    %rbp
   1309d:	c3                   	ret

000000000001309e <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1309e:	55                   	push   %rbp
   1309f:	48 89 e5             	mov    %rsp,%rbp
   130a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   130aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130ae:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
   130b2:	5d                   	pop    %rbp
   130b3:	c3                   	ret

00000000000130b4 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   130b4:	55                   	push   %rbp
   130b5:	48 89 e5             	mov    %rsp,%rbp
   130b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   130c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130c4:	48 8b 10             	mov    (%rax),%rdx
   130c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130cb:	48 8b 00             	mov    (%rax),%rax
   130ce:	48 39 c2             	cmp    %rax,%rdx
   130d1:	73 06                	jae    130d9 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   130d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130d7:	eb 04                	jmp    130dd <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   130d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   130dd:	5d                   	pop    %rbp
   130de:	c3                   	ret

00000000000130df <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   130df:	55                   	push   %rbp
   130e0:	48 89 e5             	mov    %rsp,%rbp
   130e3:	48 83 ec 10          	sub    $0x10,%rsp
   130e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   130eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130ef:	48 89 c7             	mov    %rax,%rdi
   130f2:	e8 b3 1e 00 00       	call   14faa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
   130f7:	c9                   	leave
   130f8:	c3                   	ret
   130f9:	90                   	nop

00000000000130fa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   130fa:	55                   	push   %rbp
   130fb:	48 89 e5             	mov    %rsp,%rbp
   130fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13106:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1310d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13111:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13118:	00 
   13119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1311d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13124:	00 
	{ }
   13125:	90                   	nop
   13126:	5d                   	pop    %rbp
   13127:	c3                   	ret

0000000000013128 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13128:	55                   	push   %rbp
   13129:	48 89 e5             	mov    %rsp,%rbp
   1312c:	48 83 ec 10          	sub    $0x10,%rsp
   13130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13134:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13138:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1313d:	74 15                	je     13154 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
   1313f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13143:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13147:	48 89 d6             	mov    %rdx,%rsi
   1314a:	48 89 c7             	mov    %rax,%rdi
   1314d:	e8 72 1e 00 00       	call   14fc4 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
   13152:	eb 05                	jmp    13159 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
   13154:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13159:	c9                   	leave
   1315a:	c3                   	ret

000000000001315b <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1315b:	55                   	push   %rbp
   1315c:	48 89 e5             	mov    %rsp,%rbp
   1315f:	48 83 ec 20          	sub    $0x20,%rsp
   13163:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13167:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1316b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1316f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13173:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13177:	48 89 d6             	mov    %rdx,%rsi
   1317a:	48 89 c7             	mov    %rax,%rdi
   1317d:	e8 6c 1e 00 00       	call   14fee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
   13182:	c9                   	leave
   13183:	c3                   	ret

0000000000013184 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   13184:	55                   	push   %rbp
   13185:	48 89 e5             	mov    %rsp,%rbp
   13188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1318c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13190:	90                   	nop
   13191:	5d                   	pop    %rbp
   13192:	c3                   	ret
   13193:	90                   	nop

0000000000013194 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13194:	55                   	push   %rbp
   13195:	48 89 e5             	mov    %rsp,%rbp
   13198:	48 83 ec 20          	sub    $0x20,%rsp
   1319c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   131a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131ac:	48 89 d0             	mov    %rdx,%rax
   131af:	48 c1 e0 06          	shl    $0x6,%rax
   131b3:	48 01 d0             	add    %rdx,%rax
   131b6:	48 c1 e0 02          	shl    $0x2,%rax
   131ba:	48 89 c2             	mov    %rax,%rdx
   131bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131c1:	48 89 d6             	mov    %rdx,%rsi
   131c4:	48 89 c7             	mov    %rax,%rdi
   131c7:	e8 64 12 ff ff       	call   4430 <_ZdlPvm@plt>
      }
   131cc:	c9                   	leave
   131cd:	c3                   	ret

00000000000131ce <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   131ce:	55                   	push   %rbp
   131cf:	48 89 e5             	mov    %rsp,%rbp
   131d2:	48 83 ec 30          	sub    $0x30,%rsp
   131d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   131da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   131de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   131e2:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   131e6:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   131ea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   131ee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   131f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131f6:	48 89 ce             	mov    %rcx,%rsi
   131f9:	48 89 c7             	mov    %rax,%rdi
   131fc:	e8 4d 1e 00 00       	call   1504e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>
    }
   13201:	c9                   	leave
   13202:	c3                   	ret
   13203:	90                   	nop

0000000000013204 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   13204:	55                   	push   %rbp
   13205:	48 89 e5             	mov    %rsp,%rbp
   13208:	53                   	push   %rbx
   13209:	48 83 ec 28          	sub    $0x28,%rsp
   1320d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13211:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13215:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   13219:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1321d:	48 89 c6             	mov    %rax,%rsi
   13220:	bf 08 00 00 00       	mov    $0x8,%edi
   13225:	e8 ed 89 ff ff       	call   bc17 <_ZnwmPv>
   1322a:	48 89 c3             	mov    %rax,%rbx
   1322d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13231:	48 89 c7             	mov    %rax,%rdi
   13234:	e8 cb dd ff ff       	call   11004 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   13239:	48 8b 00             	mov    (%rax),%rax
   1323c:	48 89 03             	mov    %rax,(%rbx)
   1323f:	90                   	nop
   13240:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13244:	c9                   	leave
   13245:	c3                   	ret

0000000000013246 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   13246:	55                   	push   %rbp
   13247:	48 89 e5             	mov    %rsp,%rbp
   1324a:	53                   	push   %rbx
   1324b:	48 83 ec 38          	sub    $0x38,%rsp
   1324f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13253:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13257:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1325b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1325f:	48 89 c7             	mov    %rax,%rdi
   13262:	e8 15 1e 00 00       	call   1507c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13267:	48 89 c3             	mov    %rax,%rbx
   1326a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1326e:	48 89 c7             	mov    %rax,%rdi
   13271:	e8 56 93 ff ff       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13276:	48 29 c3             	sub    %rax,%rbx
   13279:	48 89 da             	mov    %rbx,%rdx
   1327c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13280:	48 39 c2             	cmp    %rax,%rdx
   13283:	0f 92 c0             	setb   %al
   13286:	84 c0                	test   %al,%al
   13288:	74 0c                	je     13296 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   1328a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1328e:	48 89 c7             	mov    %rax,%rdi
   13291:	e8 1a 0f ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   13296:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1329a:	48 89 c7             	mov    %rax,%rdi
   1329d:	e8 2a 93 ff ff       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   132a2:	48 89 c3             	mov    %rax,%rbx
   132a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132a9:	48 89 c7             	mov    %rax,%rdi
   132ac:	e8 1b 93 ff ff       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   132b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   132b5:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   132b9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132bd:	48 89 d6             	mov    %rdx,%rsi
   132c0:	48 89 c7             	mov    %rax,%rdi
   132c3:	e8 ec fd ff ff       	call   130b4 <_ZSt3maxImERKT_S2_S2_>
   132c8:	48 8b 00             	mov    (%rax),%rax
   132cb:	48 01 d8             	add    %rbx,%rax
   132ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   132d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132d6:	48 89 c7             	mov    %rax,%rdi
   132d9:	e8 ee 92 ff ff       	call   c5cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   132de:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   132e2:	72 12                	jb     132f6 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   132e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132e8:	48 89 c7             	mov    %rax,%rdi
   132eb:	e8 8c 1d 00 00       	call   1507c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   132f0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   132f4:	73 0e                	jae    13304 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   132f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132fa:	48 89 c7             	mov    %rax,%rdi
   132fd:	e8 7a 1d 00 00       	call   1507c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13302:	eb 04                	jmp    13308 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   13304:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13308:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1330c:	c9                   	leave
   1330d:	c3                   	ret

000000000001330e <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   1330e:	55                   	push   %rbp
   1330f:	48 89 e5             	mov    %rsp,%rbp
   13312:	53                   	push   %rbx
   13313:	48 83 ec 18          	sub    $0x18,%rsp
   13317:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1331b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
   1331f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13323:	48 89 c7             	mov    %rax,%rdi
   13326:	e8 21 b4 ff ff       	call   e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1332b:	48 8b 18             	mov    (%rax),%rbx
   1332e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13332:	48 89 c7             	mov    %rax,%rdi
   13335:	e8 12 b4 ff ff       	call   e74c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1333a:	48 8b 00             	mov    (%rax),%rax
   1333d:	48 89 da             	mov    %rbx,%rdx
   13340:	48 29 c2             	sub    %rax,%rdx
   13343:	48 89 d0             	mov    %rdx,%rax
   13346:	48 c1 f8 03          	sar    $0x3,%rax
   1334a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1334e:	c9                   	leave
   1334f:	c3                   	ret

0000000000013350 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   13350:	55                   	push   %rbp
   13351:	48 89 e5             	mov    %rsp,%rbp
   13354:	48 83 ec 20          	sub    $0x20,%rsp
   13358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1335c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13360:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13364:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13368:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1336c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13370:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13378:	48 89 c7             	mov    %rax,%rdi
   1337b:	e8 1e 1d 00 00       	call   1509e <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   13380:	c9                   	leave
   13381:	c3                   	ret

0000000000013382 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   13382:	55                   	push   %rbp
   13383:	48 89 e5             	mov    %rsp,%rbp
   13386:	48 83 ec 20          	sub    $0x20,%rsp
   1338a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1338e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   13392:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13396:	48 8b 00             	mov    (%rax),%rax
   13399:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1339d:	48 c1 e2 03          	shl    $0x3,%rdx
   133a1:	48 f7 da             	neg    %rdx
   133a4:	48 01 d0             	add    %rdx,%rax
   133a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   133ab:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   133af:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   133b3:	48 89 d6             	mov    %rdx,%rsi
   133b6:	48 89 c7             	mov    %rax,%rdi
   133b9:	e8 70 b3 ff ff       	call   e72e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   133be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   133c2:	c9                   	leave
   133c3:	c3                   	ret

00000000000133c4 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   133c4:	55                   	push   %rbp
   133c5:	48 89 e5             	mov    %rsp,%rbp
   133c8:	48 83 ec 10          	sub    $0x10,%rsp
   133cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   133d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133d4:	48 89 c7             	mov    %rax,%rdi
   133d7:	e8 26 1d 00 00       	call   15102 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
   133dc:	c9                   	leave
   133dd:	c3                   	ret

00000000000133de <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   133de:	55                   	push   %rbp
   133df:	48 89 e5             	mov    %rsp,%rbp
   133e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   133ea:	90                   	nop
   133eb:	5d                   	pop    %rbp
   133ec:	c3                   	ret
   133ed:	90                   	nop

00000000000133ee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   133ee:	55                   	push   %rbp
   133ef:	48 89 e5             	mov    %rsp,%rbp
   133f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   133f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133fa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13405:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1340c:	00 
   1340d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13411:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13418:	00 
	{ }
   13419:	90                   	nop
   1341a:	5d                   	pop    %rbp
   1341b:	c3                   	ret

000000000001341c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1341c:	55                   	push   %rbp
   1341d:	48 89 e5             	mov    %rsp,%rbp
   13420:	48 83 ec 10          	sub    $0x10,%rsp
   13424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13428:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1342c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13431:	74 15                	je     13448 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
   13433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13437:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1343b:	48 89 d6             	mov    %rdx,%rsi
   1343e:	48 89 c7             	mov    %rax,%rdi
   13441:	e8 d6 1c 00 00       	call   1511c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
   13446:	eb 05                	jmp    1344d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
   13448:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1344d:	c9                   	leave
   1344e:	c3                   	ret

000000000001344f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1344f:	55                   	push   %rbp
   13450:	48 89 e5             	mov    %rsp,%rbp
   13453:	48 83 ec 20          	sub    $0x20,%rsp
   13457:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1345b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1345f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13463:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13467:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1346b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1346f:	48 89 ce             	mov    %rcx,%rsi
   13472:	48 89 c7             	mov    %rax,%rdi
   13475:	e8 cc 1c 00 00       	call   15146 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
   1347a:	90                   	nop
   1347b:	c9                   	leave
   1347c:	c3                   	ret

000000000001347d <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1347d:	55                   	push   %rbp
   1347e:	48 89 e5             	mov    %rsp,%rbp
   13481:	48 83 ec 20          	sub    $0x20,%rsp
   13485:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13489:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1348d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13491:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13499:	48 89 d6             	mov    %rdx,%rsi
   1349c:	48 89 c7             	mov    %rax,%rdi
   1349f:	e8 dc 1c 00 00       	call   15180 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
   134a4:	c9                   	leave
   134a5:	c3                   	ret

00000000000134a6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
   134a6:	55                   	push   %rbp
   134a7:	48 89 e5             	mov    %rsp,%rbp
   134aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134b2:	90                   	nop
   134b3:	5d                   	pop    %rbp
   134b4:	c3                   	ret
   134b5:	90                   	nop

00000000000134b6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   134b6:	55                   	push   %rbp
   134b7:	48 89 e5             	mov    %rsp,%rbp
   134ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134be:	90                   	nop
   134bf:	5d                   	pop    %rbp
   134c0:	c3                   	ret

00000000000134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   134c1:	55                   	push   %rbp
   134c2:	48 89 e5             	mov    %rsp,%rbp
   134c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   134c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134cd:	5d                   	pop    %rbp
   134ce:	c3                   	ret
   134cf:	90                   	nop

00000000000134d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   134d0:	55                   	push   %rbp
   134d1:	48 89 e5             	mov    %rsp,%rbp
   134d4:	48 83 ec 20          	sub    $0x20,%rsp
   134d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _M_t(__t),
   134e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   134ec:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   134ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134f3:	48 89 c7             	mov    %rax,%rdi
   134f6:	e8 c6 ff ff ff       	call   134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   134fb:	48 89 c2             	mov    %rax,%rdx
   134fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13502:	48 89 d6             	mov    %rdx,%rsi
   13505:	48 89 c7             	mov    %rax,%rdi
   13508:	e8 d3 1c 00 00       	call   151e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>
   1350d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13511:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   13515:	90                   	nop
   13516:	c9                   	leave
   13517:	c3                   	ret

0000000000013518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   13518:	55                   	push   %rbp
   13519:	48 89 e5             	mov    %rsp,%rbp
   1351c:	48 83 ec 10          	sub    $0x10,%rsp
   13520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   13524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13528:	48 8b 40 08          	mov    0x8(%rax),%rax
   1352c:	48 85 c0             	test   %rax,%rax
   1352f:	74 1a                	je     1354b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   13531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13535:	48 8b 00             	mov    (%rax),%rax
   13538:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1353c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   13540:	48 89 d6             	mov    %rdx,%rsi
   13543:	48 89 c7             	mov    %rax,%rdi
   13546:	e8 cf df ff ff       	call   1151a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	}
   1354b:	90                   	nop
   1354c:	c9                   	leave
   1354d:	c3                   	ret

000000000001354e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1354e:	55                   	push   %rbp
   1354f:	48 89 e5             	mov    %rsp,%rbp
   13552:	53                   	push   %rbx
   13553:	48 83 ec 78          	sub    $0x78,%rsp
   13557:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   1355b:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   1355f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13563:	48 89 c7             	mov    %rax,%rdi
   13566:	e8 05 b3 ff ff       	call   e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
   1356b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   1356f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13573:	48 89 c7             	mov    %rax,%rdi
   13576:	e8 8f 02 00 00       	call   1380a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   1357b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   1357f:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   13583:	eb 51                	jmp    135d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x88>
	  __y = __x;
   13585:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13589:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   1358d:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13591:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13595:	48 89 c7             	mov    %rax,%rdi
   13598:	e8 7f 02 00 00       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   1359d:	48 89 c2             	mov    %rax,%rdx
   135a0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   135a4:	48 89 c6             	mov    %rax,%rsi
   135a7:	48 89 df             	mov    %rbx,%rdi
   135aa:	e8 99 02 00 00       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   135af:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   135b2:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   135b6:	74 0e                	je     135c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x78>
   135b8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   135bc:	48 89 c7             	mov    %rax,%rdi
   135bf:	e8 44 df ff ff       	call   11508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   135c4:	eb 0c                	jmp    135d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x84>
   135c6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   135ca:	48 89 c7             	mov    %rax,%rdi
   135cd:	e8 24 df ff ff       	call   114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   135d2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   135d6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   135da:	48 85 c0             	test   %rax,%rax
   135dd:	75 a6                	jne    13585 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x37>
      iterator __j = iterator(__y);
   135df:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   135e3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   135e7:	48 89 d6             	mov    %rdx,%rsi
   135ea:	48 89 c7             	mov    %rax,%rdi
   135ed:	e8 8a 01 00 00       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   135f2:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   135f6:	74 54                	je     1364c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xfe>
	  if (__j == begin())
   135f8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   135fc:	48 89 c7             	mov    %rax,%rdi
   135ff:	e8 d8 03 00 00       	call   139dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
   13604:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   13608:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1360c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13610:	48 89 d6             	mov    %rdx,%rsi
   13613:	48 89 c7             	mov    %rax,%rdi
   13616:	e8 0d 1c 00 00       	call   15228 <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   1361b:	84 c0                	test   %al,%al
   1361d:	74 21                	je     13640 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xf2>
	    return _Res(__x, __y);
   1361f:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13623:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   13627:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1362b:	48 89 ce             	mov    %rcx,%rsi
   1362e:	48 89 c7             	mov    %rax,%rdi
   13631:	e8 14 1c 00 00       	call   1524a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
   13636:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1363a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1363e:	eb 7d                	jmp    136bd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
	    --__j;
   13640:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13644:	48 89 c7             	mov    %rax,%rdi
   13647:	e8 42 1c 00 00       	call   1528e <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   1364c:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13650:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   13654:	48 89 c7             	mov    %rax,%rdi
   13657:	e8 5a 1c 00 00       	call   152b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1365c:	48 89 c1             	mov    %rax,%rcx
   1365f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13663:	48 89 c2             	mov    %rax,%rdx
   13666:	48 89 ce             	mov    %rcx,%rsi
   13669:	48 89 df             	mov    %rbx,%rdi
   1366c:	e8 d7 01 00 00       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13671:	84 c0                	test   %al,%al
   13673:	74 21                	je     13696 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x148>
	return _Res(__x, __y);
   13675:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13679:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1367d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13681:	48 89 ce             	mov    %rcx,%rsi
   13684:	48 89 c7             	mov    %rax,%rdi
   13687:	e8 be 1b 00 00       	call   1524a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
   1368c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13690:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13694:	eb 27                	jmp    136bd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
      return _Res(__j._M_node, 0);
   13696:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1369d:	00 
   1369e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   136a2:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   136a6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   136aa:	48 89 ce             	mov    %rcx,%rsi
   136ad:	48 89 c7             	mov    %rax,%rdi
   136b0:	e8 1b 1c 00 00       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   136b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   136b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   136bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   136c1:	c9                   	leave
   136c2:	c3                   	ret
   136c3:	90                   	nop

00000000000136c4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   136c4:	55                   	push   %rbp
   136c5:	48 89 e5             	mov    %rsp,%rbp
   136c8:	48 83 ec 10          	sub    $0x10,%rsp
   136cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   136d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136d4:	48 8b 40 08          	mov    0x8(%rax),%rax
   136d8:	48 89 c7             	mov    %rax,%rdi
   136db:	e8 3c 01 00 00       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   136e0:	c9                   	leave
   136e1:	c3                   	ret

00000000000136e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   136e2:	55                   	push   %rbp
   136e3:	48 89 e5             	mov    %rsp,%rbp
   136e6:	48 83 ec 30          	sub    $0x30,%rsp
   136ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136ee:	48 89 d1             	mov    %rdx,%rcx
   136f1:	48 89 f0             	mov    %rsi,%rax
   136f4:	48 89 fa             	mov    %rdi,%rdx
   136f7:	48 89 ca             	mov    %rcx,%rdx
   136fa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   136fe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   13702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13706:	48 8b 00             	mov    (%rax),%rax
   13709:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1370d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   13711:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13715:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   13719:	48 89 c7             	mov    %rax,%rdi
   1371c:	e8 df 1b 00 00       	call   15300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>
   13721:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   13725:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13729:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13730:	00 
	  return __it;
   13731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   13735:	c9                   	leave
   13736:	c3                   	ret
   13737:	90                   	nop

0000000000013738 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   13738:	55                   	push   %rbp
   13739:	48 89 e5             	mov    %rsp,%rbp
   1373c:	48 83 ec 20          	sub    $0x20,%rsp
   13740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13744:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13748:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1374c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13750:	48 89 c7             	mov    %rax,%rdi
   13753:	e8 6b 1c 00 00       	call   153c3 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
   13758:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1375c:	48 8b 00             	mov    (%rax),%rax
   1375f:	48 89 02             	mov    %rax,(%rdx)
   13762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13766:	48 89 c7             	mov    %rax,%rdi
   13769:	e8 63 1c 00 00       	call   153d1 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   1376e:	0f b6 10             	movzbl (%rax),%edx
   13771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13775:	88 50 08             	mov    %dl,0x8(%rax)
   13778:	90                   	nop
   13779:	c9                   	leave
   1377a:	c3                   	ret
   1377b:	90                   	nop

000000000001377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1377c:	55                   	push   %rbp
   1377d:	48 89 e5             	mov    %rsp,%rbp
   13780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   13788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1378c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13790:	48 89 10             	mov    %rdx,(%rax)
   13793:	90                   	nop
   13794:	5d                   	pop    %rbp
   13795:	c3                   	ret

0000000000013796 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13796:	55                   	push   %rbp
   13797:	48 89 e5             	mov    %rsp,%rbp
   1379a:	53                   	push   %rbx
   1379b:	48 83 ec 18          	sub    $0x18,%rsp
   1379f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   137a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   137a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   137ab:	48 89 c7             	mov    %rax,%rdi
   137ae:	e8 3b 1c 00 00       	call   153ee <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   137b3:	48 89 c3             	mov    %rax,%rbx
   137b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137ba:	48 89 c7             	mov    %rax,%rdi
   137bd:	e8 1e 1c 00 00       	call   153e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   137c2:	48 89 de             	mov    %rbx,%rsi
   137c5:	48 89 c7             	mov    %rax,%rdi
   137c8:	e8 3f 1c 00 00       	call   1540c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>
      }
   137cd:	90                   	nop
   137ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   137d2:	c9                   	leave
   137d3:	c3                   	ret

00000000000137d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   137d4:	55                   	push   %rbp
   137d5:	48 89 e5             	mov    %rsp,%rbp
   137d8:	48 83 ec 10          	sub    $0x10,%rsp
   137dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   137e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137e8:	48 89 c7             	mov    %rax,%rdi
   137eb:	e8 f0 1b 00 00       	call   153e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   137f0:	48 89 c1             	mov    %rax,%rcx
   137f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   137f7:	ba 01 00 00 00       	mov    $0x1,%edx
   137fc:	48 89 c6             	mov    %rax,%rsi
   137ff:	48 89 cf             	mov    %rcx,%rdi
   13802:	e8 2b 1c 00 00       	call   15432 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>
   13807:	90                   	nop
   13808:	c9                   	leave
   13809:	c3                   	ret

000000000001380a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   1380a:	55                   	push   %rbp
   1380b:	48 89 e5             	mov    %rsp,%rbp
   1380e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   13812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13816:	48 83 c0 08          	add    $0x8,%rax
   1381a:	5d                   	pop    %rbp
   1381b:	c3                   	ret

000000000001381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>:
      _S_key(_Const_Link_type __x)
   1381c:	55                   	push   %rbp
   1381d:	48 89 e5             	mov    %rsp,%rbp
   13820:	48 83 ec 20          	sub    $0x20,%rsp
   13824:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   13828:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1382c:	48 89 c7             	mov    %rax,%rdi
   1382f:	e8 2c 1c 00 00       	call   15460 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   13834:	48 89 c2             	mov    %rax,%rdx
   13837:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   1383b:	48 89 d6             	mov    %rdx,%rsi
   1383e:	48 89 c7             	mov    %rax,%rdi
   13841:	e8 38 1c 00 00       	call   1547e <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>
      }
   13846:	c9                   	leave
   13847:	c3                   	ret

0000000000013848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   13848:	55                   	push   %rbp
   13849:	48 89 e5             	mov    %rsp,%rbp
   1384c:	48 83 ec 20          	sub    $0x20,%rsp
   13850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13854:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13858:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   1385c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13860:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13864:	48 89 d6             	mov    %rdx,%rsi
   13867:	48 89 c7             	mov    %rax,%rdi
   1386a:	e8 21 1c 00 00       	call   15490 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   1386f:	c9                   	leave
   13870:	c3                   	ret
   13871:	90                   	nop

0000000000013872 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13872:	55                   	push   %rbp
   13873:	48 89 e5             	mov    %rsp,%rbp
   13876:	53                   	push   %rbx
   13877:	48 83 ec 38          	sub    $0x38,%rsp
   1387b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1387f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13883:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13887:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   1388b:	eb 56                	jmp    138e3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1388d:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13891:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13895:	48 89 c7             	mov    %rax,%rdi
   13898:	e8 7f ff ff ff       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   1389d:	48 89 c1             	mov    %rax,%rcx
   138a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   138a4:	48 89 c2             	mov    %rax,%rdx
   138a7:	48 89 ce             	mov    %rcx,%rsi
   138aa:	48 89 df             	mov    %rbx,%rdi
   138ad:	e8 96 ff ff ff       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   138b2:	83 f0 01             	xor    $0x1,%eax
   138b5:	84 c0                	test   %al,%al
   138b7:	74 1a                	je     138d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x61>
	  __y = __x, __x = _S_left(__x);
   138b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   138bd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   138c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   138c5:	48 89 c7             	mov    %rax,%rdi
   138c8:	e8 3b dc ff ff       	call   11508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   138cd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   138d1:	eb 10                	jmp    138e3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	  __x = _S_right(__x);
   138d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   138d7:	48 89 c7             	mov    %rax,%rdi
   138da:	e8 17 dc ff ff       	call   114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   138df:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   138e3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   138e8:	75 a3                	jne    1388d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
   138ea:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   138ee:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   138f2:	48 89 d6             	mov    %rdx,%rsi
   138f5:	48 89 c7             	mov    %rax,%rdi
   138f8:	e8 7f fe ff ff       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   138fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   13901:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13905:	c9                   	leave
   13906:	c3                   	ret
   13907:	90                   	nop

0000000000013908 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13908:	55                   	push   %rbp
   13909:	48 89 e5             	mov    %rsp,%rbp
   1390c:	53                   	push   %rbx
   1390d:	48 83 ec 38          	sub    $0x38,%rsp
   13911:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13915:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13919:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1391d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   13921:	eb 50                	jmp    13973 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
   13923:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13927:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1392b:	48 89 c7             	mov    %rax,%rdi
   1392e:	e8 e9 fe ff ff       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   13933:	48 89 c2             	mov    %rax,%rdx
   13936:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1393a:	48 89 c6             	mov    %rax,%rsi
   1393d:	48 89 df             	mov    %rbx,%rdi
   13940:	e8 03 ff ff ff       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13945:	84 c0                	test   %al,%al
   13947:	74 1a                	je     13963 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x5b>
	  __y = __x, __x = _S_left(__x);
   13949:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1394d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13951:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13955:	48 89 c7             	mov    %rax,%rdi
   13958:	e8 ab db ff ff       	call   11508 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   1395d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13961:	eb 10                	jmp    13973 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	  __x = _S_right(__x);
   13963:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13967:	48 89 c7             	mov    %rax,%rdi
   1396a:	e8 87 db ff ff       	call   114f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   1396f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   13973:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13978:	75 a9                	jne    13923 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
   1397a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1397e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13982:	48 89 d6             	mov    %rdx,%rsi
   13985:	48 89 c7             	mov    %rax,%rdi
   13988:	e8 ef fd ff ff       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   1398d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   13991:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13995:	c9                   	leave
   13996:	c3                   	ret
   13997:	90                   	nop

0000000000013998 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   13998:	55                   	push   %rbp
   13999:	48 89 e5             	mov    %rsp,%rbp
   1399c:	48 83 ec 20          	sub    $0x20,%rsp
   139a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   139a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   139a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   139ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   139b0:	48 89 c7             	mov    %rax,%rdi
   139b3:	e8 0b 1a 00 00       	call   153c3 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
   139b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139bc:	48 8b 00             	mov    (%rax),%rax
   139bf:	48 89 02             	mov    %rax,(%rdx)
   139c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139c6:	48 89 c7             	mov    %rax,%rdi
   139c9:	e8 f5 19 00 00       	call   153c3 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
   139ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   139d2:	48 8b 00             	mov    (%rax),%rax
   139d5:	48 89 42 08          	mov    %rax,0x8(%rdx)
   139d9:	90                   	nop
   139da:	c9                   	leave
   139db:	c3                   	ret

00000000000139dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   139dc:	55                   	push   %rbp
   139dd:	48 89 e5             	mov    %rsp,%rbp
   139e0:	48 83 ec 20          	sub    $0x20,%rsp
   139e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   139e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139ec:	48 8b 50 18          	mov    0x18(%rax),%rdx
   139f0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   139f4:	48 89 d6             	mov    %rdx,%rsi
   139f7:	48 89 c7             	mov    %rax,%rdi
   139fa:	e8 7d fd ff ff       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   139ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a03:	c9                   	leave
   13a04:	c3                   	ret

0000000000013a05 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   13a05:	55                   	push   %rbp
   13a06:	48 89 e5             	mov    %rsp,%rbp
   13a09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   13a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a15:	48 8b 10             	mov    (%rax),%rdx
   13a18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13a1c:	48 8b 00             	mov    (%rax),%rax
   13a1f:	48 39 c2             	cmp    %rax,%rdx
   13a22:	0f 94 c0             	sete   %al
   13a25:	5d                   	pop    %rbp
   13a26:	c3                   	ret
   13a27:	90                   	nop

0000000000013a28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   13a28:	55                   	push   %rbp
   13a29:	48 89 e5             	mov    %rsp,%rbp
   13a2c:	48 83 ec 20          	sub    $0x20,%rsp
   13a30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   13a34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a38:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13a3c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a40:	48 89 d6             	mov    %rdx,%rsi
   13a43:	48 89 c7             	mov    %rax,%rdi
   13a46:	e8 31 fd ff ff       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   13a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a4f:	c9                   	leave
   13a50:	c3                   	ret
   13a51:	90                   	nop

0000000000013a52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
   13a52:	55                   	push   %rbp
   13a53:	48 89 e5             	mov    %rsp,%rbp
   13a56:	48 83 ec 10          	sub    $0x10,%rsp
   13a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_erase(_M_begin());
   13a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a62:	48 89 c7             	mov    %rax,%rdi
   13a65:	e8 06 ae ff ff       	call   e870 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
   13a6a:	48 89 c2             	mov    %rax,%rdx
   13a6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a71:	48 89 d6             	mov    %rdx,%rsi
   13a74:	48 89 c7             	mov    %rax,%rdi
   13a77:	e8 8e ad ff ff       	call   e80a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	_M_impl._M_reset();
   13a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a80:	48 83 c0 08          	add    $0x8,%rax
   13a84:	48 89 c7             	mov    %rax,%rdi
   13a87:	e8 24 82 ff ff       	call   bcb0 <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
   13a8c:	90                   	nop
   13a8d:	c9                   	leave
   13a8e:	c3                   	ret

0000000000013a8f <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   13a8f:	55                   	push   %rbp
   13a90:	48 89 e5             	mov    %rsp,%rbp
   13a93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
   13a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a9f:	48 8b 10             	mov    (%rax),%rdx
   13aa2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13aa6:	48 8b 00             	mov    (%rax),%rax
   13aa9:	48 39 c2             	cmp    %rax,%rdx
   13aac:	0f 95 c0             	setne  %al
   13aaf:	5d                   	pop    %rbp
   13ab0:	c3                   	ret
   13ab1:	90                   	nop

0000000000013ab2 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
   13ab2:	55                   	push   %rbp
   13ab3:	48 89 e5             	mov    %rsp,%rbp
   13ab6:	48 83 ec 20          	sub    $0x20,%rsp
   13aba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13abe:	89 75 e4             	mov    %esi,-0x1c(%rbp)
	_Self __tmp = *this;
   13ac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ac5:	48 8b 00             	mov    (%rax),%rax
   13ac8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   13acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ad0:	48 8b 00             	mov    (%rax),%rax
   13ad3:	48 89 c7             	mov    %rax,%rdi
   13ad6:	e8 45 0a ff ff       	call   4520 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   13adb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13adf:	48 89 02             	mov    %rax,(%rdx)
	return __tmp;
   13ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13ae6:	c9                   	leave
   13ae7:	c3                   	ret

0000000000013ae8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13ae8:	55                   	push   %rbp
   13ae9:	48 89 e5             	mov    %rsp,%rbp
   13aec:	48 83 ec 20          	sub    $0x20,%rsp
   13af0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13af4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
				 this->_M_impl._M_header));
   13af8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13afc:	48 8d 50 08          	lea    0x8(%rax),%rdx
				(const_cast<_Base_ptr>(__position._M_node),
   13b00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b04:	48 89 d6             	mov    %rdx,%rsi
   13b07:	48 89 c7             	mov    %rax,%rdi
   13b0a:	e8 11 07 ff ff       	call   4220 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
   13b0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_drop_node(__y);
   13b13:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13b17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b1b:	48 89 d6             	mov    %rdx,%rsi
   13b1e:	48 89 c7             	mov    %rax,%rdi
   13b21:	e8 f4 d9 ff ff       	call   1151a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
      --_M_impl._M_node_count;
   13b26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b2a:	48 8b 40 28          	mov    0x28(%rax),%rax
   13b2e:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   13b32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b36:	48 89 50 28          	mov    %rdx,0x28(%rax)
    }
   13b3a:	90                   	nop
   13b3b:	c9                   	leave
   13b3c:	c3                   	ret
   13b3d:	90                   	nop

0000000000013b3e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13b3e:	55                   	push   %rbp
   13b3f:	48 89 e5             	mov    %rsp,%rbp
   13b42:	48 83 ec 20          	sub    $0x20,%rsp
   13b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13b52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b56:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13b5d:	00 
   13b5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b62:	48 89 d6             	mov    %rdx,%rsi
   13b65:	48 89 c7             	mov    %rax,%rdi
   13b68:	e8 c3 08 ff ff       	call   4430 <_ZdlPvm@plt>
      }
   13b6d:	c9                   	leave
   13b6e:	c3                   	ret

0000000000013b6f <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
   13b6f:	55                   	push   %rbp
   13b70:	48 89 e5             	mov    %rsp,%rbp
   13b73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b7b:	90                   	nop
   13b7c:	5d                   	pop    %rbp
   13b7d:	c3                   	ret

0000000000013b7e <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13b7e:	55                   	push   %rbp
   13b7f:	48 89 e5             	mov    %rsp,%rbp
   13b82:	48 83 ec 20          	sub    $0x20,%rsp
   13b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13b92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b96:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   13b9d:	00 
   13b9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ba2:	48 89 d6             	mov    %rdx,%rsi
   13ba5:	48 89 c7             	mov    %rax,%rdi
   13ba8:	e8 83 08 ff ff       	call   4430 <_ZdlPvm@plt>
      }
   13bad:	c9                   	leave
   13bae:	c3                   	ret

0000000000013baf <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
   13baf:	55                   	push   %rbp
   13bb0:	48 89 e5             	mov    %rsp,%rbp
   13bb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13bb7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13bbb:	90                   	nop
   13bbc:	5d                   	pop    %rbp
   13bbd:	c3                   	ret

0000000000013bbe <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   13bbe:	55                   	push   %rbp
   13bbf:	48 89 e5             	mov    %rsp,%rbp
   13bc2:	48 83 ec 20          	sub    $0x20,%rsp
   13bc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   13bca:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   13bd1:	ff ff 0f 
   13bd4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   13bd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bdc:	48 89 c7             	mov    %rax,%rdi
   13bdf:	e8 d4 18 00 00       	call   154b8 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
   13be4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   13be8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   13bec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13bf0:	48 89 d6             	mov    %rdx,%rsi
   13bf3:	48 89 c7             	mov    %rax,%rdi
   13bf6:	e8 2a 2a ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   13bfb:	48 8b 00             	mov    (%rax),%rax
      }
   13bfe:	c9                   	leave
   13bff:	c3                   	ret

0000000000013c00 <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   13c00:	55                   	push   %rbp
   13c01:	48 89 e5             	mov    %rsp,%rbp
   13c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c0c:	5d                   	pop    %rbp
   13c0d:	c3                   	ret

0000000000013c0e <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13c0e:	55                   	push   %rbp
   13c0f:	48 89 e5             	mov    %rsp,%rbp
   13c12:	48 83 ec 20          	sub    $0x20,%rsp
   13c16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c1a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13c1e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13c22:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13c26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c2a:	48 89 d6             	mov    %rdx,%rsi
   13c2d:	48 89 c7             	mov    %rax,%rdi
   13c30:	e8 9d 18 00 00       	call   154d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
   13c35:	c9                   	leave
   13c36:	c3                   	ret

0000000000013c37 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   13c37:	55                   	push   %rbp
   13c38:	48 89 e5             	mov    %rsp,%rbp
   13c3b:	48 83 ec 10          	sub    $0x10,%rsp
   13c3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   13c47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c4f:	ba 00 00 00 00       	mov    $0x0,%edx
   13c54:	48 89 ce             	mov    %rcx,%rsi
   13c57:	48 89 c7             	mov    %rax,%rdi
   13c5a:	e8 d1 18 00 00       	call   15530 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
   13c5f:	c9                   	leave
   13c60:	c3                   	ret

0000000000013c61 <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   13c61:	55                   	push   %rbp
   13c62:	48 89 e5             	mov    %rsp,%rbp
   13c65:	41 54                	push   %r12
   13c67:	53                   	push   %rbx
   13c68:	48 83 ec 20          	sub    $0x20,%rsp
   13c6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c70:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13c74:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13c78:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   13c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c80:	48 89 c7             	mov    %rax,%rdi
   13c83:	e8 09 19 00 00       	call   15591 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
   13c88:	49 89 c4             	mov    %rax,%r12
   13c8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c8f:	48 89 c7             	mov    %rax,%rdi
   13c92:	e8 fa 18 00 00       	call   15591 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
   13c97:	48 89 c3             	mov    %rax,%rbx
   13c9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c9e:	48 89 c7             	mov    %rax,%rdi
   13ca1:	e8 eb 18 00 00       	call   15591 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
   13ca6:	48 89 c7             	mov    %rax,%rdi
   13ca9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13cad:	48 89 c1             	mov    %rax,%rcx
   13cb0:	4c 89 e2             	mov    %r12,%rdx
   13cb3:	48 89 de             	mov    %rbx,%rsi
   13cb6:	e8 e4 18 00 00       	call   1559f <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   13cbb:	48 83 c4 20          	add    $0x20,%rsp
   13cbf:	5b                   	pop    %rbx
   13cc0:	41 5c                	pop    %r12
   13cc2:	5d                   	pop    %rbp
   13cc3:	c3                   	ret

0000000000013cc4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   13cc4:	55                   	push   %rbp
   13cc5:	48 89 e5             	mov    %rsp,%rbp
   13cc8:	48 83 ec 20          	sub    $0x20,%rsp
   13ccc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   13cd0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   13cd7:	ff ff 1f 
   13cda:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   13cde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ce2:	48 89 c7             	mov    %rax,%rdi
   13ce5:	e8 18 19 00 00       	call   15602 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
   13cea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   13cee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   13cf2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13cf6:	48 89 d6             	mov    %rdx,%rsi
   13cf9:	48 89 c7             	mov    %rax,%rdi
   13cfc:	e8 24 29 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   13d01:	48 8b 00             	mov    (%rax),%rax
      }
   13d04:	c9                   	leave
   13d05:	c3                   	ret

0000000000013d06 <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   13d06:	55                   	push   %rbp
   13d07:	48 89 e5             	mov    %rsp,%rbp
   13d0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d12:	5d                   	pop    %rbp
   13d13:	c3                   	ret

0000000000013d14 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13d14:	55                   	push   %rbp
   13d15:	48 89 e5             	mov    %rsp,%rbp
   13d18:	48 83 ec 20          	sub    $0x20,%rsp
   13d1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13d24:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13d28:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13d2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d30:	48 89 d6             	mov    %rdx,%rsi
   13d33:	48 89 c7             	mov    %rax,%rdi
   13d36:	e8 e1 18 00 00       	call   1561c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
   13d3b:	c9                   	leave
   13d3c:	c3                   	ret

0000000000013d3d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   13d3d:	55                   	push   %rbp
   13d3e:	48 89 e5             	mov    %rsp,%rbp
   13d41:	48 83 ec 10          	sub    $0x10,%rsp
   13d45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   13d4d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d55:	ba 00 00 00 00       	mov    $0x0,%edx
   13d5a:	48 89 ce             	mov    %rcx,%rsi
   13d5d:	48 89 c7             	mov    %rax,%rdi
   13d60:	e8 15 19 00 00       	call   1567a <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
   13d65:	c9                   	leave
   13d66:	c3                   	ret

0000000000013d67 <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   13d67:	55                   	push   %rbp
   13d68:	48 89 e5             	mov    %rsp,%rbp
   13d6b:	41 54                	push   %r12
   13d6d:	53                   	push   %rbx
   13d6e:	48 83 ec 20          	sub    $0x20,%rsp
   13d72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13d7a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13d7e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   13d82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d86:	48 89 c7             	mov    %rax,%rdi
   13d89:	e8 4d 19 00 00       	call   156db <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
   13d8e:	49 89 c4             	mov    %rax,%r12
   13d91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13d95:	48 89 c7             	mov    %rax,%rdi
   13d98:	e8 3e 19 00 00       	call   156db <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
   13d9d:	48 89 c3             	mov    %rax,%rbx
   13da0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13da4:	48 89 c7             	mov    %rax,%rdi
   13da7:	e8 2f 19 00 00       	call   156db <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
   13dac:	48 89 c7             	mov    %rax,%rdi
   13daf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13db3:	48 89 c1             	mov    %rax,%rcx
   13db6:	4c 89 e2             	mov    %r12,%rdx
   13db9:	48 89 de             	mov    %rbx,%rsi
   13dbc:	e8 28 19 00 00       	call   156e9 <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
   13dc1:	48 83 c4 20          	add    $0x20,%rsp
   13dc5:	5b                   	pop    %rbx
   13dc6:	41 5c                	pop    %r12
   13dc8:	5d                   	pop    %rbp
   13dc9:	c3                   	ret

0000000000013dca <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   13dca:	55                   	push   %rbp
   13dcb:	48 89 e5             	mov    %rsp,%rbp
   13dce:	48 83 ec 10          	sub    $0x10,%rsp
   13dd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   13dd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dda:	48 89 c7             	mov    %rax,%rdi
   13ddd:	e8 6a 19 00 00       	call   1574c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
   13de2:	c9                   	leave
   13de3:	c3                   	ret

0000000000013de4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   13de4:	55                   	push   %rbp
   13de5:	48 89 e5             	mov    %rsp,%rbp
   13de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13dec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13df0:	90                   	nop
   13df1:	5d                   	pop    %rbp
   13df2:	c3                   	ret
   13df3:	90                   	nop

0000000000013df4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   13df4:	55                   	push   %rbp
   13df5:	48 89 e5             	mov    %rsp,%rbp
   13df8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13dfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e00:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e0b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13e12:	00 
   13e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e17:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13e1e:	00 
	{ }
   13e1f:	90                   	nop
   13e20:	5d                   	pop    %rbp
   13e21:	c3                   	ret

0000000000013e22 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13e22:	55                   	push   %rbp
   13e23:	48 89 e5             	mov    %rsp,%rbp
   13e26:	48 83 ec 10          	sub    $0x10,%rsp
   13e2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13e32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13e37:	74 15                	je     13e4e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
   13e39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e3d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13e41:	48 89 d6             	mov    %rdx,%rsi
   13e44:	48 89 c7             	mov    %rax,%rdi
   13e47:	e8 1a 19 00 00       	call   15766 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
   13e4c:	eb 05                	jmp    13e53 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
   13e4e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13e53:	c9                   	leave
   13e54:	c3                   	ret

0000000000013e55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13e55:	55                   	push   %rbp
   13e56:	48 89 e5             	mov    %rsp,%rbp
   13e59:	48 83 ec 20          	sub    $0x20,%rsp
   13e5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e65:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13e69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13e6d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13e71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e75:	48 89 ce             	mov    %rcx,%rsi
   13e78:	48 89 c7             	mov    %rax,%rdi
   13e7b:	e8 10 19 00 00       	call   15790 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
   13e80:	90                   	nop
   13e81:	c9                   	leave
   13e82:	c3                   	ret

0000000000013e83 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13e83:	55                   	push   %rbp
   13e84:	48 89 e5             	mov    %rsp,%rbp
   13e87:	48 83 ec 20          	sub    $0x20,%rsp
   13e8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13e8f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13e93:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13e97:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13e9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e9f:	48 89 d6             	mov    %rdx,%rsi
   13ea2:	48 89 c7             	mov    %rax,%rdi
   13ea5:	e8 17 19 00 00       	call   157c1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
   13eaa:	c9                   	leave
   13eab:	c3                   	ret

0000000000013eac <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
   13eac:	55                   	push   %rbp
   13ead:	48 89 e5             	mov    %rsp,%rbp
   13eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13eb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13eb8:	90                   	nop
   13eb9:	5d                   	pop    %rbp
   13eba:	c3                   	ret

0000000000013ebb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   13ebb:	55                   	push   %rbp
   13ebc:	48 89 e5             	mov    %rsp,%rbp
   13ebf:	48 83 ec 10          	sub    $0x10,%rsp
   13ec3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   13ec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ecb:	48 89 c7             	mov    %rax,%rdi
   13ece:	e8 4b 19 00 00       	call   1581e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
   13ed3:	c9                   	leave
   13ed4:	c3                   	ret
   13ed5:	90                   	nop

0000000000013ed6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
   13ed6:	55                   	push   %rbp
   13ed7:	48 89 e5             	mov    %rsp,%rbp
   13eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13ee2:	90                   	nop
   13ee3:	5d                   	pop    %rbp
   13ee4:	c3                   	ret
   13ee5:	90                   	nop

0000000000013ee6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   13ee6:	55                   	push   %rbp
   13ee7:	48 89 e5             	mov    %rsp,%rbp
   13eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ef2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13efd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13f04:	00 
   13f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f09:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13f10:	00 
	{ }
   13f11:	90                   	nop
   13f12:	5d                   	pop    %rbp
   13f13:	c3                   	ret

0000000000013f14 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13f14:	55                   	push   %rbp
   13f15:	48 89 e5             	mov    %rsp,%rbp
   13f18:	48 83 ec 10          	sub    $0x10,%rsp
   13f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13f24:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13f29:	74 15                	je     13f40 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
   13f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f33:	48 89 d6             	mov    %rdx,%rsi
   13f36:	48 89 c7             	mov    %rax,%rdi
   13f39:	e8 fa 18 00 00       	call   15838 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
   13f3e:	eb 05                	jmp    13f45 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
   13f40:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13f45:	c9                   	leave
   13f46:	c3                   	ret

0000000000013f47 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13f47:	55                   	push   %rbp
   13f48:	48 89 e5             	mov    %rsp,%rbp
   13f4b:	48 83 ec 20          	sub    $0x20,%rsp
   13f4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13f57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13f5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13f5f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13f63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f67:	48 89 ce             	mov    %rcx,%rsi
   13f6a:	48 89 c7             	mov    %rax,%rdi
   13f6d:	e8 f0 18 00 00       	call   15862 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
   13f72:	90                   	nop
   13f73:	c9                   	leave
   13f74:	c3                   	ret

0000000000013f75 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13f75:	55                   	push   %rbp
   13f76:	48 89 e5             	mov    %rsp,%rbp
   13f79:	48 83 ec 20          	sub    $0x20,%rsp
   13f7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13f81:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13f85:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13f89:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13f8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f91:	48 89 d6             	mov    %rdx,%rsi
   13f94:	48 89 c7             	mov    %rax,%rdi
   13f97:	e8 ff 18 00 00       	call   1589b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
   13f9c:	c9                   	leave
   13f9d:	c3                   	ret

0000000000013f9e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
   13f9e:	55                   	push   %rbp
   13f9f:	48 89 e5             	mov    %rsp,%rbp
   13fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13faa:	90                   	nop
   13fab:	5d                   	pop    %rbp
   13fac:	c3                   	ret

0000000000013fad <_ZSt11__addressofIjEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   13fad:	55                   	push   %rbp
   13fae:	48 89 e5             	mov    %rsp,%rbp
   13fb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   13fb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fb9:	5d                   	pop    %rbp
   13fba:	c3                   	ret

0000000000013fbb <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   13fbb:	55                   	push   %rbp
   13fbc:	48 89 e5             	mov    %rsp,%rbp
   13fbf:	53                   	push   %rbx
   13fc0:	48 83 ec 18          	sub    $0x18,%rsp
   13fc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13fc8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   13fcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fd0:	48 89 c6             	mov    %rax,%rsi
   13fd3:	bf 04 00 00 00       	mov    $0x4,%edi
   13fd8:	e8 3a 7c ff ff       	call   bc17 <_ZnwmPv>
   13fdd:	48 89 c3             	mov    %rax,%rbx
   13fe0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13fe4:	48 89 c7             	mov    %rax,%rdi
   13fe7:	e8 7e b4 ff ff       	call   f46a <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
   13fec:	8b 00                	mov    (%rax),%eax
   13fee:	89 03                	mov    %eax,(%rbx)
    }
   13ff0:	90                   	nop
   13ff1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13ff5:	c9                   	leave
   13ff6:	c3                   	ret
   13ff7:	90                   	nop

0000000000013ff8 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13ff8:	55                   	push   %rbp
   13ff9:	48 89 e5             	mov    %rsp,%rbp
   13ffc:	48 83 ec 20          	sub    $0x20,%rsp
   14000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14008:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1400c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14010:	48 89 d0             	mov    %rdx,%rax
   14013:	48 c1 e0 02          	shl    $0x2,%rax
   14017:	48 01 d0             	add    %rdx,%rax
   1401a:	48 c1 e0 03          	shl    $0x3,%rax
   1401e:	48 89 c2             	mov    %rax,%rdx
   14021:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14025:	48 89 d6             	mov    %rdx,%rsi
   14028:	48 89 c7             	mov    %rax,%rdi
   1402b:	e8 00 04 ff ff       	call   4430 <_ZdlPvm@plt>
      }
   14030:	c9                   	leave
   14031:	c3                   	ret

0000000000014032 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   14032:	55                   	push   %rbp
   14033:	48 89 e5             	mov    %rsp,%rbp
   14036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1403a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1403e:	90                   	nop
   1403f:	5d                   	pop    %rbp
   14040:	c3                   	ret
   14041:	90                   	nop

0000000000014042 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14042:	55                   	push   %rbp
   14043:	48 89 e5             	mov    %rsp,%rbp
   14046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1404a:	90                   	nop
   1404b:	5d                   	pop    %rbp
   1404c:	c3                   	ret

000000000001404d <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1404d:	55                   	push   %rbp
   1404e:	48 89 e5             	mov    %rsp,%rbp
   14051:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   14055:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14059:	5d                   	pop    %rbp
   1405a:	c3                   	ret
   1405b:	90                   	nop

000000000001405c <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1405c:	55                   	push   %rbp
   1405d:	48 89 e5             	mov    %rsp,%rbp
   14060:	48 83 ec 10          	sub    $0x10,%rsp
   14064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14068:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1406c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14074:	48 89 d6             	mov    %rdx,%rsi
   14077:	48 89 c7             	mov    %rax,%rdi
   1407a:	e8 79 18 00 00       	call   158f8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>
   1407f:	90                   	nop
   14080:	c9                   	leave
   14081:	c3                   	ret

0000000000014082 <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
   14082:	55                   	push   %rbp
   14083:	48 89 e5             	mov    %rsp,%rbp
   14086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1408a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { }
   1408e:	90                   	nop
   1408f:	5d                   	pop    %rbp
   14090:	c3                   	ret
   14091:	90                   	nop

0000000000014092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   14092:	55                   	push   %rbp
   14093:	48 89 e5             	mov    %rsp,%rbp
   14096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1409a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1409e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   140a6:	48 89 10             	mov    %rdx,(%rax)
   140a9:	90                   	nop
   140aa:	5d                   	pop    %rbp
   140ab:	c3                   	ret

00000000000140ac <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   140ac:	55                   	push   %rbp
   140ad:	48 89 e5             	mov    %rsp,%rbp
   140b0:	53                   	push   %rbx
   140b1:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   140b8:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   140bf:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   140c6:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   140cd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   140d4:	48 89 c7             	mov    %rax,%rdi
   140d7:	e8 2c 18 00 00       	call   15908 <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>
   140dc:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   140e3:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   140ea:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   140f1:	48 89 c7             	mov    %rax,%rdi
   140f4:	e8 37 18 00 00       	call   15930 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   140f9:	48 39 c3             	cmp    %rax,%rbx
   140fc:	0f 94 c0             	sete   %al
   140ff:	84 c0                	test   %al,%al
   14101:	0f 84 c8 00 00 00    	je     141cf <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x123>
	  if (size() > 0
   14107:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1410e:	48 89 c7             	mov    %rax,%rdi
   14111:	e8 2c 18 00 00       	call   15942 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   14116:	48 85 c0             	test   %rax,%rax
   14119:	74 44                	je     1415f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
   1411b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14122:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14129:	48 89 c7             	mov    %rax,%rdi
   1412c:	e8 23 18 00 00       	call   15954 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   14131:	48 8b 00             	mov    (%rax),%rax
   14134:	48 89 c7             	mov    %rax,%rdi
   14137:	e8 2a 18 00 00       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   1413c:	48 89 c1             	mov    %rax,%rcx
   1413f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14146:	48 89 c2             	mov    %rax,%rdx
   14149:	48 89 ce             	mov    %rcx,%rsi
   1414c:	48 89 df             	mov    %rbx,%rdi
   1414f:	e8 2c 18 00 00       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   14154:	84 c0                	test   %al,%al
   14156:	74 07                	je     1415f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
   14158:	b8 01 00 00 00       	mov    $0x1,%eax
   1415d:	eb 05                	jmp    14164 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb8>
   1415f:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   14164:	84 c0                	test   %al,%al
   14166:	74 49                	je     141b1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x105>
	    return _Res(0, _M_rightmost());
   14168:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1416f:	48 89 c7             	mov    %rax,%rdi
   14172:	e8 dd 17 00 00       	call   15954 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   14177:	48 89 c2             	mov    %rax,%rdx
   1417a:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   14181:	00 00 00 00 
   14185:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   1418c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   14193:	48 89 ce             	mov    %rcx,%rsi
   14196:	48 89 c7             	mov    %rax,%rdi
   14199:	e8 32 11 00 00       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1419e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   141a5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   141ac:	e9 43 03 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   141b1:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   141b8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   141bf:	48 89 d6             	mov    %rdx,%rsi
   141c2:	48 89 c7             	mov    %rax,%rdi
   141c5:	e8 da 17 00 00       	call   159a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   141ca:	e9 25 03 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   141cf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   141d6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   141dd:	48 89 c7             	mov    %rax,%rdi
   141e0:	e8 81 17 00 00       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   141e5:	48 89 c2             	mov    %rax,%rdx
   141e8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   141ef:	48 89 c6             	mov    %rax,%rsi
   141f2:	48 89 df             	mov    %rbx,%rdi
   141f5:	e8 86 17 00 00       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   141fa:	84 c0                	test   %al,%al
   141fc:	0f 84 66 01 00 00    	je     14368 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x2bc>
	  iterator __before = __pos;
   14202:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14209:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   14210:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14217:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1421e:	48 89 c7             	mov    %rax,%rdi
   14221:	e8 f4 18 00 00       	call   15b1a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
   14226:	48 8b 00             	mov    (%rax),%rax
   14229:	48 39 c3             	cmp    %rax,%rbx
   1422c:	0f 94 c0             	sete   %al
   1422f:	84 c0                	test   %al,%al
   14231:	74 4c                	je     1427f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   14233:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1423a:	48 89 c7             	mov    %rax,%rdi
   1423d:	e8 d8 18 00 00       	call   15b1a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
   14242:	48 89 c3             	mov    %rax,%rbx
   14245:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1424c:	48 89 c7             	mov    %rax,%rdi
   1424f:	e8 c6 18 00 00       	call   15b1a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
   14254:	48 89 c1             	mov    %rax,%rcx
   14257:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1425e:	48 89 da             	mov    %rbx,%rdx
   14261:	48 89 ce             	mov    %rcx,%rsi
   14264:	48 89 c7             	mov    %rax,%rdi
   14267:	e8 c0 18 00 00       	call   15b2c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1426c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   14273:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   1427a:	e9 75 02 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   1427f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14286:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   1428d:	48 89 c7             	mov    %rax,%rdi
   14290:	e8 db 18 00 00       	call   15b70 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
   14295:	48 8b 00             	mov    (%rax),%rax
   14298:	48 89 c7             	mov    %rax,%rdi
   1429b:	e8 c6 16 00 00       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   142a0:	48 89 c1             	mov    %rax,%rcx
   142a3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   142aa:	48 89 c2             	mov    %rax,%rdx
   142ad:	48 89 ce             	mov    %rcx,%rsi
   142b0:	48 89 df             	mov    %rbx,%rdi
   142b3:	e8 c8 16 00 00       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   142b8:	84 c0                	test   %al,%al
   142ba:	0f 84 8a 00 00 00    	je     1434a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x29e>
	      if (_S_right(__before._M_node) == 0)
   142c0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   142c7:	48 89 c7             	mov    %rax,%rdi
   142ca:	e8 34 de ff ff       	call   12103 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   142cf:	48 85 c0             	test   %rax,%rax
   142d2:	0f 94 c0             	sete   %al
   142d5:	84 c0                	test   %al,%al
   142d7:	74 3e                	je     14317 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x26b>
		return _Res(0, __before._M_node);
   142d9:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   142e0:	00 00 00 00 
   142e4:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   142eb:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   142f2:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   142f9:	48 89 ce             	mov    %rcx,%rsi
   142fc:	48 89 c7             	mov    %rax,%rdi
   142ff:	e8 cc 0f 00 00       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14304:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1430b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   14312:	e9 dd 01 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   14317:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1431e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   14325:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1432c:	48 89 ce             	mov    %rcx,%rsi
   1432f:	48 89 c7             	mov    %rax,%rdi
   14332:	e8 f5 17 00 00       	call   15b2c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   14337:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   1433e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14345:	e9 aa 01 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   1434a:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   14351:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14358:	48 89 d6             	mov    %rdx,%rsi
   1435b:	48 89 c7             	mov    %rax,%rdi
   1435e:	e8 41 16 00 00       	call   159a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   14363:	e9 8c 01 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   14368:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1436f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14376:	48 89 c7             	mov    %rax,%rdi
   14379:	e8 e8 15 00 00       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   1437e:	48 89 c1             	mov    %rax,%rcx
   14381:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14388:	48 89 c2             	mov    %rax,%rdx
   1438b:	48 89 ce             	mov    %rcx,%rsi
   1438e:	48 89 df             	mov    %rbx,%rdi
   14391:	e8 ea 15 00 00       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   14396:	84 c0                	test   %al,%al
   14398:	0f 84 2c 01 00 00    	je     144ca <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x41e>
	  iterator __after = __pos;
   1439e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   143a5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   143ac:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   143b3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   143ba:	48 89 c7             	mov    %rax,%rdi
   143bd:	e8 92 15 00 00       	call   15954 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   143c2:	48 8b 00             	mov    (%rax),%rax
   143c5:	48 39 c3             	cmp    %rax,%rbx
   143c8:	0f 94 c0             	sete   %al
   143cb:	84 c0                	test   %al,%al
   143cd:	74 3a                	je     14409 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x35d>
	    return _Res(0, _M_rightmost());
   143cf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   143d6:	48 89 c7             	mov    %rax,%rdi
   143d9:	e8 76 15 00 00       	call   15954 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   143de:	48 89 c2             	mov    %rax,%rdx
   143e1:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   143e8:	00 
   143e9:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   143ed:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   143f1:	48 89 ce             	mov    %rcx,%rsi
   143f4:	48 89 c7             	mov    %rax,%rdi
   143f7:	e8 d4 0e 00 00       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   143fc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14400:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   14404:	e9 eb 00 00 00       	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   14409:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14410:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   14417:	48 89 c7             	mov    %rax,%rdi
   1441a:	e8 79 17 00 00       	call   15b98 <_ZNSt17_Rb_tree_iteratorIjEppEv>
   1441f:	48 8b 00             	mov    (%rax),%rax
   14422:	48 89 c7             	mov    %rax,%rdi
   14425:	e8 3c 15 00 00       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   1442a:	48 89 c2             	mov    %rax,%rdx
   1442d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14434:	48 89 c6             	mov    %rax,%rsi
   14437:	48 89 df             	mov    %rbx,%rdi
   1443a:	e8 41 15 00 00       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   1443f:	84 c0                	test   %al,%al
   14441:	74 6c                	je     144af <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x403>
	      if (_S_right(__pos._M_node) == 0)
   14443:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1444a:	48 89 c7             	mov    %rax,%rdi
   1444d:	e8 b1 dc ff ff       	call   12103 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   14452:	48 85 c0             	test   %rax,%rax
   14455:	0f 94 c0             	sete   %al
   14458:	84 c0                	test   %al,%al
   1445a:	74 2c                	je     14488 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x3dc>
		return _Res(0, __pos._M_node);
   1445c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   14463:	00 
   14464:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1446b:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   1446f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14473:	48 89 ce             	mov    %rcx,%rsi
   14476:	48 89 c7             	mov    %rax,%rdi
   14479:	e8 52 0e 00 00       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1447e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14482:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14486:	eb 6c                	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__after._M_node, __after._M_node);
   14488:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   1448f:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   14496:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1449a:	48 89 ce             	mov    %rcx,%rsi
   1449d:	48 89 c7             	mov    %rax,%rdi
   144a0:	e8 87 16 00 00       	call   15b2c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   144a5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   144a9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   144ad:	eb 45                	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   144af:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   144b6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   144bd:	48 89 d6             	mov    %rdx,%rsi
   144c0:	48 89 c7             	mov    %rax,%rdi
   144c3:	e8 dc 14 00 00       	call   159a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   144c8:	eb 2a                	jmp    144f4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	return _Res(__pos._M_node, 0);
   144ca:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   144d1:	00 
   144d2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   144d6:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   144dd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   144e1:	48 89 ce             	mov    %rcx,%rsi
   144e4:	48 89 c7             	mov    %rax,%rdi
   144e7:	e8 e4 0d 00 00       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   144ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144f0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   144f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   144f8:	c9                   	leave
   144f9:	c3                   	ret

00000000000144fa <_ZNKSt9_IdentityIjEclERKj>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
   144fa:	55                   	push   %rbp
   144fb:	48 89 e5             	mov    %rsp,%rbp
   144fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14502:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
   14506:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1450a:	5d                   	pop    %rbp
   1450b:	c3                   	ret

000000000001450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1450c:	55                   	push   %rbp
   1450d:	48 89 e5             	mov    %rsp,%rbp
   14510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14518:	5d                   	pop    %rbp
   14519:	c3                   	ret

000000000001451a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1451a:	55                   	push   %rbp
   1451b:	48 89 e5             	mov    %rsp,%rbp
   1451e:	41 54                	push   %r12
   14520:	53                   	push   %rbx
   14521:	48 83 ec 50          	sub    $0x50,%rsp
   14525:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14529:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1452d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   14531:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   14535:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
   14539:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1453e:	75 4a                	jne    1458a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
	bool __insert_left = (__x != 0 || __p == _M_end()
   14540:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14544:	48 89 c7             	mov    %rax,%rdi
   14547:	e8 e4 13 00 00       	call   15930 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   1454c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   14550:	74 38                	je     1458a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
   14552:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   14556:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1455a:	48 89 c7             	mov    %rax,%rdi
   1455d:	e8 04 14 00 00       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14562:	49 89 c4             	mov    %rax,%r12
   14565:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14569:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   1456d:	48 89 d6             	mov    %rdx,%rsi
   14570:	48 89 c7             	mov    %rax,%rdi
   14573:	e8 82 ff ff ff       	call   144fa <_ZNKSt9_IdentityIjEclERKj>
   14578:	4c 89 e2             	mov    %r12,%rdx
   1457b:	48 89 c6             	mov    %rax,%rsi
   1457e:	48 89 df             	mov    %rbx,%rdi
   14581:	e8 fa 13 00 00       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   14586:	84 c0                	test   %al,%al
   14588:	74 07                	je     14591 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x77>
   1458a:	b8 01 00 00 00       	mov    $0x1,%eax
   1458f:	eb 05                	jmp    14596 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x7c>
   14591:	b8 00 00 00 00       	mov    $0x0,%eax
	bool __insert_left = (__x != 0 || __p == _M_end()
   14596:	88 45 ef             	mov    %al,-0x11(%rbp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
   14599:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1459d:	48 89 c7             	mov    %rax,%rdi
   145a0:	e8 67 ff ff ff       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   145a5:	48 89 c2             	mov    %rax,%rdx
   145a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   145ac:	48 89 d6             	mov    %rdx,%rsi
   145af:	48 89 c7             	mov    %rax,%rdi
   145b2:	e8 09 16 00 00       	call   15bc0 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>
   145b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
				      this->_M_impl._M_header);
   145bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145bf:	48 8d 48 08          	lea    0x8(%rax),%rcx
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   145c3:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   145c7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   145cb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   145cf:	89 c7                	mov    %eax,%edi
   145d1:	e8 8a fa fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
	++_M_impl._M_node_count;
   145d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145da:	48 8b 40 28          	mov    0x28(%rax),%rax
   145de:	48 8d 50 01          	lea    0x1(%rax),%rdx
   145e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145e6:	48 89 50 28          	mov    %rdx,0x28(%rax)
	return iterator(__z);
   145ea:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   145ee:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   145f2:	48 89 d6             	mov    %rdx,%rsi
   145f5:	48 89 c7             	mov    %rax,%rdi
   145f8:	e8 95 fa ff ff       	call   14092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   145fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   14601:	48 83 c4 50          	add    $0x50,%rsp
   14605:	5b                   	pop    %rbx
   14606:	41 5c                	pop    %r12
   14608:	5d                   	pop    %rbp
   14609:	c3                   	ret

000000000001460a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1460a:	55                   	push   %rbp
   1460b:	48 89 e5             	mov    %rsp,%rbp
   1460e:	53                   	push   %rbx
   1460f:	48 83 ec 18          	sub    $0x18,%rsp
   14613:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14617:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   1461b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1461f:	48 89 c7             	mov    %rax,%rdi
   14622:	e8 dd 15 00 00       	call   15c04 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   14627:	48 89 c3             	mov    %rax,%rbx
   1462a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1462e:	48 89 c7             	mov    %rax,%rdi
   14631:	e8 c0 15 00 00       	call   15bf6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   14636:	48 89 de             	mov    %rbx,%rsi
   14639:	48 89 c7             	mov    %rax,%rdi
   1463c:	e8 e1 15 00 00       	call   15c22 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>
      }
   14641:	90                   	nop
   14642:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14646:	c9                   	leave
   14647:	c3                   	ret

0000000000014648 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14648:	55                   	push   %rbp
   14649:	48 89 e5             	mov    %rsp,%rbp
   1464c:	48 83 ec 10          	sub    $0x10,%rsp
   14650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   14658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1465c:	48 89 c7             	mov    %rax,%rdi
   1465f:	e8 92 15 00 00       	call   15bf6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   14664:	48 89 c1             	mov    %rax,%rcx
   14667:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1466b:	ba 01 00 00 00       	mov    $0x1,%edx
   14670:	48 89 c6             	mov    %rax,%rsi
   14673:	48 89 cf             	mov    %rcx,%rdi
   14676:	e8 cd 15 00 00       	call   15c48 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>
   1467b:	90                   	nop
   1467c:	c9                   	leave
   1467d:	c3                   	ret

000000000001467e <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() const noexcept
   1467e:	55                   	push   %rbp
   1467f:	48 89 e5             	mov    %rsp,%rbp
   14682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   14686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1468a:	5d                   	pop    %rbp
   1468b:	c3                   	ret

000000000001468c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1468c:	55                   	push   %rbp
   1468d:	48 89 e5             	mov    %rsp,%rbp
   14690:	48 83 ec 10          	sub    $0x10,%rsp
   14694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1469c:	48 89 c7             	mov    %rax,%rdi
   1469f:	e8 14 16 00 00       	call   15cb8 <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   146a4:	48 89 c7             	mov    %rax,%rdi
   146a7:	e8 ca 15 00 00       	call   15c76 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   146ac:	c9                   	leave
   146ad:	c3                   	ret

00000000000146ae <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   146ae:	55                   	push   %rbp
   146af:	48 89 e5             	mov    %rsp,%rbp
   146b2:	48 83 ec 10          	sub    $0x10,%rsp
   146b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   146be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   146c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146c6:	ba 00 00 00 00       	mov    $0x0,%edx
   146cb:	48 89 ce             	mov    %rcx,%rsi
   146ce:	48 89 c7             	mov    %rax,%rdi
   146d1:	e8 f0 15 00 00       	call   15cc6 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>
   146d6:	c9                   	leave
   146d7:	c3                   	ret

00000000000146d8 <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   146d8:	55                   	push   %rbp
   146d9:	48 89 e5             	mov    %rsp,%rbp
   146dc:	41 54                	push   %r12
   146de:	53                   	push   %rbx
   146df:	48 83 ec 20          	sub    $0x20,%rsp
   146e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   146eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   146ef:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   146f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146f7:	48 89 c7             	mov    %rax,%rdi
   146fa:	e8 32 16 00 00       	call   15d31 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   146ff:	49 89 c4             	mov    %rax,%r12
   14702:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14706:	48 89 c7             	mov    %rax,%rdi
   14709:	e8 23 16 00 00       	call   15d31 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   1470e:	48 89 c3             	mov    %rax,%rbx
   14711:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14715:	48 89 c7             	mov    %rax,%rdi
   14718:	e8 14 16 00 00       	call   15d31 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   1471d:	48 89 c7             	mov    %rax,%rdi
   14720:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14724:	48 89 c1             	mov    %rax,%rcx
   14727:	4c 89 e2             	mov    %r12,%rdx
   1472a:	48 89 de             	mov    %rbx,%rsi
   1472d:	e8 0d 16 00 00       	call   15d3f <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
   14732:	48 83 c4 20          	add    $0x20,%rsp
   14736:	5b                   	pop    %rbx
   14737:	41 5c                	pop    %r12
   14739:	5d                   	pop    %rbp
   1473a:	c3                   	ret
   1473b:	90                   	nop

000000000001473c <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() const noexcept
   1473c:	55                   	push   %rbp
   1473d:	48 89 e5             	mov    %rsp,%rbp
   14740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   14744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14748:	5d                   	pop    %rbp
   14749:	c3                   	ret

000000000001474a <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1474a:	55                   	push   %rbp
   1474b:	48 89 e5             	mov    %rsp,%rbp
   1474e:	48 83 ec 20          	sub    $0x20,%rsp
   14752:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14756:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1475d:	ff ff 0f 
   14760:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14768:	48 89 c7             	mov    %rax,%rdi
   1476b:	e8 55 16 00 00       	call   15dc5 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
   14770:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14774:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14778:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1477c:	48 89 d6             	mov    %rdx,%rsi
   1477f:	48 89 c7             	mov    %rax,%rdi
   14782:	e8 9e 1e ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   14787:	48 8b 00             	mov    (%rax),%rax
      }
   1478a:	c9                   	leave
   1478b:	c3                   	ret

000000000001478c <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1478c:	55                   	push   %rbp
   1478d:	48 89 e5             	mov    %rsp,%rbp
   14790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14798:	5d                   	pop    %rbp
   14799:	c3                   	ret

000000000001479a <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1479a:	55                   	push   %rbp
   1479b:	48 89 e5             	mov    %rsp,%rbp
   1479e:	48 83 ec 20          	sub    $0x20,%rsp
   147a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   147aa:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   147ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   147b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147b6:	48 89 d6             	mov    %rdx,%rsi
   147b9:	48 89 c7             	mov    %rax,%rdi
   147bc:	e8 1e 16 00 00       	call   15ddf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
   147c1:	c9                   	leave
   147c2:	c3                   	ret

00000000000147c3 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   147c3:	55                   	push   %rbp
   147c4:	48 89 e5             	mov    %rsp,%rbp
   147c7:	48 83 ec 10          	sub    $0x10,%rsp
   147cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   147d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   147d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147db:	ba 00 00 00 00       	mov    $0x0,%edx
   147e0:	48 89 ce             	mov    %rcx,%rsi
   147e3:	48 89 c7             	mov    %rax,%rdi
   147e6:	e8 51 16 00 00       	call   15e3c <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
   147eb:	c9                   	leave
   147ec:	c3                   	ret

00000000000147ed <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   147ed:	55                   	push   %rbp
   147ee:	48 89 e5             	mov    %rsp,%rbp
   147f1:	41 54                	push   %r12
   147f3:	53                   	push   %rbx
   147f4:	48 83 ec 20          	sub    $0x20,%rsp
   147f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14800:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14804:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14808:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1480c:	48 89 c7             	mov    %rax,%rdi
   1480f:	e8 89 16 00 00       	call   15e9d <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   14814:	49 89 c4             	mov    %rax,%r12
   14817:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1481b:	48 89 c7             	mov    %rax,%rdi
   1481e:	e8 7a 16 00 00       	call   15e9d <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   14823:	48 89 c3             	mov    %rax,%rbx
   14826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1482a:	48 89 c7             	mov    %rax,%rdi
   1482d:	e8 6b 16 00 00       	call   15e9d <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   14832:	48 89 c7             	mov    %rax,%rdi
   14835:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14839:	48 89 c1             	mov    %rax,%rcx
   1483c:	4c 89 e2             	mov    %r12,%rdx
   1483f:	48 89 de             	mov    %rbx,%rsi
   14842:	e8 64 16 00 00       	call   15eab <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14847:	48 83 c4 20          	add    $0x20,%rsp
   1484b:	5b                   	pop    %rbx
   1484c:	41 5c                	pop    %r12
   1484e:	5d                   	pop    %rbp
   1484f:	c3                   	ret

0000000000014850 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14850:	55                   	push   %rbp
   14851:	48 89 e5             	mov    %rsp,%rbp
   14854:	48 83 ec 20          	sub    $0x20,%rsp
   14858:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1485c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14863:	ff ff 0f 
   14866:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1486a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1486e:	48 89 c7             	mov    %rax,%rdi
   14871:	e8 98 16 00 00       	call   15f0e <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   14876:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1487a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1487e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14882:	48 89 d6             	mov    %rdx,%rsi
   14885:	48 89 c7             	mov    %rax,%rdi
   14888:	e8 98 1d ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   1488d:	48 8b 00             	mov    (%rax),%rax
      }
   14890:	c9                   	leave
   14891:	c3                   	ret

0000000000014892 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14892:	55                   	push   %rbp
   14893:	48 89 e5             	mov    %rsp,%rbp
   14896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1489a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1489e:	5d                   	pop    %rbp
   1489f:	c3                   	ret

00000000000148a0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   148a0:	55                   	push   %rbp
   148a1:	48 89 e5             	mov    %rsp,%rbp
   148a4:	48 83 ec 20          	sub    $0x20,%rsp
   148a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   148ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   148b0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   148b4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   148b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148bc:	48 89 d6             	mov    %rdx,%rsi
   148bf:	48 89 c7             	mov    %rax,%rdi
   148c2:	e8 61 16 00 00       	call   15f28 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   148c7:	c9                   	leave
   148c8:	c3                   	ret

00000000000148c9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   148c9:	55                   	push   %rbp
   148ca:	48 89 e5             	mov    %rsp,%rbp
   148cd:	48 83 ec 10          	sub    $0x10,%rsp
   148d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   148d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   148dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148e1:	ba 00 00 00 00       	mov    $0x0,%edx
   148e6:	48 89 ce             	mov    %rcx,%rsi
   148e9:	48 89 c7             	mov    %rax,%rdi
   148ec:	e8 95 16 00 00       	call   15f86 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   148f1:	c9                   	leave
   148f2:	c3                   	ret

00000000000148f3 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   148f3:	55                   	push   %rbp
   148f4:	48 89 e5             	mov    %rsp,%rbp
   148f7:	41 54                	push   %r12
   148f9:	53                   	push   %rbx
   148fa:	48 83 ec 20          	sub    $0x20,%rsp
   148fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14902:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14906:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1490a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1490e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14912:	48 89 c7             	mov    %rax,%rdi
   14915:	e8 cd 16 00 00       	call   15fe7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1491a:	49 89 c4             	mov    %rax,%r12
   1491d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14921:	48 89 c7             	mov    %rax,%rdi
   14924:	e8 be 16 00 00       	call   15fe7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14929:	48 89 c3             	mov    %rax,%rbx
   1492c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14930:	48 89 c7             	mov    %rax,%rdi
   14933:	e8 af 16 00 00       	call   15fe7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14938:	48 89 c7             	mov    %rax,%rdi
   1493b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1493f:	48 89 c1             	mov    %rax,%rcx
   14942:	4c 89 e2             	mov    %r12,%rdx
   14945:	48 89 de             	mov    %rbx,%rsi
   14948:	e8 a8 16 00 00       	call   15ff5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1494d:	48 83 c4 20          	add    $0x20,%rsp
   14951:	5b                   	pop    %rbx
   14952:	41 5c                	pop    %r12
   14954:	5d                   	pop    %rbp
   14955:	c3                   	ret

0000000000014956 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14956:	55                   	push   %rbp
   14957:	48 89 e5             	mov    %rsp,%rbp
   1495a:	48 83 ec 10          	sub    $0x10,%rsp
   1495e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14966:	48 89 c7             	mov    %rax,%rdi
   14969:	e8 ea 16 00 00       	call   16058 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
   1496e:	c9                   	leave
   1496f:	c3                   	ret

0000000000014970 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14970:	55                   	push   %rbp
   14971:	48 89 e5             	mov    %rsp,%rbp
   14974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14978:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1497c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14983:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14987:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1498e:	00 
   1498f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14993:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1499a:	00 
	{ }
   1499b:	90                   	nop
   1499c:	5d                   	pop    %rbp
   1499d:	c3                   	ret

000000000001499e <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1499e:	55                   	push   %rbp
   1499f:	48 89 e5             	mov    %rsp,%rbp
   149a2:	48 83 ec 10          	sub    $0x10,%rsp
   149a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   149ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   149b3:	74 15                	je     149ca <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
   149b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   149bd:	48 89 d6             	mov    %rdx,%rsi
   149c0:	48 89 c7             	mov    %rax,%rdi
   149c3:	e8 aa 16 00 00       	call   16072 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
   149c8:	eb 05                	jmp    149cf <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
   149ca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   149cf:	c9                   	leave
   149d0:	c3                   	ret

00000000000149d1 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   149d1:	55                   	push   %rbp
   149d2:	48 89 e5             	mov    %rsp,%rbp
   149d5:	48 83 ec 20          	sub    $0x20,%rsp
   149d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   149dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   149e1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   149e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   149e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149ed:	48 89 d6             	mov    %rdx,%rsi
   149f0:	48 89 c7             	mov    %rax,%rdi
   149f3:	e8 a4 16 00 00       	call   1609c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
   149f8:	c9                   	leave
   149f9:	c3                   	ret

00000000000149fa <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
   149fa:	55                   	push   %rbp
   149fb:	48 89 e5             	mov    %rsp,%rbp
   149fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a06:	90                   	nop
   14a07:	5d                   	pop    %rbp
   14a08:	c3                   	ret
   14a09:	90                   	nop

0000000000014a0a <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14a0a:	55                   	push   %rbp
   14a0b:	48 89 e5             	mov    %rsp,%rbp
   14a0e:	48 83 ec 20          	sub    $0x20,%rsp
   14a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14a1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14a22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a26:	48 89 d6             	mov    %rdx,%rsi
   14a29:	48 89 c7             	mov    %rax,%rdi
   14a2c:	e8 ff f9 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   14a31:	c9                   	leave
   14a32:	c3                   	ret
   14a33:	90                   	nop

0000000000014a34 <_ZNSaI14VkDynamicStateEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   14a34:	55                   	push   %rbp
   14a35:	48 89 e5             	mov    %rsp,%rbp
   14a38:	48 83 ec 10          	sub    $0x10,%rsp
   14a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   14a44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a4c:	48 89 d6             	mov    %rdx,%rsi
   14a4f:	48 89 c7             	mov    %rax,%rdi
   14a52:	e8 a3 16 00 00       	call   160fa <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>
   14a57:	90                   	nop
   14a58:	c9                   	leave
   14a59:	c3                   	ret

0000000000014a5a <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14a5a:	55                   	push   %rbp
   14a5b:	48 89 e5             	mov    %rsp,%rbp
   14a5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a66:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14a6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a71:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14a78:	00 
   14a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a7d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14a84:	00 
	{ }
   14a85:	90                   	nop
   14a86:	5d                   	pop    %rbp
   14a87:	c3                   	ret

0000000000014a88 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14a88:	55                   	push   %rbp
   14a89:	48 89 e5             	mov    %rsp,%rbp
   14a8c:	48 83 ec 20          	sub    $0x20,%rsp
   14a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   14a9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14aa0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa8:	48 89 ce             	mov    %rcx,%rsi
   14aab:	48 89 c7             	mov    %rax,%rdi
   14aae:	e8 57 16 00 00       	call   1610a <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>
   14ab3:	90                   	nop
   14ab4:	c9                   	leave
   14ab5:	c3                   	ret

0000000000014ab6 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14ab6:	55                   	push   %rbp
   14ab7:	48 89 e5             	mov    %rsp,%rbp
   14aba:	48 83 ec 20          	sub    $0x20,%rsp
   14abe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14ac2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14ac9:	ff ff 1f 
   14acc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14ad0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ad4:	48 89 c7             	mov    %rax,%rdi
   14ad7:	e8 5f 16 00 00       	call   1613b <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>
   14adc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14ae0:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14ae4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14ae8:	48 89 d6             	mov    %rdx,%rsi
   14aeb:	48 89 c7             	mov    %rax,%rdi
   14aee:	e8 32 1b ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   14af3:	48 8b 00             	mov    (%rax),%rax
      }
   14af6:	c9                   	leave
   14af7:	c3                   	ret

0000000000014af8 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   14af8:	55                   	push   %rbp
   14af9:	48 89 e5             	mov    %rsp,%rbp
   14afc:	48 83 ec 10          	sub    $0x10,%rsp
   14b00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14b08:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b10:	ba 00 00 00 00       	mov    $0x0,%edx
   14b15:	48 89 ce             	mov    %rcx,%rsi
   14b18:	48 89 c7             	mov    %rax,%rdi
   14b1b:	e8 36 16 00 00       	call   16156 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>
   14b20:	c9                   	leave
   14b21:	c3                   	ret

0000000000014b22 <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   14b22:	55                   	push   %rbp
   14b23:	48 89 e5             	mov    %rsp,%rbp
   14b26:	48 83 ec 30          	sub    $0x30,%rsp
   14b2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14b32:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   14b36:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   14b3a:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   14b3e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14b42:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   14b46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b4a:	48 89 ce             	mov    %rcx,%rsi
   14b4d:	48 89 c7             	mov    %rax,%rdi
   14b50:	e8 62 16 00 00       	call   161b7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>
    }
   14b55:	c9                   	leave
   14b56:	c3                   	ret

0000000000014b57 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>:
   14b57:	55                   	push   %rbp
   14b58:	48 89 e5             	mov    %rsp,%rbp
   14b5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14b63:	90                   	nop
   14b64:	5d                   	pop    %rbp
   14b65:	c3                   	ret

0000000000014b66 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14b66:	55                   	push   %rbp
   14b67:	48 89 e5             	mov    %rsp,%rbp
   14b6a:	48 83 ec 20          	sub    $0x20,%rsp
   14b6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14b72:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14b79:	ff ff 0f 
   14b7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14b80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b84:	48 89 c7             	mov    %rax,%rdi
   14b87:	e8 58 16 00 00       	call   161e4 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   14b8c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14b90:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14b94:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14b98:	48 89 d6             	mov    %rdx,%rsi
   14b9b:	48 89 c7             	mov    %rax,%rdi
   14b9e:	e8 82 1a ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   14ba3:	48 8b 00             	mov    (%rax),%rax
      }
   14ba6:	c9                   	leave
   14ba7:	c3                   	ret

0000000000014ba8 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14ba8:	55                   	push   %rbp
   14ba9:	48 89 e5             	mov    %rsp,%rbp
   14bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bb4:	5d                   	pop    %rbp
   14bb5:	c3                   	ret

0000000000014bb6 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14bb6:	55                   	push   %rbp
   14bb7:	48 89 e5             	mov    %rsp,%rbp
   14bba:	48 83 ec 20          	sub    $0x20,%rsp
   14bbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14bc2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14bc6:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14bca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bd2:	48 89 d6             	mov    %rdx,%rsi
   14bd5:	48 89 c7             	mov    %rax,%rdi
   14bd8:	e8 21 16 00 00       	call   161fe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   14bdd:	c9                   	leave
   14bde:	c3                   	ret

0000000000014bdf <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14bdf:	55                   	push   %rbp
   14be0:	48 89 e5             	mov    %rsp,%rbp
   14be3:	48 83 ec 10          	sub    $0x10,%rsp
   14be7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14beb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14bef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bf7:	ba 00 00 00 00       	mov    $0x0,%edx
   14bfc:	48 89 ce             	mov    %rcx,%rsi
   14bff:	48 89 c7             	mov    %rax,%rdi
   14c02:	e8 55 16 00 00       	call   1625c <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   14c07:	c9                   	leave
   14c08:	c3                   	ret

0000000000014c09 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14c09:	55                   	push   %rbp
   14c0a:	48 89 e5             	mov    %rsp,%rbp
   14c0d:	41 54                	push   %r12
   14c0f:	53                   	push   %rbx
   14c10:	48 83 ec 20          	sub    $0x20,%rsp
   14c14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14c1c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14c20:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14c24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14c28:	48 89 c7             	mov    %rax,%rdi
   14c2b:	e8 8d 16 00 00       	call   162bd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   14c30:	49 89 c4             	mov    %rax,%r12
   14c33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c37:	48 89 c7             	mov    %rax,%rdi
   14c3a:	e8 7e 16 00 00       	call   162bd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   14c3f:	48 89 c3             	mov    %rax,%rbx
   14c42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c46:	48 89 c7             	mov    %rax,%rdi
   14c49:	e8 6f 16 00 00       	call   162bd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   14c4e:	48 89 c7             	mov    %rax,%rdi
   14c51:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14c55:	48 89 c1             	mov    %rax,%rcx
   14c58:	4c 89 e2             	mov    %r12,%rdx
   14c5b:	48 89 de             	mov    %rbx,%rsi
   14c5e:	e8 68 16 00 00       	call   162cb <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14c63:	48 83 c4 20          	add    $0x20,%rsp
   14c67:	5b                   	pop    %rbx
   14c68:	41 5c                	pop    %r12
   14c6a:	5d                   	pop    %rbp
   14c6b:	c3                   	ret

0000000000014c6c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14c6c:	55                   	push   %rbp
   14c6d:	48 89 e5             	mov    %rsp,%rbp
   14c70:	48 83 ec 20          	sub    $0x20,%rsp
   14c74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14c78:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14c7f:	ff ff 0f 
   14c82:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14c86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c8a:	48 89 c7             	mov    %rax,%rdi
   14c8d:	e8 9c 16 00 00       	call   1632e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
   14c92:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14c96:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14c9a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14c9e:	48 89 d6             	mov    %rdx,%rsi
   14ca1:	48 89 c7             	mov    %rax,%rdi
   14ca4:	e8 7c 19 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   14ca9:	48 8b 00             	mov    (%rax),%rax
      }
   14cac:	c9                   	leave
   14cad:	c3                   	ret

0000000000014cae <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14cae:	55                   	push   %rbp
   14caf:	48 89 e5             	mov    %rsp,%rbp
   14cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cba:	5d                   	pop    %rbp
   14cbb:	c3                   	ret

0000000000014cbc <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14cbc:	55                   	push   %rbp
   14cbd:	48 89 e5             	mov    %rsp,%rbp
   14cc0:	48 83 ec 20          	sub    $0x20,%rsp
   14cc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14cc8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14ccc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14cd0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14cd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14cd8:	48 89 d6             	mov    %rdx,%rsi
   14cdb:	48 89 c7             	mov    %rax,%rdi
   14cde:	e8 65 16 00 00       	call   16348 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
   14ce3:	c9                   	leave
   14ce4:	c3                   	ret

0000000000014ce5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14ce5:	55                   	push   %rbp
   14ce6:	48 89 e5             	mov    %rsp,%rbp
   14ce9:	48 83 ec 10          	sub    $0x10,%rsp
   14ced:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cf1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14cf5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14cf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cfd:	ba 00 00 00 00       	mov    $0x0,%edx
   14d02:	48 89 ce             	mov    %rcx,%rsi
   14d05:	48 89 c7             	mov    %rax,%rdi
   14d08:	e8 99 16 00 00       	call   163a6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
   14d0d:	c9                   	leave
   14d0e:	c3                   	ret

0000000000014d0f <_ZSt12__relocate_aIPP17VkCommandBuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14d0f:	55                   	push   %rbp
   14d10:	48 89 e5             	mov    %rsp,%rbp
   14d13:	41 54                	push   %r12
   14d15:	53                   	push   %rbx
   14d16:	48 83 ec 20          	sub    $0x20,%rsp
   14d1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14d1e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14d22:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14d26:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14d2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d2e:	48 89 c7             	mov    %rax,%rdi
   14d31:	e8 d1 16 00 00       	call   16407 <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>
   14d36:	49 89 c4             	mov    %rax,%r12
   14d39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14d3d:	48 89 c7             	mov    %rax,%rdi
   14d40:	e8 c2 16 00 00       	call   16407 <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>
   14d45:	48 89 c3             	mov    %rax,%rbx
   14d48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d4c:	48 89 c7             	mov    %rax,%rdi
   14d4f:	e8 b3 16 00 00       	call   16407 <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>
   14d54:	48 89 c7             	mov    %rax,%rdi
   14d57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d5b:	48 89 c1             	mov    %rax,%rcx
   14d5e:	4c 89 e2             	mov    %r12,%rdx
   14d61:	48 89 de             	mov    %rbx,%rsi
   14d64:	e8 ac 16 00 00       	call   16415 <_ZSt14__relocate_a_1IP17VkCommandBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14d69:	48 83 c4 20          	add    $0x20,%rsp
   14d6d:	5b                   	pop    %rbx
   14d6e:	41 5c                	pop    %r12
   14d70:	5d                   	pop    %rbp
   14d71:	c3                   	ret

0000000000014d72 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14d72:	55                   	push   %rbp
   14d73:	48 89 e5             	mov    %rsp,%rbp
   14d76:	48 83 ec 20          	sub    $0x20,%rsp
   14d7a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14d7e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14d85:	ff ff 0f 
   14d88:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14d8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d90:	48 89 c7             	mov    %rax,%rdi
   14d93:	e8 e0 16 00 00       	call   16478 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   14d98:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14d9c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14da0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14da4:	48 89 d6             	mov    %rdx,%rsi
   14da7:	48 89 c7             	mov    %rax,%rdi
   14daa:	e8 76 18 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   14daf:	48 8b 00             	mov    (%rax),%rax
      }
   14db2:	c9                   	leave
   14db3:	c3                   	ret

0000000000014db4 <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14db4:	55                   	push   %rbp
   14db5:	48 89 e5             	mov    %rsp,%rbp
   14db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dc0:	5d                   	pop    %rbp
   14dc1:	c3                   	ret

0000000000014dc2 <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14dc2:	55                   	push   %rbp
   14dc3:	48 89 e5             	mov    %rsp,%rbp
   14dc6:	48 83 ec 20          	sub    $0x20,%rsp
   14dca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14dce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14dd2:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14dd6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14dde:	48 89 d6             	mov    %rdx,%rsi
   14de1:	48 89 c7             	mov    %rax,%rdi
   14de4:	e8 a9 16 00 00       	call   16492 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   14de9:	c9                   	leave
   14dea:	c3                   	ret

0000000000014deb <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14deb:	55                   	push   %rbp
   14dec:	48 89 e5             	mov    %rsp,%rbp
   14def:	48 83 ec 10          	sub    $0x10,%rsp
   14df3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14df7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14dfb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14dff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e03:	ba 00 00 00 00       	mov    $0x0,%edx
   14e08:	48 89 ce             	mov    %rcx,%rsi
   14e0b:	48 89 c7             	mov    %rax,%rdi
   14e0e:	e8 dd 16 00 00       	call   164f0 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   14e13:	c9                   	leave
   14e14:	c3                   	ret

0000000000014e15 <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14e15:	55                   	push   %rbp
   14e16:	48 89 e5             	mov    %rsp,%rbp
   14e19:	41 54                	push   %r12
   14e1b:	53                   	push   %rbx
   14e1c:	48 83 ec 20          	sub    $0x20,%rsp
   14e20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14e24:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14e28:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14e2c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14e30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e34:	48 89 c7             	mov    %rax,%rdi
   14e37:	e8 15 17 00 00       	call   16551 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   14e3c:	49 89 c4             	mov    %rax,%r12
   14e3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14e43:	48 89 c7             	mov    %rax,%rdi
   14e46:	e8 06 17 00 00       	call   16551 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   14e4b:	48 89 c3             	mov    %rax,%rbx
   14e4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e52:	48 89 c7             	mov    %rax,%rdi
   14e55:	e8 f7 16 00 00       	call   16551 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   14e5a:	48 89 c7             	mov    %rax,%rdi
   14e5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14e61:	48 89 c1             	mov    %rax,%rcx
   14e64:	4c 89 e2             	mov    %r12,%rdx
   14e67:	48 89 de             	mov    %rbx,%rsi
   14e6a:	e8 f0 16 00 00       	call   1655f <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14e6f:	48 83 c4 20          	add    $0x20,%rsp
   14e73:	5b                   	pop    %rbx
   14e74:	41 5c                	pop    %r12
   14e76:	5d                   	pop    %rbp
   14e77:	c3                   	ret

0000000000014e78 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14e78:	55                   	push   %rbp
   14e79:	48 89 e5             	mov    %rsp,%rbp
   14e7c:	48 83 ec 20          	sub    $0x20,%rsp
   14e80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14e84:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14e8b:	ff ff 0f 
   14e8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14e92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14e96:	48 89 c7             	mov    %rax,%rdi
   14e99:	e8 24 17 00 00       	call   165c2 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   14e9e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14ea2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14ea6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14eaa:	48 89 d6             	mov    %rdx,%rsi
   14ead:	48 89 c7             	mov    %rax,%rdi
   14eb0:	e8 70 17 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   14eb5:	48 8b 00             	mov    (%rax),%rax
      }
   14eb8:	c9                   	leave
   14eb9:	c3                   	ret

0000000000014eba <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14eba:	55                   	push   %rbp
   14ebb:	48 89 e5             	mov    %rsp,%rbp
   14ebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ec6:	5d                   	pop    %rbp
   14ec7:	c3                   	ret

0000000000014ec8 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14ec8:	55                   	push   %rbp
   14ec9:	48 89 e5             	mov    %rsp,%rbp
   14ecc:	48 83 ec 20          	sub    $0x20,%rsp
   14ed0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ed4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14ed8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14edc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14ee0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ee4:	48 89 d6             	mov    %rdx,%rsi
   14ee7:	48 89 c7             	mov    %rax,%rdi
   14eea:	e8 ed 16 00 00       	call   165dc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   14eef:	c9                   	leave
   14ef0:	c3                   	ret

0000000000014ef1 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14ef1:	55                   	push   %rbp
   14ef2:	48 89 e5             	mov    %rsp,%rbp
   14ef5:	48 83 ec 10          	sub    $0x10,%rsp
   14ef9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14efd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14f01:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f09:	ba 00 00 00 00       	mov    $0x0,%edx
   14f0e:	48 89 ce             	mov    %rcx,%rsi
   14f11:	48 89 c7             	mov    %rax,%rdi
   14f14:	e8 21 17 00 00       	call   1663a <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   14f19:	c9                   	leave
   14f1a:	c3                   	ret

0000000000014f1b <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14f1b:	55                   	push   %rbp
   14f1c:	48 89 e5             	mov    %rsp,%rbp
   14f1f:	41 54                	push   %r12
   14f21:	53                   	push   %rbx
   14f22:	48 83 ec 20          	sub    $0x20,%rsp
   14f26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14f2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14f2e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14f32:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14f36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f3a:	48 89 c7             	mov    %rax,%rdi
   14f3d:	e8 59 17 00 00       	call   1669b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   14f42:	49 89 c4             	mov    %rax,%r12
   14f45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f49:	48 89 c7             	mov    %rax,%rdi
   14f4c:	e8 4a 17 00 00       	call   1669b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   14f51:	48 89 c3             	mov    %rax,%rbx
   14f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f58:	48 89 c7             	mov    %rax,%rdi
   14f5b:	e8 3b 17 00 00       	call   1669b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   14f60:	48 89 c7             	mov    %rax,%rdi
   14f63:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14f67:	48 89 c1             	mov    %rax,%rcx
   14f6a:	4c 89 e2             	mov    %r12,%rdx
   14f6d:	48 89 de             	mov    %rbx,%rsi
   14f70:	e8 34 17 00 00       	call   166a9 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14f75:	48 83 c4 20          	add    $0x20,%rsp
   14f79:	5b                   	pop    %rbx
   14f7a:	41 5c                	pop    %r12
   14f7c:	5d                   	pop    %rbp
   14f7d:	c3                   	ret

0000000000014f7e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   14f7e:	55                   	push   %rbp
   14f7f:	48 89 e5             	mov    %rsp,%rbp
   14f82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   14f8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f8e:	48 8b 10             	mov    (%rax),%rdx
   14f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f95:	48 89 10             	mov    %rdx,(%rax)
   14f98:	90                   	nop
   14f99:	5d                   	pop    %rbp
   14f9a:	c3                   	ret

0000000000014f9b <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   14f9b:	55                   	push   %rbp
   14f9c:	48 89 e5             	mov    %rsp,%rbp
   14f9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   14fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fa7:	5d                   	pop    %rbp
   14fa8:	c3                   	ret
   14fa9:	90                   	nop

0000000000014faa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14faa:	55                   	push   %rbp
   14fab:	48 89 e5             	mov    %rsp,%rbp
   14fae:	48 83 ec 10          	sub    $0x10,%rsp
   14fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fba:	48 89 c7             	mov    %rax,%rdi
   14fbd:	e8 4a 17 00 00       	call   1670c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   14fc2:	c9                   	leave
   14fc3:	c3                   	ret

0000000000014fc4 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   14fc4:	55                   	push   %rbp
   14fc5:	48 89 e5             	mov    %rsp,%rbp
   14fc8:	48 83 ec 10          	sub    $0x10,%rsp
   14fcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14fd4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fdc:	ba 00 00 00 00       	mov    $0x0,%edx
   14fe1:	48 89 ce             	mov    %rcx,%rsi
   14fe4:	48 89 c7             	mov    %rax,%rdi
   14fe7:	e8 34 17 00 00       	call   16720 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
   14fec:	c9                   	leave
   14fed:	c3                   	ret

0000000000014fee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14fee:	55                   	push   %rbp
   14fef:	48 89 e5             	mov    %rsp,%rbp
   14ff2:	48 83 ec 20          	sub    $0x20,%rsp
   14ff6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ffa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14ffe:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15003:	74 43                	je     15048 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   15005:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15009:	48 89 c7             	mov    %rax,%rdi
   1500c:	e8 7a 17 00 00       	call   1678b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
   15011:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15019:	48 89 c7             	mov    %rax,%rdi
   1501c:	e8 78 17 00 00       	call   16799 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
   15021:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
   15028:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   15029:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1502d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15031:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15035:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15039:	48 89 ce             	mov    %rcx,%rsi
   1503c:	48 89 c7             	mov    %rax,%rdi
   1503f:	e8 af 17 00 00       	call   167f3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
   15044:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15048:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1504c:	c9                   	leave
   1504d:	c3                   	ret

000000000001504e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   1504e:	55                   	push   %rbp
   1504f:	48 89 e5             	mov    %rsp,%rbp
   15052:	48 83 ec 20          	sub    $0x20,%rsp
   15056:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1505a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1505e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   15062:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15066:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1506a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1506e:	48 89 ce             	mov    %rcx,%rsi
   15071:	48 89 c7             	mov    %rax,%rdi
   15074:	e8 be 17 00 00       	call   16837 <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>
   15079:	c9                   	leave
   1507a:	c3                   	ret
   1507b:	90                   	nop

000000000001507c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1507c:	55                   	push   %rbp
   1507d:	48 89 e5             	mov    %rsp,%rbp
   15080:	48 83 ec 10          	sub    $0x10,%rsp
   15084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   15088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1508c:	48 89 c7             	mov    %rax,%rdi
   1508f:	e8 ee 17 00 00       	call   16882 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   15094:	48 89 c7             	mov    %rax,%rdi
   15097:	e8 5a 17 ff ff       	call   67f6 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   1509c:	c9                   	leave
   1509d:	c3                   	ret

000000000001509e <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1509e:	55                   	push   %rbp
   1509f:	48 89 e5             	mov    %rsp,%rbp
   150a2:	41 54                	push   %r12
   150a4:	53                   	push   %rbx
   150a5:	48 83 ec 20          	sub    $0x20,%rsp
   150a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   150ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   150b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   150b5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   150b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   150bd:	48 89 c7             	mov    %rax,%rdi
   150c0:	e8 93 1d ff ff       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
   150c5:	49 89 c4             	mov    %rax,%r12
   150c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   150cc:	48 89 c7             	mov    %rax,%rdi
   150cf:	e8 84 1d ff ff       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
   150d4:	48 89 c3             	mov    %rax,%rbx
   150d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   150db:	48 89 c7             	mov    %rax,%rdi
   150de:	e8 75 1d ff ff       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
   150e3:	48 89 c7             	mov    %rax,%rdi
   150e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   150ea:	48 89 c1             	mov    %rax,%rcx
   150ed:	4c 89 e2             	mov    %r12,%rdx
   150f0:	48 89 de             	mov    %rbx,%rsi
   150f3:	e8 98 17 00 00       	call   16890 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   150f8:	48 83 c4 20          	add    $0x20,%rsp
   150fc:	5b                   	pop    %rbx
   150fd:	41 5c                	pop    %r12
   150ff:	5d                   	pop    %rbp
   15100:	c3                   	ret
   15101:	90                   	nop

0000000000015102 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15102:	55                   	push   %rbp
   15103:	48 89 e5             	mov    %rsp,%rbp
   15106:	48 83 ec 10          	sub    $0x10,%rsp
   1510a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1510e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15112:	48 89 c7             	mov    %rax,%rdi
   15115:	e8 da 17 00 00       	call   168f4 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
   1511a:	c9                   	leave
   1511b:	c3                   	ret

000000000001511c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1511c:	55                   	push   %rbp
   1511d:	48 89 e5             	mov    %rsp,%rbp
   15120:	48 83 ec 10          	sub    $0x10,%rsp
   15124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15128:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1512c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15134:	ba 00 00 00 00       	mov    $0x0,%edx
   15139:	48 89 ce             	mov    %rcx,%rsi
   1513c:	48 89 c7             	mov    %rax,%rdi
   1513f:	e8 c4 17 00 00       	call   16908 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
   15144:	c9                   	leave
   15145:	c3                   	ret

0000000000015146 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15146:	55                   	push   %rbp
   15147:	48 89 e5             	mov    %rsp,%rbp
   1514a:	48 83 ec 20          	sub    $0x20,%rsp
   1514e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15152:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15156:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1515a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1515e:	48 89 d0             	mov    %rdx,%rax
   15161:	48 c1 e0 06          	shl    $0x6,%rax
   15165:	48 01 d0             	add    %rdx,%rax
   15168:	48 c1 e0 03          	shl    $0x3,%rax
   1516c:	48 89 c2             	mov    %rax,%rdx
   1516f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15173:	48 89 d6             	mov    %rdx,%rsi
   15176:	48 89 c7             	mov    %rax,%rdi
   15179:	e8 b2 f2 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   1517e:	c9                   	leave
   1517f:	c3                   	ret

0000000000015180 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15180:	55                   	push   %rbp
   15181:	48 89 e5             	mov    %rsp,%rbp
   15184:	48 83 ec 20          	sub    $0x20,%rsp
   15188:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1518c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15190:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15195:	74 43                	je     151da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   15197:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1519b:	48 89 c7             	mov    %rax,%rdi
   1519e:	e8 d0 17 00 00       	call   16973 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
   151a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   151a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ab:	48 89 c7             	mov    %rax,%rdi
   151ae:	e8 ce 17 00 00       	call   16981 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
   151b3:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
   151ba:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   151bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   151bf:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   151c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   151c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151cb:	48 89 ce             	mov    %rcx,%rsi
   151ce:	48 89 c7             	mov    %rax,%rdi
   151d1:	e8 05 18 00 00       	call   169db <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
   151d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   151da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   151de:	c9                   	leave
   151df:	c3                   	ret

00000000000151e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_create_node(_Args&&... __args)
   151e0:	55                   	push   %rbp
   151e1:	48 89 e5             	mov    %rsp,%rbp
   151e4:	48 83 ec 20          	sub    $0x20,%rsp
   151e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   151ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
   151f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151f4:	48 89 c7             	mov    %rax,%rdi
   151f7:	e8 24 18 00 00       	call   16a20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>
   151fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   15200:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15204:	48 89 c7             	mov    %rax,%rdi
   15207:	e8 b5 e2 ff ff       	call   134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   1520c:	48 89 c2             	mov    %rax,%rdx
   1520f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   15213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15217:	48 89 ce             	mov    %rcx,%rsi
   1521a:	48 89 c7             	mov    %rax,%rdi
   1521d:	e8 26 18 00 00       	call   16a48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>
	  return __tmp;
   15222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   15226:	c9                   	leave
   15227:	c3                   	ret

0000000000015228 <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   15228:	55                   	push   %rbp
   15229:	48 89 e5             	mov    %rsp,%rbp
   1522c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15230:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   15234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15238:	48 8b 10             	mov    (%rax),%rdx
   1523b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1523f:	48 8b 00             	mov    (%rax),%rax
   15242:	48 39 c2             	cmp    %rax,%rdx
   15245:	0f 94 c0             	sete   %al
   15248:	5d                   	pop    %rbp
   15249:	c3                   	ret

000000000001524a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1524a:	55                   	push   %rbp
   1524b:	48 89 e5             	mov    %rsp,%rbp
   1524e:	48 83 ec 20          	sub    $0x20,%rsp
   15252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15256:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1525a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1525e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15262:	48 89 c7             	mov    %rax,%rdi
   15265:	e8 7c 18 00 00       	call   16ae6 <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>
   1526a:	48 8b 10             	mov    (%rax),%rdx
   1526d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15271:	48 89 10             	mov    %rdx,(%rax)
   15274:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15278:	48 89 c7             	mov    %rax,%rdi
   1527b:	e8 74 18 00 00       	call   16af4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15280:	48 8b 10             	mov    (%rax),%rdx
   15283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15287:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1528b:	90                   	nop
   1528c:	c9                   	leave
   1528d:	c3                   	ret

000000000001528e <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   1528e:	55                   	push   %rbp
   1528f:	48 89 e5             	mov    %rsp,%rbp
   15292:	48 83 ec 10          	sub    $0x10,%rsp
   15296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   1529a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1529e:	48 8b 00             	mov    (%rax),%rax
   152a1:	48 89 c7             	mov    %rax,%rdi
   152a4:	e8 c7 f1 fe ff       	call   4470 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   152a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   152ad:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   152b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   152b4:	c9                   	leave
   152b5:	c3                   	ret

00000000000152b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   152b6:	55                   	push   %rbp
   152b7:	48 89 e5             	mov    %rsp,%rbp
   152ba:	48 83 ec 10          	sub    $0x10,%rsp
   152be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   152c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152c6:	48 89 c7             	mov    %rax,%rdi
   152c9:	e8 4e e5 ff ff       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   152ce:	c9                   	leave
   152cf:	c3                   	ret

00000000000152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   152d0:	55                   	push   %rbp
   152d1:	48 89 e5             	mov    %rsp,%rbp
   152d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   152dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   152e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   152e4:	48 8b 10             	mov    (%rax),%rdx
   152e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152eb:	48 89 10             	mov    %rdx,(%rax)
   152ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152f2:	48 8b 10             	mov    (%rax),%rdx
   152f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
   152fd:	90                   	nop
   152fe:	5d                   	pop    %rbp
   152ff:	c3                   	ret

0000000000015300 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15300:	55                   	push   %rbp
   15301:	48 89 e5             	mov    %rsp,%rbp
   15304:	41 54                	push   %r12
   15306:	53                   	push   %rbx
   15307:	48 83 ec 30          	sub    $0x30,%rsp
   1530b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1530f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15313:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15317:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   1531b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15320:	75 43                	jne    15365 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   15322:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15326:	48 89 c7             	mov    %rax,%rdi
   15329:	e8 dc e4 ff ff       	call   1380a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   1532e:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   15332:	74 31                	je     15365 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   15334:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15338:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1533c:	48 89 c7             	mov    %rax,%rdi
   1533f:	e8 72 ff ff ff       	call   152b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
   15344:	49 89 c4             	mov    %rax,%r12
   15347:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1534b:	48 89 c7             	mov    %rax,%rdi
   1534e:	e8 c9 e4 ff ff       	call   1381c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   15353:	4c 89 e2             	mov    %r12,%rdx
   15356:	48 89 c6             	mov    %rax,%rsi
   15359:	48 89 df             	mov    %rbx,%rdi
   1535c:	e8 e7 e4 ff ff       	call   13848 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15361:	84 c0                	test   %al,%al
   15363:	74 07                	je     1536c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x6c>
   15365:	b8 01 00 00 00       	mov    $0x1,%eax
   1536a:	eb 05                	jmp    15371 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x71>
   1536c:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   15371:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   15374:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15378:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   1537c:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   15380:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15384:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   15388:	89 c7                	mov    %eax,%edi
   1538a:	e8 d1 ec fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   1538f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15393:	48 8b 40 28          	mov    0x28(%rax),%rax
   15397:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1539b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1539f:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   153a3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   153a7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   153ab:	48 89 d6             	mov    %rdx,%rsi
   153ae:	48 89 c7             	mov    %rax,%rdi
   153b1:	e8 c6 e3 ff ff       	call   1377c <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   153b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   153ba:	48 83 c4 30          	add    $0x30,%rsp
   153be:	5b                   	pop    %rbx
   153bf:	41 5c                	pop    %r12
   153c1:	5d                   	pop    %rbp
   153c2:	c3                   	ret

00000000000153c3 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   153c3:	55                   	push   %rbp
   153c4:	48 89 e5             	mov    %rsp,%rbp
   153c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   153cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153cf:	5d                   	pop    %rbp
   153d0:	c3                   	ret

00000000000153d1 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   153d1:	55                   	push   %rbp
   153d2:	48 89 e5             	mov    %rsp,%rbp
   153d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   153d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153dd:	5d                   	pop    %rbp
   153de:	c3                   	ret
   153df:	90                   	nop

00000000000153e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   153e0:	55                   	push   %rbp
   153e1:	48 89 e5             	mov    %rsp,%rbp
   153e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   153e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ec:	5d                   	pop    %rbp
   153ed:	c3                   	ret

00000000000153ee <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr()
   153ee:	55                   	push   %rbp
   153ef:	48 89 e5             	mov    %rsp,%rbp
   153f2:	48 83 ec 10          	sub    $0x10,%rsp
   153f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   153fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153fe:	48 83 c0 20          	add    $0x20,%rax
   15402:	48 89 c7             	mov    %rax,%rdi
   15405:	e8 f8 16 00 00       	call   16b02 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
   1540a:	c9                   	leave
   1540b:	c3                   	ret

000000000001540c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1540c:	55                   	push   %rbp
   1540d:	48 89 e5             	mov    %rsp,%rbp
   15410:	48 83 ec 10          	sub    $0x10,%rsp
   15414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15418:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1541c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15424:	48 89 d6             	mov    %rdx,%rsi
   15427:	48 89 c7             	mov    %rax,%rdi
   1542a:	e8 ed 16 00 00       	call   16b1c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>
	}
   1542f:	90                   	nop
   15430:	c9                   	leave
   15431:	c3                   	ret

0000000000015432 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15432:	55                   	push   %rbp
   15433:	48 89 e5             	mov    %rsp,%rbp
   15436:	48 83 ec 20          	sub    $0x20,%rsp
   1543a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1543e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15442:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15446:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1544a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1544e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15452:	48 89 ce             	mov    %rcx,%rsi
   15455:	48 89 c7             	mov    %rax,%rdi
   15458:	e8 df 16 00 00       	call   16b3c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>
   1545d:	90                   	nop
   1545e:	c9                   	leave
   1545f:	c3                   	ret

0000000000015460 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr() const
   15460:	55                   	push   %rbp
   15461:	48 89 e5             	mov    %rsp,%rbp
   15464:	48 83 ec 10          	sub    $0x10,%rsp
   15468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1546c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15470:	48 83 c0 20          	add    $0x20,%rax
   15474:	48 89 c7             	mov    %rax,%rdi
   15477:	e8 f0 16 00 00       	call   16b6c <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
   1547c:	c9                   	leave
   1547d:	c3                   	ret

000000000001547e <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>:
      operator()(const _Tp& __x) const
   1547e:	55                   	push   %rbp
   1547f:	48 89 e5             	mov    %rsp,%rbp
   15482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15486:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
   1548a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1548e:	5d                   	pop    %rbp
   1548f:	c3                   	ret

0000000000015490 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   15490:	55                   	push   %rbp
   15491:	48 89 e5             	mov    %rsp,%rbp
   15494:	48 83 ec 10          	sub    $0x10,%rsp
   15498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1549c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   154a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   154a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154a8:	48 89 d6             	mov    %rdx,%rsi
   154ab:	48 89 c7             	mov    %rax,%rdi
   154ae:	e8 7d eb fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   154b3:	c1 e8 1f             	shr    $0x1f,%eax
   154b6:	c9                   	leave
   154b7:	c3                   	ret

00000000000154b8 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   154b8:	55                   	push   %rbp
   154b9:	48 89 e5             	mov    %rsp,%rbp
   154bc:	48 83 ec 10          	sub    $0x10,%rsp
   154c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   154c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154c8:	48 89 c7             	mov    %rax,%rdi
   154cb:	e8 b6 16 00 00       	call   16b86 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
   154d0:	c9                   	leave
   154d1:	c3                   	ret

00000000000154d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   154d2:	55                   	push   %rbp
   154d3:	48 89 e5             	mov    %rsp,%rbp
   154d6:	48 83 ec 20          	sub    $0x20,%rsp
   154da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   154de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   154e2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   154e7:	74 40                	je     15529 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   154e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154ed:	48 89 c7             	mov    %rax,%rdi
   154f0:	e8 ab 16 00 00       	call   16ba0 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
   154f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   154f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154fd:	48 89 c7             	mov    %rax,%rdi
   15500:	e8 a9 16 00 00       	call   16bae <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
   15505:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1550a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1550e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15512:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15516:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1551a:	48 89 ce             	mov    %rcx,%rsi
   1551d:	48 89 c7             	mov    %rax,%rdi
   15520:	e8 b6 16 00 00       	call   16bdb <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
   15525:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15529:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1552d:	c9                   	leave
   1552e:	c3                   	ret
   1552f:	90                   	nop

0000000000015530 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15530:	55                   	push   %rbp
   15531:	48 89 e5             	mov    %rsp,%rbp
   15534:	48 83 ec 20          	sub    $0x20,%rsp
   15538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1553c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15540:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15548:	48 89 c7             	mov    %rax,%rdi
   1554b:	e8 d0 16 00 00       	call   16c20 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
   15550:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15554:	0f 92 c0             	setb   %al
   15557:	0f b6 c0             	movzbl %al,%eax
   1555a:	48 85 c0             	test   %rax,%rax
   1555d:	0f 95 c0             	setne  %al
   15560:	84 c0                	test   %al,%al
   15562:	74 1a                	je     1557e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15564:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1556b:	ff ff 1f 
   1556e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15572:	73 05                	jae    15579 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15574:	e8 47 ed fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15579:	e8 82 eb fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1557e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15582:	48 c1 e0 03          	shl    $0x3,%rax
   15586:	48 89 c7             	mov    %rax,%rdi
   15589:	e8 82 ee fe ff       	call   4410 <_Znwm@plt>
   1558e:	90                   	nop
      }
   1558f:	c9                   	leave
   15590:	c3                   	ret

0000000000015591 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>:
    __niter_base(_Iterator __it)
   15591:	55                   	push   %rbp
   15592:	48 89 e5             	mov    %rsp,%rbp
   15595:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1559d:	5d                   	pop    %rbp
   1559e:	c3                   	ret

000000000001559f <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1559f:	55                   	push   %rbp
   155a0:	48 89 e5             	mov    %rsp,%rbp
   155a3:	48 83 ec 30          	sub    $0x30,%rsp
   155a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   155ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   155af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   155b3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   155b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   155bb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   155bf:	48 c1 f8 03          	sar    $0x3,%rax
   155c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   155c7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   155cc:	7e 1f                	jle    155ed <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   155ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155d2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   155d9:	00 
   155da:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   155de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   155e2:	48 89 ce             	mov    %rcx,%rsi
   155e5:	48 89 c7             	mov    %rax,%rdi
   155e8:	e8 c3 f1 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   155ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155f1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   155f8:	00 
   155f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   155fd:	48 01 d0             	add    %rdx,%rax
    }
   15600:	c9                   	leave
   15601:	c3                   	ret

0000000000015602 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15602:	55                   	push   %rbp
   15603:	48 89 e5             	mov    %rsp,%rbp
   15606:	48 83 ec 10          	sub    $0x10,%rsp
   1560a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1560e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15612:	48 89 c7             	mov    %rax,%rdi
   15615:	e8 1a 16 00 00       	call   16c34 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
   1561a:	c9                   	leave
   1561b:	c3                   	ret

000000000001561c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1561c:	55                   	push   %rbp
   1561d:	48 89 e5             	mov    %rsp,%rbp
   15620:	48 83 ec 20          	sub    $0x20,%rsp
   15624:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15628:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1562c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15631:	74 40                	je     15673 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   15633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15637:	48 89 c7             	mov    %rax,%rdi
   1563a:	e8 0f 16 00 00       	call   16c4e <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
   1563f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15647:	48 89 c7             	mov    %rax,%rdi
   1564a:	e8 0d 16 00 00       	call   16c5c <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
   1564f:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   15654:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15658:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1565c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15660:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15664:	48 89 ce             	mov    %rcx,%rsi
   15667:	48 89 c7             	mov    %rax,%rdi
   1566a:	e8 13 16 00 00       	call   16c82 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
   1566f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15673:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15677:	c9                   	leave
   15678:	c3                   	ret
   15679:	90                   	nop

000000000001567a <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1567a:	55                   	push   %rbp
   1567b:	48 89 e5             	mov    %rsp,%rbp
   1567e:	48 83 ec 20          	sub    $0x20,%rsp
   15682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15686:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1568a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1568e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15692:	48 89 c7             	mov    %rax,%rdi
   15695:	e8 2c 16 00 00       	call   16cc6 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
   1569a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1569e:	0f 92 c0             	setb   %al
   156a1:	0f b6 c0             	movzbl %al,%eax
   156a4:	48 85 c0             	test   %rax,%rax
   156a7:	0f 95 c0             	setne  %al
   156aa:	84 c0                	test   %al,%al
   156ac:	74 1a                	je     156c8 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   156ae:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   156b5:	ff ff 3f 
   156b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   156bc:	73 05                	jae    156c3 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   156be:	e8 fd eb fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   156c3:	e8 38 ea fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   156c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   156cc:	48 c1 e0 02          	shl    $0x2,%rax
   156d0:	48 89 c7             	mov    %rax,%rdi
   156d3:	e8 38 ed fe ff       	call   4410 <_Znwm@plt>
   156d8:	90                   	nop
      }
   156d9:	c9                   	leave
   156da:	c3                   	ret

00000000000156db <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>:
    __niter_base(_Iterator __it)
   156db:	55                   	push   %rbp
   156dc:	48 89 e5             	mov    %rsp,%rbp
   156df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   156e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156e7:	5d                   	pop    %rbp
   156e8:	c3                   	ret

00000000000156e9 <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   156e9:	55                   	push   %rbp
   156ea:	48 89 e5             	mov    %rsp,%rbp
   156ed:	48 83 ec 30          	sub    $0x30,%rsp
   156f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   156f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   156f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   156fd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15701:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15705:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15709:	48 c1 f8 02          	sar    $0x2,%rax
   1570d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15711:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15716:	7e 1f                	jle    15737 <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1571c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15723:	00 
   15724:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15728:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1572c:	48 89 ce             	mov    %rcx,%rsi
   1572f:	48 89 c7             	mov    %rax,%rdi
   15732:	e8 79 f0 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   15737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1573b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15742:	00 
   15743:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15747:	48 01 d0             	add    %rdx,%rax
    }
   1574a:	c9                   	leave
   1574b:	c3                   	ret

000000000001574c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1574c:	55                   	push   %rbp
   1574d:	48 89 e5             	mov    %rsp,%rbp
   15750:	48 83 ec 10          	sub    $0x10,%rsp
   15754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1575c:	48 89 c7             	mov    %rax,%rdi
   1575f:	e8 76 15 00 00       	call   16cda <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   15764:	c9                   	leave
   15765:	c3                   	ret

0000000000015766 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   15766:	55                   	push   %rbp
   15767:	48 89 e5             	mov    %rsp,%rbp
   1576a:	48 83 ec 10          	sub    $0x10,%rsp
   1576e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15772:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15776:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1577a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1577e:	ba 00 00 00 00       	mov    $0x0,%edx
   15783:	48 89 ce             	mov    %rcx,%rsi
   15786:	48 89 c7             	mov    %rax,%rdi
   15789:	e8 60 15 00 00       	call   16cee <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
   1578e:	c9                   	leave
   1578f:	c3                   	ret

0000000000015790 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15790:	55                   	push   %rbp
   15791:	48 89 e5             	mov    %rsp,%rbp
   15794:	48 83 ec 20          	sub    $0x20,%rsp
   15798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1579c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   157a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   157af:	00 
   157b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   157b4:	48 89 d6             	mov    %rdx,%rsi
   157b7:	48 89 c7             	mov    %rax,%rdi
   157ba:	e8 71 ec fe ff       	call   4430 <_ZdlPvm@plt>
      }
   157bf:	c9                   	leave
   157c0:	c3                   	ret

00000000000157c1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   157c1:	55                   	push   %rbp
   157c2:	48 89 e5             	mov    %rsp,%rbp
   157c5:	48 83 ec 20          	sub    $0x20,%rsp
   157c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   157cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   157d1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   157d6:	74 40                	je     15818 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   157d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157dc:	48 89 c7             	mov    %rax,%rdi
   157df:	e8 6b 15 00 00       	call   16d4f <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   157e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   157e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157ec:	48 89 c7             	mov    %rax,%rdi
   157ef:	e8 69 15 00 00       	call   16d5d <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
   157f4:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   157f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   157fd:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15801:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15809:	48 89 ce             	mov    %rcx,%rsi
   1580c:	48 89 c7             	mov    %rax,%rdi
   1580f:	e8 70 15 00 00       	call   16d84 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
   15814:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1581c:	c9                   	leave
   1581d:	c3                   	ret

000000000001581e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1581e:	55                   	push   %rbp
   1581f:	48 89 e5             	mov    %rsp,%rbp
   15822:	48 83 ec 10          	sub    $0x10,%rsp
   15826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1582a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1582e:	48 89 c7             	mov    %rax,%rdi
   15831:	e8 92 15 00 00       	call   16dc8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   15836:	c9                   	leave
   15837:	c3                   	ret

0000000000015838 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   15838:	55                   	push   %rbp
   15839:	48 89 e5             	mov    %rsp,%rbp
   1583c:	48 83 ec 10          	sub    $0x10,%rsp
   15840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15844:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15848:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1584c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15850:	ba 00 00 00 00       	mov    $0x0,%edx
   15855:	48 89 ce             	mov    %rcx,%rsi
   15858:	48 89 c7             	mov    %rax,%rdi
   1585b:	e8 7c 15 00 00       	call   16ddc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
   15860:	c9                   	leave
   15861:	c3                   	ret

0000000000015862 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15862:	55                   	push   %rbp
   15863:	48 89 e5             	mov    %rsp,%rbp
   15866:	48 83 ec 20          	sub    $0x20,%rsp
   1586a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1586e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15872:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15876:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1587a:	48 89 d0             	mov    %rdx,%rax
   1587d:	48 01 c0             	add    %rax,%rax
   15880:	48 01 d0             	add    %rdx,%rax
   15883:	48 c1 e0 03          	shl    $0x3,%rax
   15887:	48 89 c2             	mov    %rax,%rdx
   1588a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1588e:	48 89 d6             	mov    %rdx,%rsi
   15891:	48 89 c7             	mov    %rax,%rdi
   15894:	e8 97 eb fe ff       	call   4430 <_ZdlPvm@plt>
      }
   15899:	c9                   	leave
   1589a:	c3                   	ret

000000000001589b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1589b:	55                   	push   %rbp
   1589c:	48 89 e5             	mov    %rsp,%rbp
   1589f:	48 83 ec 20          	sub    $0x20,%rsp
   158a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   158a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   158ab:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   158b0:	74 40                	je     158f2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   158b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158b6:	48 89 c7             	mov    %rax,%rdi
   158b9:	e8 88 15 00 00       	call   16e46 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
   158be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   158c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158c6:	48 89 c7             	mov    %rax,%rdi
   158c9:	e8 86 15 00 00       	call   16e54 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
   158ce:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   158d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   158d7:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   158db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   158df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158e3:	48 89 ce             	mov    %rcx,%rsi
   158e6:	48 89 c7             	mov    %rax,%rdi
   158e9:	e8 af 15 00 00       	call   16e9d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
   158ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   158f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   158f6:	c9                   	leave
   158f7:	c3                   	ret

00000000000158f8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   158f8:	55                   	push   %rbp
   158f9:	48 89 e5             	mov    %rsp,%rbp
   158fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15900:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15904:	90                   	nop
   15905:	5d                   	pop    %rbp
   15906:	c3                   	ret
   15907:	90                   	nop

0000000000015908 <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   15908:	55                   	push   %rbp
   15909:	48 89 e5             	mov    %rsp,%rbp
   1590c:	48 83 ec 20          	sub    $0x20,%rsp
   15910:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   15914:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15918:	48 8b 10             	mov    (%rax),%rdx
   1591b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1591f:	48 89 d6             	mov    %rdx,%rsi
   15922:	48 89 c7             	mov    %rax,%rdi
   15925:	e8 68 e7 ff ff       	call   14092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   1592a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1592e:	c9                   	leave
   1592f:	c3                   	ret

0000000000015930 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   15930:	55                   	push   %rbp
   15931:	48 89 e5             	mov    %rsp,%rbp
   15934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   15938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1593c:	48 83 c0 08          	add    $0x8,%rax
   15940:	5d                   	pop    %rbp
   15941:	c3                   	ret

0000000000015942 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15942:	55                   	push   %rbp
   15943:	48 89 e5             	mov    %rsp,%rbp
   15946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1594a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1594e:	48 8b 40 28          	mov    0x28(%rax),%rax
   15952:	5d                   	pop    %rbp
   15953:	c3                   	ret

0000000000015954 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   15954:	55                   	push   %rbp
   15955:	48 89 e5             	mov    %rsp,%rbp
   15958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1595c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15960:	48 83 c0 20          	add    $0x20,%rax
   15964:	5d                   	pop    %rbp
   15965:	c3                   	ret

0000000000015966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   15966:	55                   	push   %rbp
   15967:	48 89 e5             	mov    %rsp,%rbp
   1596a:	48 83 ec 10          	sub    $0x10,%rsp
   1596e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   15972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15976:	48 89 c7             	mov    %rax,%rdi
   15979:	e8 63 15 00 00       	call   16ee1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
   1597e:	c9                   	leave
   1597f:	c3                   	ret

0000000000015980 <_ZNKSt4lessIjEclERKjS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
   15980:	55                   	push   %rbp
   15981:	48 89 e5             	mov    %rsp,%rbp
   15984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15988:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1598c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   15990:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15994:	8b 10                	mov    (%rax),%edx
   15996:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1599a:	8b 00                	mov    (%rax),%eax
   1599c:	39 c2                	cmp    %eax,%edx
   1599e:	0f 92 c0             	setb   %al
   159a1:	5d                   	pop    %rbp
   159a2:	c3                   	ret
   159a3:	90                   	nop

00000000000159a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   159a4:	55                   	push   %rbp
   159a5:	48 89 e5             	mov    %rsp,%rbp
   159a8:	53                   	push   %rbx
   159a9:	48 83 ec 78          	sub    $0x78,%rsp
   159ad:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   159b1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   159b5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   159b9:	48 89 c7             	mov    %rax,%rdi
   159bc:	e8 9f 9d ff ff       	call   f760 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
   159c1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   159c5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   159c9:	48 89 c7             	mov    %rax,%rdi
   159cc:	e8 5f ff ff ff       	call   15930 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   159d1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   159d5:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   159d9:	eb 51                	jmp    15a2c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x88>
	  __y = __x;
   159db:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   159df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   159e3:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   159e7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   159eb:	48 89 c7             	mov    %rax,%rdi
   159ee:	e8 ee 14 00 00       	call   16ee1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
   159f3:	48 89 c2             	mov    %rax,%rdx
   159f6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   159fa:	48 89 c6             	mov    %rax,%rsi
   159fd:	48 89 df             	mov    %rbx,%rdi
   15a00:	e8 7b ff ff ff       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   15a05:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   15a08:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   15a0c:	74 0e                	je     15a1c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x78>
   15a0e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15a12:	48 89 c7             	mov    %rax,%rdi
   15a15:	e8 fb c6 ff ff       	call   12115 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
   15a1a:	eb 0c                	jmp    15a28 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x84>
   15a1c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15a20:	48 89 c7             	mov    %rax,%rdi
   15a23:	e8 db c6 ff ff       	call   12103 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   15a28:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   15a2c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15a30:	48 85 c0             	test   %rax,%rax
   15a33:	75 a6                	jne    159db <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x37>
      iterator __j = iterator(__y);
   15a35:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15a39:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15a3d:	48 89 d6             	mov    %rdx,%rsi
   15a40:	48 89 c7             	mov    %rax,%rdi
   15a43:	e8 4a e6 ff ff       	call   14092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   15a48:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   15a4c:	74 54                	je     15aa2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xfe>
	  if (__j == begin())
   15a4e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15a52:	48 89 c7             	mov    %rax,%rdi
   15a55:	e8 b4 14 00 00       	call   16f0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
   15a5a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   15a5e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   15a62:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15a66:	48 89 d6             	mov    %rdx,%rsi
   15a69:	48 89 c7             	mov    %rax,%rdi
   15a6c:	e8 c6 14 00 00       	call   16f37 <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>
   15a71:	84 c0                	test   %al,%al
   15a73:	74 21                	je     15a96 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xf2>
	    return _Res(__x, __y);
   15a75:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   15a79:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   15a7d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   15a81:	48 89 ce             	mov    %rcx,%rsi
   15a84:	48 89 c7             	mov    %rax,%rdi
   15a87:	e8 ce 14 00 00       	call   16f5a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
   15a8c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   15a90:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   15a94:	eb 7d                	jmp    15b13 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
	    --__j;
   15a96:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15a9a:	48 89 c7             	mov    %rax,%rdi
   15a9d:	e8 ce 00 00 00       	call   15b70 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   15aa2:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   15aa6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15aaa:	48 89 c7             	mov    %rax,%rdi
   15aad:	e8 b4 fe ff ff       	call   15966 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   15ab2:	48 89 c1             	mov    %rax,%rcx
   15ab5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15ab9:	48 89 c2             	mov    %rax,%rdx
   15abc:	48 89 ce             	mov    %rcx,%rsi
   15abf:	48 89 df             	mov    %rbx,%rdi
   15ac2:	e8 b9 fe ff ff       	call   15980 <_ZNKSt4lessIjEclERKjS2_>
   15ac7:	84 c0                	test   %al,%al
   15ac9:	74 21                	je     15aec <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x148>
	return _Res(__x, __y);
   15acb:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   15acf:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   15ad3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15ad7:	48 89 ce             	mov    %rcx,%rsi
   15ada:	48 89 c7             	mov    %rax,%rdi
   15add:	e8 78 14 00 00       	call   16f5a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
   15ae2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15ae6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15aea:	eb 27                	jmp    15b13 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
      return _Res(__j._M_node, 0);
   15aec:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   15af3:	00 
   15af4:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   15af8:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   15afc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15b00:	48 89 ce             	mov    %rcx,%rsi
   15b03:	48 89 c7             	mov    %rax,%rdi
   15b06:	e8 c5 f7 ff ff       	call   152d0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   15b0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   15b13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15b17:	c9                   	leave
   15b18:	c3                   	ret
   15b19:	90                   	nop

0000000000015b1a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   15b1a:	55                   	push   %rbp
   15b1b:	48 89 e5             	mov    %rsp,%rbp
   15b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   15b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b26:	48 83 c0 18          	add    $0x18,%rax
   15b2a:	5d                   	pop    %rbp
   15b2b:	c3                   	ret

0000000000015b2c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   15b2c:	55                   	push   %rbp
   15b2d:	48 89 e5             	mov    %rsp,%rbp
   15b30:	48 83 ec 20          	sub    $0x20,%rsp
   15b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15b3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   15b40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b44:	48 89 c7             	mov    %rax,%rdi
   15b47:	e8 a8 0f 00 00       	call   16af4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15b4c:	48 8b 10             	mov    (%rax),%rdx
   15b4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b53:	48 89 10             	mov    %rdx,(%rax)
   15b56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b5a:	48 89 c7             	mov    %rax,%rdi
   15b5d:	e8 92 0f 00 00       	call   16af4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15b62:	48 8b 10             	mov    (%rax),%rdx
   15b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b69:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15b6d:	90                   	nop
   15b6e:	c9                   	leave
   15b6f:	c3                   	ret

0000000000015b70 <_ZNSt17_Rb_tree_iteratorIjEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   15b70:	55                   	push   %rbp
   15b71:	48 89 e5             	mov    %rsp,%rbp
   15b74:	48 83 ec 10          	sub    $0x10,%rsp
   15b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   15b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b80:	48 8b 00             	mov    (%rax),%rax
   15b83:	48 89 c7             	mov    %rax,%rdi
   15b86:	e8 e5 e8 fe ff       	call   4470 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   15b8b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15b8f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   15b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   15b96:	c9                   	leave
   15b97:	c3                   	ret

0000000000015b98 <_ZNSt17_Rb_tree_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   15b98:	55                   	push   %rbp
   15b99:	48 89 e5             	mov    %rsp,%rbp
   15b9c:	48 83 ec 10          	sub    $0x10,%rsp
   15ba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   15ba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ba8:	48 8b 00             	mov    (%rax),%rax
   15bab:	48 89 c7             	mov    %rax,%rdi
   15bae:	e8 ad e6 fe ff       	call   4260 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   15bb3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15bb7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   15bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   15bbe:	c9                   	leave
   15bbf:	c3                   	ret

0000000000015bc0 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>:
	  operator()(_GLIBCXX_FWDREF(_Arg) __arg) const
   15bc0:	55                   	push   %rbp
   15bc1:	48 89 e5             	mov    %rsp,%rbp
   15bc4:	53                   	push   %rbx
   15bc5:	48 83 ec 18          	sub    $0x18,%rsp
   15bc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15bcd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
   15bd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bd5:	48 8b 18             	mov    (%rax),%rbx
   15bd8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15bdc:	48 89 c7             	mov    %rax,%rdi
   15bdf:	e8 28 e9 ff ff       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   15be4:	48 89 c6             	mov    %rax,%rsi
   15be7:	48 89 df             	mov    %rbx,%rdi
   15bea:	e8 af 13 00 00       	call   16f9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>
   15bef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15bf3:	c9                   	leave
   15bf4:	c3                   	ret
   15bf5:	90                   	nop

0000000000015bf6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   15bf6:	55                   	push   %rbp
   15bf7:	48 89 e5             	mov    %rsp,%rbp
   15bfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c02:	5d                   	pop    %rbp
   15c03:	c3                   	ret

0000000000015c04 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr()
   15c04:	55                   	push   %rbp
   15c05:	48 89 e5             	mov    %rsp,%rbp
   15c08:	48 83 ec 10          	sub    $0x10,%rsp
   15c0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   15c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c14:	48 83 c0 20          	add    $0x20,%rax
   15c18:	48 89 c7             	mov    %rax,%rdi
   15c1b:	e8 c6 13 00 00       	call   16fe6 <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
   15c20:	c9                   	leave
   15c21:	c3                   	ret

0000000000015c22 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   15c22:	55                   	push   %rbp
   15c23:	48 89 e5             	mov    %rsp,%rbp
   15c26:	48 83 ec 10          	sub    $0x10,%rsp
   15c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   15c32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c3a:	48 89 d6             	mov    %rdx,%rsi
   15c3d:	48 89 c7             	mov    %rax,%rdi
   15c40:	e8 bb 13 00 00       	call   17000 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>
	}
   15c45:	90                   	nop
   15c46:	c9                   	leave
   15c47:	c3                   	ret

0000000000015c48 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15c48:	55                   	push   %rbp
   15c49:	48 89 e5             	mov    %rsp,%rbp
   15c4c:	48 83 ec 20          	sub    $0x20,%rsp
   15c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15c58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15c5c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15c60:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c68:	48 89 ce             	mov    %rcx,%rsi
   15c6b:	48 89 c7             	mov    %rax,%rdi
   15c6e:	e8 9d 13 00 00       	call   17010 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>
   15c73:	90                   	nop
   15c74:	c9                   	leave
   15c75:	c3                   	ret

0000000000015c76 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   15c76:	55                   	push   %rbp
   15c77:	48 89 e5             	mov    %rsp,%rbp
   15c7a:	48 83 ec 20          	sub    $0x20,%rsp
   15c7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   15c82:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   15c89:	33 33 03 
   15c8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   15c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c94:	48 89 c7             	mov    %rax,%rdi
   15c97:	e8 ae 13 00 00       	call   1704a <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>
   15c9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15ca0:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15ca4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15ca8:	48 89 d6             	mov    %rdx,%rsi
   15cab:	48 89 c7             	mov    %rax,%rdi
   15cae:	e8 72 09 ff ff       	call   6625 <_ZSt3minImERKT_S2_S2_>
   15cb3:	48 8b 00             	mov    (%rax),%rax
      }
   15cb6:	c9                   	leave
   15cb7:	c3                   	ret

0000000000015cb8 <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15cb8:	55                   	push   %rbp
   15cb9:	48 89 e5             	mov    %rsp,%rbp
   15cbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cc4:	5d                   	pop    %rbp
   15cc5:	c3                   	ret

0000000000015cc6 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15cc6:	55                   	push   %rbp
   15cc7:	48 89 e5             	mov    %rsp,%rbp
   15cca:	48 83 ec 20          	sub    $0x20,%rsp
   15cce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15cd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cde:	48 89 c7             	mov    %rax,%rdi
   15ce1:	e8 7e 13 00 00       	call   17064 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   15ce6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15cea:	0f 92 c0             	setb   %al
   15ced:	0f b6 c0             	movzbl %al,%eax
   15cf0:	48 85 c0             	test   %rax,%rax
   15cf3:	0f 95 c0             	setne  %al
   15cf6:	84 c0                	test   %al,%al
   15cf8:	74 1a                	je     15d14 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15cfa:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   15d01:	66 66 06 
   15d04:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15d08:	73 05                	jae    15d0f <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15d0a:	e8 b1 e5 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15d0f:	e8 ec e3 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15d14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15d18:	48 89 d0             	mov    %rdx,%rax
   15d1b:	48 c1 e0 02          	shl    $0x2,%rax
   15d1f:	48 01 d0             	add    %rdx,%rax
   15d22:	48 c1 e0 03          	shl    $0x3,%rax
   15d26:	48 89 c7             	mov    %rax,%rdi
   15d29:	e8 e2 e6 fe ff       	call   4410 <_Znwm@plt>
   15d2e:	90                   	nop
      }
   15d2f:	c9                   	leave
   15d30:	c3                   	ret

0000000000015d31 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   15d31:	55                   	push   %rbp
   15d32:	48 89 e5             	mov    %rsp,%rbp
   15d35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d3d:	5d                   	pop    %rbp
   15d3e:	c3                   	ret

0000000000015d3f <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15d3f:	55                   	push   %rbp
   15d40:	48 89 e5             	mov    %rsp,%rbp
   15d43:	48 83 ec 30          	sub    $0x30,%rsp
   15d47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15d4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15d4f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15d53:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15d57:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15d5b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15d5f:	48 c1 f8 03          	sar    $0x3,%rax
   15d63:	48 89 c2             	mov    %rax,%rdx
   15d66:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   15d6d:	cc cc cc 
   15d70:	48 0f af c2          	imul   %rdx,%rax
   15d74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15d78:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15d7d:	7e 28                	jle    15da7 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x68>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15d7f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15d83:	48 89 d0             	mov    %rdx,%rax
   15d86:	48 c1 e0 02          	shl    $0x2,%rax
   15d8a:	48 01 d0             	add    %rdx,%rax
   15d8d:	48 c1 e0 03          	shl    $0x3,%rax
   15d91:	48 89 c2             	mov    %rax,%rdx
   15d94:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15d98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d9c:	48 89 ce             	mov    %rcx,%rsi
   15d9f:	48 89 c7             	mov    %rax,%rdi
   15da2:	e8 09 ea fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   15da7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15dab:	48 89 d0             	mov    %rdx,%rax
   15dae:	48 c1 e0 02          	shl    $0x2,%rax
   15db2:	48 01 d0             	add    %rdx,%rax
   15db5:	48 c1 e0 03          	shl    $0x3,%rax
   15db9:	48 89 c2             	mov    %rax,%rdx
   15dbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15dc0:	48 01 d0             	add    %rdx,%rax
    }
   15dc3:	c9                   	leave
   15dc4:	c3                   	ret

0000000000015dc5 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15dc5:	55                   	push   %rbp
   15dc6:	48 89 e5             	mov    %rsp,%rbp
   15dc9:	48 83 ec 10          	sub    $0x10,%rsp
   15dcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15dd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dd5:	48 89 c7             	mov    %rax,%rdi
   15dd8:	e8 9b 12 00 00       	call   17078 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
   15ddd:	c9                   	leave
   15dde:	c3                   	ret

0000000000015ddf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15ddf:	55                   	push   %rbp
   15de0:	48 89 e5             	mov    %rsp,%rbp
   15de3:	48 83 ec 20          	sub    $0x20,%rsp
   15de7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15deb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15def:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15df4:	74 40                	je     15e36 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   15df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15dfa:	48 89 c7             	mov    %rax,%rdi
   15dfd:	e8 90 12 00 00       	call   17092 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
   15e02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e0a:	48 89 c7             	mov    %rax,%rdi
   15e0d:	e8 8e 12 00 00       	call   170a0 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
   15e12:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   15e17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15e1b:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15e1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15e23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e27:	48 89 ce             	mov    %rcx,%rsi
   15e2a:	48 89 c7             	mov    %rax,%rdi
   15e2d:	e8 95 12 00 00       	call   170c7 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
   15e32:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15e36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15e3a:	c9                   	leave
   15e3b:	c3                   	ret

0000000000015e3c <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15e3c:	55                   	push   %rbp
   15e3d:	48 89 e5             	mov    %rsp,%rbp
   15e40:	48 83 ec 20          	sub    $0x20,%rsp
   15e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e54:	48 89 c7             	mov    %rax,%rdi
   15e57:	e8 b0 12 00 00       	call   1710c <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
   15e5c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15e60:	0f 92 c0             	setb   %al
   15e63:	0f b6 c0             	movzbl %al,%eax
   15e66:	48 85 c0             	test   %rax,%rax
   15e69:	0f 95 c0             	setne  %al
   15e6c:	84 c0                	test   %al,%al
   15e6e:	74 1a                	je     15e8a <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15e70:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15e77:	ff ff 1f 
   15e7a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15e7e:	73 05                	jae    15e85 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15e80:	e8 3b e4 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15e85:	e8 76 e2 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15e8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e8e:	48 c1 e0 03          	shl    $0x3,%rax
   15e92:	48 89 c7             	mov    %rax,%rdi
   15e95:	e8 76 e5 fe ff       	call   4410 <_Znwm@plt>
   15e9a:	90                   	nop
      }
   15e9b:	c9                   	leave
   15e9c:	c3                   	ret

0000000000015e9d <_ZSt12__niter_baseIPP9VkImage_TET_S3_>:
    __niter_base(_Iterator __it)
   15e9d:	55                   	push   %rbp
   15e9e:	48 89 e5             	mov    %rsp,%rbp
   15ea1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ea9:	5d                   	pop    %rbp
   15eaa:	c3                   	ret

0000000000015eab <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15eab:	55                   	push   %rbp
   15eac:	48 89 e5             	mov    %rsp,%rbp
   15eaf:	48 83 ec 30          	sub    $0x30,%rsp
   15eb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15eb7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15ebb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15ebf:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15ec3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15ec7:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15ecb:	48 c1 f8 03          	sar    $0x3,%rax
   15ecf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15ed3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15ed8:	7e 1f                	jle    15ef9 <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ede:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15ee5:	00 
   15ee6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15eea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15eee:	48 89 ce             	mov    %rcx,%rsi
   15ef1:	48 89 c7             	mov    %rax,%rdi
   15ef4:	e8 b7 e8 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   15ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15efd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15f04:	00 
   15f05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f09:	48 01 d0             	add    %rdx,%rax
    }
   15f0c:	c9                   	leave
   15f0d:	c3                   	ret

0000000000015f0e <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15f0e:	55                   	push   %rbp
   15f0f:	48 89 e5             	mov    %rsp,%rbp
   15f12:	48 83 ec 10          	sub    $0x10,%rsp
   15f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f1e:	48 89 c7             	mov    %rax,%rdi
   15f21:	e8 fa 11 00 00       	call   17120 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   15f26:	c9                   	leave
   15f27:	c3                   	ret

0000000000015f28 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15f28:	55                   	push   %rbp
   15f29:	48 89 e5             	mov    %rsp,%rbp
   15f2c:	48 83 ec 20          	sub    $0x20,%rsp
   15f30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15f34:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15f38:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15f3d:	74 40                	je     15f7f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   15f3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f43:	48 89 c7             	mov    %rax,%rdi
   15f46:	e8 ef 11 00 00       	call   1713a <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   15f4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f53:	48 89 c7             	mov    %rax,%rdi
   15f56:	e8 ed 11 00 00       	call   17148 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   15f5b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   15f60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15f64:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15f68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15f6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f70:	48 89 ce             	mov    %rcx,%rsi
   15f73:	48 89 c7             	mov    %rax,%rdi
   15f76:	e8 f4 11 00 00       	call   1716f <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   15f7b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15f7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15f83:	c9                   	leave
   15f84:	c3                   	ret
   15f85:	90                   	nop

0000000000015f86 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15f86:	55                   	push   %rbp
   15f87:	48 89 e5             	mov    %rsp,%rbp
   15f8a:	48 83 ec 20          	sub    $0x20,%rsp
   15f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15f96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f9e:	48 89 c7             	mov    %rax,%rdi
   15fa1:	e8 0e 12 00 00       	call   171b4 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   15fa6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15faa:	0f 92 c0             	setb   %al
   15fad:	0f b6 c0             	movzbl %al,%eax
   15fb0:	48 85 c0             	test   %rax,%rax
   15fb3:	0f 95 c0             	setne  %al
   15fb6:	84 c0                	test   %al,%al
   15fb8:	74 1a                	je     15fd4 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15fba:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15fc1:	ff ff 1f 
   15fc4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15fc8:	73 05                	jae    15fcf <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15fca:	e8 f1 e2 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15fcf:	e8 2c e1 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15fd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15fd8:	48 c1 e0 03          	shl    $0x3,%rax
   15fdc:	48 89 c7             	mov    %rax,%rdi
   15fdf:	e8 2c e4 fe ff       	call   4410 <_Znwm@plt>
   15fe4:	90                   	nop
      }
   15fe5:	c9                   	leave
   15fe6:	c3                   	ret

0000000000015fe7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   15fe7:	55                   	push   %rbp
   15fe8:	48 89 e5             	mov    %rsp,%rbp
   15feb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15fef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ff3:	5d                   	pop    %rbp
   15ff4:	c3                   	ret

0000000000015ff5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15ff5:	55                   	push   %rbp
   15ff6:	48 89 e5             	mov    %rsp,%rbp
   15ff9:	48 83 ec 30          	sub    $0x30,%rsp
   15ffd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16001:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16005:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16009:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1600d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16011:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16015:	48 c1 f8 03          	sar    $0x3,%rax
   16019:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1601d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16022:	7e 1f                	jle    16043 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16028:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1602f:	00 
   16030:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16034:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16038:	48 89 ce             	mov    %rcx,%rsi
   1603b:	48 89 c7             	mov    %rax,%rdi
   1603e:	e8 6d e7 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   16043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16047:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1604e:	00 
   1604f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16053:	48 01 d0             	add    %rdx,%rax
    }
   16056:	c9                   	leave
   16057:	c3                   	ret

0000000000016058 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   16058:	55                   	push   %rbp
   16059:	48 89 e5             	mov    %rsp,%rbp
   1605c:	48 83 ec 10          	sub    $0x10,%rsp
   16060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   16064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16068:	48 89 c7             	mov    %rax,%rdi
   1606b:	e8 58 11 00 00       	call   171c8 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
   16070:	c9                   	leave
   16071:	c3                   	ret

0000000000016072 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   16072:	55                   	push   %rbp
   16073:	48 89 e5             	mov    %rsp,%rbp
   16076:	48 83 ec 10          	sub    $0x10,%rsp
   1607a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1607e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   16082:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1608a:	ba 00 00 00 00       	mov    $0x0,%edx
   1608f:	48 89 ce             	mov    %rcx,%rsi
   16092:	48 89 c7             	mov    %rax,%rdi
   16095:	e8 42 11 00 00       	call   171dc <_ZNSt15__new_allocatorIcE8allocateEmPKv>
   1609a:	c9                   	leave
   1609b:	c3                   	ret

000000000001609c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1609c:	55                   	push   %rbp
   1609d:	48 89 e5             	mov    %rsp,%rbp
   160a0:	48 83 ec 20          	sub    $0x20,%rsp
   160a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   160a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   160ac:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   160b1:	74 40                	je     160f3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
   160b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160b7:	48 89 c7             	mov    %rax,%rdi
   160ba:	e8 dc ee ff ff       	call   14f9b <_ZSt11__addressofIcEPT_RS0_>
   160bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   160c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160c7:	48 89 c7             	mov    %rax,%rdi
   160ca:	e8 55 11 00 00       	call   17224 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
   160cf:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   160d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   160d8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   160dc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   160e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160e4:	48 89 ce             	mov    %rcx,%rsi
   160e7:	48 89 c7             	mov    %rax,%rdi
   160ea:	e8 58 11 00 00       	call   17247 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
   160ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   160f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   160f7:	c9                   	leave
   160f8:	c3                   	ret
   160f9:	90                   	nop

00000000000160fa <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   160fa:	55                   	push   %rbp
   160fb:	48 89 e5             	mov    %rsp,%rbp
   160fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16102:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16106:	90                   	nop
   16107:	5d                   	pop    %rbp
   16108:	c3                   	ret
   16109:	90                   	nop

000000000001610a <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1610a:	55                   	push   %rbp
   1610b:	48 89 e5             	mov    %rsp,%rbp
   1610e:	48 83 ec 20          	sub    $0x20,%rsp
   16112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1611a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1611e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16122:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16129:	00 
   1612a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1612e:	48 89 d6             	mov    %rdx,%rsi
   16131:	48 89 c7             	mov    %rax,%rdi
   16134:	e8 f7 e2 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   16139:	c9                   	leave
   1613a:	c3                   	ret

000000000001613b <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1613b:	55                   	push   %rbp
   1613c:	48 89 e5             	mov    %rsp,%rbp
   1613f:	48 83 ec 10          	sub    $0x10,%rsp
   16143:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1614b:	48 89 c7             	mov    %rax,%rdi
   1614e:	e8 39 11 00 00       	call   1728c <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>
      }
   16153:	c9                   	leave
   16154:	c3                   	ret
   16155:	90                   	nop

0000000000016156 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16156:	55                   	push   %rbp
   16157:	48 89 e5             	mov    %rsp,%rbp
   1615a:	48 83 ec 20          	sub    $0x20,%rsp
   1615e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16166:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1616a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1616e:	48 89 c7             	mov    %rax,%rdi
   16171:	e8 30 11 00 00       	call   172a6 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   16176:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1617a:	0f 92 c0             	setb   %al
   1617d:	0f b6 c0             	movzbl %al,%eax
   16180:	48 85 c0             	test   %rax,%rax
   16183:	0f 95 c0             	setne  %al
   16186:	84 c0                	test   %al,%al
   16188:	74 1a                	je     161a4 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1618a:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   16191:	ff ff 3f 
   16194:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16198:	73 05                	jae    1619f <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1619a:	e8 21 e1 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1619f:	e8 5c df fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   161a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161a8:	48 c1 e0 02          	shl    $0x2,%rax
   161ac:	48 89 c7             	mov    %rax,%rdi
   161af:	e8 5c e2 fe ff       	call   4410 <_Znwm@plt>
   161b4:	90                   	nop
      }
   161b5:	c9                   	leave
   161b6:	c3                   	ret

00000000000161b7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   161b7:	55                   	push   %rbp
   161b8:	48 89 e5             	mov    %rsp,%rbp
   161bb:	48 83 ec 20          	sub    $0x20,%rsp
   161bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   161cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   161cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   161d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161d7:	48 89 ce             	mov    %rcx,%rsi
   161da:	48 89 c7             	mov    %rax,%rdi
   161dd:	e8 d8 10 00 00       	call   172ba <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
   161e2:	c9                   	leave
   161e3:	c3                   	ret

00000000000161e4 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   161e4:	55                   	push   %rbp
   161e5:	48 89 e5             	mov    %rsp,%rbp
   161e8:	48 83 ec 10          	sub    $0x10,%rsp
   161ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   161f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161f4:	48 89 c7             	mov    %rax,%rdi
   161f7:	e8 0a 11 00 00       	call   17306 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   161fc:	c9                   	leave
   161fd:	c3                   	ret

00000000000161fe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   161fe:	55                   	push   %rbp
   161ff:	48 89 e5             	mov    %rsp,%rbp
   16202:	48 83 ec 20          	sub    $0x20,%rsp
   16206:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1620a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1620e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16213:	74 40                	je     16255 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16219:	48 89 c7             	mov    %rax,%rdi
   1621c:	e8 ff 10 00 00       	call   17320 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   16221:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16229:	48 89 c7             	mov    %rax,%rdi
   1622c:	e8 fd 10 00 00       	call   1732e <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   16231:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16236:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1623a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1623e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16242:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16246:	48 89 ce             	mov    %rcx,%rsi
   16249:	48 89 c7             	mov    %rax,%rdi
   1624c:	e8 04 11 00 00       	call   17355 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   16251:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16255:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16259:	c9                   	leave
   1625a:	c3                   	ret
   1625b:	90                   	nop

000000000001625c <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1625c:	55                   	push   %rbp
   1625d:	48 89 e5             	mov    %rsp,%rbp
   16260:	48 83 ec 20          	sub    $0x20,%rsp
   16264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1626c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16274:	48 89 c7             	mov    %rax,%rdi
   16277:	e8 1e 11 00 00       	call   1739a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1627c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16280:	0f 92 c0             	setb   %al
   16283:	0f b6 c0             	movzbl %al,%eax
   16286:	48 85 c0             	test   %rax,%rax
   16289:	0f 95 c0             	setne  %al
   1628c:	84 c0                	test   %al,%al
   1628e:	74 1a                	je     162aa <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16290:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16297:	ff ff 1f 
   1629a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1629e:	73 05                	jae    162a5 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   162a0:	e8 1b e0 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   162a5:	e8 56 de fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   162aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   162ae:	48 c1 e0 03          	shl    $0x3,%rax
   162b2:	48 89 c7             	mov    %rax,%rdi
   162b5:	e8 56 e1 fe ff       	call   4410 <_Znwm@plt>
   162ba:	90                   	nop
      }
   162bb:	c9                   	leave
   162bc:	c3                   	ret

00000000000162bd <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   162bd:	55                   	push   %rbp
   162be:	48 89 e5             	mov    %rsp,%rbp
   162c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   162c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162c9:	5d                   	pop    %rbp
   162ca:	c3                   	ret

00000000000162cb <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   162cb:	55                   	push   %rbp
   162cc:	48 89 e5             	mov    %rsp,%rbp
   162cf:	48 83 ec 30          	sub    $0x30,%rsp
   162d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   162d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   162db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   162df:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   162e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   162e7:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   162eb:	48 c1 f8 03          	sar    $0x3,%rax
   162ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   162f3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   162f8:	7e 1f                	jle    16319 <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   162fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16305:	00 
   16306:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1630a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1630e:	48 89 ce             	mov    %rcx,%rsi
   16311:	48 89 c7             	mov    %rax,%rdi
   16314:	e8 97 e4 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   16319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1631d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16324:	00 
   16325:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16329:	48 01 d0             	add    %rdx,%rax
    }
   1632c:	c9                   	leave
   1632d:	c3                   	ret

000000000001632e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1632e:	55                   	push   %rbp
   1632f:	48 89 e5             	mov    %rsp,%rbp
   16332:	48 83 ec 10          	sub    $0x10,%rsp
   16336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1633a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1633e:	48 89 c7             	mov    %rax,%rdi
   16341:	e8 68 10 00 00       	call   173ae <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
   16346:	c9                   	leave
   16347:	c3                   	ret

0000000000016348 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16348:	55                   	push   %rbp
   16349:	48 89 e5             	mov    %rsp,%rbp
   1634c:	48 83 ec 20          	sub    $0x20,%rsp
   16350:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16354:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16358:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1635d:	74 40                	je     1639f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1635f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16363:	48 89 c7             	mov    %rax,%rdi
   16366:	e8 5d 10 00 00       	call   173c8 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
   1636b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1636f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16373:	48 89 c7             	mov    %rax,%rdi
   16376:	e8 5b 10 00 00       	call   173d6 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
   1637b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16380:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16384:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16388:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1638c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16390:	48 89 ce             	mov    %rcx,%rsi
   16393:	48 89 c7             	mov    %rax,%rdi
   16396:	e8 62 10 00 00       	call   173fd <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
   1639b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1639f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   163a3:	c9                   	leave
   163a4:	c3                   	ret
   163a5:	90                   	nop

00000000000163a6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   163a6:	55                   	push   %rbp
   163a7:	48 89 e5             	mov    %rsp,%rbp
   163aa:	48 83 ec 20          	sub    $0x20,%rsp
   163ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   163ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163be:	48 89 c7             	mov    %rax,%rdi
   163c1:	e8 7c 10 00 00       	call   17442 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
   163c6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   163ca:	0f 92 c0             	setb   %al
   163cd:	0f b6 c0             	movzbl %al,%eax
   163d0:	48 85 c0             	test   %rax,%rax
   163d3:	0f 95 c0             	setne  %al
   163d6:	84 c0                	test   %al,%al
   163d8:	74 1a                	je     163f4 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   163da:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   163e1:	ff ff 1f 
   163e4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   163e8:	73 05                	jae    163ef <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   163ea:	e8 d1 de fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   163ef:	e8 0c dd fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   163f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   163f8:	48 c1 e0 03          	shl    $0x3,%rax
   163fc:	48 89 c7             	mov    %rax,%rdi
   163ff:	e8 0c e0 fe ff       	call   4410 <_Znwm@plt>
   16404:	90                   	nop
      }
   16405:	c9                   	leave
   16406:	c3                   	ret

0000000000016407 <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   16407:	55                   	push   %rbp
   16408:	48 89 e5             	mov    %rsp,%rbp
   1640b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1640f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16413:	5d                   	pop    %rbp
   16414:	c3                   	ret

0000000000016415 <_ZSt14__relocate_a_1IP17VkCommandBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16415:	55                   	push   %rbp
   16416:	48 89 e5             	mov    %rsp,%rbp
   16419:	48 83 ec 30          	sub    $0x30,%rsp
   1641d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16421:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16425:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16429:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1642d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16431:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16435:	48 c1 f8 03          	sar    $0x3,%rax
   16439:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1643d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16442:	7e 1f                	jle    16463 <_ZSt14__relocate_a_1IP17VkCommandBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16448:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1644f:	00 
   16450:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16454:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16458:	48 89 ce             	mov    %rcx,%rsi
   1645b:	48 89 c7             	mov    %rax,%rdi
   1645e:	e8 4d e3 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   16463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16467:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1646e:	00 
   1646f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16473:	48 01 d0             	add    %rdx,%rax
    }
   16476:	c9                   	leave
   16477:	c3                   	ret

0000000000016478 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16478:	55                   	push   %rbp
   16479:	48 89 e5             	mov    %rsp,%rbp
   1647c:	48 83 ec 10          	sub    $0x10,%rsp
   16480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16488:	48 89 c7             	mov    %rax,%rdi
   1648b:	e8 c6 0f 00 00       	call   17456 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   16490:	c9                   	leave
   16491:	c3                   	ret

0000000000016492 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16492:	55                   	push   %rbp
   16493:	48 89 e5             	mov    %rsp,%rbp
   16496:	48 83 ec 20          	sub    $0x20,%rsp
   1649a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1649e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   164a2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   164a7:	74 40                	je     164e9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   164a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164ad:	48 89 c7             	mov    %rax,%rdi
   164b0:	e8 bb 0f 00 00       	call   17470 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   164b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   164b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164bd:	48 89 c7             	mov    %rax,%rdi
   164c0:	e8 b9 0f 00 00       	call   1747e <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   164c5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   164ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164ce:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   164d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   164d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164da:	48 89 ce             	mov    %rcx,%rsi
   164dd:	48 89 c7             	mov    %rax,%rdi
   164e0:	e8 c0 0f 00 00       	call   174a5 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   164e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   164e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   164ed:	c9                   	leave
   164ee:	c3                   	ret
   164ef:	90                   	nop

00000000000164f0 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   164f0:	55                   	push   %rbp
   164f1:	48 89 e5             	mov    %rsp,%rbp
   164f4:	48 83 ec 20          	sub    $0x20,%rsp
   164f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   164fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16500:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16508:	48 89 c7             	mov    %rax,%rdi
   1650b:	e8 da 0f 00 00       	call   174ea <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   16510:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16514:	0f 92 c0             	setb   %al
   16517:	0f b6 c0             	movzbl %al,%eax
   1651a:	48 85 c0             	test   %rax,%rax
   1651d:	0f 95 c0             	setne  %al
   16520:	84 c0                	test   %al,%al
   16522:	74 1a                	je     1653e <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16524:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1652b:	ff ff 1f 
   1652e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16532:	73 05                	jae    16539 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16534:	e8 87 dd fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16539:	e8 c2 db fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1653e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16542:	48 c1 e0 03          	shl    $0x3,%rax
   16546:	48 89 c7             	mov    %rax,%rdi
   16549:	e8 c2 de fe ff       	call   4410 <_Znwm@plt>
   1654e:	90                   	nop
      }
   1654f:	c9                   	leave
   16550:	c3                   	ret

0000000000016551 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   16551:	55                   	push   %rbp
   16552:	48 89 e5             	mov    %rsp,%rbp
   16555:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1655d:	5d                   	pop    %rbp
   1655e:	c3                   	ret

000000000001655f <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1655f:	55                   	push   %rbp
   16560:	48 89 e5             	mov    %rsp,%rbp
   16563:	48 83 ec 30          	sub    $0x30,%rsp
   16567:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1656b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1656f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16573:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16577:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1657b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1657f:	48 c1 f8 03          	sar    $0x3,%rax
   16583:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16587:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1658c:	7e 1f                	jle    165ad <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1658e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16592:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16599:	00 
   1659a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1659e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165a2:	48 89 ce             	mov    %rcx,%rsi
   165a5:	48 89 c7             	mov    %rax,%rdi
   165a8:	e8 03 e2 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   165ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   165b8:	00 
   165b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165bd:	48 01 d0             	add    %rdx,%rax
    }
   165c0:	c9                   	leave
   165c1:	c3                   	ret

00000000000165c2 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   165c2:	55                   	push   %rbp
   165c3:	48 89 e5             	mov    %rsp,%rbp
   165c6:	48 83 ec 10          	sub    $0x10,%rsp
   165ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   165ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165d2:	48 89 c7             	mov    %rax,%rdi
   165d5:	e8 24 0f 00 00       	call   174fe <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   165da:	c9                   	leave
   165db:	c3                   	ret

00000000000165dc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   165dc:	55                   	push   %rbp
   165dd:	48 89 e5             	mov    %rsp,%rbp
   165e0:	48 83 ec 20          	sub    $0x20,%rsp
   165e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   165e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   165ec:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   165f1:	74 40                	je     16633 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   165f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165f7:	48 89 c7             	mov    %rax,%rdi
   165fa:	e8 19 0f 00 00       	call   17518 <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   165ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16607:	48 89 c7             	mov    %rax,%rdi
   1660a:	e8 17 0f 00 00       	call   17526 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   1660f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16614:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16618:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1661c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16624:	48 89 ce             	mov    %rcx,%rsi
   16627:	48 89 c7             	mov    %rax,%rdi
   1662a:	e8 1e 0f 00 00       	call   1754d <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   1662f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16637:	c9                   	leave
   16638:	c3                   	ret
   16639:	90                   	nop

000000000001663a <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1663a:	55                   	push   %rbp
   1663b:	48 89 e5             	mov    %rsp,%rbp
   1663e:	48 83 ec 20          	sub    $0x20,%rsp
   16642:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16646:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1664a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1664e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16652:	48 89 c7             	mov    %rax,%rdi
   16655:	e8 38 0f 00 00       	call   17592 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   1665a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1665e:	0f 92 c0             	setb   %al
   16661:	0f b6 c0             	movzbl %al,%eax
   16664:	48 85 c0             	test   %rax,%rax
   16667:	0f 95 c0             	setne  %al
   1666a:	84 c0                	test   %al,%al
   1666c:	74 1a                	je     16688 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1666e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16675:	ff ff 1f 
   16678:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1667c:	73 05                	jae    16683 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1667e:	e8 3d dc fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16683:	e8 78 da fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1668c:	48 c1 e0 03          	shl    $0x3,%rax
   16690:	48 89 c7             	mov    %rax,%rdi
   16693:	e8 78 dd fe ff       	call   4410 <_Znwm@plt>
   16698:	90                   	nop
      }
   16699:	c9                   	leave
   1669a:	c3                   	ret

000000000001669b <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   1669b:	55                   	push   %rbp
   1669c:	48 89 e5             	mov    %rsp,%rbp
   1669f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   166a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166a7:	5d                   	pop    %rbp
   166a8:	c3                   	ret

00000000000166a9 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   166a9:	55                   	push   %rbp
   166aa:	48 89 e5             	mov    %rsp,%rbp
   166ad:	48 83 ec 30          	sub    $0x30,%rsp
   166b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   166b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   166b9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   166bd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   166c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   166c5:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   166c9:	48 c1 f8 03          	sar    $0x3,%rax
   166cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   166d1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   166d6:	7e 1f                	jle    166f7 <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   166d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   166e3:	00 
   166e4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   166e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166ec:	48 89 ce             	mov    %rcx,%rsi
   166ef:	48 89 c7             	mov    %rax,%rdi
   166f2:	e8 b9 e0 fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   166f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166fb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16702:	00 
   16703:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16707:	48 01 d0             	add    %rdx,%rax
    }
   1670a:	c9                   	leave
   1670b:	c3                   	ret

000000000001670c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1670c:	55                   	push   %rbp
   1670d:	48 89 e5             	mov    %rsp,%rbp
   16710:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16714:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1671b:	07 7e 00 
      }
   1671e:	5d                   	pop    %rbp
   1671f:	c3                   	ret

0000000000016720 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16720:	55                   	push   %rbp
   16721:	48 89 e5             	mov    %rsp,%rbp
   16724:	48 83 ec 20          	sub    $0x20,%rsp
   16728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1672c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16730:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16738:	48 89 c7             	mov    %rax,%rdi
   1673b:	e8 cc ff ff ff       	call   1670c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   16740:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16744:	0f 92 c0             	setb   %al
   16747:	0f b6 c0             	movzbl %al,%eax
   1674a:	48 85 c0             	test   %rax,%rax
   1674d:	0f 95 c0             	setne  %al
   16750:	84 c0                	test   %al,%al
   16752:	74 1a                	je     1676e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16754:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
   1675b:	0f fc 00 
   1675e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16762:	73 05                	jae    16769 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16764:	e8 57 db fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16769:	e8 92 d9 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1676e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16772:	48 89 d0             	mov    %rdx,%rax
   16775:	48 c1 e0 06          	shl    $0x6,%rax
   16779:	48 01 d0             	add    %rdx,%rax
   1677c:	48 c1 e0 02          	shl    $0x2,%rax
   16780:	48 89 c7             	mov    %rax,%rdi
   16783:	e8 88 dc fe ff       	call   4410 <_Znwm@plt>
   16788:	90                   	nop
      }
   16789:	c9                   	leave
   1678a:	c3                   	ret

000000000001678b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1678b:	55                   	push   %rbp
   1678c:	48 89 e5             	mov    %rsp,%rbp
   1678f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16797:	5d                   	pop    %rbp
   16798:	c3                   	ret

0000000000016799 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16799:	55                   	push   %rbp
   1679a:	48 89 e5             	mov    %rsp,%rbp
   1679d:	48 83 ec 10          	sub    $0x10,%rsp
   167a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   167a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167a9:	48 89 c6             	mov    %rax,%rsi
   167ac:	bf 04 01 00 00       	mov    $0x104,%edi
   167b1:	e8 61 54 ff ff       	call   bc17 <_ZnwmPv>
   167b6:	b9 04 01 00 00       	mov    $0x104,%ecx
   167bb:	be 00 00 00 00       	mov    $0x0,%esi
   167c0:	48 89 30             	mov    %rsi,(%rax)
   167c3:	89 ca                	mov    %ecx,%edx
   167c5:	48 01 c2             	add    %rax,%rdx
   167c8:	48 83 c2 08          	add    $0x8,%rdx
   167cc:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   167d0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   167d4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   167d8:	48 29 d0             	sub    %rdx,%rax
   167db:	01 c1                	add    %eax,%ecx
   167dd:	83 e1 f8             	and    $0xfffffff8,%ecx
   167e0:	89 c8                	mov    %ecx,%eax
   167e2:	c1 e8 03             	shr    $0x3,%eax
   167e5:	89 c1                	mov    %eax,%ecx
   167e7:	48 89 d7             	mov    %rdx,%rdi
   167ea:	48 89 f0             	mov    %rsi,%rax
   167ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   167f0:	90                   	nop
   167f1:	c9                   	leave
   167f2:	c3                   	ret

00000000000167f3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   167f3:	55                   	push   %rbp
   167f4:	48 89 e5             	mov    %rsp,%rbp
   167f7:	48 83 ec 20          	sub    $0x20,%rsp
   167fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16803:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
   16807:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1680b:	48 89 c7             	mov    %rax,%rdi
   1680e:	e8 93 0d 00 00       	call   175a6 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   16813:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16817:	48 89 c7             	mov    %rax,%rdi
   1681a:	e8 4b 54 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   1681f:	48 89 c1             	mov    %rax,%rcx
   16822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16826:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1682a:	48 89 ce             	mov    %rcx,%rsi
   1682d:	48 89 c7             	mov    %rax,%rdi
   16830:	e8 7c 0d 00 00       	call   175b1 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   16835:	c9                   	leave
   16836:	c3                   	ret

0000000000016837 <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   16837:	55                   	push   %rbp
   16838:	48 89 e5             	mov    %rsp,%rbp
   1683b:	53                   	push   %rbx
   1683c:	48 83 ec 28          	sub    $0x28,%rsp
   16840:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16844:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16848:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1684c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16850:	48 89 c7             	mov    %rax,%rdi
   16853:	e8 c8 0d 00 00       	call   17620 <_ZSt12__miter_baseIPPKcET_S3_>
   16858:	48 89 c3             	mov    %rax,%rbx
   1685b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1685f:	48 89 c7             	mov    %rax,%rdi
   16862:	e8 b9 0d 00 00       	call   17620 <_ZSt12__miter_baseIPPKcET_S3_>
   16867:	48 89 c1             	mov    %rax,%rcx
   1686a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1686e:	48 89 c2             	mov    %rax,%rdx
   16871:	48 89 de             	mov    %rbx,%rsi
   16874:	48 89 cf             	mov    %rcx,%rdi
   16877:	e8 b2 0d 00 00       	call   1762e <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>
    }
   1687c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16880:	c9                   	leave
   16881:	c3                   	ret

0000000000016882 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   16882:	55                   	push   %rbp
   16883:	48 89 e5             	mov    %rsp,%rbp
   16886:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1688a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1688e:	5d                   	pop    %rbp
   1688f:	c3                   	ret

0000000000016890 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16890:	55                   	push   %rbp
   16891:	48 89 e5             	mov    %rsp,%rbp
   16894:	48 83 ec 30          	sub    $0x30,%rsp
   16898:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1689c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   168a0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   168a4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   168a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   168ac:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   168b0:	48 c1 f8 03          	sar    $0x3,%rax
   168b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   168b8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   168bd:	7e 1f                	jle    168de <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   168bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168c3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   168ca:	00 
   168cb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   168cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168d3:	48 89 ce             	mov    %rcx,%rsi
   168d6:	48 89 c7             	mov    %rax,%rdi
   168d9:	e8 d2 de fe ff       	call   47b0 <memmove@plt>
      return __result + __count;
   168de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168e2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   168e9:	00 
   168ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   168ee:	48 01 d0             	add    %rdx,%rax
    }
   168f1:	c9                   	leave
   168f2:	c3                   	ret
   168f3:	90                   	nop

00000000000168f4 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   168f4:	55                   	push   %rbp
   168f5:	48 89 e5             	mov    %rsp,%rbp
   168f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   168fc:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   16903:	03 3f 00 
      }
   16906:	5d                   	pop    %rbp
   16907:	c3                   	ret

0000000000016908 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16908:	55                   	push   %rbp
   16909:	48 89 e5             	mov    %rsp,%rbp
   1690c:	48 83 ec 20          	sub    $0x20,%rsp
   16910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16918:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1691c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16920:	48 89 c7             	mov    %rax,%rdi
   16923:	e8 cc ff ff ff       	call   168f4 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
   16928:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1692c:	0f 92 c0             	setb   %al
   1692f:	0f b6 c0             	movzbl %al,%eax
   16932:	48 85 c0             	test   %rax,%rax
   16935:	0f 95 c0             	setne  %al
   16938:	84 c0                	test   %al,%al
   1693a:	74 1a                	je     16956 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1693c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   16943:	07 7e 00 
   16946:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1694a:	73 05                	jae    16951 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1694c:	e8 6f d9 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16951:	e8 aa d7 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16956:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1695a:	48 89 d0             	mov    %rdx,%rax
   1695d:	48 c1 e0 06          	shl    $0x6,%rax
   16961:	48 01 d0             	add    %rdx,%rax
   16964:	48 c1 e0 03          	shl    $0x3,%rax
   16968:	48 89 c7             	mov    %rax,%rdi
   1696b:	e8 a0 da fe ff       	call   4410 <_Znwm@plt>
   16970:	90                   	nop
      }
   16971:	c9                   	leave
   16972:	c3                   	ret

0000000000016973 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16973:	55                   	push   %rbp
   16974:	48 89 e5             	mov    %rsp,%rbp
   16977:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1697b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1697f:	5d                   	pop    %rbp
   16980:	c3                   	ret

0000000000016981 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16981:	55                   	push   %rbp
   16982:	48 89 e5             	mov    %rsp,%rbp
   16985:	48 83 ec 10          	sub    $0x10,%rsp
   16989:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1698d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16991:	48 89 c6             	mov    %rax,%rsi
   16994:	bf 08 02 00 00       	mov    $0x208,%edi
   16999:	e8 79 52 ff ff       	call   bc17 <_ZnwmPv>
   1699e:	b9 08 02 00 00       	mov    $0x208,%ecx
   169a3:	be 00 00 00 00       	mov    $0x0,%esi
   169a8:	48 89 30             	mov    %rsi,(%rax)
   169ab:	89 ca                	mov    %ecx,%edx
   169ad:	48 01 c2             	add    %rax,%rdx
   169b0:	48 83 c2 08          	add    $0x8,%rdx
   169b4:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   169b8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   169bc:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   169c0:	48 29 d0             	sub    %rdx,%rax
   169c3:	01 c1                	add    %eax,%ecx
   169c5:	83 e1 f8             	and    $0xfffffff8,%ecx
   169c8:	89 c8                	mov    %ecx,%eax
   169ca:	c1 e8 03             	shr    $0x3,%eax
   169cd:	89 c1                	mov    %eax,%ecx
   169cf:	48 89 d7             	mov    %rdx,%rdi
   169d2:	48 89 f0             	mov    %rsi,%rax
   169d5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   169d8:	90                   	nop
   169d9:	c9                   	leave
   169da:	c3                   	ret

00000000000169db <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   169db:	55                   	push   %rbp
   169dc:	48 89 e5             	mov    %rsp,%rbp
   169df:	48 83 ec 20          	sub    $0x20,%rsp
   169e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   169eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   169ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   169f3:	48 89 c7             	mov    %rax,%rdi
   169f6:	e8 9d 0c 00 00       	call   17698 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   169fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   169ff:	48 89 c7             	mov    %rax,%rdi
   16a02:	e8 63 52 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   16a07:	48 89 c1             	mov    %rax,%rcx
   16a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16a12:	48 89 ce             	mov    %rcx,%rsi
   16a15:	48 89 c7             	mov    %rax,%rdi
   16a18:	e8 86 0c 00 00       	call   176a3 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   16a1d:	c9                   	leave
   16a1e:	c3                   	ret
   16a1f:	90                   	nop

0000000000016a20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>:
      _M_get_node()
   16a20:	55                   	push   %rbp
   16a21:	48 89 e5             	mov    %rsp,%rbp
   16a24:	48 83 ec 10          	sub    $0x10,%rsp
   16a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   16a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a30:	48 89 c7             	mov    %rax,%rdi
   16a33:	e8 a8 e9 ff ff       	call   153e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   16a38:	be 01 00 00 00       	mov    $0x1,%esi
   16a3d:	48 89 c7             	mov    %rax,%rdi
   16a40:	e8 cd 0c 00 00       	call   17712 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>
   16a45:	c9                   	leave
   16a46:	c3                   	ret
   16a47:	90                   	nop

0000000000016a48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   16a48:	55                   	push   %rbp
   16a49:	48 89 e5             	mov    %rsp,%rbp
   16a4c:	41 54                	push   %r12
   16a4e:	53                   	push   %rbx
   16a4f:	48 83 ec 20          	sub    $0x20,%rsp
   16a53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16a57:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16a5b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   16a5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16a63:	48 89 c6             	mov    %rax,%rsi
   16a66:	bf 40 00 00 00       	mov    $0x40,%edi
   16a6b:	e8 a7 51 ff ff       	call   bc17 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   16a70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16a74:	48 89 c7             	mov    %rax,%rdi
   16a77:	e8 45 ca ff ff       	call   134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   16a7c:	49 89 c4             	mov    %rax,%r12
   16a7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16a83:	48 89 c7             	mov    %rax,%rdi
   16a86:	e8 63 e9 ff ff       	call   153ee <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   16a8b:	48 89 c3             	mov    %rax,%rbx
   16a8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a92:	48 89 c7             	mov    %rax,%rdi
   16a95:	e8 46 e9 ff ff       	call   153e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   16a9a:	4c 89 e2             	mov    %r12,%rdx
   16a9d:	48 89 de             	mov    %rbx,%rsi
   16aa0:	48 89 c7             	mov    %rax,%rdi
   16aa3:	e8 94 0c 00 00       	call   1773c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>
	}
   16aa8:	eb 33                	jmp    16add <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_+0x95>
	  __catch(...)
   16aaa:	48 89 c7             	mov    %rax,%rdi
   16aad:	e8 7e d6 fe ff       	call   4130 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   16ab2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16ab6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16aba:	48 89 d6             	mov    %rdx,%rsi
   16abd:	48 89 c7             	mov    %rax,%rdi
   16ac0:	e8 0f cd ff ff       	call   137d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
	      __throw_exception_again;
   16ac5:	e8 26 dc fe ff       	call   46f0 <__cxa_rethrow@plt>
	  __catch(...)
   16aca:	48 89 c3             	mov    %rax,%rbx
   16acd:	e8 ee dc fe ff       	call   47c0 <__cxa_end_catch@plt>
   16ad2:	48 89 d8             	mov    %rbx,%rax
   16ad5:	48 89 c7             	mov    %rax,%rdi
   16ad8:	e8 63 dd fe ff       	call   4840 <_Unwind_Resume@plt>
	}
   16add:	48 83 c4 20          	add    $0x20,%rsp
   16ae1:	5b                   	pop    %rbx
   16ae2:	41 5c                	pop    %r12
   16ae4:	5d                   	pop    %rbp
   16ae5:	c3                   	ret

0000000000016ae6 <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16ae6:	55                   	push   %rbp
   16ae7:	48 89 e5             	mov    %rsp,%rbp
   16aea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   16aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16af2:	5d                   	pop    %rbp
   16af3:	c3                   	ret

0000000000016af4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16af4:	55                   	push   %rbp
   16af5:	48 89 e5             	mov    %rsp,%rbp
   16af8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   16afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b00:	5d                   	pop    %rbp
   16b01:	c3                   	ret

0000000000016b02 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
   16b02:	55                   	push   %rbp
   16b03:	48 89 e5             	mov    %rsp,%rbp
   16b06:	48 83 ec 10          	sub    $0x10,%rsp
   16b0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   16b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b12:	48 89 c7             	mov    %rax,%rdi
   16b15:	e8 5c 0c 00 00       	call   17776 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
   16b1a:	c9                   	leave
   16b1b:	c3                   	ret

0000000000016b1c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>:
	destroy(_Up* __p)
   16b1c:	55                   	push   %rbp
   16b1d:	48 89 e5             	mov    %rsp,%rbp
   16b20:	48 83 ec 10          	sub    $0x10,%rsp
   16b24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   16b2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16b30:	48 89 c7             	mov    %rax,%rdi
   16b33:	e8 f8 d6 fe ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   16b38:	90                   	nop
   16b39:	c9                   	leave
   16b3a:	c3                   	ret
   16b3b:	90                   	nop

0000000000016b3c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16b3c:	55                   	push   %rbp
   16b3d:	48 89 e5             	mov    %rsp,%rbp
   16b40:	48 83 ec 20          	sub    $0x20,%rsp
   16b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16b4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16b50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b54:	48 c1 e0 06          	shl    $0x6,%rax
   16b58:	48 89 c2             	mov    %rax,%rdx
   16b5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16b5f:	48 89 d6             	mov    %rdx,%rsi
   16b62:	48 89 c7             	mov    %rax,%rdi
   16b65:	e8 c6 d8 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   16b6a:	c9                   	leave
   16b6b:	c3                   	ret

0000000000016b6c <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
   16b6c:	55                   	push   %rbp
   16b6d:	48 89 e5             	mov    %rsp,%rbp
   16b70:	48 83 ec 10          	sub    $0x10,%rsp
   16b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   16b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b7c:	48 89 c7             	mov    %rax,%rdi
   16b7f:	e8 00 0c 00 00       	call   17784 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
   16b84:	c9                   	leave
   16b85:	c3                   	ret

0000000000016b86 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   16b86:	55                   	push   %rbp
   16b87:	48 89 e5             	mov    %rsp,%rbp
   16b8a:	48 83 ec 10          	sub    $0x10,%rsp
   16b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   16b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b96:	48 89 c7             	mov    %rax,%rdi
   16b99:	e8 82 00 00 00       	call   16c20 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
   16b9e:	c9                   	leave
   16b9f:	c3                   	ret

0000000000016ba0 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16ba0:	55                   	push   %rbp
   16ba1:	48 89 e5             	mov    %rsp,%rbp
   16ba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bac:	5d                   	pop    %rbp
   16bad:	c3                   	ret

0000000000016bae <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16bae:	55                   	push   %rbp
   16baf:	48 89 e5             	mov    %rsp,%rbp
   16bb2:	48 83 ec 10          	sub    $0x10,%rsp
   16bb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   16bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bbe:	48 89 c6             	mov    %rax,%rsi
   16bc1:	bf 08 00 00 00       	mov    $0x8,%edi
   16bc6:	e8 4c 50 ff ff       	call   bc17 <_ZnwmPv>
   16bcb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   16bd1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
   16bd8:	90                   	nop
   16bd9:	c9                   	leave
   16bda:	c3                   	ret

0000000000016bdb <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   16bdb:	55                   	push   %rbp
   16bdc:	48 89 e5             	mov    %rsp,%rbp
   16bdf:	48 83 ec 20          	sub    $0x20,%rsp
   16be3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16be7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16beb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   16bef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16bf3:	48 89 c7             	mov    %rax,%rdi
   16bf6:	e8 97 0b 00 00       	call   17792 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   16bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16bff:	48 89 c7             	mov    %rax,%rdi
   16c02:	e8 63 50 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   16c07:	48 89 c1             	mov    %rax,%rcx
   16c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16c12:	48 89 ce             	mov    %rcx,%rsi
   16c15:	48 89 c7             	mov    %rax,%rdi
   16c18:	e8 80 0b 00 00       	call   1779d <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   16c1d:	c9                   	leave
   16c1e:	c3                   	ret
   16c1f:	90                   	nop

0000000000016c20 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16c20:	55                   	push   %rbp
   16c21:	48 89 e5             	mov    %rsp,%rbp
   16c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16c28:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   16c2f:	ff ff 0f 
      }
   16c32:	5d                   	pop    %rbp
   16c33:	c3                   	ret

0000000000016c34 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   16c34:	55                   	push   %rbp
   16c35:	48 89 e5             	mov    %rsp,%rbp
   16c38:	48 83 ec 10          	sub    $0x10,%rsp
   16c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   16c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c44:	48 89 c7             	mov    %rax,%rdi
   16c47:	e8 7a 00 00 00       	call   16cc6 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
   16c4c:	c9                   	leave
   16c4d:	c3                   	ret

0000000000016c4e <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16c4e:	55                   	push   %rbp
   16c4f:	48 89 e5             	mov    %rsp,%rbp
   16c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c5a:	5d                   	pop    %rbp
   16c5b:	c3                   	ret

0000000000016c5c <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16c5c:	55                   	push   %rbp
   16c5d:	48 89 e5             	mov    %rsp,%rbp
   16c60:	48 83 ec 10          	sub    $0x10,%rsp
   16c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   16c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c6c:	48 89 c6             	mov    %rax,%rsi
   16c6f:	bf 04 00 00 00       	mov    $0x4,%edi
   16c74:	e8 9e 4f ff ff       	call   bc17 <_ZnwmPv>
   16c79:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
   16c7f:	90                   	nop
   16c80:	c9                   	leave
   16c81:	c3                   	ret

0000000000016c82 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   16c82:	55                   	push   %rbp
   16c83:	48 89 e5             	mov    %rsp,%rbp
   16c86:	48 83 ec 20          	sub    $0x20,%rsp
   16c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16c92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   16c96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16c9a:	48 89 c7             	mov    %rax,%rdi
   16c9d:	e8 58 0b 00 00       	call   177fa <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   16ca2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ca6:	48 89 c7             	mov    %rax,%rdi
   16ca9:	e8 bc 4f ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   16cae:	48 89 c1             	mov    %rax,%rcx
   16cb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cb5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16cb9:	48 89 ce             	mov    %rcx,%rsi
   16cbc:	48 89 c7             	mov    %rax,%rdi
   16cbf:	e8 41 0b 00 00       	call   17805 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   16cc4:	c9                   	leave
   16cc5:	c3                   	ret

0000000000016cc6 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16cc6:	55                   	push   %rbp
   16cc7:	48 89 e5             	mov    %rsp,%rbp
   16cca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16cce:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16cd5:	ff ff 1f 
      }
   16cd8:	5d                   	pop    %rbp
   16cd9:	c3                   	ret

0000000000016cda <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16cda:	55                   	push   %rbp
   16cdb:	48 89 e5             	mov    %rsp,%rbp
   16cde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16ce2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   16ce9:	ff ff 0f 
      }
   16cec:	5d                   	pop    %rbp
   16ced:	c3                   	ret

0000000000016cee <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16cee:	55                   	push   %rbp
   16cef:	48 89 e5             	mov    %rsp,%rbp
   16cf2:	48 83 ec 20          	sub    $0x20,%rsp
   16cf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16cfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16cfe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16d02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d06:	48 89 c7             	mov    %rax,%rdi
   16d09:	e8 cc ff ff ff       	call   16cda <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   16d0e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16d12:	0f 92 c0             	setb   %al
   16d15:	0f b6 c0             	movzbl %al,%eax
   16d18:	48 85 c0             	test   %rax,%rax
   16d1b:	0f 95 c0             	setne  %al
   16d1e:	84 c0                	test   %al,%al
   16d20:	74 1a                	je     16d3c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16d22:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16d29:	ff ff 1f 
   16d2c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16d30:	73 05                	jae    16d37 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16d32:	e8 89 d5 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16d37:	e8 c4 d3 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16d3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d40:	48 c1 e0 03          	shl    $0x3,%rax
   16d44:	48 89 c7             	mov    %rax,%rdi
   16d47:	e8 c4 d6 fe ff       	call   4410 <_Znwm@plt>
   16d4c:	90                   	nop
      }
   16d4d:	c9                   	leave
   16d4e:	c3                   	ret

0000000000016d4f <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16d4f:	55                   	push   %rbp
   16d50:	48 89 e5             	mov    %rsp,%rbp
   16d53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d5b:	5d                   	pop    %rbp
   16d5c:	c3                   	ret

0000000000016d5d <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16d5d:	55                   	push   %rbp
   16d5e:	48 89 e5             	mov    %rsp,%rbp
   16d61:	48 83 ec 10          	sub    $0x10,%rsp
   16d65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   16d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d6d:	48 89 c6             	mov    %rax,%rsi
   16d70:	bf 08 00 00 00       	mov    $0x8,%edi
   16d75:	e8 9d 4e ff ff       	call   bc17 <_ZnwmPv>
   16d7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   16d81:	90                   	nop
   16d82:	c9                   	leave
   16d83:	c3                   	ret

0000000000016d84 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   16d84:	55                   	push   %rbp
   16d85:	48 89 e5             	mov    %rsp,%rbp
   16d88:	48 83 ec 20          	sub    $0x20,%rsp
   16d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16d94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   16d98:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16d9c:	48 89 c7             	mov    %rax,%rdi
   16d9f:	e8 be 0a 00 00       	call   17862 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   16da4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16da8:	48 89 c7             	mov    %rax,%rdi
   16dab:	e8 ba 4e ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   16db0:	48 89 c1             	mov    %rax,%rcx
   16db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16db7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16dbb:	48 89 ce             	mov    %rcx,%rsi
   16dbe:	48 89 c7             	mov    %rax,%rdi
   16dc1:	e8 a7 0a 00 00       	call   1786d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   16dc6:	c9                   	leave
   16dc7:	c3                   	ret

0000000000016dc8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   16dc8:	55                   	push   %rbp
   16dc9:	48 89 e5             	mov    %rsp,%rbp
   16dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   16dd0:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   16dd7:	55 55 05 
      }
   16dda:	5d                   	pop    %rbp
   16ddb:	c3                   	ret

0000000000016ddc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16ddc:	55                   	push   %rbp
   16ddd:	48 89 e5             	mov    %rsp,%rbp
   16de0:	48 83 ec 20          	sub    $0x20,%rsp
   16de4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16de8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16dec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16df4:	48 89 c7             	mov    %rax,%rdi
   16df7:	e8 cc ff ff ff       	call   16dc8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   16dfc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16e00:	0f 92 c0             	setb   %al
   16e03:	0f b6 c0             	movzbl %al,%eax
   16e06:	48 85 c0             	test   %rax,%rax
   16e09:	0f 95 c0             	setne  %al
   16e0c:	84 c0                	test   %al,%al
   16e0e:	74 1a                	je     16e2a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16e10:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
   16e17:	aa aa 0a 
   16e1a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16e1e:	73 05                	jae    16e25 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16e20:	e8 9b d4 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16e25:	e8 d6 d2 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16e2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16e2e:	48 89 d0             	mov    %rdx,%rax
   16e31:	48 01 c0             	add    %rax,%rax
   16e34:	48 01 d0             	add    %rdx,%rax
   16e37:	48 c1 e0 03          	shl    $0x3,%rax
   16e3b:	48 89 c7             	mov    %rax,%rdi
   16e3e:	e8 cd d5 fe ff       	call   4410 <_Znwm@plt>
   16e43:	90                   	nop
      }
   16e44:	c9                   	leave
   16e45:	c3                   	ret

0000000000016e46 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   16e46:	55                   	push   %rbp
   16e47:	48 89 e5             	mov    %rsp,%rbp
   16e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   16e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e52:	5d                   	pop    %rbp
   16e53:	c3                   	ret

0000000000016e54 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   16e54:	55                   	push   %rbp
   16e55:	48 89 e5             	mov    %rsp,%rbp
   16e58:	48 83 ec 10          	sub    $0x10,%rsp
   16e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   16e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e64:	48 89 c6             	mov    %rax,%rsi
   16e67:	bf 18 00 00 00       	mov    $0x18,%edi
   16e6c:	e8 a6 4d ff ff       	call   bc17 <_ZnwmPv>
   16e71:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   16e77:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   16e7e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   16e85:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   16e8c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   16e93:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
   16e9a:	90                   	nop
   16e9b:	c9                   	leave
   16e9c:	c3                   	ret

0000000000016e9d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   16e9d:	55                   	push   %rbp
   16e9e:	48 89 e5             	mov    %rsp,%rbp
   16ea1:	48 83 ec 20          	sub    $0x20,%rsp
   16ea5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ea9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16ead:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   16eb1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16eb5:	48 89 c7             	mov    %rax,%rdi
   16eb8:	e8 0d 0a 00 00       	call   178ca <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   16ebd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16ec1:	48 89 c7             	mov    %rax,%rdi
   16ec4:	e8 a1 4d ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   16ec9:	48 89 c1             	mov    %rax,%rcx
   16ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ed0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16ed4:	48 89 ce             	mov    %rcx,%rsi
   16ed7:	48 89 c7             	mov    %rax,%rdi
   16eda:	e8 f6 09 00 00       	call   178d5 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   16edf:	c9                   	leave
   16ee0:	c3                   	ret

0000000000016ee1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>:
      _S_key(_Const_Link_type __x)
   16ee1:	55                   	push   %rbp
   16ee2:	48 89 e5             	mov    %rsp,%rbp
   16ee5:	48 83 ec 20          	sub    $0x20,%rsp
   16ee9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   16eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ef1:	48 89 c7             	mov    %rax,%rdi
   16ef4:	e8 d5 88 ff ff       	call   f7ce <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
   16ef9:	48 89 c2             	mov    %rax,%rdx
   16efc:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   16f00:	48 89 d6             	mov    %rdx,%rsi
   16f03:	48 89 c7             	mov    %rax,%rdi
   16f06:	e8 ef d5 ff ff       	call   144fa <_ZNKSt9_IdentityIjEclERKj>
      }
   16f0b:	c9                   	leave
   16f0c:	c3                   	ret
   16f0d:	90                   	nop

0000000000016f0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   16f0e:	55                   	push   %rbp
   16f0f:	48 89 e5             	mov    %rsp,%rbp
   16f12:	48 83 ec 20          	sub    $0x20,%rsp
   16f16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   16f1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f1e:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16f22:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16f26:	48 89 d6             	mov    %rdx,%rsi
   16f29:	48 89 c7             	mov    %rax,%rdi
   16f2c:	e8 61 d1 ff ff       	call   14092 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   16f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f35:	c9                   	leave
   16f36:	c3                   	ret

0000000000016f37 <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   16f37:	55                   	push   %rbp
   16f38:	48 89 e5             	mov    %rsp,%rbp
   16f3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   16f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f47:	48 8b 10             	mov    (%rax),%rdx
   16f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f4e:	48 8b 00             	mov    (%rax),%rax
   16f51:	48 39 c2             	cmp    %rax,%rdx
   16f54:	0f 94 c0             	sete   %al
   16f57:	5d                   	pop    %rbp
   16f58:	c3                   	ret
   16f59:	90                   	nop

0000000000016f5a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   16f5a:	55                   	push   %rbp
   16f5b:	48 89 e5             	mov    %rsp,%rbp
   16f5e:	48 83 ec 20          	sub    $0x20,%rsp
   16f62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   16f6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f72:	48 89 c7             	mov    %rax,%rdi
   16f75:	e8 c8 09 00 00       	call   17942 <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>
   16f7a:	48 8b 10             	mov    (%rax),%rdx
   16f7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f81:	48 89 10             	mov    %rdx,(%rax)
   16f84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f88:	48 89 c7             	mov    %rax,%rdi
   16f8b:	e8 64 fb ff ff       	call   16af4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   16f90:	48 8b 10             	mov    (%rax),%rdx
   16f93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f97:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16f9b:	90                   	nop
   16f9c:	c9                   	leave
   16f9d:	c3                   	ret

0000000000016f9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_create_node(_Args&&... __args)
   16f9e:	55                   	push   %rbp
   16f9f:	48 89 e5             	mov    %rsp,%rbp
   16fa2:	48 83 ec 20          	sub    $0x20,%rsp
   16fa6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16faa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
   16fae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fb2:	48 89 c7             	mov    %rax,%rdi
   16fb5:	e8 96 09 00 00       	call   17950 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>
   16fba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   16fbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16fc2:	48 89 c7             	mov    %rax,%rdi
   16fc5:	e8 42 d5 ff ff       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   16fca:	48 89 c2             	mov    %rax,%rdx
   16fcd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   16fd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fd5:	48 89 ce             	mov    %rcx,%rsi
   16fd8:	48 89 c7             	mov    %rax,%rdi
   16fdb:	e8 98 09 00 00       	call   17978 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>
	  return __tmp;
   16fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   16fe4:	c9                   	leave
   16fe5:	c3                   	ret

0000000000016fe6 <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _M_ptr() noexcept
   16fe6:	55                   	push   %rbp
   16fe7:	48 89 e5             	mov    %rsp,%rbp
   16fea:	48 83 ec 10          	sub    $0x10,%rsp
   16fee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   16ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ff6:	48 89 c7             	mov    %rax,%rdi
   16ff9:	e8 e4 09 00 00       	call   179e2 <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
   16ffe:	c9                   	leave
   16fff:	c3                   	ret

0000000000017000 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>:
	destroy(_Up* __p)
   17000:	55                   	push   %rbp
   17001:	48 89 e5             	mov    %rsp,%rbp
   17004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17008:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   1700c:	90                   	nop
   1700d:	5d                   	pop    %rbp
   1700e:	c3                   	ret
   1700f:	90                   	nop

0000000000017010 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17010:	55                   	push   %rbp
   17011:	48 89 e5             	mov    %rsp,%rbp
   17014:	48 83 ec 20          	sub    $0x20,%rsp
   17018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1701c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17020:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   17024:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17028:	48 89 d0             	mov    %rdx,%rax
   1702b:	48 c1 e0 02          	shl    $0x2,%rax
   1702f:	48 01 d0             	add    %rdx,%rax
   17032:	48 c1 e0 03          	shl    $0x3,%rax
   17036:	48 89 c2             	mov    %rax,%rdx
   17039:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1703d:	48 89 d6             	mov    %rdx,%rsi
   17040:	48 89 c7             	mov    %rax,%rdi
   17043:	e8 e8 d3 fe ff       	call   4430 <_ZdlPvm@plt>
      }
   17048:	c9                   	leave
   17049:	c3                   	ret

000000000001704a <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1704a:	55                   	push   %rbp
   1704b:	48 89 e5             	mov    %rsp,%rbp
   1704e:	48 83 ec 10          	sub    $0x10,%rsp
   17052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   17056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1705a:	48 89 c7             	mov    %rax,%rdi
   1705d:	e8 8e 09 00 00       	call   179f0 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>
      }
   17062:	c9                   	leave
   17063:	c3                   	ret

0000000000017064 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17064:	55                   	push   %rbp
   17065:	48 89 e5             	mov    %rsp,%rbp
   17068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1706c:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   17073:	33 33 03 
      }
   17076:	5d                   	pop    %rbp
   17077:	c3                   	ret

0000000000017078 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17078:	55                   	push   %rbp
   17079:	48 89 e5             	mov    %rsp,%rbp
   1707c:	48 83 ec 10          	sub    $0x10,%rsp
   17080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17088:	48 89 c7             	mov    %rax,%rdi
   1708b:	e8 7c 00 00 00       	call   1710c <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
   17090:	c9                   	leave
   17091:	c3                   	ret

0000000000017092 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17092:	55                   	push   %rbp
   17093:	48 89 e5             	mov    %rsp,%rbp
   17096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1709a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1709e:	5d                   	pop    %rbp
   1709f:	c3                   	ret

00000000000170a0 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   170a0:	55                   	push   %rbp
   170a1:	48 89 e5             	mov    %rsp,%rbp
   170a4:	48 83 ec 10          	sub    $0x10,%rsp
   170a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   170ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170b0:	48 89 c6             	mov    %rax,%rsi
   170b3:	bf 08 00 00 00       	mov    $0x8,%edi
   170b8:	e8 5a 4b ff ff       	call   bc17 <_ZnwmPv>
   170bd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   170c4:	90                   	nop
   170c5:	c9                   	leave
   170c6:	c3                   	ret

00000000000170c7 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   170c7:	55                   	push   %rbp
   170c8:	48 89 e5             	mov    %rsp,%rbp
   170cb:	48 83 ec 20          	sub    $0x20,%rsp
   170cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   170d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   170db:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   170df:	48 89 c7             	mov    %rax,%rdi
   170e2:	e8 23 09 00 00       	call   17a0a <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   170e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   170eb:	48 89 c7             	mov    %rax,%rdi
   170ee:	e8 77 4b ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   170f3:	48 89 c1             	mov    %rax,%rcx
   170f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   170fe:	48 89 ce             	mov    %rcx,%rsi
   17101:	48 89 c7             	mov    %rax,%rdi
   17104:	e8 0c 09 00 00       	call   17a15 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17109:	c9                   	leave
   1710a:	c3                   	ret
   1710b:	90                   	nop

000000000001710c <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1710c:	55                   	push   %rbp
   1710d:	48 89 e5             	mov    %rsp,%rbp
   17110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17114:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1711b:	ff ff 0f 
      }
   1711e:	5d                   	pop    %rbp
   1711f:	c3                   	ret

0000000000017120 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17120:	55                   	push   %rbp
   17121:	48 89 e5             	mov    %rsp,%rbp
   17124:	48 83 ec 10          	sub    $0x10,%rsp
   17128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1712c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17130:	48 89 c7             	mov    %rax,%rdi
   17133:	e8 7c 00 00 00       	call   171b4 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   17138:	c9                   	leave
   17139:	c3                   	ret

000000000001713a <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1713a:	55                   	push   %rbp
   1713b:	48 89 e5             	mov    %rsp,%rbp
   1713e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17146:	5d                   	pop    %rbp
   17147:	c3                   	ret

0000000000017148 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17148:	55                   	push   %rbp
   17149:	48 89 e5             	mov    %rsp,%rbp
   1714c:	48 83 ec 10          	sub    $0x10,%rsp
   17150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17158:	48 89 c6             	mov    %rax,%rsi
   1715b:	bf 08 00 00 00       	mov    $0x8,%edi
   17160:	e8 b2 4a ff ff       	call   bc17 <_ZnwmPv>
   17165:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1716c:	90                   	nop
   1716d:	c9                   	leave
   1716e:	c3                   	ret

000000000001716f <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1716f:	55                   	push   %rbp
   17170:	48 89 e5             	mov    %rsp,%rbp
   17173:	48 83 ec 20          	sub    $0x20,%rsp
   17177:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1717b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1717f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17183:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17187:	48 89 c7             	mov    %rax,%rdi
   1718a:	e8 e3 08 00 00       	call   17a72 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1718f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17193:	48 89 c7             	mov    %rax,%rdi
   17196:	e8 cf 4a ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   1719b:	48 89 c1             	mov    %rax,%rcx
   1719e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   171a6:	48 89 ce             	mov    %rcx,%rsi
   171a9:	48 89 c7             	mov    %rax,%rdi
   171ac:	e8 cc 08 00 00       	call   17a7d <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   171b1:	c9                   	leave
   171b2:	c3                   	ret
   171b3:	90                   	nop

00000000000171b4 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   171b4:	55                   	push   %rbp
   171b5:	48 89 e5             	mov    %rsp,%rbp
   171b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   171bc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   171c3:	ff ff 0f 
      }
   171c6:	5d                   	pop    %rbp
   171c7:	c3                   	ret

00000000000171c8 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   171c8:	55                   	push   %rbp
   171c9:	48 89 e5             	mov    %rsp,%rbp
   171cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   171d0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   171d7:	ff ff 7f 
      }
   171da:	5d                   	pop    %rbp
   171db:	c3                   	ret

00000000000171dc <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   171dc:	55                   	push   %rbp
   171dd:	48 89 e5             	mov    %rsp,%rbp
   171e0:	48 83 ec 20          	sub    $0x20,%rsp
   171e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   171ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   171f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171f4:	48 89 c7             	mov    %rax,%rdi
   171f7:	e8 cc ff ff ff       	call   171c8 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
   171fc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17200:	0f 92 c0             	setb   %al
   17203:	0f b6 c0             	movzbl %al,%eax
   17206:	48 85 c0             	test   %rax,%rax
   17209:	0f 95 c0             	setne  %al
   1720c:	84 c0                	test   %al,%al
   1720e:	74 05                	je     17215 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
   17210:	e8 eb ce fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   17215:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17219:	48 89 c7             	mov    %rax,%rdi
   1721c:	e8 ef d1 fe ff       	call   4410 <_Znwm@plt>
   17221:	90                   	nop
      }
   17222:	c9                   	leave
   17223:	c3                   	ret

0000000000017224 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17224:	55                   	push   %rbp
   17225:	48 89 e5             	mov    %rsp,%rbp
   17228:	48 83 ec 10          	sub    $0x10,%rsp
   1722c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17234:	48 89 c6             	mov    %rax,%rsi
   17237:	bf 01 00 00 00       	mov    $0x1,%edi
   1723c:	e8 d6 49 ff ff       	call   bc17 <_ZnwmPv>
   17241:	c6 00 00             	movb   $0x0,(%rax)
    }
   17244:	90                   	nop
   17245:	c9                   	leave
   17246:	c3                   	ret

0000000000017247 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17247:	55                   	push   %rbp
   17248:	48 89 e5             	mov    %rsp,%rbp
   1724b:	48 83 ec 20          	sub    $0x20,%rsp
   1724f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17253:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17257:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1725b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1725f:	48 89 c7             	mov    %rax,%rdi
   17262:	e8 b4 9b ff ff       	call   10e1b <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17267:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1726b:	48 89 c7             	mov    %rax,%rdi
   1726e:	e8 f7 49 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   17273:	48 89 c1             	mov    %rax,%rcx
   17276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1727a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1727e:	48 89 ce             	mov    %rcx,%rsi
   17281:	48 89 c7             	mov    %rax,%rdi
   17284:	e8 51 08 00 00       	call   17ada <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
   17289:	c9                   	leave
   1728a:	c3                   	ret
   1728b:	90                   	nop

000000000001728c <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1728c:	55                   	push   %rbp
   1728d:	48 89 e5             	mov    %rsp,%rbp
   17290:	48 83 ec 10          	sub    $0x10,%rsp
   17294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1729c:	48 89 c7             	mov    %rax,%rdi
   1729f:	e8 02 00 00 00       	call   172a6 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   172a4:	c9                   	leave
   172a5:	c3                   	ret

00000000000172a6 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   172a6:	55                   	push   %rbp
   172a7:	48 89 e5             	mov    %rsp,%rbp
   172aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   172ae:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   172b5:	ff ff 1f 
      }
   172b8:	5d                   	pop    %rbp
   172b9:	c3                   	ret

00000000000172ba <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   172ba:	55                   	push   %rbp
   172bb:	48 89 e5             	mov    %rsp,%rbp
   172be:	53                   	push   %rbx
   172bf:	48 83 ec 28          	sub    $0x28,%rsp
   172c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   172c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   172cb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   172cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   172d3:	48 89 c7             	mov    %rax,%rdi
   172d6:	e8 4c 08 00 00       	call   17b27 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   172db:	48 89 c3             	mov    %rax,%rbx
   172de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   172e2:	48 89 c7             	mov    %rax,%rdi
   172e5:	e8 3d 08 00 00       	call   17b27 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   172ea:	48 89 c1             	mov    %rax,%rcx
   172ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   172f1:	48 89 c2             	mov    %rax,%rdx
   172f4:	48 89 de             	mov    %rbx,%rsi
   172f7:	48 89 cf             	mov    %rcx,%rdi
   172fa:	e8 36 08 00 00       	call   17b35 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
    }
   172ff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17303:	c9                   	leave
   17304:	c3                   	ret
   17305:	90                   	nop

0000000000017306 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17306:	55                   	push   %rbp
   17307:	48 89 e5             	mov    %rsp,%rbp
   1730a:	48 83 ec 10          	sub    $0x10,%rsp
   1730e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17316:	48 89 c7             	mov    %rax,%rdi
   17319:	e8 7c 00 00 00       	call   1739a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1731e:	c9                   	leave
   1731f:	c3                   	ret

0000000000017320 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17320:	55                   	push   %rbp
   17321:	48 89 e5             	mov    %rsp,%rbp
   17324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1732c:	5d                   	pop    %rbp
   1732d:	c3                   	ret

000000000001732e <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1732e:	55                   	push   %rbp
   1732f:	48 89 e5             	mov    %rsp,%rbp
   17332:	48 83 ec 10          	sub    $0x10,%rsp
   17336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1733a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1733e:	48 89 c6             	mov    %rax,%rsi
   17341:	bf 08 00 00 00       	mov    $0x8,%edi
   17346:	e8 cc 48 ff ff       	call   bc17 <_ZnwmPv>
   1734b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17352:	90                   	nop
   17353:	c9                   	leave
   17354:	c3                   	ret

0000000000017355 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17355:	55                   	push   %rbp
   17356:	48 89 e5             	mov    %rsp,%rbp
   17359:	48 83 ec 20          	sub    $0x20,%rsp
   1735d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17361:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17365:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17369:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1736d:	48 89 c7             	mov    %rax,%rdi
   17370:	e8 2a 08 00 00       	call   17b9f <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17375:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17379:	48 89 c7             	mov    %rax,%rdi
   1737c:	e8 e9 48 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   17381:	48 89 c1             	mov    %rax,%rcx
   17384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17388:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1738c:	48 89 ce             	mov    %rcx,%rsi
   1738f:	48 89 c7             	mov    %rax,%rdi
   17392:	e8 13 08 00 00       	call   17baa <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17397:	c9                   	leave
   17398:	c3                   	ret
   17399:	90                   	nop

000000000001739a <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1739a:	55                   	push   %rbp
   1739b:	48 89 e5             	mov    %rsp,%rbp
   1739e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   173a2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   173a9:	ff ff 0f 
      }
   173ac:	5d                   	pop    %rbp
   173ad:	c3                   	ret

00000000000173ae <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   173ae:	55                   	push   %rbp
   173af:	48 89 e5             	mov    %rsp,%rbp
   173b2:	48 83 ec 10          	sub    $0x10,%rsp
   173b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   173ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173be:	48 89 c7             	mov    %rax,%rdi
   173c1:	e8 7c 00 00 00       	call   17442 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
   173c6:	c9                   	leave
   173c7:	c3                   	ret

00000000000173c8 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   173c8:	55                   	push   %rbp
   173c9:	48 89 e5             	mov    %rsp,%rbp
   173cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   173d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173d4:	5d                   	pop    %rbp
   173d5:	c3                   	ret

00000000000173d6 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   173d6:	55                   	push   %rbp
   173d7:	48 89 e5             	mov    %rsp,%rbp
   173da:	48 83 ec 10          	sub    $0x10,%rsp
   173de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   173e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173e6:	48 89 c6             	mov    %rax,%rsi
   173e9:	bf 08 00 00 00       	mov    $0x8,%edi
   173ee:	e8 24 48 ff ff       	call   bc17 <_ZnwmPv>
   173f3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   173fa:	90                   	nop
   173fb:	c9                   	leave
   173fc:	c3                   	ret

00000000000173fd <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   173fd:	55                   	push   %rbp
   173fe:	48 89 e5             	mov    %rsp,%rbp
   17401:	48 83 ec 20          	sub    $0x20,%rsp
   17405:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17409:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1740d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17411:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17415:	48 89 c7             	mov    %rax,%rdi
   17418:	e8 ea 07 00 00       	call   17c07 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1741d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17421:	48 89 c7             	mov    %rax,%rdi
   17424:	e8 41 48 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   17429:	48 89 c1             	mov    %rax,%rcx
   1742c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17430:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17434:	48 89 ce             	mov    %rcx,%rsi
   17437:	48 89 c7             	mov    %rax,%rdi
   1743a:	e8 d3 07 00 00       	call   17c12 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1743f:	c9                   	leave
   17440:	c3                   	ret
   17441:	90                   	nop

0000000000017442 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17442:	55                   	push   %rbp
   17443:	48 89 e5             	mov    %rsp,%rbp
   17446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1744a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17451:	ff ff 0f 
      }
   17454:	5d                   	pop    %rbp
   17455:	c3                   	ret

0000000000017456 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17456:	55                   	push   %rbp
   17457:	48 89 e5             	mov    %rsp,%rbp
   1745a:	48 83 ec 10          	sub    $0x10,%rsp
   1745e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17466:	48 89 c7             	mov    %rax,%rdi
   17469:	e8 7c 00 00 00       	call   174ea <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   1746e:	c9                   	leave
   1746f:	c3                   	ret

0000000000017470 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17470:	55                   	push   %rbp
   17471:	48 89 e5             	mov    %rsp,%rbp
   17474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1747c:	5d                   	pop    %rbp
   1747d:	c3                   	ret

000000000001747e <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1747e:	55                   	push   %rbp
   1747f:	48 89 e5             	mov    %rsp,%rbp
   17482:	48 83 ec 10          	sub    $0x10,%rsp
   17486:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1748a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1748e:	48 89 c6             	mov    %rax,%rsi
   17491:	bf 08 00 00 00       	mov    $0x8,%edi
   17496:	e8 7c 47 ff ff       	call   bc17 <_ZnwmPv>
   1749b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   174a2:	90                   	nop
   174a3:	c9                   	leave
   174a4:	c3                   	ret

00000000000174a5 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   174a5:	55                   	push   %rbp
   174a6:	48 89 e5             	mov    %rsp,%rbp
   174a9:	48 83 ec 20          	sub    $0x20,%rsp
   174ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   174b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   174b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   174bd:	48 89 c7             	mov    %rax,%rdi
   174c0:	e8 aa 07 00 00       	call   17c6f <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   174c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   174c9:	48 89 c7             	mov    %rax,%rdi
   174cc:	e8 99 47 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   174d1:	48 89 c1             	mov    %rax,%rcx
   174d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   174dc:	48 89 ce             	mov    %rcx,%rsi
   174df:	48 89 c7             	mov    %rax,%rdi
   174e2:	e8 93 07 00 00       	call   17c7a <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   174e7:	c9                   	leave
   174e8:	c3                   	ret
   174e9:	90                   	nop

00000000000174ea <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   174ea:	55                   	push   %rbp
   174eb:	48 89 e5             	mov    %rsp,%rbp
   174ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   174f2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   174f9:	ff ff 0f 
      }
   174fc:	5d                   	pop    %rbp
   174fd:	c3                   	ret

00000000000174fe <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   174fe:	55                   	push   %rbp
   174ff:	48 89 e5             	mov    %rsp,%rbp
   17502:	48 83 ec 10          	sub    $0x10,%rsp
   17506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1750a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1750e:	48 89 c7             	mov    %rax,%rdi
   17511:	e8 7c 00 00 00       	call   17592 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   17516:	c9                   	leave
   17517:	c3                   	ret

0000000000017518 <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17518:	55                   	push   %rbp
   17519:	48 89 e5             	mov    %rsp,%rbp
   1751c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17524:	5d                   	pop    %rbp
   17525:	c3                   	ret

0000000000017526 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17526:	55                   	push   %rbp
   17527:	48 89 e5             	mov    %rsp,%rbp
   1752a:	48 83 ec 10          	sub    $0x10,%rsp
   1752e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17536:	48 89 c6             	mov    %rax,%rsi
   17539:	bf 08 00 00 00       	mov    $0x8,%edi
   1753e:	e8 d4 46 ff ff       	call   bc17 <_ZnwmPv>
   17543:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1754a:	90                   	nop
   1754b:	c9                   	leave
   1754c:	c3                   	ret

000000000001754d <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1754d:	55                   	push   %rbp
   1754e:	48 89 e5             	mov    %rsp,%rbp
   17551:	48 83 ec 20          	sub    $0x20,%rsp
   17555:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17559:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1755d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17561:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17565:	48 89 c7             	mov    %rax,%rdi
   17568:	e8 6a 07 00 00       	call   17cd7 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1756d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17571:	48 89 c7             	mov    %rax,%rdi
   17574:	e8 f1 46 ff ff       	call   bc6a <_ZSt17__size_to_integerm>
   17579:	48 89 c1             	mov    %rax,%rcx
   1757c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17580:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17584:	48 89 ce             	mov    %rcx,%rsi
   17587:	48 89 c7             	mov    %rax,%rdi
   1758a:	e8 53 07 00 00       	call   17ce2 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1758f:	c9                   	leave
   17590:	c3                   	ret
   17591:	90                   	nop

0000000000017592 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17592:	55                   	push   %rbp
   17593:	48 89 e5             	mov    %rsp,%rbp
   17596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1759a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   175a1:	ff ff 0f 
      }
   175a4:	5d                   	pop    %rbp
   175a5:	c3                   	ret

00000000000175a6 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   175a6:	55                   	push   %rbp
   175a7:	48 89 e5             	mov    %rsp,%rbp
   175aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   175ae:	90                   	nop
   175af:	5d                   	pop    %rbp
   175b0:	c3                   	ret

00000000000175b1 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   175b1:	55                   	push   %rbp
   175b2:	48 89 e5             	mov    %rsp,%rbp
   175b5:	48 83 ec 20          	sub    $0x20,%rsp
   175b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   175bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   175c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   175c5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   175ca:	75 06                	jne    175d2 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   175cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175d0:	eb 4c                	jmp    1761e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   175d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   175d6:	48 89 d0             	mov    %rdx,%rax
   175d9:	48 c1 e0 06          	shl    $0x6,%rax
   175dd:	48 01 d0             	add    %rdx,%rax
   175e0:	48 c1 e0 02          	shl    $0x2,%rax
   175e4:	48 89 c2             	mov    %rax,%rdx
   175e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175eb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   175ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   175f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175f7:	48 89 ce             	mov    %rcx,%rsi
   175fa:	48 89 c7             	mov    %rax,%rdi
   175fd:	e8 3d 07 00 00       	call   17d3f <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   17602:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17606:	48 89 d0             	mov    %rdx,%rax
   17609:	48 c1 e0 06          	shl    $0x6,%rax
   1760d:	48 01 d0             	add    %rdx,%rax
   17610:	48 c1 e0 02          	shl    $0x2,%rax
   17614:	48 89 c2             	mov    %rax,%rdx
   17617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1761b:	48 01 d0             	add    %rdx,%rax
    }
   1761e:	c9                   	leave
   1761f:	c3                   	ret

0000000000017620 <_ZSt12__miter_baseIPPKcET_S3_>:
    __miter_base(_Iterator __it)
   17620:	55                   	push   %rbp
   17621:	48 89 e5             	mov    %rsp,%rbp
   17624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1762c:	5d                   	pop    %rbp
   1762d:	c3                   	ret

000000000001762e <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1762e:	55                   	push   %rbp
   1762f:	48 89 e5             	mov    %rsp,%rbp
   17632:	41 54                	push   %r12
   17634:	53                   	push   %rbx
   17635:	48 83 ec 20          	sub    $0x20,%rsp
   17639:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1763d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17641:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17645:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17649:	48 89 c7             	mov    %rax,%rdi
   1764c:	e8 07 f8 fe ff       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
   17651:	49 89 c4             	mov    %rax,%r12
   17654:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17658:	48 89 c7             	mov    %rax,%rdi
   1765b:	e8 f8 f7 fe ff       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
   17660:	48 89 c3             	mov    %rax,%rbx
   17663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17667:	48 89 c7             	mov    %rax,%rdi
   1766a:	e8 e9 f7 fe ff       	call   6e58 <_ZSt12__niter_baseIPPKcET_S3_>
   1766f:	4c 89 e2             	mov    %r12,%rdx
   17672:	48 89 de             	mov    %rbx,%rsi
   17675:	48 89 c7             	mov    %rax,%rdi
   17678:	e8 f0 06 00 00       	call   17d6d <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>
   1767d:	48 89 c2             	mov    %rax,%rdx
   17680:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17684:	48 89 d6             	mov    %rdx,%rsi
   17687:	48 89 c7             	mov    %rax,%rdi
   1768a:	e8 04 f8 fe ff       	call   6e93 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1768f:	48 83 c4 20          	add    $0x20,%rsp
   17693:	5b                   	pop    %rbx
   17694:	41 5c                	pop    %r12
   17696:	5d                   	pop    %rbp
   17697:	c3                   	ret

0000000000017698 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   17698:	55                   	push   %rbp
   17699:	48 89 e5             	mov    %rsp,%rbp
   1769c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   176a0:	90                   	nop
   176a1:	5d                   	pop    %rbp
   176a2:	c3                   	ret

00000000000176a3 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   176a3:	55                   	push   %rbp
   176a4:	48 89 e5             	mov    %rsp,%rbp
   176a7:	48 83 ec 20          	sub    $0x20,%rsp
   176ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   176b3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   176b7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   176bc:	75 06                	jne    176c4 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   176be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176c2:	eb 4c                	jmp    17710 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   176c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176c8:	48 89 d0             	mov    %rdx,%rax
   176cb:	48 c1 e0 06          	shl    $0x6,%rax
   176cf:	48 01 d0             	add    %rdx,%rax
   176d2:	48 c1 e0 03          	shl    $0x3,%rax
   176d6:	48 89 c2             	mov    %rax,%rdx
   176d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176dd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   176e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   176e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176e9:	48 89 ce             	mov    %rcx,%rsi
   176ec:	48 89 c7             	mov    %rax,%rdi
   176ef:	e8 a6 06 00 00       	call   17d9a <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   176f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176f8:	48 89 d0             	mov    %rdx,%rax
   176fb:	48 c1 e0 06          	shl    $0x6,%rax
   176ff:	48 01 d0             	add    %rdx,%rax
   17702:	48 c1 e0 03          	shl    $0x3,%rax
   17706:	48 89 c2             	mov    %rax,%rdx
   17709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1770d:	48 01 d0             	add    %rdx,%rax
    }
   17710:	c9                   	leave
   17711:	c3                   	ret

0000000000017712 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>:
      allocate(allocator_type& __a, size_type __n)
   17712:	55                   	push   %rbp
   17713:	48 89 e5             	mov    %rsp,%rbp
   17716:	48 83 ec 10          	sub    $0x10,%rsp
   1771a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1771e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17722:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1772a:	ba 00 00 00 00       	mov    $0x0,%edx
   1772f:	48 89 ce             	mov    %rcx,%rsi
   17732:	48 89 c7             	mov    %rax,%rdi
   17735:	e8 8e 06 00 00       	call   17dc8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>
   1773a:	c9                   	leave
   1773b:	c3                   	ret

000000000001773c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1773c:	55                   	push   %rbp
   1773d:	48 89 e5             	mov    %rsp,%rbp
   17740:	48 83 ec 20          	sub    $0x20,%rsp
   17744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1774c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   17750:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17754:	48 89 c7             	mov    %rax,%rdi
   17757:	e8 65 bd ff ff       	call   134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   1775c:	48 89 c2             	mov    %rax,%rdx
   1775f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17767:	48 89 ce             	mov    %rcx,%rsi
   1776a:	48 89 c7             	mov    %rax,%rdi
   1776d:	e8 b8 06 00 00       	call   17e2a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>
	}
   17772:	90                   	nop
   17773:	c9                   	leave
   17774:	c3                   	ret
   17775:	90                   	nop

0000000000017776 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
   17776:	55                   	push   %rbp
   17777:	48 89 e5             	mov    %rsp,%rbp
   1777a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1777e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17782:	5d                   	pop    %rbp
   17783:	c3                   	ret

0000000000017784 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
   17784:	55                   	push   %rbp
   17785:	48 89 e5             	mov    %rsp,%rbp
   17788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1778c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17790:	5d                   	pop    %rbp
   17791:	c3                   	ret

0000000000017792 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   17792:	55                   	push   %rbp
   17793:	48 89 e5             	mov    %rsp,%rbp
   17796:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1779a:	90                   	nop
   1779b:	5d                   	pop    %rbp
   1779c:	c3                   	ret

000000000001779d <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1779d:	55                   	push   %rbp
   1779e:	48 89 e5             	mov    %rsp,%rbp
   177a1:	48 83 ec 20          	sub    $0x20,%rsp
   177a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   177ad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   177b1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   177b6:	75 06                	jne    177be <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   177b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177bc:	eb 3a                	jmp    177f8 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   177be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177c2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   177c9:	00 
   177ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177ce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   177d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   177d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177da:	48 89 ce             	mov    %rcx,%rsi
   177dd:	48 89 c7             	mov    %rax,%rdi
   177e0:	e8 e9 06 00 00       	call   17ece <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   177e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177e9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   177f0:	00 
   177f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177f5:	48 01 d0             	add    %rdx,%rax
    }
   177f8:	c9                   	leave
   177f9:	c3                   	ret

00000000000177fa <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   177fa:	55                   	push   %rbp
   177fb:	48 89 e5             	mov    %rsp,%rbp
   177fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17802:	90                   	nop
   17803:	5d                   	pop    %rbp
   17804:	c3                   	ret

0000000000017805 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17805:	55                   	push   %rbp
   17806:	48 89 e5             	mov    %rsp,%rbp
   17809:	48 83 ec 20          	sub    $0x20,%rsp
   1780d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17811:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17815:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17819:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1781e:	75 06                	jne    17826 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17824:	eb 3a                	jmp    17860 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17826:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1782a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   17831:	00 
   17832:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17836:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1783a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1783e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17842:	48 89 ce             	mov    %rcx,%rsi
   17845:	48 89 c7             	mov    %rax,%rdi
   17848:	e8 af 06 00 00       	call   17efc <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   1784d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17851:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   17858:	00 
   17859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1785d:	48 01 d0             	add    %rdx,%rax
    }
   17860:	c9                   	leave
   17861:	c3                   	ret

0000000000017862 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17862:	55                   	push   %rbp
   17863:	48 89 e5             	mov    %rsp,%rbp
   17866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1786a:	90                   	nop
   1786b:	5d                   	pop    %rbp
   1786c:	c3                   	ret

000000000001786d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1786d:	55                   	push   %rbp
   1786e:	48 89 e5             	mov    %rsp,%rbp
   17871:	48 83 ec 20          	sub    $0x20,%rsp
   17875:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17879:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1787d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17881:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17886:	75 06                	jne    1788e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1788c:	eb 3a                	jmp    178c8 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1788e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17892:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17899:	00 
   1789a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1789e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   178a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   178a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178aa:	48 89 ce             	mov    %rcx,%rsi
   178ad:	48 89 c7             	mov    %rax,%rdi
   178b0:	e8 75 06 00 00       	call   17f2a <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
   178b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   178b9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   178c0:	00 
   178c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178c5:	48 01 d0             	add    %rdx,%rax
    }
   178c8:	c9                   	leave
   178c9:	c3                   	ret

00000000000178ca <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   178ca:	55                   	push   %rbp
   178cb:	48 89 e5             	mov    %rsp,%rbp
   178ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   178d2:	90                   	nop
   178d3:	5d                   	pop    %rbp
   178d4:	c3                   	ret

00000000000178d5 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   178d5:	55                   	push   %rbp
   178d6:	48 89 e5             	mov    %rsp,%rbp
   178d9:	48 83 ec 20          	sub    $0x20,%rsp
   178dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   178e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   178e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   178e9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   178ee:	75 06                	jne    178f6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   178f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178f4:	eb 4a                	jmp    17940 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
   178f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   178fa:	48 89 d0             	mov    %rdx,%rax
   178fd:	48 01 c0             	add    %rax,%rax
   17900:	48 01 d0             	add    %rdx,%rax
   17903:	48 c1 e0 03          	shl    $0x3,%rax
   17907:	48 89 c2             	mov    %rax,%rdx
   1790a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1790e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17912:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1791a:	48 89 ce             	mov    %rcx,%rsi
   1791d:	48 89 c7             	mov    %rax,%rdi
   17920:	e8 33 06 00 00       	call   17f58 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   17925:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17929:	48 89 d0             	mov    %rdx,%rax
   1792c:	48 01 c0             	add    %rax,%rax
   1792f:	48 01 d0             	add    %rdx,%rax
   17932:	48 c1 e0 03          	shl    $0x3,%rax
   17936:	48 89 c2             	mov    %rax,%rdx
   17939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1793d:	48 01 d0             	add    %rdx,%rax
    }
   17940:	c9                   	leave
   17941:	c3                   	ret

0000000000017942 <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17942:	55                   	push   %rbp
   17943:	48 89 e5             	mov    %rsp,%rbp
   17946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1794a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1794e:	5d                   	pop    %rbp
   1794f:	c3                   	ret

0000000000017950 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>:
      _M_get_node()
   17950:	55                   	push   %rbp
   17951:	48 89 e5             	mov    %rsp,%rbp
   17954:	48 83 ec 10          	sub    $0x10,%rsp
   17958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   1795c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17960:	48 89 c7             	mov    %rax,%rdi
   17963:	e8 8e e2 ff ff       	call   15bf6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   17968:	be 01 00 00 00       	mov    $0x1,%esi
   1796d:	48 89 c7             	mov    %rax,%rdi
   17970:	e8 11 06 00 00       	call   17f86 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>
   17975:	c9                   	leave
   17976:	c3                   	ret
   17977:	90                   	nop

0000000000017978 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   17978:	55                   	push   %rbp
   17979:	48 89 e5             	mov    %rsp,%rbp
   1797c:	41 54                	push   %r12
   1797e:	53                   	push   %rbx
   1797f:	48 83 ec 20          	sub    $0x20,%rsp
   17983:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17987:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1798b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   1798f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17993:	48 89 c6             	mov    %rax,%rsi
   17996:	bf 28 00 00 00       	mov    $0x28,%edi
   1799b:	e8 77 42 ff ff       	call   bc17 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   179a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   179a4:	48 89 c7             	mov    %rax,%rdi
   179a7:	e8 60 cb ff ff       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   179ac:	49 89 c4             	mov    %rax,%r12
   179af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   179b3:	48 89 c7             	mov    %rax,%rdi
   179b6:	e8 49 e2 ff ff       	call   15c04 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   179bb:	48 89 c3             	mov    %rax,%rbx
   179be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   179c2:	48 89 c7             	mov    %rax,%rdi
   179c5:	e8 2c e2 ff ff       	call   15bf6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   179ca:	4c 89 e2             	mov    %r12,%rdx
   179cd:	48 89 de             	mov    %rbx,%rsi
   179d0:	48 89 c7             	mov    %rax,%rdi
   179d3:	e8 d8 05 00 00       	call   17fb0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>
	}
   179d8:	90                   	nop
   179d9:	48 83 c4 20          	add    $0x20,%rsp
   179dd:	5b                   	pop    %rbx
   179de:	41 5c                	pop    %r12
   179e0:	5d                   	pop    %rbp
   179e1:	c3                   	ret

00000000000179e2 <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() noexcept
   179e2:	55                   	push   %rbp
   179e3:	48 89 e5             	mov    %rsp,%rbp
   179e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   179ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179ee:	5d                   	pop    %rbp
   179ef:	c3                   	ret

00000000000179f0 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   179f0:	55                   	push   %rbp
   179f1:	48 89 e5             	mov    %rsp,%rbp
   179f4:	48 83 ec 10          	sub    $0x10,%rsp
   179f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   179fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a00:	48 89 c7             	mov    %rax,%rdi
   17a03:	e8 5c f6 ff ff       	call   17064 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   17a08:	c9                   	leave
   17a09:	c3                   	ret

0000000000017a0a <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17a0a:	55                   	push   %rbp
   17a0b:	48 89 e5             	mov    %rsp,%rbp
   17a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17a12:	90                   	nop
   17a13:	5d                   	pop    %rbp
   17a14:	c3                   	ret

0000000000017a15 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17a15:	55                   	push   %rbp
   17a16:	48 89 e5             	mov    %rsp,%rbp
   17a19:	48 83 ec 20          	sub    $0x20,%rsp
   17a1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17a25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17a29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17a2e:	75 06                	jne    17a36 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a34:	eb 3a                	jmp    17a70 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17a36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a3a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17a41:	00 
   17a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a46:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17a4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a52:	48 89 ce             	mov    %rcx,%rsi
   17a55:	48 89 c7             	mov    %rax,%rdi
   17a58:	e8 8c 05 00 00       	call   17fe9 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17a5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a61:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17a68:	00 
   17a69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a6d:	48 01 d0             	add    %rdx,%rax
    }
   17a70:	c9                   	leave
   17a71:	c3                   	ret

0000000000017a72 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17a72:	55                   	push   %rbp
   17a73:	48 89 e5             	mov    %rsp,%rbp
   17a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17a7a:	90                   	nop
   17a7b:	5d                   	pop    %rbp
   17a7c:	c3                   	ret

0000000000017a7d <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17a7d:	55                   	push   %rbp
   17a7e:	48 89 e5             	mov    %rsp,%rbp
   17a81:	48 83 ec 20          	sub    $0x20,%rsp
   17a85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17a8d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17a91:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17a96:	75 06                	jne    17a9e <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a9c:	eb 3a                	jmp    17ad8 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17a9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17aa2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17aa9:	00 
   17aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17aae:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17ab2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17aba:	48 89 ce             	mov    %rcx,%rsi
   17abd:	48 89 c7             	mov    %rax,%rdi
   17ac0:	e8 52 05 00 00       	call   18017 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ac9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17ad0:	00 
   17ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ad5:	48 01 d0             	add    %rdx,%rax
    }
   17ad8:	c9                   	leave
   17ad9:	c3                   	ret

0000000000017ada <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17ada:	55                   	push   %rbp
   17adb:	48 89 e5             	mov    %rsp,%rbp
   17ade:	48 83 ec 20          	sub    $0x20,%rsp
   17ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17aea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17aee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17af3:	75 06                	jne    17afb <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17af9:	eb 2a                	jmp    17b25 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
   17afb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17aff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b03:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17b07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b0f:	48 89 ce             	mov    %rcx,%rsi
   17b12:	48 89 c7             	mov    %rax,%rdi
   17b15:	e8 2b 05 00 00       	call   18045 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
   17b1a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17b1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17b22:	48 01 d0             	add    %rdx,%rax
    }
   17b25:	c9                   	leave
   17b26:	c3                   	ret

0000000000017b27 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>:
    __miter_base(_Iterator __it)
   17b27:	55                   	push   %rbp
   17b28:	48 89 e5             	mov    %rsp,%rbp
   17b2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17b2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b33:	5d                   	pop    %rbp
   17b34:	c3                   	ret

0000000000017b35 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   17b35:	55                   	push   %rbp
   17b36:	48 89 e5             	mov    %rsp,%rbp
   17b39:	41 54                	push   %r12
   17b3b:	53                   	push   %rbx
   17b3c:	48 83 ec 20          	sub    $0x20,%rsp
   17b40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17b44:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17b48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17b4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17b50:	48 89 c7             	mov    %rax,%rdi
   17b53:	e8 29 05 00 00       	call   18081 <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>
   17b58:	49 89 c4             	mov    %rax,%r12
   17b5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17b5f:	48 89 c7             	mov    %rax,%rdi
   17b62:	e8 0c 05 00 00       	call   18073 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   17b67:	48 89 c3             	mov    %rax,%rbx
   17b6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b6e:	48 89 c7             	mov    %rax,%rdi
   17b71:	e8 fd 04 00 00       	call   18073 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   17b76:	4c 89 e2             	mov    %r12,%rdx
   17b79:	48 89 de             	mov    %rbx,%rsi
   17b7c:	48 89 c7             	mov    %rax,%rdi
   17b7f:	e8 0b 05 00 00       	call   1808f <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   17b84:	48 89 c2             	mov    %rax,%rdx
   17b87:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17b8b:	48 89 d6             	mov    %rdx,%rsi
   17b8e:	48 89 c7             	mov    %rax,%rdi
   17b91:	e8 26 05 00 00       	call   180bc <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>
    }
   17b96:	48 83 c4 20          	add    $0x20,%rsp
   17b9a:	5b                   	pop    %rbx
   17b9b:	41 5c                	pop    %r12
   17b9d:	5d                   	pop    %rbp
   17b9e:	c3                   	ret

0000000000017b9f <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17b9f:	55                   	push   %rbp
   17ba0:	48 89 e5             	mov    %rsp,%rbp
   17ba3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17ba7:	90                   	nop
   17ba8:	5d                   	pop    %rbp
   17ba9:	c3                   	ret

0000000000017baa <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17baa:	55                   	push   %rbp
   17bab:	48 89 e5             	mov    %rsp,%rbp
   17bae:	48 83 ec 20          	sub    $0x20,%rsp
   17bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17bba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17bbe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17bc3:	75 06                	jne    17bcb <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bc9:	eb 3a                	jmp    17c05 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17bcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17bcf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17bd6:	00 
   17bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bdb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17bdf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17be3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17be7:	48 89 ce             	mov    %rcx,%rsi
   17bea:	48 89 c7             	mov    %rax,%rdi
   17bed:	e8 dc 04 00 00       	call   180ce <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17bf2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17bf6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17bfd:	00 
   17bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c02:	48 01 d0             	add    %rdx,%rax
    }
   17c05:	c9                   	leave
   17c06:	c3                   	ret

0000000000017c07 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17c07:	55                   	push   %rbp
   17c08:	48 89 e5             	mov    %rsp,%rbp
   17c0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17c0f:	90                   	nop
   17c10:	5d                   	pop    %rbp
   17c11:	c3                   	ret

0000000000017c12 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17c12:	55                   	push   %rbp
   17c13:	48 89 e5             	mov    %rsp,%rbp
   17c16:	48 83 ec 20          	sub    $0x20,%rsp
   17c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17c26:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17c2b:	75 06                	jne    17c33 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17c2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c31:	eb 3a                	jmp    17c6d <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17c33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c37:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17c3e:	00 
   17c3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c43:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17c47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c4f:	48 89 ce             	mov    %rcx,%rsi
   17c52:	48 89 c7             	mov    %rax,%rdi
   17c55:	e8 a2 04 00 00       	call   180fc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17c5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c5e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17c65:	00 
   17c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c6a:	48 01 d0             	add    %rdx,%rax
    }
   17c6d:	c9                   	leave
   17c6e:	c3                   	ret

0000000000017c6f <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17c6f:	55                   	push   %rbp
   17c70:	48 89 e5             	mov    %rsp,%rbp
   17c73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17c77:	90                   	nop
   17c78:	5d                   	pop    %rbp
   17c79:	c3                   	ret

0000000000017c7a <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17c7a:	55                   	push   %rbp
   17c7b:	48 89 e5             	mov    %rsp,%rbp
   17c7e:	48 83 ec 20          	sub    $0x20,%rsp
   17c82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17c8e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17c93:	75 06                	jne    17c9b <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c99:	eb 3a                	jmp    17cd5 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17c9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c9f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17ca6:	00 
   17ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cab:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17caf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17cb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cb7:	48 89 ce             	mov    %rcx,%rsi
   17cba:	48 89 c7             	mov    %rax,%rdi
   17cbd:	e8 68 04 00 00       	call   1812a <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17cc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cc6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17ccd:	00 
   17cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cd2:	48 01 d0             	add    %rdx,%rax
    }
   17cd5:	c9                   	leave
   17cd6:	c3                   	ret

0000000000017cd7 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17cd7:	55                   	push   %rbp
   17cd8:	48 89 e5             	mov    %rsp,%rbp
   17cdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17cdf:	90                   	nop
   17ce0:	5d                   	pop    %rbp
   17ce1:	c3                   	ret

0000000000017ce2 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17ce2:	55                   	push   %rbp
   17ce3:	48 89 e5             	mov    %rsp,%rbp
   17ce6:	48 83 ec 20          	sub    $0x20,%rsp
   17cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17cf2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17cf6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17cfb:	75 06                	jne    17d03 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d01:	eb 3a                	jmp    17d3d <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17d03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d07:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17d0e:	00 
   17d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d13:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17d17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d1f:	48 89 ce             	mov    %rcx,%rsi
   17d22:	48 89 c7             	mov    %rax,%rdi
   17d25:	e8 2e 04 00 00       	call   18158 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17d2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d2e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17d35:	00 
   17d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d3a:	48 01 d0             	add    %rdx,%rax
    }
   17d3d:	c9                   	leave
   17d3e:	c3                   	ret

0000000000017d3f <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17d3f:	55                   	push   %rbp
   17d40:	48 89 e5             	mov    %rsp,%rbp
   17d43:	48 83 ec 20          	sub    $0x20,%rsp
   17d47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d4f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17d53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d57:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d5f:	48 89 ce             	mov    %rcx,%rsi
   17d62:	48 89 c7             	mov    %rax,%rdi
   17d65:	e8 1c 04 00 00       	call   18186 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   17d6a:	90                   	nop
   17d6b:	c9                   	leave
   17d6c:	c3                   	ret

0000000000017d6d <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   17d6d:	55                   	push   %rbp
   17d6e:	48 89 e5             	mov    %rsp,%rbp
   17d71:	48 83 ec 20          	sub    $0x20,%rsp
   17d75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   17d81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d8d:	48 89 ce             	mov    %rcx,%rsi
   17d90:	48 89 c7             	mov    %rax,%rdi
   17d93:	e8 66 04 00 00       	call   181fe <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>
   17d98:	c9                   	leave
   17d99:	c3                   	ret

0000000000017d9a <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17d9a:	55                   	push   %rbp
   17d9b:	48 89 e5             	mov    %rsp,%rbp
   17d9e:	48 83 ec 20          	sub    $0x20,%rsp
   17da2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17da6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17daa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17dae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17db2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dba:	48 89 ce             	mov    %rcx,%rsi
   17dbd:	48 89 c7             	mov    %rax,%rdi
   17dc0:	e8 66 04 00 00       	call   1822b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   17dc5:	90                   	nop
   17dc6:	c9                   	leave
   17dc7:	c3                   	ret

0000000000017dc8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   17dc8:	55                   	push   %rbp
   17dc9:	48 89 e5             	mov    %rsp,%rbp
   17dcc:	48 83 ec 20          	sub    $0x20,%rsp
   17dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17dd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   17ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17de0:	48 89 c7             	mov    %rax,%rdi
   17de3:	e8 bc 04 00 00       	call   182a4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>
   17de8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17dec:	0f 92 c0             	setb   %al
   17def:	0f b6 c0             	movzbl %al,%eax
   17df2:	48 85 c0             	test   %rax,%rax
   17df5:	0f 95 c0             	setne  %al
   17df8:	84 c0                	test   %al,%al
   17dfa:	74 1a                	je     17e16 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   17dfc:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
   17e03:	ff ff 03 
   17e06:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17e0a:	73 05                	jae    17e11 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   17e0c:	e8 af c4 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   17e11:	e8 ea c2 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   17e16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17e1a:	48 c1 e0 06          	shl    $0x6,%rax
   17e1e:	48 89 c7             	mov    %rax,%rdi
   17e21:	e8 ea c5 fe ff       	call   4410 <_Znwm@plt>
   17e26:	90                   	nop
      }
   17e27:	c9                   	leave
   17e28:	c3                   	ret
   17e29:	90                   	nop

0000000000017e2a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   17e2a:	55                   	push   %rbp
   17e2b:	48 89 e5             	mov    %rsp,%rbp
   17e2e:	41 56                	push   %r14
   17e30:	41 55                	push   %r13
   17e32:	41 54                	push   %r12
   17e34:	53                   	push   %rbx
   17e35:	48 83 ec 30          	sub    $0x30,%rsp
   17e39:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17e3d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   17e41:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   17e45:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   17e49:	48 89 de             	mov    %rbx,%rsi
   17e4c:	bf 20 00 00 00       	mov    $0x20,%edi
   17e51:	e8 c1 3d ff ff       	call   bc17 <_ZnwmPv>
   17e56:	49 89 c4             	mov    %rax,%r12
   17e59:	41 be 01 00 00 00    	mov    $0x1,%r14d
   17e5f:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   17e63:	48 89 c7             	mov    %rax,%rdi
   17e66:	e8 e5 c9 fe ff       	call   4850 <_ZNSaIcEC1Ev@plt>
   17e6b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   17e6f:	48 89 c7             	mov    %rax,%rdi
   17e72:	e8 4a b6 ff ff       	call   134c1 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   17e77:	48 8b 00             	mov    (%rax),%rax
   17e7a:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   17e7e:	48 89 c6             	mov    %rax,%rsi
   17e81:	4c 89 e7             	mov    %r12,%rdi
   17e84:	e8 c9 41 ff ff       	call   c052 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   17e89:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   17e8d:	48 89 c7             	mov    %rax,%rdi
   17e90:	e8 1b c6 fe ff       	call   44b0 <_ZNSaIcED1Ev@plt>
   17e95:	eb 2a                	jmp    17ec1 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x97>
   17e97:	49 89 c5             	mov    %rax,%r13
   17e9a:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   17e9e:	48 89 c7             	mov    %rax,%rdi
   17ea1:	e8 0a c6 fe ff       	call   44b0 <_ZNSaIcED1Ev@plt>
   17ea6:	45 84 f6             	test   %r14b,%r14b
   17ea9:	74 0b                	je     17eb6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x8c>
   17eab:	48 89 de             	mov    %rbx,%rsi
   17eae:	4c 89 e7             	mov    %r12,%rdi
   17eb1:	e8 73 3d ff ff       	call   bc29 <_ZdlPvS_>
   17eb6:	4c 89 e8             	mov    %r13,%rax
   17eb9:	48 89 c7             	mov    %rax,%rdi
   17ebc:	e8 7f c9 fe ff       	call   4840 <_Unwind_Resume@plt>
   17ec1:	48 83 c4 30          	add    $0x30,%rsp
   17ec5:	5b                   	pop    %rbx
   17ec6:	41 5c                	pop    %r12
   17ec8:	41 5d                	pop    %r13
   17eca:	41 5e                	pop    %r14
   17ecc:	5d                   	pop    %rbp
   17ecd:	c3                   	ret

0000000000017ece <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17ece:	55                   	push   %rbp
   17ecf:	48 89 e5             	mov    %rsp,%rbp
   17ed2:	48 83 ec 20          	sub    $0x20,%rsp
   17ed6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17eda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ede:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17ee2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ee6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17eee:	48 89 ce             	mov    %rcx,%rsi
   17ef1:	48 89 c7             	mov    %rax,%rdi
   17ef4:	e8 bf 03 00 00       	call   182b8 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   17ef9:	90                   	nop
   17efa:	c9                   	leave
   17efb:	c3                   	ret

0000000000017efc <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17efc:	55                   	push   %rbp
   17efd:	48 89 e5             	mov    %rsp,%rbp
   17f00:	48 83 ec 20          	sub    $0x20,%rsp
   17f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17f10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f14:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f1c:	48 89 ce             	mov    %rcx,%rsi
   17f1f:	48 89 c7             	mov    %rax,%rdi
   17f22:	e8 c4 03 00 00       	call   182eb <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   17f27:	90                   	nop
   17f28:	c9                   	leave
   17f29:	c3                   	ret

0000000000017f2a <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17f2a:	55                   	push   %rbp
   17f2b:	48 89 e5             	mov    %rsp,%rbp
   17f2e:	48 83 ec 20          	sub    $0x20,%rsp
   17f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17f3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f42:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f4a:	48 89 ce             	mov    %rcx,%rsi
   17f4d:	48 89 c7             	mov    %rax,%rdi
   17f50:	e8 c7 03 00 00       	call   1831c <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   17f55:	90                   	nop
   17f56:	c9                   	leave
   17f57:	c3                   	ret

0000000000017f58 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17f58:	55                   	push   %rbp
   17f59:	48 89 e5             	mov    %rsp,%rbp
   17f5c:	48 83 ec 20          	sub    $0x20,%rsp
   17f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17f6c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f70:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f78:	48 89 ce             	mov    %rcx,%rsi
   17f7b:	48 89 c7             	mov    %rax,%rdi
   17f7e:	e8 d4 03 00 00       	call   18357 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   17f83:	90                   	nop
   17f84:	c9                   	leave
   17f85:	c3                   	ret

0000000000017f86 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   17f86:	55                   	push   %rbp
   17f87:	48 89 e5             	mov    %rsp,%rbp
   17f8a:	48 83 ec 10          	sub    $0x10,%rsp
   17f8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17f96:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f9e:	ba 00 00 00 00       	mov    $0x0,%edx
   17fa3:	48 89 ce             	mov    %rcx,%rsi
   17fa6:	48 89 c7             	mov    %rax,%rdi
   17fa9:	e8 ec 03 00 00       	call   1839a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>
   17fae:	c9                   	leave
   17faf:	c3                   	ret

0000000000017fb0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   17fb0:	55                   	push   %rbp
   17fb1:	48 89 e5             	mov    %rsp,%rbp
   17fb4:	48 83 ec 20          	sub    $0x20,%rsp
   17fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17fc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   17fc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17fc8:	48 89 c7             	mov    %rax,%rdi
   17fcb:	e8 3c c5 ff ff       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   17fd0:	48 89 c2             	mov    %rax,%rdx
   17fd3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17fd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fdb:	48 89 ce             	mov    %rcx,%rsi
   17fde:	48 89 c7             	mov    %rax,%rdi
   17fe1:	e8 20 04 00 00       	call   18406 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>
	}
   17fe6:	90                   	nop
   17fe7:	c9                   	leave
   17fe8:	c3                   	ret

0000000000017fe9 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17fe9:	55                   	push   %rbp
   17fea:	48 89 e5             	mov    %rsp,%rbp
   17fed:	48 83 ec 20          	sub    $0x20,%rsp
   17ff1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ff5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ff9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17ffd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18001:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18009:	48 89 ce             	mov    %rcx,%rsi
   1800c:	48 89 c7             	mov    %rax,%rdi
   1800f:	e8 32 04 00 00       	call   18446 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18014:	90                   	nop
   18015:	c9                   	leave
   18016:	c3                   	ret

0000000000018017 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18017:	55                   	push   %rbp
   18018:	48 89 e5             	mov    %rsp,%rbp
   1801b:	48 83 ec 20          	sub    $0x20,%rsp
   1801f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18023:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18027:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1802b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1802f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18037:	48 89 ce             	mov    %rcx,%rsi
   1803a:	48 89 c7             	mov    %rax,%rdi
   1803d:	e8 3f 04 00 00       	call   18481 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18042:	90                   	nop
   18043:	c9                   	leave
   18044:	c3                   	ret

0000000000018045 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18045:	55                   	push   %rbp
   18046:	48 89 e5             	mov    %rsp,%rbp
   18049:	48 83 ec 20          	sub    $0x20,%rsp
   1804d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18051:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18055:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   18059:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1805d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18065:	48 89 ce             	mov    %rcx,%rsi
   18068:	48 89 c7             	mov    %rax,%rdi
   1806b:	e8 4c 04 00 00       	call   184bc <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
   18070:	90                   	nop
   18071:	c9                   	leave
   18072:	c3                   	ret

0000000000018073 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>:
    __niter_base(_Iterator __it)
   18073:	55                   	push   %rbp
   18074:	48 89 e5             	mov    %rsp,%rbp
   18077:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1807b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1807f:	5d                   	pop    %rbp
   18080:	c3                   	ret

0000000000018081 <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>:
    __niter_base(_Iterator __it)
   18081:	55                   	push   %rbp
   18082:	48 89 e5             	mov    %rsp,%rbp
   18085:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1808d:	5d                   	pop    %rbp
   1808e:	c3                   	ret

000000000001808f <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1808f:	55                   	push   %rbp
   18090:	48 89 e5             	mov    %rsp,%rbp
   18093:	48 83 ec 20          	sub    $0x20,%rsp
   18097:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1809b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1809f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   180a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   180a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   180ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180af:	48 89 ce             	mov    %rcx,%rsi
   180b2:	48 89 c7             	mov    %rax,%rdi
   180b5:	e8 4f 04 00 00       	call   18509 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   180ba:	c9                   	leave
   180bb:	c3                   	ret

00000000000180bc <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   180bc:	55                   	push   %rbp
   180bd:	48 89 e5             	mov    %rsp,%rbp
   180c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   180c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   180c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   180cc:	5d                   	pop    %rbp
   180cd:	c3                   	ret

00000000000180ce <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   180ce:	55                   	push   %rbp
   180cf:	48 89 e5             	mov    %rsp,%rbp
   180d2:	48 83 ec 20          	sub    $0x20,%rsp
   180d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   180da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   180de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   180e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   180e6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   180ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180ee:	48 89 ce             	mov    %rcx,%rsi
   180f1:	48 89 c7             	mov    %rax,%rdi
   180f4:	e8 3d 04 00 00       	call   18536 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   180f9:	90                   	nop
   180fa:	c9                   	leave
   180fb:	c3                   	ret

00000000000180fc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   180fc:	55                   	push   %rbp
   180fd:	48 89 e5             	mov    %rsp,%rbp
   18100:	48 83 ec 20          	sub    $0x20,%rsp
   18104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18108:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1810c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   18110:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18114:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1811c:	48 89 ce             	mov    %rcx,%rsi
   1811f:	48 89 c7             	mov    %rax,%rdi
   18122:	e8 4a 04 00 00       	call   18571 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18127:	90                   	nop
   18128:	c9                   	leave
   18129:	c3                   	ret

000000000001812a <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1812a:	55                   	push   %rbp
   1812b:	48 89 e5             	mov    %rsp,%rbp
   1812e:	48 83 ec 20          	sub    $0x20,%rsp
   18132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18136:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1813a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1813e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18142:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1814a:	48 89 ce             	mov    %rcx,%rsi
   1814d:	48 89 c7             	mov    %rax,%rdi
   18150:	e8 57 04 00 00       	call   185ac <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18155:	90                   	nop
   18156:	c9                   	leave
   18157:	c3                   	ret

0000000000018158 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18158:	55                   	push   %rbp
   18159:	48 89 e5             	mov    %rsp,%rbp
   1815c:	48 83 ec 20          	sub    $0x20,%rsp
   18160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18168:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1816c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18170:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18178:	48 89 ce             	mov    %rcx,%rsi
   1817b:	48 89 c7             	mov    %rax,%rdi
   1817e:	e8 64 04 00 00       	call   185e7 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18183:	90                   	nop
   18184:	c9                   	leave
   18185:	c3                   	ret

0000000000018186 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18186:	55                   	push   %rbp
   18187:	48 89 e5             	mov    %rsp,%rbp
   1818a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1818e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18192:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18196:	eb 58                	jmp    181f0 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   18198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1819c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   181a0:	b9 04 01 00 00       	mov    $0x104,%ecx
   181a5:	48 8b 32             	mov    (%rdx),%rsi
   181a8:	48 89 30             	mov    %rsi,(%rax)
   181ab:	89 ce                	mov    %ecx,%esi
   181ad:	48 01 c6             	add    %rax,%rsi
   181b0:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   181b4:	89 ce                	mov    %ecx,%esi
   181b6:	48 01 d6             	add    %rdx,%rsi
   181b9:	48 83 c6 08          	add    $0x8,%rsi
   181bd:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   181c1:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   181c5:	48 8d 78 08          	lea    0x8(%rax),%rdi
   181c9:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   181cd:	48 29 f8             	sub    %rdi,%rax
   181d0:	48 29 c2             	sub    %rax,%rdx
   181d3:	01 c1                	add    %eax,%ecx
   181d5:	83 e1 f8             	and    $0xfffffff8,%ecx
   181d8:	89 c8                	mov    %ecx,%eax
   181da:	c1 e8 03             	shr    $0x3,%eax
   181dd:	89 c0                	mov    %eax,%eax
   181df:	48 89 d6             	mov    %rdx,%rsi
   181e2:	48 89 c1             	mov    %rax,%rcx
   181e5:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   181e8:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   181ef:	00 
   181f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181f4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   181f8:	75 9e                	jne    18198 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   181fa:	90                   	nop
   181fb:	90                   	nop
   181fc:	5d                   	pop    %rbp
   181fd:	c3                   	ret

00000000000181fe <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   181fe:	55                   	push   %rbp
   181ff:	48 89 e5             	mov    %rsp,%rbp
   18202:	48 83 ec 20          	sub    $0x20,%rsp
   18206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1820a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1820e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   18212:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18216:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1821a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1821e:	48 89 ce             	mov    %rcx,%rsi
   18221:	48 89 c7             	mov    %rax,%rdi
   18224:	e8 58 ed fe ff       	call   6f81 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   18229:	c9                   	leave
   1822a:	c3                   	ret

000000000001822b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1822b:	55                   	push   %rbp
   1822c:	48 89 e5             	mov    %rsp,%rbp
   1822f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18233:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18237:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   1823b:	eb 58                	jmp    18295 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   1823d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18241:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18245:	b9 08 02 00 00       	mov    $0x208,%ecx
   1824a:	48 8b 32             	mov    (%rdx),%rsi
   1824d:	48 89 30             	mov    %rsi,(%rax)
   18250:	89 ce                	mov    %ecx,%esi
   18252:	48 01 c6             	add    %rax,%rsi
   18255:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   18259:	89 ce                	mov    %ecx,%esi
   1825b:	48 01 d6             	add    %rdx,%rsi
   1825e:	48 83 c6 08          	add    $0x8,%rsi
   18262:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   18266:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   1826a:	48 8d 78 08          	lea    0x8(%rax),%rdi
   1826e:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   18272:	48 29 f8             	sub    %rdi,%rax
   18275:	48 29 c2             	sub    %rax,%rdx
   18278:	01 c1                	add    %eax,%ecx
   1827a:	83 e1 f8             	and    $0xfffffff8,%ecx
   1827d:	89 c8                	mov    %ecx,%eax
   1827f:	c1 e8 03             	shr    $0x3,%eax
   18282:	89 c0                	mov    %eax,%eax
   18284:	48 89 d6             	mov    %rdx,%rsi
   18287:	48 89 c1             	mov    %rax,%rcx
   1828a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   1828d:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
   18294:	00 
   18295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18299:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1829d:	75 9e                	jne    1823d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   1829f:	90                   	nop
   182a0:	90                   	nop
   182a1:	5d                   	pop    %rbp
   182a2:	c3                   	ret
   182a3:	90                   	nop

00000000000182a4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   182a4:	55                   	push   %rbp
   182a5:	48 89 e5             	mov    %rsp,%rbp
   182a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   182ac:	48 b8 ff ff ff ff ff 	movabs $0x1ffffffffffffff,%rax
   182b3:	ff ff 01 
      }
   182b6:	5d                   	pop    %rbp
   182b7:	c3                   	ret

00000000000182b8 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   182b8:	55                   	push   %rbp
   182b9:	48 89 e5             	mov    %rsp,%rbp
   182bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   182c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   182c8:	eb 13                	jmp    182dd <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
   182ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   182d2:	48 8b 12             	mov    (%rdx),%rdx
   182d5:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   182d8:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   182dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182e1:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   182e5:	75 e3                	jne    182ca <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   182e7:	90                   	nop
   182e8:	90                   	nop
   182e9:	5d                   	pop    %rbp
   182ea:	c3                   	ret

00000000000182eb <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   182eb:	55                   	push   %rbp
   182ec:	48 89 e5             	mov    %rsp,%rbp
   182ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   182f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   182fb:	eb 11                	jmp    1830e <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
   182fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18301:	8b 10                	mov    (%rax),%edx
   18303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18307:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
   18309:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
   1830e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18312:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18316:	75 e5                	jne    182fd <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   18318:	90                   	nop
   18319:	90                   	nop
   1831a:	5d                   	pop    %rbp
   1831b:	c3                   	ret

000000000001831c <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1831c:	55                   	push   %rbp
   1831d:	48 89 e5             	mov    %rsp,%rbp
   18320:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18324:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18328:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1832c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18330:	48 8b 00             	mov    (%rax),%rax
   18333:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18337:	eb 10                	jmp    18349 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1833d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18341:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18344:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18349:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1834d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18351:	75 e6                	jne    18339 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18353:	90                   	nop
   18354:	90                   	nop
   18355:	5d                   	pop    %rbp
   18356:	c3                   	ret

0000000000018357 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18357:	55                   	push   %rbp
   18358:	48 89 e5             	mov    %rsp,%rbp
   1835b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1835f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18363:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18367:	eb 23                	jmp    1838c <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
   18369:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1836d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18371:	48 8b 06             	mov    (%rsi),%rax
   18374:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   18378:	48 89 01             	mov    %rax,(%rcx)
   1837b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1837f:	48 8b 46 10          	mov    0x10(%rsi),%rax
   18383:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
   18387:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   1838c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18390:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18394:	75 d3                	jne    18369 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   18396:	90                   	nop
   18397:	90                   	nop
   18398:	5d                   	pop    %rbp
   18399:	c3                   	ret

000000000001839a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1839a:	55                   	push   %rbp
   1839b:	48 89 e5             	mov    %rsp,%rbp
   1839e:	48 83 ec 20          	sub    $0x20,%rsp
   183a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   183a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   183aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   183ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183b2:	48 89 c7             	mov    %rax,%rdi
   183b5:	e8 68 02 00 00       	call   18622 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>
   183ba:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   183be:	0f 92 c0             	setb   %al
   183c1:	0f b6 c0             	movzbl %al,%eax
   183c4:	48 85 c0             	test   %rax,%rax
   183c7:	0f 95 c0             	setne  %al
   183ca:	84 c0                	test   %al,%al
   183cc:	74 1a                	je     183e8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   183ce:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   183d5:	66 66 06 
   183d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   183dc:	73 05                	jae    183e3 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   183de:	e8 dd be fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   183e3:	e8 18 bd fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   183e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   183ec:	48 89 d0             	mov    %rdx,%rax
   183ef:	48 c1 e0 02          	shl    $0x2,%rax
   183f3:	48 01 d0             	add    %rdx,%rax
   183f6:	48 c1 e0 03          	shl    $0x3,%rax
   183fa:	48 89 c7             	mov    %rax,%rdi
   183fd:	e8 0e c0 fe ff       	call   4410 <_Znwm@plt>
   18402:	90                   	nop
      }
   18403:	c9                   	leave
   18404:	c3                   	ret
   18405:	90                   	nop

0000000000018406 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   18406:	55                   	push   %rbp
   18407:	48 89 e5             	mov    %rsp,%rbp
   1840a:	53                   	push   %rbx
   1840b:	48 83 ec 28          	sub    $0x28,%rsp
   1840f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18413:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18417:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1841b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1841f:	48 89 c6             	mov    %rax,%rsi
   18422:	bf 04 00 00 00       	mov    $0x4,%edi
   18427:	e8 eb 37 ff ff       	call   bc17 <_ZnwmPv>
   1842c:	48 89 c3             	mov    %rax,%rbx
   1842f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18433:	48 89 c7             	mov    %rax,%rdi
   18436:	e8 d1 c0 ff ff       	call   1450c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   1843b:	8b 00                	mov    (%rax),%eax
   1843d:	89 03                	mov    %eax,(%rbx)
   1843f:	90                   	nop
   18440:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18444:	c9                   	leave
   18445:	c3                   	ret

0000000000018446 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18446:	55                   	push   %rbp
   18447:	48 89 e5             	mov    %rsp,%rbp
   1844a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1844e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18452:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18456:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1845a:	48 8b 00             	mov    (%rax),%rax
   1845d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18461:	eb 10                	jmp    18473 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18463:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18467:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1846b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1846e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18477:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1847b:	75 e6                	jne    18463 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1847d:	90                   	nop
   1847e:	90                   	nop
   1847f:	5d                   	pop    %rbp
   18480:	c3                   	ret

0000000000018481 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18481:	55                   	push   %rbp
   18482:	48 89 e5             	mov    %rsp,%rbp
   18485:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18489:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1848d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18491:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18495:	48 8b 00             	mov    (%rax),%rax
   18498:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1849c:	eb 10                	jmp    184ae <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1849e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   184a6:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   184a9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   184ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184b2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   184b6:	75 e6                	jne    1849e <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   184b8:	90                   	nop
   184b9:	90                   	nop
   184ba:	5d                   	pop    %rbp
   184bb:	c3                   	ret

00000000000184bc <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
   184bc:	55                   	push   %rbp
   184bd:	48 89 e5             	mov    %rsp,%rbp
   184c0:	48 83 ec 30          	sub    $0x30,%rsp
   184c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   184c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   184cc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
   184d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184d4:	0f b6 00             	movzbl (%rax),%eax
   184d7:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
   184da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   184de:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   184e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   184e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   184eb:	74 19                	je     18506 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
   184ed:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
   184f1:	0f b6 c8             	movzbl %al,%ecx
   184f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   184f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   184fc:	89 ce                	mov    %ecx,%esi
   184fe:	48 89 c7             	mov    %rax,%rdi
   18501:	e8 ca bc fe ff       	call   41d0 <memset@plt>
    }
   18506:	90                   	nop
   18507:	c9                   	leave
   18508:	c3                   	ret

0000000000018509 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   18509:	55                   	push   %rbp
   1850a:	48 89 e5             	mov    %rsp,%rbp
   1850d:	48 83 ec 20          	sub    $0x20,%rsp
   18511:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18515:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18519:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1851d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18521:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18529:	48 89 ce             	mov    %rcx,%rsi
   1852c:	48 89 c7             	mov    %rax,%rdi
   1852f:	e8 02 01 00 00       	call   18636 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>
    }
   18534:	c9                   	leave
   18535:	c3                   	ret

0000000000018536 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18536:	55                   	push   %rbp
   18537:	48 89 e5             	mov    %rsp,%rbp
   1853a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1853e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18542:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18546:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1854a:	48 8b 00             	mov    (%rax),%rax
   1854d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18551:	eb 10                	jmp    18563 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18553:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18557:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1855b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1855e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18567:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1856b:	75 e6                	jne    18553 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1856d:	90                   	nop
   1856e:	90                   	nop
   1856f:	5d                   	pop    %rbp
   18570:	c3                   	ret

0000000000018571 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18571:	55                   	push   %rbp
   18572:	48 89 e5             	mov    %rsp,%rbp
   18575:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18579:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1857d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18581:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18585:	48 8b 00             	mov    (%rax),%rax
   18588:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1858c:	eb 10                	jmp    1859e <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1858e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18592:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18596:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18599:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1859e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   185a2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   185a6:	75 e6                	jne    1858e <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   185a8:	90                   	nop
   185a9:	90                   	nop
   185aa:	5d                   	pop    %rbp
   185ab:	c3                   	ret

00000000000185ac <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   185ac:	55                   	push   %rbp
   185ad:	48 89 e5             	mov    %rsp,%rbp
   185b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   185b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   185b8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   185bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185c0:	48 8b 00             	mov    (%rax),%rax
   185c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   185c7:	eb 10                	jmp    185d9 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   185c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   185cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   185d1:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   185d4:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   185d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   185dd:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   185e1:	75 e6                	jne    185c9 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   185e3:	90                   	nop
   185e4:	90                   	nop
   185e5:	5d                   	pop    %rbp
   185e6:	c3                   	ret

00000000000185e7 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   185e7:	55                   	push   %rbp
   185e8:	48 89 e5             	mov    %rsp,%rbp
   185eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   185ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   185f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   185f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185fb:	48 8b 00             	mov    (%rax),%rax
   185fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18602:	eb 10                	jmp    18614 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18604:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18608:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1860c:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1860f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18618:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1861c:	75 e6                	jne    18604 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1861e:	90                   	nop
   1861f:	90                   	nop
   18620:	5d                   	pop    %rbp
   18621:	c3                   	ret

0000000000018622 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18622:	55                   	push   %rbp
   18623:	48 89 e5             	mov    %rsp,%rbp
   18626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1862a:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   18631:	33 33 03 
      }
   18634:	5d                   	pop    %rbp
   18635:	c3                   	ret

0000000000018636 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   18636:	55                   	push   %rbp
   18637:	48 89 e5             	mov    %rsp,%rbp
   1863a:	48 83 ec 30          	sub    $0x30,%rsp
   1863e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18642:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18646:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1864a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1864e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18652:	48 c1 f8 02          	sar    $0x2,%rax
   18656:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1865a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1865f:	74 1f                	je     18680 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   18661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18665:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1866c:	00 
   1866d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   18671:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18675:	48 89 ce             	mov    %rcx,%rsi
   18678:	48 89 c7             	mov    %rax,%rdi
   1867b:	e8 30 c1 fe ff       	call   47b0 <memmove@plt>
	  return __result + _Num;
   18680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18684:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1868b:	00 
   1868c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18690:	48 01 d0             	add    %rdx,%rax
	}
   18693:	c9                   	leave
   18694:	c3                   	ret
   18695:	90                   	nop

0000000000018696 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   18696:	55                   	push   %rbp
   18697:	48 89 e5             	mov    %rsp,%rbp
   1869a:	48 83 ec 10          	sub    $0x10,%rsp
   1869e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186a2:	48 8d 15 27 06 01 00 	lea    0x10627(%rip),%rdx        # 28cd0 <_ZTVSt19bad_optional_access+0x10>
   186a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186ad:	48 89 10             	mov    %rdx,(%rax)
   186b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186b4:	48 89 c7             	mov    %rax,%rdi
   186b7:	e8 c4 c1 fe ff       	call   4880 <_ZNSt9exceptionD2Ev@plt>
   186bc:	90                   	nop
   186bd:	c9                   	leave
   186be:	c3                   	ret
   186bf:	90                   	nop

00000000000186c0 <_ZNSt19bad_optional_accessD0Ev>:
   186c0:	55                   	push   %rbp
   186c1:	48 89 e5             	mov    %rsp,%rbp
   186c4:	48 83 ec 10          	sub    $0x10,%rsp
   186c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186d0:	48 89 c7             	mov    %rax,%rdi
   186d3:	e8 be ff ff ff       	call   18696 <_ZNSt19bad_optional_accessD1Ev>
   186d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186dc:	be 08 00 00 00       	mov    $0x8,%esi
   186e1:	48 89 c7             	mov    %rax,%rdi
   186e4:	e8 47 bd fe ff       	call   4430 <_ZdlPvm@plt>
   186e9:	c9                   	leave
   186ea:	c3                   	ret

00000000000186eb <_Z41__static_initialization_and_destruction_0ii>:
  std::mt19937 gen(rd());
  std::uniform_real_distribution<> dis(min, max);
  while (it_begin != it_end)
    *(it_begin++) = dis(gen);
}
} // namespace rtvc
   186eb:	55                   	push   %rbp
   186ec:	48 89 e5             	mov    %rsp,%rbp
   186ef:	48 83 ec 10          	sub    $0x10,%rsp
   186f3:	89 7d fc             	mov    %edi,-0x4(%rbp)
   186f6:	89 75 f8             	mov    %esi,-0x8(%rbp)
   186f9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   186fd:	75 3b                	jne    1873a <_Z41__static_initialization_and_destruction_0ii+0x4f>
   186ff:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   18706:	75 32                	jne    1873a <_Z41__static_initialization_and_destruction_0ii+0x4f>
   18708:	48 8d 05 d2 0f 01 00 	lea    0x10fd2(%rip),%rax        # 296e1 <_ZStL8__ioinit>
   1870f:	48 89 c7             	mov    %rax,%rdi
   18712:	e8 09 c0 fe ff       	call   4720 <_ZNSt8ios_base4InitC1Ev@plt>
   18717:	48 8d 05 42 0d 01 00 	lea    0x10d42(%rip),%rax        # 29460 <__dso_handle>
   1871e:	48 89 c2             	mov    %rax,%rdx
   18721:	48 8d 05 b9 0f 01 00 	lea    0x10fb9(%rip),%rax        # 296e1 <_ZStL8__ioinit>
   18728:	48 89 c6             	mov    %rax,%rsi
   1872b:	48 8b 05 96 08 01 00 	mov    0x10896(%rip),%rax        # 28fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   18732:	48 89 c7             	mov    %rax,%rdi
   18735:	e8 46 bc fe ff       	call   4380 <__cxa_atexit@plt>
   1873a:	90                   	nop
   1873b:	c9                   	leave
   1873c:	c3                   	ret

000000000001873d <_GLOBAL__sub_I_Utility.cpp>:
   1873d:	55                   	push   %rbp
   1873e:	48 89 e5             	mov    %rsp,%rbp
   18741:	be ff ff 00 00       	mov    $0xffff,%esi
   18746:	bf 01 00 00 00       	mov    $0x1,%edi
   1874b:	e8 9b ff ff ff       	call   186eb <_Z41__static_initialization_and_destruction_0ii>
   18750:	5d                   	pop    %rbp
   18751:	c3                   	ret

0000000000018752 <_ZN4rtvc6Vertex21getBindingDescriptionEv>:
#include "Vertex.hpp"

namespace rtvc {
VkVertexInputBindingDescription Vertex::getBindingDescription() {
   18752:	55                   	push   %rbp
   18753:	48 89 e5             	mov    %rsp,%rbp
  VkVertexInputBindingDescription bindingDescription{};
   18756:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1875d:	00 
   1875e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)

  bindingDescription.binding = 0;
   18765:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  bindingDescription.stride = sizeof(Vertex);
   1876c:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
  bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   18773:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)

  return bindingDescription;
   1877a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1877e:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   18782:	8b 45 f0             	mov    -0x10(%rbp),%eax
   18785:	89 45 fc             	mov    %eax,-0x4(%rbp)
   18788:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   1878c:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   1878f:	48 89 ca             	mov    %rcx,%rdx
}
   18792:	5d                   	pop    %rbp
   18793:	c3                   	ret

0000000000018794 <_ZN4rtvc6Vertex24getAttributeDescriptionsEv>:

std::array<VkVertexInputAttributeDescription, 2>
Vertex::getAttributeDescriptions() {
   18794:	55                   	push   %rbp
   18795:	48 89 e5             	mov    %rsp,%rbp
   18798:	48 83 ec 10          	sub    $0x10,%rsp
   1879c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  std::array<VkVertexInputAttributeDescription, 2> attributeDescriptions{};
   187a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187a4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   187a8:	0f 11 00             	movups %xmm0,(%rax)
   187ab:	0f 11 40 10          	movups %xmm0,0x10(%rax)

  attributeDescriptions[0].binding = 0;
   187af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187b3:	be 00 00 00 00       	mov    $0x0,%esi
   187b8:	48 89 c7             	mov    %rax,%rdi
   187bb:	e8 b4 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   187c0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  attributeDescriptions[0].location = 0;
   187c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187cb:	be 00 00 00 00       	mov    $0x0,%esi
   187d0:	48 89 c7             	mov    %rax,%rdi
   187d3:	e8 9c 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   187d8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   187de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187e2:	be 00 00 00 00       	mov    $0x0,%esi
   187e7:	48 89 c7             	mov    %rax,%rdi
   187ea:	e8 85 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   187ef:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
  attributeDescriptions[0].offset = offsetof(Vertex, pos);
   187f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187fa:	be 00 00 00 00       	mov    $0x0,%esi
   187ff:	48 89 c7             	mov    %rax,%rdi
   18802:	e8 6d 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   18807:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

  attributeDescriptions[1].binding = 0;
   1880e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18812:	be 01 00 00 00       	mov    $0x1,%esi
   18817:	48 89 c7             	mov    %rax,%rdi
   1881a:	e8 55 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1881f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  attributeDescriptions[1].location = 1;
   18826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1882a:	be 01 00 00 00       	mov    $0x1,%esi
   1882f:	48 89 c7             	mov    %rax,%rdi
   18832:	e8 3d 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   18837:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   1883d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18841:	be 01 00 00 00       	mov    $0x1,%esi
   18846:	48 89 c7             	mov    %rax,%rdi
   18849:	e8 26 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1884e:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
  attributeDescriptions[1].offset = offsetof(Vertex, color);
   18855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18859:	be 01 00 00 00       	mov    $0x1,%esi
   1885e:	48 89 c7             	mov    %rax,%rdi
   18861:	e8 0e 00 00 00       	call   18874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   18866:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

  return attributeDescriptions;
   1886d:	90                   	nop
}
   1886e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18872:	c9                   	leave
   18873:	c3                   	ret

0000000000018874 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   18874:	55                   	push   %rbp
   18875:	48 89 e5             	mov    %rsp,%rbp
   18878:	48 83 ec 10          	sub    $0x10,%rsp
   1887c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18880:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   18884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18888:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1888c:	48 89 d6             	mov    %rdx,%rsi
   1888f:	48 89 c7             	mov    %rax,%rdi
   18892:	e8 02 00 00 00       	call   18899 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   18897:	c9                   	leave
   18898:	c3                   	ret

0000000000018899 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   18899:	55                   	push   %rbp
   1889a:	48 89 e5             	mov    %rsp,%rbp
   1889d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   188a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   188a9:	48 c1 e0 04          	shl    $0x4,%rax
   188ad:	48 89 c2             	mov    %rax,%rdx
   188b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188b4:	48 01 d0             	add    %rdx,%rax
   188b7:	5d                   	pop    %rbp
   188b8:	c3                   	ret

Disassembly of section .fini:

00000000000188bc <_fini>:
   188bc:	48 83 ec 08          	sub    $0x8,%rsp
   188c0:	48 83 c4 08          	add    $0x8,%rsp
   188c4:	c3                   	ret
