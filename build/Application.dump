
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 bd cf 01 00 	mov    0x1cfbd(%rip),%rax        # 1ffc8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca cf 01 00    	push   0x1cfca(%rip)        # 1fff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc cf 01 00    	jmp    *0x1cfcc(%rip)        # 1fff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca cf 01 00    	jmp    *0x1cfca(%rip)        # 20000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 cf 01 00    	jmp    *0x1cfc2(%rip)        # 20008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba cf 01 00    	jmp    *0x1cfba(%rip)        # 20010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZSt9terminatev@plt>:
    3060:	ff 25 b2 cf 01 00    	jmp    *0x1cfb2(%rip)        # 20018 <_ZSt9terminatev@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>:
    3070:	ff 25 aa cf 01 00    	jmp    *0x1cfaa(%rip)        # 20020 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@GLIBCXX_3.4.30>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <glfwDestroyWindow@plt>:
    3080:	ff 25 a2 cf 01 00    	jmp    *0x1cfa2(%rip)        # 20028 <glfwDestroyWindow@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <_ZSt17__throw_bad_allocv@plt>:
    3090:	ff 25 9a cf 01 00    	jmp    *0x1cf9a(%rip)        # 20030 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZSt25__throw_bad_function_callv@plt>:
    30a0:	ff 25 92 cf 01 00    	jmp    *0x1cf92(%rip)        # 20038 <_ZSt25__throw_bad_function_callv@GLIBCXX_3.4.14>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30b0:	ff 25 8a cf 01 00    	jmp    *0x1cf8a(%rip)        # 20040 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <vkGetPhysicalDeviceProperties@plt>:
    30c0:	ff 25 82 cf 01 00    	jmp    *0x1cf82(%rip)        # 20048 <vkGetPhysicalDeviceProperties@Base>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <__cxa_begin_catch@plt>:
    30d0:	ff 25 7a cf 01 00    	jmp    *0x1cf7a(%rip)        # 20050 <__cxa_begin_catch@CXXABI_1.3>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    30e0:	ff 25 72 cf 01 00    	jmp    *0x1cf72(%rip)        # 20058 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <strlen@plt>:
    30f0:	ff 25 6a cf 01 00    	jmp    *0x1cf6a(%rip)        # 20060 <strlen@GLIBC_2.2.5>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZNSt6thread6_StateD2Ev@plt>:
    3100:	ff 25 62 cf 01 00    	jmp    *0x1cf62(%rip)        # 20068 <_ZNSt6thread6_StateD2Ev@GLIBCXX_3.4.22>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <__cxa_allocate_exception@plt>:
    3110:	ff 25 5a cf 01 00    	jmp    *0x1cf5a(%rip)        # 20070 <__cxa_allocate_exception@CXXABI_1.3>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt18condition_variable10notify_oneEv@plt>:
    3120:	ff 25 52 cf 01 00    	jmp    *0x1cf52(%rip)        # 20078 <_ZNSt18condition_variable10notify_oneEv@GLIBCXX_3.4.11>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZSt20__throw_length_errorPKc@plt>:
    3130:	ff 25 4a cf 01 00    	jmp    *0x1cf4a(%rip)        # 20080 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <vkEnumeratePhysicalDevices@plt>:
    3140:	ff 25 42 cf 01 00    	jmp    *0x1cf42(%rip)        # 20088 <vkEnumeratePhysicalDevices@Base>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3150:	ff 25 3a cf 01 00    	jmp    *0x1cf3a(%rip)        # 20090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3160:	ff 25 32 cf 01 00    	jmp    *0x1cf32(%rip)        # 20098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZSt20__throw_system_errori@plt>:
    3170:	ff 25 2a cf 01 00    	jmp    *0x1cf2a(%rip)        # 200a0 <_ZSt20__throw_system_errori@GLIBCXX_3.4.11>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3180:	ff 25 22 cf 01 00    	jmp    *0x1cf22(%rip)        # 200a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3190:	ff 25 1a cf 01 00    	jmp    *0x1cf1a(%rip)        # 200b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt19__throw_logic_errorPKc@plt>:
    31a0:	ff 25 12 cf 01 00    	jmp    *0x1cf12(%rip)        # 200b8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <__cxa_free_exception@plt>:
    31b0:	ff 25 0a cf 01 00    	jmp    *0x1cf0a(%rip)        # 200c0 <__cxa_free_exception@CXXABI_1.3>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZNSolsEf@plt>:
    31c0:	ff 25 02 cf 01 00    	jmp    *0x1cf02(%rip)        # 200c8 <_ZNSolsEf@GLIBCXX_3.4>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <pthread_mutex_unlock@plt>:
    31d0:	ff 25 fa ce 01 00    	jmp    *0x1cefa(%rip)        # 200d0 <pthread_mutex_unlock@GLIBC_2.2.5>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    31e0:	ff 25 f2 ce 01 00    	jmp    *0x1cef2(%rip)        # 200d8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetPhysicalDeviceFeatures@plt>:
    31f0:	ff 25 ea ce 01 00    	jmp    *0x1ceea(%rip)        # 200e0 <vkGetPhysicalDeviceFeatures@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <glfwGetRequiredInstanceExtensions@plt>:
    3200:	ff 25 e2 ce 01 00    	jmp    *0x1cee2(%rip)        # 200e8 <glfwGetRequiredInstanceExtensions@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3210:	ff 25 da ce 01 00    	jmp    *0x1ceda(%rip)        # 200f0 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3220:	ff 25 d2 ce 01 00    	jmp    *0x1ced2(%rip)        # 200f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkDestroyDevice@plt>:
    3230:	ff 25 ca ce 01 00    	jmp    *0x1ceca(%rip)        # 20100 <vkDestroyDevice@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3240:	ff 25 c2 ce 01 00    	jmp    *0x1cec2(%rip)        # 20108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <glfwWindowHint@plt>:
    3250:	ff 25 ba ce 01 00    	jmp    *0x1ceba(%rip)        # 20110 <glfwWindowHint@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <__cxa_atexit@plt>:
    3260:	ff 25 b2 ce 01 00    	jmp    *0x1ceb2(%rip)        # 20118 <__cxa_atexit@GLIBC_2.2.5>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <pthread_self@plt>:
    3270:	ff 25 aa ce 01 00    	jmp    *0x1ceaa(%rip)        # 20120 <pthread_self@GLIBC_2.2.5>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>:
    3280:	ff 25 a2 ce 01 00    	jmp    *0x1cea2(%rip)        # 20128 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@GLIBCXX_3.4.22>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkGetInstanceProcAddr@plt>:
    3290:	ff 25 9a ce 01 00    	jmp    *0x1ce9a(%rip)        # 20130 <vkGetInstanceProcAddr@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <glfwPollEvents@plt>:
    32a0:	ff 25 92 ce 01 00    	jmp    *0x1ce92(%rip)        # 20138 <glfwPollEvents@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    32b0:	ff 25 8a ce 01 00    	jmp    *0x1ce8a(%rip)        # 20140 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_Znwm@plt>:
    32c0:	ff 25 82 ce 01 00    	jmp    *0x1ce82(%rip)        # 20148 <_Znwm@GLIBCXX_3.4>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <_ZdlPvm@plt>:
    32d0:	ff 25 7a ce 01 00    	jmp    *0x1ce7a(%rip)        # 20150 <_ZdlPvm@CXXABI_1.3.9>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <vkDestroyInstance@plt>:
    32e0:	ff 25 72 ce 01 00    	jmp    *0x1ce72(%rip)        # 20158 <vkDestroyInstance@Base>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <glfwTerminate@plt>:
    32f0:	ff 25 6a ce 01 00    	jmp    *0x1ce6a(%rip)        # 20160 <glfwTerminate@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3300:	ff 25 62 ce 01 00    	jmp    *0x1ce62(%rip)        # 20168 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZNSolsEPFRSoS_E@plt>:
    3310:	ff 25 5a ce 01 00    	jmp    *0x1ce5a(%rip)        # 20170 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3320:	ff 25 52 ce 01 00    	jmp    *0x1ce52(%rip)        # 20178 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3330:	ff 25 4a ce 01 00    	jmp    *0x1ce4a(%rip)        # 20180 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <_ZNSaIcED1Ev@plt>:
    3340:	ff 25 42 ce 01 00    	jmp    *0x1ce42(%rip)        # 20188 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3350:	ff 25 3a ce 01 00    	jmp    *0x1ce3a(%rip)        # 20190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3360:	ff 25 32 ce 01 00    	jmp    *0x1ce32(%rip)        # 20198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <glfwInit@plt>:
    3370:	ff 25 2a ce 01 00    	jmp    *0x1ce2a(%rip)        # 201a0 <glfwInit@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3380:	ff 25 22 ce 01 00    	jmp    *0x1ce22(%rip)        # 201a8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkCreateInstance@plt>:
    3390:	ff 25 1a ce 01 00    	jmp    *0x1ce1a(%rip)        # 201b0 <vkCreateInstance@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    33a0:	ff 25 12 ce 01 00    	jmp    *0x1ce12(%rip)        # 201b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <vkEnumerateInstanceVersion@plt>:
    33b0:	ff 25 0a ce 01 00    	jmp    *0x1ce0a(%rip)        # 201c0 <vkEnumerateInstanceVersion@Base>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    33c0:	ff 25 02 ce 01 00    	jmp    *0x1ce02(%rip)        # 201c8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <vkGetDeviceQueue@plt>:
    33d0:	ff 25 fa cd 01 00    	jmp    *0x1cdfa(%rip)        # 201d0 <vkGetDeviceQueue@Base>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZNSt6thread20hardware_concurrencyEv@plt>:
    33e0:	ff 25 f2 cd 01 00    	jmp    *0x1cdf2(%rip)        # 201d8 <_ZNSt6thread20hardware_concurrencyEv@GLIBCXX_3.4.17>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkEnumerateDeviceExtensionProperties@plt>:
    33f0:	ff 25 ea cd 01 00    	jmp    *0x1cdea(%rip)        # 201e0 <vkEnumerateDeviceExtensionProperties@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <_ZNSt18condition_variableC1Ev@plt>:
    3400:	ff 25 e2 cd 01 00    	jmp    *0x1cde2(%rip)        # 201e8 <_ZNSt18condition_variableC1Ev@GLIBCXX_3.4.11>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <__cxa_rethrow@plt>:
    3410:	ff 25 da cd 01 00    	jmp    *0x1cdda(%rip)        # 201f0 <__cxa_rethrow@CXXABI_1.3>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <pthread_mutex_lock@plt>:
    3420:	ff 25 d2 cd 01 00    	jmp    *0x1cdd2(%rip)        # 201f8 <pthread_mutex_lock@GLIBC_2.2.5>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <vkCreateDevice@plt>:
    3430:	ff 25 ca cd 01 00    	jmp    *0x1cdca(%rip)        # 20200 <vkCreateDevice@Base>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <_ZNSt8ios_base4InitC1Ev@plt>:
    3440:	ff 25 c2 cd 01 00    	jmp    *0x1cdc2(%rip)        # 20208 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <glfwCreateWindowSurface@plt>:
    3450:	ff 25 ba cd 01 00    	jmp    *0x1cdba(%rip)        # 20210 <glfwCreateWindowSurface@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <glfwCreateWindow@plt>:
    3460:	ff 25 b2 cd 01 00    	jmp    *0x1cdb2(%rip)        # 20218 <glfwCreateWindow@Base>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <memmove@plt>:
    3470:	ff 25 aa cd 01 00    	jmp    *0x1cdaa(%rip)        # 20220 <memmove@GLIBC_2.2.5>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <__cxa_end_catch@plt>:
    3480:	ff 25 a2 cd 01 00    	jmp    *0x1cda2(%rip)        # 20228 <__cxa_end_catch@CXXABI_1.3>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <_ZNSt18condition_variable10notify_allEv@plt>:
    3490:	ff 25 9a cd 01 00    	jmp    *0x1cd9a(%rip)        # 20230 <_ZNSt18condition_variable10notify_allEv@GLIBCXX_3.4.11>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt6thread4joinEv@plt>:
    34a0:	ff 25 92 cd 01 00    	jmp    *0x1cd92(%rip)        # 20238 <_ZNSt6thread4joinEv@GLIBCXX_3.4.11>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <__cxa_throw@plt>:
    34b0:	ff 25 8a cd 01 00    	jmp    *0x1cd8a(%rip)        # 20240 <__cxa_throw@CXXABI_1.3>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <vkDestroySurfaceKHR@plt>:
    34c0:	ff 25 82 cd 01 00    	jmp    *0x1cd82(%rip)        # 20248 <vkDestroySurfaceKHR@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <_Unwind_Resume@plt>:
    34d0:	ff 25 7a cd 01 00    	jmp    *0x1cd7a(%rip)        # 20250 <_Unwind_Resume@GCC_3.0>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_ZNSaIcEC1Ev@plt>:
    34e0:	ff 25 72 cd 01 00    	jmp    *0x1cd72(%rip)        # 20258 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    34f0:	ff 25 6a cd 01 00    	jmp    *0x1cd6a(%rip)        # 20260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <_ZNSt18condition_variableD1Ev@plt>:
    3500:	ff 25 62 cd 01 00    	jmp    *0x1cd62(%rip)        # 20268 <_ZNSt18condition_variableD1Ev@GLIBCXX_3.4.11>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <glfwWindowShouldClose@plt>:
    3510:	ff 25 5a cd 01 00    	jmp    *0x1cd5a(%rip)        # 20270 <glfwWindowShouldClose@Base>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3520:	ff 25 52 cd 01 00    	jmp    *0x1cd52(%rip)        # 20278 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003530 <__cxa_finalize@plt>:
    3530:	ff 25 6a ca 01 00    	jmp    *0x1ca6a(%rip)        # 1ffa0 <__cxa_finalize@GLIBC_2.2.5>
    3536:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003540 <_start>:
    3540:	31 ed                	xor    %ebp,%ebp
    3542:	49 89 d1             	mov    %rdx,%r9
    3545:	5e                   	pop    %rsi
    3546:	48 89 e2             	mov    %rsp,%rdx
    3549:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    354d:	50                   	push   %rax
    354e:	54                   	push   %rsp
    354f:	45 31 c0             	xor    %r8d,%r8d
    3552:	31 c9                	xor    %ecx,%ecx
    3554:	48 8d 3d d2 01 00 00 	lea    0x1d2(%rip),%rdi        # 372d <main>
    355b:	ff 15 4f ca 01 00    	call   *0x1ca4f(%rip)        # 1ffb0 <__libc_start_main@GLIBC_2.34>
    3561:	f4                   	hlt
    3562:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3569:	00 00 00 
    356c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003570 <deregister_tm_clones>:
    3570:	48 8d 3d 29 cd 01 00 	lea    0x1cd29(%rip),%rdi        # 202a0 <__TMC_END__>
    3577:	48 8d 05 22 cd 01 00 	lea    0x1cd22(%rip),%rax        # 202a0 <__TMC_END__>
    357e:	48 39 f8             	cmp    %rdi,%rax
    3581:	74 15                	je     3598 <deregister_tm_clones+0x28>
    3583:	48 8b 05 36 ca 01 00 	mov    0x1ca36(%rip),%rax        # 1ffc0 <_ITM_deregisterTMCloneTable@Base>
    358a:	48 85 c0             	test   %rax,%rax
    358d:	74 09                	je     3598 <deregister_tm_clones+0x28>
    358f:	ff e0                	jmp    *%rax
    3591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3598:	c3                   	ret
    3599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035a0 <register_tm_clones>:
    35a0:	48 8d 3d f9 cc 01 00 	lea    0x1ccf9(%rip),%rdi        # 202a0 <__TMC_END__>
    35a7:	48 8d 35 f2 cc 01 00 	lea    0x1ccf2(%rip),%rsi        # 202a0 <__TMC_END__>
    35ae:	48 29 fe             	sub    %rdi,%rsi
    35b1:	48 89 f0             	mov    %rsi,%rax
    35b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    35b8:	48 c1 f8 03          	sar    $0x3,%rax
    35bc:	48 01 c6             	add    %rax,%rsi
    35bf:	48 d1 fe             	sar    %rsi
    35c2:	74 14                	je     35d8 <register_tm_clones+0x38>
    35c4:	48 8b 05 05 ca 01 00 	mov    0x1ca05(%rip),%rax        # 1ffd0 <_ITM_registerTMCloneTable@Base>
    35cb:	48 85 c0             	test   %rax,%rax
    35ce:	74 08                	je     35d8 <register_tm_clones+0x38>
    35d0:	ff e0                	jmp    *%rax
    35d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    35d8:	c3                   	ret
    35d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035e0 <__do_global_dtors_aux>:
    35e0:	f3 0f 1e fa          	endbr64
    35e4:	80 3d 05 cf 01 00 00 	cmpb   $0x0,0x1cf05(%rip)        # 204f0 <completed.0>
    35eb:	75 2b                	jne    3618 <__do_global_dtors_aux+0x38>
    35ed:	55                   	push   %rbp
    35ee:	48 83 3d aa c9 01 00 	cmpq   $0x0,0x1c9aa(%rip)        # 1ffa0 <__cxa_finalize@GLIBC_2.2.5>
    35f5:	00 
    35f6:	48 89 e5             	mov    %rsp,%rbp
    35f9:	74 0c                	je     3607 <__do_global_dtors_aux+0x27>
    35fb:	48 8b 3d 86 cc 01 00 	mov    0x1cc86(%rip),%rdi        # 20288 <__dso_handle>
    3602:	e8 29 ff ff ff       	call   3530 <__cxa_finalize@plt>
    3607:	e8 64 ff ff ff       	call   3570 <deregister_tm_clones>
    360c:	c6 05 dd ce 01 00 01 	movb   $0x1,0x1cedd(%rip)        # 204f0 <completed.0>
    3613:	5d                   	pop    %rbp
    3614:	c3                   	ret
    3615:	0f 1f 00             	nopl   (%rax)
    3618:	c3                   	ret
    3619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003620 <frame_dummy>:
    3620:	f3 0f 1e fa          	endbr64
    3624:	e9 77 ff ff ff       	jmp    35a0 <register_tm_clones>

0000000000003629 <_ZL18__gthread_active_pv>:

#else /* not hppa-hpux */

static inline int
__gthread_active_p (void)
{
    3629:	55                   	push   %rbp
    362a:	48 89 e5             	mov    %rsp,%rbp
  return 1;
    362d:	b8 01 00 00 00       	mov    $0x1,%eax
}
    3632:	5d                   	pop    %rbp
    3633:	c3                   	ret

0000000000003634 <_Z14protected_mainv>:
#include <neko.hpp>

#include <iostream>

int protected_main() {
    3634:	55                   	push   %rbp
    3635:	48 89 e5             	mov    %rsp,%rbp
    3638:	53                   	push   %rbx
    3639:	48 83 ec 38          	sub    $0x38,%rsp
  auto start = std::chrono::steady_clock::now();
    363d:	e8 7e fd ff ff       	call   33c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3642:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  auto engine = std::make_unique<neko::Engine>();
    3646:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    364a:	48 89 c7             	mov    %rax,%rdi
    364d:	e8 b3 21 00 00       	call   5805 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
  std::cout << "Load time: "
    3652:	48 8d 05 13 e0 00 00 	lea    0xe013(%rip),%rax        # 1166c <_ZN6__pstl9execution2v1L5unseqE+0x1>
    3659:	48 89 c6             	mov    %rax,%rsi
    365c:	48 8d 05 5d cc 01 00 	lea    0x1cc5d(%rip),%rax        # 202c0 <_ZSt4cout@GLIBCXX_3.4>
    3663:	48 89 c7             	mov    %rax,%rdi
    3666:	e8 45 fc ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    366b:	48 89 c3             	mov    %rax,%rbx
            << static_cast<float>(
                   std::chrono::duration_cast<std::chrono::microseconds>(
                       std::chrono::steady_clock::now() - start)
    366e:	e8 4d fd ff ff       	call   33c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3673:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3677:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    367b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    367f:	48 89 d6             	mov    %rdx,%rsi
    3682:	48 89 c7             	mov    %rax,%rdi
    3685:	e8 4e 22 00 00       	call   58d8 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    368a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
                   std::chrono::duration_cast<std::chrono::microseconds>(
    368e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    3692:	48 89 c7             	mov    %rax,%rdi
    3695:	e8 83 22 00 00       	call   591d <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    369a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
                       .count()) /
    369e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    36a2:	48 89 c7             	mov    %rax,%rdi
    36a5:	e8 8e 22 00 00       	call   5938 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
            << static_cast<float>(
    36aa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    36ae:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
                   1000.0f
    36b3:	f3 0f 10 0d 75 e0 00 	movss  0xe075(%rip),%xmm1        # 11730 <_ZN6__pstl9execution2v1L5unseqE+0xc5>
    36ba:	00 
    36bb:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    36bf:	66 0f 7e c0          	movd   %xmm0,%eax
    36c3:	66 0f 6e c0          	movd   %eax,%xmm0
    36c7:	48 89 df             	mov    %rbx,%rdi
    36ca:	e8 f1 fa ff ff       	call   31c0 <_ZNSolsEf@plt>
    36cf:	48 89 c2             	mov    %rax,%rdx
            << " ms\n";
    36d2:	48 8d 05 9f df 00 00 	lea    0xdf9f(%rip),%rax        # 11678 <_ZN6__pstl9execution2v1L5unseqE+0xd>
    36d9:	48 89 c6             	mov    %rax,%rsi
    36dc:	48 89 d7             	mov    %rdx,%rdi
    36df:	e8 cc fb ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  engine->start();
    36e4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    36e8:	48 89 c7             	mov    %rax,%rdi
    36eb:	e8 5a 22 00 00       	call   594a <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>
    36f0:	48 89 c7             	mov    %rax,%rdi
    36f3:	e8 e8 0f 00 00       	call   46e0 <_ZN4neko6Engine5startEv>
  return EXIT_SUCCESS;
    36f8:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    36fd:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3701:	48 89 c7             	mov    %rax,%rdi
    3704:	e8 6b 21 00 00       	call   5874 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
  return EXIT_SUCCESS;
    3709:	89 d8                	mov    %ebx,%eax
    370b:	eb 1a                	jmp    3727 <_Z14protected_mainv+0xf3>
}
    370d:	48 89 c3             	mov    %rax,%rbx
    3710:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3714:	48 89 c7             	mov    %rax,%rdi
    3717:	e8 58 21 00 00       	call   5874 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
    371c:	48 89 d8             	mov    %rbx,%rax
    371f:	48 89 c7             	mov    %rax,%rdi
    3722:	e8 a9 fd ff ff       	call   34d0 <_Unwind_Resume@plt>
    3727:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    372b:	c9                   	leave
    372c:	c3                   	ret

000000000000372d <main>:

int main() {
    372d:	55                   	push   %rbp
    372e:	48 89 e5             	mov    %rsp,%rbp
    3731:	53                   	push   %rbx
    3732:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    3736:	e8 f9 fe ff ff       	call   3634 <_Z14protected_mainv>
    373b:	e9 c1 00 00 00       	jmp    3801 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    3740:	b8 01 00 00 00       	mov    $0x1,%eax
    3745:	e9 b7 00 00 00       	jmp    3801 <main+0xd4>
  } catch (std::exception &e) {
    374a:	48 83 fa 01          	cmp    $0x1,%rdx
    374e:	75 4e                	jne    379e <main+0x71>
    3750:	48 89 c7             	mov    %rax,%rdi
    3753:	e8 78 f9 ff ff       	call   30d0 <__cxa_begin_catch@plt>
    3758:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    375c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3760:	48 8b 00             	mov    (%rax),%rax
    3763:	48 83 c0 10          	add    $0x10,%rax
    3767:	48 8b 10             	mov    (%rax),%rdx
    376a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    376e:	48 89 c7             	mov    %rax,%rdi
    3771:	ff d2                	call   *%rdx
    3773:	48 89 c6             	mov    %rax,%rsi
    3776:	48 8d 05 63 cc 01 00 	lea    0x1cc63(%rip),%rax        # 203e0 <_ZSt4cerr@GLIBCXX_3.4>
    377d:	48 89 c7             	mov    %rax,%rdi
    3780:	e8 2b fb ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3785:	48 8b 15 1c c8 01 00 	mov    0x1c81c(%rip),%rdx        # 1ffa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    378c:	48 89 d6             	mov    %rdx,%rsi
    378f:	48 89 c7             	mov    %rax,%rdi
    3792:	e8 79 fb ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    3797:	e8 e4 fc ff ff       	call   3480 <__cxa_end_catch@plt>
    379c:	eb a2                	jmp    3740 <main+0x13>
    379e:	48 89 c7             	mov    %rax,%rdi
    37a1:	e8 2a f9 ff ff       	call   30d0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    37a6:	48 8d 05 d0 de 00 00 	lea    0xded0(%rip),%rax        # 1167d <_ZN6__pstl9execution2v1L5unseqE+0x12>
    37ad:	48 89 c6             	mov    %rax,%rsi
    37b0:	48 8d 05 29 cc 01 00 	lea    0x1cc29(%rip),%rax        # 203e0 <_ZSt4cerr@GLIBCXX_3.4>
    37b7:	48 89 c7             	mov    %rax,%rdi
    37ba:	e8 f1 fa ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    37bf:	48 8b 15 e2 c7 01 00 	mov    0x1c7e2(%rip),%rdx        # 1ffa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    37c6:	48 89 d6             	mov    %rdx,%rsi
    37c9:	48 89 c7             	mov    %rax,%rdi
    37cc:	e8 3f fb ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  }
    37d1:	e8 aa fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37d6:	e9 65 ff ff ff       	jmp    3740 <main+0x13>
  } catch (...) {
    37db:	48 89 c3             	mov    %rax,%rbx
    37de:	e8 9d fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37e3:	48 89 d8             	mov    %rbx,%rax
    37e6:	48 89 c7             	mov    %rax,%rdi
    37e9:	e8 e2 fc ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    37ee:	48 89 c3             	mov    %rax,%rbx
    37f1:	e8 8a fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37f6:	48 89 d8             	mov    %rbx,%rax
    37f9:	48 89 c7             	mov    %rax,%rdi
    37fc:	e8 cf fc ff ff       	call   34d0 <_Unwind_Resume@plt>
    3801:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3805:	c9                   	leave
    3806:	c3                   	ret

0000000000003807 <_Z41__static_initialization_and_destruction_0ii>:
    3807:	55                   	push   %rbp
    3808:	48 89 e5             	mov    %rsp,%rbp
    380b:	48 83 ec 10          	sub    $0x10,%rsp
    380f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3812:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3815:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3819:	75 3b                	jne    3856 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    381b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    3822:	75 32                	jne    3856 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    3824:	48 8d 05 c6 cc 01 00 	lea    0x1ccc6(%rip),%rax        # 204f1 <_ZStL8__ioinit>
    382b:	48 89 c7             	mov    %rax,%rdi
    382e:	e8 0d fc ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
    3833:	48 8d 05 4e ca 01 00 	lea    0x1ca4e(%rip),%rax        # 20288 <__dso_handle>
    383a:	48 89 c2             	mov    %rax,%rdx
    383d:	48 8d 05 ad cc 01 00 	lea    0x1ccad(%rip),%rax        # 204f1 <_ZStL8__ioinit>
    3844:	48 89 c6             	mov    %rax,%rsi
    3847:	48 8b 05 8a c7 01 00 	mov    0x1c78a(%rip),%rax        # 1ffd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    384e:	48 89 c7             	mov    %rax,%rdi
    3851:	e8 0a fa ff ff       	call   3260 <__cxa_atexit@plt>
    3856:	90                   	nop
    3857:	c9                   	leave
    3858:	c3                   	ret

0000000000003859 <_GLOBAL__sub_I__Z14protected_mainv>:
    3859:	55                   	push   %rbp
    385a:	48 89 e5             	mov    %rsp,%rbp
    385d:	be ff ff 00 00       	mov    $0xffff,%esi
    3862:	bf 01 00 00 00       	mov    $0x1,%edi
    3867:	e8 9b ff ff ff       	call   3807 <_Z41__static_initialization_and_destruction_0ii>
    386c:	5d                   	pop    %rbp
    386d:	c3                   	ret

000000000000386e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    386e:	55                   	push   %rbp
    386f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    3872:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    3877:	5d                   	pop    %rbp
    3878:	c3                   	ret

0000000000003879 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    3879:	55                   	push   %rbp
    387a:	48 89 e5             	mov    %rsp,%rbp
    387d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3881:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3885:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3889:	5d                   	pop    %rbp
    388a:	c3                   	ret

000000000000388b <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    388b:	55                   	push   %rbp
    388c:	48 89 e5             	mov    %rsp,%rbp
    388f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3893:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3897:	90                   	nop
    3898:	5d                   	pop    %rbp
    3899:	c3                   	ret

000000000000389a <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    389a:	55                   	push   %rbp
    389b:	48 89 e5             	mov    %rsp,%rbp
    389e:	48 83 ec 10          	sub    $0x10,%rsp
    38a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    38a6:	e8 c3 ff ff ff       	call   386e <_ZSt23__is_constant_evaluatedv>
    38ab:	84 c0                	test   %al,%al
    38ad:	74 0e                	je     38bd <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    38af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38b3:	48 89 c7             	mov    %rax,%rdi
    38b6:	e8 9d 0e 00 00       	call   4758 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    38bb:	eb 0d                	jmp    38ca <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    38bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c1:	48 89 c7             	mov    %rax,%rdi
    38c4:	e8 27 f8 ff ff       	call   30f0 <strlen@plt>
    38c9:	90                   	nop
      }
    38ca:	c9                   	leave
    38cb:	c3                   	ret

00000000000038cc <_ZN4neko7ContextD1Ev>:

  Context &operator=(const Context &) = delete;

  Context &operator=(Context &&) = default;

  ~Context() { destroyContext(); }
    38cc:	55                   	push   %rbp
    38cd:	48 89 e5             	mov    %rsp,%rbp
    38d0:	48 83 ec 10          	sub    $0x10,%rsp
    38d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38d8:	e8 c7 bc 00 00       	call   f5a4 <_ZN4neko7Context14destroyContextEv>
    38dd:	90                   	nop
    38de:	c9                   	leave
    38df:	c3                   	ret

00000000000038e0 <_ZN4neko8InstanceD1Ev>:
  explicit Instance(const Settings &settings);
  Instance(const Instance &) = delete;
  Instance(Instance &&rhs) noexcept;
  Instance &operator=(const Instance &) = delete;
  Instance &operator=(Instance &&rhs);
  ~Instance() { release(); }
    38e0:	55                   	push   %rbp
    38e1:	48 89 e5             	mov    %rsp,%rbp
    38e4:	48 83 ec 10          	sub    $0x10,%rsp
    38e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38f0:	48 89 c7             	mov    %rax,%rdi
    38f3:	e8 38 c5 00 00       	call   fe30 <_ZN4neko8Instance7releaseEv>
    38f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38fc:	48 89 c7             	mov    %rax,%rdi
    38ff:	e8 c8 ff ff ff       	call   38cc <_ZN4neko7ContextD1Ev>
    3904:	90                   	nop
    3905:	c9                   	leave
    3906:	c3                   	ret
    3907:	90                   	nop

0000000000003908 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE>:

class Renderer {
public:
  Renderer() = delete;

  Renderer(const Settings &settings, ThreadPool &threadPool)
    3908:	55                   	push   %rbp
    3909:	48 89 e5             	mov    %rsp,%rbp
    390c:	53                   	push   %rbx
    390d:	48 83 ec 28          	sub    $0x28,%rsp
    3911:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3915:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3919:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : mpSettings{&settings},
    391d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3921:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3925:	48 89 10             	mov    %rdx,(%rax)
        mpThreadPool{&threadPool}, mInstance{*mpSettings}, mWindow{*mpSettings},
    3928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    392c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3930:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3934:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3938:	48 8d 50 10          	lea    0x10(%rax),%rdx
    393c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3940:	48 8b 00             	mov    (%rax),%rax
    3943:	48 89 c6             	mov    %rax,%rsi
    3946:	48 89 d7             	mov    %rdx,%rdi
    3949:	e8 0e c0 00 00       	call   f95c <_ZN4neko8InstanceC1ERKNS_8SettingsE>
    394e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3952:	48 8d 50 30          	lea    0x30(%rax),%rdx
    3956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    395a:	48 8b 00             	mov    (%rax),%rax
    395d:	48 89 c6             	mov    %rax,%rsi
    3960:	48 89 d7             	mov    %rdx,%rdi
    3963:	e8 3c d3 00 00       	call   10ca4 <_ZN4neko6WindowC1ERKNS_8SettingsE>
        mSurface{mInstance, mWindow}, mDevice{mInstance, mSurface} {}
    3968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    396c:	48 83 c0 40          	add    $0x40,%rax
    3970:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3974:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    3978:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    397c:	48 83 c2 30          	add    $0x30,%rdx
    3980:	48 89 ce             	mov    %rcx,%rsi
    3983:	48 89 c7             	mov    %rax,%rdi
    3986:	e8 ed d3 00 00       	call   10d78 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    398b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    398f:	48 83 c0 50          	add    $0x50,%rax
    3993:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3997:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    399b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    399f:	48 83 c2 40          	add    $0x40,%rdx
    39a3:	48 89 ce             	mov    %rcx,%rsi
    39a6:	48 89 c7             	mov    %rax,%rdi
    39a9:	e8 9a 72 00 00       	call   ac48 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    39ae:	eb 48                	jmp    39f8 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xf0>
    39b0:	48 89 c3             	mov    %rax,%rbx
    39b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39b7:	48 83 c0 40          	add    $0x40,%rax
    39bb:	48 89 c7             	mov    %rax,%rdi
    39be:	e8 75 d4 00 00       	call   10e38 <_ZN4neko7SurfaceD1Ev>
    39c3:	eb 03                	jmp    39c8 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xc0>
    39c5:	48 89 c3             	mov    %rax,%rbx
    39c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39cc:	48 83 c0 30          	add    $0x30,%rax
    39d0:	48 89 c7             	mov    %rax,%rdi
    39d3:	e8 52 d3 00 00       	call   10d2a <_ZN4neko6WindowD1Ev>
    39d8:	eb 03                	jmp    39dd <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xd5>
    39da:	48 89 c3             	mov    %rax,%rbx
    39dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39e1:	48 83 c0 10          	add    $0x10,%rax
    39e5:	48 89 c7             	mov    %rax,%rdi
    39e8:	e8 f3 fe ff ff       	call   38e0 <_ZN4neko8InstanceD1Ev>
    39ed:	48 89 d8             	mov    %rbx,%rax
    39f0:	48 89 c7             	mov    %rax,%rdi
    39f3:	e8 d8 fa ff ff       	call   34d0 <_Unwind_Resume@plt>
    39f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39fc:	c9                   	leave
    39fd:	c3                   	ret

00000000000039fe <_ZN4neko8Renderer5startEv>:

  Renderer &operator=(Renderer &&) = default;

  ~Renderer() = default;

  void start() {
    39fe:	55                   	push   %rbp
    39ff:	48 89 e5             	mov    %rsp,%rbp
    3a02:	48 83 ec 10          	sub    $0x10,%rsp
    3a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    mWindow.open();
    3a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a0e:	48 83 c0 30          	add    $0x30,%rax
    3a12:	48 89 c7             	mov    %rax,%rdi
    3a15:	e8 2e d3 00 00       	call   10d48 <_ZN4neko6Window4openEv>
    // Instance instance = std::move(mInstance);
    // mInstance.release();
  }
    3a1a:	90                   	nop
    3a1b:	c9                   	leave
    3a1c:	c3                   	ret
    3a1d:	90                   	nop

0000000000003a1e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3050. Conversion specification problem in chrono::duration
	template<typename _Rep2, typename = _Require<
		 is_convertible<const _Rep2&, rep>,
		 __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>
	  constexpr explicit duration(const _Rep2& __rep)
    3a1e:	55                   	push   %rbp
    3a1f:	48 89 e5             	mov    %rsp,%rbp
    3a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    3a2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a2e:	48 8b 10             	mov    (%rax),%rdx
    3a31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a35:	48 89 10             	mov    %rdx,(%rax)
    3a38:	90                   	nop
    3a39:	5d                   	pop    %rbp
    3a3a:	c3                   	ret
    3a3b:	90                   	nop

0000000000003a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
    3a3c:	55                   	push   %rbp
    3a3d:	48 89 e5             	mov    %rsp,%rbp
    3a40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    3a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a48:	48 8b 00             	mov    (%rax),%rax
    3a4b:	5d                   	pop    %rbp
    3a4c:	c3                   	ret

0000000000003a4d <_ZL20__gthread_mutex_lockP15pthread_mutex_t>:
    return 0;
}

static inline int
__gthread_mutex_lock (__gthread_mutex_t *__mutex)
{
    3a4d:	55                   	push   %rbp
    3a4e:	48 89 e5             	mov    %rsp,%rbp
    3a51:	48 83 ec 10          	sub    $0x10,%rsp
    3a55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3a59:	e8 cb fb ff ff       	call   3629 <_ZL18__gthread_active_pv>
    3a5e:	85 c0                	test   %eax,%eax
    3a60:	0f 95 c0             	setne  %al
    3a63:	84 c0                	test   %al,%al
    3a65:	74 0e                	je     3a75 <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_lock) (__mutex);
    3a67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a6b:	48 89 c7             	mov    %rax,%rdi
    3a6e:	e8 ad f9 ff ff       	call   3420 <pthread_mutex_lock@plt>
    3a73:	eb 05                	jmp    3a7a <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3a75:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3a7a:	c9                   	leave
    3a7b:	c3                   	ret

0000000000003a7c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>:
}
#endif

static inline int
__gthread_mutex_unlock (__gthread_mutex_t *__mutex)
{
    3a7c:	55                   	push   %rbp
    3a7d:	48 89 e5             	mov    %rsp,%rbp
    3a80:	48 83 ec 10          	sub    $0x10,%rsp
    3a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3a88:	e8 9c fb ff ff       	call   3629 <_ZL18__gthread_active_pv>
    3a8d:	85 c0                	test   %eax,%eax
    3a8f:	0f 95 c0             	setne  %al
    3a92:	84 c0                	test   %al,%al
    3a94:	74 0e                	je     3aa4 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_unlock) (__mutex);
    3a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a9a:	48 89 c7             	mov    %rax,%rdi
    3a9d:	e8 2e f7 ff ff       	call   31d0 <pthread_mutex_unlock@plt>
    3aa2:	eb 05                	jmp    3aa9 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3aa4:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3aa9:	c9                   	leave
    3aaa:	c3                   	ret
    3aab:	90                   	nop

0000000000003aac <_ZNSt5mutex4lockEv>:

    mutex(const mutex&) = delete;
    mutex& operator=(const mutex&) = delete;

    void
    lock()
    3aac:	55                   	push   %rbp
    3aad:	48 89 e5             	mov    %rsp,%rbp
    3ab0:	48 83 ec 20          	sub    $0x20,%rsp
    3ab4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    {
      int __e = __gthread_mutex_lock(&_M_mutex);
    3ab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3abc:	48 89 c7             	mov    %rax,%rdi
    3abf:	e8 89 ff ff ff       	call   3a4d <_ZL20__gthread_mutex_lockP15pthread_mutex_t>
    3ac4:	89 45 fc             	mov    %eax,-0x4(%rbp)

      // EINVAL, EAGAIN, EBUSY, EINVAL, EDEADLK(may)
      if (__e)
    3ac7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    3acb:	74 0a                	je     3ad7 <_ZNSt5mutex4lockEv+0x2b>
	__throw_system_error(__e);
    3acd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3ad0:	89 c7                	mov    %eax,%edi
    3ad2:	e8 99 f6 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
    }
    3ad7:	90                   	nop
    3ad8:	c9                   	leave
    3ad9:	c3                   	ret

0000000000003ada <_ZNSt5mutex6unlockEv>:
      // XXX EINVAL, EAGAIN, EBUSY
      return !__gthread_mutex_trylock(&_M_mutex);
    }

    void
    unlock()
    3ada:	55                   	push   %rbp
    3adb:	48 89 e5             	mov    %rsp,%rbp
    3ade:	48 83 ec 10          	sub    $0x10,%rsp
    3ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      // XXX EINVAL, EAGAIN, EPERM
      __gthread_mutex_unlock(&_M_mutex);
    3ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aea:	48 89 c7             	mov    %rax,%rdi
    3aed:	e8 8a ff ff ff       	call   3a7c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>
    }
    3af2:	90                   	nop
    3af3:	c9                   	leave
    3af4:	c3                   	ret
    3af5:	90                   	nop

0000000000003af6 <_ZNSt9_Any_data9_M_accessEv>:
    void (_Undefined_class::*_M_member_pointer)();
  };

  union [[gnu::may_alias]] _Any_data
  {
    void*       _M_access()       noexcept { return &_M_pod_data[0]; }
    3af6:	55                   	push   %rbp
    3af7:	48 89 e5             	mov    %rsp,%rbp
    3afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b02:	5d                   	pop    %rbp
    3b03:	c3                   	ret

0000000000003b04 <_ZNKSt9_Any_data9_M_accessEv>:
    const void* _M_access() const noexcept { return &_M_pod_data[0]; }
    3b04:	55                   	push   %rbp
    3b05:	48 89 e5             	mov    %rsp,%rbp
    3b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b10:	5d                   	pop    %rbp
    3b11:	c3                   	ret

0000000000003b12 <_ZNSt14_Function_baseD1Ev>:
	  { return true; }
      };

    _Function_base() = default;

    ~_Function_base()
    3b12:	55                   	push   %rbp
    3b13:	48 89 e5             	mov    %rsp,%rbp
    3b16:	48 83 ec 10          	sub    $0x10,%rsp
    3b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (_M_manager)
    3b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b22:	48 8b 40 10          	mov    0x10(%rax),%rax
    3b26:	48 85 c0             	test   %rax,%rax
    3b29:	74 1e                	je     3b49 <_ZNSt14_Function_baseD1Ev+0x37>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
    3b2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b2f:	4c 8b 40 10          	mov    0x10(%rax),%r8
    3b33:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b3b:	ba 03 00 00 00       	mov    $0x3,%edx
    3b40:	48 89 ce             	mov    %rcx,%rsi
    3b43:	48 89 c7             	mov    %rax,%rdi
    3b46:	41 ff d0             	call   *%r8
    }
    3b49:	90                   	nop
    3b4a:	c9                   	leave
    3b4b:	c3                   	ret

0000000000003b4c <_ZNKSt14_Function_base8_M_emptyEv>:

    bool _M_empty() const { return !_M_manager; }
    3b4c:	55                   	push   %rbp
    3b4d:	48 89 e5             	mov    %rsp,%rbp
    3b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b58:	48 8b 40 10          	mov    0x10(%rax),%rax
    3b5c:	48 85 c0             	test   %rax,%rax
    3b5f:	0f 94 c0             	sete   %al
    3b62:	5d                   	pop    %rbp
    3b63:	c3                   	ret

0000000000003b64 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    3b64:	55                   	push   %rbp
    3b65:	48 89 e5             	mov    %rsp,%rbp
    3b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    3b70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b74:	48 8b 10             	mov    (%rax),%rdx
    3b77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b7b:	48 8b 00             	mov    (%rax),%rax
    3b7e:	48 39 c2             	cmp    %rax,%rdx
    3b81:	73 06                	jae    3b89 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    3b83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b87:	eb 04                	jmp    3b8d <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    3b89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3b8d:	5d                   	pop    %rbp
    3b8e:	c3                   	ret
    3b8f:	90                   	nop

0000000000003b90 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    3b90:	55                   	push   %rbp
    3b91:	48 89 e5             	mov    %rsp,%rbp
    3b94:	48 83 ec 10          	sub    $0x10,%rsp
    3b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    3b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ba0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    3ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3baa:	48 89 c7             	mov    %rax,%rdi
    3bad:	e8 04 00 00 00       	call   3bb6 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    3bb2:	90                   	nop
    3bb3:	c9                   	leave
    3bb4:	c3                   	ret
    3bb5:	90                   	nop

0000000000003bb6 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    3bb6:	55                   	push   %rbp
    3bb7:	48 89 e5             	mov    %rsp,%rbp
    3bba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    3bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bc2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3bc9:	00 
      _M_header._M_left = &_M_header;
    3bca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bd2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    3bd6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bde:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    3be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3be6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    3bed:	00 
    }
    3bee:	90                   	nop
    3bef:	5d                   	pop    %rbp
    3bf0:	c3                   	ret

0000000000003bf1 <_ZSt16__deque_buf_sizem>:
#define _GLIBCXX_DEQUE_BUF_SIZE 512
#endif

  _GLIBCXX_CONSTEXPR inline size_t
  __deque_buf_size(size_t __size)
  { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
    3bf1:	55                   	push   %rbp
    3bf2:	48 89 e5             	mov    %rsp,%rbp
    3bf5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
    3bf9:	48 81 7d f8 ff 01 00 	cmpq   $0x1ff,-0x8(%rbp)
    3c00:	00 
    3c01:	77 10                	ja     3c13 <_ZSt16__deque_buf_sizem+0x22>
    3c03:	b8 00 02 00 00       	mov    $0x200,%eax
    3c08:	ba 00 00 00 00       	mov    $0x0,%edx
    3c0d:	48 f7 75 f8          	divq   -0x8(%rbp)
    3c11:	eb 05                	jmp    3c18 <_ZSt16__deque_buf_sizem+0x27>
    3c13:	b8 01 00 00 00       	mov    $0x1,%eax
    3c18:	5d                   	pop    %rbp
    3c19:	c3                   	ret

0000000000003c1a <_ZNSt6thread2idC1Ev>:
    class id
    {
      native_handle_type	_M_thread;

    public:
      id() noexcept : _M_thread() { }
    3c1a:	55                   	push   %rbp
    3c1b:	48 89 e5             	mov    %rsp,%rbp
    3c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c26:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3c2d:	90                   	nop
    3c2e:	5d                   	pop    %rbp
    3c2f:	c3                   	ret

0000000000003c30 <_ZNSt6thread2idC1Em>:

      explicit
      id(native_handle_type __id) : _M_thread(__id) { }
    3c30:	55                   	push   %rbp
    3c31:	48 89 e5             	mov    %rsp,%rbp
    3c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c44:	48 89 10             	mov    %rdx,(%rax)
    3c47:	90                   	nop
    3c48:	5d                   	pop    %rbp
    3c49:	c3                   	ret

0000000000003c4a <_ZNSt6threadD1Ev>:
	      std::forward<_Callable>(__f), std::forward<_Args>(__args)...)),
	    __depend);
      }
#endif // _GLIBCXX_HAS_GTHREADS

    ~thread()
    3c4a:	55                   	push   %rbp
    3c4b:	48 89 e5             	mov    %rsp,%rbp
    3c4e:	48 83 ec 10          	sub    $0x10,%rsp
    3c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (joinable())
    3c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c5a:	48 89 c7             	mov    %rax,%rdi
    3c5d:	e8 a2 00 00 00       	call   3d04 <_ZNKSt6thread8joinableEv>
    3c62:	84 c0                	test   %al,%al
    3c64:	74 05                	je     3c6b <_ZNSt6threadD1Ev+0x21>
    terminate();
    3c66:	e8 f5 f3 ff ff       	call   3060 <_ZSt9terminatev@plt>
	std::__terminate();
    }
    3c6b:	90                   	nop
    3c6c:	c9                   	leave
    3c6d:	c3                   	ret

0000000000003c6e <_ZNSt6threadC1EOS_>:

    thread(const thread&) = delete;

    thread(thread&& __t) noexcept
    3c6e:	55                   	push   %rbp
    3c6f:	48 89 e5             	mov    %rsp,%rbp
    3c72:	48 83 ec 10          	sub    $0x10,%rsp
    3c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { swap(__t); }
    3c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c82:	48 89 c7             	mov    %rax,%rdi
    3c85:	e8 90 ff ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
    3c8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c92:	48 89 d6             	mov    %rdx,%rsi
    3c95:	48 89 c7             	mov    %rax,%rdi
    3c98:	e8 41 00 00 00       	call   3cde <_ZNSt6thread4swapERS_>
    3c9d:	90                   	nop
    3c9e:	c9                   	leave
    3c9f:	c3                   	ret

0000000000003ca0 <_ZNSt6threadaSEOS_>:

    thread& operator=(const thread&) = delete;

    thread& operator=(thread&& __t) noexcept
    3ca0:	55                   	push   %rbp
    3ca1:	48 89 e5             	mov    %rsp,%rbp
    3ca4:	48 83 ec 10          	sub    $0x10,%rsp
    3ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      if (joinable())
    3cb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cb4:	48 89 c7             	mov    %rax,%rdi
    3cb7:	e8 48 00 00 00       	call   3d04 <_ZNKSt6thread8joinableEv>
    3cbc:	84 c0                	test   %al,%al
    3cbe:	74 05                	je     3cc5 <_ZNSt6threadaSEOS_+0x25>
    3cc0:	e8 9b f3 ff ff       	call   3060 <_ZSt9terminatev@plt>
	std::__terminate();
      swap(__t);
    3cc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ccd:	48 89 d6             	mov    %rdx,%rsi
    3cd0:	48 89 c7             	mov    %rax,%rdi
    3cd3:	e8 06 00 00 00       	call   3cde <_ZNSt6thread4swapERS_>
      return *this;
    3cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3cdc:	c9                   	leave
    3cdd:	c3                   	ret

0000000000003cde <_ZNSt6thread4swapERS_>:

    void
    swap(thread& __t) noexcept
    3cde:	55                   	push   %rbp
    3cdf:	48 89 e5             	mov    %rsp,%rbp
    3ce2:	48 83 ec 10          	sub    $0x10,%rsp
    3ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { std::swap(_M_id, __t._M_id); }
    3cee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cf6:	48 89 d6             	mov    %rdx,%rsi
    3cf9:	48 89 c7             	mov    %rax,%rdi
    3cfc:	e8 84 0b 00 00       	call   4885 <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>
    3d01:	90                   	nop
    3d02:	c9                   	leave
    3d03:	c3                   	ret

0000000000003d04 <_ZNKSt6thread8joinableEv>:

    bool
    joinable() const noexcept
    3d04:	55                   	push   %rbp
    3d05:	48 89 e5             	mov    %rsp,%rbp
    3d08:	48 83 ec 20          	sub    $0x20,%rsp
    3d0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return !(_M_id == id()); }
    3d10:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3d14:	48 89 c7             	mov    %rax,%rdi
    3d17:	e8 fe fe ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
    3d1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d24:	48 8b 00             	mov    (%rax),%rax
    3d27:	48 89 d6             	mov    %rdx,%rsi
    3d2a:	48 89 c7             	mov    %rax,%rdi
    3d2d:	e8 05 00 00 00       	call   3d37 <_ZSteqNSt6thread2idES0_>
    3d32:	83 f0 01             	xor    $0x1,%eax
    3d35:	c9                   	leave
    3d36:	c3                   	ret

0000000000003d37 <_ZSteqNSt6thread2idES0_>:
  swap(thread& __x, thread& __y) noexcept
  { __x.swap(__y); }

  inline bool
  operator==(thread::id __x, thread::id __y) noexcept
  {
    3d37:	55                   	push   %rbp
    3d38:	48 89 e5             	mov    %rsp,%rbp
    3d3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // pthread_equal is undefined if either thread ID is not valid, so we
    // can't safely use __gthread_equal on default-constructed values (nor
    // the non-zero value returned by this_thread::get_id() for
    // single-threaded programs using GNU libc). Assume EqualityComparable.
    return __x._M_thread == __y._M_thread;
    3d43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d4b:	48 39 c2             	cmp    %rax,%rdx
    3d4e:	0f 94 c0             	sete   %al
  }
    3d51:	5d                   	pop    %rbp
    3d52:	c3                   	ret

0000000000003d53 <_ZNSt11this_thread6get_idEv>:
  namespace this_thread
  {
    /// this_thread::get_id
    inline thread::id
    get_id() noexcept
    {
    3d53:	55                   	push   %rbp
    3d54:	48 89 e5             	mov    %rsp,%rbp
    3d57:	48 83 ec 10          	sub    $0x10,%rsp
#ifndef _GLIBCXX_HAS_GTHREADS
      return thread::id(1);
#elif defined _GLIBCXX_NATIVE_THREAD_ID
      return thread::id(_GLIBCXX_NATIVE_THREAD_ID);
    3d5b:	e8 10 f5 ff ff       	call   3270 <pthread_self@plt>
    3d60:	48 89 c2             	mov    %rax,%rdx
    3d63:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3d67:	48 89 d6             	mov    %rdx,%rsi
    3d6a:	48 89 c7             	mov    %rax,%rdi
    3d6d:	e8 be fe ff ff       	call   3c30 <_ZNSt6thread2idC1Em>
    3d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
#else
      return thread::id(__gthread_self());
#endif
    }
    3d76:	c9                   	leave
    3d77:	c3                   	ret

0000000000003d78 <_ZStltNSt6thread2idES0_>:
  operator!=(thread::id __x, thread::id __y) noexcept
  { return !(__x == __y); }

  inline bool
  operator<(thread::id __x, thread::id __y) noexcept
  {
    3d78:	55                   	push   %rbp
    3d79:	48 89 e5             	mov    %rsp,%rbp
    3d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // Pthreads doesn't define any way to do this, so we just have to
    // assume native_handle_type is LessThanComparable.
    return __x._M_thread < __y._M_thread;
    3d84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3d88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d8c:	48 39 c2             	cmp    %rax,%rdx
    3d8f:	0f 92 c0             	setb   %al
  }
    3d92:	5d                   	pop    %rbp
    3d93:	c3                   	ret

0000000000003d94 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    3d94:	55                   	push   %rbp
    3d95:	48 89 e5             	mov    %rsp,%rbp
    3d98:	48 83 ec 10          	sub    $0x10,%rsp
    3d9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da4:	48 89 c7             	mov    %rax,%rdi
    3da7:	e8 54 0b 00 00       	call   4900 <_ZNSaISt6threadED1Ev>
    3dac:	90                   	nop
    3dad:	c9                   	leave
    3dae:	c3                   	ret
    3daf:	90                   	nop

0000000000003db0 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    3db0:	55                   	push   %rbp
    3db1:	48 89 e5             	mov    %rsp,%rbp
    3db4:	48 83 ec 10          	sub    $0x10,%rsp
    3db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dc0:	48 89 c7             	mov    %rax,%rdi
    3dc3:	e8 10 0b 00 00       	call   48d8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>
    3dc8:	90                   	nop
    3dc9:	c9                   	leave
    3dca:	c3                   	ret
    3dcb:	90                   	nop

0000000000003dcc <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    3dcc:	55                   	push   %rbp
    3dcd:	48 89 e5             	mov    %rsp,%rbp
    3dd0:	48 83 ec 10          	sub    $0x10,%rsp
    3dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ddc:	48 89 c7             	mov    %rax,%rdi
    3ddf:	e8 cc ff ff ff       	call   3db0 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>
    3de4:	90                   	nop
    3de5:	c9                   	leave
    3de6:	c3                   	ret
    3de7:	90                   	nop

0000000000003de8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>:
   *  Members not found in @a normal containers are @c container_type,
   *  which is a typedef for the second Sequence parameter, and @c push and
   *  @c pop, which are standard %queue/FIFO operations.
  */
  template<typename _Tp, typename _Sequence = deque<_Tp> >
    class queue
    3de8:	55                   	push   %rbp
    3de9:	48 89 e5             	mov    %rsp,%rbp
    3dec:	48 83 ec 10          	sub    $0x10,%rsp
    3df0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3df8:	48 89 c7             	mov    %rax,%rdi
    3dfb:	e8 00 0c 00 00       	call   4a00 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>
    3e00:	90                   	nop
    3e01:	c9                   	leave
    3e02:	c3                   	ret
    3e03:	90                   	nop

0000000000003e04 <_ZNSt12__mutex_baseC1Ev>:
    constexpr __mutex_base() noexcept = default;
    3e04:	55                   	push   %rbp
    3e05:	48 89 e5             	mov    %rsp,%rbp
    3e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e10:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e14:	0f 11 00             	movups %xmm0,(%rax)
    3e17:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    3e1b:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
    3e20:	90                   	nop
    3e21:	5d                   	pop    %rbp
    3e22:	c3                   	ret
    3e23:	90                   	nop

0000000000003e24 <_ZNSt5mutexC1Ev>:
    mutex() noexcept = default;
    3e24:	55                   	push   %rbp
    3e25:	48 89 e5             	mov    %rsp,%rbp
    3e28:	48 83 ec 10          	sub    $0x10,%rsp
    3e2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e34:	48 89 c7             	mov    %rax,%rdi
    3e37:	e8 c8 ff ff ff       	call   3e04 <_ZNSt12__mutex_baseC1Ev>
    3e3c:	90                   	nop
    3e3d:	c9                   	leave
    3e3e:	c3                   	ret
    3e3f:	90                   	nop

0000000000003e40 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    3e40:	55                   	push   %rbp
    3e41:	48 89 e5             	mov    %rsp,%rbp
    3e44:	48 83 ec 10          	sub    $0x10,%rsp
    3e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e50:	48 89 c7             	mov    %rax,%rdi
    3e53:	e8 4c 0c 00 00       	call   4aa4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    3e58:	90                   	nop
    3e59:	c9                   	leave
    3e5a:	c3                   	ret
    3e5b:	90                   	nop

0000000000003e5c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    3e5c:	55                   	push   %rbp
    3e5d:	48 89 e5             	mov    %rsp,%rbp
    3e60:	48 83 ec 10          	sub    $0x10,%rsp
    3e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e6c:	48 89 c7             	mov    %rax,%rdi
    3e6f:	e8 f8 0b 00 00       	call   4a6c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>
    3e74:	90                   	nop
    3e75:	c9                   	leave
    3e76:	c3                   	ret
    3e77:	90                   	nop

0000000000003e78 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    3e78:	55                   	push   %rbp
    3e79:	48 89 e5             	mov    %rsp,%rbp
    3e7c:	48 83 ec 10          	sub    $0x10,%rsp
    3e80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e88:	48 89 c7             	mov    %rax,%rdi
    3e8b:	e8 cc ff ff ff       	call   3e5c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>
    3e90:	90                   	nop
    3e91:	c9                   	leave
    3e92:	c3                   	ret
    3e93:	90                   	nop

0000000000003e94 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    3e94:	55                   	push   %rbp
    3e95:	48 89 e5             	mov    %rsp,%rbp
    3e98:	48 83 ec 10          	sub    $0x10,%rsp
    3e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea4:	48 89 c7             	mov    %rax,%rdi
    3ea7:	e8 14 0c 00 00       	call   4ac0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>
    3eac:	90                   	nop
    3ead:	c9                   	leave
    3eae:	c3                   	ret
    3eaf:	90                   	nop

0000000000003eb0 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>:
  typedef std::function<void()> Job_T;
  typedef std::unique_lock<std::mutex> MutexLock_T;

public:
  ThreadPool() { initializePool(); }
  ThreadPool(const Settings &settings) {
    3eb0:	55                   	push   %rbp
    3eb1:	48 89 e5             	mov    %rsp,%rbp
    3eb4:	53                   	push   %rbx
    3eb5:	48 83 ec 18          	sub    $0x18,%rsp
    3eb9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3ebd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3ec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ec5:	48 89 c7             	mov    %rax,%rdi
    3ec8:	e8 ff fe ff ff       	call   3dcc <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>
    3ecd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ed1:	48 83 c0 18          	add    $0x18,%rax
    3ed5:	48 89 c7             	mov    %rax,%rdi
    3ed8:	e8 ed 0a 00 00       	call   49ca <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>
    3edd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ee1:	48 83 c0 68          	add    $0x68,%rax
    3ee5:	48 89 c7             	mov    %rax,%rdi
    3ee8:	e8 37 ff ff ff       	call   3e24 <_ZNSt5mutexC1Ev>
    3eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ef1:	48 05 90 00 00 00    	add    $0x90,%rax
    3ef7:	48 89 c7             	mov    %rax,%rdi
    3efa:	e8 01 f5 ff ff       	call   3400 <_ZNSt18condition_variableC1Ev@plt>
    3eff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f03:	48 05 c8 00 00 00    	add    $0xc8,%rax
    3f09:	48 89 c7             	mov    %rax,%rdi
    3f0c:	e8 67 ff ff ff       	call   3e78 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>
    initializePool(settings.system.cpuThreadUsage);
    3f11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f15:	8b 50 58             	mov    0x58(%rax),%edx
    3f18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f1c:	89 d6                	mov    %edx,%esi
    3f1e:	48 89 c7             	mov    %rax,%rdi
    3f21:	e8 90 02 00 00       	call   41b6 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE>
  }
    3f26:	eb 53                	jmp    3f7b <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0xcb>
    3f28:	48 89 c3             	mov    %rax,%rbx
    3f2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f2f:	48 05 c8 00 00 00    	add    $0xc8,%rax
    3f35:	48 89 c7             	mov    %rax,%rdi
    3f38:	e8 57 ff ff ff       	call   3e94 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    3f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f41:	48 05 90 00 00 00    	add    $0x90,%rax
    3f47:	48 89 c7             	mov    %rax,%rdi
    3f4a:	e8 b1 f5 ff ff       	call   3500 <_ZNSt18condition_variableD1Ev@plt>
    3f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f53:	48 83 c0 18          	add    $0x18,%rax
    3f57:	48 89 c7             	mov    %rax,%rdi
    3f5a:	e8 89 fe ff ff       	call   3de8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    3f5f:	eb 03                	jmp    3f64 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0xb4>
    3f61:	48 89 c3             	mov    %rax,%rbx
    3f64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f68:	48 89 c7             	mov    %rax,%rdi
    3f6b:	e8 fa 09 00 00       	call   496a <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    3f70:	48 89 d8             	mov    %rbx,%rax
    3f73:	48 89 c7             	mov    %rax,%rdi
    3f76:	e8 55 f5 ff ff       	call   34d0 <_Unwind_Resume@plt>
    3f7b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f7f:	c9                   	leave
    3f80:	c3                   	ret
    3f81:	90                   	nop

0000000000003f82 <_ZN4neko10ThreadPoolD1Ev>:
  ThreadPool(const ThreadPool &) = delete;
  ThreadPool(ThreadPool &&) = delete;
  ThreadPool &operator=(const ThreadPool &) = delete;
  ThreadPool &operator=(ThreadPool &&) = delete;
  ~ThreadPool() { release(); }
    3f82:	55                   	push   %rbp
    3f83:	48 89 e5             	mov    %rsp,%rbp
    3f86:	48 83 ec 10          	sub    $0x10,%rsp
    3f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f92:	48 89 c7             	mov    %rax,%rdi
    3f95:	e8 ec 01 00 00       	call   4186 <_ZN4neko10ThreadPool7releaseEv>
    3f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f9e:	48 05 c8 00 00 00    	add    $0xc8,%rax
    3fa4:	48 89 c7             	mov    %rax,%rdi
    3fa7:	e8 e8 fe ff ff       	call   3e94 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    3fac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fb0:	48 05 90 00 00 00    	add    $0x90,%rax
    3fb6:	48 89 c7             	mov    %rax,%rdi
    3fb9:	e8 42 f5 ff ff       	call   3500 <_ZNSt18condition_variableD1Ev@plt>
    3fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fc2:	48 83 c0 18          	add    $0x18,%rax
    3fc6:	48 89 c7             	mov    %rax,%rdi
    3fc9:	e8 1a fe ff ff       	call   3de8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    3fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fd2:	48 89 c7             	mov    %rax,%rdi
    3fd5:	e8 90 09 00 00       	call   496a <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    3fda:	90                   	nop
    3fdb:	c9                   	leave
    3fdc:	c3                   	ret
    3fdd:	90                   	nop

0000000000003fde <_ZNSt8functionIFvvEED1Ev>:
   *  @brief Polymorphic function wrapper.
   *  @ingroup functors
   *  @since C++11
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
    3fde:	55                   	push   %rbp
    3fdf:	48 89 e5             	mov    %rsp,%rbp
    3fe2:	48 83 ec 10          	sub    $0x10,%rsp
    3fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fee:	48 89 c7             	mov    %rax,%rdi
    3ff1:	e8 1c fb ff ff       	call   3b12 <_ZNSt14_Function_baseD1Ev>
    3ff6:	90                   	nop
    3ff7:	c9                   	leave
    3ff8:	c3                   	ret
    3ff9:	90                   	nop

0000000000003ffa <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>:
      });
    }
    mMutexCondition.notify_one();
  }

  void submitJob(const Job_T &job) {
    3ffa:	55                   	push   %rbp
    3ffb:	48 89 e5             	mov    %rsp,%rbp
    3ffe:	53                   	push   %rbx
    3fff:	48 83 ec 28          	sub    $0x28,%rsp
    4003:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4007:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    400b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    400f:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4013:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4017:	48 89 d6             	mov    %rdx,%rsi
    401a:	48 89 c7             	mov    %rax,%rdi
    401d:	e8 fc 0a 00 00       	call   4b1e <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mJobs.push(job);
    4022:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4026:	48 8d 50 18          	lea    0x18(%rax),%rdx
    402a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    402e:	48 89 c6             	mov    %rax,%rsi
    4031:	48 89 d7             	mov    %rdx,%rdi
    4034:	e8 af 0b 00 00       	call   4be8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>
    }
    4039:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    403d:	48 89 c7             	mov    %rax,%rdi
    4040:	e8 1b 0b 00 00       	call   4b60 <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_one();
    4045:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4049:	48 05 90 00 00 00    	add    $0x90,%rax
    404f:	48 89 c7             	mov    %rax,%rdi
    4052:	e8 c9 f0 ff ff       	call   3120 <_ZNSt18condition_variable10notify_oneEv@plt>
  }
    4057:	eb 1a                	jmp    4073 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE+0x79>
    }
    4059:	48 89 c3             	mov    %rax,%rbx
    405c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4060:	48 89 c7             	mov    %rax,%rdi
    4063:	e8 f8 0a 00 00       	call   4b60 <_ZNSt11unique_lockISt5mutexED1Ev>
    4068:	48 89 d8             	mov    %rbx,%rax
    406b:	48 89 c7             	mov    %rax,%rdi
    406e:	e8 5d f4 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    4073:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4077:	c9                   	leave
    4078:	c3                   	ret
    4079:	90                   	nop

000000000000407a <_ZN4neko10ThreadPool4busyEv>:

  bool busy() {
    407a:	55                   	push   %rbp
    407b:	48 89 e5             	mov    %rsp,%rbp
    407e:	48 83 ec 30          	sub    $0x30,%rsp
    4082:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bool poolbusy;
    {
      MutexLock_T lock{mQueueMutex};
    4086:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    408a:	48 8d 50 68          	lea    0x68(%rax),%rdx
    408e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4092:	48 89 d6             	mov    %rdx,%rsi
    4095:	48 89 c7             	mov    %rax,%rdi
    4098:	e8 81 0a 00 00       	call   4b1e <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      poolbusy = mJobs.empty();
    409d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40a1:	48 83 c0 18          	add    $0x18,%rax
    40a5:	48 89 c7             	mov    %rax,%rdi
    40a8:	e8 61 0b 00 00       	call   4c0e <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    40ad:	88 45 ff             	mov    %al,-0x1(%rbp)
    }
    40b0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    40b4:	48 89 c7             	mov    %rax,%rdi
    40b7:	e8 a4 0a 00 00       	call   4b60 <_ZNSt11unique_lockISt5mutexED1Ev>
    return poolbusy;
    40bc:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  }
    40c0:	c9                   	leave
    40c1:	c3                   	ret

00000000000040c2 <_ZN4neko10ThreadPool13force_releaseEv>:

  const std::map<std::thread::id, u64> &jobStatus() const noexcept {
    return mJobStatus;
  }

  void force_release() {
    40c2:	55                   	push   %rbp
    40c3:	48 89 e5             	mov    %rsp,%rbp
    40c6:	48 83 ec 40          	sub    $0x40,%rsp
    40ca:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    40ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    40d2:	48 8d 50 68          	lea    0x68(%rax),%rdx
    40d6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    40da:	48 89 d6             	mov    %rdx,%rsi
    40dd:	48 89 c7             	mov    %rax,%rdi
    40e0:	e8 39 0a 00 00       	call   4b1e <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mShouldTerminate = true;
    40e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    40e9:	c6 80 c0 00 00 00 01 	movb   $0x1,0xc0(%rax)
    }
    40f0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    40f4:	48 89 c7             	mov    %rax,%rdi
    40f7:	e8 64 0a 00 00       	call   4b60 <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_all();
    40fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4100:	48 05 90 00 00 00    	add    $0x90,%rax
    4106:	48 89 c7             	mov    %rax,%rdi
    4109:	e8 82 f3 ff ff       	call   3490 <_ZNSt18condition_variable10notify_allEv@plt>
    for (auto &activeThread : mThreads) {
    410e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4112:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    411a:	48 89 c7             	mov    %rax,%rdi
    411d:	e8 06 0b 00 00       	call   4c28 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    4122:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    412a:	48 89 c7             	mov    %rax,%rdi
    412d:	e8 1c 0b 00 00       	call   4c4e <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    4132:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4136:	eb 28                	jmp    4160 <_ZN4neko10ThreadPool13force_releaseEv+0x9e>
    4138:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    413c:	48 89 c7             	mov    %rax,%rdi
    413f:	e8 8e 0b 00 00       	call   4cd2 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    4144:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      activeThread.join();
    4148:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    414c:	48 89 c7             	mov    %rax,%rdi
    414f:	e8 4c f3 ff ff       	call   34a0 <_ZNSt6thread4joinEv@plt>
    for (auto &activeThread : mThreads) {
    4154:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4158:	48 89 c7             	mov    %rax,%rdi
    415b:	e8 52 0b 00 00       	call   4cb2 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    4160:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4164:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4168:	48 89 d6             	mov    %rdx,%rsi
    416b:	48 89 c7             	mov    %rax,%rdi
    416e:	e8 04 0b 00 00       	call   4c77 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4173:	84 c0                	test   %al,%al
    4175:	75 c1                	jne    4138 <_ZN4neko10ThreadPool13force_releaseEv+0x76>
    }
    mThreads.clear();
    4177:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    417b:	48 89 c7             	mov    %rax,%rdi
    417e:	e8 61 0b 00 00       	call   4ce4 <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>
  }
    4183:	90                   	nop
    4184:	c9                   	leave
    4185:	c3                   	ret

0000000000004186 <_ZN4neko10ThreadPool7releaseEv>:

  void release() {
    4186:	55                   	push   %rbp
    4187:	48 89 e5             	mov    %rsp,%rbp
    418a:	48 83 ec 10          	sub    $0x10,%rsp
    418e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!busy()) {
    4192:	90                   	nop
    4193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4197:	48 89 c7             	mov    %rax,%rdi
    419a:	e8 db fe ff ff       	call   407a <_ZN4neko10ThreadPool4busyEv>
    419f:	83 f0 01             	xor    $0x1,%eax
    41a2:	84 c0                	test   %al,%al
    41a4:	75 ed                	jne    4193 <_ZN4neko10ThreadPool7releaseEv+0xd>
    }
    force_release();
    41a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41aa:	48 89 c7             	mov    %rax,%rdi
    41ad:	e8 10 ff ff ff       	call   40c2 <_ZN4neko10ThreadPool13force_releaseEv>
  }
    41b2:	90                   	nop
    41b3:	c9                   	leave
    41b4:	c3                   	ret
    41b5:	90                   	nop

00000000000041b6 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE>:
  std::mutex mQueueMutex;
  std::condition_variable mMutexCondition;
  bool mShouldTerminate;
  std::map<std::thread::id, u64> mJobStatus;

  void initializePool(CPUThreadUsage usageMode = medium) {
    41b6:	55                   	push   %rbp
    41b7:	48 89 e5             	mov    %rsp,%rbp
    41ba:	41 54                	push   %r12
    41bc:	53                   	push   %rbx
    41bd:	48 83 ec 50          	sub    $0x50,%rsp
    41c1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    41c5:	89 75 a4             	mov    %esi,-0x5c(%rbp)
    auto supportedThreadCount = std::thread::hardware_concurrency();
    41c8:	e8 13 f2 ff ff       	call   33e0 <_ZNSt6thread20hardware_concurrencyEv@plt>
    41cd:	89 45 ec             	mov    %eax,-0x14(%rbp)
    if (supportedThreadCount < 4) {
    41d0:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
    41d4:	77 3b                	ja     4211 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0x5b>
      throw std::runtime_error("std::thread::hardware_concurrency() < 4");
    41d6:	bf 10 00 00 00       	mov    $0x10,%edi
    41db:	e8 30 ef ff ff       	call   3110 <__cxa_allocate_exception@plt>
    41e0:	48 89 c3             	mov    %rax,%rbx
    41e3:	48 8d 05 56 d4 00 00 	lea    0xd456(%rip),%rax        # 11640 <_ZN9__gnu_cxxL21__default_lock_policyE+0x8>
    41ea:	48 89 c6             	mov    %rax,%rsi
    41ed:	48 89 df             	mov    %rbx,%rdi
    41f0:	e8 bb ee ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    41f5:	48 8b 05 bc bd 01 00 	mov    0x1bdbc(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    41fc:	48 89 c2             	mov    %rax,%rdx
    41ff:	48 8d 05 3a bb 01 00 	lea    0x1bb3a(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4206:	48 89 c6             	mov    %rax,%rsi
    4209:	48 89 df             	mov    %rbx,%rdi
    420c:	e8 9f f2 ff ff       	call   34b0 <__cxa_throw@plt>
    }
    mShouldTerminate = false;
    4211:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4215:	c6 80 c0 00 00 00 00 	movb   $0x0,0xc0(%rax)
    mThreads.resize(std::thread::hardware_concurrency() / usageMode);
    421c:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    4220:	e8 bb f1 ff ff       	call   33e0 <_ZNSt6thread20hardware_concurrencyEv@plt>
    4225:	ba 00 00 00 00       	mov    $0x0,%edx
    422a:	f7 75 a4             	divl   -0x5c(%rbp)
    422d:	89 c0                	mov    %eax,%eax
    422f:	48 89 c6             	mov    %rax,%rsi
    4232:	48 89 df             	mov    %rbx,%rdi
    4235:	e8 d0 0a 00 00       	call   4d0a <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>
    for (auto &thread : mThreads) {
    423a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    423e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4242:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4246:	48 89 c7             	mov    %rax,%rdi
    4249:	e8 da 09 00 00       	call   4c28 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    424e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4252:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4256:	48 89 c7             	mov    %rax,%rdi
    4259:	e8 f0 09 00 00       	call   4c4e <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    425e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4262:	eb 5d                	jmp    42c1 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0x10b>
    4264:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4268:	48 89 c7             	mov    %rax,%rdi
    426b:	e8 62 0a 00 00       	call   4cd2 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    4270:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      thread = std::thread{ThreadPool::threadLoop, this};
    4274:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4278:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    427c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4280:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4284:	48 8d 0d b5 00 00 00 	lea    0xb5(%rip),%rcx        # 4340 <_ZN4neko10ThreadPool10threadLoopEPS0_>
    428b:	48 89 ce             	mov    %rcx,%rsi
    428e:	48 89 c7             	mov    %rax,%rdi
    4291:	e8 fa 0a 00 00       	call   4d90 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>
    4296:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    429a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    429e:	48 89 d6             	mov    %rdx,%rsi
    42a1:	48 89 c7             	mov    %rax,%rdi
    42a4:	e8 f7 f9 ff ff       	call   3ca0 <_ZNSt6threadaSEOS_>
    42a9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    42ad:	48 89 c7             	mov    %rax,%rdi
    42b0:	e8 95 f9 ff ff       	call   3c4a <_ZNSt6threadD1Ev>
    for (auto &thread : mThreads) {
    42b5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    42b9:	48 89 c7             	mov    %rax,%rdi
    42bc:	e8 f1 09 00 00       	call   4cb2 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    42c1:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    42c5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    42c9:	48 89 d6             	mov    %rdx,%rsi
    42cc:	48 89 c7             	mov    %rax,%rdi
    42cf:	e8 a3 09 00 00       	call   4c77 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    42d4:	84 c0                	test   %al,%al
    42d6:	75 8c                	jne    4264 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0xae>
    }
  }
    42d8:	eb 16                	jmp    42f0 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0x13a>
      throw std::runtime_error("std::thread::hardware_concurrency() < 4");
    42da:	49 89 c4             	mov    %rax,%r12
    42dd:	48 89 df             	mov    %rbx,%rdi
    42e0:	e8 cb ee ff ff       	call   31b0 <__cxa_free_exception@plt>
    42e5:	4c 89 e0             	mov    %r12,%rax
    42e8:	48 89 c7             	mov    %rax,%rdi
    42eb:	e8 e0 f1 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    42f0:	48 83 c4 50          	add    $0x50,%rsp
    42f4:	5b                   	pop    %rbx
    42f5:	41 5c                	pop    %r12
    42f7:	5d                   	pop    %rbp
    42f8:	c3                   	ret
    42f9:	90                   	nop

00000000000042fa <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>:
  static void threadLoop(ThreadPool *pool) {
    while (true) {
      Job_T job;
      {
        MutexLock_T lock{pool->mQueueMutex};
        pool->mMutexCondition.wait(lock, [pool] {
    42fa:	55                   	push   %rbp
    42fb:	48 89 e5             	mov    %rsp,%rbp
    42fe:	48 83 ec 10          	sub    $0x10,%rsp
    4302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    430a:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    430d:	48 83 c0 18          	add    $0x18,%rax
    4311:	48 89 c7             	mov    %rax,%rdi
    4314:	e8 f5 08 00 00       	call   4c0e <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    4319:	83 f0 01             	xor    $0x1,%eax
    431c:	84 c0                	test   %al,%al
    431e:	75 12                	jne    4332 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x38>
        pool->mMutexCondition.wait(lock, [pool] {
    4320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4324:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    4327:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    432e:	84 c0                	test   %al,%al
    4330:	74 07                	je     4339 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x3f>
    4332:	b8 01 00 00 00       	mov    $0x1,%eax
    4337:	eb 05                	jmp    433e <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x44>
    4339:	b8 00 00 00 00       	mov    $0x0,%eax
        });
    433e:	c9                   	leave
    433f:	c3                   	ret

0000000000004340 <_ZN4neko10ThreadPool10threadLoopEPS0_>:
  static void threadLoop(ThreadPool *pool) {
    4340:	55                   	push   %rbp
    4341:	48 89 e5             	mov    %rsp,%rbp
    4344:	53                   	push   %rbx
    4345:	48 83 ec 58          	sub    $0x58,%rsp
    4349:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      Job_T job;
    434d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4351:	48 89 c7             	mov    %rax,%rdi
    4354:	e8 17 0b 00 00       	call   4e70 <_ZNSt8functionIFvvEEC1Ev>
        MutexLock_T lock{pool->mQueueMutex};
    4359:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    435d:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4361:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4365:	48 89 d6             	mov    %rdx,%rsi
    4368:	48 89 c7             	mov    %rax,%rdi
    436b:	e8 ae 07 00 00       	call   4b1e <_ZNSt11unique_lockISt5mutexEC1ERS0_>
        pool->mMutexCondition.wait(lock, [pool] {
    4370:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4374:	48 8d 88 90 00 00 00 	lea    0x90(%rax),%rcx
    437b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    437f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4383:	48 89 c6             	mov    %rax,%rsi
    4386:	48 89 cf             	mov    %rcx,%rdi
    4389:	e8 1a 0b 00 00       	call   4ea8 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>
        if (pool->mShouldTerminate) {
    438e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4392:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    4399:	84 c0                	test   %al,%al
    439b:	74 07                	je     43a4 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x64>
          return;
    439d:	bb 00 00 00 00       	mov    $0x0,%ebx
    43a2:	eb 64                	jmp    4408 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xc8>
        }
        job = pool->mJobs.front();
    43a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43a8:	48 83 c0 18          	add    $0x18,%rax
    43ac:	48 89 c7             	mov    %rax,%rdi
    43af:	e8 34 0b 00 00       	call   4ee8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>
    43b4:	48 89 c2             	mov    %rax,%rdx
    43b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43bb:	48 89 d6             	mov    %rdx,%rsi
    43be:	48 89 c7             	mov    %rax,%rdi
    43c1:	e8 3c 0b 00 00       	call   4f02 <_ZNSt8functionIFvvEEaSERKS1_>
        pool->mJobs.pop();
    43c6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43ca:	48 83 c0 18          	add    $0x18,%rax
    43ce:	48 89 c7             	mov    %rax,%rdi
    43d1:	e8 74 0b 00 00       	call   4f4a <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>
        pool->mJobStatus[std::this_thread::get_id()]++;
    43d6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43da:	48 8d 98 c8 00 00 00 	lea    0xc8(%rax),%rbx
    43e1:	e8 6d f9 ff ff       	call   3d53 <_ZNSt11this_thread6get_idEv>
    43e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    43ea:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    43ee:	48 89 c6             	mov    %rax,%rsi
    43f1:	48 89 df             	mov    %rbx,%rdi
    43f4:	e8 6d 0b 00 00       	call   4f66 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>
    43f9:	48 8b 10             	mov    (%rax),%rdx
    43fc:	48 83 c2 01          	add    $0x1,%rdx
    4400:	48 89 10             	mov    %rdx,(%rax)
      }
    4403:	bb 01 00 00 00       	mov    $0x1,%ebx
    4408:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    440c:	48 89 c7             	mov    %rax,%rdi
    440f:	e8 4c 07 00 00       	call   4b60 <_ZNSt11unique_lockISt5mutexED1Ev>
    4414:	83 fb 01             	cmp    $0x1,%ebx
    4417:	75 0f                	jne    4428 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xe8>
    4419:	90                   	nop
      job();
    441a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    441e:	48 89 c7             	mov    %rax,%rdi
    4421:	e8 62 07 00 00       	call   4b88 <_ZNKSt8functionIFvvEEclEv>
    4426:	eb 07                	jmp    442f <_ZN4neko10ThreadPool10threadLoopEPS0_+0xef>
    4428:	bb 00 00 00 00       	mov    $0x0,%ebx
    442d:	eb 05                	jmp    4434 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xf4>
    }
    442f:	bb 01 00 00 00       	mov    $0x1,%ebx
    4434:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4438:	48 89 c7             	mov    %rax,%rdi
    443b:	e8 9e fb ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
    4440:	83 fb 01             	cmp    $0x1,%ebx
    4443:	75 30                	jne    4475 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x135>
    4445:	e9 03 ff ff ff       	jmp    434d <_ZN4neko10ThreadPool10threadLoopEPS0_+0xd>
      }
    444a:	48 89 c3             	mov    %rax,%rbx
    444d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4451:	48 89 c7             	mov    %rax,%rdi
    4454:	e8 07 07 00 00       	call   4b60 <_ZNSt11unique_lockISt5mutexED1Ev>
    4459:	eb 03                	jmp    445e <_ZN4neko10ThreadPool10threadLoopEPS0_+0x11e>
    }
    445b:	48 89 c3             	mov    %rax,%rbx
    445e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4462:	48 89 c7             	mov    %rax,%rdi
    4465:	e8 74 fb ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
    446a:	48 89 d8             	mov    %rbx,%rax
    446d:	48 89 c7             	mov    %rax,%rdi
    4470:	e8 5b f0 ff ff       	call   34d0 <_Unwind_Resume@plt>
          return;
    4475:	90                   	nop
  }
    4476:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    447a:	c9                   	leave
    447b:	c3                   	ret

000000000000447c <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
      __uniq_ptr_data(__uniq_ptr_data&&) = default;
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    447c:	55                   	push   %rbp
    447d:	48 89 e5             	mov    %rsp,%rbp
    4480:	48 83 ec 10          	sub    $0x10,%rsp
    4484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4488:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    448c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4490:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4494:	48 89 d6             	mov    %rdx,%rsi
    4497:	48 89 c7             	mov    %rax,%rdi
    449a:	e8 15 10 00 00       	call   54b4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    449f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44a3:	c9                   	leave
    44a4:	c3                   	ret
    44a5:	90                   	nop

00000000000044a6 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:

      /** @brief Move assignment operator.
       *
       * Invokes the deleter if this object owns a pointer.
       */
      unique_ptr& operator=(unique_ptr&&) = default;
    44a6:	55                   	push   %rbp
    44a7:	48 89 e5             	mov    %rsp,%rbp
    44aa:	48 83 ec 10          	sub    $0x10,%rsp
    44ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44be:	48 89 d6             	mov    %rdx,%rsi
    44c1:	48 89 c7             	mov    %rax,%rdi
    44c4:	e8 b3 ff ff ff       	call   447c <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    44c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44cd:	c9                   	leave
    44ce:	c3                   	ret
    44cf:	90                   	nop

00000000000044d0 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    44d0:	55                   	push   %rbp
    44d1:	48 89 e5             	mov    %rsp,%rbp
    44d4:	48 83 ec 10          	sub    $0x10,%rsp
    44d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44e8:	48 89 d6             	mov    %rdx,%rsi
    44eb:	48 89 c7             	mov    %rax,%rdi
    44ee:	e8 d7 10 00 00       	call   55ca <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    44f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44f7:	c9                   	leave
    44f8:	c3                   	ret
    44f9:	90                   	nop

00000000000044fa <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    44fa:	55                   	push   %rbp
    44fb:	48 89 e5             	mov    %rsp,%rbp
    44fe:	48 83 ec 10          	sub    $0x10,%rsp
    4502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4506:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    450a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    450e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4512:	48 89 d6             	mov    %rdx,%rsi
    4515:	48 89 c7             	mov    %rax,%rdi
    4518:	e8 b3 ff ff ff       	call   44d0 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    451d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4521:	c9                   	leave
    4522:	c3                   	ret
    4523:	90                   	nop

0000000000004524 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    4524:	55                   	push   %rbp
    4525:	48 89 e5             	mov    %rsp,%rbp
    4528:	48 83 ec 10          	sub    $0x10,%rsp
    452c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4530:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4538:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    453c:	48 89 d6             	mov    %rdx,%rsi
    453f:	48 89 c7             	mov    %rax,%rdi
    4542:	e8 af 11 00 00       	call   56f6 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    4547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    454b:	c9                   	leave
    454c:	c3                   	ret
    454d:	90                   	nop

000000000000454e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    454e:	55                   	push   %rbp
    454f:	48 89 e5             	mov    %rsp,%rbp
    4552:	48 83 ec 10          	sub    $0x10,%rsp
    4556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    455a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    455e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4566:	48 89 d6             	mov    %rdx,%rsi
    4569:	48 89 c7             	mov    %rax,%rdi
    456c:	e8 b3 ff ff ff       	call   4524 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    4571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4575:	c9                   	leave
    4576:	c3                   	ret
    4577:	90                   	nop

0000000000004578 <_ZN4neko6EngineC1Ev>:

namespace neko {

class Engine {
public:
  Engine() {
    4578:	55                   	push   %rbp
    4579:	48 89 e5             	mov    %rsp,%rbp
    457c:	53                   	push   %rbx
    457d:	48 83 ec 38          	sub    $0x38,%rsp
    4581:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4585:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4589:	48 89 c7             	mov    %rax,%rdi
    458c:	e8 11 0b 00 00       	call   50a2 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>
    4591:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4595:	48 83 c0 08          	add    $0x8,%rax
    4599:	48 89 c7             	mov    %rax,%rdi
    459c:	e8 c3 0b 00 00       	call   5164 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>
    45a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45a5:	48 83 c0 10          	add    $0x10,%rax
    45a9:	48 89 c7             	mov    %rax,%rdi
    45ac:	e8 75 0c 00 00       	call   5226 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>
    mpSettings = std::make_unique<Settings>();
    45b1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    45b5:	48 89 c7             	mov    %rax,%rdi
    45b8:	e8 74 0e 00 00       	call   5431 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    45bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45c1:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    45c5:	48 89 d6             	mov    %rdx,%rsi
    45c8:	48 89 c7             	mov    %rax,%rdi
    45cb:	e8 d6 fe ff ff       	call   44a6 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    45d0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    45d4:	48 89 c7             	mov    %rax,%rdi
    45d7:	e8 ec 0a 00 00       	call   50c8 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>

    mpThreadPool = std::make_unique<ThreadPool>(*mpSettings);
    45dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45e0:	48 89 c7             	mov    %rax,%rdi
    45e3:	e8 20 0f 00 00       	call   5508 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    45e8:	48 89 c2             	mov    %rax,%rdx
    45eb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    45ef:	48 89 d6             	mov    %rdx,%rsi
    45f2:	48 89 c7             	mov    %rax,%rdi
    45f5:	e8 50 0f 00 00       	call   554a <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    45fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    45fe:	48 8d 50 10          	lea    0x10(%rax),%rdx
    4602:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4606:	48 89 c6             	mov    %rax,%rsi
    4609:	48 89 d7             	mov    %rdx,%rdi
    460c:	e8 e9 fe ff ff       	call   44fa <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    4611:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4615:	48 89 c7             	mov    %rax,%rdi
    4618:	e8 2f 0c 00 00       	call   524c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>

    mpRenderer = std::make_unique<Renderer>(*mpSettings, *mpThreadPool);
    461d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4621:	48 83 c0 10          	add    $0x10,%rax
    4625:	48 89 c7             	mov    %rax,%rdi
    4628:	e8 f1 0f 00 00       	call   561e <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv>
    462d:	48 89 c3             	mov    %rax,%rbx
    4630:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4634:	48 89 c7             	mov    %rax,%rdi
    4637:	e8 cc 0e 00 00       	call   5508 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    463c:	48 89 c1             	mov    %rax,%rcx
    463f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4643:	48 89 da             	mov    %rbx,%rdx
    4646:	48 89 ce             	mov    %rcx,%rsi
    4649:	48 89 c7             	mov    %rax,%rdi
    464c:	e8 0f 10 00 00       	call   5660 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    4651:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4655:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4659:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    465d:	48 89 c6             	mov    %rax,%rsi
    4660:	48 89 d7             	mov    %rdx,%rdi
    4663:	e8 e6 fe ff ff       	call   454e <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    4668:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    466c:	48 89 c7             	mov    %rax,%rdi
    466f:	e8 16 0b 00 00       	call   518a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
  };
    4674:	eb 3a                	jmp    46b0 <_ZN4neko6EngineC1Ev+0x138>
    4676:	48 89 c3             	mov    %rax,%rbx
    4679:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    467d:	48 83 c0 10          	add    $0x10,%rax
    4681:	48 89 c7             	mov    %rax,%rdi
    4684:	e8 c3 0b 00 00       	call   524c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    4689:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    468d:	48 83 c0 08          	add    $0x8,%rax
    4691:	48 89 c7             	mov    %rax,%rdi
    4694:	e8 f1 0a 00 00       	call   518a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    4699:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    469d:	48 89 c7             	mov    %rax,%rdi
    46a0:	e8 23 0a 00 00       	call   50c8 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    46a5:	48 89 d8             	mov    %rbx,%rax
    46a8:	48 89 c7             	mov    %rax,%rdi
    46ab:	e8 20 ee ff ff       	call   34d0 <_Unwind_Resume@plt>
    46b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    46b4:	c9                   	leave
    46b5:	c3                   	ret

00000000000046b6 <_ZZN4neko6Engine5startEvENKUlvE_clEv>:
  Engine &operator=(Engine &&) = default;

  ~Engine() = default;

  void start() {
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    46b6:	55                   	push   %rbp
    46b7:	48 89 e5             	mov    %rsp,%rbp
    46ba:	48 83 ec 10          	sub    $0x10,%rsp
    46be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46c6:	48 8b 00             	mov    (%rax),%rax
    46c9:	48 83 c0 08          	add    $0x8,%rax
    46cd:	48 89 c7             	mov    %rax,%rdi
    46d0:	e8 8f 10 00 00       	call   5764 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>
    46d5:	48 89 c7             	mov    %rax,%rdi
    46d8:	e8 21 f3 ff ff       	call   39fe <_ZN4neko8Renderer5startEv>
    46dd:	90                   	nop
    46de:	c9                   	leave
    46df:	c3                   	ret

00000000000046e0 <_ZN4neko6Engine5startEv>:
  void start() {
    46e0:	55                   	push   %rbp
    46e1:	48 89 e5             	mov    %rsp,%rbp
    46e4:	53                   	push   %rbx
    46e5:	48 83 ec 48          	sub    $0x48,%rsp
    46e9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    46ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    46f1:	48 83 c0 10          	add    $0x10,%rax
    46f5:	48 89 c7             	mov    %rax,%rdi
    46f8:	e8 4d 10 00 00       	call   574a <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    46fd:	48 89 c3             	mov    %rax,%rbx
    4700:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4704:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4708:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    470c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4710:	48 89 d6             	mov    %rdx,%rsi
    4713:	48 89 c7             	mov    %rax,%rdi
    4716:	e8 63 10 00 00       	call   577e <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>
    471b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    471f:	48 89 c6             	mov    %rax,%rsi
    4722:	48 89 df             	mov    %rbx,%rdi
    4725:	e8 d0 f8 ff ff       	call   3ffa <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>
    472a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    472e:	48 89 c7             	mov    %rax,%rdi
    4731:	e8 a8 f8 ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
  }
    4736:	eb 1a                	jmp    4752 <_ZN4neko6Engine5startEv+0x72>
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    4738:	48 89 c3             	mov    %rax,%rbx
    473b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    473f:	48 89 c7             	mov    %rax,%rdi
    4742:	e8 97 f8 ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
    4747:	48 89 d8             	mov    %rbx,%rax
    474a:	48 89 c7             	mov    %rax,%rdi
    474d:	e8 7e ed ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    4752:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4756:	c9                   	leave
    4757:	c3                   	ret

0000000000004758 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4758:	55                   	push   %rbp
    4759:	48 89 e5             	mov    %rsp,%rbp
    475c:	48 83 ec 20          	sub    $0x20,%rsp
    4760:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4764:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    476b:	00 
      while (!eq(__p[__i], char_type()))
    476c:	eb 05                	jmp    4773 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    476e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4773:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4777:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    477b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    477f:	48 01 c2             	add    %rax,%rdx
    4782:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4786:	48 89 c6             	mov    %rax,%rsi
    4789:	48 89 d7             	mov    %rdx,%rdi
    478c:	e8 d3 11 00 00       	call   5964 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4791:	83 f0 01             	xor    $0x1,%eax
    4794:	84 c0                	test   %al,%al
    4796:	75 d6                	jne    476e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    479c:	c9                   	leave
    479d:	c3                   	ret

000000000000479e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    479e:	55                   	push   %rbp
    479f:	48 89 e5             	mov    %rsp,%rbp
    47a2:	48 83 ec 10          	sub    $0x10,%rsp
    47a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47ae:	48 89 c7             	mov    %rax,%rdi
    47b1:	e8 9a e8 ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    47b6:	90                   	nop
    47b7:	c9                   	leave
    47b8:	c3                   	ret
    47b9:	90                   	nop

00000000000047ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    47ba:	55                   	push   %rbp
    47bb:	48 89 e5             	mov    %rsp,%rbp
    47be:	53                   	push   %rbx
    47bf:	48 83 ec 38          	sub    $0x38,%rsp
    47c3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    47c7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    47cb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    47cf:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    47d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47d7:	48 89 c7             	mov    %rax,%rdi
    47da:	e8 41 ea ff ff       	call   3220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    47df:	48 89 c1             	mov    %rax,%rcx
    47e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47e6:	48 89 c2             	mov    %rax,%rdx
    47e9:	48 89 ce             	mov    %rcx,%rsi
    47ec:	48 89 df             	mov    %rbx,%rdi
    47ef:	e8 2c eb ff ff       	call   3320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    47f4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    47f9:	75 0f                	jne    480a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    47fb:	48 8d 05 8e ce 00 00 	lea    0xce8e(%rip),%rax        # 11690 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4802:	48 89 c7             	mov    %rax,%rdi
    4805:	e8 96 e9 ff ff       	call   31a0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    480a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    480e:	48 89 c7             	mov    %rax,%rdi
    4811:	e8 84 f0 ff ff       	call   389a <_ZNSt11char_traitsIcE6lengthEPKc>
    4816:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    481a:	48 01 d0             	add    %rdx,%rax
    481d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4821:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4825:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4829:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    482d:	48 89 ce             	mov    %rcx,%rsi
    4830:	48 89 c7             	mov    %rax,%rdi
    4833:	e8 92 11 00 00       	call   59ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4838:	eb 1a                	jmp    4854 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    483a:	48 89 c3             	mov    %rax,%rbx
    483d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4841:	48 89 c7             	mov    %rax,%rdi
    4844:	e8 55 ff ff ff       	call   479e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4849:	48 89 d8             	mov    %rbx,%rax
    484c:	48 89 c7             	mov    %rax,%rdi
    484f:	e8 7c ec ff ff       	call   34d0 <_Unwind_Resume@plt>
    4854:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4858:	c9                   	leave
    4859:	c3                   	ret

000000000000485a <_ZSt3maxImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    485a:	55                   	push   %rbp
    485b:	48 89 e5             	mov    %rsp,%rbp
    485e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
    4866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    486a:	48 8b 10             	mov    (%rax),%rdx
    486d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4871:	48 8b 00             	mov    (%rax),%rax
    4874:	48 39 c2             	cmp    %rax,%rdx
    4877:	73 06                	jae    487f <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    4879:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    487d:	eb 04                	jmp    4883 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    487f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4883:	5d                   	pop    %rbp
    4884:	c3                   	ret

0000000000004885 <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>:
			      is_move_constructible<_Tp>,
			      is_move_assignable<_Tp>>::value>::type
#else
    void
#endif
    swap(_Tp& __a, _Tp& __b)
    4885:	55                   	push   %rbp
    4886:	48 89 e5             	mov    %rsp,%rbp
    4889:	48 83 ec 20          	sub    $0x20,%rsp
    488d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4891:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    4895:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4899:	48 89 c7             	mov    %rax,%rdi
    489c:	e8 10 12 00 00       	call   5ab1 <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    48a1:	48 8b 00             	mov    (%rax),%rax
    48a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    48a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    48ac:	48 89 c7             	mov    %rax,%rdi
    48af:	e8 fd 11 00 00       	call   5ab1 <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    48b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    48b8:	48 8b 00             	mov    (%rax),%rax
    48bb:	48 89 02             	mov    %rax,(%rdx)
      __b = _GLIBCXX_MOVE(__tmp);
    48be:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    48c2:	48 89 c7             	mov    %rax,%rdi
    48c5:	e8 e7 11 00 00       	call   5ab1 <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    48ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    48ce:	48 8b 00             	mov    (%rax),%rax
    48d1:	48 89 02             	mov    %rax,(%rdx)
    }
    48d4:	90                   	nop
    48d5:	c9                   	leave
    48d6:	c3                   	ret
    48d7:	90                   	nop

00000000000048d8 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    48d8:	55                   	push   %rbp
    48d9:	48 89 e5             	mov    %rsp,%rbp
    48dc:	48 83 ec 10          	sub    $0x10,%rsp
    48e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    48e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48e8:	48 89 c7             	mov    %rax,%rdi
    48eb:	e8 d0 11 00 00       	call   5ac0 <_ZNSaISt6threadEC1Ev>
    48f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48f4:	48 89 c7             	mov    %rax,%rdi
    48f7:	e8 e0 11 00 00       	call   5adc <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    48fc:	90                   	nop
    48fd:	c9                   	leave
    48fe:	c3                   	ret
    48ff:	90                   	nop

0000000000004900 <_ZNSaISt6threadED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4900:	55                   	push   %rbp
    4901:	48 89 e5             	mov    %rsp,%rbp
    4904:	48 83 ec 10          	sub    $0x10,%rsp
    4908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    490c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4910:	48 89 c7             	mov    %rax,%rdi
    4913:	e8 f2 11 00 00       	call   5b0a <_ZNSt15__new_allocatorISt6threadED1Ev>
    4918:	90                   	nop
    4919:	c9                   	leave
    491a:	c3                   	ret
    491b:	90                   	nop

000000000000491c <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    491c:	55                   	push   %rbp
    491d:	48 89 e5             	mov    %rsp,%rbp
    4920:	48 83 ec 10          	sub    $0x10,%rsp
    4924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    492c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4934:	48 8b 00             	mov    (%rax),%rax
    4937:	48 29 c2             	sub    %rax,%rdx
    493a:	48 89 d0             	mov    %rdx,%rax
    493d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4941:	48 89 c2             	mov    %rax,%rdx
    4944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4948:	48 8b 08             	mov    (%rax),%rcx
    494b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    494f:	48 89 ce             	mov    %rcx,%rsi
    4952:	48 89 c7             	mov    %rax,%rdi
    4955:	e8 bc 11 00 00       	call   5b16 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
      }
    495a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    495e:	48 89 c7             	mov    %rax,%rdi
    4961:	e8 2e f4 ff ff       	call   3d94 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>
    4966:	90                   	nop
    4967:	c9                   	leave
    4968:	c3                   	ret
    4969:	90                   	nop

000000000000496a <_ZNSt6vectorISt6threadSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    496a:	55                   	push   %rbp
    496b:	48 89 e5             	mov    %rsp,%rbp
    496e:	48 83 ec 10          	sub    $0x10,%rsp
    4972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    497a:	48 89 c7             	mov    %rax,%rdi
    497d:	e8 ca 11 00 00       	call   5b4c <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    4982:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4989:	48 8b 48 08          	mov    0x8(%rax),%rcx
    498d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4991:	48 8b 00             	mov    (%rax),%rax
    4994:	48 89 ce             	mov    %rcx,%rsi
    4997:	48 89 c7             	mov    %rax,%rdi
    499a:	e8 bb 11 00 00       	call   5b5a <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    499f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49a3:	48 89 c7             	mov    %rax,%rdi
    49a6:	e8 71 ff ff ff       	call   491c <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>
    49ab:	90                   	nop
    49ac:	c9                   	leave
    49ad:	c3                   	ret

00000000000049ae <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %deque with no elements.
       */
#if __cplusplus >= 201103L
      deque() = default;
    49ae:	55                   	push   %rbp
    49af:	48 89 e5             	mov    %rsp,%rbp
    49b2:	48 83 ec 10          	sub    $0x10,%rsp
    49b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49be:	48 89 c7             	mov    %rax,%rdi
    49c1:	e8 da 11 00 00       	call   5ba0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>
    49c6:	90                   	nop
    49c7:	c9                   	leave
    49c8:	c3                   	ret
    49c9:	90                   	nop

00000000000049ca <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>:
      queue(const _Sequence& __c = _Sequence())
      : c(__c) { }
#else
      template<typename _Seq = _Sequence, typename _Requires = typename
	       enable_if<is_default_constructible<_Seq>::value>::type>
	queue()
    49ca:	55                   	push   %rbp
    49cb:	48 89 e5             	mov    %rsp,%rbp
    49ce:	48 83 ec 10          	sub    $0x10,%rsp
    49d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: c() { }
    49d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    49de:	0f 11 00             	movups %xmm0,(%rax)
    49e1:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    49e5:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    49e9:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    49ed:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    49f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49f5:	48 89 c7             	mov    %rax,%rdi
    49f8:	e8 b1 ff ff ff       	call   49ae <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>
    49fd:	90                   	nop
    49fe:	c9                   	leave
    49ff:	c3                   	ret

0000000000004a00 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~deque()
    4a00:	55                   	push   %rbp
    4a01:	48 89 e5             	mov    %rsp,%rbp
    4a04:	53                   	push   %rbx
    4a05:	48 83 ec 58          	sub    $0x58,%rsp
    4a09:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
    4a0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4a11:	48 89 c7             	mov    %rax,%rdi
    4a14:	e8 97 12 00 00       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    4a19:	48 89 c3             	mov    %rax,%rbx
    4a1c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4a20:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4a24:	48 89 d6             	mov    %rdx,%rsi
    4a27:	48 89 c7             	mov    %rax,%rdi
    4a2a:	e8 53 12 00 00       	call   5c82 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>
    4a2f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4a33:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4a37:	48 89 d6             	mov    %rdx,%rsi
    4a3a:	48 89 c7             	mov    %rax,%rdi
    4a3d:	e8 12 12 00 00       	call   5c54 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    4a42:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    4a46:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    4a4a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4a4e:	48 89 d9             	mov    %rbx,%rcx
    4a51:	48 89 c7             	mov    %rax,%rdi
    4a54:	e8 65 12 00 00       	call   5cbe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>
    4a59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4a5d:	48 89 c7             	mov    %rax,%rdi
    4a60:	e8 87 11 00 00       	call   5bec <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>
    4a65:	90                   	nop
    4a66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a6a:	c9                   	leave
    4a6b:	c3                   	ret

0000000000004a6c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    4a6c:	55                   	push   %rbp
    4a6d:	48 89 e5             	mov    %rsp,%rbp
    4a70:	48 83 ec 10          	sub    $0x10,%rsp
    4a74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    4a78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a7c:	48 89 c7             	mov    %rax,%rdi
    4a7f:	e8 92 12 00 00       	call   5d16 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    4a84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a88:	48 89 c7             	mov    %rax,%rdi
    4a8b:	e8 a2 12 00 00       	call   5d32 <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>
    4a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a94:	48 83 c0 08          	add    $0x8,%rax
    4a98:	48 89 c7             	mov    %rax,%rdi
    4a9b:	e8 f0 f0 ff ff       	call   3b90 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    4aa0:	90                   	nop
    4aa1:	c9                   	leave
    4aa2:	c3                   	ret
    4aa3:	90                   	nop

0000000000004aa4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    4aa4:	55                   	push   %rbp
    4aa5:	48 89 e5             	mov    %rsp,%rbp
    4aa8:	48 83 ec 10          	sub    $0x10,%rsp
    4aac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab4:	48 89 c7             	mov    %rax,%rdi
    4ab7:	e8 82 12 00 00       	call   5d3e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    4abc:	90                   	nop
    4abd:	c9                   	leave
    4abe:	c3                   	ret
    4abf:	90                   	nop

0000000000004ac0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    4ac0:	55                   	push   %rbp
    4ac1:	48 89 e5             	mov    %rsp,%rbp
    4ac4:	48 83 ec 10          	sub    $0x10,%rsp
    4ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    4acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ad0:	48 89 c7             	mov    %rax,%rdi
    4ad3:	e8 d8 12 00 00       	call   5db0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    4ad8:	48 89 c2             	mov    %rax,%rdx
    4adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4adf:	48 89 d6             	mov    %rdx,%rsi
    4ae2:	48 89 c7             	mov    %rax,%rdi
    4ae5:	e8 60 12 00 00       	call   5d4a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
    4aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aee:	48 89 c7             	mov    %rax,%rdi
    4af1:	e8 4a f3 ff ff       	call   3e40 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>
    4af6:	90                   	nop
    4af7:	c9                   	leave
    4af8:	c3                   	ret
    4af9:	90                   	nop

0000000000004afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>:

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
    4afa:	55                   	push   %rbp
    4afb:	48 89 e5             	mov    %rsp,%rbp
    4afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b06:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4b0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b0e:	48 8b 00             	mov    (%rax),%rax
    4b11:	48 29 c2             	sub    %rax,%rdx
    4b14:	48 89 d0             	mov    %rdx,%rax
    4b17:	48 c1 f8 03          	sar    $0x3,%rax
    4b1b:	5d                   	pop    %rbp
    4b1c:	c3                   	ret
    4b1d:	90                   	nop

0000000000004b1e <_ZNSt11unique_lockISt5mutexEC1ERS0_>:

      unique_lock() noexcept
      : _M_device(0), _M_owns(false)
      { }

      explicit unique_lock(mutex_type& __m)
    4b1e:	55                   	push   %rbp
    4b1f:	48 89 e5             	mov    %rsp,%rbp
    4b22:	48 83 ec 10          	sub    $0x10,%rsp
    4b26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_device(std::__addressof(__m)), _M_owns(false)
    4b2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b32:	48 89 c7             	mov    %rax,%rdi
    4b35:	e8 90 12 00 00       	call   5dca <_ZSt11__addressofISt5mutexEPT_RS1_>
    4b3a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4b3e:	48 89 02             	mov    %rax,(%rdx)
    4b41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b45:	c6 40 08 00          	movb   $0x0,0x8(%rax)
      {
	lock();
    4b49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b4d:	48 89 c7             	mov    %rax,%rdi
    4b50:	e8 83 12 00 00       	call   5dd8 <_ZNSt11unique_lockISt5mutexE4lockEv>
	_M_owns = true;
    4b55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b59:	c6 40 08 01          	movb   $0x1,0x8(%rax)
      }
    4b5d:	90                   	nop
    4b5e:	c9                   	leave
    4b5f:	c3                   	ret

0000000000004b60 <_ZNSt11unique_lockISt5mutexED1Ev>:
		    const chrono::duration<_Rep, _Period>& __rtime)
	: _M_device(std::__addressof(__m)),
	  _M_owns(_M_device->try_lock_for(__rtime))
	{ }

      ~unique_lock()
    4b60:	55                   	push   %rbp
    4b61:	48 89 e5             	mov    %rsp,%rbp
    4b64:	48 83 ec 10          	sub    $0x10,%rsp
    4b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_owns)
    4b6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b70:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    4b74:	84 c0                	test   %al,%al
    4b76:	74 0c                	je     4b84 <_ZNSt11unique_lockISt5mutexED1Ev+0x24>
	  unlock();
    4b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b7c:	48 89 c7             	mov    %rax,%rdi
    4b7f:	e8 a6 12 00 00       	call   5e2a <_ZNSt11unique_lockISt5mutexE6unlockEv>
      }
    4b84:	90                   	nop
    4b85:	c9                   	leave
    4b86:	c3                   	ret
    4b87:	90                   	nop

0000000000004b88 <_ZNKSt8functionIFvvEEclEv>:
       *
       *  The function call operator invokes the target function object
       *  stored by `this`.
       */
      _Res
      operator()(_ArgTypes... __args) const
    4b88:	55                   	push   %rbp
    4b89:	48 89 e5             	mov    %rsp,%rbp
    4b8c:	48 83 ec 10          	sub    $0x10,%rsp
    4b90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_empty())
    4b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b98:	48 89 c7             	mov    %rax,%rdi
    4b9b:	e8 ac ef ff ff       	call   3b4c <_ZNKSt14_Function_base8_M_emptyEv>
    4ba0:	84 c0                	test   %al,%al
    4ba2:	74 05                	je     4ba9 <_ZNKSt8functionIFvvEEclEv+0x21>
	  __throw_bad_function_call();
    4ba4:	e8 f7 e4 ff ff       	call   30a0 <_ZSt25__throw_bad_function_callv@plt>
	return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
    4ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bad:	48 8b 50 18          	mov    0x18(%rax),%rdx
    4bb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bb5:	48 89 c7             	mov    %rax,%rdi
    4bb8:	ff d2                	call   *%rdx
    4bba:	90                   	nop
      }
    4bbb:	c9                   	leave
    4bbc:	c3                   	ret
    4bbd:	90                   	nop

0000000000004bbe <_ZNSt14_Function_baseC1Ev>:
    _Function_base() = default;
    4bbe:	55                   	push   %rbp
    4bbf:	48 89 e5             	mov    %rsp,%rbp
    4bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4bd1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4bd8:	00 
    4bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bdd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4be4:	00 
    4be5:	90                   	nop
    4be6:	5d                   	pop    %rbp
    4be7:	c3                   	ret

0000000000004be8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>:
       *  element at the end of the %queue and assigns the given data
       *  to it.  The time complexity of the operation depends on the
       *  underlying sequence.
       */
      void
      push(const value_type& __x)
    4be8:	55                   	push   %rbp
    4be9:	48 89 e5             	mov    %rsp,%rbp
    4bec:	48 83 ec 10          	sub    $0x10,%rsp
    4bf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { c.push_back(__x); }
    4bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bfc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c00:	48 89 d6             	mov    %rdx,%rsi
    4c03:	48 89 c7             	mov    %rax,%rdi
    4c06:	e8 6b 12 00 00       	call   5e76 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>
    4c0b:	90                   	nop
    4c0c:	c9                   	leave
    4c0d:	c3                   	ret

0000000000004c0e <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>:
      empty() const
    4c0e:	55                   	push   %rbp
    4c0f:	48 89 e5             	mov    %rsp,%rbp
    4c12:	48 83 ec 10          	sub    $0x10,%rsp
    4c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return c.empty(); }
    4c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c1e:	48 89 c7             	mov    %rax,%rdi
    4c21:	e8 c0 12 00 00       	call   5ee6 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>
    4c26:	c9                   	leave
    4c27:	c3                   	ret

0000000000004c28 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4c28:	55                   	push   %rbp
    4c29:	48 89 e5             	mov    %rsp,%rbp
    4c2c:	48 83 ec 20          	sub    $0x20,%rsp
    4c30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4c34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c38:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4c3c:	48 89 d6             	mov    %rdx,%rsi
    4c3f:	48 89 c7             	mov    %rax,%rdi
    4c42:	e8 c9 12 00 00       	call   5f10 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c4b:	c9                   	leave
    4c4c:	c3                   	ret
    4c4d:	90                   	nop

0000000000004c4e <_ZNSt6vectorISt6threadSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4c4e:	55                   	push   %rbp
    4c4f:	48 89 e5             	mov    %rsp,%rbp
    4c52:	48 83 ec 20          	sub    $0x20,%rsp
    4c56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c5e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4c62:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4c66:	48 89 d6             	mov    %rdx,%rsi
    4c69:	48 89 c7             	mov    %rax,%rdi
    4c6c:	e8 9f 12 00 00       	call   5f10 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4c71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c75:	c9                   	leave
    4c76:	c3                   	ret

0000000000004c77 <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    4c77:	55                   	push   %rbp
    4c78:	48 89 e5             	mov    %rsp,%rbp
    4c7b:	53                   	push   %rbx
    4c7c:	48 83 ec 18          	sub    $0x18,%rsp
    4c80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c84:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    4c88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c8c:	48 89 c7             	mov    %rax,%rdi
    4c8f:	e8 9a 12 00 00       	call   5f2e <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    4c94:	48 8b 18             	mov    (%rax),%rbx
    4c97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c9b:	48 89 c7             	mov    %rax,%rdi
    4c9e:	e8 8b 12 00 00       	call   5f2e <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    4ca3:	48 8b 00             	mov    (%rax),%rax
    4ca6:	48 39 c3             	cmp    %rax,%rbx
    4ca9:	0f 95 c0             	setne  %al
    4cac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cb0:	c9                   	leave
    4cb1:	c3                   	ret

0000000000004cb2 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    4cb2:	55                   	push   %rbp
    4cb3:	48 89 e5             	mov    %rsp,%rbp
    4cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    4cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cbe:	48 8b 00             	mov    (%rax),%rax
    4cc1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cc9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    4ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    4cd0:	5d                   	pop    %rbp
    4cd1:	c3                   	ret

0000000000004cd2 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4cd2:	55                   	push   %rbp
    4cd3:	48 89 e5             	mov    %rsp,%rbp
    4cd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cde:	48 8b 00             	mov    (%rax),%rax
    4ce1:	5d                   	pop    %rbp
    4ce2:	c3                   	ret
    4ce3:	90                   	nop

0000000000004ce4 <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>:
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      void
      clear() _GLIBCXX_NOEXCEPT
    4ce4:	55                   	push   %rbp
    4ce5:	48 89 e5             	mov    %rsp,%rbp
    4ce8:	48 83 ec 10          	sub    $0x10,%rsp
    4cec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase_at_end(this->_M_impl._M_start); }
    4cf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cf4:	48 8b 10             	mov    (%rax),%rdx
    4cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cfb:	48 89 d6             	mov    %rdx,%rsi
    4cfe:	48 89 c7             	mov    %rax,%rdi
    4d01:	e8 36 12 00 00       	call   5f3c <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
    4d06:	90                   	nop
    4d07:	c9                   	leave
    4d08:	c3                   	ret
    4d09:	90                   	nop

0000000000004d0a <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    4d0a:	55                   	push   %rbp
    4d0b:	48 89 e5             	mov    %rsp,%rbp
    4d0e:	48 83 ec 10          	sub    $0x10,%rsp
    4d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    4d1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d1e:	48 89 c7             	mov    %rax,%rdi
    4d21:	e8 d4 fd ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4d26:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4d2a:	0f 92 c0             	setb   %al
    4d2d:	84 c0                	test   %al,%al
    4d2f:	74 24                	je     4d55 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    4d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d35:	48 89 c7             	mov    %rax,%rdi
    4d38:	e8 bd fd ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4d3d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d41:	48 29 c2             	sub    %rax,%rdx
    4d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d48:	48 89 d6             	mov    %rdx,%rsi
    4d4b:	48 89 c7             	mov    %rax,%rdi
    4d4e:	e8 49 12 00 00       	call   5f9c <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>
      }
    4d53:	eb 38                	jmp    4d8d <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    4d55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d59:	48 89 c7             	mov    %rax,%rdi
    4d5c:	e8 99 fd ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4d61:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4d65:	0f 92 c0             	setb   %al
    4d68:	84 c0                	test   %al,%al
    4d6a:	74 21                	je     4d8d <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4d6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d70:	48 8b 00             	mov    (%rax),%rax
    4d73:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d77:	48 c1 e2 03          	shl    $0x3,%rdx
    4d7b:	48 01 c2             	add    %rax,%rdx
    4d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d82:	48 89 d6             	mov    %rdx,%rsi
    4d85:	48 89 c7             	mov    %rax,%rdi
    4d88:	e8 af 11 00 00       	call   5f3c <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
      }
    4d8d:	90                   	nop
    4d8e:	c9                   	leave
    4d8f:	c3                   	ret

0000000000004d90 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>:
      thread(_Callable&& __f, _Args&&... __args)
    4d90:	55                   	push   %rbp
    4d91:	48 89 e5             	mov    %rsp,%rbp
    4d94:	41 55                	push   %r13
    4d96:	41 54                	push   %r12
    4d98:	53                   	push   %rbx
    4d99:	48 83 ec 38          	sub    $0x38,%rsp
    4d9d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4da1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4da5:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
      {
    4da9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4dad:	48 89 c7             	mov    %rax,%rdi
    4db0:	e8 65 ee ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
	auto __depend = nullptr;
    4db5:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    4dbc:	00 
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    4dbd:	bf 18 00 00 00       	mov    $0x18,%edi
    4dc2:	e8 f9 e4 ff ff       	call   32c0 <_Znwm@plt>
    4dc7:	48 89 c3             	mov    %rax,%rbx
    4dca:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    4dd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4dd4:	48 89 c7             	mov    %rax,%rdi
    4dd7:	e8 d8 13 00 00       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    4ddc:	49 89 c4             	mov    %rax,%r12
    4ddf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4de3:	48 89 c7             	mov    %rax,%rdi
    4de6:	e8 bb 13 00 00       	call   61a6 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    4deb:	4c 89 e2             	mov    %r12,%rdx
    4dee:	48 89 c6             	mov    %rax,%rsi
    4df1:	48 89 df             	mov    %rbx,%rdi
    4df4:	e8 e3 13 00 00       	call   61dc <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>
    4df9:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    4dff:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4e03:	48 89 de             	mov    %rbx,%rsi
    4e06:	48 89 c7             	mov    %rax,%rdi
    4e09:	e8 60 14 00 00       	call   626e <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    4e0e:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    4e12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4e16:	ba 00 00 00 00       	mov    $0x0,%edx
    4e1b:	48 89 ce             	mov    %rcx,%rsi
    4e1e:	48 89 c7             	mov    %rax,%rdi
    4e21:	e8 5a e4 ff ff       	call   3280 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>
    4e26:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4e2a:	48 89 c7             	mov    %rax,%rdi
    4e2d:	e8 62 14 00 00       	call   6294 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
      }
    4e32:	eb 31                	jmp    4e65 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xd5>
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    4e34:	49 89 c4             	mov    %rax,%r12
    4e37:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4e3b:	48 89 c7             	mov    %rax,%rdi
    4e3e:	e8 51 14 00 00       	call   6294 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
    4e43:	eb 03                	jmp    4e48 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xb8>
    4e45:	49 89 c4             	mov    %rax,%r12
    4e48:	45 84 ed             	test   %r13b,%r13b
    4e4b:	74 0d                	je     4e5a <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xca>
    4e4d:	be 18 00 00 00       	mov    $0x18,%esi
    4e52:	48 89 df             	mov    %rbx,%rdi
    4e55:	e8 76 e4 ff ff       	call   32d0 <_ZdlPvm@plt>
    4e5a:	4c 89 e0             	mov    %r12,%rax
    4e5d:	48 89 c7             	mov    %rax,%rdi
    4e60:	e8 6b e6 ff ff       	call   34d0 <_Unwind_Resume@plt>
      }
    4e65:	48 83 c4 38          	add    $0x38,%rsp
    4e69:	5b                   	pop    %rbx
    4e6a:	41 5c                	pop    %r12
    4e6c:	41 5d                	pop    %r13
    4e6e:	5d                   	pop    %rbp
    4e6f:	c3                   	ret

0000000000004e70 <_ZNSt8functionIFvvEEC1Ev>:
      function() noexcept
    4e70:	55                   	push   %rbp
    4e71:	48 89 e5             	mov    %rsp,%rbp
    4e74:	48 83 ec 10          	sub    $0x10,%rsp
    4e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Function_base() { }
    4e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e80:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e84:	0f 11 00             	movups %xmm0,(%rax)
    4e87:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    4e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e90:	48 89 c7             	mov    %rax,%rdi
    4e93:	e8 26 fd ff ff       	call   4bbe <_ZNSt14_Function_baseC1Ev>
    4e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e9c:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    4ea3:	00 
    4ea4:	90                   	nop
    4ea5:	c9                   	leave
    4ea6:	c3                   	ret
    4ea7:	90                   	nop

0000000000004ea8 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>:
    void
    wait(unique_lock<mutex>& __lock);

    template<typename _Predicate>
      void
      wait(unique_lock<mutex>& __lock, _Predicate __p)
    4ea8:	55                   	push   %rbp
    4ea9:	48 89 e5             	mov    %rsp,%rbp
    4eac:	48 83 ec 20          	sub    $0x20,%rsp
    4eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4eb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	while (!__p())
    4ebc:	eb 13                	jmp    4ed1 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x29>
	  wait(__lock);
    4ebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ec6:	48 89 d6             	mov    %rdx,%rsi
    4ec9:	48 89 c7             	mov    %rax,%rdi
    4ecc:	e8 9f e1 ff ff       	call   3070 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>
	while (!__p())
    4ed1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4ed5:	48 89 c7             	mov    %rax,%rdi
    4ed8:	e8 1d f4 ff ff       	call   42fa <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>
    4edd:	83 f0 01             	xor    $0x1,%eax
    4ee0:	84 c0                	test   %al,%al
    4ee2:	75 da                	jne    4ebe <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x16>
      }
    4ee4:	90                   	nop
    4ee5:	90                   	nop
    4ee6:	c9                   	leave
    4ee7:	c3                   	ret

0000000000004ee8 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>:
      front()
    4ee8:	55                   	push   %rbp
    4ee9:	48 89 e5             	mov    %rsp,%rbp
    4eec:	48 83 ec 10          	sub    $0x10,%rsp
    4ef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return c.front();
    4ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ef8:	48 89 c7             	mov    %rax,%rdi
    4efb:	e8 f8 13 00 00       	call   62f8 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>
      }
    4f00:	c9                   	leave
    4f01:	c3                   	ret

0000000000004f02 <_ZNSt8functionIFvvEEaSERKS1_>:
      operator=(const function& __x)
    4f02:	55                   	push   %rbp
    4f03:	48 89 e5             	mov    %rsp,%rbp
    4f06:	48 83 ec 30          	sub    $0x30,%rsp
    4f0a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4f0e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	function(__x).swap(*this);
    4f12:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4f16:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4f1a:	48 89 d6             	mov    %rdx,%rsi
    4f1d:	48 89 c7             	mov    %rax,%rdi
    4f20:	e8 01 14 00 00       	call   6326 <_ZNSt8functionIFvvEEC1ERKS1_>
    4f25:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4f29:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4f2d:	48 89 d6             	mov    %rdx,%rsi
    4f30:	48 89 c7             	mov    %rax,%rdi
    4f33:	e8 98 14 00 00       	call   63d0 <_ZNSt8functionIFvvEE4swapERS1_>
    4f38:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4f3c:	48 89 c7             	mov    %rax,%rdi
    4f3f:	e8 9a f0 ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
	return *this;
    4f44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    4f48:	c9                   	leave
    4f49:	c3                   	ret

0000000000004f4a <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>:
       *  Note that no data is returned, and if the first element's
       *  data is needed, it should be retrieved before pop() is
       *  called.
       */
      void
      pop()
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	48 83 ec 10          	sub    $0x10,%rsp
    4f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	__glibcxx_requires_nonempty();
	c.pop_front();
    4f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5a:	48 89 c7             	mov    %rax,%rdi
    4f5d:	e8 ca 14 00 00       	call   642c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>
      }
    4f62:	90                   	nop
    4f63:	c9                   	leave
    4f64:	c3                   	ret
    4f65:	90                   	nop

0000000000004f66 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    4f66:	55                   	push   %rbp
    4f67:	48 89 e5             	mov    %rsp,%rbp
    4f6a:	53                   	push   %rbx
    4f6b:	48 83 ec 48          	sub    $0x48,%rsp
    4f6f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    4f73:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    4f77:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    4f7b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f7f:	48 89 d6             	mov    %rdx,%rsi
    4f82:	48 89 c7             	mov    %rax,%rdi
    4f85:	e8 10 15 00 00       	call   649a <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>
    4f8a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    4f8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4f92:	48 89 c7             	mov    %rax,%rdi
    4f95:	e8 26 15 00 00       	call   64c0 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>
    4f9a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4f9e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4fa2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4fa6:	48 89 d6             	mov    %rdx,%rsi
    4fa9:	48 89 c7             	mov    %rax,%rdi
    4fac:	e8 29 15 00 00       	call   64da <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    4fb1:	84 c0                	test   %al,%al
    4fb3:	75 32                	jne    4fe7 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x81>
    4fb5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4fb9:	48 89 c7             	mov    %rax,%rdi
    4fbc:	e8 3b 15 00 00       	call   64fc <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>
    4fc1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4fc5:	48 89 c7             	mov    %rax,%rdi
    4fc8:	e8 4b 15 00 00       	call   6518 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    4fcd:	48 89 c2             	mov    %rax,%rdx
    4fd0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    4fd4:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    4fd8:	48 89 ce             	mov    %rcx,%rsi
    4fdb:	48 89 c7             	mov    %rax,%rdi
    4fde:	e8 53 15 00 00       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    4fe3:	84 c0                	test   %al,%al
    4fe5:	74 07                	je     4fee <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x88>
    4fe7:	b8 01 00 00 00       	mov    $0x1,%eax
    4fec:	eb 05                	jmp    4ff3 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x8d>
    4fee:	b8 00 00 00 00       	mov    $0x0,%eax
    4ff3:	84 c0                	test   %al,%al
    4ff5:	74 5d                	je     5054 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    4ff7:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    4ffb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4fff:	48 89 c7             	mov    %rax,%rdi
    5002:	e8 aa 0a 00 00       	call   5ab1 <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    5007:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    500a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    500e:	48 89 d6             	mov    %rdx,%rsi
    5011:	48 89 c7             	mov    %rax,%rdi
    5014:	e8 4c 15 00 00       	call   6565 <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>
    5019:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    501d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5021:	48 89 d6             	mov    %rdx,%rsi
    5024:	48 89 c7             	mov    %rax,%rdi
    5027:	e8 6e 15 00 00       	call   659a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>
    502c:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    5030:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    5034:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5038:	49 89 c8             	mov    %rcx,%r8
    503b:	48 89 d1             	mov    %rdx,%rcx
    503e:	48 8d 15 ef c6 00 00 	lea    0xc6ef(%rip),%rdx        # 11734 <_ZSt19piecewise_construct>
    5045:	48 89 c6             	mov    %rax,%rsi
    5048:	48 89 df             	mov    %rbx,%rdi
    504b:	e8 68 15 00 00       	call   65b8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>
    5050:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    5054:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5058:	48 89 c7             	mov    %rax,%rdi
    505b:	e8 b8 14 00 00       	call   6518 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    5060:	48 83 c0 08          	add    $0x8,%rax
      }
    5064:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5068:	c9                   	leave
    5069:	c3                   	ret

000000000000506a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    506a:	55                   	push   %rbp
    506b:	48 89 e5             	mov    %rsp,%rbp
    506e:	48 83 ec 10          	sub    $0x10,%rsp
    5072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    507a:	48 89 c7             	mov    %rax,%rdi
    507d:	e8 32 16 00 00       	call   66b4 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    5082:	90                   	nop
    5083:	c9                   	leave
    5084:	c3                   	ret
    5085:	90                   	nop

0000000000005086 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    5086:	55                   	push   %rbp
    5087:	48 89 e5             	mov    %rsp,%rbp
    508a:	48 83 ec 10          	sub    $0x10,%rsp
    508e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5096:	48 89 c7             	mov    %rax,%rdi
    5099:	e8 cc ff ff ff       	call   506a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>
    509e:	90                   	nop
    509f:	c9                   	leave
    50a0:	c3                   	ret
    50a1:	90                   	nop

00000000000050a2 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    50a2:	55                   	push   %rbp
    50a3:	48 89 e5             	mov    %rsp,%rbp
    50a6:	48 83 ec 10          	sub    $0x10,%rsp
    50aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    50ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50b2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    50b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50bd:	48 89 c7             	mov    %rax,%rdi
    50c0:	e8 c1 ff ff ff       	call   5086 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    50c5:	90                   	nop
    50c6:	c9                   	leave
    50c7:	c3                   	ret

00000000000050c8 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    50c8:	55                   	push   %rbp
    50c9:	48 89 e5             	mov    %rsp,%rbp
    50cc:	53                   	push   %rbx
    50cd:	48 83 ec 28          	sub    $0x28,%rsp
    50d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    50d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50d9:	48 89 c7             	mov    %rax,%rdi
    50dc:	e8 ef 15 00 00       	call   66d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    50e1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    50e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50e9:	48 8b 00             	mov    (%rax),%rax
    50ec:	48 85 c0             	test   %rax,%rax
    50ef:	74 29                	je     511a <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    50f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50f5:	48 89 c7             	mov    %rax,%rdi
    50f8:	e8 ed 15 00 00       	call   66ea <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>
    50fd:	48 89 c3             	mov    %rax,%rbx
    5100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5104:	48 89 c7             	mov    %rax,%rdi
    5107:	e8 f8 15 00 00       	call   6704 <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>
    510c:	48 8b 00             	mov    (%rax),%rax
    510f:	48 89 c6             	mov    %rax,%rsi
    5112:	48 89 df             	mov    %rbx,%rdi
    5115:	e8 14 16 00 00       	call   672e <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
	__ptr = pointer();
    511a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    511e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    5125:	90                   	nop
    5126:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    512a:	c9                   	leave
    512b:	c3                   	ret

000000000000512c <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    512c:	55                   	push   %rbp
    512d:	48 89 e5             	mov    %rsp,%rbp
    5130:	48 83 ec 10          	sub    $0x10,%rsp
    5134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    513c:	48 89 c7             	mov    %rax,%rdi
    513f:	e8 20 16 00 00       	call   6764 <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    5144:	90                   	nop
    5145:	c9                   	leave
    5146:	c3                   	ret
    5147:	90                   	nop

0000000000005148 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    5148:	55                   	push   %rbp
    5149:	48 89 e5             	mov    %rsp,%rbp
    514c:	48 83 ec 10          	sub    $0x10,%rsp
    5150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5158:	48 89 c7             	mov    %rax,%rdi
    515b:	e8 cc ff ff ff       	call   512c <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>
    5160:	90                   	nop
    5161:	c9                   	leave
    5162:	c3                   	ret
    5163:	90                   	nop

0000000000005164 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    5164:	55                   	push   %rbp
    5165:	48 89 e5             	mov    %rsp,%rbp
    5168:	48 83 ec 10          	sub    $0x10,%rsp
    516c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    5170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5174:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    517b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    517f:	48 89 c7             	mov    %rax,%rdi
    5182:	e8 c1 ff ff ff       	call   5148 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    5187:	90                   	nop
    5188:	c9                   	leave
    5189:	c3                   	ret

000000000000518a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    518a:	55                   	push   %rbp
    518b:	48 89 e5             	mov    %rsp,%rbp
    518e:	53                   	push   %rbx
    518f:	48 83 ec 28          	sub    $0x28,%rsp
    5193:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5197:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    519b:	48 89 c7             	mov    %rax,%rdi
    519e:	e8 dd 15 00 00       	call   6780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    51a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    51a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51ab:	48 8b 00             	mov    (%rax),%rax
    51ae:	48 85 c0             	test   %rax,%rax
    51b1:	74 29                	je     51dc <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    51b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51b7:	48 89 c7             	mov    %rax,%rdi
    51ba:	e8 db 15 00 00       	call   679a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>
    51bf:	48 89 c3             	mov    %rax,%rbx
    51c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51c6:	48 89 c7             	mov    %rax,%rdi
    51c9:	e8 e6 15 00 00       	call   67b4 <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>
    51ce:	48 8b 00             	mov    (%rax),%rax
    51d1:	48 89 c6             	mov    %rax,%rsi
    51d4:	48 89 df             	mov    %rbx,%rdi
    51d7:	e8 36 16 00 00       	call   6812 <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
	__ptr = pointer();
    51dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    51e7:	90                   	nop
    51e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51ec:	c9                   	leave
    51ed:	c3                   	ret

00000000000051ee <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    51ee:	55                   	push   %rbp
    51ef:	48 89 e5             	mov    %rsp,%rbp
    51f2:	48 83 ec 10          	sub    $0x10,%rsp
    51f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51fe:	48 89 c7             	mov    %rax,%rdi
    5201:	e8 42 16 00 00       	call   6848 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    5206:	90                   	nop
    5207:	c9                   	leave
    5208:	c3                   	ret
    5209:	90                   	nop

000000000000520a <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    520a:	55                   	push   %rbp
    520b:	48 89 e5             	mov    %rsp,%rbp
    520e:	48 83 ec 10          	sub    $0x10,%rsp
    5212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    521a:	48 89 c7             	mov    %rax,%rdi
    521d:	e8 cc ff ff ff       	call   51ee <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>
    5222:	90                   	nop
    5223:	c9                   	leave
    5224:	c3                   	ret
    5225:	90                   	nop

0000000000005226 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    5226:	55                   	push   %rbp
    5227:	48 89 e5             	mov    %rsp,%rbp
    522a:	48 83 ec 10          	sub    $0x10,%rsp
    522e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    5232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5236:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    523d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5241:	48 89 c7             	mov    %rax,%rdi
    5244:	e8 c1 ff ff ff       	call   520a <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    5249:	90                   	nop
    524a:	c9                   	leave
    524b:	c3                   	ret

000000000000524c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    524c:	55                   	push   %rbp
    524d:	48 89 e5             	mov    %rsp,%rbp
    5250:	53                   	push   %rbx
    5251:	48 83 ec 28          	sub    $0x28,%rsp
    5255:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5259:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    525d:	48 89 c7             	mov    %rax,%rdi
    5260:	e8 ff 15 00 00       	call   6864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    5265:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    5269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    526d:	48 8b 00             	mov    (%rax),%rax
    5270:	48 85 c0             	test   %rax,%rax
    5273:	74 29                	je     529e <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5279:	48 89 c7             	mov    %rax,%rdi
    527c:	e8 fd 15 00 00       	call   687e <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>
    5281:	48 89 c3             	mov    %rax,%rbx
    5284:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5288:	48 89 c7             	mov    %rax,%rdi
    528b:	e8 08 16 00 00       	call   6898 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>
    5290:	48 8b 00             	mov    (%rax),%rax
    5293:	48 89 c6             	mov    %rax,%rsi
    5296:	48 89 df             	mov    %rbx,%rdi
    5299:	e8 08 16 00 00       	call   68a6 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
	__ptr = pointer();
    529e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    52a9:	90                   	nop
    52aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52ae:	c9                   	leave
    52af:	c3                   	ret

00000000000052b0 <_ZN4neko8SettingsUt_C1Ev>:
  medium = 2,
  high = 1,
};

struct Settings {
  struct {
    52b0:	55                   	push   %rbp
    52b1:	48 89 e5             	mov    %rsp,%rbp
    52b4:	53                   	push   %rbx
    52b5:	48 83 ec 28          	sub    $0x28,%rsp
    52b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    52bd:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    52c1:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    52c5:	48 89 c7             	mov    %rax,%rdi
    52c8:	e8 13 e2 ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    52cd:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    52d1:	48 89 c2             	mov    %rax,%rdx
    52d4:	48 8d 05 e7 c3 00 00 	lea    0xc3e7(%rip),%rax        # 116c2 <_ZN6__pstl9execution2v1L5unseqE+0x57>
    52db:	48 89 c6             	mov    %rax,%rsi
    52de:	48 89 df             	mov    %rbx,%rdi
    52e1:	e8 d4 f4 ff ff       	call   47ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    52e6:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    52ea:	48 89 c7             	mov    %rax,%rdi
    52ed:	e8 4e e0 ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    52f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52f6:	c7 40 20 00 00 40 00 	movl   $0x400000,0x20(%rax)
    52fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5301:	48 8d 58 28          	lea    0x28(%rax),%rbx
    5305:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5309:	48 89 c7             	mov    %rax,%rdi
    530c:	e8 cf e1 ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    5311:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5315:	48 89 c2             	mov    %rax,%rdx
    5318:	48 8d 05 b6 c3 00 00 	lea    0xc3b6(%rip),%rax        # 116d5 <_ZN6__pstl9execution2v1L5unseqE+0x6a>
    531f:	48 89 c6             	mov    %rax,%rsi
    5322:	48 89 df             	mov    %rbx,%rdi
    5325:	e8 90 f4 ff ff       	call   47ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    532a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    532e:	48 89 c7             	mov    %rax,%rdi
    5331:	e8 0a e0 ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    5336:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    533a:	c7 40 48 00 00 40 00 	movl   $0x400000,0x48(%rax)
    5341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5345:	c7 40 4c 00 30 40 00 	movl   $0x403000,0x4c(%rax)
    534c:	eb 40                	jmp    538e <_ZN4neko8SettingsUt_C1Ev+0xde>
    534e:	48 89 c3             	mov    %rax,%rbx
    5351:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5355:	48 89 c7             	mov    %rax,%rdi
    5358:	e8 e3 df ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    535d:	48 89 d8             	mov    %rbx,%rax
    5360:	48 89 c7             	mov    %rax,%rdi
    5363:	e8 68 e1 ff ff       	call   34d0 <_Unwind_Resume@plt>
    5368:	48 89 c3             	mov    %rax,%rbx
    536b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    536f:	48 89 c7             	mov    %rax,%rdi
    5372:	e8 c9 df ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    5377:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    537b:	48 89 c7             	mov    %rax,%rdi
    537e:	e8 dd dd ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5383:	48 89 d8             	mov    %rbx,%rax
    5386:	48 89 c7             	mov    %rax,%rdi
    5389:	e8 42 e1 ff ff       	call   34d0 <_Unwind_Resume@plt>
    538e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5392:	c9                   	leave
    5393:	c3                   	ret

0000000000005394 <_ZN4neko8SettingsUt_D1Ev>:
    5394:	55                   	push   %rbp
    5395:	48 89 e5             	mov    %rsp,%rbp
    5398:	48 83 ec 10          	sub    $0x10,%rsp
    539c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a4:	48 83 c0 28          	add    $0x28,%rax
    53a8:	48 89 c7             	mov    %rax,%rdi
    53ab:	e8 b0 dd ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    53b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b4:	48 89 c7             	mov    %rax,%rdi
    53b7:	e8 a4 dd ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    53bc:	90                   	nop
    53bd:	c9                   	leave
    53be:	c3                   	ret
    53bf:	90                   	nop

00000000000053c0 <_ZN4neko8SettingsUt0_C1Ev>:
    std::string engineName = "Neko Engine";
    u32 engineVersion = VK_MAKE_VERSION(1, 0, 0);
    u32 apiVersion = VK_API_VERSION_1_3;
  } general;

  struct {
    53c0:	55                   	push   %rbp
    53c1:	48 89 e5             	mov    %rsp,%rbp
    53c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53cc:	c7 00 20 03 00 00    	movl   $0x320,(%rax)
    53d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d6:	c7 40 04 58 02 00 00 	movl   $0x258,0x4(%rax)
    53dd:	90                   	nop
    53de:	5d                   	pop    %rbp
    53df:	c3                   	ret

00000000000053e0 <_ZN4neko8SettingsUt1_C1Ev>:
    u32 screenWidth = 800;
    u32 screenHeight = 600;

  } graphics;

  struct {
    53e0:	55                   	push   %rbp
    53e1:	48 89 e5             	mov    %rsp,%rbp
    53e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ec:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    53f2:	90                   	nop
    53f3:	5d                   	pop    %rbp
    53f4:	c3                   	ret
    53f5:	90                   	nop

00000000000053f6 <_ZN4neko8SettingsC1Ev>:
struct Settings {
    53f6:	55                   	push   %rbp
    53f7:	48 89 e5             	mov    %rsp,%rbp
    53fa:	48 83 ec 10          	sub    $0x10,%rsp
    53fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5406:	48 89 c7             	mov    %rax,%rdi
    5409:	e8 a2 fe ff ff       	call   52b0 <_ZN4neko8SettingsUt_C1Ev>
    540e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5412:	48 83 c0 50          	add    $0x50,%rax
    5416:	48 89 c7             	mov    %rax,%rdi
    5419:	e8 a2 ff ff ff       	call   53c0 <_ZN4neko8SettingsUt0_C1Ev>
    541e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5422:	48 83 c0 58          	add    $0x58,%rax
    5426:	48 89 c7             	mov    %rax,%rdi
    5429:	e8 b2 ff ff ff       	call   53e0 <_ZN4neko8SettingsUt1_C1Ev>
    542e:	90                   	nop
    542f:	c9                   	leave
    5430:	c3                   	ret

0000000000005431 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
   *  @relates unique_ptr
   */
  template<typename _Tp, typename... _Args>
    _GLIBCXX23_CONSTEXPR
    inline __detail::__unique_ptr_t<_Tp>
    make_unique(_Args&&... __args)
    5431:	55                   	push   %rbp
    5432:	48 89 e5             	mov    %rsp,%rbp
    5435:	41 54                	push   %r12
    5437:	53                   	push   %rbx
    5438:	48 83 ec 10          	sub    $0x10,%rsp
    543c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5440:	bf 60 00 00 00       	mov    $0x60,%edi
    5445:	e8 76 de ff ff       	call   32c0 <_Znwm@plt>
    544a:	48 89 c6             	mov    %rax,%rsi
    544d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5453:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5457:	b8 00 00 00 00       	mov    $0x0,%eax
    545c:	ba 0c 00 00 00       	mov    $0xc,%edx
    5461:	48 89 f7             	mov    %rsi,%rdi
    5464:	48 89 d1             	mov    %rdx,%rcx
    5467:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    546a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    546e:	e8 83 ff ff ff       	call   53f6 <_ZN4neko8SettingsC1Ev>
    5473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5477:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    547b:	48 89 c7             	mov    %rax,%rdi
    547e:	e8 7f 14 00 00       	call   6902 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5483:	eb 21                	jmp    54a6 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x75>
    5485:	48 89 c3             	mov    %rax,%rbx
    5488:	45 84 e4             	test   %r12b,%r12b
    548b:	74 0e                	je     549b <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x6a>
    548d:	be 60 00 00 00       	mov    $0x60,%esi
    5492:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5496:	e8 35 de ff ff       	call   32d0 <_ZdlPvm@plt>
    549b:	48 89 d8             	mov    %rbx,%rax
    549e:	48 89 c7             	mov    %rax,%rdi
    54a1:	e8 2a e0 ff ff       	call   34d0 <_Unwind_Resume@plt>
    54a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54aa:	48 83 c4 10          	add    $0x10,%rsp
    54ae:	5b                   	pop    %rbx
    54af:	41 5c                	pop    %r12
    54b1:	5d                   	pop    %rbp
    54b2:	c3                   	ret
    54b3:	90                   	nop

00000000000054b4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    54b4:	55                   	push   %rbp
    54b5:	48 89 e5             	mov    %rsp,%rbp
    54b8:	48 83 ec 10          	sub    $0x10,%rsp
    54bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    54c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54c8:	48 89 c7             	mov    %rax,%rdi
    54cb:	e8 bc 14 00 00       	call   698c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>
    54d0:	48 89 c2             	mov    %rax,%rdx
    54d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d7:	48 89 d6             	mov    %rdx,%rsi
    54da:	48 89 c7             	mov    %rax,%rdi
    54dd:	e8 46 14 00 00       	call   6928 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    54e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54e6:	48 89 c7             	mov    %rax,%rdi
    54e9:	e8 d6 14 00 00       	call   69c4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    54ee:	48 89 c7             	mov    %rax,%rdi
    54f1:	e8 e8 14 00 00       	call   69de <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>
    54f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54fa:	48 89 c7             	mov    %rax,%rdi
    54fd:	e8 c2 14 00 00       	call   69c4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5506:	c9                   	leave
    5507:	c3                   	ret

0000000000005508 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    5508:	55                   	push   %rbp
    5509:	48 89 e5             	mov    %rsp,%rbp
    550c:	48 83 ec 10          	sub    $0x10,%rsp
    5510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    5514:	e8 55 e3 ff ff       	call   386e <_ZSt23__is_constant_evaluatedv>
    5519:	84 c0                	test   %al,%al
    551b:	74 18                	je     5535 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    551d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5521:	48 89 c7             	mov    %rax,%rdi
    5524:	e8 c3 14 00 00       	call   69ec <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
    5529:	48 85 c0             	test   %rax,%rax
    552c:	75 07                	jne    5535 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    552e:	b8 01 00 00 00       	mov    $0x1,%eax
    5533:	eb 05                	jmp    553a <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x32>
    5535:	b8 00 00 00 00       	mov    $0x0,%eax
    553a:	84 c0                	test   %al,%al
	return *get();
    553c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5540:	48 89 c7             	mov    %rax,%rdi
    5543:	e8 a4 14 00 00       	call   69ec <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
      }
    5548:	c9                   	leave
    5549:	c3                   	ret

000000000000554a <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    554a:	55                   	push   %rbp
    554b:	48 89 e5             	mov    %rsp,%rbp
    554e:	41 54                	push   %r12
    5550:	53                   	push   %rbx
    5551:	48 83 ec 20          	sub    $0x20,%rsp
    5555:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5559:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    555d:	bf f8 00 00 00       	mov    $0xf8,%edi
    5562:	e8 59 dd ff ff       	call   32c0 <_Znwm@plt>
    5567:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    556b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5571:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5575:	48 89 c7             	mov    %rax,%rdi
    5578:	e8 89 14 00 00       	call   6a06 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    557d:	48 89 c6             	mov    %rax,%rsi
    5580:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    5584:	e8 27 e9 ff ff       	call   3eb0 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>
    5589:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    558d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    5591:	48 89 c7             	mov    %rax,%rdi
    5594:	e8 a1 14 00 00       	call   6a3a <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5599:	eb 21                	jmp    55bc <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x72>
    559b:	48 89 c3             	mov    %rax,%rbx
    559e:	45 84 e4             	test   %r12b,%r12b
    55a1:	74 0e                	je     55b1 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x67>
    55a3:	be f8 00 00 00       	mov    $0xf8,%esi
    55a8:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    55ac:	e8 1f dd ff ff       	call   32d0 <_ZdlPvm@plt>
    55b1:	48 89 d8             	mov    %rbx,%rax
    55b4:	48 89 c7             	mov    %rax,%rdi
    55b7:	e8 14 df ff ff       	call   34d0 <_Unwind_Resume@plt>
    55bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55c0:	48 83 c4 20          	add    $0x20,%rsp
    55c4:	5b                   	pop    %rbx
    55c5:	41 5c                	pop    %r12
    55c7:	5d                   	pop    %rbp
    55c8:	c3                   	ret
    55c9:	90                   	nop

00000000000055ca <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    55ca:	55                   	push   %rbp
    55cb:	48 89 e5             	mov    %rsp,%rbp
    55ce:	48 83 ec 10          	sub    $0x10,%rsp
    55d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    55da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55de:	48 89 c7             	mov    %rax,%rdi
    55e1:	e8 de 14 00 00       	call   6ac4 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>
    55e6:	48 89 c2             	mov    %rax,%rdx
    55e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ed:	48 89 d6             	mov    %rdx,%rsi
    55f0:	48 89 c7             	mov    %rax,%rdi
    55f3:	e8 68 14 00 00       	call   6a60 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    55f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55fc:	48 89 c7             	mov    %rax,%rdi
    55ff:	e8 f8 14 00 00       	call   6afc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    5604:	48 89 c7             	mov    %rax,%rdi
    5607:	e8 0a 15 00 00       	call   6b16 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>
    560c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5610:	48 89 c7             	mov    %rax,%rdi
    5613:	e8 e4 14 00 00       	call   6afc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    561c:	c9                   	leave
    561d:	c3                   	ret

000000000000561e <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    561e:	55                   	push   %rbp
    561f:	48 89 e5             	mov    %rsp,%rbp
    5622:	48 83 ec 10          	sub    $0x10,%rsp
    5626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    562a:	e8 3f e2 ff ff       	call   386e <_ZSt23__is_constant_evaluatedv>
    562f:	84 c0                	test   %al,%al
    5631:	74 18                	je     564b <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x2d>
    5633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5637:	48 89 c7             	mov    %rax,%rdi
    563a:	e8 e5 14 00 00       	call   6b24 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
    563f:	48 85 c0             	test   %rax,%rax
    5642:	75 07                	jne    564b <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x2d>
    5644:	b8 01 00 00 00       	mov    $0x1,%eax
    5649:	eb 05                	jmp    5650 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x32>
    564b:	b8 00 00 00 00       	mov    $0x0,%eax
    5650:	84 c0                	test   %al,%al
	return *get();
    5652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5656:	48 89 c7             	mov    %rax,%rdi
    5659:	e8 c6 14 00 00       	call   6b24 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    565e:	c9                   	leave
    565f:	c3                   	ret

0000000000005660 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5660:	55                   	push   %rbp
    5661:	48 89 e5             	mov    %rsp,%rbp
    5664:	41 54                	push   %r12
    5666:	53                   	push   %rbx
    5667:	48 83 ec 20          	sub    $0x20,%rsp
    566b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    566f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5673:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5677:	bf 70 00 00 00       	mov    $0x70,%edi
    567c:	e8 3f dc ff ff       	call   32c0 <_Znwm@plt>
    5681:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5685:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    568b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    568f:	48 89 c7             	mov    %rax,%rdi
    5692:	e8 a7 14 00 00       	call   6b3e <_ZSt7forwardIRN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    5697:	48 89 c3             	mov    %rax,%rbx
    569a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    569e:	48 89 c7             	mov    %rax,%rdi
    56a1:	e8 60 13 00 00       	call   6a06 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    56a6:	48 89 da             	mov    %rbx,%rdx
    56a9:	48 89 c6             	mov    %rax,%rsi
    56ac:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    56b0:	e8 53 e2 ff ff       	call   3908 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE>
    56b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56b9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    56bd:	48 89 c7             	mov    %rax,%rdi
    56c0:	e8 ad 14 00 00       	call   6b72 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    56c5:	eb 21                	jmp    56e8 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x88>
    56c7:	48 89 c3             	mov    %rax,%rbx
    56ca:	45 84 e4             	test   %r12b,%r12b
    56cd:	74 0e                	je     56dd <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x7d>
    56cf:	be 70 00 00 00       	mov    $0x70,%esi
    56d4:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    56d8:	e8 f3 db ff ff       	call   32d0 <_ZdlPvm@plt>
    56dd:	48 89 d8             	mov    %rbx,%rax
    56e0:	48 89 c7             	mov    %rax,%rdi
    56e3:	e8 e8 dd ff ff       	call   34d0 <_Unwind_Resume@plt>
    56e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56ec:	48 83 c4 20          	add    $0x20,%rsp
    56f0:	5b                   	pop    %rbx
    56f1:	41 5c                	pop    %r12
    56f3:	5d                   	pop    %rbp
    56f4:	c3                   	ret
    56f5:	90                   	nop

00000000000056f6 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    56f6:	55                   	push   %rbp
    56f7:	48 89 e5             	mov    %rsp,%rbp
    56fa:	48 83 ec 10          	sub    $0x10,%rsp
    56fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5702:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5706:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    570a:	48 89 c7             	mov    %rax,%rdi
    570d:	e8 ea 14 00 00       	call   6bfc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>
    5712:	48 89 c2             	mov    %rax,%rdx
    5715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5719:	48 89 d6             	mov    %rdx,%rsi
    571c:	48 89 c7             	mov    %rax,%rdi
    571f:	e8 74 14 00 00       	call   6b98 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5724:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5728:	48 89 c7             	mov    %rax,%rdi
    572b:	e8 04 15 00 00       	call   6c34 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    5730:	48 89 c7             	mov    %rax,%rdi
    5733:	e8 16 15 00 00       	call   6c4e <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    573c:	48 89 c7             	mov    %rax,%rdi
    573f:	e8 f0 14 00 00       	call   6c34 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5748:	c9                   	leave
    5749:	c3                   	ret

000000000000574a <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    574a:	55                   	push   %rbp
    574b:	48 89 e5             	mov    %rsp,%rbp
    574e:	48 83 ec 10          	sub    $0x10,%rsp
    5752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    5756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    575a:	48 89 c7             	mov    %rax,%rdi
    575d:	e8 c2 13 00 00       	call   6b24 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    5762:	c9                   	leave
    5763:	c3                   	ret

0000000000005764 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    5764:	55                   	push   %rbp
    5765:	48 89 e5             	mov    %rsp,%rbp
    5768:	48 83 ec 10          	sub    $0x10,%rsp
    576c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    5770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5774:	48 89 c7             	mov    %rax,%rdi
    5777:	e8 e0 14 00 00       	call   6c5c <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>
      }
    577c:	c9                   	leave
    577d:	c3                   	ret

000000000000577e <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>:
	function(_Functor&& __f)
    577e:	55                   	push   %rbp
    577f:	48 89 e5             	mov    %rsp,%rbp
    5782:	48 83 ec 10          	sub    $0x10,%rsp
    5786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    578a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    578e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5792:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5796:	0f 11 00             	movups %xmm0,(%rax)
    5799:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    579e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57a2:	48 89 c7             	mov    %rax,%rdi
    57a5:	e8 14 f4 ff ff       	call   4bbe <_ZNSt14_Function_baseC1Ev>
    57aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ae:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    57b5:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    57b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57ba:	48 89 c7             	mov    %rax,%rdi
    57bd:	e8 b4 14 00 00       	call   6c76 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>
    57c2:	84 c0                	test   %al,%al
    57c4:	74 3c                	je     5802 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    57c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57ca:	48 89 c7             	mov    %rax,%rdi
    57cd:	e8 b3 14 00 00       	call   6c85 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    57d2:	48 89 c2             	mov    %rax,%rdx
    57d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57d9:	48 89 d6             	mov    %rdx,%rsi
    57dc:	48 89 c7             	mov    %rax,%rdi
    57df:	e8 af 14 00 00       	call   6c93 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    57e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57e8:	48 8d 15 d5 14 00 00 	lea    0x14d5(%rip),%rdx        # 6cc4 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>
    57ef:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    57f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57f7:	48 8d 15 e9 14 00 00 	lea    0x14e9(%rip),%rdx        # 6ce7 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    57fe:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5802:	90                   	nop
    5803:	c9                   	leave
    5804:	c3                   	ret

0000000000005805 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5805:	55                   	push   %rbp
    5806:	48 89 e5             	mov    %rsp,%rbp
    5809:	41 54                	push   %r12
    580b:	53                   	push   %rbx
    580c:	48 83 ec 10          	sub    $0x10,%rsp
    5810:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5814:	bf 18 00 00 00       	mov    $0x18,%edi
    5819:	e8 a2 da ff ff       	call   32c0 <_Znwm@plt>
    581e:	48 89 c6             	mov    %rax,%rsi
    5821:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5827:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    582b:	48 89 f7             	mov    %rsi,%rdi
    582e:	e8 45 ed ff ff       	call   4578 <_ZN4neko6EngineC1Ev>
    5833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5837:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    583b:	48 89 c7             	mov    %rax,%rdi
    583e:	e8 45 15 00 00       	call   6d88 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5843:	eb 21                	jmp    5866 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x61>
    5845:	48 89 c3             	mov    %rax,%rbx
    5848:	45 84 e4             	test   %r12b,%r12b
    584b:	74 0e                	je     585b <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x56>
    584d:	be 18 00 00 00       	mov    $0x18,%esi
    5852:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5856:	e8 75 da ff ff       	call   32d0 <_ZdlPvm@plt>
    585b:	48 89 d8             	mov    %rbx,%rax
    585e:	48 89 c7             	mov    %rax,%rdi
    5861:	e8 6a dc ff ff       	call   34d0 <_Unwind_Resume@plt>
    5866:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    586a:	48 83 c4 10          	add    $0x10,%rsp
    586e:	5b                   	pop    %rbx
    586f:	41 5c                	pop    %r12
    5871:	5d                   	pop    %rbp
    5872:	c3                   	ret
    5873:	90                   	nop

0000000000005874 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    5874:	55                   	push   %rbp
    5875:	48 89 e5             	mov    %rsp,%rbp
    5878:	53                   	push   %rbx
    5879:	48 83 ec 28          	sub    $0x28,%rsp
    587d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5881:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5885:	48 89 c7             	mov    %rax,%rdi
    5888:	e8 21 15 00 00       	call   6dae <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    588d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    5891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5895:	48 8b 00             	mov    (%rax),%rax
    5898:	48 85 c0             	test   %rax,%rax
    589b:	74 29                	je     58c6 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    589d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58a1:	48 89 c7             	mov    %rax,%rdi
    58a4:	e8 1f 15 00 00       	call   6dc8 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>
    58a9:	48 89 c3             	mov    %rax,%rbx
    58ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58b0:	48 89 c7             	mov    %rax,%rdi
    58b3:	e8 2a 15 00 00       	call   6de2 <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>
    58b8:	48 8b 00             	mov    (%rax),%rax
    58bb:	48 89 c6             	mov    %rax,%rsi
    58be:	48 89 df             	mov    %rbx,%rdi
    58c1:	e8 66 15 00 00       	call   6e2c <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>
	__ptr = pointer();
    58c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    58d1:	90                   	nop
    58d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    58d6:	c9                   	leave
    58d7:	c3                   	ret

00000000000058d8 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    58d8:	55                   	push   %rbp
    58d9:	48 89 e5             	mov    %rsp,%rbp
    58dc:	48 83 ec 20          	sub    $0x20,%rsp
    58e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    58e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    58e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58ec:	48 89 c7             	mov    %rax,%rdi
    58ef:	e8 6e 15 00 00       	call   6e62 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    58f4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    58f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58fc:	48 89 c7             	mov    %rax,%rdi
    58ff:	e8 5e 15 00 00       	call   6e62 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    5904:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5908:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    590c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5910:	48 89 d6             	mov    %rdx,%rsi
    5913:	48 89 c7             	mov    %rax,%rdi
    5916:	e8 58 15 00 00       	call   6e73 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    591b:	c9                   	leave
    591c:	c3                   	ret

000000000000591d <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    591d:	55                   	push   %rbp
    591e:	48 89 e5             	mov    %rsp,%rbp
    5921:	48 83 ec 10          	sub    $0x10,%rsp
    5925:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    5929:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    592d:	48 89 c7             	mov    %rax,%rdi
    5930:	e8 a7 15 00 00       	call   6edc <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    5935:	c9                   	leave
    5936:	c3                   	ret
    5937:	90                   	nop

0000000000005938 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    5938:	55                   	push   %rbp
    5939:	48 89 e5             	mov    %rsp,%rbp
    593c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    5940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5944:	48 8b 00             	mov    (%rax),%rax
    5947:	5d                   	pop    %rbp
    5948:	c3                   	ret
    5949:	90                   	nop

000000000000594a <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    594a:	55                   	push   %rbp
    594b:	48 89 e5             	mov    %rsp,%rbp
    594e:	48 83 ec 10          	sub    $0x10,%rsp
    5952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    5956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    595a:	48 89 c7             	mov    %rax,%rdi
    595d:	e8 d4 15 00 00       	call   6f36 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>
      }
    5962:	c9                   	leave
    5963:	c3                   	ret

0000000000005964 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    5964:	55                   	push   %rbp
    5965:	48 89 e5             	mov    %rsp,%rbp
    5968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    596c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    5970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5974:	0f b6 10             	movzbl (%rax),%edx
    5977:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    597b:	0f b6 00             	movzbl (%rax),%eax
    597e:	38 c2                	cmp    %al,%dl
    5980:	0f 94 c0             	sete   %al
    5983:	5d                   	pop    %rbp
    5984:	c3                   	ret
    5985:	90                   	nop

0000000000005986 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    5986:	55                   	push   %rbp
    5987:	48 89 e5             	mov    %rsp,%rbp
    598a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    598e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5996:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    599a:	48 89 10             	mov    %rdx,(%rax)
    599d:	90                   	nop
    599e:	5d                   	pop    %rbp
    599f:	c3                   	ret

00000000000059a0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    59a0:	55                   	push   %rbp
    59a1:	48 89 e5             	mov    %rsp,%rbp
    59a4:	48 83 ec 10          	sub    $0x10,%rsp
    59a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59b0:	48 8b 00             	mov    (%rax),%rax
    59b3:	48 85 c0             	test   %rax,%rax
    59b6:	74 0f                	je     59c7 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    59b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59bc:	48 8b 00             	mov    (%rax),%rax
    59bf:	48 89 c7             	mov    %rax,%rdi
    59c2:	e8 d9 d9 ff ff       	call   33a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    59c7:	90                   	nop
    59c8:	c9                   	leave
    59c9:	c3                   	ret

00000000000059ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    59ca:	55                   	push   %rbp
    59cb:	48 89 e5             	mov    %rsp,%rbp
    59ce:	48 83 ec 40          	sub    $0x40,%rsp
    59d2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    59d6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    59da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    59de:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    59e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59e6:	48 89 d6             	mov    %rdx,%rsi
    59e9:	48 89 c7             	mov    %rax,%rdi
    59ec:	e8 5f 15 00 00       	call   6f50 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    59f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    59f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59f9:	48 83 f8 0f          	cmp    $0xf,%rax
    59fd:	76 3f                	jbe    5a3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    59ff:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    5a03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a07:	ba 00 00 00 00       	mov    $0x0,%edx
    5a0c:	48 89 ce             	mov    %rcx,%rsi
    5a0f:	48 89 c7             	mov    %rax,%rdi
    5a12:	e8 d9 da ff ff       	call   34f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5a17:	48 89 c2             	mov    %rax,%rdx
    5a1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a1e:	48 89 d6             	mov    %rdx,%rsi
    5a21:	48 89 c7             	mov    %rax,%rdi
    5a24:	e8 17 d8 ff ff       	call   3240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    5a29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a31:	48 89 d6             	mov    %rdx,%rsi
    5a34:	48 89 c7             	mov    %rax,%rdi
    5a37:	e8 e4 da ff ff       	call   3520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    5a3c:	eb 15                	jmp    5a53 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    5a3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    5a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a4a:	48 89 c7             	mov    %rax,%rdi
    5a4d:	e8 ce d7 ff ff       	call   3220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    5a52:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    5a53:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5a57:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5a5b:	48 89 d6             	mov    %rdx,%rsi
    5a5e:	48 89 c7             	mov    %rax,%rdi
    5a61:	e8 20 ff ff ff       	call   5986 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    5a66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a6a:	48 89 c7             	mov    %rax,%rdi
    5a6d:	e8 de d8 ff ff       	call   3350 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    5a72:	48 89 c1             	mov    %rax,%rcx
    5a75:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5a79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5a7d:	48 89 c6             	mov    %rax,%rsi
    5a80:	48 89 cf             	mov    %rcx,%rdi
    5a83:	e8 d8 d8 ff ff       	call   3360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    5a88:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5a8f:	00 

	_M_set_length(__dnew);
    5a90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a98:	48 89 d6             	mov    %rdx,%rsi
    5a9b:	48 89 c7             	mov    %rax,%rdi
    5a9e:	e8 dd d6 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    5aa3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5aa7:	48 89 c7             	mov    %rax,%rdi
    5aaa:	e8 f1 fe ff ff       	call   59a0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    5aaf:	c9                   	leave
    5ab0:	c3                   	ret

0000000000005ab1 <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    5ab1:	55                   	push   %rbp
    5ab2:	48 89 e5             	mov    %rsp,%rbp
    5ab5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5abd:	5d                   	pop    %rbp
    5abe:	c3                   	ret
    5abf:	90                   	nop

0000000000005ac0 <_ZNSaISt6threadEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5ac0:	55                   	push   %rbp
    5ac1:	48 89 e5             	mov    %rsp,%rbp
    5ac4:	48 83 ec 10          	sub    $0x10,%rsp
    5ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad0:	48 89 c7             	mov    %rax,%rdi
    5ad3:	e8 aa 14 00 00       	call   6f82 <_ZNSt15__new_allocatorISt6threadEC1Ev>
    5ad8:	90                   	nop
    5ad9:	c9                   	leave
    5ada:	c3                   	ret
    5adb:	90                   	nop

0000000000005adc <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5adc:	55                   	push   %rbp
    5add:	48 89 e5             	mov    %rsp,%rbp
    5ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ae8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5af3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5afa:	00 
    5afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aff:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5b06:	00 
	{ }
    5b07:	90                   	nop
    5b08:	5d                   	pop    %rbp
    5b09:	c3                   	ret

0000000000005b0a <_ZNSt15__new_allocatorISt6threadED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5b0a:	55                   	push   %rbp
    5b0b:	48 89 e5             	mov    %rsp,%rbp
    5b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b12:	90                   	nop
    5b13:	5d                   	pop    %rbp
    5b14:	c3                   	ret
    5b15:	90                   	nop

0000000000005b16 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5b16:	55                   	push   %rbp
    5b17:	48 89 e5             	mov    %rsp,%rbp
    5b1a:	48 83 ec 20          	sub    $0x20,%rsp
    5b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5b2a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5b2f:	74 17                	je     5b48 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5b31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b35:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b39:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5b3d:	48 89 ce             	mov    %rcx,%rsi
    5b40:	48 89 c7             	mov    %rax,%rdi
    5b43:	e8 45 14 00 00       	call   6f8d <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>
      }
    5b48:	90                   	nop
    5b49:	c9                   	leave
    5b4a:	c3                   	ret
    5b4b:	90                   	nop

0000000000005b4c <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5b4c:	55                   	push   %rbp
    5b4d:	48 89 e5             	mov    %rsp,%rbp
    5b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b58:	5d                   	pop    %rbp
    5b59:	c3                   	ret

0000000000005b5a <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5b5a:	55                   	push   %rbp
    5b5b:	48 89 e5             	mov    %rsp,%rbp
    5b5e:	48 83 ec 20          	sub    $0x20,%rsp
    5b62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5b6e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b76:	48 89 d6             	mov    %rdx,%rsi
    5b79:	48 89 c7             	mov    %rax,%rdi
    5b7c:	e8 3a 14 00 00       	call   6fbb <_ZSt8_DestroyIPSt6threadEvT_S2_>
    }
    5b81:	90                   	nop
    5b82:	c9                   	leave
    5b83:	c3                   	ret

0000000000005b84 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>:
      struct _Deque_impl
    5b84:	55                   	push   %rbp
    5b85:	48 89 e5             	mov    %rsp,%rbp
    5b88:	48 83 ec 10          	sub    $0x10,%rsp
    5b8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b94:	48 89 c7             	mov    %rax,%rdi
    5b97:	e8 6e 14 00 00       	call   700a <_ZNSaISt8functionIFvvEEED1Ev>
    5b9c:	90                   	nop
    5b9d:	c9                   	leave
    5b9e:	c3                   	ret
    5b9f:	90                   	nop

0000000000005ba0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>:
      _Deque_base()
    5ba0:	55                   	push   %rbp
    5ba1:	48 89 e5             	mov    %rsp,%rbp
    5ba4:	53                   	push   %rbx
    5ba5:	48 83 ec 18          	sub    $0x18,%rsp
    5ba9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      : _M_impl()
    5bad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5bb1:	48 89 c7             	mov    %rax,%rdi
    5bb4:	e8 29 14 00 00       	call   6fe2 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>
      { _M_initialize_map(0); }
    5bb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5bbd:	be 00 00 00 00       	mov    $0x0,%esi
    5bc2:	48 89 c7             	mov    %rax,%rdi
    5bc5:	e8 5c 14 00 00       	call   7026 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>
    5bca:	eb 1a                	jmp    5be6 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev+0x46>
    5bcc:	48 89 c3             	mov    %rax,%rbx
    5bcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5bd3:	48 89 c7             	mov    %rax,%rdi
    5bd6:	e8 a9 ff ff ff       	call   5b84 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    5bdb:	48 89 d8             	mov    %rbx,%rax
    5bde:	48 89 c7             	mov    %rax,%rdi
    5be1:	e8 ea d8 ff ff       	call   34d0 <_Unwind_Resume@plt>
    5be6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5bea:	c9                   	leave
    5beb:	c3                   	ret

0000000000005bec <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>:
    _Deque_base<_Tp, _Alloc>::
    5bec:	55                   	push   %rbp
    5bed:	48 89 e5             	mov    %rsp,%rbp
    5bf0:	48 83 ec 10          	sub    $0x10,%rsp
    5bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (this->_M_impl._M_map)
    5bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bfc:	48 8b 00             	mov    (%rax),%rax
    5bff:	48 85 c0             	test   %rax,%rax
    5c02:	74 41                	je     5c45 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev+0x59>
			   this->_M_impl._M_finish._M_node + 1);
    5c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c08:	48 8b 40 48          	mov    0x48(%rax),%rax
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
    5c0c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c14:	48 8b 48 28          	mov    0x28(%rax),%rcx
    5c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c1c:	48 89 ce             	mov    %rcx,%rsi
    5c1f:	48 89 c7             	mov    %rax,%rdi
    5c22:	e8 a7 15 00 00       	call   71ce <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    5c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c2b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c33:	48 8b 08             	mov    (%rax),%rcx
    5c36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c3a:	48 89 ce             	mov    %rcx,%rsi
    5c3d:	48 89 c7             	mov    %rax,%rdi
    5c40:	e8 d1 15 00 00       	call   7216 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
    }
    5c45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c49:	48 89 c7             	mov    %rax,%rdi
    5c4c:	e8 33 ff ff ff       	call   5b84 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    5c51:	90                   	nop
    5c52:	c9                   	leave
    5c53:	c3                   	ret

0000000000005c54 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>:
       *  Returns a read/write iterator that points to the first element in the
       *  %deque.  Iteration is done in ordinary element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      begin() _GLIBCXX_NOEXCEPT
    5c54:	55                   	push   %rbp
    5c55:	48 89 e5             	mov    %rsp,%rbp
    5c58:	48 83 ec 10          	sub    $0x10,%rsp
    5c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_start; }
    5c64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c68:	48 8d 50 10          	lea    0x10(%rax),%rdx
    5c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c70:	48 89 d6             	mov    %rdx,%rsi
    5c73:	48 89 c7             	mov    %rax,%rdi
    5c76:	e8 e7 15 00 00       	call   7262 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c7f:	c9                   	leave
    5c80:	c3                   	ret
    5c81:	90                   	nop

0000000000005c82 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>:
       *  element in the %deque.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      end() _GLIBCXX_NOEXCEPT
    5c82:	55                   	push   %rbp
    5c83:	48 89 e5             	mov    %rsp,%rbp
    5c86:	48 83 ec 10          	sub    $0x10,%rsp
    5c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_finish; }
    5c92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c96:	48 8d 50 30          	lea    0x30(%rax),%rdx
    5c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c9e:	48 89 d6             	mov    %rdx,%rsi
    5ca1:	48 89 c7             	mov    %rax,%rdi
    5ca4:	e8 b9 15 00 00       	call   7262 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5ca9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cad:	c9                   	leave
    5cae:	c3                   	ret
    5caf:	90                   	nop

0000000000005cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5cb0:	55                   	push   %rbp
    5cb1:	48 89 e5             	mov    %rsp,%rbp
    5cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cbc:	5d                   	pop    %rbp
    5cbd:	c3                   	ret

0000000000005cbe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>:
	void
	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
	{ _M_destroy_data_aux(__first, __last); }

      void
      _M_destroy_data(iterator __first, iterator __last,
    5cbe:	55                   	push   %rbp
    5cbf:	48 89 e5             	mov    %rsp,%rbp
    5cc2:	48 83 ec 60          	sub    $0x60,%rsp
    5cc6:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5cca:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5cce:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    5cd2:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
		      const std::allocator<_Tp>&)
      {
	if (!__has_trivial_destructor(value_type))
	  _M_destroy_data_aux(__first, __last);
    5cd6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    5cda:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5cde:	48 89 d6             	mov    %rdx,%rsi
    5ce1:	48 89 c7             	mov    %rax,%rdi
    5ce4:	e8 79 15 00 00       	call   7262 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5ce9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5ced:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5cf1:	48 89 d6             	mov    %rdx,%rsi
    5cf4:	48 89 c7             	mov    %rax,%rdi
    5cf7:	e8 66 15 00 00       	call   7262 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5cfc:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5d00:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    5d04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5d08:	48 89 ce             	mov    %rcx,%rsi
    5d0b:	48 89 c7             	mov    %rax,%rdi
    5d0e:	e8 9d 15 00 00       	call   72b0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>
      }
    5d13:	90                   	nop
    5d14:	c9                   	leave
    5d15:	c3                   	ret

0000000000005d16 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    5d16:	55                   	push   %rbp
    5d17:	48 89 e5             	mov    %rsp,%rbp
    5d1a:	48 83 ec 10          	sub    $0x10,%rsp
    5d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d26:	48 89 c7             	mov    %rax,%rdi
    5d29:	e8 92 16 00 00       	call   73c0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    5d2e:	90                   	nop
    5d2f:	c9                   	leave
    5d30:	c3                   	ret
    5d31:	90                   	nop

0000000000005d32 <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>:
      _Rb_tree_key_compare()
    5d32:	55                   	push   %rbp
    5d33:	48 89 e5             	mov    %rsp,%rbp
    5d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    5d3a:	90                   	nop
    5d3b:	5d                   	pop    %rbp
    5d3c:	c3                   	ret
    5d3d:	90                   	nop

0000000000005d3e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    5d3e:	55                   	push   %rbp
    5d3f:	48 89 e5             	mov    %rsp,%rbp
    5d42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d46:	90                   	nop
    5d47:	5d                   	pop    %rbp
    5d48:	c3                   	ret
    5d49:	90                   	nop

0000000000005d4a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5d4a:	55                   	push   %rbp
    5d4b:	48 89 e5             	mov    %rsp,%rbp
    5d4e:	48 83 ec 20          	sub    $0x20,%rsp
    5d52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    5d5a:	eb 49                	jmp    5da5 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    5d5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5d60:	48 89 c7             	mov    %rax,%rdi
    5d63:	e8 63 16 00 00       	call   73cb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    5d68:	48 89 c2             	mov    %rax,%rdx
    5d6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d6f:	48 89 d6             	mov    %rdx,%rsi
    5d72:	48 89 c7             	mov    %rax,%rdi
    5d75:	e8 d0 ff ff ff       	call   5d4a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
	  _Link_type __y = _S_left(__x);
    5d7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5d7e:	48 89 c7             	mov    %rax,%rdi
    5d81:	e8 57 16 00 00       	call   73dd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    5d86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    5d8a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5d8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d92:	48 89 d6             	mov    %rdx,%rsi
    5d95:	48 89 c7             	mov    %rax,%rdi
    5d98:	e8 53 16 00 00       	call   73f0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	  __x = __y;
    5d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    5da5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5daa:	75 b0                	jne    5d5c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x12>
	}
    }
    5dac:	90                   	nop
    5dad:	90                   	nop
    5dae:	c9                   	leave
    5daf:	c3                   	ret

0000000000005db0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    5db0:	55                   	push   %rbp
    5db1:	48 89 e5             	mov    %rsp,%rbp
    5db4:	48 83 ec 10          	sub    $0x10,%rsp
    5db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    5dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc0:	48 89 c7             	mov    %rax,%rdi
    5dc3:	e8 62 16 00 00       	call   742a <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>
    5dc8:	c9                   	leave
    5dc9:	c3                   	ret

0000000000005dca <_ZSt11__addressofISt5mutexEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5dca:	55                   	push   %rbp
    5dcb:	48 89 e5             	mov    %rsp,%rbp
    5dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dd6:	5d                   	pop    %rbp
    5dd7:	c3                   	ret

0000000000005dd8 <_ZNSt11unique_lockISt5mutexE4lockEv>:

	return *this;
      }

      void
      lock()
    5dd8:	55                   	push   %rbp
    5dd9:	48 89 e5             	mov    %rsp,%rbp
    5ddc:	48 83 ec 10          	sub    $0x10,%rsp
    5de0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_device)
    5de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5de8:	48 8b 00             	mov    (%rax),%rax
    5deb:	48 85 c0             	test   %rax,%rax
    5dee:	75 0a                	jne    5dfa <_ZNSt11unique_lockISt5mutexE4lockEv+0x22>
	  __throw_system_error(int(errc::operation_not_permitted));
    5df0:	bf 01 00 00 00       	mov    $0x1,%edi
    5df5:	e8 76 d3 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else if (_M_owns)
    5dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dfe:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    5e02:	84 c0                	test   %al,%al
    5e04:	74 0a                	je     5e10 <_ZNSt11unique_lockISt5mutexE4lockEv+0x38>
	  __throw_system_error(int(errc::resource_deadlock_would_occur));
    5e06:	bf 23 00 00 00       	mov    $0x23,%edi
    5e0b:	e8 60 d3 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else
	  {
	    _M_device->lock();
    5e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e14:	48 8b 00             	mov    (%rax),%rax
    5e17:	48 89 c7             	mov    %rax,%rdi
    5e1a:	e8 8d dc ff ff       	call   3aac <_ZNSt5mutex4lockEv>
	    _M_owns = true;
    5e1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e23:	c6 40 08 01          	movb   $0x1,0x8(%rax)
	  }
      }
    5e27:	90                   	nop
    5e28:	c9                   	leave
    5e29:	c3                   	ret

0000000000005e2a <_ZNSt11unique_lockISt5mutexE6unlockEv>:
	      return _M_owns;
	    }
	 }

      void
      unlock()
    5e2a:	55                   	push   %rbp
    5e2b:	48 89 e5             	mov    %rsp,%rbp
    5e2e:	48 83 ec 10          	sub    $0x10,%rsp
    5e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_owns)
    5e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e3a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    5e3e:	83 f0 01             	xor    $0x1,%eax
    5e41:	84 c0                	test   %al,%al
    5e43:	74 0a                	je     5e4f <_ZNSt11unique_lockISt5mutexE6unlockEv+0x25>
	  __throw_system_error(int(errc::operation_not_permitted));
    5e45:	bf 01 00 00 00       	mov    $0x1,%edi
    5e4a:	e8 21 d3 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else if (_M_device)
    5e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e53:	48 8b 00             	mov    (%rax),%rax
    5e56:	48 85 c0             	test   %rax,%rax
    5e59:	74 17                	je     5e72 <_ZNSt11unique_lockISt5mutexE6unlockEv+0x48>
	  {
	    _M_device->unlock();
    5e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e5f:	48 8b 00             	mov    (%rax),%rax
    5e62:	48 89 c7             	mov    %rax,%rdi
    5e65:	e8 70 dc ff ff       	call   3ada <_ZNSt5mutex6unlockEv>
	    _M_owns = false;
    5e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e6e:	c6 40 08 00          	movb   $0x0,0x8(%rax)
	  }
      }
    5e72:	90                   	nop
    5e73:	c9                   	leave
    5e74:	c3                   	ret
    5e75:	90                   	nop

0000000000005e76 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>:
      push_back(const value_type& __x)
    5e76:	55                   	push   %rbp
    5e77:	48 89 e5             	mov    %rsp,%rbp
    5e7a:	48 83 ec 10          	sub    $0x10,%rsp
    5e7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish._M_cur
    5e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e8a:	48 8b 50 30          	mov    0x30(%rax),%rdx
	    != this->_M_impl._M_finish._M_last - 1)
    5e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e92:	48 8b 40 40          	mov    0x40(%rax),%rax
    5e96:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_finish._M_cur
    5e9a:	48 39 c2             	cmp    %rax,%rdx
    5e9d:	74 31                	je     5ed0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x5a>
	    _Alloc_traits::construct(this->_M_impl,
    5e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ea3:	48 8b 48 30          	mov    0x30(%rax),%rcx
    5ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5eaf:	48 89 ce             	mov    %rcx,%rsi
    5eb2:	48 89 c7             	mov    %rax,%rdi
    5eb5:	e8 9c 15 00 00       	call   7456 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish._M_cur;
    5eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebe:	48 8b 40 30          	mov    0x30(%rax),%rax
    5ec2:	48 8d 50 20          	lea    0x20(%rax),%rdx
    5ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eca:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    5ece:	eb 13                	jmp    5ee3 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x6d>
	  _M_push_back_aux(__x);
    5ed0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed8:	48 89 d6             	mov    %rdx,%rsi
    5edb:	48 89 c7             	mov    %rax,%rdi
    5ede:	e8 ad 15 00 00       	call   7490 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>
      }
    5ee3:	90                   	nop
    5ee4:	c9                   	leave
    5ee5:	c3                   	ret

0000000000005ee6 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    5ee6:	55                   	push   %rbp
    5ee7:	48 89 e5             	mov    %rsp,%rbp
    5eea:	48 83 ec 10          	sub    $0x10,%rsp
    5eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish == this->_M_impl._M_start; }
    5ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef6:	48 8d 50 10          	lea    0x10(%rax),%rdx
    5efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5efe:	48 83 c0 30          	add    $0x30,%rax
    5f02:	48 89 d6             	mov    %rdx,%rsi
    5f05:	48 89 c7             	mov    %rax,%rdi
    5f08:	e8 8f 16 00 00       	call   759c <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    5f0d:	c9                   	leave
    5f0e:	c3                   	ret
    5f0f:	90                   	nop

0000000000005f10 <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5f10:	55                   	push   %rbp
    5f11:	48 89 e5             	mov    %rsp,%rbp
    5f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5f1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f20:	48 8b 10             	mov    (%rax),%rdx
    5f23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f27:	48 89 10             	mov    %rdx,(%rax)
    5f2a:	90                   	nop
    5f2b:	5d                   	pop    %rbp
    5f2c:	c3                   	ret
    5f2d:	90                   	nop

0000000000005f2e <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5f2e:	55                   	push   %rbp
    5f2f:	48 89 e5             	mov    %rsp,%rbp
    5f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f3a:	5d                   	pop    %rbp
    5f3b:	c3                   	ret

0000000000005f3c <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>:

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      _GLIBCXX20_CONSTEXPR
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    5f3c:	55                   	push   %rbp
    5f3d:	48 89 e5             	mov    %rsp,%rbp
    5f40:	48 83 ec 20          	sub    $0x20,%rsp
    5f44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f48:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
    5f4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f50:	48 8b 40 08          	mov    0x8(%rax),%rax
    5f54:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    5f58:	48 c1 f8 03          	sar    $0x3,%rax
    5f5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5f60:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5f65:	74 32                	je     5f99 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
    5f67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f6b:	48 89 c7             	mov    %rax,%rdi
    5f6e:	e8 d9 fb ff ff       	call   5b4c <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    5f73:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    5f76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f7a:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5f7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f82:	48 89 ce             	mov    %rcx,%rsi
    5f85:	48 89 c7             	mov    %rax,%rdi
    5f88:	e8 cd fb ff ff       	call   5b5a <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    5f8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f91:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5f95:	48 89 50 08          	mov    %rdx,0x8(%rax)
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
    5f99:	90                   	nop
    5f9a:	c9                   	leave
    5f9b:	c3                   	ret

0000000000005f9c <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    5f9c:	55                   	push   %rbp
    5f9d:	48 89 e5             	mov    %rsp,%rbp
    5fa0:	53                   	push   %rbx
    5fa1:	48 83 ec 38          	sub    $0x38,%rsp
    5fa5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    5fa9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    5fad:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    5fb2:	0f 84 e7 01 00 00    	je     619f <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    5fb8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5fbc:	48 89 c7             	mov    %rax,%rdi
    5fbf:	e8 36 eb ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    5fc4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    5fc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5fcc:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    5fd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5fd4:	48 8b 40 08          	mov    0x8(%rax),%rax
    5fd8:	48 29 c2             	sub    %rax,%rdx
    5fdb:	48 89 d0             	mov    %rdx,%rax
    5fde:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    5fe2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    5fe6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5fea:	48 89 c7             	mov    %rax,%rdi
    5fed:	e8 cc 15 00 00       	call   75be <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    5ff2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    5ff6:	72 16                	jb     600e <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x72>
    5ff8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5ffc:	48 89 c7             	mov    %rax,%rdi
    5fff:	e8 ba 15 00 00       	call   75be <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    6004:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6008:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    600c:	73 07                	jae    6015 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x79>
    600e:	b8 01 00 00 00       	mov    $0x1,%eax
    6013:	eb 05                	jmp    601a <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x7e>
    6015:	b8 00 00 00 00       	mov    $0x0,%eax
    601a:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    601c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6020:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    6024:	72 33                	jb     6059 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    6026:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    602a:	48 89 c7             	mov    %rax,%rdi
    602d:	e8 1a fb ff ff       	call   5b4c <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    6032:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    6035:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6039:	48 8b 40 08          	mov    0x8(%rax),%rax
    603d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    6041:	48 89 ce             	mov    %rcx,%rsi
    6044:	48 89 c7             	mov    %rax,%rdi
    6047:	e8 94 15 00 00       	call   75e0 <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    604c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6050:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    6054:	e9 46 01 00 00       	jmp    619f <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    6059:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    605d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6061:	48 8d 15 79 b6 00 00 	lea    0xb679(%rip),%rdx        # 116e1 <_ZN6__pstl9execution2v1L5unseqE+0x76>
    6068:	48 89 ce             	mov    %rcx,%rsi
    606b:	48 89 c7             	mov    %rax,%rdi
    606e:	e8 97 15 00 00       	call   760a <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>
    6073:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    6077:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    607b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    607f:	48 89 d6             	mov    %rdx,%rsi
    6082:	48 89 c7             	mov    %rax,%rdi
    6085:	e8 48 16 00 00       	call   76d2 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>
    608a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    608e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6092:	48 89 c7             	mov    %rax,%rdi
    6095:	e8 b2 fa ff ff       	call   5b4c <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    609a:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    609d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60a1:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    60a8:	00 
    60a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    60ad:	48 01 c1             	add    %rax,%rcx
    60b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    60b4:	48 89 c6             	mov    %rax,%rsi
    60b7:	48 89 cf             	mov    %rcx,%rdi
    60ba:	e8 21 15 00 00       	call   75e0 <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    60bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60c3:	48 89 c7             	mov    %rax,%rdi
    60c6:	e8 81 fa ff ff       	call   5b4c <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    60cb:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    60ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60d2:	48 8b 70 08          	mov    0x8(%rax),%rsi
    60d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60da:	48 8b 00             	mov    (%rax),%rax
    60dd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    60e1:	48 89 c7             	mov    %rax,%rdi
    60e4:	e8 1c 16 00 00       	call   7705 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    60e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    60ed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    60f1:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    60f5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    60f9:	48 8b 12             	mov    (%rdx),%rdx
    60fc:	48 29 d1             	sub    %rdx,%rcx
    60ff:	48 c1 f9 03          	sar    $0x3,%rcx
    6103:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    6106:	48 89 d6             	mov    %rdx,%rsi
    6109:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    610d:	48 8b 0a             	mov    (%rdx),%rcx
    6110:	48 89 f2             	mov    %rsi,%rdx
    6113:	48 89 ce             	mov    %rcx,%rsi
    6116:	48 89 c7             	mov    %rax,%rdi
    6119:	e8 f8 f9 ff ff       	call   5b16 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    611e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6122:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6126:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    6129:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    612d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6131:	48 01 d0             	add    %rdx,%rax
    6134:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    613b:	00 
    613c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6140:	48 01 c2             	add    %rax,%rdx
    6143:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6147:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    614b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    614f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6156:	00 
    6157:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    615b:	48 01 c2             	add    %rax,%rdx
    615e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6162:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    6166:	eb 37                	jmp    619f <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    6168:	48 89 c7             	mov    %rax,%rdi
    616b:	e8 60 cf ff ff       	call   30d0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    6170:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6174:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6178:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    617c:	48 89 ce             	mov    %rcx,%rsi
    617f:	48 89 c7             	mov    %rax,%rdi
    6182:	e8 8f f9 ff ff       	call   5b16 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    6187:	e8 84 d2 ff ff       	call   3410 <__cxa_rethrow@plt>
		  __catch(...)
    618c:	48 89 c3             	mov    %rax,%rbx
    618f:	e8 ec d2 ff ff       	call   3480 <__cxa_end_catch@plt>
    6194:	48 89 d8             	mov    %rbx,%rax
    6197:	48 89 c7             	mov    %rax,%rdi
    619a:	e8 31 d3 ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    619f:	90                   	nop
    61a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61a4:	c9                   	leave
    61a5:	c3                   	ret

00000000000061a6 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    61a6:	55                   	push   %rbp
    61a7:	48 89 e5             	mov    %rsp,%rbp
    61aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    61ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b2:	5d                   	pop    %rbp
    61b3:	c3                   	ret

00000000000061b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    61b4:	55                   	push   %rbp
    61b5:	48 89 e5             	mov    %rsp,%rbp
    61b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    61bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c0:	5d                   	pop    %rbp
    61c1:	c3                   	ret

00000000000061c2 <_ZNSt6thread6_StateC1Ev>:
    struct _State
    61c2:	55                   	push   %rbp
    61c3:	48 89 e5             	mov    %rsp,%rbp
    61c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61ca:	48 8d 15 3f 9b 01 00 	lea    0x19b3f(%rip),%rdx        # 1fd10 <_ZTVNSt6thread6_StateE@GLIBCXX_3.4.22+0x10>
    61d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d5:	48 89 10             	mov    %rdx,(%rax)
    61d8:	90                   	nop
    61d9:	5d                   	pop    %rbp
    61da:	c3                   	ret
    61db:	90                   	nop

00000000000061dc <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>:
	  _State_impl(_Args&&... __args)
    61dc:	55                   	push   %rbp
    61dd:	48 89 e5             	mov    %rsp,%rbp
    61e0:	41 54                	push   %r12
    61e2:	53                   	push   %rbx
    61e3:	48 83 ec 20          	sub    $0x20,%rsp
    61e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  : _M_func{{std::forward<_Args>(__args)...}}
    61f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61f7:	48 89 c7             	mov    %rax,%rdi
    61fa:	e8 c3 ff ff ff       	call   61c2 <_ZNSt6thread6_StateC1Ev>
    61ff:	48 8d 15 ca 9a 01 00 	lea    0x19aca(%rip),%rdx        # 1fcd0 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    6206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    620a:	48 89 10             	mov    %rdx,(%rax)
    620d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6211:	48 8d 58 08          	lea    0x8(%rax),%rbx
    6215:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6219:	48 89 c7             	mov    %rax,%rdi
    621c:	e8 85 ff ff ff       	call   61a6 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    6221:	49 89 c4             	mov    %rax,%r12
    6224:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6228:	48 89 c7             	mov    %rax,%rdi
    622b:	e8 84 ff ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    6230:	48 89 c2             	mov    %rax,%rdx
    6233:	4c 89 e6             	mov    %r12,%rsi
    6236:	48 89 df             	mov    %rbx,%rdi
    6239:	e8 fa 14 00 00       	call   7738 <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>
	  { }
    623e:	90                   	nop
    623f:	48 83 c4 20          	add    $0x20,%rsp
    6243:	5b                   	pop    %rbx
    6244:	41 5c                	pop    %r12
    6246:	5d                   	pop    %rbp
    6247:	c3                   	ret

0000000000006248 <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6248:	55                   	push   %rbp
    6249:	48 89 e5             	mov    %rsp,%rbp
    624c:	48 83 ec 10          	sub    $0x10,%rsp
    6250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6254:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6260:	48 89 d6             	mov    %rdx,%rsi
    6263:	48 89 c7             	mov    %rax,%rdi
    6266:	e8 1b 15 00 00       	call   7786 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>
    626b:	90                   	nop
    626c:	c9                   	leave
    626d:	c3                   	ret

000000000000626e <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    626e:	55                   	push   %rbp
    626f:	48 89 e5             	mov    %rsp,%rbp
    6272:	48 83 ec 10          	sub    $0x10,%rsp
    6276:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    627a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    627e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6282:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6286:	48 89 d6             	mov    %rdx,%rsi
    6289:	48 89 c7             	mov    %rax,%rdi
    628c:	e8 b7 ff ff ff       	call   6248 <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6291:	90                   	nop
    6292:	c9                   	leave
    6293:	c3                   	ret

0000000000006294 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    6294:	55                   	push   %rbp
    6295:	48 89 e5             	mov    %rsp,%rbp
    6298:	53                   	push   %rbx
    6299:	48 83 ec 28          	sub    $0x28,%rsp
    629d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    62a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    62a5:	48 89 c7             	mov    %rax,%rdi
    62a8:	e8 11 15 00 00       	call   77be <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    62ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    62b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62b5:	48 8b 00             	mov    (%rax),%rax
    62b8:	48 85 c0             	test   %rax,%rax
    62bb:	74 29                	je     62e6 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    62bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    62c1:	48 89 c7             	mov    %rax,%rdi
    62c4:	e8 0f 15 00 00       	call   77d8 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>
    62c9:	48 89 c3             	mov    %rax,%rbx
    62cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62d0:	48 89 c7             	mov    %rax,%rdi
    62d3:	e8 1a 15 00 00       	call   77f2 <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>
    62d8:	48 8b 00             	mov    (%rax),%rax
    62db:	48 89 c6             	mov    %rax,%rsi
    62de:	48 89 df             	mov    %rbx,%rdi
    62e1:	e8 1a 15 00 00       	call   7800 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>
	__ptr = pointer();
    62e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    62f1:	90                   	nop
    62f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    62f6:	c9                   	leave
    62f7:	c3                   	ret

00000000000062f8 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>:
      front() _GLIBCXX_NOEXCEPT
    62f8:	55                   	push   %rbp
    62f9:	48 89 e5             	mov    %rsp,%rbp
    62fc:	48 83 ec 30          	sub    $0x30,%rsp
    6300:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	return *begin();
    6304:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6308:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    630c:	48 89 d6             	mov    %rdx,%rsi
    630f:	48 89 c7             	mov    %rax,%rdi
    6312:	e8 3d f9 ff ff       	call   5c54 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    6317:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    631b:	48 89 c7             	mov    %rax,%rdi
    631e:	e8 09 15 00 00       	call   782c <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>
      }
    6323:	c9                   	leave
    6324:	c3                   	ret
    6325:	90                   	nop

0000000000006326 <_ZNSt8functionIFvvEEC1ERKS1_>:
      function(const function& __x)
    6326:	55                   	push   %rbp
    6327:	48 89 e5             	mov    %rsp,%rbp
    632a:	53                   	push   %rbx
    632b:	48 83 ec 18          	sub    $0x18,%rsp
    632f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6333:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _Function_base()
    6337:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    633b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    633f:	0f 11 00             	movups %xmm0,(%rax)
    6342:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    6347:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    634b:	48 89 c7             	mov    %rax,%rdi
    634e:	e8 6b e8 ff ff       	call   4bbe <_ZNSt14_Function_baseC1Ev>
    6353:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6357:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    635e:	00 
	if (static_cast<bool>(__x))
    635f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6363:	48 89 c7             	mov    %rax,%rdi
    6366:	e8 d3 14 00 00       	call   783e <_ZNKSt8functionIFvvEEcvbEv>
    636b:	84 c0                	test   %al,%al
    636d:	74 5a                	je     63c9 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
	    __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
    636f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6373:	4c 8b 40 10          	mov    0x10(%rax),%r8
    6377:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    637b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    637f:	ba 02 00 00 00       	mov    $0x2,%edx
    6384:	48 89 ce             	mov    %rcx,%rsi
    6387:	48 89 c7             	mov    %rax,%rdi
    638a:	41 ff d0             	call   *%r8
	    _M_invoker = __x._M_invoker;
    638d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6391:	48 8b 50 18          	mov    0x18(%rax),%rdx
    6395:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6399:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    _M_manager = __x._M_manager;
    639d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    63a1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    63a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63a9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    63ad:	eb 1a                	jmp    63c9 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
    63af:	48 89 c3             	mov    %rax,%rbx
    63b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63b6:	48 89 c7             	mov    %rax,%rdi
    63b9:	e8 54 d7 ff ff       	call   3b12 <_ZNSt14_Function_baseD1Ev>
    63be:	48 89 d8             	mov    %rbx,%rax
    63c1:	48 89 c7             	mov    %rax,%rdi
    63c4:	e8 07 d1 ff ff       	call   34d0 <_Unwind_Resume@plt>
    63c9:	90                   	nop
    63ca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63ce:	c9                   	leave
    63cf:	c3                   	ret

00000000000063d0 <_ZNSt8functionIFvvEE4swapERS1_>:
      void swap(function& __x) noexcept
    63d0:	55                   	push   %rbp
    63d1:	48 89 e5             	mov    %rsp,%rbp
    63d4:	48 83 ec 10          	sub    $0x10,%rsp
    63d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	std::swap(_M_functor, __x._M_functor);
    63e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63e8:	48 89 d6             	mov    %rdx,%rsi
    63eb:	48 89 c7             	mov    %rax,%rdi
    63ee:	e8 68 14 00 00       	call   785b <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>
	std::swap(_M_manager, __x._M_manager);
    63f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63f7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    63fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ff:	48 83 c0 10          	add    $0x10,%rax
    6403:	48 89 d6             	mov    %rdx,%rsi
    6406:	48 89 c7             	mov    %rax,%rdi
    6409:	e8 b7 14 00 00       	call   78c5 <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>
	std::swap(_M_invoker, __x._M_invoker);
    640e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6412:	48 8d 50 18          	lea    0x18(%rax),%rdx
    6416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    641a:	48 83 c0 18          	add    $0x18,%rax
    641e:	48 89 d6             	mov    %rdx,%rsi
    6421:	48 89 c7             	mov    %rax,%rdi
    6424:	e8 ee 14 00 00       	call   7917 <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>
      }
    6429:	90                   	nop
    642a:	c9                   	leave
    642b:	c3                   	ret

000000000000642c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>:
      pop_front() _GLIBCXX_NOEXCEPT
    642c:	55                   	push   %rbp
    642d:	48 89 e5             	mov    %rsp,%rbp
    6430:	53                   	push   %rbx
    6431:	48 83 ec 18          	sub    $0x18,%rsp
    6435:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	if (this->_M_impl._M_start._M_cur
    6439:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    643d:	48 8b 50 10          	mov    0x10(%rax),%rdx
	    != this->_M_impl._M_start._M_last - 1)
    6441:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6445:	48 8b 40 20          	mov    0x20(%rax),%rax
    6449:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_start._M_cur
    644d:	48 39 c2             	cmp    %rax,%rdx
    6450:	74 35                	je     6487 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x5b>
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
    6452:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6456:	48 8b 58 10          	mov    0x10(%rax),%rbx
    645a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    645e:	48 89 c7             	mov    %rax,%rdi
    6461:	e8 4a f8 ff ff       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    6466:	48 89 de             	mov    %rbx,%rsi
    6469:	48 89 c7             	mov    %rax,%rdi
    646c:	e8 f8 14 00 00       	call   7969 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
	    ++this->_M_impl._M_start._M_cur;
    6471:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6475:	48 8b 40 10          	mov    0x10(%rax),%rax
    6479:	48 8d 50 20          	lea    0x20(%rax),%rdx
    647d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6481:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6485:	eb 0c                	jmp    6493 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x67>
	  _M_pop_front_aux();
    6487:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    648b:	48 89 c7             	mov    %rax,%rdi
    648e:	e8 fd 14 00 00       	call   7990 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>
      }
    6493:	90                   	nop
    6494:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6498:	c9                   	leave
    6499:	c3                   	ret

000000000000649a <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    649a:	55                   	push   %rbp
    649b:	48 89 e5             	mov    %rsp,%rbp
    649e:	48 83 ec 10          	sub    $0x10,%rsp
    64a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    64aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64b2:	48 89 d6             	mov    %rdx,%rsi
    64b5:	48 89 c7             	mov    %rax,%rdi
    64b8:	e8 4d 15 00 00       	call   7a0a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>
    64bd:	c9                   	leave
    64be:	c3                   	ret
    64bf:	90                   	nop

00000000000064c0 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    64c0:	55                   	push   %rbp
    64c1:	48 89 e5             	mov    %rsp,%rbp
    64c4:	48 83 ec 10          	sub    $0x10,%rsp
    64c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    64cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d0:	48 89 c7             	mov    %rax,%rdi
    64d3:	e8 7e 15 00 00       	call   7a56 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>
    64d8:	c9                   	leave
    64d9:	c3                   	ret

00000000000064da <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    64da:	55                   	push   %rbp
    64db:	48 89 e5             	mov    %rsp,%rbp
    64de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    64e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ea:	48 8b 10             	mov    (%rax),%rdx
    64ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64f1:	48 8b 00             	mov    (%rax),%rax
    64f4:	48 39 c2             	cmp    %rax,%rdx
    64f7:	0f 94 c0             	sete   %al
    64fa:	5d                   	pop    %rbp
    64fb:	c3                   	ret

00000000000064fc <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>:
      key_comp() const
    64fc:	55                   	push   %rbp
    64fd:	48 89 e5             	mov    %rsp,%rbp
    6500:	48 83 ec 10          	sub    $0x10,%rsp
    6504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    6508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    650c:	48 89 c7             	mov    %rax,%rdi
    650f:	e8 6c 15 00 00       	call   7a80 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>
    6514:	90                   	nop
    6515:	c9                   	leave
    6516:	c3                   	ret
    6517:	90                   	nop

0000000000006518 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6518:	55                   	push   %rbp
    6519:	48 89 e5             	mov    %rsp,%rbp
    651c:	48 83 ec 10          	sub    $0x10,%rsp
    6520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    6524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6528:	48 8b 00             	mov    (%rax),%rax
    652b:	48 89 c7             	mov    %rax,%rdi
    652e:	e8 59 15 00 00       	call   7a8c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    6533:	c9                   	leave
    6534:	c3                   	ret
    6535:	90                   	nop

0000000000006536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    6536:	55                   	push   %rbp
    6537:	48 89 e5             	mov    %rsp,%rbp
    653a:	48 83 ec 20          	sub    $0x20,%rsp
    653e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6542:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6546:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    654a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    654e:	48 8b 10             	mov    (%rax),%rdx
    6551:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6555:	48 8b 00             	mov    (%rax),%rax
    6558:	48 89 d6             	mov    %rdx,%rsi
    655b:	48 89 c7             	mov    %rax,%rdi
    655e:	e8 15 d8 ff ff       	call   3d78 <_ZStltNSt6thread2idES0_>
    6563:	c9                   	leave
    6564:	c3                   	ret

0000000000006565 <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    6565:	55                   	push   %rbp
    6566:	48 89 e5             	mov    %rsp,%rbp
    6569:	48 83 ec 10          	sub    $0x10,%rsp
    656d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6571:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    6575:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6579:	48 89 c7             	mov    %rax,%rdi
    657c:	e8 29 15 00 00       	call   7aaa <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    6581:	48 89 c2             	mov    %rax,%rdx
    6584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6588:	48 89 d6             	mov    %rdx,%rsi
    658b:	48 89 c7             	mov    %rax,%rdi
    658e:	e8 25 15 00 00       	call   7ab8 <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>
    6593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6597:	c9                   	leave
    6598:	c3                   	ret
    6599:	90                   	nop

000000000000659a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    659a:	55                   	push   %rbp
    659b:	48 89 e5             	mov    %rsp,%rbp
    659e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    65a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    65aa:	48 8b 10             	mov    (%rax),%rdx
    65ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b1:	48 89 10             	mov    %rdx,(%rax)
    65b4:	90                   	nop
    65b5:	5d                   	pop    %rbp
    65b6:	c3                   	ret
    65b7:	90                   	nop

00000000000065b8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    65b8:	55                   	push   %rbp
    65b9:	48 89 e5             	mov    %rsp,%rbp
    65bc:	41 54                	push   %r12
    65be:	53                   	push   %rbx
    65bf:	48 83 ec 60          	sub    $0x60,%rsp
    65c3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    65c7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    65cb:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    65cf:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    65d3:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    65d7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    65db:	48 89 c7             	mov    %rax,%rdi
    65de:	e8 24 15 00 00       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    65e3:	49 89 c4             	mov    %rax,%r12
    65e6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    65ea:	48 89 c7             	mov    %rax,%rdi
    65ed:	e8 07 15 00 00       	call   7af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    65f2:	48 89 c3             	mov    %rax,%rbx
    65f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    65f9:	48 89 c7             	mov    %rax,%rdi
    65fc:	e8 ea 14 00 00       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    6601:	48 89 c2             	mov    %rax,%rdx
    6604:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    6608:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    660c:	4d 89 e0             	mov    %r12,%r8
    660f:	48 89 d9             	mov    %rbx,%rcx
    6612:	48 89 c7             	mov    %rax,%rdi
    6615:	e8 fc 14 00 00       	call   7b16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    661a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    661e:	48 89 c7             	mov    %rax,%rdi
    6621:	e8 f0 19 00 00       	call   8016 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>
    6626:	48 89 c2             	mov    %rax,%rdx
    6629:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    662d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6631:	48 89 ce             	mov    %rcx,%rsi
    6634:	48 89 c7             	mov    %rax,%rdi
    6637:	e8 8c 15 00 00       	call   7bc8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>
    663c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6640:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    6644:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6648:	48 85 c0             	test   %rax,%rax
    664b:	74 1c                	je     6669 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    664d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    6651:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6655:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6659:	48 89 ce             	mov    %rcx,%rsi
    665c:	48 89 c7             	mov    %rax,%rdi
    665f:	e8 d0 19 00 00       	call   8034 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>
    6664:	48 89 c3             	mov    %rax,%rbx
    6667:	eb 17                	jmp    6680 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xc8>
	return iterator(__res.first);
    6669:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    666d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6671:	48 89 d6             	mov    %rdx,%rsi
    6674:	48 89 c7             	mov    %rax,%rdi
    6677:	e8 0e 1a 00 00       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    667c:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    6680:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6684:	48 89 c7             	mov    %rax,%rdi
    6687:	e8 06 15 00 00       	call   7b92 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    668c:	48 89 d8             	mov    %rbx,%rax
    668f:	eb 1a                	jmp    66ab <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xf3>
    6691:	48 89 c3             	mov    %rax,%rbx
    6694:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6698:	48 89 c7             	mov    %rax,%rdi
    669b:	e8 f2 14 00 00       	call   7b92 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    66a0:	48 89 d8             	mov    %rbx,%rax
    66a3:	48 89 c7             	mov    %rax,%rdi
    66a6:	e8 25 ce ff ff       	call   34d0 <_Unwind_Resume@plt>
    66ab:	48 83 c4 60          	add    $0x60,%rsp
    66af:	5b                   	pop    %rbx
    66b0:	41 5c                	pop    %r12
    66b2:	5d                   	pop    %rbp
    66b3:	c3                   	ret

00000000000066b4 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    66b4:	55                   	push   %rbp
    66b5:	48 89 e5             	mov    %rsp,%rbp
    66b8:	48 83 ec 10          	sub    $0x10,%rsp
    66bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    66c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c4:	48 89 c7             	mov    %rax,%rdi
    66c7:	e8 d8 19 00 00       	call   80a4 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>
    66cc:	90                   	nop
    66cd:	c9                   	leave
    66ce:	c3                   	ret
    66cf:	90                   	nop

00000000000066d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    66d0:	55                   	push   %rbp
    66d1:	48 89 e5             	mov    %rsp,%rbp
    66d4:	48 83 ec 10          	sub    $0x10,%rsp
    66d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e0:	48 89 c7             	mov    %rax,%rdi
    66e3:	e8 e3 19 00 00       	call   80cb <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    66e8:	c9                   	leave
    66e9:	c3                   	ret

00000000000066ea <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    66ea:	55                   	push   %rbp
    66eb:	48 89 e5             	mov    %rsp,%rbp
    66ee:	48 83 ec 10          	sub    $0x10,%rsp
    66f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    66f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66fa:	48 89 c7             	mov    %rax,%rdi
    66fd:	e8 c2 02 00 00       	call   69c4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    6702:	c9                   	leave
    6703:	c3                   	ret

0000000000006704 <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6704:	55                   	push   %rbp
    6705:	48 89 e5             	mov    %rsp,%rbp
    6708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    670c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6710:	5d                   	pop    %rbp
    6711:	c3                   	ret

0000000000006712 <_ZN4neko8SettingsD1Ev>:
    6712:	55                   	push   %rbp
    6713:	48 89 e5             	mov    %rsp,%rbp
    6716:	48 83 ec 10          	sub    $0x10,%rsp
    671a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    671e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6722:	48 89 c7             	mov    %rax,%rdi
    6725:	e8 6a ec ff ff       	call   5394 <_ZN4neko8SettingsUt_D1Ev>
    672a:	90                   	nop
    672b:	c9                   	leave
    672c:	c3                   	ret
    672d:	90                   	nop

000000000000672e <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>:
      operator()(_Tp* __ptr) const
    672e:	55                   	push   %rbp
    672f:	48 89 e5             	mov    %rsp,%rbp
    6732:	53                   	push   %rbx
    6733:	48 83 ec 18          	sub    $0x18,%rsp
    6737:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    673b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    673f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6743:	48 85 db             	test   %rbx,%rbx
    6746:	74 15                	je     675d <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_+0x2f>
    6748:	48 89 df             	mov    %rbx,%rdi
    674b:	e8 c2 ff ff ff       	call   6712 <_ZN4neko8SettingsD1Ev>
    6750:	be 60 00 00 00       	mov    $0x60,%esi
    6755:	48 89 df             	mov    %rbx,%rdi
    6758:	e8 73 cb ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    675d:	90                   	nop
    675e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6762:	c9                   	leave
    6763:	c3                   	ret

0000000000006764 <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    6764:	55                   	push   %rbp
    6765:	48 89 e5             	mov    %rsp,%rbp
    6768:	48 83 ec 10          	sub    $0x10,%rsp
    676c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    6770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6774:	48 89 c7             	mov    %rax,%rdi
    6777:	e8 6a 19 00 00       	call   80e6 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>
    677c:	90                   	nop
    677d:	c9                   	leave
    677e:	c3                   	ret
    677f:	90                   	nop

0000000000006780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    6780:	55                   	push   %rbp
    6781:	48 89 e5             	mov    %rsp,%rbp
    6784:	48 83 ec 10          	sub    $0x10,%rsp
    6788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    678c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6790:	48 89 c7             	mov    %rax,%rdi
    6793:	e8 75 19 00 00       	call   810d <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6798:	c9                   	leave
    6799:	c3                   	ret

000000000000679a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    679a:	55                   	push   %rbp
    679b:	48 89 e5             	mov    %rsp,%rbp
    679e:	48 83 ec 10          	sub    $0x10,%rsp
    67a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    67a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67aa:	48 89 c7             	mov    %rax,%rdi
    67ad:	e8 82 04 00 00       	call   6c34 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    67b2:	c9                   	leave
    67b3:	c3                   	ret

00000000000067b4 <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    67b4:	55                   	push   %rbp
    67b5:	48 89 e5             	mov    %rsp,%rbp
    67b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    67bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c0:	5d                   	pop    %rbp
    67c1:	c3                   	ret

00000000000067c2 <_ZN4neko8RendererD1Ev>:
  ~Renderer() = default;
    67c2:	55                   	push   %rbp
    67c3:	48 89 e5             	mov    %rsp,%rbp
    67c6:	48 83 ec 10          	sub    $0x10,%rsp
    67ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67d2:	48 83 c0 50          	add    $0x50,%rax
    67d6:	48 89 c7             	mov    %rax,%rdi
    67d9:	e8 d8 46 00 00       	call   aeb6 <_ZN4neko6DeviceD1Ev>
    67de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67e2:	48 83 c0 40          	add    $0x40,%rax
    67e6:	48 89 c7             	mov    %rax,%rdi
    67e9:	e8 4a a6 00 00       	call   10e38 <_ZN4neko7SurfaceD1Ev>
    67ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67f2:	48 83 c0 30          	add    $0x30,%rax
    67f6:	48 89 c7             	mov    %rax,%rdi
    67f9:	e8 2c a5 00 00       	call   10d2a <_ZN4neko6WindowD1Ev>
    67fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6802:	48 83 c0 10          	add    $0x10,%rax
    6806:	48 89 c7             	mov    %rax,%rdi
    6809:	e8 d2 d0 ff ff       	call   38e0 <_ZN4neko8InstanceD1Ev>
    680e:	90                   	nop
    680f:	c9                   	leave
    6810:	c3                   	ret
    6811:	90                   	nop

0000000000006812 <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>:
      operator()(_Tp* __ptr) const
    6812:	55                   	push   %rbp
    6813:	48 89 e5             	mov    %rsp,%rbp
    6816:	53                   	push   %rbx
    6817:	48 83 ec 18          	sub    $0x18,%rsp
    681b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    681f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    6823:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6827:	48 85 db             	test   %rbx,%rbx
    682a:	74 15                	je     6841 <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_+0x2f>
    682c:	48 89 df             	mov    %rbx,%rdi
    682f:	e8 8e ff ff ff       	call   67c2 <_ZN4neko8RendererD1Ev>
    6834:	be 70 00 00 00       	mov    $0x70,%esi
    6839:	48 89 df             	mov    %rbx,%rdi
    683c:	e8 8f ca ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    6841:	90                   	nop
    6842:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6846:	c9                   	leave
    6847:	c3                   	ret

0000000000006848 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    6848:	55                   	push   %rbp
    6849:	48 89 e5             	mov    %rsp,%rbp
    684c:	48 83 ec 10          	sub    $0x10,%rsp
    6850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    6854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6858:	48 89 c7             	mov    %rax,%rdi
    685b:	e8 c8 18 00 00       	call   8128 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>
    6860:	90                   	nop
    6861:	c9                   	leave
    6862:	c3                   	ret
    6863:	90                   	nop

0000000000006864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    6864:	55                   	push   %rbp
    6865:	48 89 e5             	mov    %rsp,%rbp
    6868:	48 83 ec 10          	sub    $0x10,%rsp
    686c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6874:	48 89 c7             	mov    %rax,%rdi
    6877:	e8 d3 18 00 00       	call   814f <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    687c:	c9                   	leave
    687d:	c3                   	ret

000000000000687e <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    687e:	55                   	push   %rbp
    687f:	48 89 e5             	mov    %rsp,%rbp
    6882:	48 83 ec 10          	sub    $0x10,%rsp
    6886:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    688a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    688e:	48 89 c7             	mov    %rax,%rdi
    6891:	e8 66 02 00 00       	call   6afc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    6896:	c9                   	leave
    6897:	c3                   	ret

0000000000006898 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6898:	55                   	push   %rbp
    6899:	48 89 e5             	mov    %rsp,%rbp
    689c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    68a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68a4:	5d                   	pop    %rbp
    68a5:	c3                   	ret

00000000000068a6 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>:
      operator()(_Tp* __ptr) const
    68a6:	55                   	push   %rbp
    68a7:	48 89 e5             	mov    %rsp,%rbp
    68aa:	53                   	push   %rbx
    68ab:	48 83 ec 18          	sub    $0x18,%rsp
    68af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    68b7:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    68bb:	48 85 db             	test   %rbx,%rbx
    68be:	74 15                	je     68d5 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_+0x2f>
    68c0:	48 89 df             	mov    %rbx,%rdi
    68c3:	e8 ba d6 ff ff       	call   3f82 <_ZN4neko10ThreadPoolD1Ev>
    68c8:	be f8 00 00 00       	mov    $0xf8,%esi
    68cd:	48 89 df             	mov    %rbx,%rdi
    68d0:	e8 fb c9 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    68d5:	90                   	nop
    68d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68da:	c9                   	leave
    68db:	c3                   	ret

00000000000068dc <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    68dc:	55                   	push   %rbp
    68dd:	48 89 e5             	mov    %rsp,%rbp
    68e0:	48 83 ec 10          	sub    $0x10,%rsp
    68e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68f4:	48 89 d6             	mov    %rdx,%rsi
    68f7:	48 89 c7             	mov    %rax,%rdi
    68fa:	e8 6b 18 00 00       	call   816a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>
    68ff:	90                   	nop
    6900:	c9                   	leave
    6901:	c3                   	ret

0000000000006902 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6902:	55                   	push   %rbp
    6903:	48 89 e5             	mov    %rsp,%rbp
    6906:	48 83 ec 10          	sub    $0x10,%rsp
    690a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    690e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6916:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    691a:	48 89 d6             	mov    %rdx,%rsi
    691d:	48 89 c7             	mov    %rax,%rdi
    6920:	e8 b7 ff ff ff       	call   68dc <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6925:	90                   	nop
    6926:	c9                   	leave
    6927:	c3                   	ret

0000000000006928 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6928:	55                   	push   %rbp
    6929:	48 89 e5             	mov    %rsp,%rbp
    692c:	53                   	push   %rbx
    692d:	48 83 ec 28          	sub    $0x28,%rsp
    6931:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6935:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6939:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    693d:	48 89 c7             	mov    %rax,%rdi
    6940:	e8 8b fd ff ff       	call   66d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6945:	48 8b 00             	mov    (%rax),%rax
    6948:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    694c:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6950:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6954:	48 89 c7             	mov    %rax,%rdi
    6957:	e8 74 fd ff ff       	call   66d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    695c:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    695f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6964:	74 1e                	je     6984 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6966:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    696a:	48 89 c7             	mov    %rax,%rdi
    696d:	e8 52 00 00 00       	call   69c4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    6972:	48 89 c2             	mov    %rax,%rdx
    6975:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6979:	48 89 c6             	mov    %rax,%rsi
    697c:	48 89 d7             	mov    %rdx,%rdi
    697f:	e8 aa fd ff ff       	call   672e <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
      }
    6984:	90                   	nop
    6985:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6989:	c9                   	leave
    698a:	c3                   	ret
    698b:	90                   	nop

000000000000698c <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    698c:	55                   	push   %rbp
    698d:	48 89 e5             	mov    %rsp,%rbp
    6990:	48 83 ec 20          	sub    $0x20,%rsp
    6994:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    699c:	48 89 c7             	mov    %rax,%rdi
    699f:	e8 2c fd ff ff       	call   66d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    69a4:	48 8b 00             	mov    (%rax),%rax
    69a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    69ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69af:	48 89 c7             	mov    %rax,%rdi
    69b2:	e8 19 fd ff ff       	call   66d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    69b7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    69be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    69c2:	c9                   	leave
    69c3:	c3                   	ret

00000000000069c4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    69c4:	55                   	push   %rbp
    69c5:	48 89 e5             	mov    %rsp,%rbp
    69c8:	48 83 ec 10          	sub    $0x10,%rsp
    69cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69d4:	48 89 c7             	mov    %rax,%rdi
    69d7:	e8 c5 17 00 00       	call   81a1 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    69dc:	c9                   	leave
    69dd:	c3                   	ret

00000000000069de <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    69de:	55                   	push   %rbp
    69df:	48 89 e5             	mov    %rsp,%rbp
    69e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    69e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ea:	5d                   	pop    %rbp
    69eb:	c3                   	ret

00000000000069ec <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    69ec:	55                   	push   %rbp
    69ed:	48 89 e5             	mov    %rsp,%rbp
    69f0:	48 83 ec 10          	sub    $0x10,%rsp
    69f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    69f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69fc:	48 89 c7             	mov    %rax,%rdi
    69ff:	e8 b8 17 00 00       	call   81bc <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6a04:	c9                   	leave
    6a05:	c3                   	ret

0000000000006a06 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6a06:	55                   	push   %rbp
    6a07:	48 89 e5             	mov    %rsp,%rbp
    6a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a12:	5d                   	pop    %rbp
    6a13:	c3                   	ret

0000000000006a14 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6a14:	55                   	push   %rbp
    6a15:	48 89 e5             	mov    %rsp,%rbp
    6a18:	48 83 ec 10          	sub    $0x10,%rsp
    6a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a2c:	48 89 d6             	mov    %rdx,%rsi
    6a2f:	48 89 c7             	mov    %rax,%rdi
    6a32:	e8 a3 17 00 00       	call   81da <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>
    6a37:	90                   	nop
    6a38:	c9                   	leave
    6a39:	c3                   	ret

0000000000006a3a <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6a3a:	55                   	push   %rbp
    6a3b:	48 89 e5             	mov    %rsp,%rbp
    6a3e:	48 83 ec 10          	sub    $0x10,%rsp
    6a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6a4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a52:	48 89 d6             	mov    %rdx,%rsi
    6a55:	48 89 c7             	mov    %rax,%rdi
    6a58:	e8 b7 ff ff ff       	call   6a14 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6a5d:	90                   	nop
    6a5e:	c9                   	leave
    6a5f:	c3                   	ret

0000000000006a60 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6a60:	55                   	push   %rbp
    6a61:	48 89 e5             	mov    %rsp,%rbp
    6a64:	53                   	push   %rbx
    6a65:	48 83 ec 28          	sub    $0x28,%rsp
    6a69:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6a6d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6a71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a75:	48 89 c7             	mov    %rax,%rdi
    6a78:	e8 e7 fd ff ff       	call   6864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6a7d:	48 8b 00             	mov    (%rax),%rax
    6a80:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    6a84:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6a88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a8c:	48 89 c7             	mov    %rax,%rdi
    6a8f:	e8 d0 fd ff ff       	call   6864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6a94:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    6a97:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6a9c:	74 1e                	je     6abc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6a9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6aa2:	48 89 c7             	mov    %rax,%rdi
    6aa5:	e8 52 00 00 00       	call   6afc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    6aaa:	48 89 c2             	mov    %rax,%rdx
    6aad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ab1:	48 89 c6             	mov    %rax,%rsi
    6ab4:	48 89 d7             	mov    %rdx,%rdi
    6ab7:	e8 ea fd ff ff       	call   68a6 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
      }
    6abc:	90                   	nop
    6abd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6ac1:	c9                   	leave
    6ac2:	c3                   	ret
    6ac3:	90                   	nop

0000000000006ac4 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6ac4:	55                   	push   %rbp
    6ac5:	48 89 e5             	mov    %rsp,%rbp
    6ac8:	48 83 ec 20          	sub    $0x20,%rsp
    6acc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6ad0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ad4:	48 89 c7             	mov    %rax,%rdi
    6ad7:	e8 88 fd ff ff       	call   6864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6adc:	48 8b 00             	mov    (%rax),%rax
    6adf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6ae3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ae7:	48 89 c7             	mov    %rax,%rdi
    6aea:	e8 75 fd ff ff       	call   6864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6aef:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6afa:	c9                   	leave
    6afb:	c3                   	ret

0000000000006afc <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6afc:	55                   	push   %rbp
    6afd:	48 89 e5             	mov    %rsp,%rbp
    6b00:	48 83 ec 10          	sub    $0x10,%rsp
    6b04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b0c:	48 89 c7             	mov    %rax,%rdi
    6b0f:	e8 fd 16 00 00       	call   8211 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6b14:	c9                   	leave
    6b15:	c3                   	ret

0000000000006b16 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6b16:	55                   	push   %rbp
    6b17:	48 89 e5             	mov    %rsp,%rbp
    6b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b22:	5d                   	pop    %rbp
    6b23:	c3                   	ret

0000000000006b24 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6b24:	55                   	push   %rbp
    6b25:	48 89 e5             	mov    %rsp,%rbp
    6b28:	48 83 ec 10          	sub    $0x10,%rsp
    6b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b34:	48 89 c7             	mov    %rax,%rdi
    6b37:	e8 f0 16 00 00       	call   822c <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6b3c:	c9                   	leave
    6b3d:	c3                   	ret

0000000000006b3e <_ZSt7forwardIRN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6b3e:	55                   	push   %rbp
    6b3f:	48 89 e5             	mov    %rsp,%rbp
    6b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b4a:	5d                   	pop    %rbp
    6b4b:	c3                   	ret

0000000000006b4c <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6b4c:	55                   	push   %rbp
    6b4d:	48 89 e5             	mov    %rsp,%rbp
    6b50:	48 83 ec 10          	sub    $0x10,%rsp
    6b54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b64:	48 89 d6             	mov    %rdx,%rsi
    6b67:	48 89 c7             	mov    %rax,%rdi
    6b6a:	e8 db 16 00 00       	call   824a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>
    6b6f:	90                   	nop
    6b70:	c9                   	leave
    6b71:	c3                   	ret

0000000000006b72 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6b72:	55                   	push   %rbp
    6b73:	48 89 e5             	mov    %rsp,%rbp
    6b76:	48 83 ec 10          	sub    $0x10,%rsp
    6b7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b8a:	48 89 d6             	mov    %rdx,%rsi
    6b8d:	48 89 c7             	mov    %rax,%rdi
    6b90:	e8 b7 ff ff ff       	call   6b4c <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6b95:	90                   	nop
    6b96:	c9                   	leave
    6b97:	c3                   	ret

0000000000006b98 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6b98:	55                   	push   %rbp
    6b99:	48 89 e5             	mov    %rsp,%rbp
    6b9c:	53                   	push   %rbx
    6b9d:	48 83 ec 28          	sub    $0x28,%rsp
    6ba1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ba5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6ba9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bad:	48 89 c7             	mov    %rax,%rdi
    6bb0:	e8 cb fb ff ff       	call   6780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6bb5:	48 8b 00             	mov    (%rax),%rax
    6bb8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    6bbc:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6bc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bc4:	48 89 c7             	mov    %rax,%rdi
    6bc7:	e8 b4 fb ff ff       	call   6780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6bcc:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    6bcf:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6bd4:	74 1e                	je     6bf4 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6bd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bda:	48 89 c7             	mov    %rax,%rdi
    6bdd:	e8 52 00 00 00       	call   6c34 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    6be2:	48 89 c2             	mov    %rax,%rdx
    6be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6be9:	48 89 c6             	mov    %rax,%rsi
    6bec:	48 89 d7             	mov    %rdx,%rdi
    6bef:	e8 1e fc ff ff       	call   6812 <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
      }
    6bf4:	90                   	nop
    6bf5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6bf9:	c9                   	leave
    6bfa:	c3                   	ret
    6bfb:	90                   	nop

0000000000006bfc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6bfc:	55                   	push   %rbp
    6bfd:	48 89 e5             	mov    %rsp,%rbp
    6c00:	48 83 ec 20          	sub    $0x20,%rsp
    6c04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6c08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c0c:	48 89 c7             	mov    %rax,%rdi
    6c0f:	e8 6c fb ff ff       	call   6780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6c14:	48 8b 00             	mov    (%rax),%rax
    6c17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6c1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c1f:	48 89 c7             	mov    %rax,%rdi
    6c22:	e8 59 fb ff ff       	call   6780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6c27:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6c32:	c9                   	leave
    6c33:	c3                   	ret

0000000000006c34 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6c34:	55                   	push   %rbp
    6c35:	48 89 e5             	mov    %rsp,%rbp
    6c38:	48 83 ec 10          	sub    $0x10,%rsp
    6c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c44:	48 89 c7             	mov    %rax,%rdi
    6c47:	e8 35 16 00 00       	call   8281 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6c4c:	c9                   	leave
    6c4d:	c3                   	ret

0000000000006c4e <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6c4e:	55                   	push   %rbp
    6c4f:	48 89 e5             	mov    %rsp,%rbp
    6c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c5a:	5d                   	pop    %rbp
    6c5b:	c3                   	ret

0000000000006c5c <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6c5c:	55                   	push   %rbp
    6c5d:	48 89 e5             	mov    %rsp,%rbp
    6c60:	48 83 ec 10          	sub    $0x10,%rsp
    6c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c6c:	48 89 c7             	mov    %rax,%rdi
    6c6f:	e8 28 16 00 00       	call   829c <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6c74:	c9                   	leave
    6c75:	c3                   	ret

0000000000006c76 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    6c76:	55                   	push   %rbp
    6c77:	48 89 e5             	mov    %rsp,%rbp
    6c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    6c7e:	b8 01 00 00 00       	mov    $0x1,%eax
    6c83:	5d                   	pop    %rbp
    6c84:	c3                   	ret

0000000000006c85 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6c85:	55                   	push   %rbp
    6c86:	48 89 e5             	mov    %rsp,%rbp
    6c89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6c8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c91:	5d                   	pop    %rbp
    6c92:	c3                   	ret

0000000000006c93 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    6c93:	55                   	push   %rbp
    6c94:	48 89 e5             	mov    %rsp,%rbp
    6c97:	48 83 ec 10          	sub    $0x10,%rsp
    6c9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    6ca3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ca7:	48 89 c7             	mov    %rax,%rdi
    6caa:	e8 d6 ff ff ff       	call   6c85 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    6caf:	48 89 c2             	mov    %rax,%rdx
    6cb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cb6:	48 89 d6             	mov    %rdx,%rsi
    6cb9:	48 89 c7             	mov    %rax,%rdi
    6cbc:	e8 f8 15 00 00       	call   82b9 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    6cc1:	90                   	nop
    6cc2:	c9                   	leave
    6cc3:	c3                   	ret

0000000000006cc4 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    6cc4:	55                   	push   %rbp
    6cc5:	48 89 e5             	mov    %rsp,%rbp
    6cc8:	48 83 ec 10          	sub    $0x10,%rsp
    6ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    6cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cd4:	48 89 c7             	mov    %rax,%rdi
    6cd7:	e8 23 16 00 00       	call   82ff <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6cdc:	48 89 c7             	mov    %rax,%rdi
    6cdf:	e8 45 16 00 00       	call   8329 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    6ce4:	90                   	nop
      }
    6ce5:	c9                   	leave
    6ce6:	c3                   	ret

0000000000006ce7 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    6ce7:	55                   	push   %rbp
    6ce8:	48 89 e5             	mov    %rsp,%rbp
    6ceb:	53                   	push   %rbx
    6cec:	48 83 ec 28          	sub    $0x28,%rsp
    6cf0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6cf4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6cf8:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    6cfb:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6cfe:	85 c0                	test   %eax,%eax
    6d00:	74 07                	je     6d09 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    6d02:	83 f8 01             	cmp    $0x1,%eax
    6d05:	74 1a                	je     6d21 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    6d07:	eb 38                	jmp    6d41 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    6d09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d0d:	48 89 c7             	mov    %rax,%rdi
    6d10:	e8 27 07 00 00       	call   743c <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    6d15:	48 8d 15 3c 90 01 00 	lea    0x1903c(%rip),%rdx        # 1fd58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    6d1c:	48 89 10             	mov    %rdx,(%rax)
	    break;
    6d1f:	eb 36                	jmp    6d57 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    6d21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d25:	48 89 c7             	mov    %rax,%rdi
    6d28:	e8 d2 15 00 00       	call   82ff <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6d2d:	48 89 c3             	mov    %rax,%rbx
    6d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d34:	48 89 c7             	mov    %rax,%rdi
    6d37:	e8 10 16 00 00       	call   834c <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    6d3c:	48 89 18             	mov    %rbx,(%rax)
	    break;
    6d3f:	eb 16                	jmp    6d57 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    6d41:	8b 55 dc             	mov    -0x24(%rbp),%edx
    6d44:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6d48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d4c:	48 89 ce             	mov    %rcx,%rsi
    6d4f:	48 89 c7             	mov    %rax,%rdi
    6d52:	e8 0f 16 00 00       	call   8366 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    6d57:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6d5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6d60:	c9                   	leave
    6d61:	c3                   	ret

0000000000006d62 <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6d62:	55                   	push   %rbp
    6d63:	48 89 e5             	mov    %rsp,%rbp
    6d66:	48 83 ec 10          	sub    $0x10,%rsp
    6d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d7a:	48 89 d6             	mov    %rdx,%rsi
    6d7d:	48 89 c7             	mov    %rax,%rdi
    6d80:	e8 87 16 00 00       	call   840c <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>
    6d85:	90                   	nop
    6d86:	c9                   	leave
    6d87:	c3                   	ret

0000000000006d88 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6d88:	55                   	push   %rbp
    6d89:	48 89 e5             	mov    %rsp,%rbp
    6d8c:	48 83 ec 10          	sub    $0x10,%rsp
    6d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6da0:	48 89 d6             	mov    %rdx,%rsi
    6da3:	48 89 c7             	mov    %rax,%rdi
    6da6:	e8 b7 ff ff ff       	call   6d62 <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6dab:	90                   	nop
    6dac:	c9                   	leave
    6dad:	c3                   	ret

0000000000006dae <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    6dae:	55                   	push   %rbp
    6daf:	48 89 e5             	mov    %rsp,%rbp
    6db2:	48 83 ec 10          	sub    $0x10,%rsp
    6db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbe:	48 89 c7             	mov    %rax,%rdi
    6dc1:	e8 7d 16 00 00       	call   8443 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6dc6:	c9                   	leave
    6dc7:	c3                   	ret

0000000000006dc8 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    6dc8:	55                   	push   %rbp
    6dc9:	48 89 e5             	mov    %rsp,%rbp
    6dcc:	48 83 ec 10          	sub    $0x10,%rsp
    6dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dd8:	48 89 c7             	mov    %rax,%rdi
    6ddb:	e8 7e 16 00 00       	call   845e <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>
    6de0:	c9                   	leave
    6de1:	c3                   	ret

0000000000006de2 <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6de2:	55                   	push   %rbp
    6de3:	48 89 e5             	mov    %rsp,%rbp
    6de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dee:	5d                   	pop    %rbp
    6def:	c3                   	ret

0000000000006df0 <_ZN4neko6EngineD1Ev>:
  ~Engine() = default;
    6df0:	55                   	push   %rbp
    6df1:	48 89 e5             	mov    %rsp,%rbp
    6df4:	48 83 ec 10          	sub    $0x10,%rsp
    6df8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e00:	48 83 c0 10          	add    $0x10,%rax
    6e04:	48 89 c7             	mov    %rax,%rdi
    6e07:	e8 40 e4 ff ff       	call   524c <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    6e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e10:	48 83 c0 08          	add    $0x8,%rax
    6e14:	48 89 c7             	mov    %rax,%rdi
    6e17:	e8 6e e3 ff ff       	call   518a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    6e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e20:	48 89 c7             	mov    %rax,%rdi
    6e23:	e8 a0 e2 ff ff       	call   50c8 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    6e28:	90                   	nop
    6e29:	c9                   	leave
    6e2a:	c3                   	ret
    6e2b:	90                   	nop

0000000000006e2c <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>:
      operator()(_Tp* __ptr) const
    6e2c:	55                   	push   %rbp
    6e2d:	48 89 e5             	mov    %rsp,%rbp
    6e30:	53                   	push   %rbx
    6e31:	48 83 ec 18          	sub    $0x18,%rsp
    6e35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e39:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    6e3d:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6e41:	48 85 db             	test   %rbx,%rbx
    6e44:	74 15                	je     6e5b <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_+0x2f>
    6e46:	48 89 df             	mov    %rbx,%rdi
    6e49:	e8 a2 ff ff ff       	call   6df0 <_ZN4neko6EngineD1Ev>
    6e4e:	be 18 00 00 00       	mov    $0x18,%esi
    6e53:	48 89 df             	mov    %rbx,%rdi
    6e56:	e8 75 c4 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    6e5b:	90                   	nop
    6e5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e60:	c9                   	leave
    6e61:	c3                   	ret

0000000000006e62 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    6e62:	55                   	push   %rbp
    6e63:	48 89 e5             	mov    %rsp,%rbp
    6e66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    6e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e6e:	48 8b 00             	mov    (%rax),%rax
    6e71:	5d                   	pop    %rbp
    6e72:	c3                   	ret

0000000000006e73 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    6e73:	55                   	push   %rbp
    6e74:	48 89 e5             	mov    %rsp,%rbp
    6e77:	53                   	push   %rbx
    6e78:	48 83 ec 38          	sub    $0x38,%rsp
    6e7c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6e80:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    6e84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e88:	48 8b 00             	mov    (%rax),%rax
    6e8b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6e8f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6e93:	48 89 c7             	mov    %rax,%rdi
    6e96:	e8 a1 cb ff ff       	call   3a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    6e9b:	48 89 c3             	mov    %rax,%rbx
    6e9e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6ea2:	48 8b 00             	mov    (%rax),%rax
    6ea5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6ea9:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6ead:	48 89 c7             	mov    %rax,%rdi
    6eb0:	e8 87 cb ff ff       	call   3a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    6eb5:	48 29 c3             	sub    %rax,%rbx
    6eb8:	48 89 da             	mov    %rbx,%rdx
    6ebb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6ebf:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    6ec3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6ec7:	48 89 d6             	mov    %rdx,%rsi
    6eca:	48 89 c7             	mov    %rax,%rdi
    6ecd:	e8 4c cb ff ff       	call   3a1e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    6ed2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    6ed6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6eda:	c9                   	leave
    6edb:	c3                   	ret

0000000000006edc <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    6edc:	55                   	push   %rbp
    6edd:	48 89 e5             	mov    %rsp,%rbp
    6ee0:	48 83 ec 20          	sub    $0x20,%rsp
    6ee4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    6ee8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6eec:	48 89 c7             	mov    %rax,%rdi
    6eef:	e8 48 cb ff ff       	call   3a3c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    6ef4:	48 89 c1             	mov    %rax,%rcx
    6ef7:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    6efe:	9b c4 20 
    6f01:	48 89 c8             	mov    %rcx,%rax
    6f04:	48 f7 ea             	imul   %rdx
    6f07:	48 89 d0             	mov    %rdx,%rax
    6f0a:	48 c1 f8 07          	sar    $0x7,%rax
    6f0e:	48 c1 f9 3f          	sar    $0x3f,%rcx
    6f12:	48 89 ca             	mov    %rcx,%rdx
    6f15:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    6f18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6f1c:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    6f20:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    6f24:	48 89 d6             	mov    %rdx,%rsi
    6f27:	48 89 c7             	mov    %rax,%rdi
    6f2a:	e8 49 15 00 00       	call   8478 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    6f2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    6f33:	c9                   	leave
    6f34:	c3                   	ret
    6f35:	90                   	nop

0000000000006f36 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6f36:	55                   	push   %rbp
    6f37:	48 89 e5             	mov    %rsp,%rbp
    6f3a:	48 83 ec 10          	sub    $0x10,%rsp
    6f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f46:	48 89 c7             	mov    %rax,%rdi
    6f49:	e8 48 15 00 00       	call   8496 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    6f4e:	c9                   	leave
    6f4f:	c3                   	ret

0000000000006f50 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    6f50:	55                   	push   %rbp
    6f51:	48 89 e5             	mov    %rsp,%rbp
    6f54:	48 83 ec 10          	sub    $0x10,%rsp
    6f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    6f60:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6f64:	48 89 c7             	mov    %rax,%rdi
    6f67:	e8 47 15 00 00       	call   84b3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    6f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f74:	48 89 d6             	mov    %rdx,%rsi
    6f77:	48 89 c7             	mov    %rax,%rdi
    6f7a:	e8 3f 15 00 00       	call   84be <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    6f7f:	c9                   	leave
    6f80:	c3                   	ret
    6f81:	90                   	nop

0000000000006f82 <_ZNSt15__new_allocatorISt6threadEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6f82:	55                   	push   %rbp
    6f83:	48 89 e5             	mov    %rsp,%rbp
    6f86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f8a:	90                   	nop
    6f8b:	5d                   	pop    %rbp
    6f8c:	c3                   	ret

0000000000006f8d <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6f8d:	55                   	push   %rbp
    6f8e:	48 89 e5             	mov    %rsp,%rbp
    6f91:	48 83 ec 20          	sub    $0x20,%rsp
    6f95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f9d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6fa1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6fa5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6fa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fad:	48 89 ce             	mov    %rcx,%rsi
    6fb0:	48 89 c7             	mov    %rax,%rdi
    6fb3:	e8 1c 15 00 00       	call   84d4 <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>
    6fb8:	90                   	nop
    6fb9:	c9                   	leave
    6fba:	c3                   	ret

0000000000006fbb <_ZSt8_DestroyIPSt6threadEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6fbb:	55                   	push   %rbp
    6fbc:	48 89 e5             	mov    %rsp,%rbp
    6fbf:	48 83 ec 10          	sub    $0x10,%rsp
    6fc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fc7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    6fcb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fd3:	48 89 d6             	mov    %rdx,%rsi
    6fd6:	48 89 c7             	mov    %rax,%rdi
    6fd9:	e8 27 15 00 00       	call   8505 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>
    }
    6fde:	90                   	nop
    6fdf:	c9                   	leave
    6fe0:	c3                   	ret
    6fe1:	90                   	nop

0000000000006fe2 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>:
	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
    6fe2:	55                   	push   %rbp
    6fe3:	48 89 e5             	mov    %rsp,%rbp
    6fe6:	48 83 ec 10          	sub    $0x10,%rsp
    6fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    6fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ff2:	48 89 c7             	mov    %rax,%rdi
    6ff5:	e8 44 15 00 00       	call   853e <_ZNSaISt8functionIFvvEEEC1Ev>
    6ffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ffe:	48 89 c7             	mov    %rax,%rdi
    7001:	e8 54 15 00 00       	call   855a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>
	{ }
    7006:	90                   	nop
    7007:	c9                   	leave
    7008:	c3                   	ret
    7009:	90                   	nop

000000000000700a <_ZNSaISt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    700a:	55                   	push   %rbp
    700b:	48 89 e5             	mov    %rsp,%rbp
    700e:	48 83 ec 10          	sub    $0x10,%rsp
    7012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    701a:	48 89 c7             	mov    %rax,%rdi
    701d:	e8 7e 15 00 00       	call   85a0 <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>
    7022:	90                   	nop
    7023:	c9                   	leave
    7024:	c3                   	ret
    7025:	90                   	nop

0000000000007026 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>:
    _Deque_base<_Tp, _Alloc>::
    7026:	55                   	push   %rbp
    7027:	48 89 e5             	mov    %rsp,%rbp
    702a:	53                   	push   %rbx
    702b:	48 83 ec 48          	sub    $0x48,%rsp
    702f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    7033:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
    7037:	bf 20 00 00 00       	mov    $0x20,%edi
    703c:	e8 b0 cb ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    7041:	48 89 c3             	mov    %rax,%rbx
    7044:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7048:	ba 00 00 00 00       	mov    $0x0,%edx
    704d:	48 f7 f3             	div    %rbx
    7050:	48 83 c0 01          	add    $0x1,%rax
    7054:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
					   size_t(__num_nodes + 2));
    7058:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    705c:	48 83 c0 02          	add    $0x2,%rax
    7060:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
    7064:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
    706b:	00 
    706c:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    7070:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7074:	48 89 d6             	mov    %rdx,%rsi
    7077:	48 89 c7             	mov    %rax,%rdi
    707a:	e8 db d7 ff ff       	call   485a <_ZSt3maxImERKT_S2_S2_>
    707f:	48 8b 10             	mov    (%rax),%rdx
    7082:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7086:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
    708a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    708e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7092:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7096:	48 89 d6             	mov    %rdx,%rsi
    7099:	48 89 c7             	mov    %rax,%rdi
    709c:	e8 0b 15 00 00       	call   85ac <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    70a1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    70a5:	48 89 02             	mov    %rax,(%rdx)
      _Map_pointer __nstart = (this->_M_impl._M_map
    70a8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70ac:	48 8b 10             	mov    (%rax),%rdx
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
    70af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70b3:	48 8b 40 08          	mov    0x8(%rax),%rax
    70b7:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    70bb:	48 d1 e8             	shr    %rax
    70be:	48 c1 e0 03          	shl    $0x3,%rax
      _Map_pointer __nstart = (this->_M_impl._M_map
    70c2:	48 01 d0             	add    %rdx,%rax
    70c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      _Map_pointer __nfinish = __nstart + __num_nodes;
    70c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70cd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    70d4:	00 
    70d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    70d9:	48 01 d0             	add    %rdx,%rax
    70dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	{ _M_create_nodes(__nstart, __nfinish); }
    70e0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    70e4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    70e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70ec:	48 89 ce             	mov    %rcx,%rsi
    70ef:	48 89 c7             	mov    %rax,%rdi
    70f2:	e8 21 15 00 00       	call   8618 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>
      this->_M_impl._M_start._M_set_node(__nstart);
    70f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70fb:	48 8d 50 10          	lea    0x10(%rax),%rdx
    70ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7103:	48 89 c6             	mov    %rax,%rsi
    7106:	48 89 d7             	mov    %rdx,%rdi
    7109:	e8 8a 15 00 00       	call   8698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__nfinish - 1);
    710e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7112:	48 83 c0 30          	add    $0x30,%rax
    7116:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    711a:	48 83 ea 08          	sub    $0x8,%rdx
    711e:	48 89 d6             	mov    %rdx,%rsi
    7121:	48 89 c7             	mov    %rax,%rdi
    7124:	e8 6f 15 00 00       	call   8698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
    7129:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    712d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7131:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7135:	48 89 50 10          	mov    %rdx,0x10(%rax)
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    7139:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    713d:	48 8b 58 38          	mov    0x38(%rax),%rbx
					% __deque_buf_size(sizeof(_Tp)));
    7141:	bf 20 00 00 00       	mov    $0x20,%edi
    7146:	e8 a6 ca ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    714b:	48 89 c1             	mov    %rax,%rcx
    714e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7152:	ba 00 00 00 00       	mov    $0x0,%edx
    7157:	48 f7 f1             	div    %rcx
    715a:	48 89 d1             	mov    %rdx,%rcx
    715d:	48 89 c8             	mov    %rcx,%rax
					+ __num_elements
    7160:	48 c1 e0 05          	shl    $0x5,%rax
    7164:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    7168:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    716c:	48 89 50 30          	mov    %rdx,0x30(%rax)
    }
    7170:	eb 55                	jmp    71c7 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm+0x1a1>
      __catch(...)
    7172:	48 89 c7             	mov    %rax,%rdi
    7175:	e8 56 bf ff ff       	call   30d0 <__cxa_begin_catch@plt>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    717a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    717e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7182:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7186:	48 8b 08             	mov    (%rax),%rcx
    7189:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    718d:	48 89 ce             	mov    %rcx,%rsi
    7190:	48 89 c7             	mov    %rax,%rdi
    7193:	e8 7e 00 00 00       	call   7216 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
	  this->_M_impl._M_map = _Map_pointer();
    7198:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    719c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	  this->_M_impl._M_map_size = 0;
    71a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    71a7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    71ae:	00 
	  __throw_exception_again;
    71af:	e8 5c c2 ff ff       	call   3410 <__cxa_rethrow@plt>
      __catch(...)
    71b4:	48 89 c3             	mov    %rax,%rbx
    71b7:	e8 c4 c2 ff ff       	call   3480 <__cxa_end_catch@plt>
    71bc:	48 89 d8             	mov    %rbx,%rax
    71bf:	48 89 c7             	mov    %rax,%rdi
    71c2:	e8 09 c3 ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    71c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    71cb:	c9                   	leave
    71cc:	c3                   	ret
    71cd:	90                   	nop

00000000000071ce <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    71ce:	55                   	push   %rbp
    71cf:	48 89 e5             	mov    %rsp,%rbp
    71d2:	48 83 ec 30          	sub    $0x30,%rsp
    71d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    71da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    71de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    71e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    71ea:	eb 1b                	jmp    7207 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x39>
	_M_deallocate_node(*__n);
    71ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f0:	48 8b 10             	mov    (%rax),%rdx
    71f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71f7:	48 89 d6             	mov    %rdx,%rsi
    71fa:	48 89 c7             	mov    %rax,%rdi
    71fd:	e8 e6 14 00 00       	call   86e8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    7202:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    7207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    720b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    720f:	72 db                	jb     71ec <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x1e>
    }
    7211:	90                   	nop
    7212:	90                   	nop
    7213:	c9                   	leave
    7214:	c3                   	ret
    7215:	90                   	nop

0000000000007216 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>:
      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
    7216:	55                   	push   %rbp
    7217:	48 89 e5             	mov    %rsp,%rbp
    721a:	48 83 ec 30          	sub    $0x30,%rsp
    721e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7222:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7226:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    722a:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    722e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7232:	48 89 d6             	mov    %rdx,%rsi
    7235:	48 89 c7             	mov    %rax,%rdi
    7238:	e8 df 14 00 00       	call   871c <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
    723d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7241:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7245:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    7249:	48 89 ce             	mov    %rcx,%rsi
    724c:	48 89 c7             	mov    %rax,%rdi
    724f:	e8 17 15 00 00       	call   876b <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>
      }
    7254:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    7258:	48 89 c7             	mov    %rax,%rdi
    725b:	e8 f0 14 00 00       	call   8750 <_ZNSaIPSt8functionIFvvEEED1Ev>
    7260:	c9                   	leave
    7261:	c3                   	ret

0000000000007262 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
    7262:	55                   	push   %rbp
    7263:	48 89 e5             	mov    %rsp,%rbp
    7266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    726a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
    726e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7272:	48 8b 10             	mov    (%rax),%rdx
    7275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7279:	48 89 10             	mov    %rdx,(%rax)
    727c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7280:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7288:	48 89 50 08          	mov    %rdx,0x8(%rax)
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
    728c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7290:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7298:	48 89 50 10          	mov    %rdx,0x10(%rax)
    729c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72a0:	48 8b 50 18          	mov    0x18(%rax),%rdx
    72a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72a8:	48 89 50 18          	mov    %rdx,0x18(%rax)
    72ac:	90                   	nop
    72ad:	5d                   	pop    %rbp
    72ae:	c3                   	ret
    72af:	90                   	nop

00000000000072b0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>:
	}
      }

   template<typename _Tp, typename _Alloc>
     void
     deque<_Tp, _Alloc>::
    72b0:	55                   	push   %rbp
    72b1:	48 89 e5             	mov    %rsp,%rbp
    72b4:	41 54                	push   %r12
    72b6:	53                   	push   %rbx
    72b7:	48 83 ec 30          	sub    $0x30,%rsp
    72bb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    72bf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    72c3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
     _M_destroy_data_aux(iterator __first, iterator __last)
     {
       for (_Map_pointer __node = __first._M_node + 1;
    72c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72cb:	48 8b 40 18          	mov    0x18(%rax),%rax
    72cf:	48 83 c0 08          	add    $0x8,%rax
    72d3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    72d7:	eb 3d                	jmp    7316 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x66>
	    __node < __last._M_node; ++__node)
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
		       _M_get_Tp_allocator());
    72d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72dd:	48 89 c7             	mov    %rax,%rdi
    72e0:	e8 cb e9 ff ff       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    72e5:	48 89 c3             	mov    %rax,%rbx
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
    72e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72ec:	4c 8b 20             	mov    (%rax),%r12
    72ef:	e8 a5 14 00 00       	call   8799 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>
    72f4:	48 c1 e0 05          	shl    $0x5,%rax
    72f8:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
    72fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7300:	48 8b 00             	mov    (%rax),%rax
    7303:	48 89 da             	mov    %rbx,%rdx
    7306:	48 89 ce             	mov    %rcx,%rsi
    7309:	48 89 c7             	mov    %rax,%rdi
    730c:	e8 98 14 00 00       	call   87a9 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
       for (_Map_pointer __node = __first._M_node + 1;
    7311:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	    __node < __last._M_node; ++__node)
    7316:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    731a:	48 8b 40 18          	mov    0x18(%rax),%rax
    731e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    7322:	72 b5                	jb     72d9 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x29>

       if (__first._M_node != __last._M_node)
    7324:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7328:	48 8b 50 18          	mov    0x18(%rax),%rdx
    732c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7330:	48 8b 40 18          	mov    0x18(%rax),%rax
    7334:	48 39 c2             	cmp    %rax,%rdx
    7337:	74 54                	je     738d <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0xdd>
	 {
	   std::_Destroy(__first._M_cur, __first._M_last,
			 _M_get_Tp_allocator());
    7339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    733d:	48 89 c7             	mov    %rax,%rdi
    7340:	e8 6b e9 ff ff       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7345:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__first._M_cur, __first._M_last,
    7348:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    734c:	48 8b 48 10          	mov    0x10(%rax),%rcx
    7350:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7354:	48 8b 00             	mov    (%rax),%rax
    7357:	48 89 ce             	mov    %rcx,%rsi
    735a:	48 89 c7             	mov    %rax,%rdi
    735d:	e8 47 14 00 00       	call   87a9 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	   std::_Destroy(__last._M_first, __last._M_cur,
			 _M_get_Tp_allocator());
    7362:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7366:	48 89 c7             	mov    %rax,%rdi
    7369:	e8 42 e9 ff ff       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    736e:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__last._M_first, __last._M_cur,
    7371:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7375:	48 8b 08             	mov    (%rax),%rcx
    7378:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    737c:	48 8b 40 08          	mov    0x8(%rax),%rax
    7380:	48 89 ce             	mov    %rcx,%rsi
    7383:	48 89 c7             	mov    %rax,%rdi
    7386:	e8 1e 14 00 00       	call   87a9 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	 }
       else
	 std::_Destroy(__first._M_cur, __last._M_cur,
		       _M_get_Tp_allocator());
     }
    738b:	eb 28                	jmp    73b5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x105>
		       _M_get_Tp_allocator());
    738d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7391:	48 89 c7             	mov    %rax,%rdi
    7394:	e8 17 e9 ff ff       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7399:	48 89 c2             	mov    %rax,%rdx
	 std::_Destroy(__first._M_cur, __last._M_cur,
    739c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    73a0:	48 8b 08             	mov    (%rax),%rcx
    73a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73a7:	48 8b 00             	mov    (%rax),%rax
    73aa:	48 89 ce             	mov    %rcx,%rsi
    73ad:	48 89 c7             	mov    %rax,%rdi
    73b0:	e8 f4 13 00 00       	call   87a9 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
     }
    73b5:	90                   	nop
    73b6:	48 83 c4 30          	add    $0x30,%rsp
    73ba:	5b                   	pop    %rbx
    73bb:	41 5c                	pop    %r12
    73bd:	5d                   	pop    %rbp
    73be:	c3                   	ret
    73bf:	90                   	nop

00000000000073c0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    73c0:	55                   	push   %rbp
    73c1:	48 89 e5             	mov    %rsp,%rbp
    73c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73c8:	90                   	nop
    73c9:	5d                   	pop    %rbp
    73ca:	c3                   	ret

00000000000073cb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    73cb:	55                   	push   %rbp
    73cc:	48 89 e5             	mov    %rsp,%rbp
    73cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    73d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73d7:	48 8b 40 18          	mov    0x18(%rax),%rax
    73db:	5d                   	pop    %rbp
    73dc:	c3                   	ret

00000000000073dd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    73dd:	55                   	push   %rbp
    73de:	48 89 e5             	mov    %rsp,%rbp
    73e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    73e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73e9:	48 8b 40 10          	mov    0x10(%rax),%rax
    73ed:	5d                   	pop    %rbp
    73ee:	c3                   	ret
    73ef:	90                   	nop

00000000000073f0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    73f0:	55                   	push   %rbp
    73f1:	48 89 e5             	mov    %rsp,%rbp
    73f4:	48 83 ec 10          	sub    $0x10,%rsp
    73f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    7400:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7408:	48 89 d6             	mov    %rdx,%rsi
    740b:	48 89 c7             	mov    %rax,%rdi
    740e:	e8 c1 13 00 00       	call   87d4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>
	_M_put_node(__p);
    7413:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    741b:	48 89 d6             	mov    %rdx,%rsi
    741e:	48 89 c7             	mov    %rax,%rdi
    7421:	e8 ec 13 00 00       	call   8812 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
      }
    7426:	90                   	nop
    7427:	c9                   	leave
    7428:	c3                   	ret
    7429:	90                   	nop

000000000000742a <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    742a:	55                   	push   %rbp
    742b:	48 89 e5             	mov    %rsp,%rbp
    742e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    7432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7436:	48 8b 40 10          	mov    0x10(%rax),%rax
    743a:	5d                   	pop    %rbp
    743b:	c3                   	ret

000000000000743c <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>:
      _M_access() noexcept
    743c:	55                   	push   %rbp
    743d:	48 89 e5             	mov    %rsp,%rbp
    7440:	48 83 ec 10          	sub    $0x10,%rsp
    7444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    7448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    744c:	48 89 c7             	mov    %rax,%rdi
    744f:	e8 a2 c6 ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    7454:	c9                   	leave
    7455:	c3                   	ret

0000000000007456 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    7456:	55                   	push   %rbp
    7457:	48 89 e5             	mov    %rsp,%rbp
    745a:	48 83 ec 20          	sub    $0x20,%rsp
    745e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7462:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7466:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    746a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    746e:	48 89 c7             	mov    %rax,%rdi
    7471:	e8 d2 13 00 00       	call   8848 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7476:	48 89 c2             	mov    %rax,%rdx
    7479:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    747d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7481:	48 89 ce             	mov    %rcx,%rsi
    7484:	48 89 c7             	mov    %rax,%rdi
    7487:	e8 ca 13 00 00       	call   8856 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
	}
    748c:	90                   	nop
    748d:	c9                   	leave
    748e:	c3                   	ret
    748f:	90                   	nop

0000000000007490 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>:
      deque<_Tp, _Alloc>::
    7490:	55                   	push   %rbp
    7491:	48 89 e5             	mov    %rsp,%rbp
    7494:	53                   	push   %rbx
    7495:	48 83 ec 18          	sub    $0x18,%rsp
    7499:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    749d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size() == max_size())
    74a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74a5:	48 89 c7             	mov    %rax,%rdi
    74a8:	e8 23 14 00 00       	call   88d0 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>
    74ad:	48 89 c3             	mov    %rax,%rbx
    74b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74b4:	48 89 c7             	mov    %rax,%rdi
    74b7:	e8 3e 14 00 00       	call   88fa <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>
    74bc:	48 39 c3             	cmp    %rax,%rbx
    74bf:	0f 94 c0             	sete   %al
    74c2:	84 c0                	test   %al,%al
    74c4:	74 0f                	je     74d5 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x45>
	  __throw_length_error(
    74c6:	48 8d 05 33 a2 00 00 	lea    0xa233(%rip),%rax        # 11700 <_ZN6__pstl9execution2v1L5unseqE+0x95>
    74cd:	48 89 c7             	mov    %rax,%rdi
    74d0:	e8 5b bc ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	_M_reserve_map_at_back();
    74d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74d9:	be 01 00 00 00       	mov    $0x1,%esi
    74de:	48 89 c7             	mov    %rax,%rdi
    74e1:	e8 36 14 00 00       	call   891c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
    74e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    74ee:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    74f2:	48 8d 5a 08          	lea    0x8(%rdx),%rbx
    74f6:	48 89 c7             	mov    %rax,%rdi
    74f9:	e8 80 14 00 00       	call   897e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    74fe:	48 89 03             	mov    %rax,(%rbx)
	    _Alloc_traits::construct(this->_M_impl,
    7501:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7505:	48 89 c7             	mov    %rax,%rdi
    7508:	e8 3b 13 00 00       	call   8848 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    750d:	48 89 c2             	mov    %rax,%rdx
    7510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7514:	48 8b 48 30          	mov    0x30(%rax),%rcx
    7518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    751c:	48 89 ce             	mov    %rcx,%rsi
    751f:	48 89 c7             	mov    %rax,%rdi
    7522:	e8 2f ff ff ff       	call   7456 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
    7527:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    752b:	48 83 c0 30          	add    $0x30,%rax
    752f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7533:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    7537:	48 83 c2 08          	add    $0x8,%rdx
    753b:	48 89 d6             	mov    %rdx,%rsi
    753e:	48 89 c7             	mov    %rax,%rdi
    7541:	e8 52 11 00 00       	call   8698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
    7546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    754a:	48 8b 50 38          	mov    0x38(%rax),%rdx
    754e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7552:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    7556:	eb 3e                	jmp    7596 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x106>
	__catch(...)
    7558:	48 89 c7             	mov    %rax,%rdi
    755b:	e8 70 bb ff ff       	call   30d0 <__cxa_begin_catch@plt>
	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
    7560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7564:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7568:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    756c:	48 83 c2 08          	add    $0x8,%rdx
    7570:	48 8b 12             	mov    (%rdx),%rdx
    7573:	48 89 d6             	mov    %rdx,%rsi
    7576:	48 89 c7             	mov    %rax,%rdi
    7579:	e8 6a 11 00 00       	call   86e8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
	    __throw_exception_again;
    757e:	e8 8d be ff ff       	call   3410 <__cxa_rethrow@plt>
	__catch(...)
    7583:	48 89 c3             	mov    %rax,%rbx
    7586:	e8 f5 be ff ff       	call   3480 <__cxa_end_catch@plt>
    758b:	48 89 d8             	mov    %rbx,%rax
    758e:	48 89 c7             	mov    %rax,%rdi
    7591:	e8 3a bf ff ff       	call   34d0 <_Unwind_Resume@plt>
      }
    7596:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    759a:	c9                   	leave
    759b:	c3                   	ret

000000000000759c <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    759c:	55                   	push   %rbp
    759d:	48 89 e5             	mov    %rsp,%rbp
    75a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_cur == __y._M_cur; }
    75a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75ac:	48 8b 10             	mov    (%rax),%rdx
    75af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75b3:	48 8b 00             	mov    (%rax),%rax
    75b6:	48 39 c2             	cmp    %rax,%rdx
    75b9:	0f 94 c0             	sete   %al
    75bc:	5d                   	pop    %rbp
    75bd:	c3                   	ret

00000000000075be <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    75be:	55                   	push   %rbp
    75bf:	48 89 e5             	mov    %rsp,%rbp
    75c2:	48 83 ec 10          	sub    $0x10,%rsp
    75c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    75ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75ce:	48 89 c7             	mov    %rax,%rdi
    75d1:	e8 14 14 00 00       	call   89ea <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    75d6:	48 89 c7             	mov    %rax,%rdi
    75d9:	e8 ca 13 00 00       	call   89a8 <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>
    75de:	c9                   	leave
    75df:	c3                   	ret

00000000000075e0 <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    75e0:	55                   	push   %rbp
    75e1:	48 89 e5             	mov    %rsp,%rbp
    75e4:	48 83 ec 20          	sub    $0x20,%rsp
    75e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    75f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    75f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    75f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75fc:	48 89 d6             	mov    %rdx,%rsi
    75ff:	48 89 c7             	mov    %rax,%rdi
    7602:	e8 f1 13 00 00       	call   89f8 <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>
    7607:	c9                   	leave
    7608:	c3                   	ret
    7609:	90                   	nop

000000000000760a <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    760a:	55                   	push   %rbp
    760b:	48 89 e5             	mov    %rsp,%rbp
    760e:	53                   	push   %rbx
    760f:	48 83 ec 38          	sub    $0x38,%rsp
    7613:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7617:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    761b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    761f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7623:	48 89 c7             	mov    %rax,%rdi
    7626:	e8 93 ff ff ff       	call   75be <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    762b:	48 89 c3             	mov    %rax,%rbx
    762e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7632:	48 89 c7             	mov    %rax,%rdi
    7635:	e8 c0 d4 ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    763a:	48 29 c3             	sub    %rax,%rbx
    763d:	48 89 da             	mov    %rbx,%rdx
    7640:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7644:	48 39 c2             	cmp    %rax,%rdx
    7647:	0f 92 c0             	setb   %al
    764a:	84 c0                	test   %al,%al
    764c:	74 0c                	je     765a <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    764e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7652:	48 89 c7             	mov    %rax,%rdi
    7655:	e8 d6 ba ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    765a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    765e:	48 89 c7             	mov    %rax,%rdi
    7661:	e8 94 d4 ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7666:	48 89 c3             	mov    %rax,%rbx
    7669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    766d:	48 89 c7             	mov    %rax,%rdi
    7670:	e8 85 d4 ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7675:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7679:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    767d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7681:	48 89 d6             	mov    %rdx,%rsi
    7684:	48 89 c7             	mov    %rax,%rdi
    7687:	e8 ce d1 ff ff       	call   485a <_ZSt3maxImERKT_S2_S2_>
    768c:	48 8b 00             	mov    (%rax),%rax
    768f:	48 01 d8             	add    %rbx,%rax
    7692:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    7696:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    769a:	48 89 c7             	mov    %rax,%rdi
    769d:	e8 58 d4 ff ff       	call   4afa <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    76a2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    76a6:	72 12                	jb     76ba <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xb0>
    76a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76ac:	48 89 c7             	mov    %rax,%rdi
    76af:	e8 0a ff ff ff       	call   75be <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    76b4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    76b8:	73 0e                	jae    76c8 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xbe>
    76ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76be:	48 89 c7             	mov    %rax,%rdi
    76c1:	e8 f8 fe ff ff       	call   75be <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    76c6:	eb 04                	jmp    76cc <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xc2>
    76c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    76cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76d0:	c9                   	leave
    76d1:	c3                   	ret

00000000000076d2 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    76d2:	55                   	push   %rbp
    76d3:	48 89 e5             	mov    %rsp,%rbp
    76d6:	48 83 ec 10          	sub    $0x10,%rsp
    76da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    76e2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    76e7:	74 15                	je     76fe <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x2c>
    76e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    76f1:	48 89 d6             	mov    %rdx,%rsi
    76f4:	48 89 c7             	mov    %rax,%rdi
    76f7:	e8 25 13 00 00       	call   8a21 <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>
    76fc:	eb 05                	jmp    7703 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x31>
    76fe:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7703:	c9                   	leave
    7704:	c3                   	ret

0000000000007705 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    7705:	55                   	push   %rbp
    7706:	48 89 e5             	mov    %rsp,%rbp
    7709:	48 83 ec 20          	sub    $0x20,%rsp
    770d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7711:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7715:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    7719:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    771d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7721:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7725:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    7729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    772d:	48 89 c7             	mov    %rax,%rdi
    7730:	e8 16 13 00 00       	call   8a4b <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    7735:	c9                   	leave
    7736:	c3                   	ret
    7737:	90                   	nop

0000000000007738 <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>:
	tuple(_U1&& __a1, _U2&& __a2)
    7738:	55                   	push   %rbp
    7739:	48 89 e5             	mov    %rsp,%rbp
    773c:	41 54                	push   %r12
    773e:	53                   	push   %rbx
    773f:	48 83 ec 20          	sub    $0x20,%rsp
    7743:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7747:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    774b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
    774f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7753:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7757:	48 89 c7             	mov    %rax,%rdi
    775a:	e8 55 ea ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    775f:	49 89 c4             	mov    %rax,%r12
    7762:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7766:	48 89 c7             	mov    %rax,%rdi
    7769:	e8 38 ea ff ff       	call   61a6 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    776e:	4c 89 e2             	mov    %r12,%rdx
    7771:	48 89 c6             	mov    %rax,%rsi
    7774:	48 89 df             	mov    %rbx,%rdi
    7777:	e8 32 13 00 00       	call   8aae <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>
    777c:	90                   	nop
    777d:	48 83 c4 20          	add    $0x20,%rsp
    7781:	5b                   	pop    %rbx
    7782:	41 5c                	pop    %r12
    7784:	5d                   	pop    %rbp
    7785:	c3                   	ret

0000000000007786 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    7786:	55                   	push   %rbp
    7787:	48 89 e5             	mov    %rsp,%rbp
    778a:	53                   	push   %rbx
    778b:	48 83 ec 18          	sub    $0x18,%rsp
    778f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7793:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7797:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    779b:	48 89 c7             	mov    %rax,%rdi
    779e:	e8 69 13 00 00       	call   8b0c <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    77a3:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    77a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77ab:	48 89 c7             	mov    %rax,%rdi
    77ae:	e8 0b 00 00 00       	call   77be <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    77b3:	48 89 18             	mov    %rbx,(%rax)
    77b6:	90                   	nop
    77b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    77bb:	c9                   	leave
    77bc:	c3                   	ret
    77bd:	90                   	nop

00000000000077be <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    77be:	55                   	push   %rbp
    77bf:	48 89 e5             	mov    %rsp,%rbp
    77c2:	48 83 ec 10          	sub    $0x10,%rsp
    77c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ce:	48 89 c7             	mov    %rax,%rdi
    77d1:	e8 51 13 00 00       	call   8b27 <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    77d6:	c9                   	leave
    77d7:	c3                   	ret

00000000000077d8 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    77d8:	55                   	push   %rbp
    77d9:	48 89 e5             	mov    %rsp,%rbp
    77dc:	48 83 ec 10          	sub    $0x10,%rsp
    77e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    77e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77e8:	48 89 c7             	mov    %rax,%rdi
    77eb:	e8 52 13 00 00       	call   8b42 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>
    77f0:	c9                   	leave
    77f1:	c3                   	ret

00000000000077f2 <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    77f2:	55                   	push   %rbp
    77f3:	48 89 e5             	mov    %rsp,%rbp
    77f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    77fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77fe:	5d                   	pop    %rbp
    77ff:	c3                   	ret

0000000000007800 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>:
      operator()(_Tp* __ptr) const
    7800:	55                   	push   %rbp
    7801:	48 89 e5             	mov    %rsp,%rbp
    7804:	48 83 ec 10          	sub    $0x10,%rsp
    7808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    780c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    7810:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7814:	48 85 c0             	test   %rax,%rax
    7817:	74 0f                	je     7828 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_+0x28>
    7819:	48 8b 10             	mov    (%rax),%rdx
    781c:	48 83 c2 08          	add    $0x8,%rdx
    7820:	48 8b 12             	mov    (%rdx),%rdx
    7823:	48 89 c7             	mov    %rax,%rdi
    7826:	ff d2                	call   *%rdx
      }
    7828:	90                   	nop
    7829:	c9                   	leave
    782a:	c3                   	ret
    782b:	90                   	nop

000000000000782c <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    782c:	55                   	push   %rbp
    782d:	48 89 e5             	mov    %rsp,%rbp
    7830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_cur; }
    7834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7838:	48 8b 00             	mov    (%rax),%rax
    783b:	5d                   	pop    %rbp
    783c:	c3                   	ret
    783d:	90                   	nop

000000000000783e <_ZNKSt8functionIFvvEEcvbEv>:
      explicit operator bool() const noexcept
    783e:	55                   	push   %rbp
    783f:	48 89 e5             	mov    %rsp,%rbp
    7842:	48 83 ec 10          	sub    $0x10,%rsp
    7846:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return !_M_empty(); }
    784a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    784e:	48 89 c7             	mov    %rax,%rdi
    7851:	e8 f6 c2 ff ff       	call   3b4c <_ZNKSt14_Function_base8_M_emptyEv>
    7856:	83 f0 01             	xor    $0x1,%eax
    7859:	c9                   	leave
    785a:	c3                   	ret

000000000000785b <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>:
    swap(_Tp& __a, _Tp& __b)
    785b:	55                   	push   %rbp
    785c:	48 89 e5             	mov    %rsp,%rbp
    785f:	48 83 ec 20          	sub    $0x20,%rsp
    7863:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7867:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    786b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    786f:	48 89 c7             	mov    %rax,%rdi
    7872:	e8 e5 12 00 00       	call   8b5c <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    7877:	48 8b 50 08          	mov    0x8(%rax),%rdx
    787b:	48 8b 00             	mov    (%rax),%rax
    787e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7882:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    7886:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    788a:	48 89 c7             	mov    %rax,%rdi
    788d:	e8 ca 12 00 00       	call   8b5c <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    7892:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7896:	48 8b 50 08          	mov    0x8(%rax),%rdx
    789a:	48 8b 00             	mov    (%rax),%rax
    789d:	48 89 01             	mov    %rax,(%rcx)
    78a0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      __b = _GLIBCXX_MOVE(__tmp);
    78a4:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    78a8:	48 89 c7             	mov    %rax,%rdi
    78ab:	e8 ac 12 00 00       	call   8b5c <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    78b0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    78b4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    78b8:	48 8b 00             	mov    (%rax),%rax
    78bb:	48 89 01             	mov    %rax,(%rcx)
    78be:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    }
    78c2:	90                   	nop
    78c3:	c9                   	leave
    78c4:	c3                   	ret

00000000000078c5 <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>:
    swap(_Tp& __a, _Tp& __b)
    78c5:	55                   	push   %rbp
    78c6:	48 89 e5             	mov    %rsp,%rbp
    78c9:	48 83 ec 20          	sub    $0x20,%rsp
    78cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    78d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78d9:	48 89 c7             	mov    %rax,%rdi
    78dc:	e8 89 12 00 00       	call   8b6a <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    78e1:	48 8b 00             	mov    (%rax),%rax
    78e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    78e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78ec:	48 89 c7             	mov    %rax,%rdi
    78ef:	e8 76 12 00 00       	call   8b6a <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    78f4:	48 8b 10             	mov    (%rax),%rdx
    78f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78fb:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    78fe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7902:	48 89 c7             	mov    %rax,%rdi
    7905:	e8 60 12 00 00       	call   8b6a <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    790a:	48 8b 10             	mov    (%rax),%rdx
    790d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7911:	48 89 10             	mov    %rdx,(%rax)
    }
    7914:	90                   	nop
    7915:	c9                   	leave
    7916:	c3                   	ret

0000000000007917 <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>:
    swap(_Tp& __a, _Tp& __b)
    7917:	55                   	push   %rbp
    7918:	48 89 e5             	mov    %rsp,%rbp
    791b:	48 83 ec 20          	sub    $0x20,%rsp
    791f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7923:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    7927:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    792b:	48 89 c7             	mov    %rax,%rdi
    792e:	e8 45 12 00 00       	call   8b78 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7933:	48 8b 00             	mov    (%rax),%rax
    7936:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    793a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    793e:	48 89 c7             	mov    %rax,%rdi
    7941:	e8 32 12 00 00       	call   8b78 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7946:	48 8b 10             	mov    (%rax),%rdx
    7949:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    794d:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    7950:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7954:	48 89 c7             	mov    %rax,%rdi
    7957:	e8 1c 12 00 00       	call   8b78 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    795c:	48 8b 10             	mov    (%rax),%rdx
    795f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7963:	48 89 10             	mov    %rdx,(%rax)
    }
    7966:	90                   	nop
    7967:	c9                   	leave
    7968:	c3                   	ret

0000000000007969 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    7969:	55                   	push   %rbp
    796a:	48 89 e5             	mov    %rsp,%rbp
    796d:	48 83 ec 10          	sub    $0x10,%rsp
    7971:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7975:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    7979:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    797d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7981:	48 89 d6             	mov    %rdx,%rsi
    7984:	48 89 c7             	mov    %rax,%rdi
    7987:	e8 fa 11 00 00       	call   8b86 <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>
	}
    798c:	90                   	nop
    798d:	c9                   	leave
    798e:	c3                   	ret
    798f:	90                   	nop

0000000000007990 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>:
    void deque<_Tp, _Alloc>::
    7990:	55                   	push   %rbp
    7991:	48 89 e5             	mov    %rsp,%rbp
    7994:	53                   	push   %rbx
    7995:	48 83 ec 18          	sub    $0x18,%rsp
    7999:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
    799d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79a1:	48 8b 58 10          	mov    0x10(%rax),%rbx
    79a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79a9:	48 89 c7             	mov    %rax,%rdi
    79ac:	e8 ff e2 ff ff       	call   5cb0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    79b1:	48 89 de             	mov    %rbx,%rsi
    79b4:	48 89 c7             	mov    %rax,%rdi
    79b7:	e8 ad ff ff ff       	call   7969 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
      _M_deallocate_node(this->_M_impl._M_start._M_first);
    79bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79c4:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    79c8:	48 89 d6             	mov    %rdx,%rsi
    79cb:	48 89 c7             	mov    %rax,%rdi
    79ce:	e8 15 0d 00 00       	call   86e8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
    79d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79d7:	48 83 c0 10          	add    $0x10,%rax
    79db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79df:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    79e3:	48 83 c2 08          	add    $0x8,%rdx
    79e7:	48 89 d6             	mov    %rdx,%rsi
    79ea:	48 89 c7             	mov    %rax,%rdi
    79ed:	e8 a6 0c 00 00       	call   8698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
    79f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79f6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    79fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79fe:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    7a02:	90                   	nop
    7a03:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a07:	c9                   	leave
    7a08:	c3                   	ret
    7a09:	90                   	nop

0000000000007a0a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>:
      lower_bound(const key_type& __k)
    7a0a:	55                   	push   %rbp
    7a0b:	48 89 e5             	mov    %rsp,%rbp
    7a0e:	53                   	push   %rbx
    7a0f:	48 83 ec 18          	sub    $0x18,%rsp
    7a13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    7a1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a1f:	48 89 c7             	mov    %rax,%rdi
    7a22:	e8 7f 11 00 00       	call   8ba6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    7a27:	48 89 c3             	mov    %rax,%rbx
    7a2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a2e:	48 89 c7             	mov    %rax,%rdi
    7a31:	e8 7a e3 ff ff       	call   5db0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    7a36:	48 89 c6             	mov    %rax,%rsi
    7a39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a41:	48 89 d1             	mov    %rdx,%rcx
    7a44:	48 89 da             	mov    %rbx,%rdx
    7a47:	48 89 c7             	mov    %rax,%rdi
    7a4a:	e8 69 11 00 00       	call   8bb8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>
    7a4f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a53:	c9                   	leave
    7a54:	c3                   	ret
    7a55:	90                   	nop

0000000000007a56 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7a56:	55                   	push   %rbp
    7a57:	48 89 e5             	mov    %rsp,%rbp
    7a5a:	48 83 ec 20          	sub    $0x20,%rsp
    7a5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    7a62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a66:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7a6a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7a6e:	48 89 d6             	mov    %rdx,%rsi
    7a71:	48 89 c7             	mov    %rax,%rdi
    7a74:	e8 11 06 00 00       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    7a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a7d:	c9                   	leave
    7a7e:	c3                   	ret
    7a7f:	90                   	nop

0000000000007a80 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>:
      key_comp() const
    7a80:	55                   	push   %rbp
    7a81:	48 89 e5             	mov    %rsp,%rbp
    7a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    7a88:	90                   	nop
    7a89:	5d                   	pop    %rbp
    7a8a:	c3                   	ret
    7a8b:	90                   	nop

0000000000007a8c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr()
    7a8c:	55                   	push   %rbp
    7a8d:	48 89 e5             	mov    %rsp,%rbp
    7a90:	48 83 ec 10          	sub    $0x10,%rsp
    7a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    7a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a9c:	48 83 c0 20          	add    $0x20,%rax
    7aa0:	48 89 c7             	mov    %rax,%rdi
    7aa3:	e8 a6 11 00 00       	call   8c4e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    7aa8:	c9                   	leave
    7aa9:	c3                   	ret

0000000000007aaa <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7aaa:	55                   	push   %rbp
    7aab:	48 89 e5             	mov    %rsp,%rbp
    7aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ab6:	5d                   	pop    %rbp
    7ab7:	c3                   	ret

0000000000007ab8 <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    7ab8:	55                   	push   %rbp
    7ab9:	48 89 e5             	mov    %rsp,%rbp
    7abc:	53                   	push   %rbx
    7abd:	48 83 ec 18          	sub    $0x18,%rsp
    7ac1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ac5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    7ac9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7acd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ad1:	48 89 c7             	mov    %rax,%rdi
    7ad4:	e8 d1 ff ff ff       	call   7aaa <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    7ad9:	48 89 c6             	mov    %rax,%rsi
    7adc:	48 89 df             	mov    %rbx,%rdi
    7adf:	e8 84 11 00 00       	call   8c68 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>
    7ae4:	90                   	nop
    7ae5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ae9:	c9                   	leave
    7aea:	c3                   	ret

0000000000007aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7aeb:	55                   	push   %rbp
    7aec:	48 89 e5             	mov    %rsp,%rbp
    7aef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7af7:	5d                   	pop    %rbp
    7af8:	c3                   	ret

0000000000007af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7af9:	55                   	push   %rbp
    7afa:	48 89 e5             	mov    %rsp,%rbp
    7afd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b05:	5d                   	pop    %rbp
    7b06:	c3                   	ret

0000000000007b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7b07:	55                   	push   %rbp
    7b08:	48 89 e5             	mov    %rsp,%rbp
    7b0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b13:	5d                   	pop    %rbp
    7b14:	c3                   	ret
    7b15:	90                   	nop

0000000000007b16 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    7b16:	55                   	push   %rbp
    7b17:	48 89 e5             	mov    %rsp,%rbp
    7b1a:	41 54                	push   %r12
    7b1c:	53                   	push   %rbx
    7b1d:	48 83 ec 30          	sub    $0x30,%rsp
    7b21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b25:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7b29:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7b2d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    7b31:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    7b35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7b3d:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    7b40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b44:	48 89 c7             	mov    %rax,%rdi
    7b47:	e8 bb ff ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7b4c:	49 89 c4             	mov    %rax,%r12
    7b4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b53:	48 89 c7             	mov    %rax,%rdi
    7b56:	e8 9e ff ff ff       	call   7af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7b5b:	48 89 c3             	mov    %rax,%rbx
    7b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b62:	48 89 c7             	mov    %rax,%rdi
    7b65:	e8 81 ff ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7b6a:	48 89 c6             	mov    %rax,%rsi
    7b6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b71:	4c 89 e1             	mov    %r12,%rcx
    7b74:	48 89 da             	mov    %rbx,%rdx
    7b77:	48 89 c7             	mov    %rax,%rdi
    7b7a:	e8 1d 11 00 00       	call   8c9c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>
    7b7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b83:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    7b87:	90                   	nop
    7b88:	48 83 c4 30          	add    $0x30,%rsp
    7b8c:	5b                   	pop    %rbx
    7b8d:	41 5c                	pop    %r12
    7b8f:	5d                   	pop    %rbp
    7b90:	c3                   	ret
    7b91:	90                   	nop

0000000000007b92 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    7b92:	55                   	push   %rbp
    7b93:	48 89 e5             	mov    %rsp,%rbp
    7b96:	48 83 ec 10          	sub    $0x10,%rsp
    7b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    7b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ba2:	48 8b 40 08          	mov    0x8(%rax),%rax
    7ba6:	48 85 c0             	test   %rax,%rax
    7ba9:	74 1a                	je     7bc5 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    7bab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7baf:	48 8b 00             	mov    (%rax),%rax
    7bb2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7bb6:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7bba:	48 89 d6             	mov    %rdx,%rsi
    7bbd:	48 89 c7             	mov    %rax,%rdi
    7bc0:	e8 2b f8 ff ff       	call   73f0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	}
    7bc5:	90                   	nop
    7bc6:	c9                   	leave
    7bc7:	c3                   	ret

0000000000007bc8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7bc8:	55                   	push   %rbp
    7bc9:	48 89 e5             	mov    %rsp,%rbp
    7bcc:	53                   	push   %rbx
    7bcd:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    7bd4:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    7bdb:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    7be2:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    7be9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7bf0:	48 89 c7             	mov    %rax,%rdi
    7bf3:	e8 20 11 00 00       	call   8d18 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>
    7bf8:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    7bff:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7c06:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c0d:	48 89 c7             	mov    %rax,%rdi
    7c10:	e8 91 0f 00 00       	call   8ba6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    7c15:	48 39 c3             	cmp    %rax,%rbx
    7c18:	0f 94 c0             	sete   %al
    7c1b:	84 c0                	test   %al,%al
    7c1d:	0f 84 c8 00 00 00    	je     7ceb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x123>
	  if (size() > 0
    7c23:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c2a:	48 89 c7             	mov    %rax,%rdi
    7c2d:	e8 0e 11 00 00       	call   8d40 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    7c32:	48 85 c0             	test   %rax,%rax
    7c35:	74 44                	je     7c7b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    7c37:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7c3e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c45:	48 89 c7             	mov    %rax,%rdi
    7c48:	e8 05 11 00 00       	call   8d52 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7c4d:	48 8b 00             	mov    (%rax),%rax
    7c50:	48 89 c7             	mov    %rax,%rdi
    7c53:	e8 0c 11 00 00       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7c58:	48 89 c1             	mov    %rax,%rcx
    7c5b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7c62:	48 89 c2             	mov    %rax,%rdx
    7c65:	48 89 ce             	mov    %rcx,%rsi
    7c68:	48 89 df             	mov    %rbx,%rdi
    7c6b:	e8 c6 e8 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7c70:	84 c0                	test   %al,%al
    7c72:	74 07                	je     7c7b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    7c74:	b8 01 00 00 00       	mov    $0x1,%eax
    7c79:	eb 05                	jmp    7c80 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb8>
    7c7b:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    7c80:	84 c0                	test   %al,%al
    7c82:	74 49                	je     7ccd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x105>
	    return _Res(0, _M_rightmost());
    7c84:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7c8b:	48 89 c7             	mov    %rax,%rdi
    7c8e:	e8 bf 10 00 00       	call   8d52 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7c93:	48 89 c2             	mov    %rax,%rdx
    7c96:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    7c9d:	00 00 00 00 
    7ca1:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    7ca8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    7caf:	48 89 ce             	mov    %rcx,%rsi
    7cb2:	48 89 c7             	mov    %rax,%rdi
    7cb5:	e8 c4 10 00 00       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7cba:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    7cc1:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    7cc8:	e9 43 03 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7ccd:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7cd4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7cdb:	48 89 d6             	mov    %rdx,%rsi
    7cde:	48 89 c7             	mov    %rax,%rdi
    7ce1:	e8 c8 10 00 00       	call   8dae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7ce6:	e9 25 03 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    7ceb:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7cf2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7cf9:	48 89 c7             	mov    %rax,%rdi
    7cfc:	e8 63 10 00 00       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7d01:	48 89 c2             	mov    %rax,%rdx
    7d04:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7d0b:	48 89 c6             	mov    %rax,%rsi
    7d0e:	48 89 df             	mov    %rbx,%rdi
    7d11:	e8 20 e8 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7d16:	84 c0                	test   %al,%al
    7d18:	0f 84 66 01 00 00    	je     7e84 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x2bc>
	  iterator __before = __pos;
    7d1e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7d25:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    7d2c:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7d33:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7d3a:	48 89 c7             	mov    %rax,%rdi
    7d3d:	e8 e2 11 00 00       	call   8f24 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7d42:	48 8b 00             	mov    (%rax),%rax
    7d45:	48 39 c3             	cmp    %rax,%rbx
    7d48:	0f 94 c0             	sete   %al
    7d4b:	84 c0                	test   %al,%al
    7d4d:	74 4c                	je     7d9b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    7d4f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7d56:	48 89 c7             	mov    %rax,%rdi
    7d59:	e8 c6 11 00 00       	call   8f24 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7d5e:	48 89 c3             	mov    %rax,%rbx
    7d61:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7d68:	48 89 c7             	mov    %rax,%rdi
    7d6b:	e8 b4 11 00 00       	call   8f24 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7d70:	48 89 c1             	mov    %rax,%rcx
    7d73:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7d7a:	48 89 da             	mov    %rbx,%rdx
    7d7d:	48 89 ce             	mov    %rcx,%rsi
    7d80:	48 89 c7             	mov    %rax,%rdi
    7d83:	e8 ae 11 00 00       	call   8f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7d88:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7d8f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    7d96:	e9 75 02 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    7d9b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7da2:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    7da9:	48 89 c7             	mov    %rax,%rdi
    7dac:	e8 c9 11 00 00       	call   8f7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
    7db1:	48 8b 00             	mov    (%rax),%rax
    7db4:	48 89 c7             	mov    %rax,%rdi
    7db7:	e8 a8 0f 00 00       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7dbc:	48 89 c1             	mov    %rax,%rcx
    7dbf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7dc6:	48 89 c2             	mov    %rax,%rdx
    7dc9:	48 89 ce             	mov    %rcx,%rsi
    7dcc:	48 89 df             	mov    %rbx,%rdi
    7dcf:	e8 62 e7 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7dd4:	84 c0                	test   %al,%al
    7dd6:	0f 84 8a 00 00 00    	je     7e66 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    7ddc:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    7de3:	48 89 c7             	mov    %rax,%rdi
    7de6:	e8 e0 f5 ff ff       	call   73cb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    7deb:	48 85 c0             	test   %rax,%rax
    7dee:	0f 94 c0             	sete   %al
    7df1:	84 c0                	test   %al,%al
    7df3:	74 3e                	je     7e33 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x26b>
		return _Res(0, __before._M_node);
    7df5:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    7dfc:	00 00 00 00 
    7e00:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    7e07:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    7e0e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    7e15:	48 89 ce             	mov    %rcx,%rsi
    7e18:	48 89 c7             	mov    %rax,%rdi
    7e1b:	e8 5e 0f 00 00       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7e20:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7e27:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    7e2e:	e9 dd 01 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    7e33:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    7e3a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    7e41:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7e48:	48 89 ce             	mov    %rcx,%rsi
    7e4b:	48 89 c7             	mov    %rax,%rdi
    7e4e:	e8 e3 10 00 00       	call   8f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7e53:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7e5a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    7e61:	e9 aa 01 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7e66:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7e6d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e74:	48 89 d6             	mov    %rdx,%rsi
    7e77:	48 89 c7             	mov    %rax,%rdi
    7e7a:	e8 2f 0f 00 00       	call   8dae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7e7f:	e9 8c 01 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    7e84:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7e8b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7e92:	48 89 c7             	mov    %rax,%rdi
    7e95:	e8 ca 0e 00 00       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7e9a:	48 89 c1             	mov    %rax,%rcx
    7e9d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7ea4:	48 89 c2             	mov    %rax,%rdx
    7ea7:	48 89 ce             	mov    %rcx,%rsi
    7eaa:	48 89 df             	mov    %rbx,%rdi
    7ead:	e8 84 e6 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7eb2:	84 c0                	test   %al,%al
    7eb4:	0f 84 2c 01 00 00    	je     7fe6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x41e>
	  iterator __after = __pos;
    7eba:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7ec1:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    7ec8:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7ecf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7ed6:	48 89 c7             	mov    %rax,%rdi
    7ed9:	e8 74 0e 00 00       	call   8d52 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7ede:	48 8b 00             	mov    (%rax),%rax
    7ee1:	48 39 c3             	cmp    %rax,%rbx
    7ee4:	0f 94 c0             	sete   %al
    7ee7:	84 c0                	test   %al,%al
    7ee9:	74 3a                	je     7f25 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x35d>
	    return _Res(0, _M_rightmost());
    7eeb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7ef2:	48 89 c7             	mov    %rax,%rdi
    7ef5:	e8 58 0e 00 00       	call   8d52 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7efa:	48 89 c2             	mov    %rax,%rdx
    7efd:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    7f04:	00 
    7f05:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    7f09:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7f0d:	48 89 ce             	mov    %rcx,%rsi
    7f10:	48 89 c7             	mov    %rax,%rdi
    7f13:	e8 66 0e 00 00       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7f18:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7f1c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    7f20:	e9 eb 00 00 00       	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    7f25:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7f2c:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    7f33:	48 89 c7             	mov    %rax,%rdi
    7f36:	e8 67 10 00 00       	call   8fa2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>
    7f3b:	48 8b 00             	mov    (%rax),%rax
    7f3e:	48 89 c7             	mov    %rax,%rdi
    7f41:	e8 1e 0e 00 00       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7f46:	48 89 c2             	mov    %rax,%rdx
    7f49:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7f50:	48 89 c6             	mov    %rax,%rsi
    7f53:	48 89 df             	mov    %rbx,%rdi
    7f56:	e8 db e5 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7f5b:	84 c0                	test   %al,%al
    7f5d:	74 6c                	je     7fcb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    7f5f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7f66:	48 89 c7             	mov    %rax,%rdi
    7f69:	e8 5d f4 ff ff       	call   73cb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    7f6e:	48 85 c0             	test   %rax,%rax
    7f71:	0f 94 c0             	sete   %al
    7f74:	84 c0                	test   %al,%al
    7f76:	74 2c                	je     7fa4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x3dc>
		return _Res(0, __pos._M_node);
    7f78:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7f7f:	00 
    7f80:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    7f87:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    7f8b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7f8f:	48 89 ce             	mov    %rcx,%rsi
    7f92:	48 89 c7             	mov    %rax,%rdi
    7f95:	e8 e4 0d 00 00       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7f9a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7f9e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    7fa2:	eb 6c                	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__after._M_node, __after._M_node);
    7fa4:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    7fab:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    7fb2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7fb6:	48 89 ce             	mov    %rcx,%rsi
    7fb9:	48 89 c7             	mov    %rax,%rdi
    7fbc:	e8 75 0f 00 00       	call   8f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7fc1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7fc5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7fc9:	eb 45                	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7fcb:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7fd2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7fd9:	48 89 d6             	mov    %rdx,%rsi
    7fdc:	48 89 c7             	mov    %rax,%rdi
    7fdf:	e8 ca 0d 00 00       	call   8dae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7fe4:	eb 2a                	jmp    8010 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	return _Res(__pos._M_node, 0);
    7fe6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7fed:	00 
    7fee:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7ff2:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    7ff9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7ffd:	48 89 ce             	mov    %rcx,%rsi
    8000:	48 89 c7             	mov    %rax,%rdi
    8003:	e8 76 0d 00 00       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8008:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    800c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    8010:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8014:	c9                   	leave
    8015:	c3                   	ret

0000000000008016 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    8016:	55                   	push   %rbp
    8017:	48 89 e5             	mov    %rsp,%rbp
    801a:	48 83 ec 10          	sub    $0x10,%rsp
    801e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    8022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8026:	48 8b 40 08          	mov    0x8(%rax),%rax
    802a:	48 89 c7             	mov    %rax,%rdi
    802d:	e8 98 0f 00 00       	call   8fca <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8032:	c9                   	leave
    8033:	c3                   	ret

0000000000008034 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    8034:	55                   	push   %rbp
    8035:	48 89 e5             	mov    %rsp,%rbp
    8038:	48 83 ec 30          	sub    $0x30,%rsp
    803c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8040:	48 89 d1             	mov    %rdx,%rcx
    8043:	48 89 f0             	mov    %rsi,%rax
    8046:	48 89 fa             	mov    %rdi,%rdx
    8049:	48 89 ca             	mov    %rcx,%rdx
    804c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8050:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    8054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8058:	48 8b 00             	mov    (%rax),%rax
    805b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    805f:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    8063:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8067:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    806b:	48 89 c7             	mov    %rax,%rdi
    806e:	e8 83 0f 00 00       	call   8ff6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>
    8073:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    8077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    807b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8082:	00 
	  return __it;
    8083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    8087:	c9                   	leave
    8088:	c3                   	ret
    8089:	90                   	nop

000000000000808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    808a:	55                   	push   %rbp
    808b:	48 89 e5             	mov    %rsp,%rbp
    808e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8092:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    8096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    809a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    809e:	48 89 10             	mov    %rdx,(%rax)
    80a1:	90                   	nop
    80a2:	5d                   	pop    %rbp
    80a3:	c3                   	ret

00000000000080a4 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    80a4:	55                   	push   %rbp
    80a5:	48 89 e5             	mov    %rsp,%rbp
    80a8:	48 83 ec 10          	sub    $0x10,%rsp
    80ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    80b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b4:	48 89 c7             	mov    %rax,%rdi
    80b7:	e8 fe 0f 00 00       	call   90ba <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>
    80bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80c0:	48 89 c7             	mov    %rax,%rdi
    80c3:	e8 0e 10 00 00       	call   90d6 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>
    80c8:	90                   	nop
    80c9:	c9                   	leave
    80ca:	c3                   	ret

00000000000080cb <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    80cb:	55                   	push   %rbp
    80cc:	48 89 e5             	mov    %rsp,%rbp
    80cf:	48 83 ec 10          	sub    $0x10,%rsp
    80d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    80d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80db:	48 89 c7             	mov    %rax,%rdi
    80de:	e8 09 10 00 00       	call   90ec <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    80e3:	c9                   	leave
    80e4:	c3                   	ret
    80e5:	90                   	nop

00000000000080e6 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    80e6:	55                   	push   %rbp
    80e7:	48 89 e5             	mov    %rsp,%rbp
    80ea:	48 83 ec 10          	sub    $0x10,%rsp
    80ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    80f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80f6:	48 89 c7             	mov    %rax,%rdi
    80f9:	e8 08 10 00 00       	call   9106 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>
    80fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8102:	48 89 c7             	mov    %rax,%rdi
    8105:	e8 18 10 00 00       	call   9122 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>
    810a:	90                   	nop
    810b:	c9                   	leave
    810c:	c3                   	ret

000000000000810d <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    810d:	55                   	push   %rbp
    810e:	48 89 e5             	mov    %rsp,%rbp
    8111:	48 83 ec 10          	sub    $0x10,%rsp
    8115:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    811d:	48 89 c7             	mov    %rax,%rdi
    8120:	e8 13 10 00 00       	call   9138 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8125:	c9                   	leave
    8126:	c3                   	ret
    8127:	90                   	nop

0000000000008128 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    8128:	55                   	push   %rbp
    8129:	48 89 e5             	mov    %rsp,%rbp
    812c:	48 83 ec 10          	sub    $0x10,%rsp
    8130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    8134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8138:	48 89 c7             	mov    %rax,%rdi
    813b:	e8 12 10 00 00       	call   9152 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>
    8140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8144:	48 89 c7             	mov    %rax,%rdi
    8147:	e8 22 10 00 00       	call   916e <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>
    814c:	90                   	nop
    814d:	c9                   	leave
    814e:	c3                   	ret

000000000000814f <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    814f:	55                   	push   %rbp
    8150:	48 89 e5             	mov    %rsp,%rbp
    8153:	48 83 ec 10          	sub    $0x10,%rsp
    8157:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    815b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    815f:	48 89 c7             	mov    %rax,%rdi
    8162:	e8 1d 10 00 00       	call   9184 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8167:	c9                   	leave
    8168:	c3                   	ret
    8169:	90                   	nop

000000000000816a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    816a:	55                   	push   %rbp
    816b:	48 89 e5             	mov    %rsp,%rbp
    816e:	53                   	push   %rbx
    816f:	48 83 ec 18          	sub    $0x18,%rsp
    8173:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8177:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    817b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    817f:	48 89 c7             	mov    %rax,%rdi
    8182:	e8 2d e5 ff ff       	call   66b4 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    8187:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    818b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    818f:	48 89 c7             	mov    %rax,%rdi
    8192:	e8 39 e5 ff ff       	call   66d0 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    8197:	48 89 18             	mov    %rbx,(%rax)
    819a:	90                   	nop
    819b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    819f:	c9                   	leave
    81a0:	c3                   	ret

00000000000081a1 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    81a1:	55                   	push   %rbp
    81a2:	48 89 e5             	mov    %rsp,%rbp
    81a5:	48 83 ec 10          	sub    $0x10,%rsp
    81a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    81ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b1:	48 89 c7             	mov    %rax,%rdi
    81b4:	e8 e5 0f 00 00       	call   919e <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    81b9:	c9                   	leave
    81ba:	c3                   	ret
    81bb:	90                   	nop

00000000000081bc <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    81bc:	55                   	push   %rbp
    81bd:	48 89 e5             	mov    %rsp,%rbp
    81c0:	48 83 ec 10          	sub    $0x10,%rsp
    81c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81cc:	48 89 c7             	mov    %rax,%rdi
    81cf:	e8 e4 0f 00 00       	call   91b8 <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    81d4:	48 8b 00             	mov    (%rax),%rax
    81d7:	c9                   	leave
    81d8:	c3                   	ret
    81d9:	90                   	nop

00000000000081da <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    81da:	55                   	push   %rbp
    81db:	48 89 e5             	mov    %rsp,%rbp
    81de:	53                   	push   %rbx
    81df:	48 83 ec 18          	sub    $0x18,%rsp
    81e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    81eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81ef:	48 89 c7             	mov    %rax,%rdi
    81f2:	e8 51 e6 ff ff       	call   6848 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    81f7:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    81fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81ff:	48 89 c7             	mov    %rax,%rdi
    8202:	e8 5d e6 ff ff       	call   6864 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    8207:	48 89 18             	mov    %rbx,(%rax)
    820a:	90                   	nop
    820b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    820f:	c9                   	leave
    8210:	c3                   	ret

0000000000008211 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8211:	55                   	push   %rbp
    8212:	48 89 e5             	mov    %rsp,%rbp
    8215:	48 83 ec 10          	sub    $0x10,%rsp
    8219:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    821d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8221:	48 89 c7             	mov    %rax,%rdi
    8224:	e8 a9 0f 00 00       	call   91d2 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    8229:	c9                   	leave
    822a:	c3                   	ret
    822b:	90                   	nop

000000000000822c <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    822c:	55                   	push   %rbp
    822d:	48 89 e5             	mov    %rsp,%rbp
    8230:	48 83 ec 10          	sub    $0x10,%rsp
    8234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    823c:	48 89 c7             	mov    %rax,%rdi
    823f:	e8 a8 0f 00 00       	call   91ec <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    8244:	48 8b 00             	mov    (%rax),%rax
    8247:	c9                   	leave
    8248:	c3                   	ret
    8249:	90                   	nop

000000000000824a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    824a:	55                   	push   %rbp
    824b:	48 89 e5             	mov    %rsp,%rbp
    824e:	53                   	push   %rbx
    824f:	48 83 ec 18          	sub    $0x18,%rsp
    8253:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8257:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    825b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    825f:	48 89 c7             	mov    %rax,%rdi
    8262:	e8 fd e4 ff ff       	call   6764 <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    8267:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    826b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    826f:	48 89 c7             	mov    %rax,%rdi
    8272:	e8 09 e5 ff ff       	call   6780 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    8277:	48 89 18             	mov    %rbx,(%rax)
    827a:	90                   	nop
    827b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    827f:	c9                   	leave
    8280:	c3                   	ret

0000000000008281 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8281:	55                   	push   %rbp
    8282:	48 89 e5             	mov    %rsp,%rbp
    8285:	48 83 ec 10          	sub    $0x10,%rsp
    8289:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    828d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8291:	48 89 c7             	mov    %rax,%rdi
    8294:	e8 6d 0f 00 00       	call   9206 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    8299:	c9                   	leave
    829a:	c3                   	ret
    829b:	90                   	nop

000000000000829c <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    829c:	55                   	push   %rbp
    829d:	48 89 e5             	mov    %rsp,%rbp
    82a0:	48 83 ec 10          	sub    $0x10,%rsp
    82a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ac:	48 89 c7             	mov    %rax,%rdi
    82af:	e8 6c 0f 00 00       	call   9220 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    82b4:	48 8b 00             	mov    (%rax),%rax
    82b7:	c9                   	leave
    82b8:	c3                   	ret

00000000000082b9 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    82b9:	55                   	push   %rbp
    82ba:	48 89 e5             	mov    %rsp,%rbp
    82bd:	53                   	push   %rbx
    82be:	48 83 ec 18          	sub    $0x18,%rsp
    82c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82c6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    82ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82ce:	48 89 c7             	mov    %rax,%rdi
    82d1:	e8 20 b8 ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    82d6:	48 89 c6             	mov    %rax,%rsi
    82d9:	bf 08 00 00 00       	mov    $0x8,%edi
    82de:	e8 96 b5 ff ff       	call   3879 <_ZnwmPv>
    82e3:	48 89 c3             	mov    %rax,%rbx
    82e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    82ea:	48 89 c7             	mov    %rax,%rdi
    82ed:	e8 93 e9 ff ff       	call   6c85 <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    82f2:	48 8b 00             	mov    (%rax),%rax
    82f5:	48 89 03             	mov    %rax,(%rbx)
	  }
    82f8:	90                   	nop
    82f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    82fd:	c9                   	leave
    82fe:	c3                   	ret

00000000000082ff <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    82ff:	55                   	push   %rbp
    8300:	48 89 e5             	mov    %rsp,%rbp
    8303:	48 83 ec 20          	sub    $0x20,%rsp
    8307:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    830b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    830f:	48 89 c7             	mov    %rax,%rdi
    8312:	e8 23 0f 00 00       	call   923a <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>
    8317:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    831b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    831f:	48 89 c7             	mov    %rax,%rdi
    8322:	e8 2d 0f 00 00       	call   9254 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>
	}
    8327:	c9                   	leave
    8328:	c3                   	ret

0000000000008329 <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:

#if __cplusplus >= 201703L
  // INVOKE<R>: Invoke a callable object and convert the result to R.
  template<typename _Res, typename _Callable, typename... _Args>
    constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    8329:	55                   	push   %rbp
    832a:	48 89 e5             	mov    %rsp,%rbp
    832d:	48 83 ec 10          	sub    $0x10,%rsp
    8331:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      if constexpr (is_void_v<_Res>)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    8335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8339:	48 89 c7             	mov    %rax,%rdi
    833c:	e8 21 0f 00 00       	call   9262 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    8341:	48 89 c7             	mov    %rax,%rdi
    8344:	e8 27 0f 00 00       	call   9270 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
      else
	return std::__invoke_impl<__type>(__tag{},
					  std::forward<_Callable>(__fn),
					  std::forward<_Args>(__args)...);
    }
    8349:	90                   	nop
    834a:	c9                   	leave
    834b:	c3                   	ret

000000000000834c <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    834c:	55                   	push   %rbp
    834d:	48 89 e5             	mov    %rsp,%rbp
    8350:	48 83 ec 10          	sub    $0x10,%rsp
    8354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    8358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    835c:	48 89 c7             	mov    %rax,%rdi
    835f:	e8 92 b7 ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    8364:	c9                   	leave
    8365:	c3                   	ret

0000000000008366 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    8366:	55                   	push   %rbp
    8367:	48 89 e5             	mov    %rsp,%rbp
    836a:	53                   	push   %rbx
    836b:	48 83 ec 28          	sub    $0x28,%rsp
    836f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8373:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8377:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    837a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    837d:	83 f8 03             	cmp    $0x3,%eax
    8380:	74 72                	je     83f4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    8382:	83 f8 03             	cmp    $0x3,%eax
    8385:	7f 7a                	jg     8401 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    8387:	83 f8 02             	cmp    $0x2,%eax
    838a:	74 48                	je     83d4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    838c:	83 f8 02             	cmp    $0x2,%eax
    838f:	7f 70                	jg     8401 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    8391:	85 c0                	test   %eax,%eax
    8393:	74 07                	je     839c <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    8395:	83 f8 01             	cmp    $0x1,%eax
    8398:	74 1a                	je     83b4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    839a:	eb 65                	jmp    8401 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    839c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83a0:	48 89 c7             	mov    %rax,%rdi
    83a3:	e8 94 f0 ff ff       	call   743c <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    83a8:	48 8d 15 a9 79 01 00 	lea    0x179a9(%rip),%rdx        # 1fd58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    83af:	48 89 10             	mov    %rdx,(%rax)
	      break;
    83b2:	eb 4d                	jmp    8401 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    83b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83b8:	48 89 c7             	mov    %rax,%rdi
    83bb:	e8 3f ff ff ff       	call   82ff <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    83c0:	48 89 c3             	mov    %rax,%rbx
    83c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83c7:	48 89 c7             	mov    %rax,%rdi
    83ca:	e8 7d ff ff ff       	call   834c <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    83cf:	48 89 18             	mov    %rbx,(%rax)
	      break;
    83d2:	eb 2d                	jmp    8401 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    83d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83d8:	48 89 c7             	mov    %rax,%rdi
    83db:	e8 1f ff ff ff       	call   82ff <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    83e0:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    83e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83e7:	48 89 d6             	mov    %rdx,%rsi
    83ea:	48 89 c7             	mov    %rax,%rdi
    83ed:	e8 a1 0e 00 00       	call   9293 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    83f2:	eb 0d                	jmp    8401 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    83f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83f8:	48 89 c7             	mov    %rax,%rdi
    83fb:	e8 c4 0e 00 00       	call   92c4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    8400:	90                   	nop
	  return false;
    8401:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    8406:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    840a:	c9                   	leave
    840b:	c3                   	ret

000000000000840c <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    840c:	55                   	push   %rbp
    840d:	48 89 e5             	mov    %rsp,%rbp
    8410:	53                   	push   %rbx
    8411:	48 83 ec 18          	sub    $0x18,%rsp
    8415:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8419:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    841d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8421:	48 89 c7             	mov    %rax,%rdi
    8424:	e8 b7 0e 00 00       	call   92e0 <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    8429:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    842d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8431:	48 89 c7             	mov    %rax,%rdi
    8434:	e8 75 e9 ff ff       	call   6dae <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    8439:	48 89 18             	mov    %rbx,(%rax)
    843c:	90                   	nop
    843d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8441:	c9                   	leave
    8442:	c3                   	ret

0000000000008443 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8443:	55                   	push   %rbp
    8444:	48 89 e5             	mov    %rsp,%rbp
    8447:	48 83 ec 10          	sub    $0x10,%rsp
    844b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    844f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8453:	48 89 c7             	mov    %rax,%rdi
    8456:	e8 a0 0e 00 00       	call   92fb <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    845b:	c9                   	leave
    845c:	c3                   	ret
    845d:	90                   	nop

000000000000845e <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    845e:	55                   	push   %rbp
    845f:	48 89 e5             	mov    %rsp,%rbp
    8462:	48 83 ec 10          	sub    $0x10,%rsp
    8466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    846a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    846e:	48 89 c7             	mov    %rax,%rdi
    8471:	e8 9f 0e 00 00       	call   9315 <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    8476:	c9                   	leave
    8477:	c3                   	ret

0000000000008478 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    8478:	55                   	push   %rbp
    8479:	48 89 e5             	mov    %rsp,%rbp
    847c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8480:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    8484:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8488:	48 8b 10             	mov    (%rax),%rdx
    848b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    848f:	48 89 10             	mov    %rdx,(%rax)
    8492:	90                   	nop
    8493:	5d                   	pop    %rbp
    8494:	c3                   	ret
    8495:	90                   	nop

0000000000008496 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    8496:	55                   	push   %rbp
    8497:	48 89 e5             	mov    %rsp,%rbp
    849a:	48 83 ec 10          	sub    $0x10,%rsp
    849e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84a6:	48 89 c7             	mov    %rax,%rdi
    84a9:	e8 81 0e 00 00       	call   932f <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    84ae:	48 8b 00             	mov    (%rax),%rax
    84b1:	c9                   	leave
    84b2:	c3                   	ret

00000000000084b3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    84b3:	55                   	push   %rbp
    84b4:	48 89 e5             	mov    %rsp,%rbp
    84b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    84bb:	90                   	nop
    84bc:	5d                   	pop    %rbp
    84bd:	c3                   	ret

00000000000084be <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    84be:	55                   	push   %rbp
    84bf:	48 89 e5             	mov    %rsp,%rbp
    84c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    84ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84ce:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    84d2:	5d                   	pop    %rbp
    84d3:	c3                   	ret

00000000000084d4 <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    84d4:	55                   	push   %rbp
    84d5:	48 89 e5             	mov    %rsp,%rbp
    84d8:	48 83 ec 20          	sub    $0x20,%rsp
    84dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    84e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    84e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84ec:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    84f3:	00 
    84f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84f8:	48 89 d6             	mov    %rdx,%rsi
    84fb:	48 89 c7             	mov    %rax,%rdi
    84fe:	e8 cd ad ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    8503:	c9                   	leave
    8504:	c3                   	ret

0000000000008505 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    8505:	55                   	push   %rbp
    8506:	48 89 e5             	mov    %rsp,%rbp
    8509:	48 83 ec 10          	sub    $0x10,%rsp
    850d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8511:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    8515:	eb 19                	jmp    8530 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    8517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851b:	48 89 c7             	mov    %rax,%rdi
    851e:	e8 26 0e 00 00       	call   9349 <_ZSt11__addressofISt6threadEPT_RS1_>
    8523:	48 89 c7             	mov    %rax,%rdi
    8526:	e8 2c 0e 00 00       	call   9357 <_ZSt8_DestroyISt6threadEvPT_>
	  for (; __first != __last; ++__first)
    852b:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    8530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8534:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8538:	75 dd                	jne    8517 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x12>
	}
    853a:	90                   	nop
    853b:	90                   	nop
    853c:	c9                   	leave
    853d:	c3                   	ret

000000000000853e <_ZNSaISt8functionIFvvEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    853e:	55                   	push   %rbp
    853f:	48 89 e5             	mov    %rsp,%rbp
    8542:	48 83 ec 10          	sub    $0x10,%rsp
    8546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    854a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    854e:	48 89 c7             	mov    %rax,%rdi
    8551:	e8 1c 0e 00 00       	call   9372 <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>
    8556:	90                   	nop
    8557:	c9                   	leave
    8558:	c3                   	ret
    8559:	90                   	nop

000000000000855a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>:
	_Deque_impl_data() _GLIBCXX_NOEXCEPT
    855a:	55                   	push   %rbp
    855b:	48 89 e5             	mov    %rsp,%rbp
    855e:	48 83 ec 10          	sub    $0x10,%rsp
    8562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
    8566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    856a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8575:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    857c:	00 
    857d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8581:	48 83 c0 10          	add    $0x10,%rax
    8585:	48 89 c7             	mov    %rax,%rdi
    8588:	e8 f1 0d 00 00       	call   937e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
    858d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8591:	48 83 c0 30          	add    $0x30,%rax
    8595:	48 89 c7             	mov    %rax,%rdi
    8598:	e8 e1 0d 00 00       	call   937e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
	{ }
    859d:	90                   	nop
    859e:	c9                   	leave
    859f:	c3                   	ret

00000000000085a0 <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    85a0:	55                   	push   %rbp
    85a1:	48 89 e5             	mov    %rsp,%rbp
    85a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85a8:	90                   	nop
    85a9:	5d                   	pop    %rbp
    85aa:	c3                   	ret
    85ab:	90                   	nop

00000000000085ac <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>:
      _M_allocate_map(size_t __n)
    85ac:	55                   	push   %rbp
    85ad:	48 89 e5             	mov    %rsp,%rbp
    85b0:	53                   	push   %rbx
    85b1:	48 83 ec 28          	sub    $0x28,%rsp
    85b5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    85b9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    85bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    85c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    85c5:	48 89 d6             	mov    %rdx,%rsi
    85c8:	48 89 c7             	mov    %rax,%rdi
    85cb:	e8 4c 01 00 00       	call   871c <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    85d0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    85d4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    85d8:	48 89 d6             	mov    %rdx,%rsi
    85db:	48 89 c7             	mov    %rax,%rdi
    85de:	e8 d5 0d 00 00       	call   93b8 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>
    85e3:	48 89 c3             	mov    %rax,%rbx
    85e6:	90                   	nop
      }
    85e7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    85eb:	48 89 c7             	mov    %rax,%rdi
    85ee:	e8 5d 01 00 00       	call   8750 <_ZNSaIPSt8functionIFvvEEED1Ev>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    85f3:	48 89 d8             	mov    %rbx,%rax
    85f6:	eb 1a                	jmp    8612 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm+0x66>
      }
    85f8:	48 89 c3             	mov    %rax,%rbx
    85fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    85ff:	48 89 c7             	mov    %rax,%rdi
    8602:	e8 49 01 00 00       	call   8750 <_ZNSaIPSt8functionIFvvEEED1Ev>
    8607:	48 89 d8             	mov    %rbx,%rax
    860a:	48 89 c7             	mov    %rax,%rdi
    860d:	e8 be ae ff ff       	call   34d0 <_Unwind_Resume@plt>
    8612:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8616:	c9                   	leave
    8617:	c3                   	ret

0000000000008618 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    8618:	55                   	push   %rbp
    8619:	48 89 e5             	mov    %rsp,%rbp
    861c:	53                   	push   %rbx
    861d:	48 83 ec 38          	sub    $0x38,%rsp
    8621:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8625:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8629:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    862d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8631:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8635:	eb 18                	jmp    864f <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x37>
	    *__cur = this->_M_allocate_node();
    8637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    863b:	48 89 c7             	mov    %rax,%rdi
    863e:	e8 3b 03 00 00       	call   897e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    8643:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8647:	48 89 02             	mov    %rax,(%rdx)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    864a:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    864f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8653:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    8657:	72 de                	jb     8637 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x1f>
    }
    8659:	eb 37                	jmp    8692 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x7a>
      __catch(...)
    865b:	48 89 c7             	mov    %rax,%rdi
    865e:	e8 6d aa ff ff       	call   30d0 <__cxa_begin_catch@plt>
	  _M_destroy_nodes(__nstart, __cur);
    8663:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8667:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    866b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    866f:	48 89 ce             	mov    %rcx,%rsi
    8672:	48 89 c7             	mov    %rax,%rdi
    8675:	e8 54 eb ff ff       	call   71ce <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  __throw_exception_again;
    867a:	e8 91 ad ff ff       	call   3410 <__cxa_rethrow@plt>
      __catch(...)
    867f:	48 89 c3             	mov    %rax,%rbx
    8682:	e8 f9 ad ff ff       	call   3480 <__cxa_end_catch@plt>
    8687:	48 89 d8             	mov    %rbx,%rax
    868a:	48 89 c7             	mov    %rax,%rdi
    868d:	e8 3e ae ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    8692:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8696:	c9                   	leave
    8697:	c3                   	ret

0000000000008698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>:
      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
    8698:	55                   	push   %rbp
    8699:	48 89 e5             	mov    %rsp,%rbp
    869c:	53                   	push   %rbx
    869d:	48 83 ec 18          	sub    $0x18,%rsp
    86a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    86a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_node = __new_node;
    86a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    86b1:	48 89 50 18          	mov    %rdx,0x18(%rax)
	_M_first = *__new_node;
    86b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86b9:	48 8b 10             	mov    (%rax),%rdx
    86bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86c0:	48 89 50 08          	mov    %rdx,0x8(%rax)
	_M_last = _M_first + difference_type(_S_buffer_size());
    86c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86c8:	48 8b 58 08          	mov    0x8(%rax),%rbx
    86cc:	e8 11 0d 00 00       	call   93e2 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    86d1:	48 c1 e0 05          	shl    $0x5,%rax
    86d5:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    86d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86dd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    86e1:	90                   	nop
    86e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86e6:	c9                   	leave
    86e7:	c3                   	ret

00000000000086e8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>:
      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
    86e8:	55                   	push   %rbp
    86e9:	48 89 e5             	mov    %rsp,%rbp
    86ec:	48 83 ec 10          	sub    $0x10,%rsp
    86f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
    86f8:	bf 20 00 00 00       	mov    $0x20,%edi
    86fd:	e8 ef b4 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    8702:	48 89 c2             	mov    %rax,%rdx
    8705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8709:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    870d:	48 89 ce             	mov    %rcx,%rsi
    8710:	48 89 c7             	mov    %rax,%rdi
    8713:	e8 da 0c 00 00       	call   93f2 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>
      }
    8718:	90                   	nop
    8719:	c9                   	leave
    871a:	c3                   	ret
    871b:	90                   	nop

000000000000871c <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>:
      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
    871c:	55                   	push   %rbp
    871d:	48 89 e5             	mov    %rsp,%rbp
    8720:	48 83 ec 10          	sub    $0x10,%rsp
    8724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8728:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _Map_alloc_type(_M_get_Tp_allocator()); }
    872c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8730:	48 89 c7             	mov    %rax,%rdi
    8733:	e8 e8 0c 00 00       	call   9420 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8738:	48 89 c2             	mov    %rax,%rdx
    873b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    873f:	48 89 d6             	mov    %rdx,%rsi
    8742:	48 89 c7             	mov    %rax,%rdi
    8745:	e8 e4 0c 00 00       	call   942e <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>
    874a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    874e:	c9                   	leave
    874f:	c3                   	ret

0000000000008750 <_ZNSaIPSt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8750:	55                   	push   %rbp
    8751:	48 89 e5             	mov    %rsp,%rbp
    8754:	48 83 ec 10          	sub    $0x10,%rsp
    8758:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    875c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8760:	48 89 c7             	mov    %rax,%rdi
    8763:	e8 e6 0c 00 00       	call   944e <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>
    8768:	90                   	nop
    8769:	c9                   	leave
    876a:	c3                   	ret

000000000000876b <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    876b:	55                   	push   %rbp
    876c:	48 89 e5             	mov    %rsp,%rbp
    876f:	48 83 ec 20          	sub    $0x20,%rsp
    8773:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8777:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    877b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    877f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8783:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8787:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    878b:	48 89 ce             	mov    %rcx,%rsi
    878e:	48 89 c7             	mov    %rax,%rdi
    8791:	e8 c4 0c 00 00       	call   945a <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>
    8796:	90                   	nop
    8797:	c9                   	leave
    8798:	c3                   	ret

0000000000008799 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    8799:	55                   	push   %rbp
    879a:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    879d:	bf 20 00 00 00       	mov    $0x20,%edi
    87a2:	e8 4a b4 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    87a7:	5d                   	pop    %rbp
    87a8:	c3                   	ret

00000000000087a9 <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    87a9:	55                   	push   %rbp
    87aa:	48 89 e5             	mov    %rsp,%rbp
    87ad:	48 83 ec 20          	sub    $0x20,%rsp
    87b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    87b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    87bd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    87c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c5:	48 89 d6             	mov    %rdx,%rsi
    87c8:	48 89 c7             	mov    %rax,%rdi
    87cb:	e8 bb 0c 00 00       	call   948b <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>
    }
    87d0:	90                   	nop
    87d1:	c9                   	leave
    87d2:	c3                   	ret
    87d3:	90                   	nop

00000000000087d4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    87d4:	55                   	push   %rbp
    87d5:	48 89 e5             	mov    %rsp,%rbp
    87d8:	53                   	push   %rbx
    87d9:	48 83 ec 18          	sub    $0x18,%rsp
    87dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    87e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87e9:	48 89 c7             	mov    %rax,%rdi
    87ec:	e8 9b f2 ff ff       	call   7a8c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    87f1:	48 89 c3             	mov    %rax,%rbx
    87f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87f8:	48 89 c7             	mov    %rax,%rdi
    87fb:	e8 b2 0c 00 00       	call   94b2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    8800:	48 89 de             	mov    %rbx,%rsi
    8803:	48 89 c7             	mov    %rax,%rdi
    8806:	e8 b5 0c 00 00       	call   94c0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>
      }
    880b:	90                   	nop
    880c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8810:	c9                   	leave
    8811:	c3                   	ret

0000000000008812 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    8812:	55                   	push   %rbp
    8813:	48 89 e5             	mov    %rsp,%rbp
    8816:	48 83 ec 10          	sub    $0x10,%rsp
    881a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    881e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    8822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8826:	48 89 c7             	mov    %rax,%rdi
    8829:	e8 84 0c 00 00       	call   94b2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    882e:	48 89 c1             	mov    %rax,%rcx
    8831:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8835:	ba 01 00 00 00       	mov    $0x1,%edx
    883a:	48 89 c6             	mov    %rax,%rsi
    883d:	48 89 cf             	mov    %rcx,%rdi
    8840:	e8 a1 0c 00 00       	call   94e6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>
    8845:	90                   	nop
    8846:	c9                   	leave
    8847:	c3                   	ret

0000000000008848 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8848:	55                   	push   %rbp
    8849:	48 89 e5             	mov    %rsp,%rbp
    884c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8854:	5d                   	pop    %rbp
    8855:	c3                   	ret

0000000000008856 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    8856:	55                   	push   %rbp
    8857:	48 89 e5             	mov    %rsp,%rbp
    885a:	41 56                	push   %r14
    885c:	41 55                	push   %r13
    885e:	41 54                	push   %r12
    8860:	53                   	push   %rbx
    8861:	48 83 ec 20          	sub    $0x20,%rsp
    8865:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8869:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    886d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    8871:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    8875:	48 89 de             	mov    %rbx,%rsi
    8878:	bf 20 00 00 00       	mov    $0x20,%edi
    887d:	e8 f7 af ff ff       	call   3879 <_ZnwmPv>
    8882:	49 89 c4             	mov    %rax,%r12
    8885:	41 be 01 00 00 00    	mov    $0x1,%r14d
    888b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    888f:	48 89 c7             	mov    %rax,%rdi
    8892:	e8 b1 ff ff ff       	call   8848 <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8897:	48 89 c6             	mov    %rax,%rsi
    889a:	4c 89 e7             	mov    %r12,%rdi
    889d:	e8 84 da ff ff       	call   6326 <_ZNSt8functionIFvvEEC1ERKS1_>
    88a2:	eb 1e                	jmp    88c2 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x6c>
    88a4:	49 89 c5             	mov    %rax,%r13
    88a7:	45 84 f6             	test   %r14b,%r14b
    88aa:	74 0b                	je     88b7 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x61>
    88ac:	48 89 de             	mov    %rbx,%rsi
    88af:	4c 89 e7             	mov    %r12,%rdi
    88b2:	e8 d4 af ff ff       	call   388b <_ZdlPvS_>
    88b7:	4c 89 e8             	mov    %r13,%rax
    88ba:	48 89 c7             	mov    %rax,%rdi
    88bd:	e8 0e ac ff ff       	call   34d0 <_Unwind_Resume@plt>
    88c2:	48 83 c4 20          	add    $0x20,%rsp
    88c6:	5b                   	pop    %rbx
    88c7:	41 5c                	pop    %r12
    88c9:	41 5d                	pop    %r13
    88cb:	41 5e                	pop    %r14
    88cd:	5d                   	pop    %rbp
    88ce:	c3                   	ret
    88cf:	90                   	nop

00000000000088d0 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    88d0:	55                   	push   %rbp
    88d1:	48 89 e5             	mov    %rsp,%rbp
    88d4:	48 83 ec 10          	sub    $0x10,%rsp
    88d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish - this->_M_impl._M_start; }
    88dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e0:	48 8d 50 10          	lea    0x10(%rax),%rdx
    88e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e8:	48 83 c0 30          	add    $0x30,%rax
    88ec:	48 89 d6             	mov    %rdx,%rsi
    88ef:	48 89 c7             	mov    %rax,%rdi
    88f2:	e8 1d 0c 00 00       	call   9514 <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    88f7:	c9                   	leave
    88f8:	c3                   	ret
    88f9:	90                   	nop

00000000000088fa <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    88fa:	55                   	push   %rbp
    88fb:	48 89 e5             	mov    %rsp,%rbp
    88fe:	48 83 ec 10          	sub    $0x10,%rsp
    8902:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    8906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    890a:	48 89 c7             	mov    %rax,%rdi
    890d:	e8 0e 0b 00 00       	call   9420 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8912:	48 89 c7             	mov    %rax,%rdi
    8915:	e8 82 0c 00 00       	call   959c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>
    891a:	c9                   	leave
    891b:	c3                   	ret

000000000000891c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>:
       *  Makes sure the _M_map has space for new nodes.  Does not
       *  actually add the nodes.  Can invalidate _M_map pointers.
       *  (And consequently, %deque iterators.)
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
    891c:	55                   	push   %rbp
    891d:	48 89 e5             	mov    %rsp,%rbp
    8920:	48 83 ec 10          	sub    $0x10,%rsp
    8924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8928:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    892c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8930:	48 8d 50 01          	lea    0x1(%rax),%rdx
    8934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8938:	48 8b 48 08          	mov    0x8(%rax),%rcx
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
    893c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8940:	48 8b 70 48          	mov    0x48(%rax),%rsi
    8944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8948:	48 8b 00             	mov    (%rax),%rax
    894b:	48 29 c6             	sub    %rax,%rsi
    894e:	48 89 f0             	mov    %rsi,%rax
    8951:	48 c1 f8 03          	sar    $0x3,%rax
    8955:	48 89 c6             	mov    %rax,%rsi
    8958:	48 89 c8             	mov    %rcx,%rax
    895b:	48 29 f0             	sub    %rsi,%rax
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    895e:	48 39 d0             	cmp    %rdx,%rax
    8961:	73 18                	jae    897b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm+0x5f>
	  _M_reallocate_map(__nodes_to_add, false);
    8963:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    896b:	ba 00 00 00 00       	mov    $0x0,%edx
    8970:	48 89 ce             	mov    %rcx,%rsi
    8973:	48 89 c7             	mov    %rax,%rdi
    8976:	e8 63 0c 00 00       	call   95de <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>
      }
    897b:	90                   	nop
    897c:	c9                   	leave
    897d:	c3                   	ret

000000000000897e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>:
      _M_allocate_node()
    897e:	55                   	push   %rbp
    897f:	48 89 e5             	mov    %rsp,%rbp
    8982:	48 83 ec 10          	sub    $0x10,%rsp
    8986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
    898a:	bf 20 00 00 00       	mov    $0x20,%edi
    898f:	e8 5d b2 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    8994:	48 89 c2             	mov    %rax,%rdx
    8997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899b:	48 89 d6             	mov    %rdx,%rsi
    899e:	48 89 c7             	mov    %rax,%rdi
    89a1:	e8 57 0e 00 00       	call   97fd <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>
      }
    89a6:	c9                   	leave
    89a7:	c3                   	ret

00000000000089a8 <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    89a8:	55                   	push   %rbp
    89a9:	48 89 e5             	mov    %rsp,%rbp
    89ac:	48 83 ec 20          	sub    $0x20,%rsp
    89b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    89b4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    89bb:	ff ff 0f 
    89be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    89c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89c6:	48 89 c7             	mov    %rax,%rdi
    89c9:	e8 59 0e 00 00       	call   9827 <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>
    89ce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    89d2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    89d6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    89da:	48 89 d6             	mov    %rdx,%rsi
    89dd:	48 89 c7             	mov    %rax,%rdi
    89e0:	e8 7f b1 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    89e5:	48 8b 00             	mov    (%rax),%rax
      }
    89e8:	c9                   	leave
    89e9:	c3                   	ret

00000000000089ea <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    89ea:	55                   	push   %rbp
    89eb:	48 89 e5             	mov    %rsp,%rbp
    89ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    89f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f6:	5d                   	pop    %rbp
    89f7:	c3                   	ret

00000000000089f8 <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    89f8:	55                   	push   %rbp
    89f9:	48 89 e5             	mov    %rsp,%rbp
    89fc:	48 83 ec 20          	sub    $0x20,%rsp
    8a00:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a04:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8a08:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8a0c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8a10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a14:	48 89 d6             	mov    %rdx,%rsi
    8a17:	48 89 c7             	mov    %rax,%rdi
    8a1a:	e8 22 0e 00 00       	call   9841 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>
    }
    8a1f:	c9                   	leave
    8a20:	c3                   	ret

0000000000008a21 <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    8a21:	55                   	push   %rbp
    8a22:	48 89 e5             	mov    %rsp,%rbp
    8a25:	48 83 ec 10          	sub    $0x10,%rsp
    8a29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a2d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8a31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a39:	ba 00 00 00 00       	mov    $0x0,%edx
    8a3e:	48 89 ce             	mov    %rcx,%rsi
    8a41:	48 89 c7             	mov    %rax,%rdi
    8a44:	e8 3d 0e 00 00       	call   9886 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>
    8a49:	c9                   	leave
    8a4a:	c3                   	ret

0000000000008a4b <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    8a4b:	55                   	push   %rbp
    8a4c:	48 89 e5             	mov    %rsp,%rbp
    8a4f:	41 54                	push   %r12
    8a51:	53                   	push   %rbx
    8a52:	48 83 ec 20          	sub    $0x20,%rsp
    8a56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a5e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8a62:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    8a66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a6a:	48 89 c7             	mov    %rax,%rdi
    8a6d:	e8 75 0e 00 00       	call   98e7 <_ZSt12__niter_baseIPSt6threadET_S2_>
    8a72:	49 89 c4             	mov    %rax,%r12
    8a75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a79:	48 89 c7             	mov    %rax,%rdi
    8a7c:	e8 66 0e 00 00       	call   98e7 <_ZSt12__niter_baseIPSt6threadET_S2_>
    8a81:	48 89 c3             	mov    %rax,%rbx
    8a84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a88:	48 89 c7             	mov    %rax,%rdi
    8a8b:	e8 57 0e 00 00       	call   98e7 <_ZSt12__niter_baseIPSt6threadET_S2_>
    8a90:	48 89 c7             	mov    %rax,%rdi
    8a93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a97:	48 89 c1             	mov    %rax,%rcx
    8a9a:	4c 89 e2             	mov    %r12,%rdx
    8a9d:	48 89 de             	mov    %rbx,%rsi
    8aa0:	e8 50 0e 00 00       	call   98f5 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    8aa5:	48 83 c4 20          	add    $0x20,%rsp
    8aa9:	5b                   	pop    %rbx
    8aaa:	41 5c                	pop    %r12
    8aac:	5d                   	pop    %rbp
    8aad:	c3                   	ret

0000000000008aae <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>:
	_Tuple_impl(_UHead&& __head, _UTail&&... __tail)
    8aae:	55                   	push   %rbp
    8aaf:	48 89 e5             	mov    %rsp,%rbp
    8ab2:	53                   	push   %rbx
    8ab3:	48 83 ec 38          	sub    $0x38,%rsp
    8ab7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8abb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8abf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Base(std::forward<_UHead>(__head))
    8ac3:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8ac7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8acb:	48 89 c7             	mov    %rax,%rdi
    8ace:	e8 e1 d6 ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    8ad3:	48 89 c6             	mov    %rax,%rsi
    8ad6:	48 89 df             	mov    %rbx,%rdi
    8ad9:	e8 88 0e 00 00       	call   9966 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>
    8ade:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ae2:	48 8d 58 08          	lea    0x8(%rax),%rbx
    8ae6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8aea:	48 89 c7             	mov    %rax,%rdi
    8aed:	e8 b4 d6 ff ff       	call   61a6 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8af2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8af6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8afa:	48 89 c6             	mov    %rax,%rsi
    8afd:	48 89 df             	mov    %rbx,%rdi
    8b00:	e8 95 0e 00 00       	call   999a <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>
	{ }
    8b05:	90                   	nop
    8b06:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b0a:	c9                   	leave
    8b0b:	c3                   	ret

0000000000008b0c <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    8b0c:	55                   	push   %rbp
    8b0d:	48 89 e5             	mov    %rsp,%rbp
    8b10:	48 83 ec 10          	sub    $0x10,%rsp
    8b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    8b18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b1c:	48 89 c7             	mov    %rax,%rdi
    8b1f:	e8 94 0e 00 00       	call   99b8 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>
    8b24:	90                   	nop
    8b25:	c9                   	leave
    8b26:	c3                   	ret

0000000000008b27 <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8b27:	55                   	push   %rbp
    8b28:	48 89 e5             	mov    %rsp,%rbp
    8b2b:	48 83 ec 10          	sub    $0x10,%rsp
    8b2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b37:	48 89 c7             	mov    %rax,%rdi
    8b3a:	e8 a0 0e 00 00       	call   99df <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8b3f:	c9                   	leave
    8b40:	c3                   	ret
    8b41:	90                   	nop

0000000000008b42 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    8b42:	55                   	push   %rbp
    8b43:	48 89 e5             	mov    %rsp,%rbp
    8b46:	48 83 ec 10          	sub    $0x10,%rsp
    8b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b52:	48 89 c7             	mov    %rax,%rdi
    8b55:	e8 9f 0e 00 00       	call   99f9 <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    8b5a:	c9                   	leave
    8b5b:	c3                   	ret

0000000000008b5c <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    8b5c:	55                   	push   %rbp
    8b5d:	48 89 e5             	mov    %rsp,%rbp
    8b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b68:	5d                   	pop    %rbp
    8b69:	c3                   	ret

0000000000008b6a <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    8b6a:	55                   	push   %rbp
    8b6b:	48 89 e5             	mov    %rsp,%rbp
    8b6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b76:	5d                   	pop    %rbp
    8b77:	c3                   	ret

0000000000008b78 <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
    8b78:	55                   	push   %rbp
    8b79:	48 89 e5             	mov    %rsp,%rbp
    8b7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b84:	5d                   	pop    %rbp
    8b85:	c3                   	ret

0000000000008b86 <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>:

      template<typename _Up>
	void
	destroy(_Up* __p)
    8b86:	55                   	push   %rbp
    8b87:	48 89 e5             	mov    %rsp,%rbp
    8b8a:	48 83 ec 10          	sub    $0x10,%rsp
    8b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
    8b96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b9a:	48 89 c7             	mov    %rax,%rdi
    8b9d:	e8 3c b4 ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
    8ba2:	90                   	nop
    8ba3:	c9                   	leave
    8ba4:	c3                   	ret
    8ba5:	90                   	nop

0000000000008ba6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    8ba6:	55                   	push   %rbp
    8ba7:	48 89 e5             	mov    %rsp,%rbp
    8baa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    8bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb2:	48 83 c0 08          	add    $0x8,%rax
    8bb6:	5d                   	pop    %rbp
    8bb7:	c3                   	ret

0000000000008bb8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8bb8:	55                   	push   %rbp
    8bb9:	48 89 e5             	mov    %rsp,%rbp
    8bbc:	53                   	push   %rbx
    8bbd:	48 83 ec 38          	sub    $0x38,%rsp
    8bc1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8bc5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8bc9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8bcd:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    8bd1:	eb 56                	jmp    8c29 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    8bd3:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8bd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bdb:	48 89 c7             	mov    %rax,%rdi
    8bde:	e8 e7 03 00 00       	call   8fca <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8be3:	48 89 c1             	mov    %rax,%rcx
    8be6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8bea:	48 89 c2             	mov    %rax,%rdx
    8bed:	48 89 ce             	mov    %rcx,%rsi
    8bf0:	48 89 df             	mov    %rbx,%rdi
    8bf3:	e8 3e d9 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8bf8:	83 f0 01             	xor    $0x1,%eax
    8bfb:	84 c0                	test   %al,%al
    8bfd:	74 1a                	je     8c19 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x61>
	  __y = __x, __x = _S_left(__x);
    8bff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c03:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8c07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c0b:	48 89 c7             	mov    %rax,%rdi
    8c0e:	e8 ca e7 ff ff       	call   73dd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    8c13:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8c17:	eb 10                	jmp    8c29 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	  __x = _S_right(__x);
    8c19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c1d:	48 89 c7             	mov    %rax,%rdi
    8c20:	e8 a6 e7 ff ff       	call   73cb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8c25:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    8c29:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    8c2e:	75 a3                	jne    8bd3 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x1b>
      return iterator(__y);
    8c30:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8c34:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8c38:	48 89 d6             	mov    %rdx,%rsi
    8c3b:	48 89 c7             	mov    %rax,%rdi
    8c3e:	e8 47 f4 ff ff       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    8c47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c4b:	c9                   	leave
    8c4c:	c3                   	ret
    8c4d:	90                   	nop

0000000000008c4e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    8c4e:	55                   	push   %rbp
    8c4f:	48 89 e5             	mov    %rsp,%rbp
    8c52:	48 83 ec 10          	sub    $0x10,%rsp
    8c56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    8c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c5e:	48 89 c7             	mov    %rax,%rdi
    8c61:	e8 ae 0d 00 00       	call   9a14 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    8c66:	c9                   	leave
    8c67:	c3                   	ret

0000000000008c68 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    8c68:	55                   	push   %rbp
    8c69:	48 89 e5             	mov    %rsp,%rbp
    8c6c:	53                   	push   %rbx
    8c6d:	48 83 ec 18          	sub    $0x18,%rsp
    8c71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    8c79:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8c7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c81:	48 89 c7             	mov    %rax,%rdi
    8c84:	e8 21 ee ff ff       	call   7aaa <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    8c89:	48 89 c6             	mov    %rax,%rsi
    8c8c:	48 89 df             	mov    %rbx,%rdi
    8c8f:	e8 8e 0d 00 00       	call   9a22 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>
	{ }
    8c94:	90                   	nop
    8c95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c99:	c9                   	leave
    8c9a:	c3                   	ret
    8c9b:	90                   	nop

0000000000008c9c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_create_node(_Args&&... __args)
    8c9c:	55                   	push   %rbp
    8c9d:	48 89 e5             	mov    %rsp,%rbp
    8ca0:	41 54                	push   %r12
    8ca2:	53                   	push   %rbx
    8ca3:	48 83 ec 30          	sub    $0x30,%rsp
    8ca7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8cab:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8caf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8cb3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    8cb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cbb:	48 89 c7             	mov    %rax,%rdi
    8cbe:	e8 85 0d 00 00       	call   9a48 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>
    8cc3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    8cc7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8ccb:	48 89 c7             	mov    %rax,%rdi
    8cce:	e8 34 ee ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    8cd3:	49 89 c4             	mov    %rax,%r12
    8cd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8cda:	48 89 c7             	mov    %rax,%rdi
    8cdd:	e8 17 ee ff ff       	call   7af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8ce2:	48 89 c3             	mov    %rax,%rbx
    8ce5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ce9:	48 89 c7             	mov    %rax,%rdi
    8cec:	e8 fa ed ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8cf1:	48 89 c2             	mov    %rax,%rdx
    8cf4:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    8cf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cfc:	4d 89 e0             	mov    %r12,%r8
    8cff:	48 89 d9             	mov    %rbx,%rcx
    8d02:	48 89 c7             	mov    %rax,%rdi
    8d05:	e8 66 0d 00 00       	call   9a70 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>
	  return __tmp;
    8d0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8d0e:	48 83 c4 30          	add    $0x30,%rsp
    8d12:	5b                   	pop    %rbx
    8d13:	41 5c                	pop    %r12
    8d15:	5d                   	pop    %rbp
    8d16:	c3                   	ret
    8d17:	90                   	nop

0000000000008d18 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    8d18:	55                   	push   %rbp
    8d19:	48 89 e5             	mov    %rsp,%rbp
    8d1c:	48 83 ec 20          	sub    $0x20,%rsp
    8d20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    8d24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d28:	48 8b 10             	mov    (%rax),%rdx
    8d2b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8d2f:	48 89 d6             	mov    %rdx,%rsi
    8d32:	48 89 c7             	mov    %rax,%rdi
    8d35:	e8 50 f3 ff ff       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d3e:	c9                   	leave
    8d3f:	c3                   	ret

0000000000008d40 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8d40:	55                   	push   %rbp
    8d41:	48 89 e5             	mov    %rsp,%rbp
    8d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    8d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d4c:	48 8b 40 28          	mov    0x28(%rax),%rax
    8d50:	5d                   	pop    %rbp
    8d51:	c3                   	ret

0000000000008d52 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    8d52:	55                   	push   %rbp
    8d53:	48 89 e5             	mov    %rsp,%rbp
    8d56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    8d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d5e:	48 83 c0 20          	add    $0x20,%rax
    8d62:	5d                   	pop    %rbp
    8d63:	c3                   	ret

0000000000008d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    8d64:	55                   	push   %rbp
    8d65:	48 89 e5             	mov    %rsp,%rbp
    8d68:	48 83 ec 10          	sub    $0x10,%rsp
    8d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    8d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d74:	48 89 c7             	mov    %rax,%rdi
    8d77:	e8 4e 02 00 00       	call   8fca <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8d7c:	c9                   	leave
    8d7d:	c3                   	ret

0000000000008d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    8d7e:	55                   	push   %rbp
    8d7f:	48 89 e5             	mov    %rsp,%rbp
    8d82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    8d8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d92:	48 8b 10             	mov    (%rax),%rdx
    8d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d99:	48 89 10             	mov    %rdx,(%rax)
    8d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8da0:	48 8b 10             	mov    (%rax),%rdx
    8da3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8da7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8dab:	90                   	nop
    8dac:	5d                   	pop    %rbp
    8dad:	c3                   	ret

0000000000008dae <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8dae:	55                   	push   %rbp
    8daf:	48 89 e5             	mov    %rsp,%rbp
    8db2:	53                   	push   %rbx
    8db3:	48 83 ec 78          	sub    $0x78,%rsp
    8db7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    8dbb:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    8dbf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8dc3:	48 89 c7             	mov    %rax,%rdi
    8dc6:	e8 e5 cf ff ff       	call   5db0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    8dcb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    8dcf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8dd3:	48 89 c7             	mov    %rax,%rdi
    8dd6:	e8 cb fd ff ff       	call   8ba6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    8ddb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    8ddf:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    8de3:	eb 51                	jmp    8e36 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x88>
	  __y = __x;
    8de5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8de9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    8ded:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    8df1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8df5:	48 89 c7             	mov    %rax,%rdi
    8df8:	e8 cd 01 00 00       	call   8fca <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8dfd:	48 89 c2             	mov    %rax,%rdx
    8e00:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8e04:	48 89 c6             	mov    %rax,%rsi
    8e07:	48 89 df             	mov    %rbx,%rdi
    8e0a:	e8 27 d7 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8e0f:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    8e12:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    8e16:	74 0e                	je     8e26 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x78>
    8e18:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8e1c:	48 89 c7             	mov    %rax,%rdi
    8e1f:	e8 b9 e5 ff ff       	call   73dd <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    8e24:	eb 0c                	jmp    8e32 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x84>
    8e26:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8e2a:	48 89 c7             	mov    %rax,%rdi
    8e2d:	e8 99 e5 ff ff       	call   73cb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8e32:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    8e36:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8e3a:	48 85 c0             	test   %rax,%rax
    8e3d:	75 a6                	jne    8de5 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x37>
      iterator __j = iterator(__y);
    8e3f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    8e43:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8e47:	48 89 d6             	mov    %rdx,%rsi
    8e4a:	48 89 c7             	mov    %rax,%rdi
    8e4d:	e8 38 f2 ff ff       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    8e52:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    8e56:	74 54                	je     8eac <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xfe>
	  if (__j == begin())
    8e58:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8e5c:	48 89 c7             	mov    %rax,%rdi
    8e5f:	e8 de 0c 00 00       	call   9b42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>
    8e64:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8e68:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    8e6c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8e70:	48 89 d6             	mov    %rdx,%rsi
    8e73:	48 89 c7             	mov    %rax,%rdi
    8e76:	e8 5f d6 ff ff       	call   64da <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    8e7b:	84 c0                	test   %al,%al
    8e7d:	74 21                	je     8ea0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xf2>
	    return _Res(__x, __y);
    8e7f:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    8e83:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    8e87:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8e8b:	48 89 ce             	mov    %rcx,%rsi
    8e8e:	48 89 c7             	mov    %rax,%rdi
    8e91:	e8 d6 0c 00 00       	call   9b6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    8e96:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8e9a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    8e9e:	eb 7d                	jmp    8f1d <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
	    --__j;
    8ea0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8ea4:	48 89 c7             	mov    %rax,%rdi
    8ea7:	e8 ce 00 00 00       	call   8f7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    8eac:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    8eb0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8eb4:	48 89 c7             	mov    %rax,%rdi
    8eb7:	e8 a8 fe ff ff       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    8ebc:	48 89 c1             	mov    %rax,%rcx
    8ebf:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8ec3:	48 89 c2             	mov    %rax,%rdx
    8ec6:	48 89 ce             	mov    %rcx,%rsi
    8ec9:	48 89 df             	mov    %rbx,%rdi
    8ecc:	e8 65 d6 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8ed1:	84 c0                	test   %al,%al
    8ed3:	74 21                	je     8ef6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x148>
	return _Res(__x, __y);
    8ed5:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    8ed9:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    8edd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8ee1:	48 89 ce             	mov    %rcx,%rsi
    8ee4:	48 89 c7             	mov    %rax,%rdi
    8ee7:	e8 80 0c 00 00       	call   9b6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    8eec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8ef0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8ef4:	eb 27                	jmp    8f1d <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
      return _Res(__j._M_node, 0);
    8ef6:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    8efd:	00 
    8efe:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    8f02:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    8f06:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8f0a:	48 89 ce             	mov    %rcx,%rsi
    8f0d:	48 89 c7             	mov    %rax,%rdi
    8f10:	e8 69 fe ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8f15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8f19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    8f1d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f21:	c9                   	leave
    8f22:	c3                   	ret
    8f23:	90                   	nop

0000000000008f24 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    8f24:	55                   	push   %rbp
    8f25:	48 89 e5             	mov    %rsp,%rbp
    8f28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    8f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f30:	48 83 c0 18          	add    $0x18,%rax
    8f34:	5d                   	pop    %rbp
    8f35:	c3                   	ret

0000000000008f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    8f36:	55                   	push   %rbp
    8f37:	48 89 e5             	mov    %rsp,%rbp
    8f3a:	48 83 ec 20          	sub    $0x20,%rsp
    8f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    8f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f4e:	48 89 c7             	mov    %rax,%rdi
    8f51:	e8 5a 0c 00 00       	call   9bb0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    8f56:	48 8b 10             	mov    (%rax),%rdx
    8f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f5d:	48 89 10             	mov    %rdx,(%rax)
    8f60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f64:	48 89 c7             	mov    %rax,%rdi
    8f67:	e8 44 0c 00 00       	call   9bb0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    8f6c:	48 8b 10             	mov    (%rax),%rdx
    8f6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f73:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8f77:	90                   	nop
    8f78:	c9                   	leave
    8f79:	c3                   	ret

0000000000008f7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    8f7a:	55                   	push   %rbp
    8f7b:	48 89 e5             	mov    %rsp,%rbp
    8f7e:	48 83 ec 10          	sub    $0x10,%rsp
    8f82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    8f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f8a:	48 8b 00             	mov    (%rax),%rax
    8f8d:	48 89 c7             	mov    %rax,%rdi
    8f90:	e8 6b a3 ff ff       	call   3300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    8f95:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f99:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    8f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8fa0:	c9                   	leave
    8fa1:	c3                   	ret

0000000000008fa2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8fa2:	55                   	push   %rbp
    8fa3:	48 89 e5             	mov    %rsp,%rbp
    8fa6:	48 83 ec 10          	sub    $0x10,%rsp
    8faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    8fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fb2:	48 8b 00             	mov    (%rax),%rax
    8fb5:	48 89 c7             	mov    %rax,%rdi
    8fb8:	e8 d3 a1 ff ff       	call   3190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    8fbd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8fc1:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    8fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8fc8:	c9                   	leave
    8fc9:	c3                   	ret

0000000000008fca <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>:
      _S_key(_Const_Link_type __x)
    8fca:	55                   	push   %rbp
    8fcb:	48 89 e5             	mov    %rsp,%rbp
    8fce:	48 83 ec 20          	sub    $0x20,%rsp
    8fd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    8fd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fda:	48 89 c7             	mov    %rax,%rdi
    8fdd:	e8 dc 0b 00 00       	call   9bbe <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    8fe2:	48 89 c2             	mov    %rax,%rdx
    8fe5:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    8fe9:	48 89 d6             	mov    %rdx,%rsi
    8fec:	48 89 c7             	mov    %rax,%rdi
    8fef:	e8 e8 0b 00 00       	call   9bdc <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>
      }
    8ff4:	c9                   	leave
    8ff5:	c3                   	ret

0000000000008ff6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8ff6:	55                   	push   %rbp
    8ff7:	48 89 e5             	mov    %rsp,%rbp
    8ffa:	41 54                	push   %r12
    8ffc:	53                   	push   %rbx
    8ffd:	48 83 ec 30          	sub    $0x30,%rsp
    9001:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9005:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9009:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    900d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    9011:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    9016:	75 43                	jne    905b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    9018:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    901c:	48 89 c7             	mov    %rax,%rdi
    901f:	e8 82 fb ff ff       	call   8ba6 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    9024:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    9028:	74 31                	je     905b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    902a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    902e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9032:	48 89 c7             	mov    %rax,%rdi
    9035:	e8 2a fd ff ff       	call   8d64 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    903a:	49 89 c4             	mov    %rax,%r12
    903d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9041:	48 89 c7             	mov    %rax,%rdi
    9044:	e8 81 ff ff ff       	call   8fca <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    9049:	4c 89 e2             	mov    %r12,%rdx
    904c:	48 89 c6             	mov    %rax,%rsi
    904f:	48 89 df             	mov    %rbx,%rdi
    9052:	e8 df d4 ff ff       	call   6536 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    9057:	84 c0                	test   %al,%al
    9059:	74 07                	je     9062 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x6c>
    905b:	b8 01 00 00 00       	mov    $0x1,%eax
    9060:	eb 05                	jmp    9067 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x71>
    9062:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    9067:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    906a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    906e:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    9072:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    9076:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    907a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    907e:	89 c7                	mov    %eax,%edi
    9080:	e8 bb 9f ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    9085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9089:	48 8b 40 28          	mov    0x28(%rax),%rax
    908d:	48 8d 50 01          	lea    0x1(%rax),%rdx
    9091:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9095:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    9099:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    909d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    90a1:	48 89 d6             	mov    %rdx,%rsi
    90a4:	48 89 c7             	mov    %rax,%rdi
    90a7:	e8 de ef ff ff       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    90ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    90b0:	48 83 c4 30          	add    $0x30,%rsp
    90b4:	5b                   	pop    %rbx
    90b5:	41 5c                	pop    %r12
    90b7:	5d                   	pop    %rbp
    90b8:	c3                   	ret
    90b9:	90                   	nop

00000000000090ba <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>:
      _Tuple_impl()
    90ba:	55                   	push   %rbp
    90bb:	48 89 e5             	mov    %rsp,%rbp
    90be:	48 83 ec 10          	sub    $0x10,%rsp
    90c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    90c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ca:	48 89 c7             	mov    %rax,%rdi
    90cd:	e8 1c 0b 00 00       	call   9bee <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>
    90d2:	90                   	nop
    90d3:	c9                   	leave
    90d4:	c3                   	ret
    90d5:	90                   	nop

00000000000090d6 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>:
      constexpr _Head_base()
    90d6:	55                   	push   %rbp
    90d7:	48 89 e5             	mov    %rsp,%rbp
    90da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    90de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90e2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    90e9:	90                   	nop
    90ea:	5d                   	pop    %rbp
    90eb:	c3                   	ret

00000000000090ec <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    90ec:	55                   	push   %rbp
    90ed:	48 89 e5             	mov    %rsp,%rbp
    90f0:	48 83 ec 10          	sub    $0x10,%rsp
    90f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    90f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90fc:	48 89 c7             	mov    %rax,%rdi
    90ff:	e8 f5 0a 00 00       	call   9bf9 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>
    9104:	c9                   	leave
    9105:	c3                   	ret

0000000000009106 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>:
      _Tuple_impl()
    9106:	55                   	push   %rbp
    9107:	48 89 e5             	mov    %rsp,%rbp
    910a:	48 83 ec 10          	sub    $0x10,%rsp
    910e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    9112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9116:	48 89 c7             	mov    %rax,%rdi
    9119:	e8 f6 0a 00 00       	call   9c14 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>
    911e:	90                   	nop
    911f:	c9                   	leave
    9120:	c3                   	ret
    9121:	90                   	nop

0000000000009122 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>:
      constexpr _Head_base()
    9122:	55                   	push   %rbp
    9123:	48 89 e5             	mov    %rsp,%rbp
    9126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    912a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    912e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9135:	90                   	nop
    9136:	5d                   	pop    %rbp
    9137:	c3                   	ret

0000000000009138 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9138:	55                   	push   %rbp
    9139:	48 89 e5             	mov    %rsp,%rbp
    913c:	48 83 ec 10          	sub    $0x10,%rsp
    9140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9148:	48 89 c7             	mov    %rax,%rdi
    914b:	e8 cf 0a 00 00       	call   9c1f <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>
    9150:	c9                   	leave
    9151:	c3                   	ret

0000000000009152 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>:
      _Tuple_impl()
    9152:	55                   	push   %rbp
    9153:	48 89 e5             	mov    %rsp,%rbp
    9156:	48 83 ec 10          	sub    $0x10,%rsp
    915a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    915e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9162:	48 89 c7             	mov    %rax,%rdi
    9165:	e8 d0 0a 00 00       	call   9c3a <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>
    916a:	90                   	nop
    916b:	c9                   	leave
    916c:	c3                   	ret
    916d:	90                   	nop

000000000000916e <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>:
      constexpr _Head_base()
    916e:	55                   	push   %rbp
    916f:	48 89 e5             	mov    %rsp,%rbp
    9172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    917a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9181:	90                   	nop
    9182:	5d                   	pop    %rbp
    9183:	c3                   	ret

0000000000009184 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9184:	55                   	push   %rbp
    9185:	48 89 e5             	mov    %rsp,%rbp
    9188:	48 83 ec 10          	sub    $0x10,%rsp
    918c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9194:	48 89 c7             	mov    %rax,%rdi
    9197:	e8 a9 0a 00 00       	call   9c45 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>
    919c:	c9                   	leave
    919d:	c3                   	ret

000000000000919e <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    919e:	55                   	push   %rbp
    919f:	48 89 e5             	mov    %rsp,%rbp
    91a2:	48 83 ec 10          	sub    $0x10,%rsp
    91a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    91aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91ae:	48 89 c7             	mov    %rax,%rdi
    91b1:	e8 a9 0a 00 00       	call   9c5f <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>
    91b6:	c9                   	leave
    91b7:	c3                   	ret

00000000000091b8 <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    91b8:	55                   	push   %rbp
    91b9:	48 89 e5             	mov    %rsp,%rbp
    91bc:	48 83 ec 10          	sub    $0x10,%rsp
    91c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    91c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c8:	48 89 c7             	mov    %rax,%rdi
    91cb:	e8 a9 0a 00 00       	call   9c79 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    91d0:	c9                   	leave
    91d1:	c3                   	ret

00000000000091d2 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    91d2:	55                   	push   %rbp
    91d3:	48 89 e5             	mov    %rsp,%rbp
    91d6:	48 83 ec 10          	sub    $0x10,%rsp
    91da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    91de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e2:	48 89 c7             	mov    %rax,%rdi
    91e5:	e8 a9 0a 00 00       	call   9c93 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>
    91ea:	c9                   	leave
    91eb:	c3                   	ret

00000000000091ec <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    91ec:	55                   	push   %rbp
    91ed:	48 89 e5             	mov    %rsp,%rbp
    91f0:	48 83 ec 10          	sub    $0x10,%rsp
    91f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    91f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91fc:	48 89 c7             	mov    %rax,%rdi
    91ff:	e8 a9 0a 00 00       	call   9cad <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9204:	c9                   	leave
    9205:	c3                   	ret

0000000000009206 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9206:	55                   	push   %rbp
    9207:	48 89 e5             	mov    %rsp,%rbp
    920a:	48 83 ec 10          	sub    $0x10,%rsp
    920e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9216:	48 89 c7             	mov    %rax,%rdi
    9219:	e8 a9 0a 00 00       	call   9cc7 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>
    921e:	c9                   	leave
    921f:	c3                   	ret

0000000000009220 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    9220:	55                   	push   %rbp
    9221:	48 89 e5             	mov    %rsp,%rbp
    9224:	48 83 ec 10          	sub    $0x10,%rsp
    9228:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    922c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9230:	48 89 c7             	mov    %rax,%rdi
    9233:	e8 a9 0a 00 00       	call   9ce1 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9238:	c9                   	leave
    9239:	c3                   	ret

000000000000923a <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>:
      _M_access() const noexcept
    923a:	55                   	push   %rbp
    923b:	48 89 e5             	mov    %rsp,%rbp
    923e:	48 83 ec 10          	sub    $0x10,%rsp
    9242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    9246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    924a:	48 89 c7             	mov    %rax,%rdi
    924d:	e8 b2 a8 ff ff       	call   3b04 <_ZNKSt9_Any_data9_M_accessEv>
    9252:	c9                   	leave
    9253:	c3                   	ret

0000000000009254 <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9254:	55                   	push   %rbp
    9255:	48 89 e5             	mov    %rsp,%rbp
    9258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    925c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9260:	5d                   	pop    %rbp
    9261:	c3                   	ret

0000000000009262 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9262:	55                   	push   %rbp
    9263:	48 89 e5             	mov    %rsp,%rbp
    9266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    926a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    926e:	5d                   	pop    %rbp
    926f:	c3                   	ret

0000000000009270 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    9270:	55                   	push   %rbp
    9271:	48 89 e5             	mov    %rsp,%rbp
    9274:	48 83 ec 10          	sub    $0x10,%rsp
    9278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    927c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9280:	48 89 c7             	mov    %rax,%rdi
    9283:	e8 da ff ff ff       	call   9262 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    9288:	48 89 c7             	mov    %rax,%rdi
    928b:	e8 26 b4 ff ff       	call   46b6 <_ZZN4neko6Engine5startEvENKUlvE_clEv>
    9290:	90                   	nop
    9291:	c9                   	leave
    9292:	c3                   	ret

0000000000009293 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    9293:	55                   	push   %rbp
    9294:	48 89 e5             	mov    %rsp,%rbp
    9297:	48 83 ec 10          	sub    $0x10,%rsp
    929b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    929f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    92a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92a7:	48 89 c7             	mov    %rax,%rdi
    92aa:	e8 4c 0a 00 00       	call   9cfb <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    92af:	48 89 c2             	mov    %rax,%rdx
    92b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92b6:	48 89 d6             	mov    %rdx,%rsi
    92b9:	48 89 c7             	mov    %rax,%rdi
    92bc:	e8 48 0a 00 00       	call   9d09 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    92c1:	90                   	nop
    92c2:	c9                   	leave
    92c3:	c3                   	ret

00000000000092c4 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    92c4:	55                   	push   %rbp
    92c5:	48 89 e5             	mov    %rsp,%rbp
    92c8:	48 83 ec 10          	sub    $0x10,%rsp
    92cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    92d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d4:	48 89 c7             	mov    %rax,%rdi
    92d7:	e8 74 0a 00 00       	call   9d50 <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>
	}
    92dc:	90                   	nop
    92dd:	c9                   	leave
    92de:	c3                   	ret
    92df:	90                   	nop

00000000000092e0 <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    92e0:	55                   	push   %rbp
    92e1:	48 89 e5             	mov    %rsp,%rbp
    92e4:	48 83 ec 10          	sub    $0x10,%rsp
    92e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    92ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92f0:	48 89 c7             	mov    %rax,%rdi
    92f3:	e8 72 0a 00 00       	call   9d6a <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>
    92f8:	90                   	nop
    92f9:	c9                   	leave
    92fa:	c3                   	ret

00000000000092fb <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    92fb:	55                   	push   %rbp
    92fc:	48 89 e5             	mov    %rsp,%rbp
    92ff:	48 83 ec 10          	sub    $0x10,%rsp
    9303:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    930b:	48 89 c7             	mov    %rax,%rdi
    930e:	e8 7e 0a 00 00       	call   9d91 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>
    9313:	c9                   	leave
    9314:	c3                   	ret

0000000000009315 <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9315:	55                   	push   %rbp
    9316:	48 89 e5             	mov    %rsp,%rbp
    9319:	48 83 ec 10          	sub    $0x10,%rsp
    931d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9325:	48 89 c7             	mov    %rax,%rdi
    9328:	e8 7e 0a 00 00       	call   9dab <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    932d:	c9                   	leave
    932e:	c3                   	ret

000000000000932f <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    932f:	55                   	push   %rbp
    9330:	48 89 e5             	mov    %rsp,%rbp
    9333:	48 83 ec 10          	sub    $0x10,%rsp
    9337:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    933b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    933f:	48 89 c7             	mov    %rax,%rdi
    9342:	e8 7e 0a 00 00       	call   9dc5 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    9347:	c9                   	leave
    9348:	c3                   	ret

0000000000009349 <_ZSt11__addressofISt6threadEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9349:	55                   	push   %rbp
    934a:	48 89 e5             	mov    %rsp,%rbp
    934d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9355:	5d                   	pop    %rbp
    9356:	c3                   	ret

0000000000009357 <_ZSt8_DestroyISt6threadEvPT_>:
    _Destroy(_Tp* __pointer)
    9357:	55                   	push   %rbp
    9358:	48 89 e5             	mov    %rsp,%rbp
    935b:	48 83 ec 10          	sub    $0x10,%rsp
    935f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    9363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9367:	48 89 c7             	mov    %rax,%rdi
    936a:	e8 db a8 ff ff       	call   3c4a <_ZNSt6threadD1Ev>
    }
    936f:	90                   	nop
    9370:	c9                   	leave
    9371:	c3                   	ret

0000000000009372 <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9372:	55                   	push   %rbp
    9373:	48 89 e5             	mov    %rsp,%rbp
    9376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    937a:	90                   	nop
    937b:	5d                   	pop    %rbp
    937c:	c3                   	ret
    937d:	90                   	nop

000000000000937e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>:
      _Deque_iterator() _GLIBCXX_NOEXCEPT
    937e:	55                   	push   %rbp
    937f:	48 89 e5             	mov    %rsp,%rbp
    9382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
    9386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    938a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9395:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    939c:	00 
    939d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    93a8:	00 
    93a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ad:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    93b4:	00 
    93b5:	90                   	nop
    93b6:	5d                   	pop    %rbp
    93b7:	c3                   	ret

00000000000093b8 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>:
      allocate(allocator_type& __a, size_type __n)
    93b8:	55                   	push   %rbp
    93b9:	48 89 e5             	mov    %rsp,%rbp
    93bc:	48 83 ec 10          	sub    $0x10,%rsp
    93c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    93c8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d0:	ba 00 00 00 00       	mov    $0x0,%edx
    93d5:	48 89 ce             	mov    %rcx,%rsi
    93d8:	48 89 c7             	mov    %rax,%rdi
    93db:	e8 00 0a 00 00       	call   9de0 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>
    93e0:	c9                   	leave
    93e1:	c3                   	ret

00000000000093e2 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    93e2:	55                   	push   %rbp
    93e3:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    93e6:	bf 20 00 00 00       	mov    $0x20,%edi
    93eb:	e8 01 a8 ff ff       	call   3bf1 <_ZSt16__deque_buf_sizem>
    93f0:	5d                   	pop    %rbp
    93f1:	c3                   	ret

00000000000093f2 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    93f2:	55                   	push   %rbp
    93f3:	48 89 e5             	mov    %rsp,%rbp
    93f6:	48 83 ec 20          	sub    $0x20,%rsp
    93fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9402:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9406:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    940a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    940e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9412:	48 89 ce             	mov    %rcx,%rsi
    9415:	48 89 c7             	mov    %rax,%rdi
    9418:	e8 25 0a 00 00       	call   9e42 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>
    941d:	90                   	nop
    941e:	c9                   	leave
    941f:	c3                   	ret

0000000000009420 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    9420:	55                   	push   %rbp
    9421:	48 89 e5             	mov    %rsp,%rbp
    9424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    942c:	5d                   	pop    %rbp
    942d:	c3                   	ret

000000000000942e <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
    942e:	55                   	push   %rbp
    942f:	48 89 e5             	mov    %rsp,%rbp
    9432:	48 83 ec 10          	sub    $0x10,%rsp
    9436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    943a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    943e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9442:	48 89 c7             	mov    %rax,%rdi
    9445:	e8 28 0a 00 00       	call   9e72 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>
    944a:	90                   	nop
    944b:	c9                   	leave
    944c:	c3                   	ret
    944d:	90                   	nop

000000000000944e <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    944e:	55                   	push   %rbp
    944f:	48 89 e5             	mov    %rsp,%rbp
    9452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9456:	90                   	nop
    9457:	5d                   	pop    %rbp
    9458:	c3                   	ret
    9459:	90                   	nop

000000000000945a <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    945a:	55                   	push   %rbp
    945b:	48 89 e5             	mov    %rsp,%rbp
    945e:	48 83 ec 20          	sub    $0x20,%rsp
    9462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9466:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    946a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    946e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9472:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9479:	00 
    947a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    947e:	48 89 d6             	mov    %rdx,%rsi
    9481:	48 89 c7             	mov    %rax,%rdi
    9484:	e8 47 9e ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    9489:	c9                   	leave
    948a:	c3                   	ret

000000000000948b <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    948b:	55                   	push   %rbp
    948c:	48 89 e5             	mov    %rsp,%rbp
    948f:	48 83 ec 10          	sub    $0x10,%rsp
    9493:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9497:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    949b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    949f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94a3:	48 89 d6             	mov    %rdx,%rsi
    94a6:	48 89 c7             	mov    %rax,%rdi
    94a9:	e8 cf 09 00 00       	call   9e7d <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>
    }
    94ae:	90                   	nop
    94af:	c9                   	leave
    94b0:	c3                   	ret
    94b1:	90                   	nop

00000000000094b2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    94b2:	55                   	push   %rbp
    94b3:	48 89 e5             	mov    %rsp,%rbp
    94b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    94ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94be:	5d                   	pop    %rbp
    94bf:	c3                   	ret

00000000000094c0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    94c0:	55                   	push   %rbp
    94c1:	48 89 e5             	mov    %rsp,%rbp
    94c4:	48 83 ec 10          	sub    $0x10,%rsp
    94c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    94d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d8:	48 89 d6             	mov    %rdx,%rsi
    94db:	48 89 c7             	mov    %rax,%rdi
    94de:	e8 d3 09 00 00       	call   9eb6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>
	}
    94e3:	90                   	nop
    94e4:	c9                   	leave
    94e5:	c3                   	ret

00000000000094e6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    94e6:	55                   	push   %rbp
    94e7:	48 89 e5             	mov    %rsp,%rbp
    94ea:	48 83 ec 20          	sub    $0x20,%rsp
    94ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    94fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9506:	48 89 ce             	mov    %rcx,%rsi
    9509:	48 89 c7             	mov    %rax,%rdi
    950c:	e8 b5 09 00 00       	call   9ec6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>
    9511:	90                   	nop
    9512:	c9                   	leave
    9513:	c3                   	ret

0000000000009514 <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    9514:	55                   	push   %rbp
    9515:	48 89 e5             	mov    %rsp,%rbp
    9518:	48 83 ec 10          	sub    $0x10,%rsp
    951c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9520:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return difference_type(_S_buffer_size())
    9524:	e8 b9 fe ff ff       	call   93e2 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    9529:	48 89 c1             	mov    %rax,%rcx
	  * (__x._M_node - __y._M_node - bool(__x._M_node))
    952c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9530:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9534:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9538:	48 8b 40 18          	mov    0x18(%rax),%rax
    953c:	48 29 c2             	sub    %rax,%rdx
    953f:	48 89 d0             	mov    %rdx,%rax
    9542:	48 c1 f8 03          	sar    $0x3,%rax
    9546:	48 89 c2             	mov    %rax,%rdx
    9549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    954d:	48 8b 40 18          	mov    0x18(%rax),%rax
    9551:	48 85 c0             	test   %rax,%rax
    9554:	0f 95 c0             	setne  %al
    9557:	0f b6 c0             	movzbl %al,%eax
    955a:	48 29 c2             	sub    %rax,%rdx
    955d:	48 0f af d1          	imul   %rcx,%rdx
	  + (__x._M_cur - __x._M_first)
    9561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9565:	48 8b 08             	mov    (%rax),%rcx
    9568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    956c:	48 8b 40 08          	mov    0x8(%rax),%rax
    9570:	48 29 c1             	sub    %rax,%rcx
    9573:	48 89 c8             	mov    %rcx,%rax
    9576:	48 c1 f8 05          	sar    $0x5,%rax
    957a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
	  + (__y._M_last - __y._M_cur);
    957e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9582:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9586:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    958a:	48 8b 00             	mov    (%rax),%rax
    958d:	48 29 c2             	sub    %rax,%rdx
    9590:	48 89 d0             	mov    %rdx,%rax
    9593:	48 c1 f8 05          	sar    $0x5,%rax
    9597:	48 01 c8             	add    %rcx,%rax
      }
    959a:	c9                   	leave
    959b:	c3                   	ret

000000000000959c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    959c:	55                   	push   %rbp
    959d:	48 89 e5             	mov    %rsp,%rbp
    95a0:	48 83 ec 20          	sub    $0x20,%rsp
    95a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
    95a8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    95af:	ff ff 7f 
    95b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    95b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95ba:	48 89 c7             	mov    %rax,%rdi
    95bd:	e8 3d 09 00 00       	call   9eff <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>
    95c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    95c6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    95ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    95ce:	48 89 d6             	mov    %rdx,%rsi
    95d1:	48 89 c7             	mov    %rax,%rdi
    95d4:	e8 8b a5 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    95d9:	48 8b 00             	mov    (%rax),%rax
      }
    95dc:	c9                   	leave
    95dd:	c3                   	ret

00000000000095de <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>:
	}
    }

  template <typename _Tp, typename _Alloc>
    void
    deque<_Tp, _Alloc>::
    95de:	55                   	push   %rbp
    95df:	48 89 e5             	mov    %rsp,%rbp
    95e2:	53                   	push   %rbx
    95e3:	48 83 ec 58          	sub    $0x58,%rsp
    95e7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    95eb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    95ef:	89 d0                	mov    %edx,%eax
    95f1:	88 45 ac             	mov    %al,-0x54(%rbp)
    _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
    {
      const size_type __old_num_nodes
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
    95f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    95f8:	48 8b 50 48          	mov    0x48(%rax),%rdx
    95fc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9600:	48 8b 40 28          	mov    0x28(%rax),%rax
    9604:	48 29 c2             	sub    %rax,%rdx
    9607:	48 89 d0             	mov    %rdx,%rax
    960a:	48 c1 f8 03          	sar    $0x3,%rax
    960e:	48 83 c0 01          	add    $0x1,%rax
      const size_type __old_num_nodes
    9612:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
    9616:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    961a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    961e:	48 01 d0             	add    %rdx,%rax
    9621:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

      _Map_pointer __new_nstart;
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
    9625:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9629:	48 8b 40 08          	mov    0x8(%rax),%rax
    962d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9631:	48 01 d2             	add    %rdx,%rdx
    9634:	48 39 c2             	cmp    %rax,%rdx
    9637:	0f 83 aa 00 00 00    	jae    96e7 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x109>
	{
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    963d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9641:	48 8b 10             	mov    (%rax),%rdx
    9644:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9648:	48 8b 40 08          	mov    0x8(%rax),%rax
					 - __new_num_nodes) / 2
    964c:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    9650:	48 d1 e8             	shr    %rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    9653:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    965a:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    965b:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    965f:	74 0a                	je     966b <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x8d>
    9661:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9665:	48 c1 e0 03          	shl    $0x3,%rax
    9669:	eb 05                	jmp    9670 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x92>
    966b:	b8 00 00 00 00       	mov    $0x0,%eax
    9670:	48 01 c8             	add    %rcx,%rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    9673:	48 01 d0             	add    %rdx,%rax
    9676:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  if (__new_nstart < this->_M_impl._M_start._M_node)
    967a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    967e:	48 8b 40 28          	mov    0x28(%rax),%rax
    9682:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9686:	73 28                	jae    96b0 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0xd2>
	    std::copy(this->_M_impl._M_start._M_node,
		      this->_M_impl._M_finish._M_node + 1,
    9688:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    968c:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy(this->_M_impl._M_start._M_node,
    9690:	48 8d 48 08          	lea    0x8(%rax),%rcx
    9694:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9698:	48 8b 40 28          	mov    0x28(%rax),%rax
    969c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96a0:	48 89 ce             	mov    %rcx,%rsi
    96a3:	48 89 c7             	mov    %rax,%rdi
    96a6:	e8 6e 08 00 00       	call   9f19 <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    96ab:	e9 09 01 00 00       	jmp    97b9 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
		      __new_nstart);
	  else
	    std::copy_backward(this->_M_impl._M_start._M_node,
			       this->_M_impl._M_finish._M_node + 1,
			       __new_nstart + __old_num_nodes);
    96b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96b4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    96bb:	00 
	    std::copy_backward(this->_M_impl._M_start._M_node,
    96bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96c0:	48 01 c2             	add    %rax,%rdx
			       this->_M_impl._M_finish._M_node + 1,
    96c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    96c7:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy_backward(this->_M_impl._M_start._M_node,
    96cb:	48 8d 48 08          	lea    0x8(%rax),%rcx
    96cf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    96d3:	48 8b 40 28          	mov    0x28(%rax),%rax
    96d7:	48 89 ce             	mov    %rcx,%rsi
    96da:	48 89 c7             	mov    %rax,%rdi
    96dd:	e8 82 08 00 00       	call   9f64 <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    96e2:	e9 d2 00 00 00       	jmp    97b9 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
	}
      else
	{
	  size_type __new_map_size = this->_M_impl._M_map_size
    96e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    96eb:	48 8b 58 08          	mov    0x8(%rax),%rbx
				     + std::max(this->_M_impl._M_map_size,
    96ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    96f3:	48 8d 50 08          	lea    0x8(%rax),%rdx
    96f7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    96fb:	48 89 c6             	mov    %rax,%rsi
    96fe:	48 89 d7             	mov    %rdx,%rdi
    9701:	e8 54 b1 ff ff       	call   485a <_ZSt3maxImERKT_S2_S2_>
    9706:	48 8b 00             	mov    (%rax),%rax
    9709:	48 01 d8             	add    %rbx,%rax
	  size_type __new_map_size = this->_M_impl._M_map_size
    970c:	48 83 c0 02          	add    $0x2,%rax
    9710:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
						__nodes_to_add) + 2;

	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
    9714:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9718:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    971c:	48 89 d6             	mov    %rdx,%rsi
    971f:	48 89 c7             	mov    %rax,%rdi
    9722:	e8 85 ee ff ff       	call   85ac <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    9727:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    972b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    972f:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    9733:	48 d1 e8             	shr    %rax
    9736:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    973d:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    973e:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    9742:	74 0a                	je     974e <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x170>
    9744:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9748:	48 c1 e0 03          	shl    $0x3,%rax
    974c:	eb 05                	jmp    9753 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x175>
    974e:	b8 00 00 00 00       	mov    $0x0,%eax
    9753:	48 01 c2             	add    %rax,%rdx
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    9756:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    975a:	48 01 d0             	add    %rdx,%rax
    975d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  std::copy(this->_M_impl._M_start._M_node,
		    this->_M_impl._M_finish._M_node + 1,
    9761:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9765:	48 8b 40 48          	mov    0x48(%rax),%rax
	  std::copy(this->_M_impl._M_start._M_node,
    9769:	48 8d 48 08          	lea    0x8(%rax),%rcx
    976d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9771:	48 8b 40 28          	mov    0x28(%rax),%rax
    9775:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9779:	48 89 ce             	mov    %rcx,%rsi
    977c:	48 89 c7             	mov    %rax,%rdi
    977f:	e8 95 07 00 00       	call   9f19 <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
		    __new_nstart);
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    9784:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9788:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    978c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    9790:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    9794:	48 8b 09             	mov    (%rcx),%rcx
    9797:	48 89 ce             	mov    %rcx,%rsi
    979a:	48 89 c7             	mov    %rax,%rdi
    979d:	e8 74 da ff ff       	call   7216 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>

	  this->_M_impl._M_map = __new_map;
    97a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97a6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    97aa:	48 89 10             	mov    %rdx,(%rax)
	  this->_M_impl._M_map_size = __new_map_size;
    97ad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97b1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    97b5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	}

      this->_M_impl._M_start._M_set_node(__new_nstart);
    97b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97bd:	48 8d 50 10          	lea    0x10(%rax),%rdx
    97c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97c5:	48 89 c6             	mov    %rax,%rsi
    97c8:	48 89 d7             	mov    %rdx,%rdi
    97cb:	e8 c8 ee ff ff       	call   8698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
    97d0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97d4:	48 83 c0 30          	add    $0x30,%rax
    97d8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    97dc:	48 c1 e2 03          	shl    $0x3,%rdx
    97e0:	48 8d 4a f8          	lea    -0x8(%rdx),%rcx
    97e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    97e8:	48 01 ca             	add    %rcx,%rdx
    97eb:	48 89 d6             	mov    %rdx,%rsi
    97ee:	48 89 c7             	mov    %rax,%rdi
    97f1:	e8 a2 ee ff ff       	call   8698 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
    }
    97f6:	90                   	nop
    97f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    97fb:	c9                   	leave
    97fc:	c3                   	ret

00000000000097fd <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    97fd:	55                   	push   %rbp
    97fe:	48 89 e5             	mov    %rsp,%rbp
    9801:	48 83 ec 10          	sub    $0x10,%rsp
    9805:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9809:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    980d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9815:	ba 00 00 00 00       	mov    $0x0,%edx
    981a:	48 89 ce             	mov    %rcx,%rsi
    981d:	48 89 c7             	mov    %rax,%rdi
    9820:	e8 8b 07 00 00       	call   9fb0 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>
    9825:	c9                   	leave
    9826:	c3                   	ret

0000000000009827 <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    9827:	55                   	push   %rbp
    9828:	48 89 e5             	mov    %rsp,%rbp
    982b:	48 83 ec 10          	sub    $0x10,%rsp
    982f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    9833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9837:	48 89 c7             	mov    %rax,%rdi
    983a:	e8 d3 07 00 00       	call   a012 <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>
      }
    983f:	c9                   	leave
    9840:	c3                   	ret

0000000000009841 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9841:	55                   	push   %rbp
    9842:	48 89 e5             	mov    %rsp,%rbp
    9845:	48 83 ec 20          	sub    $0x20,%rsp
    9849:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    984d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    9851:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9855:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    9859:	eb 1e                	jmp    9879 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    985b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    985f:	48 89 c7             	mov    %rax,%rdi
    9862:	e8 e2 fa ff ff       	call   9349 <_ZSt11__addressofISt6threadEPT_RS1_>
    9867:	48 89 c7             	mov    %rax,%rdi
    986a:	e8 d8 07 00 00       	call   a047 <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    986f:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    9874:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    9879:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    987e:	75 db                	jne    985b <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x1a>
	      return __cur;
    9880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    9884:	c9                   	leave
    9885:	c3                   	ret

0000000000009886 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9886:	55                   	push   %rbp
    9887:	48 89 e5             	mov    %rsp,%rbp
    988a:	48 83 ec 20          	sub    $0x20,%rsp
    988e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9892:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9896:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    989a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    989e:	48 89 c7             	mov    %rax,%rdi
    98a1:	e8 d0 07 00 00       	call   a076 <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    98a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    98aa:	0f 92 c0             	setb   %al
    98ad:	0f b6 c0             	movzbl %al,%eax
    98b0:	48 85 c0             	test   %rax,%rax
    98b3:	0f 95 c0             	setne  %al
    98b6:	84 c0                	test   %al,%al
    98b8:	74 1a                	je     98d4 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    98ba:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    98c1:	ff ff 1f 
    98c4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    98c8:	73 05                	jae    98cf <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    98ca:	e8 41 99 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    98cf:	e8 bc 97 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    98d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    98d8:	48 c1 e0 03          	shl    $0x3,%rax
    98dc:	48 89 c7             	mov    %rax,%rdi
    98df:	e8 dc 99 ff ff       	call   32c0 <_Znwm@plt>
    98e4:	90                   	nop
      }
    98e5:	c9                   	leave
    98e6:	c3                   	ret

00000000000098e7 <_ZSt12__niter_baseIPSt6threadET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the __normal_iterator wrapper. See copy, fill, ...
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __niter_base(_Iterator __it)
    98e7:	55                   	push   %rbp
    98e8:	48 89 e5             	mov    %rsp,%rbp
    98eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
    98ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f3:	5d                   	pop    %rbp
    98f4:	c3                   	ret

00000000000098f5 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
    98f5:	55                   	push   %rbp
    98f6:	48 89 e5             	mov    %rsp,%rbp
    98f9:	53                   	push   %rbx
    98fa:	48 83 ec 38          	sub    $0x38,%rsp
    98fe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9902:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9906:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    990a:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
    990e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9912:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
    9916:	eb 3a                	jmp    9952 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
    9918:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    991c:	48 89 c7             	mov    %rax,%rdi
    991f:	e8 25 fa ff ff       	call   9349 <_ZSt11__addressofISt6threadEPT_RS1_>
    9924:	48 89 c3             	mov    %rax,%rbx
    9927:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    992b:	48 89 c7             	mov    %rax,%rdi
    992e:	e8 16 fa ff ff       	call   9349 <_ZSt11__addressofISt6threadEPT_RS1_>
    9933:	48 89 c1             	mov    %rax,%rcx
    9936:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    993a:	48 89 c2             	mov    %rax,%rdx
    993d:	48 89 de             	mov    %rbx,%rsi
    9940:	48 89 cf             	mov    %rcx,%rdi
    9943:	e8 42 07 00 00       	call   a08a <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    9948:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    994d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    9952:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9956:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    995a:	75 bc                	jne    9918 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x23>
      return __cur;
    995c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    9960:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9964:	c9                   	leave
    9965:	c3                   	ret

0000000000009966 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    9966:	55                   	push   %rbp
    9967:	48 89 e5             	mov    %rsp,%rbp
    996a:	53                   	push   %rbx
    996b:	48 83 ec 18          	sub    $0x18,%rsp
    996f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9973:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    9977:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    997b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    997f:	48 89 c7             	mov    %rax,%rdi
    9982:	e8 2d c8 ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    9987:	48 89 c6             	mov    %rax,%rsi
    998a:	48 89 df             	mov    %rbx,%rdi
    998d:	e8 50 07 00 00       	call   a0e2 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>
	{ }
    9992:	90                   	nop
    9993:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9997:	c9                   	leave
    9998:	c3                   	ret
    9999:	90                   	nop

000000000000999a <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>:
      constexpr _Head_base(const _Head& __h)
    999a:	55                   	push   %rbp
    999b:	48 89 e5             	mov    %rsp,%rbp
    999e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_head_impl(__h) { }
    99a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    99aa:	48 8b 10             	mov    (%rax),%rdx
    99ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99b1:	48 89 10             	mov    %rdx,(%rax)
    99b4:	90                   	nop
    99b5:	5d                   	pop    %rbp
    99b6:	c3                   	ret
    99b7:	90                   	nop

00000000000099b8 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    99b8:	55                   	push   %rbp
    99b9:	48 89 e5             	mov    %rsp,%rbp
    99bc:	48 83 ec 10          	sub    $0x10,%rsp
    99c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    99c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99c8:	48 89 c7             	mov    %rax,%rdi
    99cb:	e8 3c 07 00 00       	call   a10c <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>
    99d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99d4:	48 89 c7             	mov    %rax,%rdi
    99d7:	e8 4c 07 00 00       	call   a128 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>
    99dc:	90                   	nop
    99dd:	c9                   	leave
    99de:	c3                   	ret

00000000000099df <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    99df:	55                   	push   %rbp
    99e0:	48 89 e5             	mov    %rsp,%rbp
    99e3:	48 83 ec 10          	sub    $0x10,%rsp
    99e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    99eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99ef:	48 89 c7             	mov    %rax,%rdi
    99f2:	e8 47 07 00 00       	call   a13e <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>
    99f7:	c9                   	leave
    99f8:	c3                   	ret

00000000000099f9 <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    99f9:	55                   	push   %rbp
    99fa:	48 89 e5             	mov    %rsp,%rbp
    99fd:	48 83 ec 10          	sub    $0x10,%rsp
    9a01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a09:	48 89 c7             	mov    %rax,%rdi
    9a0c:	e8 47 07 00 00       	call   a158 <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    9a11:	c9                   	leave
    9a12:	c3                   	ret
    9a13:	90                   	nop

0000000000009a14 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() noexcept
    9a14:	55                   	push   %rbp
    9a15:	48 89 e5             	mov    %rsp,%rbp
    9a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    9a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a20:	5d                   	pop    %rbp
    9a21:	c3                   	ret

0000000000009a22 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    9a22:	55                   	push   %rbp
    9a23:	48 89 e5             	mov    %rsp,%rbp
    9a26:	48 83 ec 10          	sub    $0x10,%rsp
    9a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    9a32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a36:	48 89 c7             	mov    %rax,%rdi
    9a39:	e8 6c e0 ff ff       	call   7aaa <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    9a3e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a42:	48 89 02             	mov    %rax,(%rdx)
    9a45:	90                   	nop
    9a46:	c9                   	leave
    9a47:	c3                   	ret

0000000000009a48 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>:
      _M_get_node()
    9a48:	55                   	push   %rbp
    9a49:	48 89 e5             	mov    %rsp,%rbp
    9a4c:	48 83 ec 10          	sub    $0x10,%rsp
    9a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    9a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a58:	48 89 c7             	mov    %rax,%rdi
    9a5b:	e8 52 fa ff ff       	call   94b2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9a60:	be 01 00 00 00       	mov    $0x1,%esi
    9a65:	48 89 c7             	mov    %rax,%rdi
    9a68:	e8 05 07 00 00       	call   a172 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>
    9a6d:	c9                   	leave
    9a6e:	c3                   	ret
    9a6f:	90                   	nop

0000000000009a70 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    9a70:	55                   	push   %rbp
    9a71:	48 89 e5             	mov    %rsp,%rbp
    9a74:	41 56                	push   %r14
    9a76:	41 55                	push   %r13
    9a78:	41 54                	push   %r12
    9a7a:	53                   	push   %rbx
    9a7b:	48 83 ec 30          	sub    $0x30,%rsp
    9a7f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9a83:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9a87:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9a8b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    9a8f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    9a93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9a97:	48 89 c6             	mov    %rax,%rsi
    9a9a:	bf 30 00 00 00       	mov    $0x30,%edi
    9a9f:	e8 d5 9d ff ff       	call   3879 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    9aa4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9aa8:	48 89 c7             	mov    %rax,%rdi
    9aab:	e8 57 e0 ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    9ab0:	49 89 c6             	mov    %rax,%r14
    9ab3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9ab7:	48 89 c7             	mov    %rax,%rdi
    9aba:	e8 3a e0 ff ff       	call   7af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    9abf:	49 89 c5             	mov    %rax,%r13
    9ac2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9ac6:	48 89 c7             	mov    %rax,%rdi
    9ac9:	e8 1d e0 ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    9ace:	49 89 c4             	mov    %rax,%r12
    9ad1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9ad5:	48 89 c7             	mov    %rax,%rdi
    9ad8:	e8 af df ff ff       	call   7a8c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    9add:	48 89 c3             	mov    %rax,%rbx
    9ae0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ae4:	48 89 c7             	mov    %rax,%rdi
    9ae7:	e8 c6 f9 ff ff       	call   94b2 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9aec:	4d 89 f0             	mov    %r14,%r8
    9aef:	4c 89 e9             	mov    %r13,%rcx
    9af2:	4c 89 e2             	mov    %r12,%rdx
    9af5:	48 89 de             	mov    %rbx,%rsi
    9af8:	48 89 c7             	mov    %rax,%rdi
    9afb:	e8 9c 06 00 00       	call   a19c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>
	}
    9b00:	eb 33                	jmp    9b35 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_+0xc5>
	  __catch(...)
    9b02:	48 89 c7             	mov    %rax,%rdi
    9b05:	e8 c6 95 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    9b0a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b12:	48 89 d6             	mov    %rdx,%rsi
    9b15:	48 89 c7             	mov    %rax,%rdi
    9b18:	e8 f5 ec ff ff       	call   8812 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
	      __throw_exception_again;
    9b1d:	e8 ee 98 ff ff       	call   3410 <__cxa_rethrow@plt>
	  __catch(...)
    9b22:	48 89 c3             	mov    %rax,%rbx
    9b25:	e8 56 99 ff ff       	call   3480 <__cxa_end_catch@plt>
    9b2a:	48 89 d8             	mov    %rbx,%rax
    9b2d:	48 89 c7             	mov    %rax,%rdi
    9b30:	e8 9b 99 ff ff       	call   34d0 <_Unwind_Resume@plt>
	}
    9b35:	48 83 c4 30          	add    $0x30,%rsp
    9b39:	5b                   	pop    %rbx
    9b3a:	41 5c                	pop    %r12
    9b3c:	41 5d                	pop    %r13
    9b3e:	41 5e                	pop    %r14
    9b40:	5d                   	pop    %rbp
    9b41:	c3                   	ret

0000000000009b42 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9b42:	55                   	push   %rbp
    9b43:	48 89 e5             	mov    %rsp,%rbp
    9b46:	48 83 ec 20          	sub    $0x20,%rsp
    9b4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    9b4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b52:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9b56:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9b5a:	48 89 d6             	mov    %rdx,%rsi
    9b5d:	48 89 c7             	mov    %rax,%rdi
    9b60:	e8 25 e5 ff ff       	call   808a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    9b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b69:	c9                   	leave
    9b6a:	c3                   	ret
    9b6b:	90                   	nop

0000000000009b6c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    9b6c:	55                   	push   %rbp
    9b6d:	48 89 e5             	mov    %rsp,%rbp
    9b70:	48 83 ec 20          	sub    $0x20,%rsp
    9b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    9b80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b84:	48 89 c7             	mov    %rax,%rdi
    9b87:	e8 7c 06 00 00       	call   a208 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>
    9b8c:	48 8b 10             	mov    (%rax),%rdx
    9b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b93:	48 89 10             	mov    %rdx,(%rax)
    9b96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b9a:	48 89 c7             	mov    %rax,%rdi
    9b9d:	e8 0e 00 00 00       	call   9bb0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    9ba2:	48 8b 10             	mov    (%rax),%rdx
    9ba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ba9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9bad:	90                   	nop
    9bae:	c9                   	leave
    9baf:	c3                   	ret

0000000000009bb0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9bb0:	55                   	push   %rbp
    9bb1:	48 89 e5             	mov    %rsp,%rbp
    9bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bbc:	5d                   	pop    %rbp
    9bbd:	c3                   	ret

0000000000009bbe <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr() const
    9bbe:	55                   	push   %rbp
    9bbf:	48 89 e5             	mov    %rsp,%rbp
    9bc2:	48 83 ec 10          	sub    $0x10,%rsp
    9bc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    9bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bce:	48 83 c0 20          	add    $0x20,%rax
    9bd2:	48 89 c7             	mov    %rax,%rdi
    9bd5:	e8 3c 06 00 00       	call   a216 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    9bda:	c9                   	leave
    9bdb:	c3                   	ret

0000000000009bdc <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    9bdc:	55                   	push   %rbp
    9bdd:	48 89 e5             	mov    %rsp,%rbp
    9be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9be4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    9be8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9bec:	5d                   	pop    %rbp
    9bed:	c3                   	ret

0000000000009bee <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>:
      constexpr _Head_base()
    9bee:	55                   	push   %rbp
    9bef:	48 89 e5             	mov    %rsp,%rbp
    9bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9bf6:	90                   	nop
    9bf7:	5d                   	pop    %rbp
    9bf8:	c3                   	ret

0000000000009bf9 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9bf9:	55                   	push   %rbp
    9bfa:	48 89 e5             	mov    %rsp,%rbp
    9bfd:	48 83 ec 10          	sub    $0x10,%rsp
    9c01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c09:	48 89 c7             	mov    %rax,%rdi
    9c0c:	e8 1f 06 00 00       	call   a230 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>
    9c11:	c9                   	leave
    9c12:	c3                   	ret
    9c13:	90                   	nop

0000000000009c14 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>:
      constexpr _Head_base()
    9c14:	55                   	push   %rbp
    9c15:	48 89 e5             	mov    %rsp,%rbp
    9c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9c1c:	90                   	nop
    9c1d:	5d                   	pop    %rbp
    9c1e:	c3                   	ret

0000000000009c1f <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9c1f:	55                   	push   %rbp
    9c20:	48 89 e5             	mov    %rsp,%rbp
    9c23:	48 83 ec 10          	sub    $0x10,%rsp
    9c27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c2f:	48 89 c7             	mov    %rax,%rdi
    9c32:	e8 07 06 00 00       	call   a23e <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>
    9c37:	c9                   	leave
    9c38:	c3                   	ret
    9c39:	90                   	nop

0000000000009c3a <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>:
      constexpr _Head_base()
    9c3a:	55                   	push   %rbp
    9c3b:	48 89 e5             	mov    %rsp,%rbp
    9c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9c42:	90                   	nop
    9c43:	5d                   	pop    %rbp
    9c44:	c3                   	ret

0000000000009c45 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9c45:	55                   	push   %rbp
    9c46:	48 89 e5             	mov    %rsp,%rbp
    9c49:	48 83 ec 10          	sub    $0x10,%rsp
    9c4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c55:	48 89 c7             	mov    %rax,%rdi
    9c58:	e8 ef 05 00 00       	call   a24c <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    9c5d:	c9                   	leave
    9c5e:	c3                   	ret

0000000000009c5f <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9c5f:	55                   	push   %rbp
    9c60:	48 89 e5             	mov    %rsp,%rbp
    9c63:	48 83 ec 10          	sub    $0x10,%rsp
    9c67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c6f:	48 89 c7             	mov    %rax,%rdi
    9c72:	e8 e3 05 00 00       	call   a25a <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>
    9c77:	c9                   	leave
    9c78:	c3                   	ret

0000000000009c79 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9c79:	55                   	push   %rbp
    9c7a:	48 89 e5             	mov    %rsp,%rbp
    9c7d:	48 83 ec 10          	sub    $0x10,%rsp
    9c81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c89:	48 89 c7             	mov    %rax,%rdi
    9c8c:	e8 d7 05 00 00       	call   a268 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>
    9c91:	c9                   	leave
    9c92:	c3                   	ret

0000000000009c93 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9c93:	55                   	push   %rbp
    9c94:	48 89 e5             	mov    %rsp,%rbp
    9c97:	48 83 ec 10          	sub    $0x10,%rsp
    9c9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ca3:	48 89 c7             	mov    %rax,%rdi
    9ca6:	e8 d7 05 00 00       	call   a282 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>
    9cab:	c9                   	leave
    9cac:	c3                   	ret

0000000000009cad <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9cad:	55                   	push   %rbp
    9cae:	48 89 e5             	mov    %rsp,%rbp
    9cb1:	48 83 ec 10          	sub    $0x10,%rsp
    9cb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9cb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cbd:	48 89 c7             	mov    %rax,%rdi
    9cc0:	e8 cb 05 00 00       	call   a290 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>
    9cc5:	c9                   	leave
    9cc6:	c3                   	ret

0000000000009cc7 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9cc7:	55                   	push   %rbp
    9cc8:	48 89 e5             	mov    %rsp,%rbp
    9ccb:	48 83 ec 10          	sub    $0x10,%rsp
    9ccf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd7:	48 89 c7             	mov    %rax,%rdi
    9cda:	e8 cb 05 00 00       	call   a2aa <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>
    9cdf:	c9                   	leave
    9ce0:	c3                   	ret

0000000000009ce1 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9ce1:	55                   	push   %rbp
    9ce2:	48 89 e5             	mov    %rsp,%rbp
    9ce5:	48 83 ec 10          	sub    $0x10,%rsp
    9ce9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf1:	48 89 c7             	mov    %rax,%rdi
    9cf4:	e8 bf 05 00 00       	call   a2b8 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>
    9cf9:	c9                   	leave
    9cfa:	c3                   	ret

0000000000009cfb <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9cfb:	55                   	push   %rbp
    9cfc:	48 89 e5             	mov    %rsp,%rbp
    9cff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d07:	5d                   	pop    %rbp
    9d08:	c3                   	ret

0000000000009d09 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    9d09:	55                   	push   %rbp
    9d0a:	48 89 e5             	mov    %rsp,%rbp
    9d0d:	53                   	push   %rbx
    9d0e:	48 83 ec 18          	sub    $0x18,%rsp
    9d12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9d16:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    9d1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d1e:	48 89 c7             	mov    %rax,%rdi
    9d21:	e8 d0 9d ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    9d26:	48 89 c6             	mov    %rax,%rsi
    9d29:	bf 08 00 00 00       	mov    $0x8,%edi
    9d2e:	e8 46 9b ff ff       	call   3879 <_ZnwmPv>
    9d33:	48 89 c3             	mov    %rax,%rbx
    9d36:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9d3a:	48 89 c7             	mov    %rax,%rdi
    9d3d:	e8 b9 ff ff ff       	call   9cfb <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    9d42:	48 8b 00             	mov    (%rax),%rax
    9d45:	48 89 03             	mov    %rax,(%rbx)
	  }
    9d48:	90                   	nop
    9d49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d4d:	c9                   	leave
    9d4e:	c3                   	ret
    9d4f:	90                   	nop

0000000000009d50 <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    9d50:	55                   	push   %rbp
    9d51:	48 89 e5             	mov    %rsp,%rbp
    9d54:	48 83 ec 10          	sub    $0x10,%rsp
    9d58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    9d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d60:	48 89 c7             	mov    %rax,%rdi
    9d63:	e8 8e 9d ff ff       	call   3af6 <_ZNSt9_Any_data9_M_accessEv>
    9d68:	c9                   	leave
    9d69:	c3                   	ret

0000000000009d6a <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    9d6a:	55                   	push   %rbp
    9d6b:	48 89 e5             	mov    %rsp,%rbp
    9d6e:	48 83 ec 10          	sub    $0x10,%rsp
    9d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    9d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7a:	48 89 c7             	mov    %rax,%rdi
    9d7d:	e8 50 05 00 00       	call   a2d2 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>
    9d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d86:	48 89 c7             	mov    %rax,%rdi
    9d89:	e8 60 05 00 00       	call   a2ee <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>
    9d8e:	90                   	nop
    9d8f:	c9                   	leave
    9d90:	c3                   	ret

0000000000009d91 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9d91:	55                   	push   %rbp
    9d92:	48 89 e5             	mov    %rsp,%rbp
    9d95:	48 83 ec 10          	sub    $0x10,%rsp
    9d99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da1:	48 89 c7             	mov    %rax,%rdi
    9da4:	e8 5b 05 00 00       	call   a304 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>
    9da9:	c9                   	leave
    9daa:	c3                   	ret

0000000000009dab <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9dab:	55                   	push   %rbp
    9dac:	48 89 e5             	mov    %rsp,%rbp
    9daf:	48 83 ec 10          	sub    $0x10,%rsp
    9db3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9db7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dbb:	48 89 c7             	mov    %rax,%rdi
    9dbe:	e8 4f 05 00 00       	call   a312 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>
    9dc3:	c9                   	leave
    9dc4:	c3                   	ret

0000000000009dc5 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9dc5:	55                   	push   %rbp
    9dc6:	48 89 e5             	mov    %rsp,%rbp
    9dc9:	48 83 ec 10          	sub    $0x10,%rsp
    9dcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9dd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd5:	48 89 c7             	mov    %rax,%rdi
    9dd8:	e8 4f 05 00 00       	call   a32c <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>
    9ddd:	c9                   	leave
    9dde:	c3                   	ret
    9ddf:	90                   	nop

0000000000009de0 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9de0:	55                   	push   %rbp
    9de1:	48 89 e5             	mov    %rsp,%rbp
    9de4:	48 83 ec 20          	sub    $0x20,%rsp
    9de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9df0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9df8:	48 89 c7             	mov    %rax,%rdi
    9dfb:	e8 46 05 00 00       	call   a346 <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>
    9e00:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9e04:	0f 92 c0             	setb   %al
    9e07:	0f b6 c0             	movzbl %al,%eax
    9e0a:	48 85 c0             	test   %rax,%rax
    9e0d:	0f 95 c0             	setne  %al
    9e10:	84 c0                	test   %al,%al
    9e12:	74 1a                	je     9e2e <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9e14:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9e1b:	ff ff 1f 
    9e1e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9e22:	73 05                	jae    9e29 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9e24:	e8 e7 93 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9e29:	e8 62 92 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9e2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e32:	48 c1 e0 03          	shl    $0x3,%rax
    9e36:	48 89 c7             	mov    %rax,%rdi
    9e39:	e8 82 94 ff ff       	call   32c0 <_Znwm@plt>
    9e3e:	90                   	nop
      }
    9e3f:	c9                   	leave
    9e40:	c3                   	ret
    9e41:	90                   	nop

0000000000009e42 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9e42:	55                   	push   %rbp
    9e43:	48 89 e5             	mov    %rsp,%rbp
    9e46:	48 83 ec 20          	sub    $0x20,%rsp
    9e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e5a:	48 c1 e0 05          	shl    $0x5,%rax
    9e5e:	48 89 c2             	mov    %rax,%rdx
    9e61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e65:	48 89 d6             	mov    %rdx,%rsi
    9e68:	48 89 c7             	mov    %rax,%rdi
    9e6b:	e8 60 94 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    9e70:	c9                   	leave
    9e71:	c3                   	ret

0000000000009e72 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9e72:	55                   	push   %rbp
    9e73:	48 89 e5             	mov    %rsp,%rbp
    9e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e7a:	90                   	nop
    9e7b:	5d                   	pop    %rbp
    9e7c:	c3                   	ret

0000000000009e7d <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    9e7d:	55                   	push   %rbp
    9e7e:	48 89 e5             	mov    %rsp,%rbp
    9e81:	48 83 ec 10          	sub    $0x10,%rsp
    9e85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    9e8d:	eb 19                	jmp    9ea8 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    9e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e93:	48 89 c7             	mov    %rax,%rdi
    9e96:	e8 bf 04 00 00       	call   a35a <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>
    9e9b:	48 89 c7             	mov    %rax,%rdi
    9e9e:	e8 c5 04 00 00       	call   a368 <_ZSt8_DestroyISt8functionIFvvEEEvPT_>
	  for (; __first != __last; ++__first)
    9ea3:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    9ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9eb0:	75 dd                	jne    9e8f <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x12>
	}
    9eb2:	90                   	nop
    9eb3:	90                   	nop
    9eb4:	c9                   	leave
    9eb5:	c3                   	ret

0000000000009eb6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
    9eb6:	55                   	push   %rbp
    9eb7:	48 89 e5             	mov    %rsp,%rbp
    9eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ebe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    9ec2:	90                   	nop
    9ec3:	5d                   	pop    %rbp
    9ec4:	c3                   	ret
    9ec5:	90                   	nop

0000000000009ec6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9ec6:	55                   	push   %rbp
    9ec7:	48 89 e5             	mov    %rsp,%rbp
    9eca:	48 83 ec 20          	sub    $0x20,%rsp
    9ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ed2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ed6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9eda:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ede:	48 89 d0             	mov    %rdx,%rax
    9ee1:	48 01 c0             	add    %rax,%rax
    9ee4:	48 01 d0             	add    %rdx,%rax
    9ee7:	48 c1 e0 04          	shl    $0x4,%rax
    9eeb:	48 89 c2             	mov    %rax,%rdx
    9eee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ef2:	48 89 d6             	mov    %rdx,%rsi
    9ef5:	48 89 c7             	mov    %rax,%rdi
    9ef8:	e8 d3 93 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    9efd:	c9                   	leave
    9efe:	c3                   	ret

0000000000009eff <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    9eff:	55                   	push   %rbp
    9f00:	48 89 e5             	mov    %rsp,%rbp
    9f03:	48 83 ec 10          	sub    $0x10,%rsp
    9f07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    9f0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f0f:	48 89 c7             	mov    %rax,%rdi
    9f12:	e8 6d 04 00 00       	call   a384 <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>
      }
    9f17:	c9                   	leave
    9f18:	c3                   	ret

0000000000009f19 <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    9f19:	55                   	push   %rbp
    9f1a:	48 89 e5             	mov    %rsp,%rbp
    9f1d:	53                   	push   %rbx
    9f1e:	48 83 ec 28          	sub    $0x28,%rsp
    9f22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f2a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    9f2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f32:	48 89 c7             	mov    %rax,%rdi
    9f35:	e8 64 04 00 00       	call   a39e <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    9f3a:	48 89 c3             	mov    %rax,%rbx
    9f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f41:	48 89 c7             	mov    %rax,%rdi
    9f44:	e8 55 04 00 00       	call   a39e <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    9f49:	48 89 c1             	mov    %rax,%rcx
    9f4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f50:	48 89 c2             	mov    %rax,%rdx
    9f53:	48 89 de             	mov    %rbx,%rsi
    9f56:	48 89 cf             	mov    %rcx,%rdi
    9f59:	e8 4e 04 00 00       	call   a3ac <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    9f5e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f62:	c9                   	leave
    9f63:	c3                   	ret

0000000000009f64 <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    9f64:	55                   	push   %rbp
    9f65:	48 89 e5             	mov    %rsp,%rbp
    9f68:	53                   	push   %rbx
    9f69:	48 83 ec 28          	sub    $0x28,%rsp
    9f6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9f75:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
	    typename iterator_traits<_BI1>::reference>)
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    9f79:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f7d:	48 89 c7             	mov    %rax,%rdi
    9f80:	e8 19 04 00 00       	call   a39e <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    9f85:	48 89 c3             	mov    %rax,%rbx
    9f88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f8c:	48 89 c7             	mov    %rax,%rdi
    9f8f:	e8 0a 04 00 00       	call   a39e <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    9f94:	48 89 c1             	mov    %rax,%rcx
    9f97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f9b:	48 89 c2             	mov    %rax,%rdx
    9f9e:	48 89 de             	mov    %rbx,%rsi
    9fa1:	48 89 cf             	mov    %rcx,%rdi
    9fa4:	e8 6d 04 00 00       	call   a416 <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    9fa9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9fad:	c9                   	leave
    9fae:	c3                   	ret
    9faf:	90                   	nop

0000000000009fb0 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9fb0:	55                   	push   %rbp
    9fb1:	48 89 e5             	mov    %rsp,%rbp
    9fb4:	48 83 ec 20          	sub    $0x20,%rsp
    9fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc8:	48 89 c7             	mov    %rax,%rdi
    9fcb:	e8 b0 04 00 00       	call   a480 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    9fd0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9fd4:	0f 92 c0             	setb   %al
    9fd7:	0f b6 c0             	movzbl %al,%eax
    9fda:	48 85 c0             	test   %rax,%rax
    9fdd:	0f 95 c0             	setne  %al
    9fe0:	84 c0                	test   %al,%al
    9fe2:	74 1a                	je     9ffe <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9fe4:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
    9feb:	ff ff 07 
    9fee:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9ff2:	73 05                	jae    9ff9 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9ff4:	e8 17 92 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9ff9:	e8 92 90 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9ffe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a002:	48 c1 e0 05          	shl    $0x5,%rax
    a006:	48 89 c7             	mov    %rax,%rdi
    a009:	e8 b2 92 ff ff       	call   32c0 <_Znwm@plt>
    a00e:	90                   	nop
      }
    a00f:	c9                   	leave
    a010:	c3                   	ret
    a011:	90                   	nop

000000000000a012 <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    a012:	55                   	push   %rbp
    a013:	48 89 e5             	mov    %rsp,%rbp
    a016:	48 83 ec 10          	sub    $0x10,%rsp
    a01a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    a01e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a022:	48 89 c7             	mov    %rax,%rdi
    a025:	e8 4c 00 00 00       	call   a076 <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    a02a:	c9                   	leave
    a02b:	c3                   	ret

000000000000a02c <_ZNSt6threadC1Ev>:
    thread() noexcept = default;
    a02c:	55                   	push   %rbp
    a02d:	48 89 e5             	mov    %rsp,%rbp
    a030:	48 83 ec 10          	sub    $0x10,%rsp
    a034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a03c:	48 89 c7             	mov    %rax,%rdi
    a03f:	e8 d6 9b ff ff       	call   3c1a <_ZNSt6thread2idC1Ev>
    a044:	90                   	nop
    a045:	c9                   	leave
    a046:	c3                   	ret

000000000000a047 <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    a047:	55                   	push   %rbp
    a048:	48 89 e5             	mov    %rsp,%rbp
    a04b:	48 83 ec 10          	sub    $0x10,%rsp
    a04f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    a053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a057:	48 89 c6             	mov    %rax,%rsi
    a05a:	bf 08 00 00 00       	mov    $0x8,%edi
    a05f:	e8 15 98 ff ff       	call   3879 <_ZnwmPv>
    a064:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a06b:	48 89 c7             	mov    %rax,%rdi
    a06e:	e8 b9 ff ff ff       	call   a02c <_ZNSt6threadC1Ev>
    }
    a073:	90                   	nop
    a074:	c9                   	leave
    a075:	c3                   	ret

000000000000a076 <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a076:	55                   	push   %rbp
    a077:	48 89 e5             	mov    %rsp,%rbp
    a07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a07e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a085:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    a088:	5d                   	pop    %rbp
    a089:	c3                   	ret

000000000000a08a <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
    a08a:	55                   	push   %rbp
    a08b:	48 89 e5             	mov    %rsp,%rbp
    a08e:	48 83 ec 20          	sub    $0x20,%rsp
    a092:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a096:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a09a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
    a09e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0a2:	48 89 c7             	mov    %rax,%rdi
    a0a5:	e8 ea 03 00 00       	call   a494 <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>
    a0aa:	48 89 c2             	mov    %rax,%rdx
    a0ad:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a0b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0b5:	48 89 ce             	mov    %rcx,%rsi
    a0b8:	48 89 c7             	mov    %rax,%rdi
    a0bb:	e8 e2 03 00 00       	call   a4a2 <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    a0c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0c4:	48 89 c7             	mov    %rax,%rdi
    a0c7:	e8 7d f2 ff ff       	call   9349 <_ZSt11__addressofISt6threadEPT_RS1_>
    a0cc:	48 89 c2             	mov    %rax,%rdx
    a0cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0d3:	48 89 d6             	mov    %rdx,%rsi
    a0d6:	48 89 c7             	mov    %rax,%rdi
    a0d9:	e8 fd 03 00 00       	call   a4db <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>
    }
    a0de:	90                   	nop
    a0df:	c9                   	leave
    a0e0:	c3                   	ret
    a0e1:	90                   	nop

000000000000a0e2 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    a0e2:	55                   	push   %rbp
    a0e3:	48 89 e5             	mov    %rsp,%rbp
    a0e6:	48 83 ec 10          	sub    $0x10,%rsp
    a0ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    a0f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0f6:	48 89 c7             	mov    %rax,%rdi
    a0f9:	e8 b6 c0 ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    a0fe:	48 8b 10             	mov    (%rax),%rdx
    a101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a105:	48 89 10             	mov    %rdx,(%rax)
    a108:	90                   	nop
    a109:	c9                   	leave
    a10a:	c3                   	ret
    a10b:	90                   	nop

000000000000a10c <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>:
      _Tuple_impl()
    a10c:	55                   	push   %rbp
    a10d:	48 89 e5             	mov    %rsp,%rbp
    a110:	48 83 ec 10          	sub    $0x10,%rsp
    a114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a11c:	48 89 c7             	mov    %rax,%rdi
    a11f:	e8 de 03 00 00       	call   a502 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>
    a124:	90                   	nop
    a125:	c9                   	leave
    a126:	c3                   	ret
    a127:	90                   	nop

000000000000a128 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>:
      constexpr _Head_base()
    a128:	55                   	push   %rbp
    a129:	48 89 e5             	mov    %rsp,%rbp
    a12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a134:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a13b:	90                   	nop
    a13c:	5d                   	pop    %rbp
    a13d:	c3                   	ret

000000000000a13e <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a13e:	55                   	push   %rbp
    a13f:	48 89 e5             	mov    %rsp,%rbp
    a142:	48 83 ec 10          	sub    $0x10,%rsp
    a146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a14a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a14e:	48 89 c7             	mov    %rax,%rdi
    a151:	e8 b7 03 00 00       	call   a50d <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>
    a156:	c9                   	leave
    a157:	c3                   	ret

000000000000a158 <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a158:	55                   	push   %rbp
    a159:	48 89 e5             	mov    %rsp,%rbp
    a15c:	48 83 ec 10          	sub    $0x10,%rsp
    a160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a168:	48 89 c7             	mov    %rax,%rdi
    a16b:	e8 ab 03 00 00       	call   a51b <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>
    a170:	c9                   	leave
    a171:	c3                   	ret

000000000000a172 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>:
      allocate(allocator_type& __a, size_type __n)
    a172:	55                   	push   %rbp
    a173:	48 89 e5             	mov    %rsp,%rbp
    a176:	48 83 ec 10          	sub    $0x10,%rsp
    a17a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a17e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    a182:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18a:	ba 00 00 00 00       	mov    $0x0,%edx
    a18f:	48 89 ce             	mov    %rcx,%rsi
    a192:	48 89 c7             	mov    %rax,%rdi
    a195:	e8 9c 03 00 00       	call   a536 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>
    a19a:	c9                   	leave
    a19b:	c3                   	ret

000000000000a19c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a19c:	55                   	push   %rbp
    a19d:	48 89 e5             	mov    %rsp,%rbp
    a1a0:	41 54                	push   %r12
    a1a2:	53                   	push   %rbx
    a1a3:	48 83 ec 30          	sub    $0x30,%rsp
    a1a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a1ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a1af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a1b3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a1b7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a1bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a1bf:	48 89 c7             	mov    %rax,%rdi
    a1c2:	e8 40 d9 ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a1c7:	49 89 c4             	mov    %rax,%r12
    a1ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a1ce:	48 89 c7             	mov    %rax,%rdi
    a1d1:	e8 23 d9 ff ff       	call   7af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a1d6:	48 89 c3             	mov    %rax,%rbx
    a1d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a1dd:	48 89 c7             	mov    %rax,%rdi
    a1e0:	e8 06 d9 ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a1e5:	48 89 c2             	mov    %rax,%rdx
    a1e8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    a1ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1f0:	4d 89 e0             	mov    %r12,%r8
    a1f3:	48 89 d9             	mov    %rbx,%rcx
    a1f6:	48 89 c7             	mov    %rax,%rdi
    a1f9:	e8 c8 03 00 00       	call   a5c6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>
	}
    a1fe:	90                   	nop
    a1ff:	48 83 c4 30          	add    $0x30,%rsp
    a203:	5b                   	pop    %rbx
    a204:	41 5c                	pop    %r12
    a206:	5d                   	pop    %rbp
    a207:	c3                   	ret

000000000000a208 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a208:	55                   	push   %rbp
    a209:	48 89 e5             	mov    %rsp,%rbp
    a20c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a214:	5d                   	pop    %rbp
    a215:	c3                   	ret

000000000000a216 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    a216:	55                   	push   %rbp
    a217:	48 89 e5             	mov    %rsp,%rbp
    a21a:	48 83 ec 10          	sub    $0x10,%rsp
    a21e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    a222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a226:	48 89 c7             	mov    %rax,%rdi
    a229:	e8 48 04 00 00       	call   a676 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    a22e:	c9                   	leave
    a22f:	c3                   	ret

000000000000a230 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a230:	55                   	push   %rbp
    a231:	48 89 e5             	mov    %rsp,%rbp
    a234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a23c:	5d                   	pop    %rbp
    a23d:	c3                   	ret

000000000000a23e <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>:
    a23e:	55                   	push   %rbp
    a23f:	48 89 e5             	mov    %rsp,%rbp
    a242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24a:	5d                   	pop    %rbp
    a24b:	c3                   	ret

000000000000a24c <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    a24c:	55                   	push   %rbp
    a24d:	48 89 e5             	mov    %rsp,%rbp
    a250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a258:	5d                   	pop    %rbp
    a259:	c3                   	ret

000000000000a25a <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a25a:	55                   	push   %rbp
    a25b:	48 89 e5             	mov    %rsp,%rbp
    a25e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a266:	5d                   	pop    %rbp
    a267:	c3                   	ret

000000000000a268 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a268:	55                   	push   %rbp
    a269:	48 89 e5             	mov    %rsp,%rbp
    a26c:	48 83 ec 10          	sub    $0x10,%rsp
    a270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a278:	48 89 c7             	mov    %rax,%rdi
    a27b:	e8 04 04 00 00       	call   a684 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>
    a280:	c9                   	leave
    a281:	c3                   	ret

000000000000a282 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a282:	55                   	push   %rbp
    a283:	48 89 e5             	mov    %rsp,%rbp
    a286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a28a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28e:	5d                   	pop    %rbp
    a28f:	c3                   	ret

000000000000a290 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a290:	55                   	push   %rbp
    a291:	48 89 e5             	mov    %rsp,%rbp
    a294:	48 83 ec 10          	sub    $0x10,%rsp
    a298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a29c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a0:	48 89 c7             	mov    %rax,%rdi
    a2a3:	e8 ea 03 00 00       	call   a692 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>
    a2a8:	c9                   	leave
    a2a9:	c3                   	ret

000000000000a2aa <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a2aa:	55                   	push   %rbp
    a2ab:	48 89 e5             	mov    %rsp,%rbp
    a2ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b6:	5d                   	pop    %rbp
    a2b7:	c3                   	ret

000000000000a2b8 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a2b8:	55                   	push   %rbp
    a2b9:	48 89 e5             	mov    %rsp,%rbp
    a2bc:	48 83 ec 10          	sub    $0x10,%rsp
    a2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c8:	48 89 c7             	mov    %rax,%rdi
    a2cb:	e8 d0 03 00 00       	call   a6a0 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>
    a2d0:	c9                   	leave
    a2d1:	c3                   	ret

000000000000a2d2 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>:
      _Tuple_impl()
    a2d2:	55                   	push   %rbp
    a2d3:	48 89 e5             	mov    %rsp,%rbp
    a2d6:	48 83 ec 10          	sub    $0x10,%rsp
    a2da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a2de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e2:	48 89 c7             	mov    %rax,%rdi
    a2e5:	e8 c4 03 00 00       	call   a6ae <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>
    a2ea:	90                   	nop
    a2eb:	c9                   	leave
    a2ec:	c3                   	ret
    a2ed:	90                   	nop

000000000000a2ee <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>:
      constexpr _Head_base()
    a2ee:	55                   	push   %rbp
    a2ef:	48 89 e5             	mov    %rsp,%rbp
    a2f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a2f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a301:	90                   	nop
    a302:	5d                   	pop    %rbp
    a303:	c3                   	ret

000000000000a304 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a304:	55                   	push   %rbp
    a305:	48 89 e5             	mov    %rsp,%rbp
    a308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a310:	5d                   	pop    %rbp
    a311:	c3                   	ret

000000000000a312 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a312:	55                   	push   %rbp
    a313:	48 89 e5             	mov    %rsp,%rbp
    a316:	48 83 ec 10          	sub    $0x10,%rsp
    a31a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a322:	48 89 c7             	mov    %rax,%rdi
    a325:	e8 8f 03 00 00       	call   a6b9 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>
    a32a:	c9                   	leave
    a32b:	c3                   	ret

000000000000a32c <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a32c:	55                   	push   %rbp
    a32d:	48 89 e5             	mov    %rsp,%rbp
    a330:	48 83 ec 10          	sub    $0x10,%rsp
    a334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33c:	48 89 c7             	mov    %rax,%rdi
    a33f:	e8 83 03 00 00       	call   a6c7 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>
    a344:	c9                   	leave
    a345:	c3                   	ret

000000000000a346 <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a346:	55                   	push   %rbp
    a347:	48 89 e5             	mov    %rsp,%rbp
    a34a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a34e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a355:	ff ff 0f 
      }
    a358:	5d                   	pop    %rbp
    a359:	c3                   	ret

000000000000a35a <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    a35a:	55                   	push   %rbp
    a35b:	48 89 e5             	mov    %rsp,%rbp
    a35e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    a362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a366:	5d                   	pop    %rbp
    a367:	c3                   	ret

000000000000a368 <_ZSt8_DestroyISt8functionIFvvEEEvPT_>:
    _Destroy(_Tp* __pointer)
    a368:	55                   	push   %rbp
    a369:	48 89 e5             	mov    %rsp,%rbp
    a36c:	48 83 ec 10          	sub    $0x10,%rsp
    a370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    a374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a378:	48 89 c7             	mov    %rax,%rdi
    a37b:	e8 5e 9c ff ff       	call   3fde <_ZNSt8functionIFvvEED1Ev>
    }
    a380:	90                   	nop
    a381:	c9                   	leave
    a382:	c3                   	ret
    a383:	90                   	nop

000000000000a384 <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    a384:	55                   	push   %rbp
    a385:	48 89 e5             	mov    %rsp,%rbp
    a388:	48 83 ec 10          	sub    $0x10,%rsp
    a38c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    a390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a394:	48 89 c7             	mov    %rax,%rdi
    a397:	e8 e4 00 00 00       	call   a480 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    a39c:	c9                   	leave
    a39d:	c3                   	ret

000000000000a39e <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    a39e:	55                   	push   %rbp
    a39f:	48 89 e5             	mov    %rsp,%rbp
    a3a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    a3a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3aa:	5d                   	pop    %rbp
    a3ab:	c3                   	ret

000000000000a3ac <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    a3ac:	55                   	push   %rbp
    a3ad:	48 89 e5             	mov    %rsp,%rbp
    a3b0:	41 54                	push   %r12
    a3b2:	53                   	push   %rbx
    a3b3:	48 83 ec 20          	sub    $0x20,%rsp
    a3b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a3bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a3bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    a3c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a3c7:	48 89 c7             	mov    %rax,%rdi
    a3ca:	e8 06 03 00 00       	call   a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a3cf:	49 89 c4             	mov    %rax,%r12
    a3d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3d6:	48 89 c7             	mov    %rax,%rdi
    a3d9:	e8 f7 02 00 00       	call   a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a3de:	48 89 c3             	mov    %rax,%rbx
    a3e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3e5:	48 89 c7             	mov    %rax,%rdi
    a3e8:	e8 e8 02 00 00       	call   a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a3ed:	4c 89 e2             	mov    %r12,%rdx
    a3f0:	48 89 de             	mov    %rbx,%rsi
    a3f3:	48 89 c7             	mov    %rax,%rdi
    a3f6:	e8 e8 02 00 00       	call   a6e3 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a3fb:	48 89 c2             	mov    %rax,%rdx
    a3fe:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a402:	48 89 d6             	mov    %rdx,%rsi
    a405:	48 89 c7             	mov    %rax,%rdi
    a408:	e8 03 03 00 00       	call   a710 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    a40d:	48 83 c4 20          	add    $0x20,%rsp
    a411:	5b                   	pop    %rbx
    a412:	41 5c                	pop    %r12
    a414:	5d                   	pop    %rbp
    a415:	c3                   	ret

000000000000a416 <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a(_II __first, _II __last, _OI __result)
    a416:	55                   	push   %rbp
    a417:	48 89 e5             	mov    %rsp,%rbp
    a41a:	41 54                	push   %r12
    a41c:	53                   	push   %rbx
    a41d:	48 83 ec 20          	sub    $0x20,%rsp
    a421:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a425:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a429:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    a42d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a431:	48 89 c7             	mov    %rax,%rdi
    a434:	e8 9c 02 00 00       	call   a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a439:	49 89 c4             	mov    %rax,%r12
    a43c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a440:	48 89 c7             	mov    %rax,%rdi
    a443:	e8 8d 02 00 00       	call   a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a448:	48 89 c3             	mov    %rax,%rbx
    a44b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a44f:	48 89 c7             	mov    %rax,%rdi
    a452:	e8 7e 02 00 00       	call   a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a457:	4c 89 e2             	mov    %r12,%rdx
    a45a:	48 89 de             	mov    %rbx,%rsi
    a45d:	48 89 c7             	mov    %rax,%rdi
    a460:	e8 bd 02 00 00       	call   a722 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a465:	48 89 c2             	mov    %rax,%rdx
    a468:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a46c:	48 89 d6             	mov    %rdx,%rsi
    a46f:	48 89 c7             	mov    %rax,%rdi
    a472:	e8 99 02 00 00       	call   a710 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    a477:	48 83 c4 20          	add    $0x20,%rsp
    a47b:	5b                   	pop    %rbx
    a47c:	41 5c                	pop    %r12
    a47e:	5d                   	pop    %rbp
    a47f:	c3                   	ret

000000000000a480 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a480:	55                   	push   %rbp
    a481:	48 89 e5             	mov    %rsp,%rbp
    a484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a488:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    a48f:	ff ff 03 
      }
    a492:	5d                   	pop    %rbp
    a493:	c3                   	ret

000000000000a494 <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    a494:	55                   	push   %rbp
    a495:	48 89 e5             	mov    %rsp,%rbp
    a498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a49c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a0:	5d                   	pop    %rbp
    a4a1:	c3                   	ret

000000000000a4a2 <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a4a2:	55                   	push   %rbp
    a4a3:	48 89 e5             	mov    %rsp,%rbp
    a4a6:	48 83 ec 20          	sub    $0x20,%rsp
    a4aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a4b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4ba:	48 89 c7             	mov    %rax,%rdi
    a4bd:	e8 8d 02 00 00       	call   a74f <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    a4c2:	48 89 c2             	mov    %rax,%rdx
    a4c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4cd:	48 89 ce             	mov    %rcx,%rsi
    a4d0:	48 89 c7             	mov    %rax,%rdi
    a4d3:	e8 86 02 00 00       	call   a75e <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>
	}
    a4d8:	90                   	nop
    a4d9:	c9                   	leave
    a4da:	c3                   	ret

000000000000a4db <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    a4db:	55                   	push   %rbp
    a4dc:	48 89 e5             	mov    %rsp,%rbp
    a4df:	48 83 ec 10          	sub    $0x10,%rsp
    a4e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    a4eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f3:	48 89 d6             	mov    %rdx,%rsi
    a4f6:	48 89 c7             	mov    %rax,%rdi
    a4f9:	e8 a8 02 00 00       	call   a7a6 <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>
	}
    a4fe:	90                   	nop
    a4ff:	c9                   	leave
    a500:	c3                   	ret
    a501:	90                   	nop

000000000000a502 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>:
      constexpr _Head_base()
    a502:	55                   	push   %rbp
    a503:	48 89 e5             	mov    %rsp,%rbp
    a506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a50a:	90                   	nop
    a50b:	5d                   	pop    %rbp
    a50c:	c3                   	ret

000000000000a50d <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a50d:	55                   	push   %rbp
    a50e:	48 89 e5             	mov    %rsp,%rbp
    a511:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a519:	5d                   	pop    %rbp
    a51a:	c3                   	ret

000000000000a51b <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a51b:	55                   	push   %rbp
    a51c:	48 89 e5             	mov    %rsp,%rbp
    a51f:	48 83 ec 10          	sub    $0x10,%rsp
    a523:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a52b:	48 89 c7             	mov    %rax,%rdi
    a52e:	e8 92 02 00 00       	call   a7c5 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>
    a533:	c9                   	leave
    a534:	c3                   	ret
    a535:	90                   	nop

000000000000a536 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    a536:	55                   	push   %rbp
    a537:	48 89 e5             	mov    %rsp,%rbp
    a53a:	48 83 ec 20          	sub    $0x20,%rsp
    a53e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a542:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a546:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    a54a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a54e:	48 89 c7             	mov    %rax,%rdi
    a551:	e8 7e 02 00 00       	call   a7d4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>
    a556:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a55a:	0f 92 c0             	setb   %al
    a55d:	0f b6 c0             	movzbl %al,%eax
    a560:	48 85 c0             	test   %rax,%rax
    a563:	0f 95 c0             	setne  %al
    a566:	84 c0                	test   %al,%al
    a568:	74 1a                	je     a584 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    a56a:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a571:	55 55 05 
    a574:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a578:	73 05                	jae    a57f <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    a57a:	e8 91 8c ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    a57f:	e8 0c 8b ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a584:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a588:	48 89 d0             	mov    %rdx,%rax
    a58b:	48 01 c0             	add    %rax,%rax
    a58e:	48 01 d0             	add    %rdx,%rax
    a591:	48 c1 e0 04          	shl    $0x4,%rax
    a595:	48 89 c7             	mov    %rax,%rdi
    a598:	e8 23 8d ff ff       	call   32c0 <_Znwm@plt>
    a59d:	90                   	nop
      }
    a59e:	c9                   	leave
    a59f:	c3                   	ret

000000000000a5a0 <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>:
      constexpr tuple(tuple&&) = default;
    a5a0:	55                   	push   %rbp
    a5a1:	48 89 e5             	mov    %rsp,%rbp
    a5a4:	48 83 ec 10          	sub    $0x10,%rsp
    a5a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5b8:	48 89 d6             	mov    %rdx,%rsi
    a5bb:	48 89 c7             	mov    %rax,%rdi
    a5be:	e8 25 02 00 00       	call   a7e8 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>
    a5c3:	90                   	nop
    a5c4:	c9                   	leave
    a5c5:	c3                   	ret

000000000000a5c6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    a5c6:	55                   	push   %rbp
    a5c7:	48 89 e5             	mov    %rsp,%rbp
    a5ca:	41 56                	push   %r14
    a5cc:	41 55                	push   %r13
    a5ce:	41 54                	push   %r12
    a5d0:	53                   	push   %rbx
    a5d1:	48 83 ec 40          	sub    $0x40,%rsp
    a5d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    a5d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    a5dd:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    a5e1:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    a5e5:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a5e9:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    a5ed:	48 89 de             	mov    %rbx,%rsi
    a5f0:	bf 10 00 00 00       	mov    $0x10,%edi
    a5f5:	e8 7f 92 ff ff       	call   3879 <_ZnwmPv>
    a5fa:	49 89 c4             	mov    %rax,%r12
    a5fd:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a603:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a607:	48 89 c7             	mov    %rax,%rdi
    a60a:	e8 f8 d4 ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a60f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a613:	48 89 c7             	mov    %rax,%rdi
    a616:	e8 de d4 ff ff       	call   7af9 <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a61b:	48 89 c2             	mov    %rax,%rdx
    a61e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a622:	48 89 d6             	mov    %rdx,%rsi
    a625:	48 89 c7             	mov    %rax,%rdi
    a628:	e8 73 ff ff ff       	call   a5a0 <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>
    a62d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a631:	48 89 c7             	mov    %rax,%rdi
    a634:	e8 b2 d4 ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a639:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a63d:	48 89 c6             	mov    %rax,%rsi
    a640:	4c 89 e7             	mov    %r12,%rdi
    a643:	e8 be 01 00 00       	call   a806 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>
    a648:	eb 1e                	jmp    a668 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0xa2>
    a64a:	49 89 c5             	mov    %rax,%r13
    a64d:	45 84 f6             	test   %r14b,%r14b
    a650:	74 0b                	je     a65d <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0x97>
    a652:	48 89 de             	mov    %rbx,%rsi
    a655:	4c 89 e7             	mov    %r12,%rdi
    a658:	e8 2e 92 ff ff       	call   388b <_ZdlPvS_>
    a65d:	4c 89 e8             	mov    %r13,%rax
    a660:	48 89 c7             	mov    %rax,%rdi
    a663:	e8 68 8e ff ff       	call   34d0 <_Unwind_Resume@plt>
    a668:	48 83 c4 40          	add    $0x40,%rsp
    a66c:	5b                   	pop    %rbx
    a66d:	41 5c                	pop    %r12
    a66f:	41 5d                	pop    %r13
    a671:	41 5e                	pop    %r14
    a673:	5d                   	pop    %rbp
    a674:	c3                   	ret
    a675:	90                   	nop

000000000000a676 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() const noexcept
    a676:	55                   	push   %rbp
    a677:	48 89 e5             	mov    %rsp,%rbp
    a67a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    a67e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a682:	5d                   	pop    %rbp
    a683:	c3                   	ret

000000000000a684 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    a684:	55                   	push   %rbp
    a685:	48 89 e5             	mov    %rsp,%rbp
    a688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a68c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a690:	5d                   	pop    %rbp
    a691:	c3                   	ret

000000000000a692 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>:
    a692:	55                   	push   %rbp
    a693:	48 89 e5             	mov    %rsp,%rbp
    a696:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a69a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a69e:	5d                   	pop    %rbp
    a69f:	c3                   	ret

000000000000a6a0 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>:
    a6a0:	55                   	push   %rbp
    a6a1:	48 89 e5             	mov    %rsp,%rbp
    a6a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ac:	5d                   	pop    %rbp
    a6ad:	c3                   	ret

000000000000a6ae <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>:
      constexpr _Head_base()
    a6ae:	55                   	push   %rbp
    a6af:	48 89 e5             	mov    %rsp,%rbp
    a6b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a6b6:	90                   	nop
    a6b7:	5d                   	pop    %rbp
    a6b8:	c3                   	ret

000000000000a6b9 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a6b9:	55                   	push   %rbp
    a6ba:	48 89 e5             	mov    %rsp,%rbp
    a6bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6c5:	5d                   	pop    %rbp
    a6c6:	c3                   	ret

000000000000a6c7 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    a6c7:	55                   	push   %rbp
    a6c8:	48 89 e5             	mov    %rsp,%rbp
    a6cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6d3:	5d                   	pop    %rbp
    a6d4:	c3                   	ret

000000000000a6d5 <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>:
    __niter_base(_Iterator __it)
    a6d5:	55                   	push   %rbp
    a6d6:	48 89 e5             	mov    %rsp,%rbp
    a6d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    a6dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6e1:	5d                   	pop    %rbp
    a6e2:	c3                   	ret

000000000000a6e3 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    a6e3:	55                   	push   %rbp
    a6e4:	48 89 e5             	mov    %rsp,%rbp
    a6e7:	48 83 ec 20          	sub    $0x20,%rsp
    a6eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a6f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    a6f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a6fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a6ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a703:	48 89 ce             	mov    %rcx,%rsi
    a706:	48 89 c7             	mov    %rax,%rdi
    a709:	e8 22 01 00 00       	call   a830 <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a70e:	c9                   	leave
    a70f:	c3                   	ret

000000000000a710 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    a710:	55                   	push   %rbp
    a711:	48 89 e5             	mov    %rsp,%rbp
    a714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a718:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    a71c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a720:	5d                   	pop    %rbp
    a721:	c3                   	ret

000000000000a722 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
    a722:	55                   	push   %rbp
    a723:	48 89 e5             	mov    %rsp,%rbp
    a726:	48 83 ec 20          	sub    $0x20,%rsp
    a72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a72e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a732:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
    a736:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a73a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a73e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a742:	48 89 ce             	mov    %rcx,%rsi
    a745:	48 89 c7             	mov    %rax,%rdi
    a748:	e8 10 01 00 00       	call   a85d <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a74d:	c9                   	leave
    a74e:	c3                   	ret

000000000000a74f <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a74f:	55                   	push   %rbp
    a750:	48 89 e5             	mov    %rsp,%rbp
    a753:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a75b:	5d                   	pop    %rbp
    a75c:	c3                   	ret
    a75d:	90                   	nop

000000000000a75e <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    a75e:	55                   	push   %rbp
    a75f:	48 89 e5             	mov    %rsp,%rbp
    a762:	53                   	push   %rbx
    a763:	48 83 ec 28          	sub    $0x28,%rsp
    a767:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a76b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a76f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a773:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a777:	48 89 c6             	mov    %rax,%rsi
    a77a:	bf 08 00 00 00       	mov    $0x8,%edi
    a77f:	e8 f5 90 ff ff       	call   3879 <_ZnwmPv>
    a784:	48 89 c3             	mov    %rax,%rbx
    a787:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a78b:	48 89 c7             	mov    %rax,%rdi
    a78e:	e8 bc ff ff ff       	call   a74f <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    a793:	48 89 c6             	mov    %rax,%rsi
    a796:	48 89 df             	mov    %rbx,%rdi
    a799:	e8 d0 94 ff ff       	call   3c6e <_ZNSt6threadC1EOS_>
    a79e:	90                   	nop
    a79f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a7a3:	c9                   	leave
    a7a4:	c3                   	ret
    a7a5:	90                   	nop

000000000000a7a6 <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>:
	destroy(_Up* __p)
    a7a6:	55                   	push   %rbp
    a7a7:	48 89 e5             	mov    %rsp,%rbp
    a7aa:	48 83 ec 10          	sub    $0x10,%rsp
    a7ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    a7b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a7ba:	48 89 c7             	mov    %rax,%rdi
    a7bd:	e8 88 94 ff ff       	call   3c4a <_ZNSt6threadD1Ev>
    a7c2:	90                   	nop
    a7c3:	c9                   	leave
    a7c4:	c3                   	ret

000000000000a7c5 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a7c5:	55                   	push   %rbp
    a7c6:	48 89 e5             	mov    %rsp,%rbp
    a7c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d1:	5d                   	pop    %rbp
    a7d2:	c3                   	ret
    a7d3:	90                   	nop

000000000000a7d4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a7d4:	55                   	push   %rbp
    a7d5:	48 89 e5             	mov    %rsp,%rbp
    a7d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a7dc:	48 b8 aa aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaa,%rax
    a7e3:	aa aa 02 
      }
    a7e6:	5d                   	pop    %rbp
    a7e7:	c3                   	ret

000000000000a7e8 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>:
      _Tuple_impl(_Tuple_impl&& __in)
    a7e8:	55                   	push   %rbp
    a7e9:	48 89 e5             	mov    %rsp,%rbp
    a7ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    a7f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7fc:	48 8b 12             	mov    (%rdx),%rdx
    a7ff:	48 89 10             	mov    %rdx,(%rax)
      { }
    a802:	90                   	nop
    a803:	5d                   	pop    %rbp
    a804:	c3                   	ret
    a805:	90                   	nop

000000000000a806 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    a806:	55                   	push   %rbp
    a807:	48 89 e5             	mov    %rsp,%rbp
    a80a:	48 83 ec 20          	sub    $0x20,%rsp
    a80e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a812:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    a816:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a81a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a81e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a822:	48 89 ce             	mov    %rcx,%rsi
    a825:	48 89 c7             	mov    %rax,%rdi
    a828:	e8 5d 00 00 00       	call   a88a <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>
      { }
    a82d:	90                   	nop
    a82e:	c9                   	leave
    a82f:	c3                   	ret

000000000000a830 <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    a830:	55                   	push   %rbp
    a831:	48 89 e5             	mov    %rsp,%rbp
    a834:	48 83 ec 20          	sub    $0x20,%rsp
    a838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a83c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a840:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    a844:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a848:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a84c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a850:	48 89 ce             	mov    %rcx,%rsi
    a853:	48 89 c7             	mov    %rax,%rdi
    a856:	e8 70 00 00 00       	call   a8cb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    a85b:	c9                   	leave
    a85c:	c3                   	ret

000000000000a85d <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
    a85d:	55                   	push   %rbp
    a85e:	48 89 e5             	mov    %rsp,%rbp
    a861:	48 83 ec 20          	sub    $0x20,%rsp
    a865:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a869:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a86d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				       _Category>::__copy_move_b(__first,
    a871:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a875:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a87d:	48 89 ce             	mov    %rcx,%rsi
    a880:	48 89 c7             	mov    %rax,%rdi
    a883:	e8 a2 00 00 00       	call   a92a <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    a888:	c9                   	leave
    a889:	c3                   	ret

000000000000a88a <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    a88a:	55                   	push   %rbp
    a88b:	48 89 e5             	mov    %rsp,%rbp
    a88e:	48 83 ec 20          	sub    $0x20,%rsp
    a892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a896:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a89a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    a89e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8a2:	48 89 c7             	mov    %rax,%rdi
    a8a5:	e8 f2 00 00 00       	call   a99c <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
    a8aa:	48 89 c7             	mov    %rax,%rdi
    a8ad:	e8 04 01 00 00       	call   a9b6 <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>
    a8b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a8b6:	48 8b 00             	mov    (%rax),%rax
    a8b9:	48 89 02             	mov    %rax,(%rdx)
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    a8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c0:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a8c7:	00 
      { }
    a8c8:	90                   	nop
    a8c9:	c9                   	leave
    a8ca:	c3                   	ret

000000000000a8cb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    a8cb:	55                   	push   %rbp
    a8cc:	48 89 e5             	mov    %rsp,%rbp
    a8cf:	48 83 ec 30          	sub    $0x30,%rsp
    a8d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a8d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a8db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    a8df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a8e3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    a8e7:	48 c1 f8 03          	sar    $0x3,%rax
    a8eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    a8ef:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a8f4:	74 1f                	je     a915 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    a8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a901:	00 
    a902:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a906:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a90a:	48 89 ce             	mov    %rcx,%rsi
    a90d:	48 89 c7             	mov    %rax,%rdi
    a910:	e8 5b 8b ff ff       	call   3470 <memmove@plt>
	  return __result + _Num;
    a915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a919:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a920:	00 
    a921:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a925:	48 01 d0             	add    %rdx,%rax
	}
    a928:	c9                   	leave
    a929:	c3                   	ret

000000000000a92a <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
    a92a:	55                   	push   %rbp
    a92b:	48 89 e5             	mov    %rsp,%rbp
    a92e:	48 83 ec 30          	sub    $0x30,%rsp
    a932:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a936:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a93a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    a93e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a942:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    a946:	48 c1 f8 03          	sar    $0x3,%rax
    a94a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    a94e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a953:	74 30                	je     a985 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x5b>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
    a955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a959:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a960:	00 
    a961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a965:	48 c1 e0 03          	shl    $0x3,%rax
    a969:	48 f7 d8             	neg    %rax
    a96c:	48 89 c1             	mov    %rax,%rcx
    a96f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a973:	48 01 c1             	add    %rax,%rcx
    a976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a97a:	48 89 c6             	mov    %rax,%rsi
    a97d:	48 89 cf             	mov    %rcx,%rdi
    a980:	e8 eb 8a ff ff       	call   3470 <memmove@plt>
	  return __result - _Num;
    a985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a989:	48 c1 e0 03          	shl    $0x3,%rax
    a98d:	48 f7 d8             	neg    %rax
    a990:	48 89 c2             	mov    %rax,%rdx
    a993:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a997:	48 01 d0             	add    %rdx,%rax
	}
    a99a:	c9                   	leave
    a99b:	c3                   	ret

000000000000a99c <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
    a99c:	55                   	push   %rbp
    a99d:	48 89 e5             	mov    %rsp,%rbp
    a9a0:	48 83 ec 10          	sub    $0x10,%rsp
    a9a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    a9a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9ac:	48 89 c7             	mov    %rax,%rdi
    a9af:	e8 10 00 00 00       	call   a9c4 <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    a9b4:	c9                   	leave
    a9b5:	c3                   	ret

000000000000a9b6 <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a9b6:	55                   	push   %rbp
    a9b7:	48 89 e5             	mov    %rsp,%rbp
    a9ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a9be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9c2:	5d                   	pop    %rbp
    a9c3:	c3                   	ret

000000000000a9c4 <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a9c4:	55                   	push   %rbp
    a9c5:	48 89 e5             	mov    %rsp,%rbp
    a9c8:	48 83 ec 10          	sub    $0x10,%rsp
    a9cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a9d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9d4:	48 89 c7             	mov    %rax,%rdi
    a9d7:	e8 02 00 00 00       	call   a9de <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>
    a9dc:	c9                   	leave
    a9dd:	c3                   	ret

000000000000a9de <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a9de:	55                   	push   %rbp
    a9df:	48 89 e5             	mov    %rsp,%rbp
    a9e2:	48 83 ec 10          	sub    $0x10,%rsp
    a9e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9ee:	48 89 c7             	mov    %rax,%rdi
    a9f1:	e8 02 00 00 00       	call   a9f8 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>
    a9f6:	c9                   	leave
    a9f7:	c3                   	ret

000000000000a9f8 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a9f8:	55                   	push   %rbp
    a9f9:	48 89 e5             	mov    %rsp,%rbp
    a9fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa04:	48 8b 00             	mov    (%rax),%rax
    aa07:	5d                   	pop    %rbp
    aa08:	c3                   	ret
    aa09:	90                   	nop

000000000000aa0a <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>:
      struct _State_impl : public _State
    aa0a:	55                   	push   %rbp
    aa0b:	48 89 e5             	mov    %rsp,%rbp
    aa0e:	48 83 ec 10          	sub    $0x10,%rsp
    aa12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa16:	48 8d 15 b3 52 01 00 	lea    0x152b3(%rip),%rdx        # 1fcd0 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    aa1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa21:	48 89 10             	mov    %rdx,(%rax)
    aa24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa28:	48 89 c7             	mov    %rax,%rdi
    aa2b:	e8 d0 86 ff ff       	call   3100 <_ZNSt6thread6_StateD2Ev@plt>
    aa30:	90                   	nop
    aa31:	c9                   	leave
    aa32:	c3                   	ret
    aa33:	90                   	nop

000000000000aa34 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED0Ev>:
    aa34:	55                   	push   %rbp
    aa35:	48 89 e5             	mov    %rsp,%rbp
    aa38:	48 83 ec 10          	sub    $0x10,%rsp
    aa3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa44:	48 89 c7             	mov    %rax,%rdi
    aa47:	e8 be ff ff ff       	call   aa0a <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>
    aa4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa50:	be 18 00 00 00       	mov    $0x18,%esi
    aa55:	48 89 c7             	mov    %rax,%rdi
    aa58:	e8 73 88 ff ff       	call   32d0 <_ZdlPvm@plt>
    aa5d:	c9                   	leave
    aa5e:	c3                   	ret
    aa5f:	90                   	nop

000000000000aa60 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEE6_M_runEv>:
	_M_run() { _M_func(); }
    aa60:	55                   	push   %rbp
    aa61:	48 89 e5             	mov    %rsp,%rbp
    aa64:	48 83 ec 10          	sub    $0x10,%rsp
    aa68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa70:	48 83 c0 08          	add    $0x8,%rax
    aa74:	48 89 c7             	mov    %rax,%rdi
    aa77:	e8 04 00 00 00       	call   aa80 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>
    aa7c:	90                   	nop
    aa7d:	c9                   	leave
    aa7e:	c3                   	ret
    aa7f:	90                   	nop

000000000000aa80 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>:
	operator()()
    aa80:	55                   	push   %rbp
    aa81:	48 89 e5             	mov    %rsp,%rbp
    aa84:	48 83 ec 10          	sub    $0x10,%rsp
    aa88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  return _M_invoke(_Indices());
    aa8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa90:	48 89 c7             	mov    %rax,%rdi
    aa93:	e8 04 00 00 00       	call   aa9c <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>
    aa98:	90                   	nop
	}
    aa99:	c9                   	leave
    aa9a:	c3                   	ret
    aa9b:	90                   	nop

000000000000aa9c <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>:
	  _M_invoke(_Index_tuple<_Ind...>)
    aa9c:	55                   	push   %rbp
    aa9d:	48 89 e5             	mov    %rsp,%rbp
    aaa0:	53                   	push   %rbx
    aaa1:	48 83 ec 18          	sub    $0x18,%rsp
    aaa5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
    aaa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaad:	48 89 c7             	mov    %rax,%rdi
    aab0:	e8 31 00 00 00       	call   aae6 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    aab5:	48 89 c7             	mov    %rax,%rdi
    aab8:	e8 59 00 00 00       	call   ab16 <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    aabd:	48 89 c3             	mov    %rax,%rbx
    aac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aac4:	48 89 c7             	mov    %rax,%rdi
    aac7:	e8 1a 00 00 00       	call   aae6 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    aacc:	48 89 c7             	mov    %rax,%rdi
    aacf:	e8 20 00 00 00       	call   aaf4 <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    aad4:	48 89 de             	mov    %rbx,%rsi
    aad7:	48 89 c7             	mov    %rax,%rdi
    aada:	e8 59 00 00 00       	call   ab38 <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>
    aadf:	90                   	nop
    aae0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aae4:	c9                   	leave
    aae5:	c3                   	ret

000000000000aae6 <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    aae6:	55                   	push   %rbp
    aae7:	48 89 e5             	mov    %rsp,%rbp
    aaea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    aaee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaf2:	5d                   	pop    %rbp
    aaf3:	c3                   	ret

000000000000aaf4 <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    aaf4:	55                   	push   %rbp
    aaf5:	48 89 e5             	mov    %rsp,%rbp
    aaf8:	48 83 ec 10          	sub    $0x10,%rsp
    aafc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    ab00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab04:	48 89 c7             	mov    %rax,%rdi
    ab07:	e8 6a 00 00 00       	call   ab76 <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    ab0c:	48 89 c7             	mov    %rax,%rdi
    ab0f:	e8 7c 00 00 00       	call   ab90 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    }
    ab14:	c9                   	leave
    ab15:	c3                   	ret

000000000000ab16 <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    ab16:	55                   	push   %rbp
    ab17:	48 89 e5             	mov    %rsp,%rbp
    ab1a:	48 83 ec 10          	sub    $0x10,%rsp
    ab1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    ab22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab26:	48 89 c7             	mov    %rax,%rdi
    ab29:	e8 70 00 00 00       	call   ab9e <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    ab2e:	48 89 c7             	mov    %rax,%rdi
    ab31:	e8 7e b6 ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    }
    ab36:	c9                   	leave
    ab37:	c3                   	ret

000000000000ab38 <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
    ab38:	55                   	push   %rbp
    ab39:	48 89 e5             	mov    %rsp,%rbp
    ab3c:	53                   	push   %rbx
    ab3d:	48 83 ec 18          	sub    $0x18,%rsp
    ab41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    ab49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab4d:	48 89 c7             	mov    %rax,%rdi
    ab50:	e8 5f b6 ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    ab55:	48 89 c3             	mov    %rax,%rbx
    ab58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab5c:	48 89 c7             	mov    %rax,%rdi
    ab5f:	e8 2c 00 00 00       	call   ab90 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    ab64:	48 89 de             	mov    %rbx,%rsi
    ab67:	48 89 c7             	mov    %rax,%rdi
    ab6a:	e8 49 00 00 00       	call   abb8 <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
    ab6f:	90                   	nop
    }
    ab70:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ab74:	c9                   	leave
    ab75:	c3                   	ret

000000000000ab76 <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ab76:	55                   	push   %rbp
    ab77:	48 89 e5             	mov    %rsp,%rbp
    ab7a:	48 83 ec 10          	sub    $0x10,%rsp
    ab7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ab82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab86:	48 89 c7             	mov    %rax,%rdi
    ab89:	e8 65 00 00 00       	call   abf3 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>
    ab8e:	c9                   	leave
    ab8f:	c3                   	ret

000000000000ab90 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ab90:	55                   	push   %rbp
    ab91:	48 89 e5             	mov    %rsp,%rbp
    ab94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ab98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab9c:	5d                   	pop    %rbp
    ab9d:	c3                   	ret

000000000000ab9e <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ab9e:	55                   	push   %rbp
    ab9f:	48 89 e5             	mov    %rsp,%rbp
    aba2:	48 83 ec 10          	sub    $0x10,%rsp
    aba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    abaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abae:	48 89 c7             	mov    %rax,%rdi
    abb1:	e8 5b 00 00 00       	call   ac11 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>
    abb6:	c9                   	leave
    abb7:	c3                   	ret

000000000000abb8 <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    abb8:	55                   	push   %rbp
    abb9:	48 89 e5             	mov    %rsp,%rbp
    abbc:	53                   	push   %rbx
    abbd:	48 83 ec 18          	sub    $0x18,%rsp
    abc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    abc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abcd:	48 89 c7             	mov    %rax,%rdi
    abd0:	e8 bb ff ff ff       	call   ab90 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    abd5:	48 8b 18             	mov    (%rax),%rbx
    abd8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    abdc:	48 89 c7             	mov    %rax,%rdi
    abdf:	e8 d0 b5 ff ff       	call   61b4 <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    abe4:	48 8b 00             	mov    (%rax),%rax
    abe7:	48 89 c7             	mov    %rax,%rdi
    abea:	ff d3                	call   *%rbx
    abec:	90                   	nop
    abed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    abf1:	c9                   	leave
    abf2:	c3                   	ret

000000000000abf3 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    abf3:	55                   	push   %rbp
    abf4:	48 89 e5             	mov    %rsp,%rbp
    abf7:	48 83 ec 10          	sub    $0x10,%rsp
    abfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac03:	48 83 c0 08          	add    $0x8,%rax
    ac07:	48 89 c7             	mov    %rax,%rdi
    ac0a:	e8 1c 00 00 00       	call   ac2b <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>
    ac0f:	c9                   	leave
    ac10:	c3                   	ret

000000000000ac11 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ac11:	55                   	push   %rbp
    ac12:	48 89 e5             	mov    %rsp,%rbp
    ac15:	48 83 ec 10          	sub    $0x10,%rsp
    ac19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac21:	48 89 c7             	mov    %rax,%rdi
    ac24:	e8 10 00 00 00       	call   ac39 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    ac29:	c9                   	leave
    ac2a:	c3                   	ret

000000000000ac2b <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    ac2b:	55                   	push   %rbp
    ac2c:	48 89 e5             	mov    %rsp,%rbp
    ac2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac37:	5d                   	pop    %rbp
    ac38:	c3                   	ret

000000000000ac39 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    ac39:	55                   	push   %rbp
    ac3a:	48 89 e5             	mov    %rsp,%rbp
    ac3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac45:	5d                   	pop    %rbp
    ac46:	c3                   	ret
    ac47:	90                   	nop

000000000000ac48 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

Device::Device(const Instance &crInstance, const Surface &crSurface) {
    ac48:	55                   	push   %rbp
    ac49:	48 89 e5             	mov    %rsp,%rbp
    ac4c:	41 54                	push   %r12
    ac4e:	53                   	push   %rbx
    ac4f:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    ac56:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    ac5d:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    ac64:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    ac6b:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    ac72:	48 89 c7             	mov    %rax,%rdi
    ac75:	e8 7c 0d 00 00       	call   b9f6 <_ZNK4neko8InstancedeEv>
    ac7a:	48 8b 10             	mov    (%rax),%rdx
    ac7d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ac81:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    ac88:	48 89 ce             	mov    %rcx,%rsi
    ac8b:	48 89 c7             	mov    %rax,%rdi
    ac8e:	e8 77 0b 00 00       	call   b80a <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>
    ac93:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    ac97:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ac9e:	48 89 d6             	mov    %rdx,%rsi
    aca1:	48 89 c7             	mov    %rax,%rdi
    aca4:	e8 59 04 00 00       	call   b102 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    aca9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    acad:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    acb1:	48 89 c7             	mov    %rax,%rdi
    acb4:	e8 ed 0d 00 00       	call   baa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  u32 selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    acb9:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    acc0:	48 89 c7             	mov    %rax,%rdi
    acc3:	e8 40 0d 00 00       	call   ba08 <_ZNK4neko7SurfacedeEv>
    acc8:	48 8b 10             	mov    (%rax),%rdx
    accb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    accf:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    acd6:	48 89 ce             	mov    %rcx,%rsi
    acd9:	48 89 c7             	mov    %rax,%rdi
    acdc:	e8 f9 01 00 00       	call   aeda <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    ace1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  u32 selectedQueueIndex = 0;
    ace4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    aceb:	f3 0f 10 05 79 72 00 	movss  0x7279(%rip),%xmm0        # 11f6c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    acf2:	00 
    acf3:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    acf8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    acfc:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    ad03:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    ad0a:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    ad11:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    ad12:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    ad19:	00 00 00 
  queueInfo.pNext = nullptr;
    ad1c:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    ad23:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    ad27:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ad2a:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    ad30:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    ad37:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    ad3a:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    ad3e:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    ad45:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    ad4c:	b8 00 00 00 00       	mov    $0x0,%eax
    ad51:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    ad56:	48 89 d7             	mov    %rdx,%rdi
    ad59:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    ad5c:	48 89 fa             	mov    %rdi,%rdx
    ad5f:	89 02                	mov    %eax,(%rdx)
    ad61:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    ad65:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ad69:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    ad70:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    ad77:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    ad7e:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    ad85:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    ad8c:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    ad8d:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    ad94:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    ad97:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    ad9e:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    ada1:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    ada8:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    adaf:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    adb6:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    adbd:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
    adc4:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    adcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adcf:	48 89 d1             	mov    %rdx,%rcx
    add2:	ba 00 00 00 00       	mov    $0x0,%edx
    add7:	48 89 c7             	mov    %rax,%rdi
    adda:	e8 51 86 ff ff       	call   3430 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    addf:	85 c0                	test   %eax,%eax
    ade1:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    ade4:	84 c0                	test   %al,%al
    ade6:	74 3b                	je     ae23 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1db>
    throw std::runtime_error("Failed to create logical device.");
    ade8:	bf 10 00 00 00       	mov    $0x10,%edi
    aded:	e8 1e 83 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    adf2:	48 89 c3             	mov    %rax,%rbx
    adf5:	48 8d 05 ec 6f 00 00 	lea    0x6fec(%rip),%rax        # 11de8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    adfc:	48 89 c6             	mov    %rax,%rsi
    adff:	48 89 df             	mov    %rbx,%rdi
    ae02:	e8 a9 82 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    ae07:	48 8b 05 aa 51 01 00 	mov    0x151aa(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ae0e:	48 89 c2             	mov    %rax,%rdx
    ae11:	48 8d 05 28 4f 01 00 	lea    0x14f28(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ae18:	48 89 c6             	mov    %rax,%rsi
    ae1b:	48 89 df             	mov    %rbx,%rdi
    ae1e:	e8 8d 86 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    ae23:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ae2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ae2e:	48 89 50 08          	mov    %rdx,0x8(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    ae32:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ae39:	48 8b 00             	mov    (%rax),%rax
    ae3c:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    ae40:	8b 55 e0             	mov    -0x20(%rbp),%edx
    ae43:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    ae46:	48 89 c7             	mov    %rax,%rdi
    ae49:	e8 82 85 ff ff       	call   33d0 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    ae4e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    ae52:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ae59:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    ae5c:	89 48 10             	mov    %ecx,0x10(%rax)
    ae5f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ae66:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    ae69:	89 48 14             	mov    %ecx,0x14(%rax)
    ae6c:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ae73:	48 89 50 18          	mov    %rdx,0x18(%rax)
}
    ae77:	eb 30                	jmp    aea9 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x261>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    ae79:	48 89 c3             	mov    %rax,%rbx
    ae7c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ae80:	48 89 c7             	mov    %rax,%rdi
    ae83:	e8 1e 0c 00 00       	call   baa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ae88:	48 89 d8             	mov    %rbx,%rax
    ae8b:	48 89 c7             	mov    %rax,%rdi
    ae8e:	e8 3d 86 ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create logical device.");
    ae93:	49 89 c4             	mov    %rax,%r12
    ae96:	48 89 df             	mov    %rbx,%rdi
    ae99:	e8 12 83 ff ff       	call   31b0 <__cxa_free_exception@plt>
    ae9e:	4c 89 e0             	mov    %r12,%rax
    aea1:	48 89 c7             	mov    %rax,%rdi
    aea4:	e8 27 86 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    aea9:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    aeb0:	5b                   	pop    %rbx
    aeb1:	41 5c                	pop    %r12
    aeb3:	5d                   	pop    %rbp
    aeb4:	c3                   	ret
    aeb5:	90                   	nop

000000000000aeb6 <_ZN4neko6DeviceD1Ev>:

Device::~Device() { vkDestroyDevice(mLogicalDevice, nullptr); }
    aeb6:	55                   	push   %rbp
    aeb7:	48 89 e5             	mov    %rsp,%rbp
    aeba:	48 83 ec 10          	sub    $0x10,%rsp
    aebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec6:	48 8b 00             	mov    (%rax),%rax
    aec9:	be 00 00 00 00       	mov    $0x0,%esi
    aece:	48 89 c7             	mov    %rax,%rdi
    aed1:	e8 5a 83 ff ff       	call   3230 <vkDestroyDevice@plt>
    aed6:	90                   	nop
    aed7:	c9                   	leave
    aed8:	c3                   	ret
    aed9:	90                   	nop

000000000000aeda <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

u32 Device::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                            VkSurfaceKHR surface) {
    aeda:	55                   	push   %rbp
    aedb:	48 89 e5             	mov    %rsp,%rbp
    aede:	41 54                	push   %r12
    aee0:	53                   	push   %rbx
    aee1:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    aee5:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    aee9:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    aeed:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  u32 queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    aef4:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    aef8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    aefc:	ba 00 00 00 00       	mov    $0x0,%edx
    af01:	48 89 ce             	mov    %rcx,%rsi
    af04:	48 89 c7             	mov    %rax,%rdi
    af07:	e8 d4 82 ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    af0c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    af0f:	85 c0                	test   %eax,%eax
    af11:	75 3b                	jne    af4e <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    af13:	bf 10 00 00 00       	mov    $0x10,%edi
    af18:	e8 f3 81 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    af1d:	48 89 c3             	mov    %rax,%rbx
    af20:	48 8d 05 e2 6e 00 00 	lea    0x6ee2(%rip),%rax        # 11e09 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    af27:	48 89 c6             	mov    %rax,%rsi
    af2a:	48 89 df             	mov    %rbx,%rdi
    af2d:	e8 7e 81 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    af32:	48 8b 05 7f 50 01 00 	mov    0x1507f(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    af39:	48 89 c2             	mov    %rax,%rdx
    af3c:	48 8d 05 fd 4d 01 00 	lea    0x14dfd(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    af43:	48 89 c6             	mov    %rax,%rsi
    af46:	48 89 df             	mov    %rbx,%rdi
    af49:	e8 62 85 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    af4e:	8b 45 d0             	mov    -0x30(%rbp),%eax
    af51:	89 c3                	mov    %eax,%ebx
    af53:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    af57:	48 89 c7             	mov    %rax,%rdi
    af5a:	e8 8b 0b 00 00       	call   baea <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    af5f:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    af63:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    af67:	48 89 de             	mov    %rbx,%rsi
    af6a:	48 89 c7             	mov    %rax,%rdi
    af6d:	e8 b0 0b 00 00       	call   bb22 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    af72:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    af76:	48 89 c7             	mov    %rax,%rdi
    af79:	e8 88 0b 00 00       	call   bb06 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    af7e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    af82:	48 89 c7             	mov    %rax,%rdi
    af85:	e8 52 0c 00 00       	call   bbdc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    af8a:	48 89 c2             	mov    %rax,%rdx
    af8d:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    af91:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    af95:	48 89 ce             	mov    %rcx,%rsi
    af98:	48 89 c7             	mov    %rax,%rdi
    af9b:	e8 40 82 ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  u32 iQueueFamily = 0;
    afa0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    afa7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    afab:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    afaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    afb3:	48 89 c7             	mov    %rax,%rdi
    afb6:	e8 45 0c 00 00       	call   bc00 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    afbb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    afbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    afc3:	48 89 c7             	mov    %rax,%rdi
    afc6:	e8 5b 0c 00 00       	call   bc26 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    afcb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    afcf:	eb 78                	jmp    b049 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    afd1:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    afd5:	48 89 c7             	mov    %rax,%rdi
    afd8:	e8 cd 0c 00 00       	call   bcaa <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    afdd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    afe1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    afe5:	8b 00                	mov    (%rax),%eax
    afe7:	83 e0 01             	and    $0x1,%eax
    afea:	85 c0                	test   %eax,%eax
    afec:	74 4f                	je     b03d <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    afee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aff2:	8b 00                	mov    (%rax),%eax
    aff4:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    aff7:	85 c0                	test   %eax,%eax
    aff9:	74 42                	je     b03d <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    affb:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    b002:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    b006:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    b00d:	8b 75 ec             	mov    -0x14(%rbp),%esi
    b010:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b014:	48 89 c7             	mov    %rax,%rdi
    b017:	e8 14 83 ff ff       	call   3330 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    b01c:	8b 45 9c             	mov    -0x64(%rbp),%eax
    b01f:	85 c0                	test   %eax,%eax
    b021:	74 16                	je     b039 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    b023:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    b026:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b02a:	48 89 c7             	mov    %rax,%rdi
    b02d:	e8 66 0b 00 00       	call   bb98 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    b032:	89 d8                	mov    %ebx,%eax
    b034:	e9 c0 00 00 00       	jmp    b0f9 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    b039:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    b03d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    b041:	48 89 c7             	mov    %rax,%rdi
    b044:	e8 41 0c 00 00       	call   bc8a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b049:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    b04d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    b051:	48 89 d6             	mov    %rdx,%rsi
    b054:	48 89 c7             	mov    %rax,%rdi
    b057:	e8 f3 0b 00 00       	call   bc4f <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b05c:	84 c0                	test   %al,%al
    b05e:	0f 85 6d ff ff ff    	jne    afd1 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    b064:	bf 10 00 00 00       	mov    $0x10,%edi
    b069:	e8 a2 80 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b06e:	48 89 c3             	mov    %rax,%rbx
    b071:	48 8d 05 b0 6d 00 00 	lea    0x6db0(%rip),%rax        # 11e28 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    b078:	48 89 c6             	mov    %rax,%rsi
    b07b:	48 89 df             	mov    %rbx,%rdi
    b07e:	e8 2d 80 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b083:	48 8b 05 2e 4f 01 00 	mov    0x14f2e(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b08a:	48 89 c2             	mov    %rax,%rdx
    b08d:	48 8d 05 ac 4c 01 00 	lea    0x14cac(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b094:	48 89 c6             	mov    %rax,%rsi
    b097:	48 89 df             	mov    %rbx,%rdi
    b09a:	e8 11 84 ff ff       	call   34b0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    b09f:	49 89 c4             	mov    %rax,%r12
    b0a2:	48 89 df             	mov    %rbx,%rdi
    b0a5:	e8 06 81 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b0aa:	4c 89 e0             	mov    %r12,%rax
    b0ad:	48 89 c7             	mov    %rax,%rdi
    b0b0:	e8 1b 84 ff ff       	call   34d0 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    b0b5:	48 89 c3             	mov    %rax,%rbx
    b0b8:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    b0bc:	48 89 c7             	mov    %rax,%rdi
    b0bf:	e8 42 0a 00 00       	call   bb06 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    b0c4:	48 89 d8             	mov    %rbx,%rax
    b0c7:	48 89 c7             	mov    %rax,%rdi
    b0ca:	e8 01 84 ff ff       	call   34d0 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    b0cf:	49 89 c4             	mov    %rax,%r12
    b0d2:	48 89 df             	mov    %rbx,%rdi
    b0d5:	e8 d6 80 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b0da:	4c 89 e3             	mov    %r12,%rbx
    b0dd:	eb 03                	jmp    b0e2 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    b0df:	48 89 c3             	mov    %rax,%rbx
    b0e2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b0e6:	48 89 c7             	mov    %rax,%rdi
    b0e9:	e8 aa 0a 00 00       	call   bb98 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    b0ee:	48 89 d8             	mov    %rbx,%rax
    b0f1:	48 89 c7             	mov    %rax,%rdi
    b0f4:	e8 d7 83 ff ff       	call   34d0 <_Unwind_Resume@plt>
    b0f9:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    b0fd:	5b                   	pop    %rbx
    b0fe:	41 5c                	pop    %r12
    b100:	5d                   	pop    %rbp
    b101:	c3                   	ret

000000000000b102 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice Device::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    b102:	55                   	push   %rbp
    b103:	48 89 e5             	mov    %rsp,%rbp
    b106:	41 54                	push   %r12
    b108:	53                   	push   %rbx
    b109:	48 83 ec 20          	sub    $0x20,%rsp
    b10d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b111:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    b115:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b119:	48 89 c7             	mov    %rax,%rdi
    b11c:	e8 9b 0b 00 00       	call   bcbc <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    b121:	48 83 f8 01          	cmp    $0x1,%rax
    b125:	0f 94 c0             	sete   %al
    b128:	84 c0                	test   %al,%al
    b12a:	74 19                	je     b145 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    b12c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b130:	be 00 00 00 00       	mov    $0x0,%esi
    b135:	48 89 c7             	mov    %rax,%rdi
    b138:	e8 a3 0b 00 00       	call   bce0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b13d:	48 8b 00             	mov    (%rax),%rax
    b140:	e9 b8 00 00 00       	jmp    b1fd <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    b145:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b14c:	00 
    b14d:	eb 46                	jmp    b195 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    b14f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b153:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b157:	48 89 d6             	mov    %rdx,%rsi
    b15a:	48 89 c7             	mov    %rax,%rdi
    b15d:	e8 7e 0b 00 00       	call   bce0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b162:	48 8b 10             	mov    (%rax),%rdx
    b165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b169:	48 89 d6             	mov    %rdx,%rsi
    b16c:	48 89 c7             	mov    %rax,%rdi
    b16f:	e8 92 00 00 00       	call   b206 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>
    b174:	84 c0                	test   %al,%al
    b176:	74 18                	je     b190 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    b178:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b17c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b180:	48 89 d6             	mov    %rdx,%rsi
    b183:	48 89 c7             	mov    %rax,%rdi
    b186:	e8 55 0b 00 00       	call   bce0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b18b:	48 8b 00             	mov    (%rax),%rax
    b18e:	eb 6d                	jmp    b1fd <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    b190:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    b195:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b199:	48 89 c7             	mov    %rax,%rdi
    b19c:	e8 1b 0b 00 00       	call   bcbc <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    b1a1:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    b1a5:	0f 92 c0             	setb   %al
    b1a8:	84 c0                	test   %al,%al
    b1aa:	75 a3                	jne    b14f <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    b1ac:	bf 10 00 00 00       	mov    $0x10,%edi
    b1b1:	e8 5a 7f ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b1b6:	48 89 c3             	mov    %rax,%rbx
    b1b9:	48 8d 05 90 6c 00 00 	lea    0x6c90(%rip),%rax        # 11e50 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    b1c0:	48 89 c6             	mov    %rax,%rsi
    b1c3:	48 89 df             	mov    %rbx,%rdi
    b1c6:	e8 e5 7e ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b1cb:	48 8b 05 e6 4d 01 00 	mov    0x14de6(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b1d2:	48 89 c2             	mov    %rax,%rdx
    b1d5:	48 8d 05 64 4b 01 00 	lea    0x14b64(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b1dc:	48 89 c6             	mov    %rax,%rsi
    b1df:	48 89 df             	mov    %rbx,%rdi
    b1e2:	e8 c9 82 ff ff       	call   34b0 <__cxa_throw@plt>
    b1e7:	49 89 c4             	mov    %rax,%r12
    b1ea:	48 89 df             	mov    %rbx,%rdi
    b1ed:	e8 be 7f ff ff       	call   31b0 <__cxa_free_exception@plt>
    b1f2:	4c 89 e0             	mov    %r12,%rax
    b1f5:	48 89 c7             	mov    %rax,%rdi
    b1f8:	e8 d3 82 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    b1fd:	48 83 c4 20          	add    $0x20,%rsp
    b201:	5b                   	pop    %rbx
    b202:	41 5c                	pop    %r12
    b204:	5d                   	pop    %rbp
    b205:	c3                   	ret

000000000000b206 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>:

bool Device::checkRequirements(VkPhysicalDevice physicalDevice) {
    b206:	55                   	push   %rbp
    b207:	48 89 e5             	mov    %rsp,%rbp
    b20a:	48 83 ec 10          	sub    $0x10,%rsp
    b20e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    b216:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b21a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b21e:	48 89 d6             	mov    %rdx,%rsi
    b221:	48 89 c7             	mov    %rax,%rdi
    b224:	e8 41 00 00 00       	call   b26a <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>
    b229:	84 c0                	test   %al,%al
    b22b:	74 35                	je     b262 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    b22d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b235:	48 89 d6             	mov    %rdx,%rsi
    b238:	48 89 c7             	mov    %rax,%rdi
    b23b:	e8 6a 00 00 00       	call   b2aa <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>
    b240:	84 c0                	test   %al,%al
    b242:	74 1e                	je     b262 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    b244:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b24c:	48 89 d6             	mov    %rdx,%rsi
    b24f:	48 89 c7             	mov    %rax,%rdi
    b252:	e8 73 05 00 00       	call   b7ca <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    b257:	84 c0                	test   %al,%al
    b259:	74 07                	je     b262 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    b25b:	b8 01 00 00 00       	mov    $0x1,%eax
    b260:	eb 05                	jmp    b267 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    b262:	b8 00 00 00 00       	mov    $0x0,%eax
}
    b267:	c9                   	leave
    b268:	c3                   	ret
    b269:	90                   	nop

000000000000b26a <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>:

bool Device::checkProperties(VkPhysicalDevice physicalDevice) {
    b26a:	55                   	push   %rbp
    b26b:	48 89 e5             	mov    %rsp,%rbp
    b26e:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    b275:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    b27c:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    b283:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    b28a:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    b291:	48 89 d6             	mov    %rdx,%rsi
    b294:	48 89 c7             	mov    %rax,%rdi
    b297:	e8 24 7e ff ff       	call   30c0 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    b29c:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    b2a2:	83 f8 02             	cmp    $0x2,%eax
    b2a5:	0f 94 c0             	sete   %al
}
    b2a8:	c9                   	leave
    b2a9:	c3                   	ret

000000000000b2aa <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>:

bool Device::checkExtensions(VkPhysicalDevice physicalDevice) {
    b2aa:	55                   	push   %rbp
    b2ab:	48 89 e5             	mov    %rsp,%rbp
    b2ae:	41 55                	push   %r13
    b2b0:	41 54                	push   %r12
    b2b2:	53                   	push   %rbx
    b2b3:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    b2ba:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    b2c1:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    b2c8:	48 8d 05 a4 6b 00 00 	lea    0x6ba4(%rip),%rax        # 11e73 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    b2cf:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    b2d6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b2dd:	49 89 c4             	mov    %rax,%r12
    b2e0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    b2e6:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b2ed:	48 89 c7             	mov    %rax,%rdi
    b2f0:	e8 0b 0a 00 00       	call   bd00 <_ZNSaIPKcEC1Ev>
    b2f5:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    b2fc:	4c 89 e6             	mov    %r12,%rsi
    b2ff:	4c 89 ef             	mov    %r13,%rdi
    b302:	4c 89 e1             	mov    %r12,%rcx
    b305:	4c 89 eb             	mov    %r13,%rbx
    b308:	48 89 df             	mov    %rbx,%rdi
    b30b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b312:	48 89 d1             	mov    %rdx,%rcx
    b315:	48 89 fa             	mov    %rdi,%rdx
    b318:	48 89 c7             	mov    %rax,%rdi
    b31b:	e8 18 0a 00 00       	call   bd38 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    b320:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b327:	48 89 c7             	mov    %rax,%rdi
    b32a:	e8 ed 09 00 00       	call   bd1c <_ZNSaIPKcED1Ev>

  u32 propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    b32f:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    b336:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    b33d:	b9 00 00 00 00       	mov    $0x0,%ecx
    b342:	be 00 00 00 00       	mov    $0x0,%esi
    b347:	48 89 c7             	mov    %rax,%rdi
    b34a:	e8 a1 80 ff ff       	call   33f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    b34f:	85 c0                	test   %eax,%eax
    b351:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    b354:	84 c0                	test   %al,%al
    b356:	74 3b                	je     b393 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    b358:	bf 10 00 00 00       	mov    $0x10,%edi
    b35d:	e8 ae 7d ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b362:	48 89 c3             	mov    %rax,%rbx
    b365:	48 8d 05 1c 6b 00 00 	lea    0x6b1c(%rip),%rax        # 11e88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    b36c:	48 89 c6             	mov    %rax,%rsi
    b36f:	48 89 df             	mov    %rbx,%rdi
    b372:	e8 39 7d ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b377:	48 8b 05 3a 4c 01 00 	mov    0x14c3a(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b37e:	48 89 c2             	mov    %rax,%rdx
    b381:	48 8d 05 b8 49 01 00 	lea    0x149b8(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b388:	48 89 c6             	mov    %rax,%rsi
    b38b:	48 89 df             	mov    %rbx,%rdi
    b38e:	e8 1d 81 ff ff       	call   34b0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    b393:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    b399:	89 c3                	mov    %eax,%ebx
    b39b:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b3a2:	48 89 c7             	mov    %rax,%rdi
    b3a5:	e8 5a 0a 00 00       	call   be04 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    b3aa:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    b3b1:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b3b8:	48 89 de             	mov    %rbx,%rsi
    b3bb:	48 89 c7             	mov    %rax,%rdi
    b3be:	e8 79 0a 00 00       	call   be3c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    b3c3:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b3ca:	48 89 c7             	mov    %rax,%rdi
    b3cd:	e8 4e 0a 00 00       	call   be20 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    b3d2:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b3d9:	48 89 c7             	mov    %rax,%rdi
    b3dc:	e8 15 0b 00 00       	call   bef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    b3e1:	48 89 c1             	mov    %rax,%rcx
    b3e4:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    b3eb:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    b3f2:	be 00 00 00 00       	mov    $0x0,%esi
    b3f7:	48 89 c7             	mov    %rax,%rdi
    b3fa:	e8 f1 7f ff ff       	call   33f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    b3ff:	85 c0                	test   %eax,%eax
    b401:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    b404:	84 c0                	test   %al,%al
    b406:	74 3b                	je     b443 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    b408:	bf 10 00 00 00       	mov    $0x10,%edi
    b40d:	e8 fe 7c ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b412:	48 89 c3             	mov    %rax,%rbx
    b415:	48 8d 05 6c 6a 00 00 	lea    0x6a6c(%rip),%rax        # 11e88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    b41c:	48 89 c6             	mov    %rax,%rsi
    b41f:	48 89 df             	mov    %rbx,%rdi
    b422:	e8 89 7c ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b427:	48 8b 05 8a 4b 01 00 	mov    0x14b8a(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b42e:	48 89 c2             	mov    %rax,%rdx
    b431:	48 8d 05 08 49 01 00 	lea    0x14908(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b438:	48 89 c6             	mov    %rax,%rsi
    b43b:	48 89 df             	mov    %rbx,%rdi
    b43e:	e8 6d 80 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, u32> helper;
    b443:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b44a:	48 89 c7             	mov    %rax,%rdi
    b44d:	e8 00 06 00 00       	call   ba52 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    b452:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b459:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b45d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b461:	48 89 c7             	mov    %rax,%rdi
    b464:	e8 3f 0b 00 00       	call   bfa8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    b469:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    b470:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b474:	48 89 c7             	mov    %rax,%rdi
    b477:	e8 52 0b 00 00       	call   bfce <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    b47c:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    b483:	e9 8c 00 00 00       	jmp    b514 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    b488:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b48f:	48 89 c7             	mov    %rax,%rdi
    b492:	e8 bf 0b 00 00       	call   c056 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b497:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    b49b:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b4a2:	48 89 c7             	mov    %rax,%rdi
    b4a5:	e8 36 80 ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    b4aa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b4ae:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    b4b5:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b4bc:	48 89 ce             	mov    %rcx,%rsi
    b4bf:	48 89 c7             	mov    %rax,%rdi
    b4c2:	e8 f3 92 ff ff       	call   47ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b4c7:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    b4ce:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b4d5:	48 89 d6             	mov    %rdx,%rsi
    b4d8:	48 89 c7             	mov    %rax,%rdi
    b4db:	e8 88 0b 00 00       	call   c068 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b4e0:	8b 10                	mov    (%rax),%edx
    b4e2:	83 c2 01             	add    $0x1,%edx
    b4e5:	89 10                	mov    %edx,(%rax)
    b4e7:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b4ee:	48 89 c7             	mov    %rax,%rdi
    b4f1:	e8 6a 7c ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b4f6:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b4fd:	48 89 c7             	mov    %rax,%rdi
    b500:	e8 3b 7e ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    b505:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b50c:	48 89 c7             	mov    %rax,%rdi
    b50f:	e8 1e 0b 00 00       	call   c032 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b514:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    b51b:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b522:	48 89 d6             	mov    %rdx,%rsi
    b525:	48 89 c7             	mov    %rax,%rdi
    b528:	e8 ca 0a 00 00       	call   bff7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b52d:	84 c0                	test   %al,%al
    b52f:	0f 85 53 ff ff ff    	jne    b488 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    b535:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b53c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b540:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b544:	48 89 c7             	mov    %rax,%rdi
    b547:	e8 20 0c 00 00       	call   c16c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    b54c:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    b553:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b557:	48 89 c7             	mov    %rax,%rdi
    b55a:	e8 33 0c 00 00       	call   c192 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    b55f:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    b566:	e9 ed 00 00 00       	jmp    b658 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    b56b:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b572:	48 89 c7             	mov    %rax,%rdi
    b575:	e8 9c 0c 00 00       	call   c216 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b57a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    b57e:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b582:	48 89 c7             	mov    %rax,%rdi
    b585:	e8 56 7f ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    b58a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b58e:	48 8b 08             	mov    (%rax),%rcx
    b591:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    b595:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b59c:	48 89 ce             	mov    %rcx,%rsi
    b59f:	48 89 c7             	mov    %rax,%rdi
    b5a2:	e8 13 92 ff ff       	call   47ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b5a7:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    b5ae:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b5b5:	48 89 d6             	mov    %rdx,%rsi
    b5b8:	48 89 c7             	mov    %rax,%rdi
    b5bb:	e8 a8 0a 00 00       	call   c068 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b5c0:	8b 10                	mov    (%rax),%edx
    b5c2:	83 c2 01             	add    $0x1,%edx
    b5c5:	89 10                	mov    %edx,(%rax)
    b5c7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b5ce:	48 89 c7             	mov    %rax,%rdi
    b5d1:	e8 8a 7b ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b5d6:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b5da:	48 89 c7             	mov    %rax,%rdi
    b5dd:	e8 5e 7d ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    b5e2:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b5e6:	48 89 c7             	mov    %rax,%rdi
    b5e9:	e8 f2 7e ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    b5ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b5f2:	48 8b 08             	mov    (%rax),%rcx
    b5f5:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    b5f9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b5fd:	48 89 ce             	mov    %rcx,%rsi
    b600:	48 89 c7             	mov    %rax,%rdi
    b603:	e8 b2 91 ff ff       	call   47ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b608:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    b60c:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b613:	48 89 d6             	mov    %rdx,%rsi
    b616:	48 89 c7             	mov    %rax,%rdi
    b619:	e8 4a 0a 00 00       	call   c068 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b61e:	8b 00                	mov    (%rax),%eax
    b620:	83 f8 01             	cmp    $0x1,%eax
    b623:	0f 96 c3             	setbe  %bl
    b626:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b62a:	48 89 c7             	mov    %rax,%rdi
    b62d:	e8 2e 7b ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b632:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b636:	48 89 c7             	mov    %rax,%rdi
    b639:	e8 02 7d ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    b63e:	84 db                	test   %bl,%bl
    b640:	74 07                	je     b649 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    b642:	bb 00 00 00 00       	mov    $0x0,%ebx
    b647:	eb 35                	jmp    b67e <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    b649:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b650:	48 89 c7             	mov    %rax,%rdi
    b653:	e8 9e 0b 00 00       	call   c1f6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    b658:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    b65f:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b666:	48 89 d6             	mov    %rdx,%rsi
    b669:	48 89 c7             	mov    %rax,%rdi
    b66c:	e8 4a 0b 00 00       	call   c1bb <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    b671:	84 c0                	test   %al,%al
    b673:	0f 85 f2 fe ff ff    	jne    b56b <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    b679:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    b67e:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b685:	48 89 c7             	mov    %rax,%rdi
    b688:	e8 e1 03 00 00       	call   ba6e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b68d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b694:	48 89 c7             	mov    %rax,%rdi
    b697:	e8 16 08 00 00       	call   beb2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b69c:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b6a3:	48 89 c7             	mov    %rax,%rdi
    b6a6:	e8 15 07 00 00       	call   bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b6ab:	89 d8                	mov    %ebx,%eax
    b6ad:	e9 09 01 00 00       	jmp    b7bb <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    b6b2:	48 89 c3             	mov    %rax,%rbx
    b6b5:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b6bc:	48 89 c7             	mov    %rax,%rdi
    b6bf:	e8 58 06 00 00       	call   bd1c <_ZNSaIPKcED1Ev>
    b6c4:	48 89 d8             	mov    %rbx,%rax
    b6c7:	48 89 c7             	mov    %rax,%rdi
    b6ca:	e8 01 7e ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    b6cf:	49 89 c4             	mov    %rax,%r12
    b6d2:	48 89 df             	mov    %rbx,%rdi
    b6d5:	e8 d6 7a ff ff       	call   31b0 <__cxa_free_exception@plt>
    b6da:	4c 89 e3             	mov    %r12,%rbx
    b6dd:	e9 bf 00 00 00       	jmp    b7a1 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    b6e2:	48 89 c3             	mov    %rax,%rbx
    b6e5:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b6ec:	48 89 c7             	mov    %rax,%rdi
    b6ef:	e8 2c 07 00 00       	call   be20 <_ZNSaI21VkExtensionPropertiesED1Ev>
    b6f4:	e9 a8 00 00 00       	jmp    b7a1 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    b6f9:	49 89 c4             	mov    %rax,%r12
    b6fc:	48 89 df             	mov    %rbx,%rdi
    b6ff:	e8 ac 7a ff ff       	call   31b0 <__cxa_free_exception@plt>
    b704:	4c 89 e3             	mov    %r12,%rbx
    b707:	e9 81 00 00 00       	jmp    b78d <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    b70c:	48 89 c3             	mov    %rax,%rbx
    b70f:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b716:	48 89 c7             	mov    %rax,%rdi
    b719:	e8 42 7a ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b71e:	eb 03                	jmp    b723 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    b720:	48 89 c3             	mov    %rax,%rbx
    b723:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b72a:	48 89 c7             	mov    %rax,%rdi
    b72d:	e8 0e 7c ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    b732:	eb 45                	jmp    b779 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    b734:	48 89 c3             	mov    %rax,%rbx
    b737:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b73e:	48 89 c7             	mov    %rax,%rdi
    b741:	e8 1a 7a ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b746:	eb 03                	jmp    b74b <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    b748:	48 89 c3             	mov    %rax,%rbx
    b74b:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b74f:	48 89 c7             	mov    %rax,%rdi
    b752:	e8 e9 7b ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    b757:	eb 20                	jmp    b779 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    b759:	48 89 c3             	mov    %rax,%rbx
    b75c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b760:	48 89 c7             	mov    %rax,%rdi
    b763:	e8 f8 79 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b768:	eb 03                	jmp    b76d <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    b76a:	48 89 c3             	mov    %rax,%rbx
    b76d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b771:	48 89 c7             	mov    %rax,%rdi
    b774:	e8 c7 7b ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
}
    b779:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b780:	48 89 c7             	mov    %rax,%rdi
    b783:	e8 e6 02 00 00       	call   ba6e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b788:	eb 03                	jmp    b78d <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    b78a:	48 89 c3             	mov    %rax,%rbx
    b78d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b794:	48 89 c7             	mov    %rax,%rdi
    b797:	e8 16 07 00 00       	call   beb2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b79c:	eb 03                	jmp    b7a1 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    b79e:	48 89 c3             	mov    %rax,%rbx
    b7a1:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b7a8:	48 89 c7             	mov    %rax,%rdi
    b7ab:	e8 10 06 00 00       	call   bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b7b0:	48 89 d8             	mov    %rbx,%rax
    b7b3:	48 89 c7             	mov    %rax,%rdi
    b7b6:	e8 15 7d ff ff       	call   34d0 <_Unwind_Resume@plt>
    b7bb:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    b7c2:	5b                   	pop    %rbx
    b7c3:	41 5c                	pop    %r12
    b7c5:	41 5d                	pop    %r13
    b7c7:	5d                   	pop    %rbp
    b7c8:	c3                   	ret
    b7c9:	90                   	nop

000000000000b7ca <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>:

bool Device::checkFeatures(VkPhysicalDevice physicalDevice) {
    b7ca:	55                   	push   %rbp
    b7cb:	48 89 e5             	mov    %rsp,%rbp
    b7ce:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    b7d5:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    b7dc:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    b7e3:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    b7ea:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    b7f1:	48 89 d6             	mov    %rdx,%rsi
    b7f4:	48 89 c7             	mov    %rax,%rdi
    b7f7:	e8 f4 79 ff ff       	call   31f0 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    b7fc:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    b802:	85 c0                	test   %eax,%eax
    b804:	0f 95 c0             	setne  %al
}
    b807:	c9                   	leave
    b808:	c3                   	ret
    b809:	90                   	nop

000000000000b80a <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice> Device::getPhysicalDevices(VkInstance instance) {
    b80a:	55                   	push   %rbp
    b80b:	48 89 e5             	mov    %rsp,%rbp
    b80e:	41 54                	push   %r12
    b810:	53                   	push   %rbx
    b811:	48 83 ec 30          	sub    $0x30,%rsp
    b815:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b819:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b81d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  u32 physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    b821:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    b825:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b829:	ba 00 00 00 00       	mov    $0x0,%edx
    b82e:	48 89 ce             	mov    %rcx,%rsi
    b831:	48 89 c7             	mov    %rax,%rdi
    b834:	e8 07 79 ff ff       	call   3140 <vkEnumeratePhysicalDevices@plt>
    b839:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    b83c:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b840:	74 41                	je     b883 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    b842:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    b846:	74 3b                	je     b883 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b848:	bf 10 00 00 00       	mov    $0x10,%edi
    b84d:	e8 be 78 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b852:	48 89 c3             	mov    %rax,%rbx
    b855:	48 8d 05 54 66 00 00 	lea    0x6654(%rip),%rax        # 11eb0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    b85c:	48 89 c6             	mov    %rax,%rsi
    b85f:	48 89 df             	mov    %rbx,%rdi
    b862:	e8 49 78 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b867:	48 8b 05 4a 47 01 00 	mov    0x1474a(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b86e:	48 89 c2             	mov    %rax,%rdx
    b871:	48 8d 05 c8 44 01 00 	lea    0x144c8(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b878:	48 89 c6             	mov    %rax,%rsi
    b87b:	48 89 df             	mov    %rbx,%rdi
    b87e:	e8 2d 7c ff ff       	call   34b0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    b883:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    b886:	85 c0                	test   %eax,%eax
    b888:	75 3b                	jne    b8c5 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    b88a:	bf 10 00 00 00       	mov    $0x10,%edi
    b88f:	e8 7c 78 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b894:	48 89 c3             	mov    %rax,%rbx
    b897:	48 8d 05 3a 66 00 00 	lea    0x663a(%rip),%rax        # 11ed8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    b89e:	48 89 c6             	mov    %rax,%rsi
    b8a1:	48 89 df             	mov    %rbx,%rdi
    b8a4:	e8 07 78 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b8a9:	48 8b 05 08 47 01 00 	mov    0x14708(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b8b0:	48 89 c2             	mov    %rax,%rdx
    b8b3:	48 8d 05 86 44 01 00 	lea    0x14486(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b8ba:	48 89 c6             	mov    %rax,%rsi
    b8bd:	48 89 df             	mov    %rbx,%rdi
    b8c0:	e8 eb 7b ff ff       	call   34b0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    b8c5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    b8c8:	89 c3                	mov    %eax,%ebx
    b8ca:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    b8ce:	48 89 c7             	mov    %rax,%rdi
    b8d1:	e8 52 09 00 00       	call   c228 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    b8d6:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    b8da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b8de:	48 89 de             	mov    %rbx,%rsi
    b8e1:	48 89 c7             	mov    %rax,%rdi
    b8e4:	e8 77 09 00 00       	call   c260 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    b8e9:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    b8ed:	48 89 c7             	mov    %rax,%rdi
    b8f0:	e8 4f 09 00 00       	call   c244 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    b8f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b8f9:	48 89 c7             	mov    %rax,%rdi
    b8fc:	e8 d5 09 00 00       	call   c2d6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    b901:	48 89 c2             	mov    %rax,%rdx
    b904:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    b908:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b90c:	48 89 ce             	mov    %rcx,%rsi
    b90f:	48 89 c7             	mov    %rax,%rdi
    b912:	e8 29 78 ff ff       	call   3140 <vkEnumeratePhysicalDevices@plt>
    b917:	89 45 ec             	mov    %eax,-0x14(%rbp)
    b91a:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b91e:	0f 84 b5 00 00 00    	je     b9d9 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    b924:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    b928:	0f 84 ab 00 00 00    	je     b9d9 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b92e:	bf 10 00 00 00       	mov    $0x10,%edi
    b933:	e8 d8 77 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b938:	48 89 c3             	mov    %rax,%rbx
    b93b:	48 8d 05 6e 65 00 00 	lea    0x656e(%rip),%rax        # 11eb0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    b942:	48 89 c6             	mov    %rax,%rsi
    b945:	48 89 df             	mov    %rbx,%rdi
    b948:	e8 63 77 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b94d:	48 8b 05 64 46 01 00 	mov    0x14664(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b954:	48 89 c2             	mov    %rax,%rdx
    b957:	48 8d 05 e2 43 01 00 	lea    0x143e2(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b95e:	48 89 c6             	mov    %rax,%rsi
    b961:	48 89 df             	mov    %rbx,%rdi
    b964:	e8 47 7b ff ff       	call   34b0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b969:	49 89 c4             	mov    %rax,%r12
    b96c:	48 89 df             	mov    %rbx,%rdi
    b96f:	e8 3c 78 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b974:	4c 89 e0             	mov    %r12,%rax
    b977:	48 89 c7             	mov    %rax,%rdi
    b97a:	e8 51 7b ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    b97f:	49 89 c4             	mov    %rax,%r12
    b982:	48 89 df             	mov    %rbx,%rdi
    b985:	e8 26 78 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b98a:	4c 89 e0             	mov    %r12,%rax
    b98d:	48 89 c7             	mov    %rax,%rdi
    b990:	e8 3b 7b ff ff       	call   34d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    b995:	48 89 c3             	mov    %rax,%rbx
    b998:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    b99c:	48 89 c7             	mov    %rax,%rdi
    b99f:	e8 a0 08 00 00       	call   c244 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    b9a4:	48 89 d8             	mov    %rbx,%rax
    b9a7:	48 89 c7             	mov    %rax,%rdi
    b9aa:	e8 21 7b ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    b9af:	49 89 c4             	mov    %rax,%r12
    b9b2:	48 89 df             	mov    %rbx,%rdi
    b9b5:	e8 f6 77 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b9ba:	4c 89 e3             	mov    %r12,%rbx
    b9bd:	eb 03                	jmp    b9c2 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    b9bf:	48 89 c3             	mov    %rax,%rbx
    b9c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b9c6:	48 89 c7             	mov    %rax,%rdi
    b9c9:	e8 d8 00 00 00       	call   baa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    b9ce:	48 89 d8             	mov    %rbx,%rax
    b9d1:	48 89 c7             	mov    %rax,%rdi
    b9d4:	e8 f7 7a ff ff       	call   34d0 <_Unwind_Resume@plt>
  return physicalDevices;
    b9d9:	90                   	nop
}
    b9da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b9de:	48 83 c4 30          	add    $0x30,%rsp
    b9e2:	5b                   	pop    %rbx
    b9e3:	41 5c                	pop    %r12
    b9e5:	5d                   	pop    %rbp
    b9e6:	c3                   	ret

000000000000b9e7 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    b9e7:	55                   	push   %rbp
    b9e8:	48 89 e5             	mov    %rsp,%rbp
    b9eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9f3:	5d                   	pop    %rbp
    b9f4:	c3                   	ret
    b9f5:	90                   	nop

000000000000b9f6 <_ZNK4neko8InstancedeEv>:

  const VkInstance &operator*() const noexcept { return mInstance; }
    b9f6:	55                   	push   %rbp
    b9f7:	48 89 e5             	mov    %rsp,%rbp
    b9fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba02:	48 83 c0 08          	add    $0x8,%rax
    ba06:	5d                   	pop    %rbp
    ba07:	c3                   	ret

000000000000ba08 <_ZNK4neko7SurfacedeEv>:

  Surface &operator=(Surface &&) = default;

  ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    ba08:	55                   	push   %rbp
    ba09:	48 89 e5             	mov    %rsp,%rbp
    ba0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba14:	48 83 c0 08          	add    $0x8,%rax
    ba18:	5d                   	pop    %rbp
    ba19:	c3                   	ret

000000000000ba1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
	struct _Rb_tree_impl
    ba1a:	55                   	push   %rbp
    ba1b:	48 89 e5             	mov    %rsp,%rbp
    ba1e:	48 83 ec 10          	sub    $0x10,%rsp
    ba22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba2a:	48 89 c7             	mov    %rax,%rdi
    ba2d:	e8 20 05 00 00       	call   bf52 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    ba32:	90                   	nop
    ba33:	c9                   	leave
    ba34:	c3                   	ret
    ba35:	90                   	nop

000000000000ba36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
      _Rb_tree() = default;
    ba36:	55                   	push   %rbp
    ba37:	48 89 e5             	mov    %rsp,%rbp
    ba3a:	48 83 ec 10          	sub    $0x10,%rsp
    ba3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba46:	48 89 c7             	mov    %rax,%rdi
    ba49:	e8 cc 04 00 00       	call   bf1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    ba4e:	90                   	nop
    ba4f:	c9                   	leave
    ba50:	c3                   	ret
    ba51:	90                   	nop

000000000000ba52 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
      map() = default;
    ba52:	55                   	push   %rbp
    ba53:	48 89 e5             	mov    %rsp,%rbp
    ba56:	48 83 ec 10          	sub    $0x10,%rsp
    ba5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba62:	48 89 c7             	mov    %rax,%rdi
    ba65:	e8 cc ff ff ff       	call   ba36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    ba6a:	90                   	nop
    ba6b:	c9                   	leave
    ba6c:	c3                   	ret
    ba6d:	90                   	nop

000000000000ba6e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      ~map() = default;
    ba6e:	55                   	push   %rbp
    ba6f:	48 89 e5             	mov    %rsp,%rbp
    ba72:	48 83 ec 10          	sub    $0x10,%rsp
    ba76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba7e:	48 89 c7             	mov    %rax,%rdi
    ba81:	e8 e8 04 00 00       	call   bf6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    ba86:	90                   	nop
    ba87:	c9                   	leave
    ba88:	c3                   	ret
    ba89:	90                   	nop

000000000000ba8a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    ba8a:	55                   	push   %rbp
    ba8b:	48 89 e5             	mov    %rsp,%rbp
    ba8e:	48 83 ec 10          	sub    $0x10,%rsp
    ba92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba9a:	48 89 c7             	mov    %rax,%rdi
    ba9d:	e8 a2 07 00 00       	call   c244 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    baa2:	90                   	nop
    baa3:	c9                   	leave
    baa4:	c3                   	ret
    baa5:	90                   	nop

000000000000baa6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    baa6:	55                   	push   %rbp
    baa7:	48 89 e5             	mov    %rsp,%rbp
    baaa:	48 83 ec 10          	sub    $0x10,%rsp
    baae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bab6:	48 89 c7             	mov    %rax,%rdi
    bab9:	e8 8a 08 00 00       	call   c348 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    babe:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bac5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bacd:	48 8b 00             	mov    (%rax),%rax
    bad0:	48 89 ce             	mov    %rcx,%rsi
    bad3:	48 89 c7             	mov    %rax,%rdi
    bad6:	e8 7b 08 00 00       	call   c356 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    badb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    badf:	48 89 c7             	mov    %rax,%rdi
    bae2:	e8 13 08 00 00       	call   c2fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    bae7:	90                   	nop
    bae8:	c9                   	leave
    bae9:	c3                   	ret

000000000000baea <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    baea:	55                   	push   %rbp
    baeb:	48 89 e5             	mov    %rsp,%rbp
    baee:	48 83 ec 10          	sub    $0x10,%rsp
    baf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bafa:	48 89 c7             	mov    %rax,%rdi
    bafd:	e8 7e 08 00 00       	call   c380 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    bb02:	90                   	nop
    bb03:	c9                   	leave
    bb04:	c3                   	ret
    bb05:	90                   	nop

000000000000bb06 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bb06:	55                   	push   %rbp
    bb07:	48 89 e5             	mov    %rsp,%rbp
    bb0a:	48 83 ec 10          	sub    $0x10,%rsp
    bb0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb16:	48 89 c7             	mov    %rax,%rdi
    bb19:	e8 6e 08 00 00       	call   c38c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    bb1e:	90                   	nop
    bb1f:	c9                   	leave
    bb20:	c3                   	ret
    bb21:	90                   	nop

000000000000bb22 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    bb22:	55                   	push   %rbp
    bb23:	48 89 e5             	mov    %rsp,%rbp
    bb26:	53                   	push   %rbx
    bb27:	48 83 ec 28          	sub    $0x28,%rsp
    bb2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb2f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bb33:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    bb37:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bb3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bb3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bb43:	48 89 d6             	mov    %rdx,%rsi
    bb46:	48 89 c7             	mov    %rax,%rdi
    bb49:	e8 49 08 00 00       	call   c397 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    bb4e:	48 89 c1             	mov    %rax,%rcx
    bb51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb55:	48 89 c2             	mov    %rax,%rdx
    bb58:	48 89 ce             	mov    %rcx,%rsi
    bb5b:	48 89 df             	mov    %rbx,%rdi
    bb5e:	e8 b1 08 00 00       	call   c414 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    bb63:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bb67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb6b:	48 89 d6             	mov    %rdx,%rsi
    bb6e:	48 89 c7             	mov    %rax,%rdi
    bb71:	e8 54 09 00 00       	call   c4ca <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    bb76:	eb 1a                	jmp    bb92 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    bb78:	48 89 c3             	mov    %rax,%rbx
    bb7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb7f:	48 89 c7             	mov    %rax,%rdi
    bb82:	e8 eb 08 00 00       	call   c472 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    bb87:	48 89 d8             	mov    %rbx,%rax
    bb8a:	48 89 c7             	mov    %rax,%rdi
    bb8d:	e8 3e 79 ff ff       	call   34d0 <_Unwind_Resume@plt>
    bb92:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bb96:	c9                   	leave
    bb97:	c3                   	ret

000000000000bb98 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bb98:	55                   	push   %rbp
    bb99:	48 89 e5             	mov    %rsp,%rbp
    bb9c:	48 83 ec 10          	sub    $0x10,%rsp
    bba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba8:	48 89 c7             	mov    %rax,%rdi
    bbab:	e8 5a 09 00 00       	call   c50a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    bbb0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bbb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbb7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bbbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbbf:	48 8b 00             	mov    (%rax),%rax
    bbc2:	48 89 ce             	mov    %rcx,%rsi
    bbc5:	48 89 c7             	mov    %rax,%rdi
    bbc8:	e8 4b 09 00 00       	call   c518 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    bbcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd1:	48 89 c7             	mov    %rax,%rdi
    bbd4:	e8 99 08 00 00       	call   c472 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    bbd9:	90                   	nop
    bbda:	c9                   	leave
    bbdb:	c3                   	ret

000000000000bbdc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    bbdc:	55                   	push   %rbp
    bbdd:	48 89 e5             	mov    %rsp,%rbp
    bbe0:	48 83 ec 10          	sub    $0x10,%rsp
    bbe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    bbe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbec:	48 8b 10             	mov    (%rax),%rdx
    bbef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf3:	48 89 d6             	mov    %rdx,%rsi
    bbf6:	48 89 c7             	mov    %rax,%rdi
    bbf9:	e8 44 09 00 00       	call   c542 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    bbfe:	c9                   	leave
    bbff:	c3                   	ret

000000000000bc00 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bc00:	55                   	push   %rbp
    bc01:	48 89 e5             	mov    %rsp,%rbp
    bc04:	48 83 ec 20          	sub    $0x20,%rsp
    bc08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bc0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc10:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc14:	48 89 d6             	mov    %rdx,%rsi
    bc17:	48 89 c7             	mov    %rax,%rdi
    bc1a:	e8 35 09 00 00       	call   c554 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bc1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc23:	c9                   	leave
    bc24:	c3                   	ret
    bc25:	90                   	nop

000000000000bc26 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bc26:	55                   	push   %rbp
    bc27:	48 89 e5             	mov    %rsp,%rbp
    bc2a:	48 83 ec 20          	sub    $0x20,%rsp
    bc2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    bc32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc36:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bc3a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc3e:	48 89 d6             	mov    %rdx,%rsi
    bc41:	48 89 c7             	mov    %rax,%rdi
    bc44:	e8 0b 09 00 00       	call   c554 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bc49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc4d:	c9                   	leave
    bc4e:	c3                   	ret

000000000000bc4f <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    bc4f:	55                   	push   %rbp
    bc50:	48 89 e5             	mov    %rsp,%rbp
    bc53:	53                   	push   %rbx
    bc54:	48 83 ec 18          	sub    $0x18,%rsp
    bc58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bc5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    bc60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc64:	48 89 c7             	mov    %rax,%rdi
    bc67:	e8 06 09 00 00       	call   c572 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    bc6c:	48 8b 18             	mov    (%rax),%rbx
    bc6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bc73:	48 89 c7             	mov    %rax,%rdi
    bc76:	e8 f7 08 00 00       	call   c572 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    bc7b:	48 8b 00             	mov    (%rax),%rax
    bc7e:	48 39 c3             	cmp    %rax,%rbx
    bc81:	0f 95 c0             	setne  %al
    bc84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bc88:	c9                   	leave
    bc89:	c3                   	ret

000000000000bc8a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    bc8a:	55                   	push   %rbp
    bc8b:	48 89 e5             	mov    %rsp,%rbp
    bc8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    bc92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc96:	48 8b 00             	mov    (%rax),%rax
    bc99:	48 8d 50 18          	lea    0x18(%rax),%rdx
    bc9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    bca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    bca8:	5d                   	pop    %rbp
    bca9:	c3                   	ret

000000000000bcaa <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    bcaa:	55                   	push   %rbp
    bcab:	48 89 e5             	mov    %rsp,%rbp
    bcae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    bcb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcb6:	48 8b 00             	mov    (%rax),%rax
    bcb9:	5d                   	pop    %rbp
    bcba:	c3                   	ret
    bcbb:	90                   	nop

000000000000bcbc <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    bcbc:	55                   	push   %rbp
    bcbd:	48 89 e5             	mov    %rsp,%rbp
    bcc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    bcc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcc8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    bccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd0:	48 8b 00             	mov    (%rax),%rax
    bcd3:	48 29 c2             	sub    %rax,%rdx
    bcd6:	48 89 d0             	mov    %rdx,%rax
    bcd9:	48 c1 f8 03          	sar    $0x3,%rax
    bcdd:	5d                   	pop    %rbp
    bcde:	c3                   	ret
    bcdf:	90                   	nop

000000000000bce0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    bce0:	55                   	push   %rbp
    bce1:	48 89 e5             	mov    %rsp,%rbp
    bce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bce8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    bcec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf0:	48 8b 00             	mov    (%rax),%rax
    bcf3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bcf7:	48 c1 e2 03          	shl    $0x3,%rdx
    bcfb:	48 01 d0             	add    %rdx,%rax
      }
    bcfe:	5d                   	pop    %rbp
    bcff:	c3                   	ret

000000000000bd00 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    bd00:	55                   	push   %rbp
    bd01:	48 89 e5             	mov    %rsp,%rbp
    bd04:	48 83 ec 10          	sub    $0x10,%rsp
    bd08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd10:	48 89 c7             	mov    %rax,%rdi
    bd13:	e8 68 08 00 00       	call   c580 <_ZNSt15__new_allocatorIPKcEC1Ev>
    bd18:	90                   	nop
    bd19:	c9                   	leave
    bd1a:	c3                   	ret
    bd1b:	90                   	nop

000000000000bd1c <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bd1c:	55                   	push   %rbp
    bd1d:	48 89 e5             	mov    %rsp,%rbp
    bd20:	48 83 ec 10          	sub    $0x10,%rsp
    bd24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd2c:	48 89 c7             	mov    %rax,%rdi
    bd2f:	e8 58 08 00 00       	call   c58c <_ZNSt15__new_allocatorIPKcED1Ev>
    bd34:	90                   	nop
    bd35:	c9                   	leave
    bd36:	c3                   	ret
    bd37:	90                   	nop

000000000000bd38 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    bd38:	55                   	push   %rbp
    bd39:	48 89 e5             	mov    %rsp,%rbp
    bd3c:	53                   	push   %rbx
    bd3d:	48 83 ec 38          	sub    $0x38,%rsp
    bd41:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bd45:	48 89 f0             	mov    %rsi,%rax
    bd48:	48 89 d6             	mov    %rdx,%rsi
    bd4b:	48 89 f2             	mov    %rsi,%rdx
    bd4e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    bd52:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    bd56:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    bd5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd5e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bd62:	48 89 d6             	mov    %rdx,%rsi
    bd65:	48 89 c7             	mov    %rax,%rdi
    bd68:	e8 47 08 00 00       	call   c5b4 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    bd6d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bd71:	48 89 c7             	mov    %rax,%rdi
    bd74:	e8 c1 08 00 00       	call   c63a <_ZNKSt16initializer_listIPKcE3endEv>
    bd79:	48 89 c3             	mov    %rax,%rbx
    bd7c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bd80:	48 89 c7             	mov    %rax,%rdi
    bd83:	e8 a0 08 00 00       	call   c628 <_ZNKSt16initializer_listIPKcE5beginEv>
    bd88:	48 89 c1             	mov    %rax,%rcx
    bd8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd8f:	48 89 da             	mov    %rbx,%rdx
    bd92:	48 89 ce             	mov    %rcx,%rsi
    bd95:	48 89 c7             	mov    %rax,%rdi
    bd98:	e8 03 09 00 00       	call   c6a0 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    bd9d:	eb 1a                	jmp    bdb9 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    bd9f:	48 89 c3             	mov    %rax,%rbx
    bda2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bda6:	48 89 c7             	mov    %rax,%rdi
    bda9:	e8 2c 08 00 00       	call   c5da <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    bdae:	48 89 d8             	mov    %rbx,%rax
    bdb1:	48 89 c7             	mov    %rax,%rdi
    bdb4:	e8 17 77 ff ff       	call   34d0 <_Unwind_Resume@plt>
    bdb9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bdbd:	c9                   	leave
    bdbe:	c3                   	ret
    bdbf:	90                   	nop

000000000000bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bdc0:	55                   	push   %rbp
    bdc1:	48 89 e5             	mov    %rsp,%rbp
    bdc4:	48 83 ec 10          	sub    $0x10,%rsp
    bdc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bdcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdd0:	48 89 c7             	mov    %rax,%rdi
    bdd3:	e8 78 09 00 00       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    bdd8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bddf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bde3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bde7:	48 8b 00             	mov    (%rax),%rax
    bdea:	48 89 ce             	mov    %rcx,%rsi
    bded:	48 89 c7             	mov    %rax,%rdi
    bdf0:	e8 69 09 00 00       	call   c75e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    bdf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdf9:	48 89 c7             	mov    %rax,%rdi
    bdfc:	e8 d9 07 00 00       	call   c5da <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    be01:	90                   	nop
    be02:	c9                   	leave
    be03:	c3                   	ret

000000000000be04 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    be04:	55                   	push   %rbp
    be05:	48 89 e5             	mov    %rsp,%rbp
    be08:	48 83 ec 10          	sub    $0x10,%rsp
    be0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be14:	48 89 c7             	mov    %rax,%rdi
    be17:	e8 6c 09 00 00       	call   c788 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    be1c:	90                   	nop
    be1d:	c9                   	leave
    be1e:	c3                   	ret
    be1f:	90                   	nop

000000000000be20 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    be20:	55                   	push   %rbp
    be21:	48 89 e5             	mov    %rsp,%rbp
    be24:	48 83 ec 10          	sub    $0x10,%rsp
    be28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be30:	48 89 c7             	mov    %rax,%rdi
    be33:	e8 5c 09 00 00       	call   c794 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    be38:	90                   	nop
    be39:	c9                   	leave
    be3a:	c3                   	ret
    be3b:	90                   	nop

000000000000be3c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    be3c:	55                   	push   %rbp
    be3d:	48 89 e5             	mov    %rsp,%rbp
    be40:	53                   	push   %rbx
    be41:	48 83 ec 28          	sub    $0x28,%rsp
    be45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    be4d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    be51:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    be55:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    be59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    be5d:	48 89 d6             	mov    %rdx,%rsi
    be60:	48 89 c7             	mov    %rax,%rdi
    be63:	e8 37 09 00 00       	call   c79f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    be68:	48 89 c1             	mov    %rax,%rcx
    be6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    be6f:	48 89 c2             	mov    %rax,%rdx
    be72:	48 89 ce             	mov    %rcx,%rsi
    be75:	48 89 df             	mov    %rbx,%rdi
    be78:	e8 9f 09 00 00       	call   c81c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    be7d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    be81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be85:	48 89 d6             	mov    %rdx,%rsi
    be88:	48 89 c7             	mov    %rax,%rdi
    be8b:	e8 42 0a 00 00       	call   c8d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    be90:	eb 1a                	jmp    beac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    be92:	48 89 c3             	mov    %rax,%rbx
    be95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be99:	48 89 c7             	mov    %rax,%rdi
    be9c:	e8 d9 09 00 00       	call   c87a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    bea1:	48 89 d8             	mov    %rbx,%rax
    bea4:	48 89 c7             	mov    %rax,%rdi
    bea7:	e8 24 76 ff ff       	call   34d0 <_Unwind_Resume@plt>
    beac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    beb0:	c9                   	leave
    beb1:	c3                   	ret

000000000000beb2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    beb2:	55                   	push   %rbp
    beb3:	48 89 e5             	mov    %rsp,%rbp
    beb6:	48 83 ec 10          	sub    $0x10,%rsp
    beba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec2:	48 89 c7             	mov    %rax,%rdi
    bec5:	e8 48 0a 00 00       	call   c912 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    beca:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    becd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bed5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed9:	48 8b 00             	mov    (%rax),%rax
    bedc:	48 89 ce             	mov    %rcx,%rsi
    bedf:	48 89 c7             	mov    %rax,%rdi
    bee2:	e8 39 0a 00 00       	call   c920 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    bee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beeb:	48 89 c7             	mov    %rax,%rdi
    beee:	e8 87 09 00 00       	call   c87a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    bef3:	90                   	nop
    bef4:	c9                   	leave
    bef5:	c3                   	ret

000000000000bef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    bef6:	55                   	push   %rbp
    bef7:	48 89 e5             	mov    %rsp,%rbp
    befa:	48 83 ec 10          	sub    $0x10,%rsp
    befe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    bf02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf06:	48 8b 10             	mov    (%rax),%rdx
    bf09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf0d:	48 89 d6             	mov    %rdx,%rsi
    bf10:	48 89 c7             	mov    %rax,%rdi
    bf13:	e8 32 0a 00 00       	call   c94a <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    bf18:	c9                   	leave
    bf19:	c3                   	ret

000000000000bf1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    bf1a:	55                   	push   %rbp
    bf1b:	48 89 e5             	mov    %rsp,%rbp
    bf1e:	48 83 ec 10          	sub    $0x10,%rsp
    bf22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    bf26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf2a:	48 89 c7             	mov    %rax,%rdi
    bf2d:	e8 2a 0a 00 00       	call   c95c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    bf32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf36:	48 89 c7             	mov    %rax,%rdi
    bf39:	e8 3a 0a 00 00       	call   c978 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    bf3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf42:	48 83 c0 08          	add    $0x8,%rax
    bf46:	48 89 c7             	mov    %rax,%rdi
    bf49:	e8 42 7c ff ff       	call   3b90 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    bf4e:	90                   	nop
    bf4f:	c9                   	leave
    bf50:	c3                   	ret
    bf51:	90                   	nop

000000000000bf52 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    bf52:	55                   	push   %rbp
    bf53:	48 89 e5             	mov    %rsp,%rbp
    bf56:	48 83 ec 10          	sub    $0x10,%rsp
    bf5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf62:	48 89 c7             	mov    %rax,%rdi
    bf65:	e8 1a 0a 00 00       	call   c984 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    bf6a:	90                   	nop
    bf6b:	c9                   	leave
    bf6c:	c3                   	ret
    bf6d:	90                   	nop

000000000000bf6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    bf6e:	55                   	push   %rbp
    bf6f:	48 89 e5             	mov    %rsp,%rbp
    bf72:	48 83 ec 10          	sub    $0x10,%rsp
    bf76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    bf7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf7e:	48 89 c7             	mov    %rax,%rdi
    bf81:	e8 70 0a 00 00       	call   c9f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    bf86:	48 89 c2             	mov    %rax,%rdx
    bf89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf8d:	48 89 d6             	mov    %rdx,%rsi
    bf90:	48 89 c7             	mov    %rax,%rdi
    bf93:	e8 f8 09 00 00       	call   c990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    bf98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf9c:	48 89 c7             	mov    %rax,%rdi
    bf9f:	e8 76 fa ff ff       	call   ba1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    bfa4:	90                   	nop
    bfa5:	c9                   	leave
    bfa6:	c3                   	ret
    bfa7:	90                   	nop

000000000000bfa8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bfa8:	55                   	push   %rbp
    bfa9:	48 89 e5             	mov    %rsp,%rbp
    bfac:	48 83 ec 20          	sub    $0x20,%rsp
    bfb0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bfb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfb8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfbc:	48 89 d6             	mov    %rdx,%rsi
    bfbf:	48 89 c7             	mov    %rax,%rdi
    bfc2:	e8 49 0a 00 00       	call   ca10 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bfc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfcb:	c9                   	leave
    bfcc:	c3                   	ret
    bfcd:	90                   	nop

000000000000bfce <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bfce:	55                   	push   %rbp
    bfcf:	48 89 e5             	mov    %rsp,%rbp
    bfd2:	48 83 ec 20          	sub    $0x20,%rsp
    bfd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    bfda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfde:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bfe2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfe6:	48 89 d6             	mov    %rdx,%rsi
    bfe9:	48 89 c7             	mov    %rax,%rdi
    bfec:	e8 1f 0a 00 00       	call   ca10 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bff5:	c9                   	leave
    bff6:	c3                   	ret

000000000000bff7 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    bff7:	55                   	push   %rbp
    bff8:	48 89 e5             	mov    %rsp,%rbp
    bffb:	53                   	push   %rbx
    bffc:	48 83 ec 18          	sub    $0x18,%rsp
    c000:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c004:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c008:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c00c:	48 89 c7             	mov    %rax,%rdi
    c00f:	e8 1a 0a 00 00       	call   ca2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c014:	48 8b 18             	mov    (%rax),%rbx
    c017:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c01b:	48 89 c7             	mov    %rax,%rdi
    c01e:	e8 0b 0a 00 00       	call   ca2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c023:	48 8b 00             	mov    (%rax),%rax
    c026:	48 39 c3             	cmp    %rax,%rbx
    c029:	0f 95 c0             	setne  %al
    c02c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c030:	c9                   	leave
    c031:	c3                   	ret

000000000000c032 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c032:	55                   	push   %rbp
    c033:	48 89 e5             	mov    %rsp,%rbp
    c036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c03e:	48 8b 00             	mov    (%rax),%rax
    c041:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    c048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c04c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c04f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c053:	5d                   	pop    %rbp
    c054:	c3                   	ret
    c055:	90                   	nop

000000000000c056 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c056:	55                   	push   %rbp
    c057:	48 89 e5             	mov    %rsp,%rbp
    c05a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c05e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c062:	48 8b 00             	mov    (%rax),%rax
    c065:	5d                   	pop    %rbp
    c066:	c3                   	ret
    c067:	90                   	nop

000000000000c068 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
      operator[](key_type&& __k)
    c068:	55                   	push   %rbp
    c069:	48 89 e5             	mov    %rsp,%rbp
    c06c:	53                   	push   %rbx
    c06d:	48 83 ec 48          	sub    $0x48,%rsp
    c071:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    c075:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
	iterator __i = lower_bound(__k);
    c079:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    c07d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c081:	48 89 d6             	mov    %rdx,%rsi
    c084:	48 89 c7             	mov    %rax,%rdi
    c087:	e8 b0 09 00 00       	call   ca3c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    c08c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	if (__i == end() || key_comp()(__k, (*__i).first))
    c090:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c094:	48 89 c7             	mov    %rax,%rdi
    c097:	e8 c6 09 00 00       	call   ca62 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    c09c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c0a0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c0a4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c0a8:	48 89 d6             	mov    %rdx,%rsi
    c0ab:	48 89 c7             	mov    %rax,%rdi
    c0ae:	e8 c9 09 00 00       	call   ca7c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    c0b3:	84 c0                	test   %al,%al
    c0b5:	75 32                	jne    c0e9 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    c0b7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c0bb:	48 89 c7             	mov    %rax,%rdi
    c0be:	e8 db 09 00 00       	call   ca9e <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    c0c3:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c0c7:	48 89 c7             	mov    %rax,%rdi
    c0ca:	e8 eb 09 00 00       	call   caba <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c0cf:	48 89 c2             	mov    %rax,%rdx
    c0d2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    c0d6:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    c0da:	48 89 ce             	mov    %rcx,%rsi
    c0dd:	48 89 c7             	mov    %rax,%rdi
    c0e0:	e8 f3 09 00 00       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    c0e5:	84 c0                	test   %al,%al
    c0e7:	74 07                	je     c0f0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    c0e9:	b8 01 00 00 00       	mov    $0x1,%eax
    c0ee:	eb 05                	jmp    c0f5 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    c0f0:	b8 00 00 00 00       	mov    $0x0,%eax
    c0f5:	84 c0                	test   %al,%al
    c0f7:	74 5d                	je     c156 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c0f9:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    c0fd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c101:	48 89 c7             	mov    %rax,%rdi
    c104:	e8 f8 09 00 00       	call   cb01 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    c109:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c10c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c110:	48 89 d6             	mov    %rdx,%rsi
    c113:	48 89 c7             	mov    %rax,%rdi
    c116:	e8 f4 09 00 00       	call   cb0f <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    c11b:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    c11f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c123:	48 89 d6             	mov    %rdx,%rsi
    c126:	48 89 c7             	mov    %rax,%rdi
    c129:	e8 16 0a 00 00       	call   cb44 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    c12e:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    c132:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    c136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c13a:	49 89 c8             	mov    %rcx,%r8
    c13d:	48 89 d1             	mov    %rdx,%rcx
    c140:	48 8d 15 ed 55 00 00 	lea    0x55ed(%rip),%rdx        # 11734 <_ZSt19piecewise_construct>
    c147:	48 89 c6             	mov    %rax,%rsi
    c14a:	48 89 df             	mov    %rbx,%rdi
    c14d:	e8 10 0a 00 00       	call   cb62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    c152:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	return (*__i).second;
    c156:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c15a:	48 89 c7             	mov    %rax,%rdi
    c15d:	e8 58 09 00 00       	call   caba <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c162:	48 83 c0 20          	add    $0x20,%rax
      }
    c166:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c16a:	c9                   	leave
    c16b:	c3                   	ret

000000000000c16c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    c16c:	55                   	push   %rbp
    c16d:	48 89 e5             	mov    %rsp,%rbp
    c170:	48 83 ec 20          	sub    $0x20,%rsp
    c174:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    c178:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c17c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c180:	48 89 d6             	mov    %rdx,%rsi
    c183:	48 89 c7             	mov    %rax,%rdi
    c186:	e8 d3 0a 00 00       	call   cc5e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c18b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c18f:	c9                   	leave
    c190:	c3                   	ret
    c191:	90                   	nop

000000000000c192 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    c192:	55                   	push   %rbp
    c193:	48 89 e5             	mov    %rsp,%rbp
    c196:	48 83 ec 20          	sub    $0x20,%rsp
    c19a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    c19e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1a2:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c1a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c1aa:	48 89 d6             	mov    %rdx,%rsi
    c1ad:	48 89 c7             	mov    %rax,%rdi
    c1b0:	e8 a9 0a 00 00       	call   cc5e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c1b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1b9:	c9                   	leave
    c1ba:	c3                   	ret

000000000000c1bb <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c1bb:	55                   	push   %rbp
    c1bc:	48 89 e5             	mov    %rsp,%rbp
    c1bf:	53                   	push   %rbx
    c1c0:	48 83 ec 18          	sub    $0x18,%rsp
    c1c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1d0:	48 89 c7             	mov    %rax,%rdi
    c1d3:	e8 a4 0a 00 00       	call   cc7c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c1d8:	48 8b 18             	mov    (%rax),%rbx
    c1db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c1df:	48 89 c7             	mov    %rax,%rdi
    c1e2:	e8 95 0a 00 00       	call   cc7c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c1e7:	48 8b 00             	mov    (%rax),%rax
    c1ea:	48 39 c3             	cmp    %rax,%rbx
    c1ed:	0f 95 c0             	setne  %al
    c1f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c1f4:	c9                   	leave
    c1f5:	c3                   	ret

000000000000c1f6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c1f6:	55                   	push   %rbp
    c1f7:	48 89 e5             	mov    %rsp,%rbp
    c1fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c1fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c202:	48 8b 00             	mov    (%rax),%rax
    c205:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c214:	5d                   	pop    %rbp
    c215:	c3                   	ret

000000000000c216 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c216:	55                   	push   %rbp
    c217:	48 89 e5             	mov    %rsp,%rbp
    c21a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c222:	48 8b 00             	mov    (%rax),%rax
    c225:	5d                   	pop    %rbp
    c226:	c3                   	ret
    c227:	90                   	nop

000000000000c228 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c228:	55                   	push   %rbp
    c229:	48 89 e5             	mov    %rsp,%rbp
    c22c:	48 83 ec 10          	sub    $0x10,%rsp
    c230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c238:	48 89 c7             	mov    %rax,%rdi
    c23b:	e8 4a 0a 00 00       	call   cc8a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    c240:	90                   	nop
    c241:	c9                   	leave
    c242:	c3                   	ret
    c243:	90                   	nop

000000000000c244 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c244:	55                   	push   %rbp
    c245:	48 89 e5             	mov    %rsp,%rbp
    c248:	48 83 ec 10          	sub    $0x10,%rsp
    c24c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c254:	48 89 c7             	mov    %rax,%rdi
    c257:	e8 3a 0a 00 00       	call   cc96 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    c25c:	90                   	nop
    c25d:	c9                   	leave
    c25e:	c3                   	ret
    c25f:	90                   	nop

000000000000c260 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c260:	55                   	push   %rbp
    c261:	48 89 e5             	mov    %rsp,%rbp
    c264:	53                   	push   %rbx
    c265:	48 83 ec 28          	sub    $0x28,%rsp
    c269:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c26d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c271:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c275:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c279:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c27d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c281:	48 89 d6             	mov    %rdx,%rsi
    c284:	48 89 c7             	mov    %rax,%rdi
    c287:	e8 15 0a 00 00       	call   cca1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    c28c:	48 89 c1             	mov    %rax,%rcx
    c28f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c293:	48 89 c2             	mov    %rax,%rdx
    c296:	48 89 ce             	mov    %rcx,%rsi
    c299:	48 89 df             	mov    %rbx,%rdi
    c29c:	e8 61 0a 00 00       	call   cd02 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    c2a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c2a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2a9:	48 89 d6             	mov    %rdx,%rsi
    c2ac:	48 89 c7             	mov    %rax,%rdi
    c2af:	e8 ac 0a 00 00       	call   cd60 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    c2b4:	eb 1a                	jmp    c2d0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    c2b6:	48 89 c3             	mov    %rax,%rbx
    c2b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2bd:	48 89 c7             	mov    %rax,%rdi
    c2c0:	e8 35 00 00 00       	call   c2fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    c2c5:	48 89 d8             	mov    %rbx,%rax
    c2c8:	48 89 c7             	mov    %rax,%rdi
    c2cb:	e8 00 72 ff ff       	call   34d0 <_Unwind_Resume@plt>
    c2d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c2d4:	c9                   	leave
    c2d5:	c3                   	ret

000000000000c2d6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c2d6:	55                   	push   %rbp
    c2d7:	48 89 e5             	mov    %rsp,%rbp
    c2da:	48 83 ec 10          	sub    $0x10,%rsp
    c2de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c2e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2e6:	48 8b 10             	mov    (%rax),%rdx
    c2e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ed:	48 89 d6             	mov    %rdx,%rsi
    c2f0:	48 89 c7             	mov    %rax,%rdi
    c2f3:	e8 a8 0a 00 00       	call   cda0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c2f8:	c9                   	leave
    c2f9:	c3                   	ret

000000000000c2fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c2fa:	55                   	push   %rbp
    c2fb:	48 89 e5             	mov    %rsp,%rbp
    c2fe:	48 83 ec 10          	sub    $0x10,%rsp
    c302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c30a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c30e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c312:	48 8b 00             	mov    (%rax),%rax
    c315:	48 29 c2             	sub    %rax,%rdx
    c318:	48 89 d0             	mov    %rdx,%rax
    c31b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c31f:	48 89 c2             	mov    %rax,%rdx
    c322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c326:	48 8b 08             	mov    (%rax),%rcx
    c329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c32d:	48 89 ce             	mov    %rcx,%rsi
    c330:	48 89 c7             	mov    %rax,%rdi
    c333:	e8 a0 0a 00 00       	call   cdd8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c33c:	48 89 c7             	mov    %rax,%rdi
    c33f:	e8 46 f7 ff ff       	call   ba8a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    c344:	90                   	nop
    c345:	c9                   	leave
    c346:	c3                   	ret
    c347:	90                   	nop

000000000000c348 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c348:	55                   	push   %rbp
    c349:	48 89 e5             	mov    %rsp,%rbp
    c34c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c354:	5d                   	pop    %rbp
    c355:	c3                   	ret

000000000000c356 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c356:	55                   	push   %rbp
    c357:	48 89 e5             	mov    %rsp,%rbp
    c35a:	48 83 ec 20          	sub    $0x20,%rsp
    c35e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c362:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c366:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c36a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c36e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c372:	48 89 d6             	mov    %rdx,%rsi
    c375:	48 89 c7             	mov    %rax,%rdi
    c378:	e8 90 0a 00 00       	call   ce0d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    c37d:	90                   	nop
    c37e:	c9                   	leave
    c37f:	c3                   	ret

000000000000c380 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c380:	55                   	push   %rbp
    c381:	48 89 e5             	mov    %rsp,%rbp
    c384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c388:	90                   	nop
    c389:	5d                   	pop    %rbp
    c38a:	c3                   	ret
    c38b:	90                   	nop

000000000000c38c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c38c:	55                   	push   %rbp
    c38d:	48 89 e5             	mov    %rsp,%rbp
    c390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c394:	90                   	nop
    c395:	5d                   	pop    %rbp
    c396:	c3                   	ret

000000000000c397 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c397:	55                   	push   %rbp
    c398:	48 89 e5             	mov    %rsp,%rbp
    c39b:	53                   	push   %rbx
    c39c:	48 83 ec 28          	sub    $0x28,%rsp
    c3a0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c3a4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c3a8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c3ac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c3b0:	48 89 d6             	mov    %rdx,%rsi
    c3b3:	48 89 c7             	mov    %rax,%rdi
    c3b6:	e8 bb 0a 00 00       	call   ce76 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    c3bb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c3bf:	48 89 c7             	mov    %rax,%rdi
    c3c2:	e8 6c 0a 00 00       	call   ce33 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    c3c7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c3cb:	0f 92 c3             	setb   %bl
    c3ce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c3d2:	48 89 c7             	mov    %rax,%rdi
    c3d5:	e8 2c f7 ff ff       	call   bb06 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    c3da:	84 db                	test   %bl,%bl
    c3dc:	74 0f                	je     c3ed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c3de:	48 8d 05 53 5b 00 00 	lea    0x5b53(%rip),%rax        # 11f38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c3e5:	48 89 c7             	mov    %rax,%rdi
    c3e8:	e8 43 6d ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c3ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c3f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c3f5:	c9                   	leave
    c3f6:	c3                   	ret
    c3f7:	90                   	nop

000000000000c3f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c3f8:	55                   	push   %rbp
    c3f9:	48 89 e5             	mov    %rsp,%rbp
    c3fc:	48 83 ec 10          	sub    $0x10,%rsp
    c400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c408:	48 89 c7             	mov    %rax,%rdi
    c40b:	e8 f6 f6 ff ff       	call   bb06 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    c410:	90                   	nop
    c411:	c9                   	leave
    c412:	c3                   	ret
    c413:	90                   	nop

000000000000c414 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c414:	55                   	push   %rbp
    c415:	48 89 e5             	mov    %rsp,%rbp
    c418:	53                   	push   %rbx
    c419:	48 83 ec 28          	sub    $0x28,%rsp
    c41d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c421:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c425:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c42d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c431:	48 89 d6             	mov    %rdx,%rsi
    c434:	48 89 c7             	mov    %rax,%rdi
    c437:	e8 60 0a 00 00       	call   ce9c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c43c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c444:	48 89 d6             	mov    %rdx,%rsi
    c447:	48 89 c7             	mov    %rax,%rdi
    c44a:	e8 7f 0a 00 00       	call   cece <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    c44f:	eb 1a                	jmp    c46b <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    c451:	48 89 c3             	mov    %rax,%rbx
    c454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c458:	48 89 c7             	mov    %rax,%rdi
    c45b:	e8 98 ff ff ff       	call   c3f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    c460:	48 89 d8             	mov    %rbx,%rax
    c463:	48 89 c7             	mov    %rax,%rdi
    c466:	e8 65 70 ff ff       	call   34d0 <_Unwind_Resume@plt>
    c46b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c46f:	c9                   	leave
    c470:	c3                   	ret
    c471:	90                   	nop

000000000000c472 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c472:	55                   	push   %rbp
    c473:	48 89 e5             	mov    %rsp,%rbp
    c476:	48 83 ec 10          	sub    $0x10,%rsp
    c47a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c482:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c48a:	48 8b 00             	mov    (%rax),%rax
    c48d:	48 29 c2             	sub    %rax,%rdx
    c490:	48 c1 fa 03          	sar    $0x3,%rdx
    c494:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    c49b:	aa aa aa 
    c49e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c4a2:	48 89 c2             	mov    %rax,%rdx
    c4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a9:	48 8b 08             	mov    (%rax),%rcx
    c4ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4b0:	48 89 ce             	mov    %rcx,%rsi
    c4b3:	48 89 c7             	mov    %rax,%rdi
    c4b6:	e8 73 0a 00 00       	call   cf2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c4bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4bf:	48 89 c7             	mov    %rax,%rdi
    c4c2:	e8 31 ff ff ff       	call   c3f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    c4c7:	90                   	nop
    c4c8:	c9                   	leave
    c4c9:	c3                   	ret

000000000000c4ca <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c4ca:	55                   	push   %rbp
    c4cb:	48 89 e5             	mov    %rsp,%rbp
    c4ce:	48 83 ec 10          	sub    $0x10,%rsp
    c4d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c4da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4de:	48 89 c7             	mov    %rax,%rdi
    c4e1:	e8 24 00 00 00       	call   c50a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c4e6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c4e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ed:	48 8b 00             	mov    (%rax),%rax
    c4f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c4f4:	48 89 ce             	mov    %rcx,%rsi
    c4f7:	48 89 c7             	mov    %rax,%rdi
    c4fa:	e8 64 0a 00 00       	call   cf63 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c4ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c503:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c507:	90                   	nop
    c508:	c9                   	leave
    c509:	c3                   	ret

000000000000c50a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c50a:	55                   	push   %rbp
    c50b:	48 89 e5             	mov    %rsp,%rbp
    c50e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c516:	5d                   	pop    %rbp
    c517:	c3                   	ret

000000000000c518 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c518:	55                   	push   %rbp
    c519:	48 89 e5             	mov    %rsp,%rbp
    c51c:	48 83 ec 20          	sub    $0x20,%rsp
    c520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c524:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c528:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c52c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c534:	48 89 d6             	mov    %rdx,%rsi
    c537:	48 89 c7             	mov    %rax,%rdi
    c53a:	e8 4d 0a 00 00       	call   cf8c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    c53f:	90                   	nop
    c540:	c9                   	leave
    c541:	c3                   	ret

000000000000c542 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c542:	55                   	push   %rbp
    c543:	48 89 e5             	mov    %rsp,%rbp
    c546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c54a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c54e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c552:	5d                   	pop    %rbp
    c553:	c3                   	ret

000000000000c554 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c554:	55                   	push   %rbp
    c555:	48 89 e5             	mov    %rsp,%rbp
    c558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c55c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c564:	48 8b 10             	mov    (%rax),%rdx
    c567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c56b:	48 89 10             	mov    %rdx,(%rax)
    c56e:	90                   	nop
    c56f:	5d                   	pop    %rbp
    c570:	c3                   	ret
    c571:	90                   	nop

000000000000c572 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c572:	55                   	push   %rbp
    c573:	48 89 e5             	mov    %rsp,%rbp
    c576:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c57e:	5d                   	pop    %rbp
    c57f:	c3                   	ret

000000000000c580 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c580:	55                   	push   %rbp
    c581:	48 89 e5             	mov    %rsp,%rbp
    c584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c588:	90                   	nop
    c589:	5d                   	pop    %rbp
    c58a:	c3                   	ret
    c58b:	90                   	nop

000000000000c58c <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c58c:	55                   	push   %rbp
    c58d:	48 89 e5             	mov    %rsp,%rbp
    c590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c594:	90                   	nop
    c595:	5d                   	pop    %rbp
    c596:	c3                   	ret
    c597:	90                   	nop

000000000000c598 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c598:	55                   	push   %rbp
    c599:	48 89 e5             	mov    %rsp,%rbp
    c59c:	48 83 ec 10          	sub    $0x10,%rsp
    c5a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5a8:	48 89 c7             	mov    %rax,%rdi
    c5ab:	e8 6c f7 ff ff       	call   bd1c <_ZNSaIPKcED1Ev>
    c5b0:	90                   	nop
    c5b1:	c9                   	leave
    c5b2:	c3                   	ret
    c5b3:	90                   	nop

000000000000c5b4 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    c5b4:	55                   	push   %rbp
    c5b5:	48 89 e5             	mov    %rsp,%rbp
    c5b8:	48 83 ec 10          	sub    $0x10,%rsp
    c5bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    c5c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c5cc:	48 89 d6             	mov    %rdx,%rsi
    c5cf:	48 89 c7             	mov    %rax,%rdi
    c5d2:	e8 db 09 00 00       	call   cfb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    c5d7:	90                   	nop
    c5d8:	c9                   	leave
    c5d9:	c3                   	ret

000000000000c5da <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c5da:	55                   	push   %rbp
    c5db:	48 89 e5             	mov    %rsp,%rbp
    c5de:	48 83 ec 10          	sub    $0x10,%rsp
    c5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f2:	48 8b 00             	mov    (%rax),%rax
    c5f5:	48 29 c2             	sub    %rax,%rdx
    c5f8:	48 89 d0             	mov    %rdx,%rax
    c5fb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c5ff:	48 89 c2             	mov    %rax,%rdx
    c602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c606:	48 8b 08             	mov    (%rax),%rcx
    c609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c60d:	48 89 ce             	mov    %rcx,%rsi
    c610:	48 89 c7             	mov    %rax,%rdi
    c613:	e8 cc 09 00 00       	call   cfe4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    c618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c61c:	48 89 c7             	mov    %rax,%rdi
    c61f:	e8 74 ff ff ff       	call   c598 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    c624:	90                   	nop
    c625:	c9                   	leave
    c626:	c3                   	ret
    c627:	90                   	nop

000000000000c628 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    c628:	55                   	push   %rbp
    c629:	48 89 e5             	mov    %rsp,%rbp
    c62c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c634:	48 8b 00             	mov    (%rax),%rax
    c637:	5d                   	pop    %rbp
    c638:	c3                   	ret
    c639:	90                   	nop

000000000000c63a <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    c63a:	55                   	push   %rbp
    c63b:	48 89 e5             	mov    %rsp,%rbp
    c63e:	53                   	push   %rbx
    c63f:	48 83 ec 18          	sub    $0x18,%rsp
    c643:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c647:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c64b:	48 89 c7             	mov    %rax,%rdi
    c64e:	e8 d5 ff ff ff       	call   c628 <_ZNKSt16initializer_listIPKcE5beginEv>
    c653:	48 89 c3             	mov    %rax,%rbx
    c656:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c65a:	48 89 c7             	mov    %rax,%rdi
    c65d:	e8 b8 09 00 00       	call   d01a <_ZNKSt16initializer_listIPKcE4sizeEv>
    c662:	48 c1 e0 03          	shl    $0x3,%rax
    c666:	48 01 d8             	add    %rbx,%rax
    c669:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c66d:	c9                   	leave
    c66e:	c3                   	ret

000000000000c66f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    c66f:	55                   	push   %rbp
    c670:	48 89 e5             	mov    %rsp,%rbp
    c673:	48 83 ec 10          	sub    $0x10,%rsp
    c677:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c67b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    c67f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c683:	48 89 c7             	mov    %rax,%rdi
    c686:	e8 a1 09 00 00       	call   d02c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    c68b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c68f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c693:	48 89 d6             	mov    %rdx,%rsi
    c696:	48 89 c7             	mov    %rax,%rdi
    c699:	e8 99 09 00 00       	call   d037 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    c69e:	c9                   	leave
    c69f:	c3                   	ret

000000000000c6a0 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    c6a0:	55                   	push   %rbp
    c6a1:	48 89 e5             	mov    %rsp,%rbp
    c6a4:	53                   	push   %rbx
    c6a5:	48 83 ec 38          	sub    $0x38,%rsp
    c6a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c6ad:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c6b1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    c6b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c6b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c6bd:	48 89 d6             	mov    %rdx,%rsi
    c6c0:	48 89 c7             	mov    %rax,%rdi
    c6c3:	e8 a7 ff ff ff       	call   c66f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    c6c8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    c6cc:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c6d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c6d4:	48 89 c7             	mov    %rax,%rdi
    c6d7:	e8 74 00 00 00       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c6dc:	48 89 c2             	mov    %rax,%rdx
    c6df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6e3:	48 89 d6             	mov    %rdx,%rsi
    c6e6:	48 89 c7             	mov    %rax,%rdi
    c6e9:	e8 63 09 00 00       	call   d051 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    c6ee:	48 89 c6             	mov    %rax,%rsi
    c6f1:	48 89 df             	mov    %rbx,%rdi
    c6f4:	e8 b9 09 00 00       	call   d0b2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    c6f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c6fd:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c704:	48 8b 00             	mov    (%rax),%rax
    c707:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c70b:	48 c1 e2 03          	shl    $0x3,%rdx
    c70f:	48 01 c2             	add    %rax,%rdx
    c712:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c716:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    c71a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c71e:	48 89 c7             	mov    %rax,%rdi
    c721:	e8 2a 00 00 00       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c726:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    c729:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c72d:	48 8b 10             	mov    (%rax),%rdx
    c730:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    c734:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c738:	48 89 c7             	mov    %rax,%rdi
    c73b:	e8 a5 09 00 00       	call   d0e5 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    c740:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c744:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    c748:	90                   	nop
    c749:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c74d:	c9                   	leave
    c74e:	c3                   	ret
    c74f:	90                   	nop

000000000000c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c750:	55                   	push   %rbp
    c751:	48 89 e5             	mov    %rsp,%rbp
    c754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c75c:	5d                   	pop    %rbp
    c75d:	c3                   	ret

000000000000c75e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c75e:	55                   	push   %rbp
    c75f:	48 89 e5             	mov    %rsp,%rbp
    c762:	48 83 ec 20          	sub    $0x20,%rsp
    c766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c76a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c76e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c772:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c77a:	48 89 d6             	mov    %rdx,%rsi
    c77d:	48 89 c7             	mov    %rax,%rdi
    c780:	e8 91 09 00 00       	call   d116 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    c785:	90                   	nop
    c786:	c9                   	leave
    c787:	c3                   	ret

000000000000c788 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c788:	55                   	push   %rbp
    c789:	48 89 e5             	mov    %rsp,%rbp
    c78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c790:	90                   	nop
    c791:	5d                   	pop    %rbp
    c792:	c3                   	ret
    c793:	90                   	nop

000000000000c794 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c794:	55                   	push   %rbp
    c795:	48 89 e5             	mov    %rsp,%rbp
    c798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c79c:	90                   	nop
    c79d:	5d                   	pop    %rbp
    c79e:	c3                   	ret

000000000000c79f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c79f:	55                   	push   %rbp
    c7a0:	48 89 e5             	mov    %rsp,%rbp
    c7a3:	53                   	push   %rbx
    c7a4:	48 83 ec 28          	sub    $0x28,%rsp
    c7a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c7ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c7b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c7b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c7b8:	48 89 d6             	mov    %rdx,%rsi
    c7bb:	48 89 c7             	mov    %rax,%rdi
    c7be:	e8 bb 09 00 00       	call   d17e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    c7c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c7c7:	48 89 c7             	mov    %rax,%rdi
    c7ca:	e8 6d 09 00 00       	call   d13c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    c7cf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c7d3:	0f 92 c3             	setb   %bl
    c7d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c7da:	48 89 c7             	mov    %rax,%rdi
    c7dd:	e8 3e f6 ff ff       	call   be20 <_ZNSaI21VkExtensionPropertiesED1Ev>
    c7e2:	84 db                	test   %bl,%bl
    c7e4:	74 0f                	je     c7f5 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c7e6:	48 8d 05 4b 57 00 00 	lea    0x574b(%rip),%rax        # 11f38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c7ed:	48 89 c7             	mov    %rax,%rdi
    c7f0:	e8 3b 69 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c7f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c7f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c7fd:	c9                   	leave
    c7fe:	c3                   	ret
    c7ff:	90                   	nop

000000000000c800 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c800:	55                   	push   %rbp
    c801:	48 89 e5             	mov    %rsp,%rbp
    c804:	48 83 ec 10          	sub    $0x10,%rsp
    c808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c810:	48 89 c7             	mov    %rax,%rdi
    c813:	e8 08 f6 ff ff       	call   be20 <_ZNSaI21VkExtensionPropertiesED1Ev>
    c818:	90                   	nop
    c819:	c9                   	leave
    c81a:	c3                   	ret
    c81b:	90                   	nop

000000000000c81c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c81c:	55                   	push   %rbp
    c81d:	48 89 e5             	mov    %rsp,%rbp
    c820:	53                   	push   %rbx
    c821:	48 83 ec 28          	sub    $0x28,%rsp
    c825:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c829:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c82d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c835:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c839:	48 89 d6             	mov    %rdx,%rsi
    c83c:	48 89 c7             	mov    %rax,%rdi
    c83f:	e8 60 09 00 00       	call   d1a4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c844:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c848:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c84c:	48 89 d6             	mov    %rdx,%rsi
    c84f:	48 89 c7             	mov    %rax,%rdi
    c852:	e8 7f 09 00 00       	call   d1d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    c857:	eb 1a                	jmp    c873 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    c859:	48 89 c3             	mov    %rax,%rbx
    c85c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c860:	48 89 c7             	mov    %rax,%rdi
    c863:	e8 98 ff ff ff       	call   c800 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    c868:	48 89 d8             	mov    %rbx,%rax
    c86b:	48 89 c7             	mov    %rax,%rdi
    c86e:	e8 5d 6c ff ff       	call   34d0 <_Unwind_Resume@plt>
    c873:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c877:	c9                   	leave
    c878:	c3                   	ret
    c879:	90                   	nop

000000000000c87a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c87a:	55                   	push   %rbp
    c87b:	48 89 e5             	mov    %rsp,%rbp
    c87e:	48 83 ec 10          	sub    $0x10,%rsp
    c882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c88a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c88e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c892:	48 8b 00             	mov    (%rax),%rax
    c895:	48 29 c2             	sub    %rax,%rdx
    c898:	48 c1 fa 02          	sar    $0x2,%rdx
    c89c:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    c8a3:	fc c0 0f 
    c8a6:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c8aa:	48 89 c2             	mov    %rax,%rdx
    c8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b1:	48 8b 08             	mov    (%rax),%rcx
    c8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b8:	48 89 ce             	mov    %rcx,%rsi
    c8bb:	48 89 c7             	mov    %rax,%rdi
    c8be:	e8 75 09 00 00       	call   d238 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c8c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8c7:	48 89 c7             	mov    %rax,%rdi
    c8ca:	e8 31 ff ff ff       	call   c800 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    c8cf:	90                   	nop
    c8d0:	c9                   	leave
    c8d1:	c3                   	ret

000000000000c8d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c8d2:	55                   	push   %rbp
    c8d3:	48 89 e5             	mov    %rsp,%rbp
    c8d6:	48 83 ec 10          	sub    $0x10,%rsp
    c8da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c8e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8e6:	48 89 c7             	mov    %rax,%rdi
    c8e9:	e8 24 00 00 00       	call   c912 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c8ee:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c8f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f5:	48 8b 00             	mov    (%rax),%rax
    c8f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c8fc:	48 89 ce             	mov    %rcx,%rsi
    c8ff:	48 89 c7             	mov    %rax,%rdi
    c902:	e8 66 09 00 00       	call   d26d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c907:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c90b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c90f:	90                   	nop
    c910:	c9                   	leave
    c911:	c3                   	ret

000000000000c912 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c912:	55                   	push   %rbp
    c913:	48 89 e5             	mov    %rsp,%rbp
    c916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c91a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c91e:	5d                   	pop    %rbp
    c91f:	c3                   	ret

000000000000c920 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c920:	55                   	push   %rbp
    c921:	48 89 e5             	mov    %rsp,%rbp
    c924:	48 83 ec 20          	sub    $0x20,%rsp
    c928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c92c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c934:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c93c:	48 89 d6             	mov    %rdx,%rsi
    c93f:	48 89 c7             	mov    %rax,%rdi
    c942:	e8 4f 09 00 00       	call   d296 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    c947:	90                   	nop
    c948:	c9                   	leave
    c949:	c3                   	ret

000000000000c94a <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c94a:	55                   	push   %rbp
    c94b:	48 89 e5             	mov    %rsp,%rbp
    c94e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c952:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c956:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c95a:	5d                   	pop    %rbp
    c95b:	c3                   	ret

000000000000c95c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c95c:	55                   	push   %rbp
    c95d:	48 89 e5             	mov    %rsp,%rbp
    c960:	48 83 ec 10          	sub    $0x10,%rsp
    c964:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c96c:	48 89 c7             	mov    %rax,%rdi
    c96f:	e8 48 09 00 00       	call   d2bc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    c974:	90                   	nop
    c975:	c9                   	leave
    c976:	c3                   	ret
    c977:	90                   	nop

000000000000c978 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    c978:	55                   	push   %rbp
    c979:	48 89 e5             	mov    %rsp,%rbp
    c97c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    c980:	90                   	nop
    c981:	5d                   	pop    %rbp
    c982:	c3                   	ret
    c983:	90                   	nop

000000000000c984 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    c984:	55                   	push   %rbp
    c985:	48 89 e5             	mov    %rsp,%rbp
    c988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c98c:	90                   	nop
    c98d:	5d                   	pop    %rbp
    c98e:	c3                   	ret
    c98f:	90                   	nop

000000000000c990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    c990:	55                   	push   %rbp
    c991:	48 89 e5             	mov    %rsp,%rbp
    c994:	48 83 ec 20          	sub    $0x20,%rsp
    c998:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c99c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    c9a0:	eb 49                	jmp    c9eb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	  _M_erase(_S_right(__x));
    c9a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c9a6:	48 89 c7             	mov    %rax,%rdi
    c9a9:	e8 19 09 00 00       	call   d2c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    c9ae:	48 89 c2             	mov    %rax,%rdx
    c9b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9b5:	48 89 d6             	mov    %rdx,%rsi
    c9b8:	48 89 c7             	mov    %rax,%rdi
    c9bb:	e8 d0 ff ff ff       	call   c990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    c9c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c9c4:	48 89 c7             	mov    %rax,%rdi
    c9c7:	e8 0d 09 00 00       	call   d2d9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    c9cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    c9d0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c9d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9d8:	48 89 d6             	mov    %rdx,%rsi
    c9db:	48 89 c7             	mov    %rax,%rdi
    c9de:	e8 09 09 00 00       	call   d2ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    c9e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9e7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    c9eb:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    c9f0:	75 b0                	jne    c9a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
    }
    c9f2:	90                   	nop
    c9f3:	90                   	nop
    c9f4:	c9                   	leave
    c9f5:	c3                   	ret

000000000000c9f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    c9f6:	55                   	push   %rbp
    c9f7:	48 89 e5             	mov    %rsp,%rbp
    c9fa:	48 83 ec 10          	sub    $0x10,%rsp
    c9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    ca02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca06:	48 89 c7             	mov    %rax,%rdi
    ca09:	e8 18 09 00 00       	call   d326 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    ca0e:	c9                   	leave
    ca0f:	c3                   	ret

000000000000ca10 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ca10:	55                   	push   %rbp
    ca11:	48 89 e5             	mov    %rsp,%rbp
    ca14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ca1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca20:	48 8b 10             	mov    (%rax),%rdx
    ca23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca27:	48 89 10             	mov    %rdx,(%rax)
    ca2a:	90                   	nop
    ca2b:	5d                   	pop    %rbp
    ca2c:	c3                   	ret
    ca2d:	90                   	nop

000000000000ca2e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ca2e:	55                   	push   %rbp
    ca2f:	48 89 e5             	mov    %rsp,%rbp
    ca32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ca36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca3a:	5d                   	pop    %rbp
    ca3b:	c3                   	ret

000000000000ca3c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
      lower_bound(const key_type& __x)
    ca3c:	55                   	push   %rbp
    ca3d:	48 89 e5             	mov    %rsp,%rbp
    ca40:	48 83 ec 10          	sub    $0x10,%rsp
    ca44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    ca4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca54:	48 89 d6             	mov    %rdx,%rsi
    ca57:	48 89 c7             	mov    %rax,%rdi
    ca5a:	e8 d9 08 00 00       	call   d338 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    ca5f:	c9                   	leave
    ca60:	c3                   	ret
    ca61:	90                   	nop

000000000000ca62 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ca62:	55                   	push   %rbp
    ca63:	48 89 e5             	mov    %rsp,%rbp
    ca66:	48 83 ec 10          	sub    $0x10,%rsp
    ca6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    ca6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca72:	48 89 c7             	mov    %rax,%rdi
    ca75:	e8 0a 09 00 00       	call   d384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    ca7a:	c9                   	leave
    ca7b:	c3                   	ret

000000000000ca7c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    ca7c:	55                   	push   %rbp
    ca7d:	48 89 e5             	mov    %rsp,%rbp
    ca80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    ca88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca8c:	48 8b 10             	mov    (%rax),%rdx
    ca8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca93:	48 8b 00             	mov    (%rax),%rax
    ca96:	48 39 c2             	cmp    %rax,%rdx
    ca99:	0f 94 c0             	sete   %al
    ca9c:	5d                   	pop    %rbp
    ca9d:	c3                   	ret

000000000000ca9e <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    ca9e:	55                   	push   %rbp
    ca9f:	48 89 e5             	mov    %rsp,%rbp
    caa2:	48 83 ec 10          	sub    $0x10,%rsp
    caa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    caaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caae:	48 89 c7             	mov    %rax,%rdi
    cab1:	e8 f8 08 00 00       	call   d3ae <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    cab6:	90                   	nop
    cab7:	c9                   	leave
    cab8:	c3                   	ret
    cab9:	90                   	nop

000000000000caba <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    caba:	55                   	push   %rbp
    cabb:	48 89 e5             	mov    %rsp,%rbp
    cabe:	48 83 ec 10          	sub    $0x10,%rsp
    cac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    cac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caca:	48 8b 00             	mov    (%rax),%rax
    cacd:	48 89 c7             	mov    %rax,%rdi
    cad0:	e8 e5 08 00 00       	call   d3ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    cad5:	c9                   	leave
    cad6:	c3                   	ret
    cad7:	90                   	nop

000000000000cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
    cad8:	55                   	push   %rbp
    cad9:	48 89 e5             	mov    %rsp,%rbp
    cadc:	48 83 ec 20          	sub    $0x20,%rsp
    cae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cae4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cae8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    caec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    caf0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    caf4:	48 89 d6             	mov    %rdx,%rsi
    caf7:	48 89 c7             	mov    %rax,%rdi
    cafa:	e8 d9 08 00 00       	call   d3d8 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    caff:	c9                   	leave
    cb00:	c3                   	ret

000000000000cb01 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    cb01:	55                   	push   %rbp
    cb02:	48 89 e5             	mov    %rsp,%rbp
    cb05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    cb09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb0d:	5d                   	pop    %rbp
    cb0e:	c3                   	ret

000000000000cb0f <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
    forward_as_tuple(_Elements&&... __args) noexcept
    cb0f:	55                   	push   %rbp
    cb10:	48 89 e5             	mov    %rsp,%rbp
    cb13:	48 83 ec 10          	sub    $0x10,%rsp
    cb17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb1b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    cb1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb23:	48 89 c7             	mov    %rax,%rdi
    cb26:	e8 d5 08 00 00       	call   d400 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    cb2b:	48 89 c2             	mov    %rax,%rdx
    cb2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb32:	48 89 d6             	mov    %rdx,%rsi
    cb35:	48 89 c7             	mov    %rax,%rdi
    cb38:	e8 d1 08 00 00       	call   d40e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    cb3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb41:	c9                   	leave
    cb42:	c3                   	ret
    cb43:	90                   	nop

000000000000cb44 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    cb44:	55                   	push   %rbp
    cb45:	48 89 e5             	mov    %rsp,%rbp
    cb48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    cb50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb54:	48 8b 10             	mov    (%rax),%rdx
    cb57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb5b:	48 89 10             	mov    %rdx,(%rax)
    cb5e:	90                   	nop
    cb5f:	5d                   	pop    %rbp
    cb60:	c3                   	ret
    cb61:	90                   	nop

000000000000cb62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    cb62:	55                   	push   %rbp
    cb63:	48 89 e5             	mov    %rsp,%rbp
    cb66:	41 54                	push   %r12
    cb68:	53                   	push   %rbx
    cb69:	48 83 ec 60          	sub    $0x60,%rsp
    cb6d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    cb71:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    cb75:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    cb79:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    cb7d:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    cb81:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    cb85:	48 89 c7             	mov    %rax,%rdi
    cb88:	e8 7a af ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    cb8d:	49 89 c4             	mov    %rax,%r12
    cb90:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cb94:	48 89 c7             	mov    %rax,%rdi
    cb97:	e8 a5 08 00 00       	call   d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    cb9c:	48 89 c3             	mov    %rax,%rbx
    cb9f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cba3:	48 89 c7             	mov    %rax,%rdi
    cba6:	e8 40 af ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    cbab:	48 89 c2             	mov    %rax,%rdx
    cbae:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    cbb2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cbb6:	4d 89 e0             	mov    %r12,%r8
    cbb9:	48 89 d9             	mov    %rbx,%rcx
    cbbc:	48 89 c7             	mov    %rax,%rdi
    cbbf:	e8 8c 08 00 00       	call   d450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    cbc4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cbc8:	48 89 c7             	mov    %rax,%rdi
    cbcb:	e8 80 0d 00 00       	call   d950 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    cbd0:	48 89 c2             	mov    %rax,%rdx
    cbd3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    cbd7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cbdb:	48 89 ce             	mov    %rcx,%rsi
    cbde:	48 89 c7             	mov    %rax,%rdi
    cbe1:	e8 1c 09 00 00       	call   d502 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    cbe6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    cbea:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    cbee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cbf2:	48 85 c0             	test   %rax,%rax
    cbf5:	74 1c                	je     cc13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    cbf7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    cbfb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cbff:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cc03:	48 89 ce             	mov    %rcx,%rsi
    cc06:	48 89 c7             	mov    %rax,%rdi
    cc09:	e8 60 0d 00 00       	call   d96e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    cc0e:	48 89 c3             	mov    %rax,%rbx
    cc11:	eb 17                	jmp    cc2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    cc13:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    cc17:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    cc1b:	48 89 d6             	mov    %rdx,%rsi
    cc1e:	48 89 c7             	mov    %rax,%rdi
    cc21:	e8 9e 0d 00 00       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    cc26:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    cc2a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cc2e:	48 89 c7             	mov    %rax,%rdi
    cc31:	e8 96 08 00 00       	call   d4cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    cc36:	48 89 d8             	mov    %rbx,%rax
    cc39:	eb 1a                	jmp    cc55 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    cc3b:	48 89 c3             	mov    %rax,%rbx
    cc3e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cc42:	48 89 c7             	mov    %rax,%rdi
    cc45:	e8 82 08 00 00       	call   d4cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    cc4a:	48 89 d8             	mov    %rbx,%rax
    cc4d:	48 89 c7             	mov    %rax,%rdi
    cc50:	e8 7b 68 ff ff       	call   34d0 <_Unwind_Resume@plt>
    cc55:	48 83 c4 60          	add    $0x60,%rsp
    cc59:	5b                   	pop    %rbx
    cc5a:	41 5c                	pop    %r12
    cc5c:	5d                   	pop    %rbp
    cc5d:	c3                   	ret

000000000000cc5e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cc5e:	55                   	push   %rbp
    cc5f:	48 89 e5             	mov    %rsp,%rbp
    cc62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cc6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc6e:	48 8b 10             	mov    (%rax),%rdx
    cc71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc75:	48 89 10             	mov    %rdx,(%rax)
    cc78:	90                   	nop
    cc79:	5d                   	pop    %rbp
    cc7a:	c3                   	ret
    cc7b:	90                   	nop

000000000000cc7c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cc7c:	55                   	push   %rbp
    cc7d:	48 89 e5             	mov    %rsp,%rbp
    cc80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cc84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc88:	5d                   	pop    %rbp
    cc89:	c3                   	ret

000000000000cc8a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    cc8a:	55                   	push   %rbp
    cc8b:	48 89 e5             	mov    %rsp,%rbp
    cc8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc92:	90                   	nop
    cc93:	5d                   	pop    %rbp
    cc94:	c3                   	ret
    cc95:	90                   	nop

000000000000cc96 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    cc96:	55                   	push   %rbp
    cc97:	48 89 e5             	mov    %rsp,%rbp
    cc9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc9e:	90                   	nop
    cc9f:	5d                   	pop    %rbp
    cca0:	c3                   	ret

000000000000cca1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    cca1:	55                   	push   %rbp
    cca2:	48 89 e5             	mov    %rsp,%rbp
    cca5:	53                   	push   %rbx
    cca6:	48 83 ec 28          	sub    $0x28,%rsp
    ccaa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ccae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ccb2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ccb6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ccba:	48 89 d6             	mov    %rdx,%rsi
    ccbd:	48 89 c7             	mov    %rax,%rdi
    ccc0:	e8 ed 00 00 00       	call   cdb2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    ccc5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ccc9:	48 89 c7             	mov    %rax,%rdi
    cccc:	e8 0d 0d 00 00       	call   d9de <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    ccd1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ccd5:	0f 92 c3             	setb   %bl
    ccd8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ccdc:	48 89 c7             	mov    %rax,%rdi
    ccdf:	e8 60 f5 ff ff       	call   c244 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    cce4:	84 db                	test   %bl,%bl
    cce6:	74 0f                	je     ccf7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    cce8:	48 8d 05 49 52 00 00 	lea    0x5249(%rip),%rax        # 11f38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    ccef:	48 89 c7             	mov    %rax,%rdi
    ccf2:	e8 39 64 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    ccf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ccfb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ccff:	c9                   	leave
    cd00:	c3                   	ret
    cd01:	90                   	nop

000000000000cd02 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    cd02:	55                   	push   %rbp
    cd03:	48 89 e5             	mov    %rsp,%rbp
    cd06:	53                   	push   %rbx
    cd07:	48 83 ec 28          	sub    $0x28,%rsp
    cd0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd0f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cd13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    cd17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cd1f:	48 89 d6             	mov    %rdx,%rsi
    cd22:	48 89 c7             	mov    %rax,%rdi
    cd25:	e8 f6 0c 00 00       	call   da20 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    cd2a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cd2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd32:	48 89 d6             	mov    %rdx,%rsi
    cd35:	48 89 c7             	mov    %rax,%rdi
    cd38:	e8 15 0d 00 00       	call   da52 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    cd3d:	eb 1a                	jmp    cd59 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    cd3f:	48 89 c3             	mov    %rax,%rbx
    cd42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd46:	48 89 c7             	mov    %rax,%rdi
    cd49:	e8 3c ed ff ff       	call   ba8a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    cd4e:	48 89 d8             	mov    %rbx,%rax
    cd51:	48 89 c7             	mov    %rax,%rdi
    cd54:	e8 77 67 ff ff       	call   34d0 <_Unwind_Resume@plt>
    cd59:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cd5d:	c9                   	leave
    cd5e:	c3                   	ret
    cd5f:	90                   	nop

000000000000cd60 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    cd60:	55                   	push   %rbp
    cd61:	48 89 e5             	mov    %rsp,%rbp
    cd64:	48 83 ec 10          	sub    $0x10,%rsp
    cd68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    cd70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd74:	48 89 c7             	mov    %rax,%rdi
    cd77:	e8 cc f5 ff ff       	call   c348 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    cd7c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    cd7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd83:	48 8b 00             	mov    (%rax),%rax
    cd86:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cd8a:	48 89 ce             	mov    %rcx,%rsi
    cd8d:	48 89 c7             	mov    %rax,%rdi
    cd90:	e8 13 0d 00 00       	call   daa8 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    cd95:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd99:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    cd9d:	90                   	nop
    cd9e:	c9                   	leave
    cd9f:	c3                   	ret

000000000000cda0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    cda0:	55                   	push   %rbp
    cda1:	48 89 e5             	mov    %rsp,%rbp
    cda4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cda8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    cdac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cdb0:	5d                   	pop    %rbp
    cdb1:	c3                   	ret

000000000000cdb2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    cdb2:	55                   	push   %rbp
    cdb3:	48 89 e5             	mov    %rsp,%rbp
    cdb6:	48 83 ec 10          	sub    $0x10,%rsp
    cdba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cdbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    cdc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cdc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdca:	48 89 d6             	mov    %rdx,%rsi
    cdcd:	48 89 c7             	mov    %rax,%rdi
    cdd0:	e8 fd 0c 00 00       	call   dad2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    cdd5:	90                   	nop
    cdd6:	c9                   	leave
    cdd7:	c3                   	ret

000000000000cdd8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    cdd8:	55                   	push   %rbp
    cdd9:	48 89 e5             	mov    %rsp,%rbp
    cddc:	48 83 ec 20          	sub    $0x20,%rsp
    cde0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cde4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cde8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    cdec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cdf1:	74 17                	je     ce0a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    cdf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdf7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdfb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cdff:	48 89 ce             	mov    %rcx,%rsi
    ce02:	48 89 c7             	mov    %rax,%rdi
    ce05:	e8 d7 0c 00 00       	call   dae1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    ce0a:	90                   	nop
    ce0b:	c9                   	leave
    ce0c:	c3                   	ret

000000000000ce0d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ce0d:	55                   	push   %rbp
    ce0e:	48 89 e5             	mov    %rsp,%rbp
    ce11:	48 83 ec 10          	sub    $0x10,%rsp
    ce15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    ce1d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce25:	48 89 d6             	mov    %rdx,%rsi
    ce28:	48 89 c7             	mov    %rax,%rdi
    ce2b:	e8 df 0c 00 00       	call   db0f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    ce30:	90                   	nop
    ce31:	c9                   	leave
    ce32:	c3                   	ret

000000000000ce33 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ce33:	55                   	push   %rbp
    ce34:	48 89 e5             	mov    %rsp,%rbp
    ce37:	48 83 ec 20          	sub    $0x20,%rsp
    ce3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ce3f:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ce46:	55 55 05 
    ce49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ce4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce51:	48 89 c7             	mov    %rax,%rdi
    ce54:	e8 c5 0c 00 00       	call   db1e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    ce59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ce5d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ce61:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ce65:	48 89 d6             	mov    %rdx,%rsi
    ce68:	48 89 c7             	mov    %rax,%rdi
    ce6b:	e8 f4 6c ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    ce70:	48 8b 00             	mov    (%rax),%rax
      }
    ce73:	c9                   	leave
    ce74:	c3                   	ret
    ce75:	90                   	nop

000000000000ce76 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ce76:	55                   	push   %rbp
    ce77:	48 89 e5             	mov    %rsp,%rbp
    ce7a:	48 83 ec 10          	sub    $0x10,%rsp
    ce7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ce86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce8e:	48 89 d6             	mov    %rdx,%rsi
    ce91:	48 89 c7             	mov    %rax,%rdi
    ce94:	e8 9f 0c 00 00       	call   db38 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    ce99:	90                   	nop
    ce9a:	c9                   	leave
    ce9b:	c3                   	ret

000000000000ce9c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    ce9c:	55                   	push   %rbp
    ce9d:	48 89 e5             	mov    %rsp,%rbp
    cea0:	48 83 ec 10          	sub    $0x10,%rsp
    cea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    ceac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ceb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb4:	48 89 d6             	mov    %rdx,%rsi
    ceb7:	48 89 c7             	mov    %rax,%rdi
    ceba:	e8 b7 ff ff ff       	call   ce76 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    cebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cec3:	48 89 c7             	mov    %rax,%rdi
    cec6:	e8 7d 0c 00 00       	call   db48 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    cecb:	90                   	nop
    cecc:	c9                   	leave
    cecd:	c3                   	ret

000000000000cece <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    cece:	55                   	push   %rbp
    cecf:	48 89 e5             	mov    %rsp,%rbp
    ced2:	48 83 ec 10          	sub    $0x10,%rsp
    ced6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ceda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    cede:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cee6:	48 89 d6             	mov    %rdx,%rsi
    cee9:	48 89 c7             	mov    %rax,%rdi
    ceec:	e8 85 0c 00 00       	call   db76 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    cef1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cef5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    cef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cefc:	48 8b 10             	mov    (%rax),%rdx
    ceff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf03:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    cf07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf0b:	48 8b 08             	mov    (%rax),%rcx
    cf0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf12:	48 89 d0             	mov    %rdx,%rax
    cf15:	48 01 c0             	add    %rax,%rax
    cf18:	48 01 d0             	add    %rdx,%rax
    cf1b:	48 c1 e0 03          	shl    $0x3,%rax
    cf1f:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    cf23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf27:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    cf2b:	90                   	nop
    cf2c:	c9                   	leave
    cf2d:	c3                   	ret

000000000000cf2e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    cf2e:	55                   	push   %rbp
    cf2f:	48 89 e5             	mov    %rsp,%rbp
    cf32:	48 83 ec 20          	sub    $0x20,%rsp
    cf36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    cf42:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cf47:	74 17                	je     cf60 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    cf49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf51:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cf55:	48 89 ce             	mov    %rcx,%rsi
    cf58:	48 89 c7             	mov    %rax,%rdi
    cf5b:	e8 49 0c 00 00       	call   dba9 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    cf60:	90                   	nop
    cf61:	c9                   	leave
    cf62:	c3                   	ret

000000000000cf63 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    cf63:	55                   	push   %rbp
    cf64:	48 89 e5             	mov    %rsp,%rbp
    cf67:	48 83 ec 20          	sub    $0x20,%rsp
    cf6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf6f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf73:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    cf77:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf7f:	48 89 d6             	mov    %rdx,%rsi
    cf82:	48 89 c7             	mov    %rax,%rdi
    cf85:	e8 4d 0c 00 00       	call   dbd7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    cf8a:	c9                   	leave
    cf8b:	c3                   	ret

000000000000cf8c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cf8c:	55                   	push   %rbp
    cf8d:	48 89 e5             	mov    %rsp,%rbp
    cf90:	48 83 ec 10          	sub    $0x10,%rsp
    cf94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cf9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cfa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfa4:	48 89 d6             	mov    %rdx,%rsi
    cfa7:	48 89 c7             	mov    %rax,%rdi
    cfaa:	e8 51 0c 00 00       	call   dc00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    cfaf:	90                   	nop
    cfb0:	c9                   	leave
    cfb1:	c3                   	ret

000000000000cfb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    cfb2:	55                   	push   %rbp
    cfb3:	48 89 e5             	mov    %rsp,%rbp
    cfb6:	48 83 ec 10          	sub    $0x10,%rsp
    cfba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    cfc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cfc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfca:	48 89 d6             	mov    %rdx,%rsi
    cfcd:	48 89 c7             	mov    %rax,%rdi
    cfd0:	e8 3b 0c 00 00       	call   dc10 <_ZNSaIPKcEC1ERKS1_>
    cfd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfd9:	48 89 c7             	mov    %rax,%rdi
    cfdc:	e8 55 0c 00 00       	call   dc36 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    cfe1:	90                   	nop
    cfe2:	c9                   	leave
    cfe3:	c3                   	ret

000000000000cfe4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    cfe4:	55                   	push   %rbp
    cfe5:	48 89 e5             	mov    %rsp,%rbp
    cfe8:	48 83 ec 20          	sub    $0x20,%rsp
    cfec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cff4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    cff8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cffd:	74 17                	je     d016 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    cfff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d003:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d007:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d00b:	48 89 ce             	mov    %rcx,%rsi
    d00e:	48 89 c7             	mov    %rax,%rdi
    d011:	e8 4e 0c 00 00       	call   dc64 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    d016:	90                   	nop
    d017:	c9                   	leave
    d018:	c3                   	ret
    d019:	90                   	nop

000000000000d01a <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    d01a:	55                   	push   %rbp
    d01b:	48 89 e5             	mov    %rsp,%rbp
    d01e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d026:	48 8b 40 08          	mov    0x8(%rax),%rax
    d02a:	5d                   	pop    %rbp
    d02b:	c3                   	ret

000000000000d02c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    d02c:	55                   	push   %rbp
    d02d:	48 89 e5             	mov    %rsp,%rbp
    d030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d034:	90                   	nop
    d035:	5d                   	pop    %rbp
    d036:	c3                   	ret

000000000000d037 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    d037:	55                   	push   %rbp
    d038:	48 89 e5             	mov    %rsp,%rbp
    d03b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d03f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    d043:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d047:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    d04b:	48 c1 f8 03          	sar    $0x3,%rax
    }
    d04f:	5d                   	pop    %rbp
    d050:	c3                   	ret

000000000000d051 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    d051:	55                   	push   %rbp
    d052:	48 89 e5             	mov    %rsp,%rbp
    d055:	53                   	push   %rbx
    d056:	48 83 ec 28          	sub    $0x28,%rsp
    d05a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d05e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    d062:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d066:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d06a:	48 89 d6             	mov    %rdx,%rsi
    d06d:	48 89 c7             	mov    %rax,%rdi
    d070:	e8 9b 0b 00 00       	call   dc10 <_ZNSaIPKcEC1ERKS1_>
    d075:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d079:	48 89 c7             	mov    %rax,%rdi
    d07c:	e8 11 0c 00 00       	call   dc92 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    d081:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    d085:	0f 92 c3             	setb   %bl
    d088:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d08c:	48 89 c7             	mov    %rax,%rdi
    d08f:	e8 88 ec ff ff       	call   bd1c <_ZNSaIPKcED1Ev>
    d094:	84 db                	test   %bl,%bl
    d096:	74 0f                	je     d0a7 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    d098:	48 8d 05 99 4e 00 00 	lea    0x4e99(%rip),%rax        # 11f38 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    d09f:	48 89 c7             	mov    %rax,%rdi
    d0a2:	e8 89 60 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    d0a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    d0ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d0af:	c9                   	leave
    d0b0:	c3                   	ret
    d0b1:	90                   	nop

000000000000d0b2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d0b2:	55                   	push   %rbp
    d0b3:	48 89 e5             	mov    %rsp,%rbp
    d0b6:	48 83 ec 10          	sub    $0x10,%rsp
    d0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d0c2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d0c7:	74 15                	je     d0de <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    d0c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0d1:	48 89 d6             	mov    %rdx,%rsi
    d0d4:	48 89 c7             	mov    %rax,%rdi
    d0d7:	e8 f8 0b 00 00       	call   dcd4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    d0dc:	eb 05                	jmp    d0e3 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    d0de:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d0e3:	c9                   	leave
    d0e4:	c3                   	ret

000000000000d0e5 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    d0e5:	55                   	push   %rbp
    d0e6:	48 89 e5             	mov    %rsp,%rbp
    d0e9:	48 83 ec 20          	sub    $0x20,%rsp
    d0ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d0f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    d0fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d101:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d109:	48 89 ce             	mov    %rcx,%rsi
    d10c:	48 89 c7             	mov    %rax,%rdi
    d10f:	e8 ea 0b 00 00       	call   dcfe <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    d114:	c9                   	leave
    d115:	c3                   	ret

000000000000d116 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d116:	55                   	push   %rbp
    d117:	48 89 e5             	mov    %rsp,%rbp
    d11a:	48 83 ec 10          	sub    $0x10,%rsp
    d11e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d122:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d126:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d12a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d12e:	48 89 d6             	mov    %rdx,%rsi
    d131:	48 89 c7             	mov    %rax,%rdi
    d134:	e8 fa 0b 00 00       	call   dd33 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    d139:	90                   	nop
    d13a:	c9                   	leave
    d13b:	c3                   	ret

000000000000d13c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d13c:	55                   	push   %rbp
    d13d:	48 89 e5             	mov    %rsp,%rbp
    d140:	48 83 ec 20          	sub    $0x20,%rsp
    d144:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d148:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    d14f:	07 7e 00 
    d152:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d156:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d15a:	48 89 c7             	mov    %rax,%rdi
    d15d:	e8 e0 0b 00 00       	call   dd42 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    d162:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d166:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d16a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d16e:	48 89 d6             	mov    %rdx,%rsi
    d171:	48 89 c7             	mov    %rax,%rdi
    d174:	e8 eb 69 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    d179:	48 8b 00             	mov    (%rax),%rax
      }
    d17c:	c9                   	leave
    d17d:	c3                   	ret

000000000000d17e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    d17e:	55                   	push   %rbp
    d17f:	48 89 e5             	mov    %rsp,%rbp
    d182:	48 83 ec 10          	sub    $0x10,%rsp
    d186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d18a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    d18e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d196:	48 89 d6             	mov    %rdx,%rsi
    d199:	48 89 c7             	mov    %rax,%rdi
    d19c:	e8 bb 0b 00 00       	call   dd5c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    d1a1:	90                   	nop
    d1a2:	c9                   	leave
    d1a3:	c3                   	ret

000000000000d1a4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d1a4:	55                   	push   %rbp
    d1a5:	48 89 e5             	mov    %rsp,%rbp
    d1a8:	48 83 ec 10          	sub    $0x10,%rsp
    d1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d1b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1bc:	48 89 d6             	mov    %rdx,%rsi
    d1bf:	48 89 c7             	mov    %rax,%rdi
    d1c2:	e8 b7 ff ff ff       	call   d17e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    d1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1cb:	48 89 c7             	mov    %rax,%rdi
    d1ce:	e8 99 0b 00 00       	call   dd6c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d1d3:	90                   	nop
    d1d4:	c9                   	leave
    d1d5:	c3                   	ret

000000000000d1d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d1d6:	55                   	push   %rbp
    d1d7:	48 89 e5             	mov    %rsp,%rbp
    d1da:	48 83 ec 10          	sub    $0x10,%rsp
    d1de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d1e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1ee:	48 89 d6             	mov    %rdx,%rsi
    d1f1:	48 89 c7             	mov    %rax,%rdi
    d1f4:	e8 a1 0b 00 00       	call   dd9a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    d1f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d1fd:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d204:	48 8b 10             	mov    (%rax),%rdx
    d207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d20f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d213:	48 8b 08             	mov    (%rax),%rcx
    d216:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d21a:	48 89 d0             	mov    %rdx,%rax
    d21d:	48 c1 e0 06          	shl    $0x6,%rax
    d221:	48 01 d0             	add    %rdx,%rax
    d224:	48 c1 e0 02          	shl    $0x2,%rax
    d228:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    d22c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d230:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d234:	90                   	nop
    d235:	c9                   	leave
    d236:	c3                   	ret
    d237:	90                   	nop

000000000000d238 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    d238:	55                   	push   %rbp
    d239:	48 89 e5             	mov    %rsp,%rbp
    d23c:	48 83 ec 20          	sub    $0x20,%rsp
    d240:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d244:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d248:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d24c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d251:	74 17                	je     d26a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d257:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d25b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d25f:	48 89 ce             	mov    %rcx,%rsi
    d262:	48 89 c7             	mov    %rax,%rdi
    d265:	e8 63 0b 00 00       	call   ddcd <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    d26a:	90                   	nop
    d26b:	c9                   	leave
    d26c:	c3                   	ret

000000000000d26d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d26d:	55                   	push   %rbp
    d26e:	48 89 e5             	mov    %rsp,%rbp
    d271:	48 83 ec 20          	sub    $0x20,%rsp
    d275:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d279:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d27d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d281:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d285:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d289:	48 89 d6             	mov    %rdx,%rsi
    d28c:	48 89 c7             	mov    %rax,%rdi
    d28f:	e8 67 0b 00 00       	call   ddfb <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    d294:	c9                   	leave
    d295:	c3                   	ret

000000000000d296 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d296:	55                   	push   %rbp
    d297:	48 89 e5             	mov    %rsp,%rbp
    d29a:	48 83 ec 10          	sub    $0x10,%rsp
    d29e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d2a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2ae:	48 89 d6             	mov    %rdx,%rsi
    d2b1:	48 89 c7             	mov    %rax,%rdi
    d2b4:	e8 6b 0b 00 00       	call   de24 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    d2b9:	90                   	nop
    d2ba:	c9                   	leave
    d2bb:	c3                   	ret

000000000000d2bc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d2bc:	55                   	push   %rbp
    d2bd:	48 89 e5             	mov    %rsp,%rbp
    d2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2c4:	90                   	nop
    d2c5:	5d                   	pop    %rbp
    d2c6:	c3                   	ret

000000000000d2c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d2c7:	55                   	push   %rbp
    d2c8:	48 89 e5             	mov    %rsp,%rbp
    d2cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    d2cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2d3:	48 8b 40 18          	mov    0x18(%rax),%rax
    d2d7:	5d                   	pop    %rbp
    d2d8:	c3                   	ret

000000000000d2d9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d2d9:	55                   	push   %rbp
    d2da:	48 89 e5             	mov    %rsp,%rbp
    d2dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    d2e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2e5:	48 8b 40 10          	mov    0x10(%rax),%rax
    d2e9:	5d                   	pop    %rbp
    d2ea:	c3                   	ret
    d2eb:	90                   	nop

000000000000d2ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    d2ec:	55                   	push   %rbp
    d2ed:	48 89 e5             	mov    %rsp,%rbp
    d2f0:	48 83 ec 10          	sub    $0x10,%rsp
    d2f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    d2fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d304:	48 89 d6             	mov    %rdx,%rsi
    d307:	48 89 c7             	mov    %rax,%rdi
    d30a:	e8 25 0b 00 00       	call   de34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    d30f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d317:	48 89 d6             	mov    %rdx,%rsi
    d31a:	48 89 c7             	mov    %rax,%rdi
    d31d:	e8 50 0b 00 00       	call   de72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    d322:	90                   	nop
    d323:	c9                   	leave
    d324:	c3                   	ret
    d325:	90                   	nop

000000000000d326 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    d326:	55                   	push   %rbp
    d327:	48 89 e5             	mov    %rsp,%rbp
    d32a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    d32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d332:	48 8b 40 10          	mov    0x10(%rax),%rax
    d336:	5d                   	pop    %rbp
    d337:	c3                   	ret

000000000000d338 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    d338:	55                   	push   %rbp
    d339:	48 89 e5             	mov    %rsp,%rbp
    d33c:	53                   	push   %rbx
    d33d:	48 83 ec 18          	sub    $0x18,%rsp
    d341:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d345:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    d349:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d34d:	48 89 c7             	mov    %rax,%rdi
    d350:	e8 53 0b 00 00       	call   dea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d355:	48 89 c3             	mov    %rax,%rbx
    d358:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d35c:	48 89 c7             	mov    %rax,%rdi
    d35f:	e8 92 f6 ff ff       	call   c9f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    d364:	48 89 c6             	mov    %rax,%rsi
    d367:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d36b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d36f:	48 89 d1             	mov    %rdx,%rcx
    d372:	48 89 da             	mov    %rbx,%rdx
    d375:	48 89 c7             	mov    %rax,%rdi
    d378:	e8 3d 0b 00 00       	call   deba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    d37d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d381:	c9                   	leave
    d382:	c3                   	ret
    d383:	90                   	nop

000000000000d384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d384:	55                   	push   %rbp
    d385:	48 89 e5             	mov    %rsp,%rbp
    d388:	48 83 ec 20          	sub    $0x20,%rsp
    d38c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    d390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d394:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d398:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d39c:	48 89 d6             	mov    %rdx,%rsi
    d39f:	48 89 c7             	mov    %rax,%rdi
    d3a2:	e8 1d 06 00 00       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d3a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ab:	c9                   	leave
    d3ac:	c3                   	ret
    d3ad:	90                   	nop

000000000000d3ae <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    d3ae:	55                   	push   %rbp
    d3af:	48 89 e5             	mov    %rsp,%rbp
    d3b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    d3b6:	90                   	nop
    d3b7:	5d                   	pop    %rbp
    d3b8:	c3                   	ret
    d3b9:	90                   	nop

000000000000d3ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    d3ba:	55                   	push   %rbp
    d3bb:	48 89 e5             	mov    %rsp,%rbp
    d3be:	48 83 ec 10          	sub    $0x10,%rsp
    d3c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    d3c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ca:	48 83 c0 20          	add    $0x20,%rax
    d3ce:	48 89 c7             	mov    %rax,%rdi
    d3d1:	e8 7a 0b 00 00       	call   df50 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    d3d6:	c9                   	leave
    d3d7:	c3                   	ret

000000000000d3d8 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    d3d8:	55                   	push   %rbp
    d3d9:	48 89 e5             	mov    %rsp,%rbp
    d3dc:	48 83 ec 10          	sub    $0x10,%rsp
    d3e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    d3e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3f0:	48 89 d6             	mov    %rdx,%rsi
    d3f3:	48 89 c7             	mov    %rax,%rdi
    d3f6:	e8 35 5c ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    d3fb:	c1 e8 1f             	shr    $0x1f,%eax
    d3fe:	c9                   	leave
    d3ff:	c3                   	ret

000000000000d400 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d400:	55                   	push   %rbp
    d401:	48 89 e5             	mov    %rsp,%rbp
    d404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d40c:	5d                   	pop    %rbp
    d40d:	c3                   	ret

000000000000d40e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    d40e:	55                   	push   %rbp
    d40f:	48 89 e5             	mov    %rsp,%rbp
    d412:	53                   	push   %rbx
    d413:	48 83 ec 18          	sub    $0x18,%rsp
    d417:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d41b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    d41f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d423:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d427:	48 89 c7             	mov    %rax,%rdi
    d42a:	e8 d1 ff ff ff       	call   d400 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    d42f:	48 89 c6             	mov    %rax,%rsi
    d432:	48 89 df             	mov    %rbx,%rdi
    d435:	e8 30 0b 00 00       	call   df6a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    d43a:	90                   	nop
    d43b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d43f:	c9                   	leave
    d440:	c3                   	ret

000000000000d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d441:	55                   	push   %rbp
    d442:	48 89 e5             	mov    %rsp,%rbp
    d445:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d44d:	5d                   	pop    %rbp
    d44e:	c3                   	ret
    d44f:	90                   	nop

000000000000d450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    d450:	55                   	push   %rbp
    d451:	48 89 e5             	mov    %rsp,%rbp
    d454:	41 54                	push   %r12
    d456:	53                   	push   %rbx
    d457:	48 83 ec 30          	sub    $0x30,%rsp
    d45b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d45f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d463:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d467:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d46b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    d46f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d473:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d477:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    d47a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d47e:	48 89 c7             	mov    %rax,%rdi
    d481:	e8 81 a6 ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    d486:	49 89 c4             	mov    %rax,%r12
    d489:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d48d:	48 89 c7             	mov    %rax,%rdi
    d490:	e8 ac ff ff ff       	call   d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    d495:	48 89 c3             	mov    %rax,%rbx
    d498:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d49c:	48 89 c7             	mov    %rax,%rdi
    d49f:	e8 47 a6 ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    d4a4:	48 89 c6             	mov    %rax,%rsi
    d4a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4ab:	4c 89 e1             	mov    %r12,%rcx
    d4ae:	48 89 da             	mov    %rbx,%rdx
    d4b1:	48 89 c7             	mov    %rax,%rdi
    d4b4:	e8 e5 0a 00 00       	call   df9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    d4b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d4bd:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    d4c1:	90                   	nop
    d4c2:	48 83 c4 30          	add    $0x30,%rsp
    d4c6:	5b                   	pop    %rbx
    d4c7:	41 5c                	pop    %r12
    d4c9:	5d                   	pop    %rbp
    d4ca:	c3                   	ret
    d4cb:	90                   	nop

000000000000d4cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    d4cc:	55                   	push   %rbp
    d4cd:	48 89 e5             	mov    %rsp,%rbp
    d4d0:	48 83 ec 10          	sub    $0x10,%rsp
    d4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    d4d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4dc:	48 8b 40 08          	mov    0x8(%rax),%rax
    d4e0:	48 85 c0             	test   %rax,%rax
    d4e3:	74 1a                	je     d4ff <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    d4e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4e9:	48 8b 00             	mov    (%rax),%rax
    d4ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d4f0:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d4f4:	48 89 d6             	mov    %rdx,%rsi
    d4f7:	48 89 c7             	mov    %rax,%rdi
    d4fa:	e8 ed fd ff ff       	call   d2ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    d4ff:	90                   	nop
    d500:	c9                   	leave
    d501:	c3                   	ret

000000000000d502 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d502:	55                   	push   %rbp
    d503:	48 89 e5             	mov    %rsp,%rbp
    d506:	53                   	push   %rbx
    d507:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    d50e:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    d515:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    d51c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    d523:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d52a:	48 89 c7             	mov    %rax,%rdi
    d52d:	e8 e8 0a 00 00       	call   e01a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    d532:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    d539:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d540:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d547:	48 89 c7             	mov    %rax,%rdi
    d54a:	e8 59 09 00 00       	call   dea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d54f:	48 39 c3             	cmp    %rax,%rbx
    d552:	0f 94 c0             	sete   %al
    d555:	84 c0                	test   %al,%al
    d557:	0f 84 c8 00 00 00    	je     d625 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    d55d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d564:	48 89 c7             	mov    %rax,%rdi
    d567:	e8 d6 0a 00 00       	call   e042 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    d56c:	48 85 c0             	test   %rax,%rax
    d56f:	74 44                	je     d5b5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    d571:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d578:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d57f:	48 89 c7             	mov    %rax,%rdi
    d582:	e8 cd 0a 00 00       	call   e054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d587:	48 8b 00             	mov    (%rax),%rax
    d58a:	48 89 c7             	mov    %rax,%rdi
    d58d:	e8 d4 0a 00 00       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d592:	48 89 c1             	mov    %rax,%rcx
    d595:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d59c:	48 89 c2             	mov    %rax,%rdx
    d59f:	48 89 ce             	mov    %rcx,%rsi
    d5a2:	48 89 df             	mov    %rbx,%rdi
    d5a5:	e8 2e f5 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d5aa:	84 c0                	test   %al,%al
    d5ac:	74 07                	je     d5b5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    d5ae:	b8 01 00 00 00       	mov    $0x1,%eax
    d5b3:	eb 05                	jmp    d5ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    d5b5:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    d5ba:	84 c0                	test   %al,%al
    d5bc:	74 49                	je     d607 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    d5be:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d5c5:	48 89 c7             	mov    %rax,%rdi
    d5c8:	e8 87 0a 00 00       	call   e054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d5cd:	48 89 c2             	mov    %rax,%rdx
    d5d0:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    d5d7:	00 00 00 00 
    d5db:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    d5e2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d5e9:	48 89 ce             	mov    %rcx,%rsi
    d5ec:	48 89 c7             	mov    %rax,%rdi
    d5ef:	e8 8a b7 ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d5f4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    d5fb:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d602:	e9 43 03 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d607:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d60e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d615:	48 89 d6             	mov    %rdx,%rsi
    d618:	48 89 c7             	mov    %rax,%rdi
    d61b:	e8 60 0a 00 00       	call   e080 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d620:	e9 25 03 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    d625:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d62c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d633:	48 89 c7             	mov    %rax,%rdi
    d636:	e8 2b 0a 00 00       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d63b:	48 89 c2             	mov    %rax,%rdx
    d63e:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d645:	48 89 c6             	mov    %rax,%rsi
    d648:	48 89 df             	mov    %rbx,%rdi
    d64b:	e8 88 f4 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d650:	84 c0                	test   %al,%al
    d652:	0f 84 66 01 00 00    	je     d7be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    d658:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d65f:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    d666:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d66d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d674:	48 89 c7             	mov    %rax,%rdi
    d677:	e8 7a 0b 00 00       	call   e1f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d67c:	48 8b 00             	mov    (%rax),%rax
    d67f:	48 39 c3             	cmp    %rax,%rbx
    d682:	0f 94 c0             	sete   %al
    d685:	84 c0                	test   %al,%al
    d687:	74 4c                	je     d6d5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    d689:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d690:	48 89 c7             	mov    %rax,%rdi
    d693:	e8 5e 0b 00 00       	call   e1f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d698:	48 89 c3             	mov    %rax,%rbx
    d69b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d6a2:	48 89 c7             	mov    %rax,%rdi
    d6a5:	e8 4c 0b 00 00       	call   e1f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d6aa:	48 89 c1             	mov    %rax,%rcx
    d6ad:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d6b4:	48 89 da             	mov    %rbx,%rdx
    d6b7:	48 89 ce             	mov    %rcx,%rsi
    d6ba:	48 89 c7             	mov    %rax,%rdi
    d6bd:	e8 74 b8 ff ff       	call   8f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d6c2:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d6c9:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d6d0:	e9 75 02 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    d6d5:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d6dc:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    d6e3:	48 89 c7             	mov    %rax,%rdi
    d6e6:	e8 1d 0b 00 00       	call   e208 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    d6eb:	48 8b 00             	mov    (%rax),%rax
    d6ee:	48 89 c7             	mov    %rax,%rdi
    d6f1:	e8 70 09 00 00       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d6f6:	48 89 c1             	mov    %rax,%rcx
    d6f9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d700:	48 89 c2             	mov    %rax,%rdx
    d703:	48 89 ce             	mov    %rcx,%rsi
    d706:	48 89 df             	mov    %rbx,%rdi
    d709:	e8 ca f3 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d70e:	84 c0                	test   %al,%al
    d710:	0f 84 8a 00 00 00    	je     d7a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    d716:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d71d:	48 89 c7             	mov    %rax,%rdi
    d720:	e8 a2 fb ff ff       	call   d2c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d725:	48 85 c0             	test   %rax,%rax
    d728:	0f 94 c0             	sete   %al
    d72b:	84 c0                	test   %al,%al
    d72d:	74 3e                	je     d76d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    d72f:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d736:	00 00 00 00 
    d73a:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    d741:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    d748:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    d74f:	48 89 ce             	mov    %rcx,%rsi
    d752:	48 89 c7             	mov    %rax,%rdi
    d755:	e8 24 b6 ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d75a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d761:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    d768:	e9 dd 01 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    d76d:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    d774:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    d77b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d782:	48 89 ce             	mov    %rcx,%rsi
    d785:	48 89 c7             	mov    %rax,%rdi
    d788:	e8 a9 b7 ff ff       	call   8f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d78d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d794:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    d79b:	e9 aa 01 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d7a0:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d7a7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d7ae:	48 89 d6             	mov    %rdx,%rsi
    d7b1:	48 89 c7             	mov    %rax,%rdi
    d7b4:	e8 c7 08 00 00       	call   e080 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d7b9:	e9 8c 01 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    d7be:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d7c5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7cc:	48 89 c7             	mov    %rax,%rdi
    d7cf:	e8 92 08 00 00       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d7d4:	48 89 c1             	mov    %rax,%rcx
    d7d7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d7de:	48 89 c2             	mov    %rax,%rdx
    d7e1:	48 89 ce             	mov    %rcx,%rsi
    d7e4:	48 89 df             	mov    %rbx,%rdi
    d7e7:	e8 ec f2 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d7ec:	84 c0                	test   %al,%al
    d7ee:	0f 84 2c 01 00 00    	je     d920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    d7f4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7fb:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    d802:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d809:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d810:	48 89 c7             	mov    %rax,%rdi
    d813:	e8 3c 08 00 00       	call   e054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d818:	48 8b 00             	mov    (%rax),%rax
    d81b:	48 39 c3             	cmp    %rax,%rbx
    d81e:	0f 94 c0             	sete   %al
    d821:	84 c0                	test   %al,%al
    d823:	74 3a                	je     d85f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    d825:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d82c:	48 89 c7             	mov    %rax,%rdi
    d82f:	e8 20 08 00 00       	call   e054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d834:	48 89 c2             	mov    %rax,%rdx
    d837:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    d83e:	00 
    d83f:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    d843:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d847:	48 89 ce             	mov    %rcx,%rsi
    d84a:	48 89 c7             	mov    %rax,%rdi
    d84d:	e8 2c b5 ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d852:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d856:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d85a:	e9 eb 00 00 00       	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    d85f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d866:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    d86d:	48 89 c7             	mov    %rax,%rdi
    d870:	e8 bb 09 00 00       	call   e230 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    d875:	48 8b 00             	mov    (%rax),%rax
    d878:	48 89 c7             	mov    %rax,%rdi
    d87b:	e8 e6 07 00 00       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d880:	48 89 c2             	mov    %rax,%rdx
    d883:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d88a:	48 89 c6             	mov    %rax,%rsi
    d88d:	48 89 df             	mov    %rbx,%rdi
    d890:	e8 43 f2 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d895:	84 c0                	test   %al,%al
    d897:	74 6c                	je     d905 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    d899:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d8a0:	48 89 c7             	mov    %rax,%rdi
    d8a3:	e8 1f fa ff ff       	call   d2c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d8a8:	48 85 c0             	test   %rax,%rax
    d8ab:	0f 94 c0             	sete   %al
    d8ae:	84 c0                	test   %al,%al
    d8b0:	74 2c                	je     d8de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    d8b2:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    d8b9:	00 
    d8ba:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    d8c1:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    d8c5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d8c9:	48 89 ce             	mov    %rcx,%rsi
    d8cc:	48 89 c7             	mov    %rax,%rdi
    d8cf:	e8 aa b4 ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d8d4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d8d8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d8dc:	eb 6c                	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    d8de:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    d8e5:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    d8ec:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d8f0:	48 89 ce             	mov    %rcx,%rsi
    d8f3:	48 89 c7             	mov    %rax,%rdi
    d8f6:	e8 3b b6 ff ff       	call   8f36 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d8fb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d8ff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d903:	eb 45                	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d905:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d90c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d913:	48 89 d6             	mov    %rdx,%rsi
    d916:	48 89 c7             	mov    %rax,%rdi
    d919:	e8 62 07 00 00       	call   e080 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d91e:	eb 2a                	jmp    d94a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    d920:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d927:	00 
    d928:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    d92c:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    d933:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d937:	48 89 ce             	mov    %rcx,%rsi
    d93a:	48 89 c7             	mov    %rax,%rdi
    d93d:	e8 3c b4 ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d942:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d946:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    d94a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d94e:	c9                   	leave
    d94f:	c3                   	ret

000000000000d950 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    d950:	55                   	push   %rbp
    d951:	48 89 e5             	mov    %rsp,%rbp
    d954:	48 83 ec 10          	sub    $0x10,%rsp
    d958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    d95c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d960:	48 8b 40 08          	mov    0x8(%rax),%rax
    d964:	48 89 c7             	mov    %rax,%rdi
    d967:	e8 ec 08 00 00       	call   e258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    d96c:	c9                   	leave
    d96d:	c3                   	ret

000000000000d96e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    d96e:	55                   	push   %rbp
    d96f:	48 89 e5             	mov    %rsp,%rbp
    d972:	48 83 ec 30          	sub    $0x30,%rsp
    d976:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d97a:	48 89 d1             	mov    %rdx,%rcx
    d97d:	48 89 f0             	mov    %rsi,%rax
    d980:	48 89 fa             	mov    %rdi,%rdx
    d983:	48 89 ca             	mov    %rcx,%rdx
    d986:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d98a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    d98e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d992:	48 8b 00             	mov    (%rax),%rax
    d995:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d999:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    d99d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d9a1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    d9a5:	48 89 c7             	mov    %rax,%rdi
    d9a8:	e8 d7 08 00 00       	call   e284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    d9ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    d9b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9b5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d9bc:	00 
	  return __it;
    d9bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    d9c1:	c9                   	leave
    d9c2:	c3                   	ret
    d9c3:	90                   	nop

000000000000d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d9c4:	55                   	push   %rbp
    d9c5:	48 89 e5             	mov    %rsp,%rbp
    d9c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    d9d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9d8:	48 89 10             	mov    %rdx,(%rax)
    d9db:	90                   	nop
    d9dc:	5d                   	pop    %rbp
    d9dd:	c3                   	ret

000000000000d9de <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d9de:	55                   	push   %rbp
    d9df:	48 89 e5             	mov    %rsp,%rbp
    d9e2:	48 83 ec 20          	sub    $0x20,%rsp
    d9e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d9ea:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d9f1:	ff ff 0f 
    d9f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d9f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9fc:	48 89 c7             	mov    %rax,%rdi
    d9ff:	e8 43 09 00 00       	call   e347 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    da04:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    da08:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    da0c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    da10:	48 89 d6             	mov    %rdx,%rsi
    da13:	48 89 c7             	mov    %rax,%rdi
    da16:	e8 49 61 ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    da1b:	48 8b 00             	mov    (%rax),%rax
      }
    da1e:	c9                   	leave
    da1f:	c3                   	ret

000000000000da20 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    da20:	55                   	push   %rbp
    da21:	48 89 e5             	mov    %rsp,%rbp
    da24:	48 83 ec 10          	sub    $0x10,%rsp
    da28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    da30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da38:	48 89 d6             	mov    %rdx,%rsi
    da3b:	48 89 c7             	mov    %rax,%rdi
    da3e:	e8 6f f3 ff ff       	call   cdb2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    da43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da47:	48 89 c7             	mov    %rax,%rdi
    da4a:	e8 13 09 00 00       	call   e362 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    da4f:	90                   	nop
    da50:	c9                   	leave
    da51:	c3                   	ret

000000000000da52 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    da52:	55                   	push   %rbp
    da53:	48 89 e5             	mov    %rsp,%rbp
    da56:	48 83 ec 10          	sub    $0x10,%rsp
    da5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    da62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da6a:	48 89 d6             	mov    %rdx,%rsi
    da6d:	48 89 c7             	mov    %rax,%rdi
    da70:	e8 1b 09 00 00       	call   e390 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    da75:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da79:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    da7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da80:	48 8b 10             	mov    (%rax),%rdx
    da83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da87:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    da8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8f:	48 8b 00             	mov    (%rax),%rax
    da92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da96:	48 c1 e2 03          	shl    $0x3,%rdx
    da9a:	48 01 c2             	add    %rax,%rdx
    da9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daa1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    daa5:	90                   	nop
    daa6:	c9                   	leave
    daa7:	c3                   	ret

000000000000daa8 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    daa8:	55                   	push   %rbp
    daa9:	48 89 e5             	mov    %rsp,%rbp
    daac:	48 83 ec 20          	sub    $0x20,%rsp
    dab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dab4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dab8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    dabc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dac4:	48 89 d6             	mov    %rdx,%rsi
    dac7:	48 89 c7             	mov    %rax,%rdi
    daca:	e8 f4 08 00 00       	call   e3c3 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    dacf:	c9                   	leave
    dad0:	c3                   	ret
    dad1:	90                   	nop

000000000000dad2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    dad2:	55                   	push   %rbp
    dad3:	48 89 e5             	mov    %rsp,%rbp
    dad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dade:	90                   	nop
    dadf:	5d                   	pop    %rbp
    dae0:	c3                   	ret

000000000000dae1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dae1:	55                   	push   %rbp
    dae2:	48 89 e5             	mov    %rsp,%rbp
    dae5:	48 83 ec 20          	sub    $0x20,%rsp
    dae9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    daed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    daf1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    daf5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    daf9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dafd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db01:	48 89 ce             	mov    %rcx,%rsi
    db04:	48 89 c7             	mov    %rax,%rdi
    db07:	e8 e0 08 00 00       	call   e3ec <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    db0c:	90                   	nop
    db0d:	c9                   	leave
    db0e:	c3                   	ret

000000000000db0f <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    db0f:	55                   	push   %rbp
    db10:	48 89 e5             	mov    %rsp,%rbp
    db13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db1b:	90                   	nop
    db1c:	5d                   	pop    %rbp
    db1d:	c3                   	ret

000000000000db1e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    db1e:	55                   	push   %rbp
    db1f:	48 89 e5             	mov    %rsp,%rbp
    db22:	48 83 ec 10          	sub    $0x10,%rsp
    db26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    db2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db2e:	48 89 c7             	mov    %rax,%rdi
    db31:	e8 e8 08 00 00       	call   e41e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    db36:	c9                   	leave
    db37:	c3                   	ret

000000000000db38 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    db38:	55                   	push   %rbp
    db39:	48 89 e5             	mov    %rsp,%rbp
    db3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db44:	90                   	nop
    db45:	5d                   	pop    %rbp
    db46:	c3                   	ret
    db47:	90                   	nop

000000000000db48 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    db48:	55                   	push   %rbp
    db49:	48 89 e5             	mov    %rsp,%rbp
    db4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    db50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db54:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    db5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db5f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    db66:	00 
    db67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db6b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    db72:	00 
	{ }
    db73:	90                   	nop
    db74:	5d                   	pop    %rbp
    db75:	c3                   	ret

000000000000db76 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    db76:	55                   	push   %rbp
    db77:	48 89 e5             	mov    %rsp,%rbp
    db7a:	48 83 ec 10          	sub    $0x10,%rsp
    db7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    db86:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    db8b:	74 15                	je     dba2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    db8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db95:	48 89 d6             	mov    %rdx,%rsi
    db98:	48 89 c7             	mov    %rax,%rdi
    db9b:	e8 98 08 00 00       	call   e438 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    dba0:	eb 05                	jmp    dba7 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    dba2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dba7:	c9                   	leave
    dba8:	c3                   	ret

000000000000dba9 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dba9:	55                   	push   %rbp
    dbaa:	48 89 e5             	mov    %rsp,%rbp
    dbad:	48 83 ec 20          	sub    $0x20,%rsp
    dbb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbb5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dbb9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dbbd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dbc1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dbc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbc9:	48 89 ce             	mov    %rcx,%rsi
    dbcc:	48 89 c7             	mov    %rax,%rdi
    dbcf:	e8 8e 08 00 00       	call   e462 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    dbd4:	90                   	nop
    dbd5:	c9                   	leave
    dbd6:	c3                   	ret

000000000000dbd7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    dbd7:	55                   	push   %rbp
    dbd8:	48 89 e5             	mov    %rsp,%rbp
    dbdb:	48 83 ec 20          	sub    $0x20,%rsp
    dbdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dbe3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    dbe7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    dbeb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dbef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbf3:	48 89 d6             	mov    %rdx,%rsi
    dbf6:	48 89 c7             	mov    %rax,%rdi
    dbf9:	e8 9d 08 00 00       	call   e49b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    dbfe:	c9                   	leave
    dbff:	c3                   	ret

000000000000dc00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    dc00:	55                   	push   %rbp
    dc01:	48 89 e5             	mov    %rsp,%rbp
    dc04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc0c:	90                   	nop
    dc0d:	5d                   	pop    %rbp
    dc0e:	c3                   	ret
    dc0f:	90                   	nop

000000000000dc10 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    dc10:	55                   	push   %rbp
    dc11:	48 89 e5             	mov    %rsp,%rbp
    dc14:	48 83 ec 10          	sub    $0x10,%rsp
    dc18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    dc20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc28:	48 89 d6             	mov    %rdx,%rsi
    dc2b:	48 89 c7             	mov    %rax,%rdi
    dc2e:	e8 c5 08 00 00       	call   e4f8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    dc33:	90                   	nop
    dc34:	c9                   	leave
    dc35:	c3                   	ret

000000000000dc36 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    dc36:	55                   	push   %rbp
    dc37:	48 89 e5             	mov    %rsp,%rbp
    dc3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    dc3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc42:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    dc49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc4d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dc54:	00 
    dc55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc59:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    dc60:	00 
	{ }
    dc61:	90                   	nop
    dc62:	5d                   	pop    %rbp
    dc63:	c3                   	ret

000000000000dc64 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dc64:	55                   	push   %rbp
    dc65:	48 89 e5             	mov    %rsp,%rbp
    dc68:	48 83 ec 20          	sub    $0x20,%rsp
    dc6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dc78:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc7c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dc80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc84:	48 89 ce             	mov    %rcx,%rsi
    dc87:	48 89 c7             	mov    %rax,%rdi
    dc8a:	e8 79 08 00 00       	call   e508 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    dc8f:	90                   	nop
    dc90:	c9                   	leave
    dc91:	c3                   	ret

000000000000dc92 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    dc92:	55                   	push   %rbp
    dc93:	48 89 e5             	mov    %rsp,%rbp
    dc96:	48 83 ec 20          	sub    $0x20,%rsp
    dc9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    dc9e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    dca5:	ff ff 0f 
    dca8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    dcac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dcb0:	48 89 c7             	mov    %rax,%rdi
    dcb3:	e8 81 08 00 00       	call   e539 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    dcb8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    dcbc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    dcc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dcc4:	48 89 d6             	mov    %rdx,%rsi
    dcc7:	48 89 c7             	mov    %rax,%rdi
    dcca:	e8 95 5e ff ff       	call   3b64 <_ZSt3minImERKT_S2_S2_>
    dccf:	48 8b 00             	mov    (%rax),%rax
      }
    dcd2:	c9                   	leave
    dcd3:	c3                   	ret

000000000000dcd4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    dcd4:	55                   	push   %rbp
    dcd5:	48 89 e5             	mov    %rsp,%rbp
    dcd8:	48 83 ec 10          	sub    $0x10,%rsp
    dcdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dce0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dce4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcec:	ba 00 00 00 00       	mov    $0x0,%edx
    dcf1:	48 89 ce             	mov    %rcx,%rsi
    dcf4:	48 89 c7             	mov    %rax,%rdi
    dcf7:	e8 58 08 00 00       	call   e554 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    dcfc:	c9                   	leave
    dcfd:	c3                   	ret

000000000000dcfe <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    dcfe:	55                   	push   %rbp
    dcff:	48 89 e5             	mov    %rsp,%rbp
    dd02:	48 83 ec 30          	sub    $0x30,%rsp
    dd06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dd0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dd0e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    dd12:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    dd16:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    dd1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dd1e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dd22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd26:	48 89 ce             	mov    %rcx,%rsi
    dd29:	48 89 c7             	mov    %rax,%rdi
    dd2c:	e8 84 08 00 00       	call   e5b5 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    dd31:	c9                   	leave
    dd32:	c3                   	ret

000000000000dd33 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    dd33:	55                   	push   %rbp
    dd34:	48 89 e5             	mov    %rsp,%rbp
    dd37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd3f:	90                   	nop
    dd40:	5d                   	pop    %rbp
    dd41:	c3                   	ret

000000000000dd42 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    dd42:	55                   	push   %rbp
    dd43:	48 89 e5             	mov    %rsp,%rbp
    dd46:	48 83 ec 10          	sub    $0x10,%rsp
    dd4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    dd4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd52:	48 89 c7             	mov    %rax,%rdi
    dd55:	e8 88 08 00 00       	call   e5e2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    dd5a:	c9                   	leave
    dd5b:	c3                   	ret

000000000000dd5c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    dd5c:	55                   	push   %rbp
    dd5d:	48 89 e5             	mov    %rsp,%rbp
    dd60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd68:	90                   	nop
    dd69:	5d                   	pop    %rbp
    dd6a:	c3                   	ret
    dd6b:	90                   	nop

000000000000dd6c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    dd6c:	55                   	push   %rbp
    dd6d:	48 89 e5             	mov    %rsp,%rbp
    dd70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    dd74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd78:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    dd7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd83:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dd8a:	00 
    dd8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd8f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    dd96:	00 
	{ }
    dd97:	90                   	nop
    dd98:	5d                   	pop    %rbp
    dd99:	c3                   	ret

000000000000dd9a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    dd9a:	55                   	push   %rbp
    dd9b:	48 89 e5             	mov    %rsp,%rbp
    dd9e:	48 83 ec 10          	sub    $0x10,%rsp
    dda2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dda6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ddaa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ddaf:	74 15                	je     ddc6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ddb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ddb9:	48 89 d6             	mov    %rdx,%rsi
    ddbc:	48 89 c7             	mov    %rax,%rdi
    ddbf:	e8 38 08 00 00       	call   e5fc <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    ddc4:	eb 05                	jmp    ddcb <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ddc6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ddcb:	c9                   	leave
    ddcc:	c3                   	ret

000000000000ddcd <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ddcd:	55                   	push   %rbp
    ddce:	48 89 e5             	mov    %rsp,%rbp
    ddd1:	48 83 ec 20          	sub    $0x20,%rsp
    ddd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dddd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dde1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dde5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dde9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dded:	48 89 ce             	mov    %rcx,%rsi
    ddf0:	48 89 c7             	mov    %rax,%rdi
    ddf3:	e8 2e 08 00 00       	call   e626 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    ddf8:	90                   	nop
    ddf9:	c9                   	leave
    ddfa:	c3                   	ret

000000000000ddfb <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ddfb:	55                   	push   %rbp
    ddfc:	48 89 e5             	mov    %rsp,%rbp
    ddff:	48 83 ec 20          	sub    $0x20,%rsp
    de03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    de0b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    de0f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    de13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de17:	48 89 d6             	mov    %rdx,%rsi
    de1a:	48 89 c7             	mov    %rax,%rdi
    de1d:	e8 3e 08 00 00       	call   e660 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    de22:	c9                   	leave
    de23:	c3                   	ret

000000000000de24 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    de24:	55                   	push   %rbp
    de25:	48 89 e5             	mov    %rsp,%rbp
    de28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    de30:	90                   	nop
    de31:	5d                   	pop    %rbp
    de32:	c3                   	ret
    de33:	90                   	nop

000000000000de34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    de34:	55                   	push   %rbp
    de35:	48 89 e5             	mov    %rsp,%rbp
    de38:	53                   	push   %rbx
    de39:	48 83 ec 18          	sub    $0x18,%rsp
    de3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de41:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    de45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de49:	48 89 c7             	mov    %rax,%rdi
    de4c:	e8 69 f5 ff ff       	call   d3ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    de51:	48 89 c3             	mov    %rax,%rbx
    de54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de58:	48 89 c7             	mov    %rax,%rdi
    de5b:	e8 60 08 00 00       	call   e6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    de60:	48 89 de             	mov    %rbx,%rsi
    de63:	48 89 c7             	mov    %rax,%rdi
    de66:	e8 63 08 00 00       	call   e6ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    de6b:	90                   	nop
    de6c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de70:	c9                   	leave
    de71:	c3                   	ret

000000000000de72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    de72:	55                   	push   %rbp
    de73:	48 89 e5             	mov    %rsp,%rbp
    de76:	48 83 ec 10          	sub    $0x10,%rsp
    de7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    de82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de86:	48 89 c7             	mov    %rax,%rdi
    de89:	e8 32 08 00 00       	call   e6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    de8e:	48 89 c1             	mov    %rax,%rcx
    de91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de95:	ba 01 00 00 00       	mov    $0x1,%edx
    de9a:	48 89 c6             	mov    %rax,%rsi
    de9d:	48 89 cf             	mov    %rcx,%rdi
    dea0:	e8 4f 08 00 00       	call   e6f4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    dea5:	90                   	nop
    dea6:	c9                   	leave
    dea7:	c3                   	ret

000000000000dea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    dea8:	55                   	push   %rbp
    dea9:	48 89 e5             	mov    %rsp,%rbp
    deac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    deb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb4:	48 83 c0 08          	add    $0x8,%rax
    deb8:	5d                   	pop    %rbp
    deb9:	c3                   	ret

000000000000deba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    deba:	55                   	push   %rbp
    debb:	48 89 e5             	mov    %rsp,%rbp
    debe:	53                   	push   %rbx
    debf:	48 83 ec 38          	sub    $0x38,%rsp
    dec3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    dec7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    decb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    decf:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    ded3:	eb 56                	jmp    df2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    ded5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    ded9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dedd:	48 89 c7             	mov    %rax,%rdi
    dee0:	e8 73 03 00 00       	call   e258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    dee5:	48 89 c1             	mov    %rax,%rcx
    dee8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    deec:	48 89 c2             	mov    %rax,%rdx
    deef:	48 89 ce             	mov    %rcx,%rsi
    def2:	48 89 df             	mov    %rbx,%rdi
    def5:	e8 de eb ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    defa:	83 f0 01             	xor    $0x1,%eax
    defd:	84 c0                	test   %al,%al
    deff:	74 1a                	je     df1b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    df01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df05:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    df09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df0d:	48 89 c7             	mov    %rax,%rdi
    df10:	e8 c4 f3 ff ff       	call   d2d9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    df15:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    df19:	eb 10                	jmp    df2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    df1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df1f:	48 89 c7             	mov    %rax,%rdi
    df22:	e8 a0 f3 ff ff       	call   d2c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    df27:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    df2b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    df30:	75 a3                	jne    ded5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    df32:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    df36:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    df3a:	48 89 d6             	mov    %rdx,%rsi
    df3d:	48 89 c7             	mov    %rax,%rdi
    df40:	e8 7f fa ff ff       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    df45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    df49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df4d:	c9                   	leave
    df4e:	c3                   	ret
    df4f:	90                   	nop

000000000000df50 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() noexcept
    df50:	55                   	push   %rbp
    df51:	48 89 e5             	mov    %rsp,%rbp
    df54:	48 83 ec 10          	sub    $0x10,%rsp
    df58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    df5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df60:	48 89 c7             	mov    %rax,%rdi
    df63:	e8 ba 07 00 00       	call   e722 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    df68:	c9                   	leave
    df69:	c3                   	ret

000000000000df6a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    df6a:	55                   	push   %rbp
    df6b:	48 89 e5             	mov    %rsp,%rbp
    df6e:	53                   	push   %rbx
    df6f:	48 83 ec 18          	sub    $0x18,%rsp
    df73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df77:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    df7b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    df7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    df83:	48 89 c7             	mov    %rax,%rdi
    df86:	e8 75 f4 ff ff       	call   d400 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    df8b:	48 89 c6             	mov    %rax,%rsi
    df8e:	48 89 df             	mov    %rbx,%rdi
    df91:	e8 9a 07 00 00       	call   e730 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    df96:	90                   	nop
    df97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df9b:	c9                   	leave
    df9c:	c3                   	ret
    df9d:	90                   	nop

000000000000df9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    df9e:	55                   	push   %rbp
    df9f:	48 89 e5             	mov    %rsp,%rbp
    dfa2:	41 54                	push   %r12
    dfa4:	53                   	push   %rbx
    dfa5:	48 83 ec 30          	sub    $0x30,%rsp
    dfa9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    dfad:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    dfb1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    dfb5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    dfb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dfbd:	48 89 c7             	mov    %rax,%rdi
    dfc0:	e8 91 07 00 00       	call   e756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    dfc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    dfc9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dfcd:	48 89 c7             	mov    %rax,%rdi
    dfd0:	e8 32 9b ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    dfd5:	49 89 c4             	mov    %rax,%r12
    dfd8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dfdc:	48 89 c7             	mov    %rax,%rdi
    dfdf:	e8 5d f4 ff ff       	call   d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    dfe4:	48 89 c3             	mov    %rax,%rbx
    dfe7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dfeb:	48 89 c7             	mov    %rax,%rdi
    dfee:	e8 f8 9a ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    dff3:	48 89 c2             	mov    %rax,%rdx
    dff6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    dffa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dffe:	4d 89 e0             	mov    %r12,%r8
    e001:	48 89 d9             	mov    %rbx,%rcx
    e004:	48 89 c7             	mov    %rax,%rdi
    e007:	e8 72 07 00 00       	call   e77e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    e00c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e010:	48 83 c4 30          	add    $0x30,%rsp
    e014:	5b                   	pop    %rbx
    e015:	41 5c                	pop    %r12
    e017:	5d                   	pop    %rbp
    e018:	c3                   	ret
    e019:	90                   	nop

000000000000e01a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    e01a:	55                   	push   %rbp
    e01b:	48 89 e5             	mov    %rsp,%rbp
    e01e:	48 83 ec 20          	sub    $0x20,%rsp
    e022:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    e026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e02a:	48 8b 10             	mov    (%rax),%rdx
    e02d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e031:	48 89 d6             	mov    %rdx,%rsi
    e034:	48 89 c7             	mov    %rax,%rdi
    e037:	e8 88 f9 ff ff       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e03c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e040:	c9                   	leave
    e041:	c3                   	ret

000000000000e042 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e042:	55                   	push   %rbp
    e043:	48 89 e5             	mov    %rsp,%rbp
    e046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    e04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e04e:	48 8b 40 28          	mov    0x28(%rax),%rax
    e052:	5d                   	pop    %rbp
    e053:	c3                   	ret

000000000000e054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    e054:	55                   	push   %rbp
    e055:	48 89 e5             	mov    %rsp,%rbp
    e058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    e05c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e060:	48 83 c0 20          	add    $0x20,%rax
    e064:	5d                   	pop    %rbp
    e065:	c3                   	ret

000000000000e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    e066:	55                   	push   %rbp
    e067:	48 89 e5             	mov    %rsp,%rbp
    e06a:	48 83 ec 10          	sub    $0x10,%rsp
    e06e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    e072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e076:	48 89 c7             	mov    %rax,%rdi
    e079:	e8 da 01 00 00       	call   e258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e07e:	c9                   	leave
    e07f:	c3                   	ret

000000000000e080 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e080:	55                   	push   %rbp
    e081:	48 89 e5             	mov    %rsp,%rbp
    e084:	53                   	push   %rbx
    e085:	48 83 ec 78          	sub    $0x78,%rsp
    e089:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    e08d:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    e091:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e095:	48 89 c7             	mov    %rax,%rdi
    e098:	e8 59 e9 ff ff       	call   c9f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    e09d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    e0a1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e0a5:	48 89 c7             	mov    %rax,%rdi
    e0a8:	e8 fb fd ff ff       	call   dea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e0ad:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    e0b1:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    e0b5:	eb 51                	jmp    e108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    e0b7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e0bb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    e0bf:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e0c3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e0c7:	48 89 c7             	mov    %rax,%rdi
    e0ca:	e8 89 01 00 00       	call   e258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e0cf:	48 89 c2             	mov    %rax,%rdx
    e0d2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e0d6:	48 89 c6             	mov    %rax,%rsi
    e0d9:	48 89 df             	mov    %rbx,%rdi
    e0dc:	e8 f7 e9 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e0e1:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    e0e4:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e0e8:	74 0e                	je     e0f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    e0ea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e0ee:	48 89 c7             	mov    %rax,%rdi
    e0f1:	e8 e3 f1 ff ff       	call   d2d9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e0f6:	eb 0c                	jmp    e104 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    e0f8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e0fc:	48 89 c7             	mov    %rax,%rdi
    e0ff:	e8 c3 f1 ff ff       	call   d2c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e104:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    e108:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e10c:	48 85 c0             	test   %rax,%rax
    e10f:	75 a6                	jne    e0b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    e111:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    e115:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e119:	48 89 d6             	mov    %rdx,%rsi
    e11c:	48 89 c7             	mov    %rax,%rdi
    e11f:	e8 a0 f8 ff ff       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    e124:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e128:	74 54                	je     e17e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    e12a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e12e:	48 89 c7             	mov    %rax,%rdi
    e131:	e8 1a 07 00 00       	call   e850 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    e136:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e13a:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    e13e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e142:	48 89 d6             	mov    %rdx,%rsi
    e145:	48 89 c7             	mov    %rax,%rdi
    e148:	e8 2f e9 ff ff       	call   ca7c <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    e14d:	84 c0                	test   %al,%al
    e14f:	74 21                	je     e172 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    e151:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e155:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e159:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e15d:	48 89 ce             	mov    %rcx,%rsi
    e160:	48 89 c7             	mov    %rax,%rdi
    e163:	e8 12 07 00 00       	call   e87a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e168:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    e16c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    e170:	eb 7d                	jmp    e1ef <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    e172:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e176:	48 89 c7             	mov    %rax,%rdi
    e179:	e8 8a 00 00 00       	call   e208 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    e17e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e182:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    e186:	48 89 c7             	mov    %rax,%rdi
    e189:	e8 d8 fe ff ff       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e18e:	48 89 c1             	mov    %rax,%rcx
    e191:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e195:	48 89 c2             	mov    %rax,%rdx
    e198:	48 89 ce             	mov    %rcx,%rsi
    e19b:	48 89 df             	mov    %rbx,%rdi
    e19e:	e8 35 e9 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e1a3:	84 c0                	test   %al,%al
    e1a5:	74 21                	je     e1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    e1a7:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e1ab:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e1af:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e1b3:	48 89 ce             	mov    %rcx,%rsi
    e1b6:	48 89 c7             	mov    %rax,%rdi
    e1b9:	e8 bc 06 00 00       	call   e87a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e1be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e1c2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e1c6:	eb 27                	jmp    e1ef <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    e1c8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e1cf:	00 
    e1d0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    e1d4:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e1d8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e1dc:	48 89 ce             	mov    %rcx,%rsi
    e1df:	48 89 c7             	mov    %rax,%rdi
    e1e2:	e8 97 ab ff ff       	call   8d7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e1e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e1eb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    e1ef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e1f3:	c9                   	leave
    e1f4:	c3                   	ret
    e1f5:	90                   	nop

000000000000e1f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    e1f6:	55                   	push   %rbp
    e1f7:	48 89 e5             	mov    %rsp,%rbp
    e1fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    e1fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e202:	48 83 c0 18          	add    $0x18,%rax
    e206:	5d                   	pop    %rbp
    e207:	c3                   	ret

000000000000e208 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    e208:	55                   	push   %rbp
    e209:	48 89 e5             	mov    %rsp,%rbp
    e20c:	48 83 ec 10          	sub    $0x10,%rsp
    e210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    e214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e218:	48 8b 00             	mov    (%rax),%rax
    e21b:	48 89 c7             	mov    %rax,%rdi
    e21e:	e8 dd 50 ff ff       	call   3300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    e223:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e227:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e22a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e22e:	c9                   	leave
    e22f:	c3                   	ret

000000000000e230 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e230:	55                   	push   %rbp
    e231:	48 89 e5             	mov    %rsp,%rbp
    e234:	48 83 ec 10          	sub    $0x10,%rsp
    e238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    e23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e240:	48 8b 00             	mov    (%rax),%rax
    e243:	48 89 c7             	mov    %rax,%rdi
    e246:	e8 45 4f ff ff       	call   3190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    e24b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e24f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e256:	c9                   	leave
    e257:	c3                   	ret

000000000000e258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    e258:	55                   	push   %rbp
    e259:	48 89 e5             	mov    %rsp,%rbp
    e25c:	48 83 ec 20          	sub    $0x20,%rsp
    e260:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    e264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e268:	48 89 c7             	mov    %rax,%rdi
    e26b:	e8 4e 06 00 00       	call   e8be <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e270:	48 89 c2             	mov    %rax,%rdx
    e273:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    e277:	48 89 d6             	mov    %rdx,%rsi
    e27a:	48 89 c7             	mov    %rax,%rdi
    e27d:	e8 5a 06 00 00       	call   e8dc <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    e282:	c9                   	leave
    e283:	c3                   	ret

000000000000e284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e284:	55                   	push   %rbp
    e285:	48 89 e5             	mov    %rsp,%rbp
    e288:	41 54                	push   %r12
    e28a:	53                   	push   %rbx
    e28b:	48 83 ec 30          	sub    $0x30,%rsp
    e28f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e293:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e297:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e29b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    e29f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e2a4:	75 43                	jne    e2e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    e2a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2aa:	48 89 c7             	mov    %rax,%rdi
    e2ad:	e8 f6 fb ff ff       	call   dea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e2b2:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    e2b6:	74 31                	je     e2e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    e2b8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e2bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e2c0:	48 89 c7             	mov    %rax,%rdi
    e2c3:	e8 9e fd ff ff       	call   e066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e2c8:	49 89 c4             	mov    %rax,%r12
    e2cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e2cf:	48 89 c7             	mov    %rax,%rdi
    e2d2:	e8 81 ff ff ff       	call   e258 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e2d7:	4c 89 e2             	mov    %r12,%rdx
    e2da:	48 89 c6             	mov    %rax,%rsi
    e2dd:	48 89 df             	mov    %rbx,%rdi
    e2e0:	e8 f3 e7 ff ff       	call   cad8 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e2e5:	84 c0                	test   %al,%al
    e2e7:	74 07                	je     e2f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    e2e9:	b8 01 00 00 00       	mov    $0x1,%eax
    e2ee:	eb 05                	jmp    e2f5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    e2f0:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    e2f5:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    e2f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2fc:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    e300:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    e304:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e308:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e30c:	89 c7                	mov    %eax,%edi
    e30e:	e8 2d 4d ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    e313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e317:	48 8b 40 28          	mov    0x28(%rax),%rax
    e31b:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e31f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e323:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    e327:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e32b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e32f:	48 89 d6             	mov    %rdx,%rsi
    e332:	48 89 c7             	mov    %rax,%rdi
    e335:	e8 8a f6 ff ff       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e33a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    e33e:	48 83 c4 30          	add    $0x30,%rsp
    e342:	5b                   	pop    %rbx
    e343:	41 5c                	pop    %r12
    e345:	5d                   	pop    %rbp
    e346:	c3                   	ret

000000000000e347 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e347:	55                   	push   %rbp
    e348:	48 89 e5             	mov    %rsp,%rbp
    e34b:	48 83 ec 10          	sub    $0x10,%rsp
    e34f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e357:	48 89 c7             	mov    %rax,%rdi
    e35a:	e8 8f 05 00 00       	call   e8ee <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    e35f:	c9                   	leave
    e360:	c3                   	ret
    e361:	90                   	nop

000000000000e362 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    e362:	55                   	push   %rbp
    e363:	48 89 e5             	mov    %rsp,%rbp
    e366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    e36a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e36e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e379:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e380:	00 
    e381:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e385:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    e38c:	00 
	{ }
    e38d:	90                   	nop
    e38e:	5d                   	pop    %rbp
    e38f:	c3                   	ret

000000000000e390 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e390:	55                   	push   %rbp
    e391:	48 89 e5             	mov    %rsp,%rbp
    e394:	48 83 ec 10          	sub    $0x10,%rsp
    e398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e39c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e3a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e3a5:	74 15                	je     e3bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    e3a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e3af:	48 89 d6             	mov    %rdx,%rsi
    e3b2:	48 89 c7             	mov    %rax,%rdi
    e3b5:	e8 4e 05 00 00       	call   e908 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    e3ba:	eb 05                	jmp    e3c1 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    e3bc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e3c1:	c9                   	leave
    e3c2:	c3                   	ret

000000000000e3c3 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    e3c3:	55                   	push   %rbp
    e3c4:	48 89 e5             	mov    %rsp,%rbp
    e3c7:	48 83 ec 20          	sub    $0x20,%rsp
    e3cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    e3d3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    e3d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e3db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3df:	48 89 d6             	mov    %rdx,%rsi
    e3e2:	48 89 c7             	mov    %rax,%rdi
    e3e5:	e8 48 05 00 00       	call   e932 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    e3ea:	c9                   	leave
    e3eb:	c3                   	ret

000000000000e3ec <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e3ec:	55                   	push   %rbp
    e3ed:	48 89 e5             	mov    %rsp,%rbp
    e3f0:	48 83 ec 20          	sub    $0x20,%rsp
    e3f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e3fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e404:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e40b:	00 
    e40c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e410:	48 89 d6             	mov    %rdx,%rsi
    e413:	48 89 c7             	mov    %rax,%rdi
    e416:	e8 b5 4e ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e41b:	c9                   	leave
    e41c:	c3                   	ret
    e41d:	90                   	nop

000000000000e41e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e41e:	55                   	push   %rbp
    e41f:	48 89 e5             	mov    %rsp,%rbp
    e422:	48 83 ec 10          	sub    $0x10,%rsp
    e426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e42e:	48 89 c7             	mov    %rax,%rdi
    e431:	e8 5a 05 00 00       	call   e990 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    e436:	c9                   	leave
    e437:	c3                   	ret

000000000000e438 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e438:	55                   	push   %rbp
    e439:	48 89 e5             	mov    %rsp,%rbp
    e43c:	48 83 ec 10          	sub    $0x10,%rsp
    e440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e444:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e448:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e450:	ba 00 00 00 00       	mov    $0x0,%edx
    e455:	48 89 ce             	mov    %rcx,%rsi
    e458:	48 89 c7             	mov    %rax,%rdi
    e45b:	e8 44 05 00 00       	call   e9a4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    e460:	c9                   	leave
    e461:	c3                   	ret

000000000000e462 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e462:	55                   	push   %rbp
    e463:	48 89 e5             	mov    %rsp,%rbp
    e466:	48 83 ec 20          	sub    $0x20,%rsp
    e46a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e46e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e472:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e476:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e47a:	48 89 d0             	mov    %rdx,%rax
    e47d:	48 01 c0             	add    %rax,%rax
    e480:	48 01 d0             	add    %rdx,%rax
    e483:	48 c1 e0 03          	shl    $0x3,%rax
    e487:	48 89 c2             	mov    %rax,%rdx
    e48a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e48e:	48 89 d6             	mov    %rdx,%rsi
    e491:	48 89 c7             	mov    %rax,%rdi
    e494:	e8 37 4e ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e499:	c9                   	leave
    e49a:	c3                   	ret

000000000000e49b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e49b:	55                   	push   %rbp
    e49c:	48 89 e5             	mov    %rsp,%rbp
    e49f:	48 83 ec 20          	sub    $0x20,%rsp
    e4a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e4a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e4ab:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e4b0:	74 40                	je     e4f2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e4b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4b6:	48 89 c7             	mov    %rax,%rdi
    e4b9:	e8 50 05 00 00       	call   ea0e <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    e4be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e4c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4c6:	48 89 c7             	mov    %rax,%rdi
    e4c9:	e8 4e 05 00 00       	call   ea1c <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e4ce:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e4d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4d7:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e4db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e4df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4e3:	48 89 ce             	mov    %rcx,%rsi
    e4e6:	48 89 c7             	mov    %rax,%rdi
    e4e9:	e8 77 05 00 00       	call   ea65 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    e4ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e4f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e4f6:	c9                   	leave
    e4f7:	c3                   	ret

000000000000e4f8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    e4f8:	55                   	push   %rbp
    e4f9:	48 89 e5             	mov    %rsp,%rbp
    e4fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e500:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e504:	90                   	nop
    e505:	5d                   	pop    %rbp
    e506:	c3                   	ret
    e507:	90                   	nop

000000000000e508 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e508:	55                   	push   %rbp
    e509:	48 89 e5             	mov    %rsp,%rbp
    e50c:	48 83 ec 20          	sub    $0x20,%rsp
    e510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e514:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e518:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e51c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e520:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e527:	00 
    e528:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e52c:	48 89 d6             	mov    %rdx,%rsi
    e52f:	48 89 c7             	mov    %rax,%rdi
    e532:	e8 99 4d ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e537:	c9                   	leave
    e538:	c3                   	ret

000000000000e539 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e539:	55                   	push   %rbp
    e53a:	48 89 e5             	mov    %rsp,%rbp
    e53d:	48 83 ec 10          	sub    $0x10,%rsp
    e541:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e549:	48 89 c7             	mov    %rax,%rdi
    e54c:	e8 59 05 00 00       	call   eaaa <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    e551:	c9                   	leave
    e552:	c3                   	ret
    e553:	90                   	nop

000000000000e554 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e554:	55                   	push   %rbp
    e555:	48 89 e5             	mov    %rsp,%rbp
    e558:	48 83 ec 20          	sub    $0x20,%rsp
    e55c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e560:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e564:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e56c:	48 89 c7             	mov    %rax,%rdi
    e56f:	e8 50 05 00 00       	call   eac4 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    e574:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e578:	0f 92 c0             	setb   %al
    e57b:	0f b6 c0             	movzbl %al,%eax
    e57e:	48 85 c0             	test   %rax,%rax
    e581:	0f 95 c0             	setne  %al
    e584:	84 c0                	test   %al,%al
    e586:	74 1a                	je     e5a2 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e588:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e58f:	ff ff 1f 
    e592:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e596:	73 05                	jae    e59d <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e598:	e8 73 4c ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e59d:	e8 ee 4a ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e5a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5a6:	48 c1 e0 03          	shl    $0x3,%rax
    e5aa:	48 89 c7             	mov    %rax,%rdi
    e5ad:	e8 0e 4d ff ff       	call   32c0 <_Znwm@plt>
    e5b2:	90                   	nop
      }
    e5b3:	c9                   	leave
    e5b4:	c3                   	ret

000000000000e5b5 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    e5b5:	55                   	push   %rbp
    e5b6:	48 89 e5             	mov    %rsp,%rbp
    e5b9:	48 83 ec 20          	sub    $0x20,%rsp
    e5bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e5c5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    e5c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e5cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e5d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5d5:	48 89 ce             	mov    %rcx,%rsi
    e5d8:	48 89 c7             	mov    %rax,%rdi
    e5db:	e8 f8 04 00 00       	call   ead8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    e5e0:	c9                   	leave
    e5e1:	c3                   	ret

000000000000e5e2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e5e2:	55                   	push   %rbp
    e5e3:	48 89 e5             	mov    %rsp,%rbp
    e5e6:	48 83 ec 10          	sub    $0x10,%rsp
    e5ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5f2:	48 89 c7             	mov    %rax,%rdi
    e5f5:	e8 2a 05 00 00       	call   eb24 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    e5fa:	c9                   	leave
    e5fb:	c3                   	ret

000000000000e5fc <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e5fc:	55                   	push   %rbp
    e5fd:	48 89 e5             	mov    %rsp,%rbp
    e600:	48 83 ec 10          	sub    $0x10,%rsp
    e604:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e608:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e60c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e614:	ba 00 00 00 00       	mov    $0x0,%edx
    e619:	48 89 ce             	mov    %rcx,%rsi
    e61c:	48 89 c7             	mov    %rax,%rdi
    e61f:	e8 14 05 00 00       	call   eb38 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    e624:	c9                   	leave
    e625:	c3                   	ret

000000000000e626 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e626:	55                   	push   %rbp
    e627:	48 89 e5             	mov    %rsp,%rbp
    e62a:	48 83 ec 20          	sub    $0x20,%rsp
    e62e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e632:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e636:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e63a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e63e:	48 89 d0             	mov    %rdx,%rax
    e641:	48 c1 e0 06          	shl    $0x6,%rax
    e645:	48 01 d0             	add    %rdx,%rax
    e648:	48 c1 e0 02          	shl    $0x2,%rax
    e64c:	48 89 c2             	mov    %rax,%rdx
    e64f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e653:	48 89 d6             	mov    %rdx,%rsi
    e656:	48 89 c7             	mov    %rax,%rdi
    e659:	e8 72 4c ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e65e:	c9                   	leave
    e65f:	c3                   	ret

000000000000e660 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e660:	55                   	push   %rbp
    e661:	48 89 e5             	mov    %rsp,%rbp
    e664:	48 83 ec 20          	sub    $0x20,%rsp
    e668:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e66c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e670:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e675:	74 43                	je     e6ba <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    e677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e67b:	48 89 c7             	mov    %rax,%rdi
    e67e:	e8 20 05 00 00       	call   eba3 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    e683:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e687:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e68b:	48 89 c7             	mov    %rax,%rdi
    e68e:	e8 1e 05 00 00       	call   ebb1 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e693:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    e69a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    e69b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e69f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e6a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e6a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6ab:	48 89 ce             	mov    %rcx,%rsi
    e6ae:	48 89 c7             	mov    %rax,%rdi
    e6b1:	e8 55 05 00 00       	call   ec0b <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    e6b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e6ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e6be:	c9                   	leave
    e6bf:	c3                   	ret

000000000000e6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    e6c0:	55                   	push   %rbp
    e6c1:	48 89 e5             	mov    %rsp,%rbp
    e6c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e6c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6cc:	5d                   	pop    %rbp
    e6cd:	c3                   	ret

000000000000e6ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    e6ce:	55                   	push   %rbp
    e6cf:	48 89 e5             	mov    %rsp,%rbp
    e6d2:	48 83 ec 10          	sub    $0x10,%rsp
    e6d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    e6de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e6e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6e6:	48 89 d6             	mov    %rdx,%rsi
    e6e9:	48 89 c7             	mov    %rax,%rdi
    e6ec:	e8 7b 05 00 00       	call   ec6c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    e6f1:	90                   	nop
    e6f2:	c9                   	leave
    e6f3:	c3                   	ret

000000000000e6f4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    e6f4:	55                   	push   %rbp
    e6f5:	48 89 e5             	mov    %rsp,%rbp
    e6f8:	48 83 ec 20          	sub    $0x20,%rsp
    e6fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e704:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    e708:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e70c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e714:	48 89 ce             	mov    %rcx,%rsi
    e717:	48 89 c7             	mov    %rax,%rdi
    e71a:	e8 6d 05 00 00       	call   ec8c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    e71f:	90                   	nop
    e720:	c9                   	leave
    e721:	c3                   	ret

000000000000e722 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    e722:	55                   	push   %rbp
    e723:	48 89 e5             	mov    %rsp,%rbp
    e726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    e72a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e72e:	5d                   	pop    %rbp
    e72f:	c3                   	ret

000000000000e730 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    e730:	55                   	push   %rbp
    e731:	48 89 e5             	mov    %rsp,%rbp
    e734:	48 83 ec 10          	sub    $0x10,%rsp
    e738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e73c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    e740:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e744:	48 89 c7             	mov    %rax,%rdi
    e747:	e8 b4 ec ff ff       	call   d400 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    e74c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e750:	48 89 02             	mov    %rax,(%rdx)
    e753:	90                   	nop
    e754:	c9                   	leave
    e755:	c3                   	ret

000000000000e756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    e756:	55                   	push   %rbp
    e757:	48 89 e5             	mov    %rsp,%rbp
    e75a:	48 83 ec 10          	sub    $0x10,%rsp
    e75e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    e762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e766:	48 89 c7             	mov    %rax,%rdi
    e769:	e8 52 ff ff ff       	call   e6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e76e:	be 01 00 00 00       	mov    $0x1,%esi
    e773:	48 89 c7             	mov    %rax,%rdi
    e776:	e8 4b 05 00 00       	call   ecc6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    e77b:	c9                   	leave
    e77c:	c3                   	ret
    e77d:	90                   	nop

000000000000e77e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    e77e:	55                   	push   %rbp
    e77f:	48 89 e5             	mov    %rsp,%rbp
    e782:	41 56                	push   %r14
    e784:	41 55                	push   %r13
    e786:	41 54                	push   %r12
    e788:	53                   	push   %rbx
    e789:	48 83 ec 30          	sub    $0x30,%rsp
    e78d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e791:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e795:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e799:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    e79d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    e7a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e7a5:	48 89 c6             	mov    %rax,%rsi
    e7a8:	bf 48 00 00 00       	mov    $0x48,%edi
    e7ad:	e8 c7 50 ff ff       	call   3879 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    e7b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e7b6:	48 89 c7             	mov    %rax,%rdi
    e7b9:	e8 49 93 ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    e7be:	49 89 c6             	mov    %rax,%r14
    e7c1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e7c5:	48 89 c7             	mov    %rax,%rdi
    e7c8:	e8 74 ec ff ff       	call   d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    e7cd:	49 89 c5             	mov    %rax,%r13
    e7d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e7d4:	48 89 c7             	mov    %rax,%rdi
    e7d7:	e8 0f 93 ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    e7dc:	49 89 c4             	mov    %rax,%r12
    e7df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e7e3:	48 89 c7             	mov    %rax,%rdi
    e7e6:	e8 cf eb ff ff       	call   d3ba <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e7eb:	48 89 c3             	mov    %rax,%rbx
    e7ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e7f2:	48 89 c7             	mov    %rax,%rdi
    e7f5:	e8 c6 fe ff ff       	call   e6c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e7fa:	4d 89 f0             	mov    %r14,%r8
    e7fd:	4c 89 e9             	mov    %r13,%rcx
    e800:	4c 89 e2             	mov    %r12,%rdx
    e803:	48 89 de             	mov    %rbx,%rsi
    e806:	48 89 c7             	mov    %rax,%rdi
    e809:	e8 e2 04 00 00       	call   ecf0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    e80e:	eb 33                	jmp    e843 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    e810:	48 89 c7             	mov    %rax,%rdi
    e813:	e8 b8 48 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    e818:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e81c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e820:	48 89 d6             	mov    %rdx,%rsi
    e823:	48 89 c7             	mov    %rax,%rdi
    e826:	e8 47 f6 ff ff       	call   de72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    e82b:	e8 e0 4b ff ff       	call   3410 <__cxa_rethrow@plt>
	  __catch(...)
    e830:	48 89 c3             	mov    %rax,%rbx
    e833:	e8 48 4c ff ff       	call   3480 <__cxa_end_catch@plt>
    e838:	48 89 d8             	mov    %rbx,%rax
    e83b:	48 89 c7             	mov    %rax,%rdi
    e83e:	e8 8d 4c ff ff       	call   34d0 <_Unwind_Resume@plt>
	}
    e843:	48 83 c4 30          	add    $0x30,%rsp
    e847:	5b                   	pop    %rbx
    e848:	41 5c                	pop    %r12
    e84a:	41 5d                	pop    %r13
    e84c:	41 5e                	pop    %r14
    e84e:	5d                   	pop    %rbp
    e84f:	c3                   	ret

000000000000e850 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e850:	55                   	push   %rbp
    e851:	48 89 e5             	mov    %rsp,%rbp
    e854:	48 83 ec 20          	sub    $0x20,%rsp
    e858:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    e85c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e860:	48 8b 50 18          	mov    0x18(%rax),%rdx
    e864:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e868:	48 89 d6             	mov    %rdx,%rsi
    e86b:	48 89 c7             	mov    %rax,%rdi
    e86e:	e8 51 f1 ff ff       	call   d9c4 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e877:	c9                   	leave
    e878:	c3                   	ret
    e879:	90                   	nop

000000000000e87a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    e87a:	55                   	push   %rbp
    e87b:	48 89 e5             	mov    %rsp,%rbp
    e87e:	48 83 ec 20          	sub    $0x20,%rsp
    e882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e88a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    e88e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e892:	48 89 c7             	mov    %rax,%rdi
    e895:	e8 c2 04 00 00       	call   ed5c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    e89a:	48 8b 10             	mov    (%rax),%rdx
    e89d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8a1:	48 89 10             	mov    %rdx,(%rax)
    e8a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e8a8:	48 89 c7             	mov    %rax,%rdi
    e8ab:	e8 00 b3 ff ff       	call   9bb0 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    e8b0:	48 8b 10             	mov    (%rax),%rdx
    e8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8b7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e8bb:	90                   	nop
    e8bc:	c9                   	leave
    e8bd:	c3                   	ret

000000000000e8be <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    e8be:	55                   	push   %rbp
    e8bf:	48 89 e5             	mov    %rsp,%rbp
    e8c2:	48 83 ec 10          	sub    $0x10,%rsp
    e8c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    e8ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ce:	48 83 c0 20          	add    $0x20,%rax
    e8d2:	48 89 c7             	mov    %rax,%rdi
    e8d5:	e8 90 04 00 00       	call   ed6a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    e8da:	c9                   	leave
    e8db:	c3                   	ret

000000000000e8dc <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      operator()(const _Pair& __x) const
    e8dc:	55                   	push   %rbp
    e8dd:	48 89 e5             	mov    %rsp,%rbp
    e8e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    e8e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e8ec:	5d                   	pop    %rbp
    e8ed:	c3                   	ret

000000000000e8ee <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e8ee:	55                   	push   %rbp
    e8ef:	48 89 e5             	mov    %rsp,%rbp
    e8f2:	48 83 ec 10          	sub    $0x10,%rsp
    e8f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e8fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8fe:	48 89 c7             	mov    %rax,%rdi
    e901:	e8 7e 04 00 00       	call   ed84 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    e906:	c9                   	leave
    e907:	c3                   	ret

000000000000e908 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    e908:	55                   	push   %rbp
    e909:	48 89 e5             	mov    %rsp,%rbp
    e90c:	48 83 ec 10          	sub    $0x10,%rsp
    e910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e918:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e920:	ba 00 00 00 00       	mov    $0x0,%edx
    e925:	48 89 ce             	mov    %rcx,%rsi
    e928:	48 89 c7             	mov    %rax,%rdi
    e92b:	e8 68 04 00 00       	call   ed98 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    e930:	c9                   	leave
    e931:	c3                   	ret

000000000000e932 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e932:	55                   	push   %rbp
    e933:	48 89 e5             	mov    %rsp,%rbp
    e936:	48 83 ec 20          	sub    $0x20,%rsp
    e93a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e93e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e942:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e947:	74 40                	je     e989 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    e949:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e94d:	48 89 c7             	mov    %rax,%rdi
    e950:	e8 a4 04 00 00       	call   edf9 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    e955:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e95d:	48 89 c7             	mov    %rax,%rdi
    e960:	e8 a2 04 00 00       	call   ee07 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    e965:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e96a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e96e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e972:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e97a:	48 89 ce             	mov    %rcx,%rsi
    e97d:	48 89 c7             	mov    %rax,%rdi
    e980:	e8 a9 04 00 00       	call   ee2e <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    e985:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e98d:	c9                   	leave
    e98e:	c3                   	ret
    e98f:	90                   	nop

000000000000e990 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    e990:	55                   	push   %rbp
    e991:	48 89 e5             	mov    %rsp,%rbp
    e994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    e998:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    e99f:	55 55 05 
      }
    e9a2:	5d                   	pop    %rbp
    e9a3:	c3                   	ret

000000000000e9a4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e9a4:	55                   	push   %rbp
    e9a5:	48 89 e5             	mov    %rsp,%rbp
    e9a8:	48 83 ec 20          	sub    $0x20,%rsp
    e9ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e9b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e9b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9bc:	48 89 c7             	mov    %rax,%rdi
    e9bf:	e8 cc ff ff ff       	call   e990 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    e9c4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e9c8:	0f 92 c0             	setb   %al
    e9cb:	0f b6 c0             	movzbl %al,%eax
    e9ce:	48 85 c0             	test   %rax,%rax
    e9d1:	0f 95 c0             	setne  %al
    e9d4:	84 c0                	test   %al,%al
    e9d6:	74 1a                	je     e9f2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e9d8:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    e9df:	aa aa 0a 
    e9e2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e9e6:	73 05                	jae    e9ed <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e9e8:	e8 23 48 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e9ed:	e8 9e 46 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e9f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e9f6:	48 89 d0             	mov    %rdx,%rax
    e9f9:	48 01 c0             	add    %rax,%rax
    e9fc:	48 01 d0             	add    %rdx,%rax
    e9ff:	48 c1 e0 03          	shl    $0x3,%rax
    ea03:	48 89 c7             	mov    %rax,%rdi
    ea06:	e8 b5 48 ff ff       	call   32c0 <_Znwm@plt>
    ea0b:	90                   	nop
      }
    ea0c:	c9                   	leave
    ea0d:	c3                   	ret

000000000000ea0e <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ea0e:	55                   	push   %rbp
    ea0f:	48 89 e5             	mov    %rsp,%rbp
    ea12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ea16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea1a:	5d                   	pop    %rbp
    ea1b:	c3                   	ret

000000000000ea1c <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ea1c:	55                   	push   %rbp
    ea1d:	48 89 e5             	mov    %rsp,%rbp
    ea20:	48 83 ec 10          	sub    $0x10,%rsp
    ea24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ea28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea2c:	48 89 c6             	mov    %rax,%rsi
    ea2f:	bf 18 00 00 00       	mov    $0x18,%edi
    ea34:	e8 40 4e ff ff       	call   3879 <_ZnwmPv>
    ea39:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ea3f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    ea46:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    ea4d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    ea54:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    ea5b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    ea62:	90                   	nop
    ea63:	c9                   	leave
    ea64:	c3                   	ret

000000000000ea65 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ea65:	55                   	push   %rbp
    ea66:	48 89 e5             	mov    %rsp,%rbp
    ea69:	48 83 ec 20          	sub    $0x20,%rsp
    ea6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea71:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea75:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    ea79:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ea7d:	48 89 c7             	mov    %rax,%rdi
    ea80:	e8 ed 03 00 00       	call   ee72 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ea85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea89:	48 89 c7             	mov    %rax,%rdi
    ea8c:	e8 56 cf ff ff       	call   b9e7 <_ZSt17__size_to_integerm>
    ea91:	48 89 c1             	mov    %rax,%rcx
    ea94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ea9c:	48 89 ce             	mov    %rcx,%rsi
    ea9f:	48 89 c7             	mov    %rax,%rdi
    eaa2:	e8 d6 03 00 00       	call   ee7d <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    eaa7:	c9                   	leave
    eaa8:	c3                   	ret
    eaa9:	90                   	nop

000000000000eaaa <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    eaaa:	55                   	push   %rbp
    eaab:	48 89 e5             	mov    %rsp,%rbp
    eaae:	48 83 ec 10          	sub    $0x10,%rsp
    eab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    eab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaba:	48 89 c7             	mov    %rax,%rdi
    eabd:	e8 02 00 00 00       	call   eac4 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    eac2:	c9                   	leave
    eac3:	c3                   	ret

000000000000eac4 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    eac4:	55                   	push   %rbp
    eac5:	48 89 e5             	mov    %rsp,%rbp
    eac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    eacc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ead3:	ff ff 0f 
      }
    ead6:	5d                   	pop    %rbp
    ead7:	c3                   	ret

000000000000ead8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    ead8:	55                   	push   %rbp
    ead9:	48 89 e5             	mov    %rsp,%rbp
    eadc:	53                   	push   %rbx
    eadd:	48 83 ec 28          	sub    $0x28,%rsp
    eae1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eae5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eae9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    eaed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eaf1:	48 89 c7             	mov    %rax,%rdi
    eaf4:	e8 f1 03 00 00       	call   eeea <_ZSt12__miter_baseIPKPKcET_S4_>
    eaf9:	48 89 c3             	mov    %rax,%rbx
    eafc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb00:	48 89 c7             	mov    %rax,%rdi
    eb03:	e8 e2 03 00 00       	call   eeea <_ZSt12__miter_baseIPKPKcET_S4_>
    eb08:	48 89 c1             	mov    %rax,%rcx
    eb0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb0f:	48 89 c2             	mov    %rax,%rdx
    eb12:	48 89 de             	mov    %rbx,%rsi
    eb15:	48 89 cf             	mov    %rcx,%rdi
    eb18:	e8 db 03 00 00       	call   eef8 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    eb1d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    eb21:	c9                   	leave
    eb22:	c3                   	ret
    eb23:	90                   	nop

000000000000eb24 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    eb24:	55                   	push   %rbp
    eb25:	48 89 e5             	mov    %rsp,%rbp
    eb28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    eb2c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    eb33:	07 7e 00 
      }
    eb36:	5d                   	pop    %rbp
    eb37:	c3                   	ret

000000000000eb38 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    eb38:	55                   	push   %rbp
    eb39:	48 89 e5             	mov    %rsp,%rbp
    eb3c:	48 83 ec 20          	sub    $0x20,%rsp
    eb40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    eb4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb50:	48 89 c7             	mov    %rax,%rdi
    eb53:	e8 cc ff ff ff       	call   eb24 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    eb58:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    eb5c:	0f 92 c0             	setb   %al
    eb5f:	0f b6 c0             	movzbl %al,%eax
    eb62:	48 85 c0             	test   %rax,%rax
    eb65:	0f 95 c0             	setne  %al
    eb68:	84 c0                	test   %al,%al
    eb6a:	74 1a                	je     eb86 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    eb6c:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    eb73:	0f fc 00 
    eb76:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    eb7a:	73 05                	jae    eb81 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    eb7c:	e8 8f 46 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    eb81:	e8 0a 45 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    eb86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eb8a:	48 89 d0             	mov    %rdx,%rax
    eb8d:	48 c1 e0 06          	shl    $0x6,%rax
    eb91:	48 01 d0             	add    %rdx,%rax
    eb94:	48 c1 e0 02          	shl    $0x2,%rax
    eb98:	48 89 c7             	mov    %rax,%rdi
    eb9b:	e8 20 47 ff ff       	call   32c0 <_Znwm@plt>
    eba0:	90                   	nop
      }
    eba1:	c9                   	leave
    eba2:	c3                   	ret

000000000000eba3 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    eba3:	55                   	push   %rbp
    eba4:	48 89 e5             	mov    %rsp,%rbp
    eba7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ebab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebaf:	5d                   	pop    %rbp
    ebb0:	c3                   	ret

000000000000ebb1 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ebb1:	55                   	push   %rbp
    ebb2:	48 89 e5             	mov    %rsp,%rbp
    ebb5:	48 83 ec 10          	sub    $0x10,%rsp
    ebb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ebbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebc1:	48 89 c6             	mov    %rax,%rsi
    ebc4:	bf 04 01 00 00       	mov    $0x104,%edi
    ebc9:	e8 ab 4c ff ff       	call   3879 <_ZnwmPv>
    ebce:	b9 04 01 00 00       	mov    $0x104,%ecx
    ebd3:	be 00 00 00 00       	mov    $0x0,%esi
    ebd8:	48 89 30             	mov    %rsi,(%rax)
    ebdb:	89 ca                	mov    %ecx,%edx
    ebdd:	48 01 c2             	add    %rax,%rdx
    ebe0:	48 83 c2 08          	add    $0x8,%rdx
    ebe4:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    ebe8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ebec:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ebf0:	48 29 d0             	sub    %rdx,%rax
    ebf3:	01 c1                	add    %eax,%ecx
    ebf5:	83 e1 f8             	and    $0xfffffff8,%ecx
    ebf8:	89 c8                	mov    %ecx,%eax
    ebfa:	c1 e8 03             	shr    $0x3,%eax
    ebfd:	89 c1                	mov    %eax,%ecx
    ebff:	48 89 d7             	mov    %rdx,%rdi
    ec02:	48 89 f0             	mov    %rsi,%rax
    ec05:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    ec08:	90                   	nop
    ec09:	c9                   	leave
    ec0a:	c3                   	ret

000000000000ec0b <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ec0b:	55                   	push   %rbp
    ec0c:	48 89 e5             	mov    %rsp,%rbp
    ec0f:	48 83 ec 20          	sub    $0x20,%rsp
    ec13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ec1f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ec23:	48 89 c7             	mov    %rax,%rdi
    ec26:	e8 37 03 00 00       	call   ef62 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ec2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec2f:	48 89 c7             	mov    %rax,%rdi
    ec32:	e8 b0 cd ff ff       	call   b9e7 <_ZSt17__size_to_integerm>
    ec37:	48 89 c1             	mov    %rax,%rcx
    ec3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ec42:	48 89 ce             	mov    %rcx,%rsi
    ec45:	48 89 c7             	mov    %rax,%rdi
    ec48:	e8 20 03 00 00       	call   ef6d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ec4d:	c9                   	leave
    ec4e:	c3                   	ret
    ec4f:	90                   	nop

000000000000ec50 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    ec50:	55                   	push   %rbp
    ec51:	48 89 e5             	mov    %rsp,%rbp
    ec54:	48 83 ec 10          	sub    $0x10,%rsp
    ec58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec60:	48 89 c7             	mov    %rax,%rdi
    ec63:	e8 f8 44 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ec68:	90                   	nop
    ec69:	c9                   	leave
    ec6a:	c3                   	ret
    ec6b:	90                   	nop

000000000000ec6c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    ec6c:	55                   	push   %rbp
    ec6d:	48 89 e5             	mov    %rsp,%rbp
    ec70:	48 83 ec 10          	sub    $0x10,%rsp
    ec74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    ec7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec80:	48 89 c7             	mov    %rax,%rdi
    ec83:	e8 c8 ff ff ff       	call   ec50 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    ec88:	90                   	nop
    ec89:	c9                   	leave
    ec8a:	c3                   	ret
    ec8b:	90                   	nop

000000000000ec8c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ec8c:	55                   	push   %rbp
    ec8d:	48 89 e5             	mov    %rsp,%rbp
    ec90:	48 83 ec 20          	sub    $0x20,%rsp
    ec94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    eca0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eca4:	48 89 d0             	mov    %rdx,%rax
    eca7:	48 c1 e0 03          	shl    $0x3,%rax
    ecab:	48 01 d0             	add    %rdx,%rax
    ecae:	48 c1 e0 03          	shl    $0x3,%rax
    ecb2:	48 89 c2             	mov    %rax,%rdx
    ecb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ecb9:	48 89 d6             	mov    %rdx,%rsi
    ecbc:	48 89 c7             	mov    %rax,%rdi
    ecbf:	e8 0c 46 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    ecc4:	c9                   	leave
    ecc5:	c3                   	ret

000000000000ecc6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    ecc6:	55                   	push   %rbp
    ecc7:	48 89 e5             	mov    %rsp,%rbp
    ecca:	48 83 ec 10          	sub    $0x10,%rsp
    ecce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ecd6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ecda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecde:	ba 00 00 00 00       	mov    $0x0,%edx
    ece3:	48 89 ce             	mov    %rcx,%rsi
    ece6:	48 89 c7             	mov    %rax,%rdi
    ece9:	e8 ee 02 00 00       	call   efdc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    ecee:	c9                   	leave
    ecef:	c3                   	ret

000000000000ecf0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    ecf0:	55                   	push   %rbp
    ecf1:	48 89 e5             	mov    %rsp,%rbp
    ecf4:	41 54                	push   %r12
    ecf6:	53                   	push   %rbx
    ecf7:	48 83 ec 30          	sub    $0x30,%rsp
    ecfb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ecff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ed03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ed07:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    ed0b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    ed0f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ed13:	48 89 c7             	mov    %rax,%rdi
    ed16:	e8 ec 8d ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    ed1b:	49 89 c4             	mov    %rax,%r12
    ed1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ed22:	48 89 c7             	mov    %rax,%rdi
    ed25:	e8 17 e7 ff ff       	call   d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ed2a:	48 89 c3             	mov    %rax,%rbx
    ed2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed31:	48 89 c7             	mov    %rax,%rdi
    ed34:	e8 b2 8d ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ed39:	48 89 c2             	mov    %rax,%rdx
    ed3c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    ed40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed44:	4d 89 e0             	mov    %r12,%r8
    ed47:	48 89 d9             	mov    %rbx,%rcx
    ed4a:	48 89 c7             	mov    %rax,%rdi
    ed4d:	e8 1c 03 00 00       	call   f06e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    ed52:	90                   	nop
    ed53:	48 83 c4 30          	add    $0x30,%rsp
    ed57:	5b                   	pop    %rbx
    ed58:	41 5c                	pop    %r12
    ed5a:	5d                   	pop    %rbp
    ed5b:	c3                   	ret

000000000000ed5c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ed5c:	55                   	push   %rbp
    ed5d:	48 89 e5             	mov    %rsp,%rbp
    ed60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ed64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed68:	5d                   	pop    %rbp
    ed69:	c3                   	ret

000000000000ed6a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() const noexcept
    ed6a:	55                   	push   %rbp
    ed6b:	48 89 e5             	mov    %rsp,%rbp
    ed6e:	48 83 ec 10          	sub    $0x10,%rsp
    ed72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    ed76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed7a:	48 89 c7             	mov    %rax,%rdi
    ed7d:	e8 9c 03 00 00       	call   f11e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    ed82:	c9                   	leave
    ed83:	c3                   	ret

000000000000ed84 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ed84:	55                   	push   %rbp
    ed85:	48 89 e5             	mov    %rsp,%rbp
    ed88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ed8c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ed93:	ff ff 0f 
      }
    ed96:	5d                   	pop    %rbp
    ed97:	c3                   	ret

000000000000ed98 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ed98:	55                   	push   %rbp
    ed99:	48 89 e5             	mov    %rsp,%rbp
    ed9c:	48 83 ec 20          	sub    $0x20,%rsp
    eda0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eda4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eda8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    edac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edb0:	48 89 c7             	mov    %rax,%rdi
    edb3:	e8 cc ff ff ff       	call   ed84 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    edb8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    edbc:	0f 92 c0             	setb   %al
    edbf:	0f b6 c0             	movzbl %al,%eax
    edc2:	48 85 c0             	test   %rax,%rax
    edc5:	0f 95 c0             	setne  %al
    edc8:	84 c0                	test   %al,%al
    edca:	74 1a                	je     ede6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    edcc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    edd3:	ff ff 1f 
    edd6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    edda:	73 05                	jae    ede1 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    eddc:	e8 2f 44 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ede1:	e8 aa 42 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ede6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edea:	48 c1 e0 03          	shl    $0x3,%rax
    edee:	48 89 c7             	mov    %rax,%rdi
    edf1:	e8 ca 44 ff ff       	call   32c0 <_Znwm@plt>
    edf6:	90                   	nop
      }
    edf7:	c9                   	leave
    edf8:	c3                   	ret

000000000000edf9 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    edf9:	55                   	push   %rbp
    edfa:	48 89 e5             	mov    %rsp,%rbp
    edfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ee01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee05:	5d                   	pop    %rbp
    ee06:	c3                   	ret

000000000000ee07 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ee07:	55                   	push   %rbp
    ee08:	48 89 e5             	mov    %rsp,%rbp
    ee0b:	48 83 ec 10          	sub    $0x10,%rsp
    ee0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ee13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee17:	48 89 c6             	mov    %rax,%rsi
    ee1a:	bf 08 00 00 00       	mov    $0x8,%edi
    ee1f:	e8 55 4a ff ff       	call   3879 <_ZnwmPv>
    ee24:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    ee2b:	90                   	nop
    ee2c:	c9                   	leave
    ee2d:	c3                   	ret

000000000000ee2e <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ee2e:	55                   	push   %rbp
    ee2f:	48 89 e5             	mov    %rsp,%rbp
    ee32:	48 83 ec 20          	sub    $0x20,%rsp
    ee36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ee42:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ee46:	48 89 c7             	mov    %rax,%rdi
    ee49:	e8 de 02 00 00       	call   f12c <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ee4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee52:	48 89 c7             	mov    %rax,%rdi
    ee55:	e8 8d cb ff ff       	call   b9e7 <_ZSt17__size_to_integerm>
    ee5a:	48 89 c1             	mov    %rax,%rcx
    ee5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee65:	48 89 ce             	mov    %rcx,%rsi
    ee68:	48 89 c7             	mov    %rax,%rdi
    ee6b:	e8 c7 02 00 00       	call   f137 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    ee70:	c9                   	leave
    ee71:	c3                   	ret

000000000000ee72 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ee72:	55                   	push   %rbp
    ee73:	48 89 e5             	mov    %rsp,%rbp
    ee76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ee7a:	90                   	nop
    ee7b:	5d                   	pop    %rbp
    ee7c:	c3                   	ret

000000000000ee7d <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ee7d:	55                   	push   %rbp
    ee7e:	48 89 e5             	mov    %rsp,%rbp
    ee81:	48 83 ec 20          	sub    $0x20,%rsp
    ee85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee8d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ee91:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ee96:	75 06                	jne    ee9e <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ee98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee9c:	eb 4a                	jmp    eee8 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    ee9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eea2:	48 89 d0             	mov    %rdx,%rax
    eea5:	48 01 c0             	add    %rax,%rax
    eea8:	48 01 d0             	add    %rdx,%rax
    eeab:	48 c1 e0 03          	shl    $0x3,%rax
    eeaf:	48 89 c2             	mov    %rax,%rdx
    eeb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeb6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    eeba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eec2:	48 89 ce             	mov    %rcx,%rsi
    eec5:	48 89 c7             	mov    %rax,%rdi
    eec8:	e8 c7 02 00 00       	call   f194 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    eecd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eed1:	48 89 d0             	mov    %rdx,%rax
    eed4:	48 01 c0             	add    %rax,%rax
    eed7:	48 01 d0             	add    %rdx,%rax
    eeda:	48 c1 e0 03          	shl    $0x3,%rax
    eede:	48 89 c2             	mov    %rax,%rdx
    eee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eee5:	48 01 d0             	add    %rdx,%rax
    }
    eee8:	c9                   	leave
    eee9:	c3                   	ret

000000000000eeea <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
    eeea:	55                   	push   %rbp
    eeeb:	48 89 e5             	mov    %rsp,%rbp
    eeee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    eef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eef6:	5d                   	pop    %rbp
    eef7:	c3                   	ret

000000000000eef8 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    eef8:	55                   	push   %rbp
    eef9:	48 89 e5             	mov    %rsp,%rbp
    eefc:	41 54                	push   %r12
    eefe:	53                   	push   %rbx
    eeff:	48 83 ec 20          	sub    $0x20,%rsp
    ef03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ef07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ef0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    ef0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef13:	48 89 c7             	mov    %rax,%rdi
    ef16:	e8 b5 02 00 00       	call   f1d0 <_ZSt12__niter_baseIPPKcET_S3_>
    ef1b:	49 89 c4             	mov    %rax,%r12
    ef1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ef22:	48 89 c7             	mov    %rax,%rdi
    ef25:	e8 98 02 00 00       	call   f1c2 <_ZSt12__niter_baseIPKPKcET_S4_>
    ef2a:	48 89 c3             	mov    %rax,%rbx
    ef2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef31:	48 89 c7             	mov    %rax,%rdi
    ef34:	e8 89 02 00 00       	call   f1c2 <_ZSt12__niter_baseIPKPKcET_S4_>
    ef39:	4c 89 e2             	mov    %r12,%rdx
    ef3c:	48 89 de             	mov    %rbx,%rsi
    ef3f:	48 89 c7             	mov    %rax,%rdi
    ef42:	e8 97 02 00 00       	call   f1de <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    ef47:	48 89 c2             	mov    %rax,%rdx
    ef4a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ef4e:	48 89 d6             	mov    %rdx,%rsi
    ef51:	48 89 c7             	mov    %rax,%rdi
    ef54:	e8 b2 02 00 00       	call   f20b <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    ef59:	48 83 c4 20          	add    $0x20,%rsp
    ef5d:	5b                   	pop    %rbx
    ef5e:	41 5c                	pop    %r12
    ef60:	5d                   	pop    %rbp
    ef61:	c3                   	ret

000000000000ef62 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ef62:	55                   	push   %rbp
    ef63:	48 89 e5             	mov    %rsp,%rbp
    ef66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ef6a:	90                   	nop
    ef6b:	5d                   	pop    %rbp
    ef6c:	c3                   	ret

000000000000ef6d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ef6d:	55                   	push   %rbp
    ef6e:	48 89 e5             	mov    %rsp,%rbp
    ef71:	48 83 ec 20          	sub    $0x20,%rsp
    ef75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ef81:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ef86:	75 06                	jne    ef8e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ef88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef8c:	eb 4c                	jmp    efda <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    ef8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef92:	48 89 d0             	mov    %rdx,%rax
    ef95:	48 c1 e0 06          	shl    $0x6,%rax
    ef99:	48 01 d0             	add    %rdx,%rax
    ef9c:	48 c1 e0 02          	shl    $0x2,%rax
    efa0:	48 89 c2             	mov    %rax,%rdx
    efa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efa7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    efab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    efaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efb3:	48 89 ce             	mov    %rcx,%rsi
    efb6:	48 89 c7             	mov    %rax,%rdi
    efb9:	e8 5f 02 00 00       	call   f21d <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    efbe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    efc2:	48 89 d0             	mov    %rdx,%rax
    efc5:	48 c1 e0 06          	shl    $0x6,%rax
    efc9:	48 01 d0             	add    %rdx,%rax
    efcc:	48 c1 e0 02          	shl    $0x2,%rax
    efd0:	48 89 c2             	mov    %rax,%rdx
    efd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efd7:	48 01 d0             	add    %rdx,%rax
    }
    efda:	c9                   	leave
    efdb:	c3                   	ret

000000000000efdc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    efdc:	55                   	push   %rbp
    efdd:	48 89 e5             	mov    %rsp,%rbp
    efe0:	48 83 ec 20          	sub    $0x20,%rsp
    efe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efe8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    eff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eff4:	48 89 c7             	mov    %rax,%rdi
    eff7:	e8 50 02 00 00       	call   f24c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    effc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f000:	0f 92 c0             	setb   %al
    f003:	0f b6 c0             	movzbl %al,%eax
    f006:	48 85 c0             	test   %rax,%rax
    f009:	0f 95 c0             	setne  %al
    f00c:	84 c0                	test   %al,%al
    f00e:	74 1a                	je     f02a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f010:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    f017:	38 8e 03 
    f01a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f01e:	73 05                	jae    f025 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f020:	e8 eb 41 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f025:	e8 66 40 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f02a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f02e:	48 89 d0             	mov    %rdx,%rax
    f031:	48 c1 e0 03          	shl    $0x3,%rax
    f035:	48 01 d0             	add    %rdx,%rax
    f038:	48 c1 e0 03          	shl    $0x3,%rax
    f03c:	48 89 c7             	mov    %rax,%rdi
    f03f:	e8 7c 42 ff ff       	call   32c0 <_Znwm@plt>
    f044:	90                   	nop
      }
    f045:	c9                   	leave
    f046:	c3                   	ret
    f047:	90                   	nop

000000000000f048 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    f048:	55                   	push   %rbp
    f049:	48 89 e5             	mov    %rsp,%rbp
    f04c:	48 83 ec 10          	sub    $0x10,%rsp
    f050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f054:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f05c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f060:	48 89 d6             	mov    %rdx,%rsi
    f063:	48 89 c7             	mov    %rax,%rdi
    f066:	e8 f5 01 00 00       	call   f260 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f06b:	90                   	nop
    f06c:	c9                   	leave
    f06d:	c3                   	ret

000000000000f06e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    f06e:	55                   	push   %rbp
    f06f:	48 89 e5             	mov    %rsp,%rbp
    f072:	41 56                	push   %r14
    f074:	41 55                	push   %r13
    f076:	41 54                	push   %r12
    f078:	53                   	push   %rbx
    f079:	48 83 ec 40          	sub    $0x40,%rsp
    f07d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f081:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    f085:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    f089:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    f08d:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    f091:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    f095:	48 89 de             	mov    %rbx,%rsi
    f098:	bf 28 00 00 00       	mov    $0x28,%edi
    f09d:	e8 d7 47 ff ff       	call   3879 <_ZnwmPv>
    f0a2:	49 89 c4             	mov    %rax,%r12
    f0a5:	41 be 01 00 00 00    	mov    $0x1,%r14d
    f0ab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f0af:	48 89 c7             	mov    %rax,%rdi
    f0b2:	e8 50 8a ff ff       	call   7b07 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    f0b7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f0bb:	48 89 c7             	mov    %rax,%rdi
    f0be:	e8 7e e3 ff ff       	call   d441 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    f0c3:	48 89 c2             	mov    %rax,%rdx
    f0c6:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f0ca:	48 89 d6             	mov    %rdx,%rsi
    f0cd:	48 89 c7             	mov    %rax,%rdi
    f0d0:	e8 73 ff ff ff       	call   f048 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f0d5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0d9:	48 89 c7             	mov    %rax,%rdi
    f0dc:	e8 0a 8a ff ff       	call   7aeb <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    f0e1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f0e5:	48 89 c6             	mov    %rax,%rsi
    f0e8:	4c 89 e7             	mov    %r12,%rdi
    f0eb:	e8 8e 01 00 00       	call   f27e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    f0f0:	eb 1e                	jmp    f110 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    f0f2:	49 89 c5             	mov    %rax,%r13
    f0f5:	45 84 f6             	test   %r14b,%r14b
    f0f8:	74 0b                	je     f105 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    f0fa:	48 89 de             	mov    %rbx,%rsi
    f0fd:	4c 89 e7             	mov    %r12,%rdi
    f100:	e8 86 47 ff ff       	call   388b <_ZdlPvS_>
    f105:	4c 89 e8             	mov    %r13,%rax
    f108:	48 89 c7             	mov    %rax,%rdi
    f10b:	e8 c0 43 ff ff       	call   34d0 <_Unwind_Resume@plt>
    f110:	48 83 c4 40          	add    $0x40,%rsp
    f114:	5b                   	pop    %rbx
    f115:	41 5c                	pop    %r12
    f117:	41 5d                	pop    %r13
    f119:	41 5e                	pop    %r14
    f11b:	5d                   	pop    %rbp
    f11c:	c3                   	ret
    f11d:	90                   	nop

000000000000f11e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    f11e:	55                   	push   %rbp
    f11f:	48 89 e5             	mov    %rsp,%rbp
    f122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    f126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f12a:	5d                   	pop    %rbp
    f12b:	c3                   	ret

000000000000f12c <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    f12c:	55                   	push   %rbp
    f12d:	48 89 e5             	mov    %rsp,%rbp
    f130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    f134:	90                   	nop
    f135:	5d                   	pop    %rbp
    f136:	c3                   	ret

000000000000f137 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    f137:	55                   	push   %rbp
    f138:	48 89 e5             	mov    %rsp,%rbp
    f13b:	48 83 ec 20          	sub    $0x20,%rsp
    f13f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f143:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f147:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    f14b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f150:	75 06                	jne    f158 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    f152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f156:	eb 3a                	jmp    f192 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    f158:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f15c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f163:	00 
    f164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f168:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f16c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f174:	48 89 ce             	mov    %rcx,%rsi
    f177:	48 89 c7             	mov    %rax,%rdi
    f17a:	e8 29 01 00 00       	call   f2a8 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    f17f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f183:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f18a:	00 
    f18b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f18f:	48 01 d0             	add    %rdx,%rax
    }
    f192:	c9                   	leave
    f193:	c3                   	ret

000000000000f194 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f194:	55                   	push   %rbp
    f195:	48 89 e5             	mov    %rsp,%rbp
    f198:	48 83 ec 20          	sub    $0x20,%rsp
    f19c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f1a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f1ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1b4:	48 89 ce             	mov    %rcx,%rsi
    f1b7:	48 89 c7             	mov    %rax,%rdi
    f1ba:	e8 17 01 00 00       	call   f2d6 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    f1bf:	90                   	nop
    f1c0:	c9                   	leave
    f1c1:	c3                   	ret

000000000000f1c2 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    f1c2:	55                   	push   %rbp
    f1c3:	48 89 e5             	mov    %rsp,%rbp
    f1c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1ce:	5d                   	pop    %rbp
    f1cf:	c3                   	ret

000000000000f1d0 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    f1d0:	55                   	push   %rbp
    f1d1:	48 89 e5             	mov    %rsp,%rbp
    f1d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1dc:	5d                   	pop    %rbp
    f1dd:	c3                   	ret

000000000000f1de <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    f1de:	55                   	push   %rbp
    f1df:	48 89 e5             	mov    %rsp,%rbp
    f1e2:	48 83 ec 20          	sub    $0x20,%rsp
    f1e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    f1f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f1f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f1fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1fe:	48 89 ce             	mov    %rcx,%rsi
    f201:	48 89 c7             	mov    %rax,%rdi
    f204:	e8 10 01 00 00       	call   f319 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    f209:	c9                   	leave
    f20a:	c3                   	ret

000000000000f20b <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    f20b:	55                   	push   %rbp
    f20c:	48 89 e5             	mov    %rsp,%rbp
    f20f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f213:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    f217:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f21b:	5d                   	pop    %rbp
    f21c:	c3                   	ret

000000000000f21d <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f21d:	55                   	push   %rbp
    f21e:	48 89 e5             	mov    %rsp,%rbp
    f221:	48 83 ec 20          	sub    $0x20,%rsp
    f225:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f229:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f22d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f231:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f235:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f23d:	48 89 ce             	mov    %rcx,%rsi
    f240:	48 89 c7             	mov    %rax,%rdi
    f243:	e8 fe 00 00 00       	call   f346 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    f248:	90                   	nop
    f249:	c9                   	leave
    f24a:	c3                   	ret
    f24b:	90                   	nop

000000000000f24c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f24c:	55                   	push   %rbp
    f24d:	48 89 e5             	mov    %rsp,%rbp
    f250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f254:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    f25b:	1c c7 01 
      }
    f25e:	5d                   	pop    %rbp
    f25f:	c3                   	ret

000000000000f260 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    f260:	55                   	push   %rbp
    f261:	48 89 e5             	mov    %rsp,%rbp
    f264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    f26c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f274:	48 8b 12             	mov    (%rdx),%rdx
    f277:	48 89 10             	mov    %rdx,(%rax)
      { }
    f27a:	90                   	nop
    f27b:	5d                   	pop    %rbp
    f27c:	c3                   	ret
    f27d:	90                   	nop

000000000000f27e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
      pair<_T1, _T2>::
    f27e:	55                   	push   %rbp
    f27f:	48 89 e5             	mov    %rsp,%rbp
    f282:	48 83 ec 20          	sub    $0x20,%rsp
    f286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f28a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    f28e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    f292:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f29a:	48 89 ce             	mov    %rcx,%rsi
    f29d:	48 89 c7             	mov    %rax,%rdi
    f2a0:	e8 19 01 00 00       	call   f3be <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    f2a5:	90                   	nop
    f2a6:	c9                   	leave
    f2a7:	c3                   	ret

000000000000f2a8 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f2a8:	55                   	push   %rbp
    f2a9:	48 89 e5             	mov    %rsp,%rbp
    f2ac:	48 83 ec 20          	sub    $0x20,%rsp
    f2b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f2b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f2bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f2c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2c8:	48 89 ce             	mov    %rcx,%rsi
    f2cb:	48 89 c7             	mov    %rax,%rdi
    f2ce:	e8 35 01 00 00       	call   f408 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    f2d3:	90                   	nop
    f2d4:	c9                   	leave
    f2d5:	c3                   	ret

000000000000f2d6 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f2d6:	55                   	push   %rbp
    f2d7:	48 89 e5             	mov    %rsp,%rbp
    f2da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f2e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f2e6:	eb 23                	jmp    f30b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    f2e8:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f2ec:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    f2f0:	48 8b 06             	mov    (%rsi),%rax
    f2f3:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    f2f7:	48 89 01             	mov    %rax,(%rcx)
    f2fa:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    f2fe:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f302:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    f306:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    f30b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f30f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f313:	75 d3                	jne    f2e8 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f315:	90                   	nop
    f316:	90                   	nop
    f317:	5d                   	pop    %rbp
    f318:	c3                   	ret

000000000000f319 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    f319:	55                   	push   %rbp
    f31a:	48 89 e5             	mov    %rsp,%rbp
    f31d:	48 83 ec 20          	sub    $0x20,%rsp
    f321:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f325:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f329:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    f32d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f331:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f339:	48 89 ce             	mov    %rcx,%rsi
    f33c:	48 89 c7             	mov    %rax,%rdi
    f33f:	e8 ff 00 00 00       	call   f443 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    f344:	c9                   	leave
    f345:	c3                   	ret

000000000000f346 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f346:	55                   	push   %rbp
    f347:	48 89 e5             	mov    %rsp,%rbp
    f34a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f34e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f352:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f356:	eb 58                	jmp    f3b0 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    f358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f35c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f360:	b9 04 01 00 00       	mov    $0x104,%ecx
    f365:	48 8b 32             	mov    (%rdx),%rsi
    f368:	48 89 30             	mov    %rsi,(%rax)
    f36b:	89 ce                	mov    %ecx,%esi
    f36d:	48 01 c6             	add    %rax,%rsi
    f370:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    f374:	89 ce                	mov    %ecx,%esi
    f376:	48 01 d6             	add    %rdx,%rsi
    f379:	48 83 c6 08          	add    $0x8,%rsi
    f37d:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    f381:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    f385:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f389:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f38d:	48 29 f8             	sub    %rdi,%rax
    f390:	48 29 c2             	sub    %rax,%rdx
    f393:	01 c1                	add    %eax,%ecx
    f395:	83 e1 f8             	and    $0xfffffff8,%ecx
    f398:	89 c8                	mov    %ecx,%eax
    f39a:	c1 e8 03             	shr    $0x3,%eax
    f39d:	89 c0                	mov    %eax,%eax
    f39f:	48 89 d6             	mov    %rdx,%rsi
    f3a2:	48 89 c1             	mov    %rax,%rcx
    f3a5:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    f3a8:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    f3af:	00 
    f3b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3b4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f3b8:	75 9e                	jne    f358 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f3ba:	90                   	nop
    f3bb:	90                   	nop
    f3bc:	5d                   	pop    %rbp
    f3bd:	c3                   	ret

000000000000f3be <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:
      pair<_T1, _T2>::
    f3be:	55                   	push   %rbp
    f3bf:	48 89 e5             	mov    %rsp,%rbp
    f3c2:	53                   	push   %rbx
    f3c3:	48 83 ec 28          	sub    $0x28,%rsp
    f3c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f3cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f3cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    f3d3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f3d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f3db:	48 89 c7             	mov    %rax,%rdi
    f3de:	e8 bf 00 00 00       	call   f4a2 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    f3e3:	48 89 c7             	mov    %rax,%rdi
    f3e6:	e8 d1 00 00 00       	call   f4bc <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    f3eb:	48 89 c6             	mov    %rax,%rsi
    f3ee:	48 89 df             	mov    %rbx,%rdi
    f3f1:	e8 5a 3d ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    f3f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3fa:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    f401:	90                   	nop
    f402:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f406:	c9                   	leave
    f407:	c3                   	ret

000000000000f408 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f408:	55                   	push   %rbp
    f409:	48 89 e5             	mov    %rsp,%rbp
    f40c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f410:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f414:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    f418:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f41c:	48 8b 00             	mov    (%rax),%rax
    f41f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    f423:	eb 10                	jmp    f435 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    f425:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f429:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f42d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f430:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    f435:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f439:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f43d:	75 e6                	jne    f425 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    f43f:	90                   	nop
    f440:	90                   	nop
    f441:	5d                   	pop    %rbp
    f442:	c3                   	ret

000000000000f443 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    f443:	55                   	push   %rbp
    f444:	48 89 e5             	mov    %rsp,%rbp
    f447:	48 83 ec 30          	sub    $0x30,%rsp
    f44b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f44f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f453:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    f457:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f45b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f45f:	48 c1 f8 03          	sar    $0x3,%rax
    f463:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    f467:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f46c:	74 1f                	je     f48d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    f46e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f472:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f479:	00 
    f47a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f47e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f482:	48 89 ce             	mov    %rcx,%rsi
    f485:	48 89 c7             	mov    %rax,%rdi
    f488:	e8 e3 3f ff ff       	call   3470 <memmove@plt>
	  return __result + _Num;
    f48d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f491:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f498:	00 
    f499:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f49d:	48 01 d0             	add    %rdx,%rax
	}
    f4a0:	c9                   	leave
    f4a1:	c3                   	ret

000000000000f4a2 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    f4a2:	55                   	push   %rbp
    f4a3:	48 89 e5             	mov    %rsp,%rbp
    f4a6:	48 83 ec 10          	sub    $0x10,%rsp
    f4aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    f4ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4b2:	48 89 c7             	mov    %rax,%rdi
    f4b5:	e8 10 00 00 00       	call   f4ca <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    f4ba:	c9                   	leave
    f4bb:	c3                   	ret

000000000000f4bc <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f4bc:	55                   	push   %rbp
    f4bd:	48 89 e5             	mov    %rsp,%rbp
    f4c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f4c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4c8:	5d                   	pop    %rbp
    f4c9:	c3                   	ret

000000000000f4ca <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    f4ca:	55                   	push   %rbp
    f4cb:	48 89 e5             	mov    %rsp,%rbp
    f4ce:	48 83 ec 10          	sub    $0x10,%rsp
    f4d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    f4d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4da:	48 89 c7             	mov    %rax,%rdi
    f4dd:	e8 02 00 00 00       	call   f4e4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    f4e2:	c9                   	leave
    f4e3:	c3                   	ret

000000000000f4e4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    f4e4:	55                   	push   %rbp
    f4e5:	48 89 e5             	mov    %rsp,%rbp
    f4e8:	48 83 ec 10          	sub    $0x10,%rsp
    f4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4f4:	48 89 c7             	mov    %rax,%rdi
    f4f7:	e8 02 00 00 00       	call   f4fe <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    f4fc:	c9                   	leave
    f4fd:	c3                   	ret

000000000000f4fe <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    f4fe:	55                   	push   %rbp
    f4ff:	48 89 e5             	mov    %rsp,%rbp
    f502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f50a:	48 8b 00             	mov    (%rax),%rax
    f50d:	5d                   	pop    %rbp
    f50e:	c3                   	ret
    f50f:	90                   	nop

000000000000f510 <_ZN4neko7Context13createContextEv>:

namespace neko {

static std::atomic<u32> contextCount = 0;

void Context::createContext() {
    f510:	55                   	push   %rbp
    f511:	48 89 e5             	mov    %rsp,%rbp
    f514:	41 54                	push   %r12
    f516:	53                   	push   %rbx
  if (glfwInit() != GLFW_TRUE) {
    f517:	e8 54 3e ff ff       	call   3370 <glfwInit@plt>
    f51c:	83 f8 01             	cmp    $0x1,%eax
    f51f:	0f 95 c0             	setne  %al
    f522:	84 c0                	test   %al,%al
    f524:	74 3b                	je     f561 <_ZN4neko7Context13createContextEv+0x51>
    throw std::runtime_error(
        "A bug or configuration error in GLFW, the underlying operating "
        "system or its drivers, or a lack of required resources.");
    f526:	bf 10 00 00 00       	mov    $0x10,%edi
    f52b:	e8 e0 3b ff ff       	call   3110 <__cxa_allocate_exception@plt>
    f530:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f533:	48 8d 05 66 30 00 00 	lea    0x3066(%rip),%rax        # 125a0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    f53a:	48 89 c6             	mov    %rax,%rsi
    f53d:	48 89 df             	mov    %rbx,%rdi
    f540:	e8 6b 3b ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
        "system or its drivers, or a lack of required resources.");
    f545:	48 8b 05 6c 0a 01 00 	mov    0x10a6c(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f54c:	48 89 c2             	mov    %rax,%rdx
    f54f:	48 8d 05 ea 07 01 00 	lea    0x107ea(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f556:	48 89 c6             	mov    %rax,%rsi
    f559:	48 89 df             	mov    %rbx,%rdi
    f55c:	e8 4f 3f ff ff       	call   34b0 <__cxa_throw@plt>
  }
  ++contextCount;
    f561:	48 8d 05 90 0f 01 00 	lea    0x10f90(%rip),%rax        # 204f8 <_ZN4nekoL12contextCountE>
    f568:	48 89 c7             	mov    %rax,%rdi
    f56b:	e8 98 01 00 00       	call   f708 <_ZNSt13__atomic_baseIjEppEv>
}
    f570:	eb 16                	jmp    f588 <_ZN4neko7Context13createContextEv+0x78>
        "system or its drivers, or a lack of required resources.");
    f572:	49 89 c4             	mov    %rax,%r12
    f575:	48 89 df             	mov    %rbx,%rdi
    f578:	e8 33 3c ff ff       	call   31b0 <__cxa_free_exception@plt>
    f57d:	4c 89 e0             	mov    %r12,%rax
    f580:	48 89 c7             	mov    %rax,%rdi
    f583:	e8 48 3f ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    f588:	5b                   	pop    %rbx
    f589:	41 5c                	pop    %r12
    f58b:	5d                   	pop    %rbp
    f58c:	c3                   	ret
    f58d:	90                   	nop

000000000000f58e <_ZN4neko7Context17moveCreateContextEv>:

void Context::moveCreateContext() { ++contextCount; }
    f58e:	55                   	push   %rbp
    f58f:	48 89 e5             	mov    %rsp,%rbp
    f592:	48 8d 05 5f 0f 01 00 	lea    0x10f5f(%rip),%rax        # 204f8 <_ZN4nekoL12contextCountE>
    f599:	48 89 c7             	mov    %rax,%rdi
    f59c:	e8 67 01 00 00       	call   f708 <_ZNSt13__atomic_baseIjEppEv>
    f5a1:	90                   	nop
    f5a2:	5d                   	pop    %rbp
    f5a3:	c3                   	ret

000000000000f5a4 <_ZN4neko7Context14destroyContextEv>:

void Context::destroyContext() {
    f5a4:	55                   	push   %rbp
    f5a5:	48 89 e5             	mov    %rsp,%rbp
  --contextCount;
    f5a8:	48 8d 05 49 0f 01 00 	lea    0x10f49(%rip),%rax        # 204f8 <_ZN4nekoL12contextCountE>
    f5af:	48 89 c7             	mov    %rax,%rdi
    f5b2:	e8 6b 01 00 00       	call   f722 <_ZNSt13__atomic_baseIjEmmEv>
  if (contextCount == 0) {
    f5b7:	48 8d 05 3a 0f 01 00 	lea    0x10f3a(%rip),%rax        # 204f8 <_ZN4nekoL12contextCountE>
    f5be:	48 89 c7             	mov    %rax,%rdi
    f5c1:	e8 7c 01 00 00       	call   f742 <_ZNKSt13__atomic_baseIjEcvjEv>
    f5c6:	85 c0                	test   %eax,%eax
    f5c8:	0f 94 c0             	sete   %al
    f5cb:	84 c0                	test   %al,%al
    f5cd:	74 05                	je     f5d4 <_ZN4neko7Context14destroyContextEv+0x30>
    glfwTerminate();
    f5cf:	e8 1c 3d ff ff       	call   32f0 <glfwTerminate@plt>
  }
}
    f5d4:	90                   	nop
    f5d5:	5d                   	pop    %rbp
    f5d6:	c3                   	ret
    f5d7:	90                   	nop

000000000000f5d8 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
    f5d8:	55                   	push   %rbp
    f5d9:	48 89 e5             	mov    %rsp,%rbp
    f5dc:	48 83 ec 40          	sub    $0x40,%rsp
    f5e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f5e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f5e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f5ec:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    f5f0:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f5f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f5f8:	48 8d 15 19 30 00 00 	lea    0x3019(%rip),%rdx        # 12618 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x80>
    f5ff:	48 89 d6             	mov    %rdx,%rsi
    f602:	48 89 c7             	mov    %rax,%rdi
    f605:	e8 86 3c ff ff       	call   3290 <vkGetInstanceProcAddr@plt>
    f60a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    f60e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f613:	74 1c                	je     f631 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    f615:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f619:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    f61d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f621:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    f625:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f629:	48 89 c7             	mov    %rax,%rdi
    f62c:	41 ff d0             	call   *%r8
    f62f:	eb 05                	jmp    f636 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    f631:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    f636:	c9                   	leave
    f637:	c3                   	ret

000000000000f638 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
    f638:	55                   	push   %rbp
    f639:	48 89 e5             	mov    %rsp,%rbp
    f63c:	48 83 ec 30          	sub    $0x30,%rsp
    f640:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f644:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f648:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f64c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f650:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f654:	48 8d 15 dd 2f 00 00 	lea    0x2fdd(%rip),%rdx        # 12638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa0>
    f65b:	48 89 d6             	mov    %rdx,%rsi
    f65e:	48 89 c7             	mov    %rax,%rdi
    f661:	e8 2a 3c ff ff       	call   3290 <vkGetInstanceProcAddr@plt>
    f666:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    f66a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f66f:	74 19                	je     f68a <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    f671:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f675:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f679:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f67d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f681:	48 89 ce             	mov    %rcx,%rsi
    f684:	48 89 c7             	mov    %rax,%rdi
    f687:	41 ff d0             	call   *%r8
  }
}
    f68a:	90                   	nop
    f68b:	c9                   	leave
    f68c:	c3                   	ret

000000000000f68d <_Z41__static_initialization_and_destruction_0ii>:

    f68d:	55                   	push   %rbp
    f68e:	48 89 e5             	mov    %rsp,%rbp
    f691:	48 83 ec 10          	sub    $0x10,%rsp
    f695:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f698:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f69b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    f69f:	75 3b                	jne    f6dc <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f6a1:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    f6a8:	75 32                	jne    f6dc <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f6aa:	48 8d 05 43 0e 01 00 	lea    0x10e43(%rip),%rax        # 204f4 <_ZStL8__ioinit>
    f6b1:	48 89 c7             	mov    %rax,%rdi
    f6b4:	e8 87 3d ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
    f6b9:	48 8d 05 c8 0b 01 00 	lea    0x10bc8(%rip),%rax        # 20288 <__dso_handle>
    f6c0:	48 89 c2             	mov    %rax,%rdx
    f6c3:	48 8d 05 2a 0e 01 00 	lea    0x10e2a(%rip),%rax        # 204f4 <_ZStL8__ioinit>
    f6ca:	48 89 c6             	mov    %rax,%rsi
    f6cd:	48 8b 05 04 09 01 00 	mov    0x10904(%rip),%rax        # 1ffd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    f6d4:	48 89 c7             	mov    %rax,%rdi
    f6d7:	e8 84 3b ff ff       	call   3260 <__cxa_atexit@plt>
    f6dc:	90                   	nop
    f6dd:	c9                   	leave
    f6de:	c3                   	ret

000000000000f6df <_GLOBAL__sub_I__ZN4neko7Context13createContextEv>:
    f6df:	55                   	push   %rbp
    f6e0:	48 89 e5             	mov    %rsp,%rbp
    f6e3:	be ff ff 00 00       	mov    $0xffff,%esi
    f6e8:	bf 01 00 00 00       	mov    $0x1,%edi
    f6ed:	e8 9b ff ff ff       	call   f68d <_Z41__static_initialization_and_destruction_0ii>
    f6f2:	5d                   	pop    %rbp
    f6f3:	c3                   	ret

000000000000f6f4 <_ZStanSt12memory_orderSt23__memory_order_modifier>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
    f6f4:	55                   	push   %rbp
    f6f5:	48 89 e5             	mov    %rsp,%rbp
    f6f8:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f6fb:	89 75 f8             	mov    %esi,-0x8(%rbp)
    return memory_order(int(__m) & int(__mod));
    f6fe:	8b 55 fc             	mov    -0x4(%rbp),%edx
    f701:	8b 45 f8             	mov    -0x8(%rbp),%eax
    f704:	21 d0                	and    %edx,%eax
  }
    f706:	5d                   	pop    %rbp
    f707:	c3                   	ret

000000000000f708 <_ZNSt13__atomic_baseIjEppEv>:
      __int_type
      operator--(int) volatile noexcept
      { return fetch_sub(1); }

      __int_type
      operator++() noexcept
    f708:	55                   	push   %rbp
    f709:	48 89 e5             	mov    %rsp,%rbp
    f70c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    f710:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f714:	b8 01 00 00 00       	mov    $0x1,%eax
    f719:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    f71d:	83 c0 01             	add    $0x1,%eax
    f720:	5d                   	pop    %rbp
    f721:	c3                   	ret

000000000000f722 <_ZNSt13__atomic_baseIjEmmEv>:
      __int_type
      operator++() volatile noexcept
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }

      __int_type
      operator--() noexcept
    f722:	55                   	push   %rbp
    f723:	48 89 e5             	mov    %rsp,%rbp
    f726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    f72a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f72e:	b8 01 00 00 00       	mov    $0x1,%eax
    f733:	f7 d8                	neg    %eax
    f735:	89 c1                	mov    %eax,%ecx
    f737:	89 c8                	mov    %ecx,%eax
    f739:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    f73d:	01 c8                	add    %ecx,%eax
    f73f:	5d                   	pop    %rbp
    f740:	c3                   	ret
    f741:	90                   	nop

000000000000f742 <_ZNKSt13__atomic_baseIjEcvjEv>:
      operator __int_type() const noexcept
    f742:	55                   	push   %rbp
    f743:	48 89 e5             	mov    %rsp,%rbp
    f746:	48 83 ec 20          	sub    $0x20,%rsp
    f74a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f74e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f752:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f756:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b __attribute__ ((__unused__))
	  = __m & __memory_order_mask;
    f75d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f760:	be ff ff 00 00       	mov    $0xffff,%esi
    f765:	89 c7                	mov    %eax,%edi
    f767:	e8 88 ff ff ff       	call   f6f4 <_ZStanSt12memory_orderSt23__memory_order_modifier>
    f76c:	89 45 f0             	mov    %eax,-0x10(%rbp)
	__glibcxx_assert(__b != memory_order_release);
    f76f:	e8 fa 40 ff ff       	call   386e <_ZSt23__is_constant_evaluatedv>
    f774:	84 c0                	test   %al,%al
    f776:	74 0d                	je     f785 <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    f778:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
    f77c:	75 07                	jne    f785 <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    f77e:	b8 01 00 00 00       	mov    $0x1,%eax
    f783:	eb 05                	jmp    f78a <_ZNKSt13__atomic_baseIjEcvjEv+0x48>
    f785:	b8 00 00 00 00       	mov    $0x0,%eax
    f78a:	84 c0                	test   %al,%al
	__glibcxx_assert(__b != memory_order_acq_rel);
    f78c:	e8 dd 40 ff ff       	call   386e <_ZSt23__is_constant_evaluatedv>
    f791:	84 c0                	test   %al,%al
    f793:	74 0d                	je     f7a2 <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    f795:	83 7d f0 04          	cmpl   $0x4,-0x10(%rbp)
    f799:	75 07                	jne    f7a2 <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    f79b:	b8 01 00 00 00       	mov    $0x1,%eax
    f7a0:	eb 05                	jmp    f7a7 <_ZNKSt13__atomic_baseIjEcvjEv+0x65>
    f7a2:	b8 00 00 00 00       	mov    $0x0,%eax
    f7a7:	84 c0                	test   %al,%al

	return __atomic_load_n(&_M_i, int(__m));
    f7a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7ad:	8b 00                	mov    (%rax),%eax
    f7af:	90                   	nop
      { return load(); }
    f7b0:	c9                   	leave
    f7b1:	c3                   	ret

000000000000f7b2 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    f7b2:	55                   	push   %rbp
    f7b3:	48 89 e5             	mov    %rsp,%rbp
    f7b6:	48 83 ec 20          	sub    $0x20,%rsp
    f7ba:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f7bd:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f7c0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    f7c4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    f7c8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f7cb:	83 f8 01             	cmp    $0x1,%eax
    f7ce:	7e 3c                	jle    f80c <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    f7d0:	be 0a 00 00 00       	mov    $0xa,%esi
    f7d5:	48 8d 05 04 0c 01 00 	lea    0x10c04(%rip),%rax        # 203e0 <_ZSt4cerr@GLIBCXX_3.4>
    f7dc:	48 89 c7             	mov    %rax,%rdi
    f7df:	e8 9c 3b ff ff       	call   3380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    f7e4:	48 89 c2             	mov    %rax,%rdx
    f7e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f7eb:	48 8b 40 28          	mov    0x28(%rax),%rax
    f7ef:	48 89 c6             	mov    %rax,%rsi
    f7f2:	48 89 d7             	mov    %rdx,%rdi
    f7f5:	e8 b6 3a ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f7fa:	48 8b 15 a7 07 01 00 	mov    0x107a7(%rip),%rdx        # 1ffa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    f801:	48 89 d6             	mov    %rdx,%rsi
    f804:	48 89 c7             	mov    %rax,%rdi
    f807:	e8 04 3b ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    f80c:	b8 00 00 00 00       	mov    $0x0,%eax
}
    f811:	c9                   	leave
    f812:	c3                   	ret
    f813:	90                   	nop

000000000000f814 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
    f814:	55                   	push   %rbp
    f815:	48 89 e5             	mov    %rsp,%rbp
    f818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f81c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
    f820:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f824:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
    f82a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f82e:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      // VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
    f835:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f839:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
    f840:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f844:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # f7b2 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    f84b:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
    f84f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f853:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    f85a:	00 
}
    f85b:	90                   	nop
    f85c:	5d                   	pop    %rbp
    f85d:	c3                   	ret

000000000000f85e <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
    f85e:	55                   	push   %rbp
    f85f:	48 89 e5             	mov    %rsp,%rbp
    f862:	53                   	push   %rbx
    f863:	48 83 ec 58          	sub    $0x58,%rsp
    f867:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    f86b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    f86f:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f873:	48 89 c7             	mov    %rax,%rdi
    f876:	e8 85 39 ff ff       	call   3200 <glfwGetRequiredInstanceExtensions@plt>
    f87b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    f87f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    f882:	89 c3                	mov    %eax,%ebx
    f884:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f888:	48 89 c7             	mov    %rax,%rdi
    f88b:	e8 70 c4 ff ff       	call   bd00 <_ZNSaIPKcEC1Ev>
    f890:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    f894:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f898:	48 89 de             	mov    %rbx,%rsi
    f89b:	48 89 c7             	mov    %rax,%rdi
    f89e:	e8 79 06 00 00       	call   ff1c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    f8a3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f8a7:	48 89 c7             	mov    %rax,%rdi
    f8aa:	e8 6d c4 ff ff       	call   bd1c <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
    f8af:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f8b6:	00 
  for (auto &extension : requiredExtensions) {
    f8b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f8bb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f8bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f8c3:	48 89 c7             	mov    %rax,%rdi
    f8c6:	e8 c7 06 00 00       	call   ff92 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f8cb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f8cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f8d3:	48 89 c7             	mov    %rax,%rdi
    f8d6:	e8 dd 06 00 00       	call   ffb8 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f8db:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f8df:	eb 3e                	jmp    f91f <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
    f8e1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f8e5:	48 89 c7             	mov    %rax,%rdi
    f8e8:	e8 4f 07 00 00       	call   1003c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f8ed:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
    f8f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8f5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f8fc:	00 
    f8fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f901:	48 01 d0             	add    %rdx,%rax
    f904:	48 8b 10             	mov    (%rax),%rdx
    f907:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f90b:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
    f90e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
    f913:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f917:	48 89 c7             	mov    %rax,%rdi
    f91a:	e8 fd 06 00 00       	call   1001c <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f91f:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    f923:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f927:	48 89 d6             	mov    %rdx,%rsi
    f92a:	48 89 c7             	mov    %rax,%rdi
    f92d:	e8 af 06 00 00       	call   ffe1 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f932:	84 c0                	test   %al,%al
    f934:	75 ab                	jne    f8e1 <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
    f936:	eb 1a                	jmp    f952 <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    f938:	48 89 c3             	mov    %rax,%rbx
    f93b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f93f:	48 89 c7             	mov    %rax,%rdi
    f942:	e8 d5 c3 ff ff       	call   bd1c <_ZNSaIPKcED1Ev>
    f947:	48 89 d8             	mov    %rbx,%rax
    f94a:	48 89 c7             	mov    %rax,%rdi
    f94d:	e8 7e 3b ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    f952:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f956:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f95a:	c9                   	leave
    f95b:	c3                   	ret

000000000000f95c <_ZN4neko8InstanceC1ERKNS_8SettingsE>:

Instance::Instance(const Settings &settings) {
    f95c:	55                   	push   %rbp
    f95d:	48 89 e5             	mov    %rsp,%rbp
    f960:	41 55                	push   %r13
    f962:	41 54                	push   %r12
    f964:	53                   	push   %rbx
    f965:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    f96c:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    f973:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    f97a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f981:	48 89 c7             	mov    %rax,%rdi
    f984:	e8 67 05 00 00       	call   fef0 <_ZN4neko7ContextC1Ev>
    f989:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f990:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f997:	00 
    f998:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f99f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f9a6:	00 
    f9a7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    f9ae:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
    f9b2:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    f9b6:	48 89 c7             	mov    %rax,%rdi
    f9b9:	e8 f2 39 ff ff       	call   33b0 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
    f9be:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f9c2:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    f9c9:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    f9d0:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    f9d7:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    f9de:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
    f9e1:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    f9e8:	48 89 c7             	mov    %rax,%rdi
    f9eb:	e8 f0 36 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    f9f0:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
    f9f7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    f9fe:	8b 40 20             	mov    0x20(%rax),%eax
    fa01:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
    fa07:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    fa0e:	48 83 c0 28          	add    $0x28,%rax
    fa12:	48 89 c7             	mov    %rax,%rdi
    fa15:	e8 c6 36 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    fa1a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
    fa21:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    fa28:	8b 40 48             	mov    0x48(%rax),%eax
    fa2b:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
    fa31:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    fa34:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    fa3a:	48 8d 05 47 32 00 00 	lea    0x3247(%rip),%rax        # 12c88 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    fa41:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fa45:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fa49:	49 89 c4             	mov    %rax,%r12
    fa4c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    fa52:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fa56:	48 89 c7             	mov    %rax,%rdi
    fa59:	e8 a2 c2 ff ff       	call   bd00 <_ZNSaIPKcEC1Ev>
    fa5e:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    fa62:	4c 89 e6             	mov    %r12,%rsi
    fa65:	4c 89 ef             	mov    %r13,%rdi
    fa68:	4c 89 e1             	mov    %r12,%rcx
    fa6b:	4c 89 eb             	mov    %r13,%rbx
    fa6e:	48 89 df             	mov    %rbx,%rdi
    fa71:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fa75:	48 89 d1             	mov    %rdx,%rcx
    fa78:	48 89 fa             	mov    %rdi,%rdx
    fa7b:	48 89 c7             	mov    %rax,%rdi
    fa7e:	e8 b5 c2 ff ff       	call   bd38 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fa83:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fa87:	48 89 c7             	mov    %rax,%rdi
    fa8a:	e8 8d c2 ff ff       	call   bd1c <_ZNSaIPKcED1Ev>
  auto extensions = getRequiredExtensions();
    fa8f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fa93:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fa9a:	48 89 d6             	mov    %rdx,%rsi
    fa9d:	48 89 c7             	mov    %rax,%rdi
    faa0:	e8 b9 fd ff ff       	call   f85e <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
    faa5:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    faac:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
    faad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fab1:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    fab8:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    fabf:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
    fac6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    faca:	48 8d 15 d1 31 00 00 	lea    0x31d1(%rip),%rdx        # 12ca2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
    fad1:	48 89 d6             	mov    %rdx,%rsi
    fad4:	48 89 c7             	mov    %rax,%rdi
    fad7:	e8 72 05 00 00       	call   1004e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    fadc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fae0:	48 8d 15 d7 31 00 00 	lea    0x31d7(%rip),%rdx        # 12cbe <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
    fae7:	48 89 d6             	mov    %rdx,%rsi
    faea:	48 89 c7             	mov    %rax,%rdi
    faed:	e8 00 06 00 00       	call   100f2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    populateDebugMessengerInfo(debugMessengerInfo);
    faf2:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    faf9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fb00:	48 89 d6             	mov    %rdx,%rsi
    fb03:	48 89 c7             	mov    %rax,%rdi
    fb06:	e8 09 fd ff ff       	call   f814 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
    fb0b:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    fb12:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
    fb16:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb1a:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    fb21:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    fb28:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    fb2f:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    fb36:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    fb3d:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
    fb40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fb44:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
    fb4b:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    fb52:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = vku32(layers.size());
    fb59:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fb5d:	48 89 c7             	mov    %rax,%rdi
    fb60:	e8 31 06 00 00       	call   10196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fb65:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
    fb6b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fb6f:	48 89 c7             	mov    %rax,%rdi
    fb72:	e8 43 06 00 00       	call   101ba <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fb77:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = vku32(extensions.size());
    fb7e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fb82:	48 89 c7             	mov    %rax,%rdi
    fb85:	e8 0c 06 00 00       	call   10196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fb8a:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
    fb90:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fb94:	48 89 c7             	mov    %rax,%rdi
    fb97:	e8 1e 06 00 00       	call   101ba <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fb9c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
    fba3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fbaa:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fbae:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fbb5:	be 00 00 00 00       	mov    $0x0,%esi
    fbba:	48 89 c7             	mov    %rax,%rdi
    fbbd:	e8 ce 37 ff ff       	call   3390 <vkCreateInstance@plt>
    fbc2:	85 c0                	test   %eax,%eax
    fbc4:	0f 95 c0             	setne  %al
    fbc7:	84 c0                	test   %al,%al
    fbc9:	74 3b                	je     fc06 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x2aa>
    throw std::runtime_error("Failed to create instance.");
    fbcb:	bf 10 00 00 00       	mov    $0x10,%edi
    fbd0:	e8 3b 35 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    fbd5:	48 89 c3             	mov    %rax,%rbx
    fbd8:	48 8d 05 f2 30 00 00 	lea    0x30f2(%rip),%rax        # 12cd1 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
    fbdf:	48 89 c6             	mov    %rax,%rsi
    fbe2:	48 89 df             	mov    %rbx,%rdi
    fbe5:	e8 c6 34 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    fbea:	48 8b 05 c7 03 01 00 	mov    0x103c7(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fbf1:	48 89 c2             	mov    %rax,%rdx
    fbf4:	48 8d 05 45 01 01 00 	lea    0x10145(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fbfb:	48 89 c6             	mov    %rax,%rsi
    fbfe:	48 89 df             	mov    %rbx,%rdi
    fc01:	e8 aa 38 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    fc06:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fc0d:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fc14:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    fc18:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fc1f:	48 8b 72 08          	mov    0x8(%rdx),%rsi
    fc23:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fc27:	49 89 c8             	mov    %rcx,%r8
    fc2a:	b9 00 00 00 00       	mov    $0x0,%ecx
    fc2f:	48 89 c7             	mov    %rax,%rdi
    fc32:	e8 a1 f9 ff ff       	call   f5d8 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                      &mDebugMessenger) != VK_SUCCESS) {
    fc37:	85 c0                	test   %eax,%eax
    fc39:	0f 95 c0             	setne  %al
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    fc3c:	84 c0                	test   %al,%al
    fc3e:	74 3b                	je     fc7b <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x31f>
      throw std::runtime_error("Failed to create debug messenger");
    fc40:	bf 10 00 00 00       	mov    $0x10,%edi
    fc45:	e8 c6 34 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    fc4a:	48 89 c3             	mov    %rax,%rbx
    fc4d:	48 8d 05 9c 30 00 00 	lea    0x309c(%rip),%rax        # 12cf0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    fc54:	48 89 c6             	mov    %rax,%rsi
    fc57:	48 89 df             	mov    %rbx,%rdi
    fc5a:	e8 51 34 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    fc5f:	48 8b 05 52 03 01 00 	mov    0x10352(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fc66:	48 89 c2             	mov    %rax,%rdx
    fc69:	48 8d 05 d0 00 01 00 	lea    0x100d0(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fc70:	48 89 c6             	mov    %rax,%rsi
    fc73:	48 89 df             	mov    %rbx,%rdi
    fc76:	e8 35 38 ff ff       	call   34b0 <__cxa_throw@plt>
    }
  }

  mIsOwner = true;
    fc7b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fc82:	c6 40 18 01          	movb   $0x1,0x18(%rax)
}
    fc86:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fc8a:	48 89 c7             	mov    %rax,%rdi
    fc8d:	e8 2e c1 ff ff       	call   bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fc92:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fc96:	48 89 c7             	mov    %rax,%rdi
    fc99:	e8 22 c1 ff ff       	call   bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fc9e:	eb 70                	jmp    fd10 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x3b4>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    fca0:	48 89 c3             	mov    %rax,%rbx
    fca3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fca7:	48 89 c7             	mov    %rax,%rdi
    fcaa:	e8 6d c0 ff ff       	call   bd1c <_ZNSaIPKcED1Ev>
    fcaf:	eb 45                	jmp    fcf6 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    throw std::runtime_error("Failed to create instance.");
    fcb1:	49 89 c4             	mov    %rax,%r12
    fcb4:	48 89 df             	mov    %rbx,%rdi
    fcb7:	e8 f4 34 ff ff       	call   31b0 <__cxa_free_exception@plt>
    fcbc:	4c 89 e3             	mov    %r12,%rbx
    fcbf:	eb 13                	jmp    fcd4 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
      throw std::runtime_error("Failed to create debug messenger");
    fcc1:	49 89 c4             	mov    %rax,%r12
    fcc4:	48 89 df             	mov    %rbx,%rdi
    fcc7:	e8 e4 34 ff ff       	call   31b0 <__cxa_free_exception@plt>
    fccc:	4c 89 e3             	mov    %r12,%rbx
    fccf:	eb 03                	jmp    fcd4 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
}
    fcd1:	48 89 c3             	mov    %rax,%rbx
    fcd4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fcd8:	48 89 c7             	mov    %rax,%rdi
    fcdb:	e8 e0 c0 ff ff       	call   bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fce0:	eb 03                	jmp    fce5 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x389>
    fce2:	48 89 c3             	mov    %rax,%rbx
    fce5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fce9:	48 89 c7             	mov    %rax,%rdi
    fcec:	e8 cf c0 ff ff       	call   bdc0 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fcf1:	eb 03                	jmp    fcf6 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    fcf3:	48 89 c3             	mov    %rax,%rbx
    fcf6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fcfd:	48 89 c7             	mov    %rax,%rdi
    fd00:	e8 c7 3b ff ff       	call   38cc <_ZN4neko7ContextD1Ev>
    fd05:	48 89 d8             	mov    %rbx,%rax
    fd08:	48 89 c7             	mov    %rax,%rdi
    fd0b:	e8 c0 37 ff ff       	call   34d0 <_Unwind_Resume@plt>
    fd10:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    fd17:	5b                   	pop    %rbx
    fd18:	41 5c                	pop    %r12
    fd1a:	41 5d                	pop    %r13
    fd1c:	5d                   	pop    %rbp
    fd1d:	c3                   	ret

000000000000fd1e <_ZN4neko8InstanceC1EOS0_>:

Instance::Instance(Instance &&rhs) noexcept
    fd1e:	55                   	push   %rbp
    fd1f:	48 89 e5             	mov    %rsp,%rbp
    fd22:	53                   	push   %rbx
    fd23:	48 83 ec 28          	sub    $0x28,%rsp
    fd27:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fd2b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    : mContext{std::move(rhs.mContext)}, mInstance{std::move(rhs.mInstance)},
    fd2f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    fd33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd37:	48 89 c7             	mov    %rax,%rdi
    fd3a:	e8 9f 04 00 00       	call   101de <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
    fd3f:	48 89 c6             	mov    %rax,%rsi
    fd42:	48 89 df             	mov    %rbx,%rdi
    fd45:	e8 ba 01 00 00       	call   ff04 <_ZN4neko7ContextC1EOS0_>
    fd4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd4e:	48 83 c0 08          	add    $0x8,%rax
    fd52:	48 89 c7             	mov    %rax,%rdi
    fd55:	e8 92 04 00 00       	call   101ec <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    fd5a:	48 8b 10             	mov    (%rax),%rdx
    fd5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd61:	48 89 50 08          	mov    %rdx,0x8(%rax)
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    fd65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd69:	48 83 c0 10          	add    $0x10,%rax
    fd6d:	48 89 c7             	mov    %rax,%rdi
    fd70:	e8 85 04 00 00       	call   101fa <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    fd75:	48 8b 10             	mov    (%rax),%rdx
    fd78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd7c:	48 89 50 10          	mov    %rdx,0x10(%rax)
                                                           rhs.mIsOwner,
                                                           false)} {}
    fd80:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
                                                           rhs.mIsOwner,
    fd84:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd88:	48 8d 50 18          	lea    0x18(%rax),%rdx
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    fd8c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    fd90:	48 89 c6             	mov    %rax,%rsi
    fd93:	48 89 d7             	mov    %rdx,%rdi
    fd96:	e8 6d 04 00 00       	call   10208 <_ZSt8exchangeIbbET_RS0_OT0_>
    fd9b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fd9f:	88 42 18             	mov    %al,0x18(%rdx)
                                                           false)} {}
    fda2:	90                   	nop
    fda3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fda7:	c9                   	leave
    fda8:	c3                   	ret
    fda9:	90                   	nop

000000000000fdaa <_ZN4neko8InstanceaSEOS0_>:

Instance &Instance::operator=(Instance &&rhs) {
    fdaa:	55                   	push   %rbp
    fdab:	48 89 e5             	mov    %rsp,%rbp
    fdae:	48 83 ec 20          	sub    $0x20,%rsp
    fdb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fdb6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  release();
    fdba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdbe:	48 89 c7             	mov    %rax,%rdi
    fdc1:	e8 6a 00 00 00       	call   fe30 <_ZN4neko8Instance7releaseEv>
  mContext = std::move(rhs.mContext);
    fdc6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdca:	48 89 c7             	mov    %rax,%rdi
    fdcd:	e8 0c 04 00 00       	call   101de <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
  mInstance = std::move(rhs.mInstance);
    fdd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdd6:	48 83 c0 08          	add    $0x8,%rax
    fdda:	48 89 c7             	mov    %rax,%rdi
    fddd:	e8 0a 04 00 00       	call   101ec <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    fde2:	48 8b 10             	mov    (%rax),%rdx
    fde5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fde9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  mDebugMessenger = std::move(rhs.mDebugMessenger);
    fded:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdf1:	48 83 c0 10          	add    $0x10,%rax
    fdf5:	48 89 c7             	mov    %rax,%rdi
    fdf8:	e8 fd 03 00 00       	call   101fa <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    fdfd:	48 8b 10             	mov    (%rax),%rdx
    fe00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe04:	48 89 50 10          	mov    %rdx,0x10(%rax)
  mIsOwner = std::exchange(rhs.mIsOwner, false);
    fe08:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    fe0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fe10:	48 8d 50 18          	lea    0x18(%rax),%rdx
    fe14:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    fe18:	48 89 c6             	mov    %rax,%rsi
    fe1b:	48 89 d7             	mov    %rdx,%rdi
    fe1e:	e8 e5 03 00 00       	call   10208 <_ZSt8exchangeIbbET_RS0_OT0_>
    fe23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fe27:	88 42 18             	mov    %al,0x18(%rdx)
  return *this;
    fe2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
}
    fe2e:	c9                   	leave
    fe2f:	c3                   	ret

000000000000fe30 <_ZN4neko8Instance7releaseEv>:

void Instance::release() noexcept {
    fe30:	55                   	push   %rbp
    fe31:	48 89 e5             	mov    %rsp,%rbp
    fe34:	48 83 ec 10          	sub    $0x10,%rsp
    fe38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (mIsOwner) {
    fe3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe40:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    fe44:	84 c0                	test   %al,%al
    fe46:	74 3e                	je     fe86 <_ZN4neko8Instance7releaseEv+0x56>
    if constexpr (neko::debugMode) {
      mContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
    fe48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fe50:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    fe54:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    fe58:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    fe5c:	b9 00 00 00 00       	mov    $0x0,%ecx
    fe61:	48 89 c7             	mov    %rax,%rdi
    fe64:	e8 cf f7 ff ff       	call   f638 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
    }
    vkDestroyInstance(mInstance, nullptr);
    fe69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe6d:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe71:	be 00 00 00 00       	mov    $0x0,%esi
    fe76:	48 89 c7             	mov    %rax,%rdi
    fe79:	e8 62 34 ff ff       	call   32e0 <vkDestroyInstance@plt>
    mIsOwner = false;
    fe7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe82:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  }
}
    fe86:	90                   	nop
    fe87:	c9                   	leave
    fe88:	c3                   	ret

000000000000fe89 <_Z41__static_initialization_and_destruction_0ii>:

    fe89:	55                   	push   %rbp
    fe8a:	48 89 e5             	mov    %rsp,%rbp
    fe8d:	48 83 ec 10          	sub    $0x10,%rsp
    fe91:	89 7d fc             	mov    %edi,-0x4(%rbp)
    fe94:	89 75 f8             	mov    %esi,-0x8(%rbp)
    fe97:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    fe9b:	75 3b                	jne    fed8 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fe9d:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    fea4:	75 32                	jne    fed8 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fea6:	48 8d 05 4f 06 01 00 	lea    0x1064f(%rip),%rax        # 204fc <_ZStL8__ioinit>
    fead:	48 89 c7             	mov    %rax,%rdi
    feb0:	e8 8b 35 ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
    feb5:	48 8d 05 cc 03 01 00 	lea    0x103cc(%rip),%rax        # 20288 <__dso_handle>
    febc:	48 89 c2             	mov    %rax,%rdx
    febf:	48 8d 05 36 06 01 00 	lea    0x10636(%rip),%rax        # 204fc <_ZStL8__ioinit>
    fec6:	48 89 c6             	mov    %rax,%rsi
    fec9:	48 8b 05 08 01 01 00 	mov    0x10108(%rip),%rax        # 1ffd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    fed0:	48 89 c7             	mov    %rax,%rdi
    fed3:	e8 88 33 ff ff       	call   3260 <__cxa_atexit@plt>
    fed8:	90                   	nop
    fed9:	c9                   	leave
    feda:	c3                   	ret

000000000000fedb <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    fedb:	55                   	push   %rbp
    fedc:	48 89 e5             	mov    %rsp,%rbp
    fedf:	be ff ff 00 00       	mov    $0xffff,%esi
    fee4:	bf 01 00 00 00       	mov    $0x1,%edi
    fee9:	e8 9b ff ff ff       	call   fe89 <_Z41__static_initialization_and_destruction_0ii>
    feee:	5d                   	pop    %rbp
    feef:	c3                   	ret

000000000000fef0 <_ZN4neko7ContextC1Ev>:
  Context() { createContext(); }
    fef0:	55                   	push   %rbp
    fef1:	48 89 e5             	mov    %rsp,%rbp
    fef4:	48 83 ec 10          	sub    $0x10,%rsp
    fef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fefc:	e8 0f f6 ff ff       	call   f510 <_ZN4neko7Context13createContextEv>
    ff01:	90                   	nop
    ff02:	c9                   	leave
    ff03:	c3                   	ret

000000000000ff04 <_ZN4neko7ContextC1EOS0_>:
  Context(Context &&) { moveCreateContext(); }
    ff04:	55                   	push   %rbp
    ff05:	48 89 e5             	mov    %rsp,%rbp
    ff08:	48 83 ec 10          	sub    $0x10,%rsp
    ff0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ff14:	e8 75 f6 ff ff       	call   f58e <_ZN4neko7Context17moveCreateContextEv>
    ff19:	90                   	nop
    ff1a:	c9                   	leave
    ff1b:	c3                   	ret

000000000000ff1c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    ff1c:	55                   	push   %rbp
    ff1d:	48 89 e5             	mov    %rsp,%rbp
    ff20:	53                   	push   %rbx
    ff21:	48 83 ec 28          	sub    $0x28,%rsp
    ff25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ff29:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ff2d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    ff31:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ff35:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ff39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ff3d:	48 89 d6             	mov    %rdx,%rsi
    ff40:	48 89 c7             	mov    %rax,%rdi
    ff43:	e8 09 d1 ff ff       	call   d051 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    ff48:	48 89 c1             	mov    %rax,%rcx
    ff4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff4f:	48 89 c2             	mov    %rax,%rdx
    ff52:	48 89 ce             	mov    %rcx,%rsi
    ff55:	48 89 df             	mov    %rbx,%rdi
    ff58:	e8 db 02 00 00       	call   10238 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    ff5d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ff61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff65:	48 89 d6             	mov    %rdx,%rsi
    ff68:	48 89 c7             	mov    %rax,%rdi
    ff6b:	e8 26 03 00 00       	call   10296 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    ff70:	eb 1a                	jmp    ff8c <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    ff72:	48 89 c3             	mov    %rax,%rbx
    ff75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff79:	48 89 c7             	mov    %rax,%rdi
    ff7c:	e8 59 c6 ff ff       	call   c5da <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    ff81:	48 89 d8             	mov    %rbx,%rax
    ff84:	48 89 c7             	mov    %rax,%rdi
    ff87:	e8 44 35 ff ff       	call   34d0 <_Unwind_Resume@plt>
    ff8c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ff90:	c9                   	leave
    ff91:	c3                   	ret

000000000000ff92 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ff92:	55                   	push   %rbp
    ff93:	48 89 e5             	mov    %rsp,%rbp
    ff96:	48 83 ec 20          	sub    $0x20,%rsp
    ff9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ff9e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ffa2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ffa6:	48 89 d6             	mov    %rdx,%rsi
    ffa9:	48 89 c7             	mov    %rax,%rdi
    ffac:	e8 25 03 00 00       	call   102d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    ffb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffb5:	c9                   	leave
    ffb6:	c3                   	ret
    ffb7:	90                   	nop

000000000000ffb8 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ffb8:	55                   	push   %rbp
    ffb9:	48 89 e5             	mov    %rsp,%rbp
    ffbc:	48 83 ec 20          	sub    $0x20,%rsp
    ffc0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ffc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffc8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ffcc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ffd0:	48 89 d6             	mov    %rdx,%rsi
    ffd3:	48 89 c7             	mov    %rax,%rdi
    ffd6:	e8 fb 02 00 00       	call   102d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    ffdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffdf:	c9                   	leave
    ffe0:	c3                   	ret

000000000000ffe1 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ffe1:	55                   	push   %rbp
    ffe2:	48 89 e5             	mov    %rsp,%rbp
    ffe5:	53                   	push   %rbx
    ffe6:	48 83 ec 18          	sub    $0x18,%rsp
    ffea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ffee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    fff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fff6:	48 89 c7             	mov    %rax,%rdi
    fff9:	e8 f6 02 00 00       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    fffe:	48 8b 18             	mov    (%rax),%rbx
   10001:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10005:	48 89 c7             	mov    %rax,%rdi
   10008:	e8 e7 02 00 00       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1000d:	48 8b 00             	mov    (%rax),%rax
   10010:	48 39 c3             	cmp    %rax,%rbx
   10013:	0f 95 c0             	setne  %al
   10016:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1001a:	c9                   	leave
   1001b:	c3                   	ret

000000000001001c <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1001c:	55                   	push   %rbp
   1001d:	48 89 e5             	mov    %rsp,%rbp
   10020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10028:	48 8b 00             	mov    (%rax),%rax
   1002b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1002f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10033:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1003a:	5d                   	pop    %rbp
   1003b:	c3                   	ret

000000000001003c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1003c:	55                   	push   %rbp
   1003d:	48 89 e5             	mov    %rsp,%rbp
   10040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10048:	48 8b 00             	mov    (%rax),%rax
   1004b:	5d                   	pop    %rbp
   1004c:	c3                   	ret
   1004d:	90                   	nop

000000000001004e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   1004e:	55                   	push   %rbp
   1004f:	48 89 e5             	mov    %rsp,%rbp
   10052:	53                   	push   %rbx
   10053:	48 83 ec 18          	sub    $0x18,%rsp
   10057:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1005b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1005f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10063:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10067:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1006b:	48 8b 40 10          	mov    0x10(%rax),%rax
   1006f:	48 39 c2             	cmp    %rax,%rdx
   10072:	74 3c                	je     100b0 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   10074:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10078:	48 89 c7             	mov    %rax,%rdi
   1007b:	e8 82 02 00 00       	call   10302 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10080:	48 89 c2             	mov    %rax,%rdx
   10083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10087:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1008b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1008f:	48 89 ce             	mov    %rcx,%rsi
   10092:	48 89 c7             	mov    %rax,%rdi
   10095:	e8 76 02 00 00       	call   10310 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   1009a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1009e:	48 8b 40 08          	mov    0x8(%rax),%rax
   100a2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   100a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100aa:	48 89 50 08          	mov    %rdx,0x8(%rax)
   100ae:	eb 30                	jmp    100e0 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   100b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   100b4:	48 89 c7             	mov    %rax,%rdi
   100b7:	e8 46 02 00 00       	call   10302 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   100bc:	48 89 c3             	mov    %rax,%rbx
   100bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100c3:	48 89 c7             	mov    %rax,%rdi
   100c6:	e8 ed fe ff ff       	call   ffb8 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   100cb:	48 89 c1             	mov    %rax,%rcx
   100ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100d2:	48 89 da             	mov    %rbx,%rdx
   100d5:	48 89 ce             	mov    %rcx,%rsi
   100d8:	48 89 c7             	mov    %rax,%rdi
   100db:	e8 6a 02 00 00       	call   1034a <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   100e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100e4:	48 89 c7             	mov    %rax,%rdi
   100e7:	e8 f0 03 00 00       	call   104dc <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   100ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   100f0:	c9                   	leave
   100f1:	c3                   	ret

00000000000100f2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   100f2:	55                   	push   %rbp
   100f3:	48 89 e5             	mov    %rsp,%rbp
   100f6:	53                   	push   %rbx
   100f7:	48 83 ec 18          	sub    $0x18,%rsp
   100fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   100ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   10103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10107:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1010b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1010f:	48 8b 40 10          	mov    0x10(%rax),%rax
   10113:	48 39 c2             	cmp    %rax,%rdx
   10116:	74 3c                	je     10154 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   10118:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1011c:	48 89 c7             	mov    %rax,%rdi
   1011f:	e8 f7 03 00 00       	call   1051b <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10124:	48 89 c2             	mov    %rax,%rdx
   10127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1012b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1012f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10133:	48 89 ce             	mov    %rcx,%rsi
   10136:	48 89 c7             	mov    %rax,%rdi
   10139:	e8 eb 03 00 00       	call   10529 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   1013e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10142:	48 8b 40 08          	mov    0x8(%rax),%rax
   10146:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1014a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1014e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10152:	eb 30                	jmp    10184 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   10154:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10158:	48 89 c7             	mov    %rax,%rdi
   1015b:	e8 bb 03 00 00       	call   1051b <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10160:	48 89 c3             	mov    %rax,%rbx
   10163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10167:	48 89 c7             	mov    %rax,%rdi
   1016a:	e8 49 fe ff ff       	call   ffb8 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1016f:	48 89 c1             	mov    %rax,%rcx
   10172:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10176:	48 89 da             	mov    %rbx,%rdx
   10179:	48 89 ce             	mov    %rcx,%rsi
   1017c:	48 89 c7             	mov    %rax,%rdi
   1017f:	e8 de 03 00 00       	call   10562 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   10184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10188:	48 89 c7             	mov    %rax,%rdi
   1018b:	e8 4c 03 00 00       	call   104dc <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   10190:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10194:	c9                   	leave
   10195:	c3                   	ret

0000000000010196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10196:	55                   	push   %rbp
   10197:	48 89 e5             	mov    %rsp,%rbp
   1019a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   1019e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101a2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   101a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101aa:	48 8b 00             	mov    (%rax),%rax
   101ad:	48 29 c2             	sub    %rax,%rdx
   101b0:	48 89 d0             	mov    %rdx,%rax
   101b3:	48 c1 f8 03          	sar    $0x3,%rax
   101b7:	5d                   	pop    %rbp
   101b8:	c3                   	ret
   101b9:	90                   	nop

00000000000101ba <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   101ba:	55                   	push   %rbp
   101bb:	48 89 e5             	mov    %rsp,%rbp
   101be:	48 83 ec 10          	sub    $0x10,%rsp
   101c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   101c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ca:	48 8b 10             	mov    (%rax),%rdx
   101cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101d1:	48 89 d6             	mov    %rdx,%rsi
   101d4:	48 89 c7             	mov    %rax,%rdi
   101d7:	e8 18 05 00 00       	call   106f4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   101dc:	c9                   	leave
   101dd:	c3                   	ret

00000000000101de <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   101de:	55                   	push   %rbp
   101df:	48 89 e5             	mov    %rsp,%rbp
   101e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   101e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ea:	5d                   	pop    %rbp
   101eb:	c3                   	ret

00000000000101ec <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   101ec:	55                   	push   %rbp
   101ed:	48 89 e5             	mov    %rsp,%rbp
   101f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   101f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f8:	5d                   	pop    %rbp
   101f9:	c3                   	ret

00000000000101fa <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   101fa:	55                   	push   %rbp
   101fb:	48 89 e5             	mov    %rsp,%rbp
   101fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10206:	5d                   	pop    %rbp
   10207:	c3                   	ret

0000000000010208 <_ZSt8exchangeIbbET_RS0_OT0_>:

  /// Assign @p __new_val to @p __obj and return its previous value.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    exchange(_Tp& __obj, _Up&& __new_val)
   10208:	55                   	push   %rbp
   10209:	48 89 e5             	mov    %rsp,%rbp
   1020c:	48 83 ec 10          	sub    $0x10,%rsp
   10210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
		    is_nothrow_assignable<_Tp&, _Up>>::value)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   10218:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1021c:	48 89 c7             	mov    %rax,%rdi
   1021f:	e8 e2 04 00 00       	call   10706 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   10224:	48 89 c2             	mov    %rax,%rdx
   10227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1022b:	48 89 d6             	mov    %rdx,%rsi
   1022e:	48 89 c7             	mov    %rax,%rdi
   10231:	e8 de 04 00 00       	call   10714 <_ZSt10__exchangeIbbET_RS0_OT0_>
   10236:	c9                   	leave
   10237:	c3                   	ret

0000000000010238 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   10238:	55                   	push   %rbp
   10239:	48 89 e5             	mov    %rsp,%rbp
   1023c:	53                   	push   %rbx
   1023d:	48 83 ec 28          	sub    $0x28,%rsp
   10241:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10245:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10249:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   1024d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10251:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10255:	48 89 d6             	mov    %rdx,%rsi
   10258:	48 89 c7             	mov    %rax,%rdi
   1025b:	e8 52 cd ff ff       	call   cfb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   10260:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10268:	48 89 d6             	mov    %rdx,%rsi
   1026b:	48 89 c7             	mov    %rax,%rdi
   1026e:	e8 df 04 00 00       	call   10752 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
   10273:	eb 1a                	jmp    1028f <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
   10275:	48 89 c3             	mov    %rax,%rbx
   10278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1027c:	48 89 c7             	mov    %rax,%rdi
   1027f:	e8 14 c3 ff ff       	call   c598 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
   10284:	48 89 d8             	mov    %rbx,%rax
   10287:	48 89 c7             	mov    %rax,%rdi
   1028a:	e8 41 32 ff ff       	call   34d0 <_Unwind_Resume@plt>
   1028f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10293:	c9                   	leave
   10294:	c3                   	ret
   10295:	90                   	nop

0000000000010296 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   10296:	55                   	push   %rbp
   10297:	48 89 e5             	mov    %rsp,%rbp
   1029a:	48 83 ec 10          	sub    $0x10,%rsp
   1029e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   102a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102aa:	48 89 c7             	mov    %rax,%rdi
   102ad:	e8 9e c4 ff ff       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   102b2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   102b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102b9:	48 8b 00             	mov    (%rax),%rax
   102bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   102c0:	48 89 ce             	mov    %rcx,%rsi
   102c3:	48 89 c7             	mov    %rax,%rdi
   102c6:	e8 dd 04 00 00       	call   107a8 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   102cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   102cf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   102d3:	90                   	nop
   102d4:	c9                   	leave
   102d5:	c3                   	ret

00000000000102d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   102d6:	55                   	push   %rbp
   102d7:	48 89 e5             	mov    %rsp,%rbp
   102da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   102e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   102e6:	48 8b 10             	mov    (%rax),%rdx
   102e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ed:	48 89 10             	mov    %rdx,(%rax)
   102f0:	90                   	nop
   102f1:	5d                   	pop    %rbp
   102f2:	c3                   	ret
   102f3:	90                   	nop

00000000000102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   102f4:	55                   	push   %rbp
   102f5:	48 89 e5             	mov    %rsp,%rbp
   102f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   102fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10300:	5d                   	pop    %rbp
   10301:	c3                   	ret

0000000000010302 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10302:	55                   	push   %rbp
   10303:	48 89 e5             	mov    %rsp,%rbp
   10306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1030a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1030e:	5d                   	pop    %rbp
   1030f:	c3                   	ret

0000000000010310 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   10310:	55                   	push   %rbp
   10311:	48 89 e5             	mov    %rsp,%rbp
   10314:	48 83 ec 20          	sub    $0x20,%rsp
   10318:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1031c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10320:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   10324:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10328:	48 89 c7             	mov    %rax,%rdi
   1032b:	e8 d2 ff ff ff       	call   10302 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10330:	48 89 c2             	mov    %rax,%rdx
   10333:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1033b:	48 89 ce             	mov    %rcx,%rsi
   1033e:	48 89 c7             	mov    %rax,%rdi
   10341:	e8 8c 04 00 00       	call   107d2 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
   10346:	90                   	nop
   10347:	c9                   	leave
   10348:	c3                   	ret
   10349:	90                   	nop

000000000001034a <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   1034a:	55                   	push   %rbp
   1034b:	48 89 e5             	mov    %rsp,%rbp
   1034e:	53                   	push   %rbx
   1034f:	48 83 ec 68          	sub    $0x68,%rsp
   10353:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   10357:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1035b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1035f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10363:	48 8d 15 df 29 00 00 	lea    0x29df(%rip),%rdx        # 12d49 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   1036a:	be 01 00 00 00       	mov    $0x1,%esi
   1036f:	48 89 c7             	mov    %rax,%rdi
   10372:	e8 9b 04 00 00       	call   10812 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   10377:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1037b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1037f:	48 8b 00             	mov    (%rax),%rax
   10382:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   10386:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1038a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1038e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   10392:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10396:	48 89 c7             	mov    %rax,%rdi
   10399:	e8 f4 fb ff ff       	call   ff92 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1039e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   103a2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   103a6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   103aa:	48 89 d6             	mov    %rdx,%rsi
   103ad:	48 89 c7             	mov    %rax,%rdi
   103b0:	e8 25 05 00 00       	call   108da <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   103b5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   103b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   103c1:	48 89 d6             	mov    %rdx,%rsi
   103c4:	48 89 c7             	mov    %rax,%rdi
   103c7:	e8 e6 cc ff ff       	call   d0b2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   103cc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   103d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103d4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   103d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   103dc:	48 89 c7             	mov    %rax,%rdi
   103df:	e8 1e ff ff ff       	call   10302 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   103e4:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   103e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   103eb:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   103f2:	00 
	  _Alloc_traits::construct(this->_M_impl,
   103f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103f7:	48 01 c1             	add    %rax,%rcx
   103fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   103fe:	48 89 ce             	mov    %rcx,%rsi
   10401:	48 89 c7             	mov    %rax,%rdi
   10404:	e8 07 ff ff ff       	call   10310 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   10409:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   10410:	00 
					 __new_start, _M_get_Tp_allocator());
   10411:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10415:	48 89 c7             	mov    %rax,%rdi
   10418:	e8 33 c3 ff ff       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1041d:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   10420:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10424:	48 89 c7             	mov    %rax,%rdi
   10427:	e8 c8 fe ff ff       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1042c:	48 8b 30             	mov    (%rax),%rsi
   1042f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10433:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10437:	48 89 d9             	mov    %rbx,%rcx
   1043a:	48 89 c7             	mov    %rax,%rdi
   1043d:	e8 da 04 00 00       	call   1091c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   10442:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   10446:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   1044b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1044f:	48 89 c7             	mov    %rax,%rdi
   10452:	e8 f9 c2 ff ff       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10457:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1045a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1045e:	48 89 c7             	mov    %rax,%rdi
   10461:	e8 8e fe ff ff       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10466:	48 8b 00             	mov    (%rax),%rax
   10469:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1046d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   10471:	48 89 d9             	mov    %rbx,%rcx
   10474:	48 89 c7             	mov    %rax,%rdi
   10477:	e8 a0 04 00 00       	call   1091c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1047c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   10480:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   10484:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   10488:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1048c:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   10490:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   10494:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10498:	48 89 ce             	mov    %rcx,%rsi
   1049b:	48 89 c7             	mov    %rax,%rdi
   1049e:	e8 41 cb ff ff       	call   cfe4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   104a3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104a7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   104ab:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   104ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104b2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   104b6:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   104ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   104c5:	00 
   104c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104ca:	48 01 c2             	add    %rax,%rdx
   104cd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   104d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   104d5:	90                   	nop
   104d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   104da:	c9                   	leave
   104db:	c3                   	ret

00000000000104dc <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   104dc:	55                   	push   %rbp
   104dd:	48 89 e5             	mov    %rsp,%rbp
   104e0:	48 83 ec 20          	sub    $0x20,%rsp
   104e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   104e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104ec:	48 89 c7             	mov    %rax,%rdi
   104ef:	e8 c4 fa ff ff       	call   ffb8 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   104f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   104f8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   104fc:	be 01 00 00 00       	mov    $0x1,%esi
   10501:	48 89 c7             	mov    %rax,%rdi
   10504:	e8 45 04 00 00       	call   1094e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   10509:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1050d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   10511:	48 89 c7             	mov    %rax,%rdi
   10514:	e8 23 fb ff ff       	call   1003c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   10519:	c9                   	leave
   1051a:	c3                   	ret

000000000001051b <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1051b:	55                   	push   %rbp
   1051c:	48 89 e5             	mov    %rsp,%rbp
   1051f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10527:	5d                   	pop    %rbp
   10528:	c3                   	ret

0000000000010529 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   10529:	55                   	push   %rbp
   1052a:	48 89 e5             	mov    %rsp,%rbp
   1052d:	48 83 ec 20          	sub    $0x20,%rsp
   10531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10535:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10539:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1053d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10541:	48 89 c7             	mov    %rax,%rdi
   10544:	e8 d2 ff ff ff       	call   1051b <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10549:	48 89 c2             	mov    %rax,%rdx
   1054c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10554:	48 89 ce             	mov    %rcx,%rsi
   10557:	48 89 c7             	mov    %rax,%rdi
   1055a:	e8 31 04 00 00       	call   10990 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
   1055f:	90                   	nop
   10560:	c9                   	leave
   10561:	c3                   	ret

0000000000010562 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   10562:	55                   	push   %rbp
   10563:	48 89 e5             	mov    %rsp,%rbp
   10566:	53                   	push   %rbx
   10567:	48 83 ec 68          	sub    $0x68,%rsp
   1056b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1056f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   10573:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   10577:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1057b:	48 8d 15 c7 27 00 00 	lea    0x27c7(%rip),%rdx        # 12d49 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   10582:	be 01 00 00 00       	mov    $0x1,%esi
   10587:	48 89 c7             	mov    %rax,%rdi
   1058a:	e8 83 02 00 00       	call   10812 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   1058f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   10593:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10597:	48 8b 00             	mov    (%rax),%rax
   1059a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1059e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105a2:	48 8b 40 08          	mov    0x8(%rax),%rax
   105a6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   105aa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105ae:	48 89 c7             	mov    %rax,%rdi
   105b1:	e8 dc f9 ff ff       	call   ff92 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   105b6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   105ba:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   105be:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   105c2:	48 89 d6             	mov    %rdx,%rsi
   105c5:	48 89 c7             	mov    %rax,%rdi
   105c8:	e8 0d 03 00 00       	call   108da <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   105cd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   105d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   105d9:	48 89 d6             	mov    %rdx,%rsi
   105dc:	48 89 c7             	mov    %rax,%rdi
   105df:	e8 ce ca ff ff       	call   d0b2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   105e4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   105e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   105ec:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   105f0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   105f4:	48 89 c7             	mov    %rax,%rdi
   105f7:	e8 1f ff ff ff       	call   1051b <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   105fc:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   105ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10603:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1060a:	00 
	  _Alloc_traits::construct(this->_M_impl,
   1060b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1060f:	48 01 c1             	add    %rax,%rcx
   10612:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10616:	48 89 ce             	mov    %rcx,%rsi
   10619:	48 89 c7             	mov    %rax,%rdi
   1061c:	e8 08 ff ff ff       	call   10529 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   10621:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   10628:	00 
					 __new_start, _M_get_Tp_allocator());
   10629:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1062d:	48 89 c7             	mov    %rax,%rdi
   10630:	e8 1b c1 ff ff       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10635:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   10638:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1063c:	48 89 c7             	mov    %rax,%rdi
   1063f:	e8 b0 fc ff ff       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10644:	48 8b 30             	mov    (%rax),%rsi
   10647:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1064b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1064f:	48 89 d9             	mov    %rbx,%rcx
   10652:	48 89 c7             	mov    %rax,%rdi
   10655:	e8 c2 02 00 00       	call   1091c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1065a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   1065e:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   10663:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10667:	48 89 c7             	mov    %rax,%rdi
   1066a:	e8 e1 c0 ff ff       	call   c750 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1066f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   10672:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10676:	48 89 c7             	mov    %rax,%rdi
   10679:	e8 76 fc ff ff       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1067e:	48 8b 00             	mov    (%rax),%rax
   10681:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10685:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   10689:	48 89 d9             	mov    %rbx,%rcx
   1068c:	48 89 c7             	mov    %rax,%rdi
   1068f:	e8 88 02 00 00       	call   1091c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   10694:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   10698:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   1069c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   106a0:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   106a4:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   106a8:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   106ac:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   106b0:	48 89 ce             	mov    %rcx,%rsi
   106b3:	48 89 c7             	mov    %rax,%rdi
   106b6:	e8 29 c9 ff ff       	call   cfe4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   106bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106bf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   106c3:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   106c6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106ca:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   106ce:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   106d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106d6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   106dd:	00 
   106de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   106e2:	48 01 c2             	add    %rax,%rdx
   106e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106e9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   106ed:	90                   	nop
   106ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   106f2:	c9                   	leave
   106f3:	c3                   	ret

00000000000106f4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   106f4:	55                   	push   %rbp
   106f5:	48 89 e5             	mov    %rsp,%rbp
   106f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10700:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10704:	5d                   	pop    %rbp
   10705:	c3                   	ret

0000000000010706 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10706:	55                   	push   %rbp
   10707:	48 89 e5             	mov    %rsp,%rbp
   1070a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1070e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10712:	5d                   	pop    %rbp
   10713:	c3                   	ret

0000000000010714 <_ZSt10__exchangeIbbET_RS0_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   10714:	55                   	push   %rbp
   10715:	48 89 e5             	mov    %rsp,%rbp
   10718:	48 83 ec 20          	sub    $0x20,%rsp
   1071c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10720:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   10724:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10728:	48 89 c7             	mov    %rax,%rdi
   1072b:	e8 9f 02 00 00       	call   109cf <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
   10730:	0f b6 00             	movzbl (%rax),%eax
   10733:	88 45 ff             	mov    %al,-0x1(%rbp)
      __obj = std::forward<_Up>(__new_val);
   10736:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1073a:	48 89 c7             	mov    %rax,%rdi
   1073d:	e8 c4 ff ff ff       	call   10706 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   10742:	0f b6 10             	movzbl (%rax),%edx
   10745:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10749:	88 10                	mov    %dl,(%rax)
      return __old_val;
   1074b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    }
   1074f:	c9                   	leave
   10750:	c3                   	ret
   10751:	90                   	nop

0000000000010752 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   10752:	55                   	push   %rbp
   10753:	48 89 e5             	mov    %rsp,%rbp
   10756:	48 83 ec 10          	sub    $0x10,%rsp
   1075a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1075e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   10762:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1076a:	48 89 d6             	mov    %rdx,%rsi
   1076d:	48 89 c7             	mov    %rax,%rdi
   10770:	e8 3d c9 ff ff       	call   d0b2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   10775:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10779:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1077c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10780:	48 8b 10             	mov    (%rax),%rdx
   10783:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10787:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1078b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1078f:	48 8b 00             	mov    (%rax),%rax
   10792:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10796:	48 c1 e2 03          	shl    $0x3,%rdx
   1079a:	48 01 c2             	add    %rax,%rdx
   1079d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107a1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   107a5:	90                   	nop
   107a6:	c9                   	leave
   107a7:	c3                   	ret

00000000000107a8 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   107a8:	55                   	push   %rbp
   107a9:	48 89 e5             	mov    %rsp,%rbp
   107ac:	48 83 ec 20          	sub    $0x20,%rsp
   107b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   107b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   107bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   107c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107c4:	48 89 d6             	mov    %rdx,%rsi
   107c7:	48 89 c7             	mov    %rax,%rdi
   107ca:	e8 0e 02 00 00       	call   109dd <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
   107cf:	c9                   	leave
   107d0:	c3                   	ret
   107d1:	90                   	nop

00000000000107d2 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   107d2:	55                   	push   %rbp
   107d3:	48 89 e5             	mov    %rsp,%rbp
   107d6:	53                   	push   %rbx
   107d7:	48 83 ec 28          	sub    $0x28,%rsp
   107db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   107df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   107e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   107e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107eb:	48 89 c6             	mov    %rax,%rsi
   107ee:	bf 08 00 00 00       	mov    $0x8,%edi
   107f3:	e8 81 30 ff ff       	call   3879 <_ZnwmPv>
   107f8:	48 89 c3             	mov    %rax,%rbx
   107fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   107ff:	48 89 c7             	mov    %rax,%rdi
   10802:	e8 fb fa ff ff       	call   10302 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10807:	48 89 03             	mov    %rax,(%rbx)
   1080a:	90                   	nop
   1080b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1080f:	c9                   	leave
   10810:	c3                   	ret
   10811:	90                   	nop

0000000000010812 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   10812:	55                   	push   %rbp
   10813:	48 89 e5             	mov    %rsp,%rbp
   10816:	53                   	push   %rbx
   10817:	48 83 ec 38          	sub    $0x38,%rsp
   1081b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1081f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10823:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   10827:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1082b:	48 89 c7             	mov    %rax,%rdi
   1082e:	e8 d3 01 00 00       	call   10a06 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   10833:	48 89 c3             	mov    %rax,%rbx
   10836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1083a:	48 89 c7             	mov    %rax,%rdi
   1083d:	e8 54 f9 ff ff       	call   10196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   10842:	48 29 c3             	sub    %rax,%rbx
   10845:	48 89 da             	mov    %rbx,%rdx
   10848:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1084c:	48 39 c2             	cmp    %rax,%rdx
   1084f:	0f 92 c0             	setb   %al
   10852:	84 c0                	test   %al,%al
   10854:	74 0c                	je     10862 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   10856:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1085a:	48 89 c7             	mov    %rax,%rdi
   1085d:	e8 ce 28 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   10862:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10866:	48 89 c7             	mov    %rax,%rdi
   10869:	e8 28 f9 ff ff       	call   10196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1086e:	48 89 c3             	mov    %rax,%rbx
   10871:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10875:	48 89 c7             	mov    %rax,%rdi
   10878:	e8 19 f9 ff ff       	call   10196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1087d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10881:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10885:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10889:	48 89 d6             	mov    %rdx,%rsi
   1088c:	48 89 c7             	mov    %rax,%rdi
   1088f:	e8 c6 3f ff ff       	call   485a <_ZSt3maxImERKT_S2_S2_>
   10894:	48 8b 00             	mov    (%rax),%rax
   10897:	48 01 d8             	add    %rbx,%rax
   1089a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1089e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108a2:	48 89 c7             	mov    %rax,%rdi
   108a5:	e8 ec f8 ff ff       	call   10196 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   108aa:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   108ae:	72 12                	jb     108c2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   108b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108b4:	48 89 c7             	mov    %rax,%rdi
   108b7:	e8 4a 01 00 00       	call   10a06 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   108bc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   108c0:	73 0e                	jae    108d0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   108c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108c6:	48 89 c7             	mov    %rax,%rdi
   108c9:	e8 38 01 00 00       	call   10a06 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   108ce:	eb 04                	jmp    108d4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   108d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   108d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   108d8:	c9                   	leave
   108d9:	c3                   	ret

00000000000108da <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   108da:	55                   	push   %rbp
   108db:	48 89 e5             	mov    %rsp,%rbp
   108de:	53                   	push   %rbx
   108df:	48 83 ec 18          	sub    $0x18,%rsp
   108e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   108e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   108eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ef:	48 89 c7             	mov    %rax,%rdi
   108f2:	e8 fd f9 ff ff       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   108f7:	48 8b 18             	mov    (%rax),%rbx
   108fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   108fe:	48 89 c7             	mov    %rax,%rdi
   10901:	e8 ee f9 ff ff       	call   102f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10906:	48 8b 00             	mov    (%rax),%rax
   10909:	48 89 da             	mov    %rbx,%rdx
   1090c:	48 29 c2             	sub    %rax,%rdx
   1090f:	48 89 d0             	mov    %rdx,%rax
   10912:	48 c1 f8 03          	sar    $0x3,%rax
   10916:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1091a:	c9                   	leave
   1091b:	c3                   	ret

000000000001091c <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1091c:	55                   	push   %rbp
   1091d:	48 89 e5             	mov    %rsp,%rbp
   10920:	48 83 ec 20          	sub    $0x20,%rsp
   10924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10928:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1092c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   10930:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   10934:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10938:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1093c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10944:	48 89 c7             	mov    %rax,%rdi
   10947:	e8 dc 00 00 00       	call   10a28 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1094c:	c9                   	leave
   1094d:	c3                   	ret

000000000001094e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   1094e:	55                   	push   %rbp
   1094f:	48 89 e5             	mov    %rsp,%rbp
   10952:	48 83 ec 20          	sub    $0x20,%rsp
   10956:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1095a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   1095e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10962:	48 8b 00             	mov    (%rax),%rax
   10965:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10969:	48 c1 e2 03          	shl    $0x3,%rdx
   1096d:	48 f7 da             	neg    %rdx
   10970:	48 01 d0             	add    %rdx,%rax
   10973:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10977:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1097b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1097f:	48 89 d6             	mov    %rdx,%rsi
   10982:	48 89 c7             	mov    %rax,%rdi
   10985:	e8 4c f9 ff ff       	call   102d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1098a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1098e:	c9                   	leave
   1098f:	c3                   	ret

0000000000010990 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   10990:	55                   	push   %rbp
   10991:	48 89 e5             	mov    %rsp,%rbp
   10994:	53                   	push   %rbx
   10995:	48 83 ec 28          	sub    $0x28,%rsp
   10999:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1099d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   109a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   109a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109a9:	48 89 c6             	mov    %rax,%rsi
   109ac:	bf 08 00 00 00       	mov    $0x8,%edi
   109b1:	e8 c3 2e ff ff       	call   3879 <_ZnwmPv>
   109b6:	48 89 c3             	mov    %rax,%rbx
   109b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   109bd:	48 89 c7             	mov    %rax,%rdi
   109c0:	e8 56 fb ff ff       	call   1051b <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   109c5:	48 89 03             	mov    %rax,(%rbx)
   109c8:	90                   	nop
   109c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   109cd:	c9                   	leave
   109ce:	c3                   	ret

00000000000109cf <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
   109cf:	55                   	push   %rbp
   109d0:	48 89 e5             	mov    %rsp,%rbp
   109d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   109d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109db:	5d                   	pop    %rbp
   109dc:	c3                   	ret

00000000000109dd <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   109dd:	55                   	push   %rbp
   109de:	48 89 e5             	mov    %rsp,%rbp
   109e1:	48 83 ec 20          	sub    $0x20,%rsp
   109e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   109e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   109ed:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   109f1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   109f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109f9:	48 89 d6             	mov    %rdx,%rsi
   109fc:	48 89 c7             	mov    %rax,%rdi
   109ff:	e8 87 00 00 00       	call   10a8b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
   10a04:	c9                   	leave
   10a05:	c3                   	ret

0000000000010a06 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   10a06:	55                   	push   %rbp
   10a07:	48 89 e5             	mov    %rsp,%rbp
   10a0a:	48 83 ec 10          	sub    $0x10,%rsp
   10a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   10a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a16:	48 89 c7             	mov    %rax,%rdi
   10a19:	e8 ca 00 00 00       	call   10ae8 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10a1e:	48 89 c7             	mov    %rax,%rdi
   10a21:	e8 6c d2 ff ff       	call   dc92 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   10a26:	c9                   	leave
   10a27:	c3                   	ret

0000000000010a28 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   10a28:	55                   	push   %rbp
   10a29:	48 89 e5             	mov    %rsp,%rbp
   10a2c:	41 54                	push   %r12
   10a2e:	53                   	push   %rbx
   10a2f:	48 83 ec 20          	sub    $0x20,%rsp
   10a33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10a3b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10a3f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   10a43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a47:	48 89 c7             	mov    %rax,%rdi
   10a4a:	e8 81 e7 ff ff       	call   f1d0 <_ZSt12__niter_baseIPPKcET_S3_>
   10a4f:	49 89 c4             	mov    %rax,%r12
   10a52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a56:	48 89 c7             	mov    %rax,%rdi
   10a59:	e8 72 e7 ff ff       	call   f1d0 <_ZSt12__niter_baseIPPKcET_S3_>
   10a5e:	48 89 c3             	mov    %rax,%rbx
   10a61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a65:	48 89 c7             	mov    %rax,%rdi
   10a68:	e8 63 e7 ff ff       	call   f1d0 <_ZSt12__niter_baseIPPKcET_S3_>
   10a6d:	48 89 c7             	mov    %rax,%rdi
   10a70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10a74:	48 89 c1             	mov    %rax,%rcx
   10a77:	4c 89 e2             	mov    %r12,%rdx
   10a7a:	48 89 de             	mov    %rbx,%rsi
   10a7d:	e8 74 00 00 00       	call   10af6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   10a82:	48 83 c4 20          	add    $0x20,%rsp
   10a86:	5b                   	pop    %rbx
   10a87:	41 5c                	pop    %r12
   10a89:	5d                   	pop    %rbp
   10a8a:	c3                   	ret

0000000000010a8b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10a8b:	55                   	push   %rbp
   10a8c:	48 89 e5             	mov    %rsp,%rbp
   10a8f:	48 83 ec 20          	sub    $0x20,%rsp
   10a93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10a9b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10aa0:	74 40                	je     10ae2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   10aa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10aa6:	48 89 c7             	mov    %rax,%rdi
   10aa9:	e8 ab 00 00 00       	call   10b59 <_ZSt11__addressofIPKcEPT_RS2_>
   10aae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ab6:	48 89 c7             	mov    %rax,%rdi
   10ab9:	e8 a9 00 00 00       	call   10b67 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
   10abe:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   10ac3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ac7:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10acb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ad3:	48 89 ce             	mov    %rcx,%rsi
   10ad6:	48 89 c7             	mov    %rax,%rdi
   10ad9:	e8 b0 00 00 00       	call   10b8e <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
   10ade:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   10ae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10ae6:	c9                   	leave
   10ae7:	c3                   	ret

0000000000010ae8 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   10ae8:	55                   	push   %rbp
   10ae9:	48 89 e5             	mov    %rsp,%rbp
   10aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10af4:	5d                   	pop    %rbp
   10af5:	c3                   	ret

0000000000010af6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   10af6:	55                   	push   %rbp
   10af7:	48 89 e5             	mov    %rsp,%rbp
   10afa:	48 83 ec 30          	sub    $0x30,%rsp
   10afe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10b06:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10b0a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   10b0e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b12:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10b16:	48 c1 f8 03          	sar    $0x3,%rax
   10b1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   10b1e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10b23:	7e 1f                	jle    10b44 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   10b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b29:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10b30:	00 
   10b31:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10b35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b39:	48 89 ce             	mov    %rcx,%rsi
   10b3c:	48 89 c7             	mov    %rax,%rdi
   10b3f:	e8 2c 29 ff ff       	call   3470 <memmove@plt>
      return __result + __count;
   10b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b48:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10b4f:	00 
   10b50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b54:	48 01 d0             	add    %rdx,%rax
    }
   10b57:	c9                   	leave
   10b58:	c3                   	ret

0000000000010b59 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   10b59:	55                   	push   %rbp
   10b5a:	48 89 e5             	mov    %rsp,%rbp
   10b5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   10b61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b65:	5d                   	pop    %rbp
   10b66:	c3                   	ret

0000000000010b67 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   10b67:	55                   	push   %rbp
   10b68:	48 89 e5             	mov    %rsp,%rbp
   10b6b:	48 83 ec 10          	sub    $0x10,%rsp
   10b6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   10b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b77:	48 89 c6             	mov    %rax,%rsi
   10b7a:	bf 08 00 00 00       	mov    $0x8,%edi
   10b7f:	e8 f5 2c ff ff       	call   3879 <_ZnwmPv>
   10b84:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   10b8b:	90                   	nop
   10b8c:	c9                   	leave
   10b8d:	c3                   	ret

0000000000010b8e <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   10b8e:	55                   	push   %rbp
   10b8f:	48 89 e5             	mov    %rsp,%rbp
   10b92:	48 83 ec 20          	sub    $0x20,%rsp
   10b96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10b9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   10ba2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10ba6:	48 89 c7             	mov    %rax,%rdi
   10ba9:	e8 24 00 00 00       	call   10bd2 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   10bae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10bb2:	48 89 c7             	mov    %rax,%rdi
   10bb5:	e8 2d ae ff ff       	call   b9e7 <_ZSt17__size_to_integerm>
   10bba:	48 89 c1             	mov    %rax,%rcx
   10bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bc1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10bc5:	48 89 ce             	mov    %rcx,%rsi
   10bc8:	48 89 c7             	mov    %rax,%rdi
   10bcb:	e8 0d 00 00 00       	call   10bdd <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   10bd0:	c9                   	leave
   10bd1:	c3                   	ret

0000000000010bd2 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   10bd2:	55                   	push   %rbp
   10bd3:	48 89 e5             	mov    %rsp,%rbp
   10bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10bda:	90                   	nop
   10bdb:	5d                   	pop    %rbp
   10bdc:	c3                   	ret

0000000000010bdd <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10bdd:	55                   	push   %rbp
   10bde:	48 89 e5             	mov    %rsp,%rbp
   10be1:	48 83 ec 20          	sub    $0x20,%rsp
   10be5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10be9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10bed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10bf1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10bf6:	75 06                	jne    10bfe <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bfc:	eb 3a                	jmp    10c38 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   10bfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c02:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10c09:	00 
   10c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c0e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10c12:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c1a:	48 89 ce             	mov    %rcx,%rsi
   10c1d:	48 89 c7             	mov    %rax,%rdi
   10c20:	e8 15 00 00 00       	call   10c3a <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
   10c25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c29:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10c30:	00 
   10c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c35:	48 01 d0             	add    %rdx,%rax
    }
   10c38:	c9                   	leave
   10c39:	c3                   	ret

0000000000010c3a <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   10c3a:	55                   	push   %rbp
   10c3b:	48 89 e5             	mov    %rsp,%rbp
   10c3e:	48 83 ec 20          	sub    $0x20,%rsp
   10c42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10c4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   10c4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c52:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c5a:	48 89 ce             	mov    %rcx,%rsi
   10c5d:	48 89 c7             	mov    %rax,%rdi
   10c60:	e8 03 00 00 00       	call   10c68 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   10c65:	90                   	nop
   10c66:	c9                   	leave
   10c67:	c3                   	ret

0000000000010c68 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10c68:	55                   	push   %rbp
   10c69:	48 89 e5             	mov    %rsp,%rbp
   10c6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c70:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10c74:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   10c78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c7c:	48 8b 00             	mov    (%rax),%rax
   10c7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   10c83:	eb 10                	jmp    10c95 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   10c85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10c8d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10c90:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   10c95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c99:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10c9d:	75 e6                	jne    10c85 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   10c9f:	90                   	nop
   10ca0:	90                   	nop
   10ca1:	5d                   	pop    %rbp
   10ca2:	c3                   	ret
   10ca3:	90                   	nop

0000000000010ca4 <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
   10ca4:	55                   	push   %rbp
   10ca5:	48 89 e5             	mov    %rsp,%rbp
   10ca8:	48 83 ec 10          	sub    $0x10,%rsp
   10cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10cb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    : mWidth{settings.graphics.screenWidth},
   10cb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10cb8:	8b 50 50             	mov    0x50(%rax),%edx
   10cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cbf:	89 50 08             	mov    %edx,0x8(%rax)
      mHeight{settings.graphics.screenHeight} {
   10cc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10cc6:	8b 50 54             	mov    0x54(%rax),%edx
   10cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ccd:	89 50 0c             	mov    %edx,0xc(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
   10cd0:	be 00 00 00 00       	mov    $0x0,%esi
   10cd5:	bf 01 20 02 00       	mov    $0x22001,%edi
   10cda:	e8 71 25 ff ff       	call   3250 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
   10cdf:	be 00 00 00 00       	mov    $0x0,%esi
   10ce4:	bf 03 00 02 00       	mov    $0x20003,%edi
   10ce9:	e8 62 25 ff ff       	call   3250 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
   10cee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10cf2:	48 89 c7             	mov    %rax,%rdi
   10cf5:	e8 e6 23 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
   10cfa:	48 89 c2             	mov    %rax,%rdx
   10cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d01:	8b 40 0c             	mov    0xc(%rax),%eax
   10d04:	89 c6                	mov    %eax,%esi
   10d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d0a:	8b 40 08             	mov    0x8(%rax),%eax
   10d0d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10d13:	b9 00 00 00 00       	mov    $0x0,%ecx
   10d18:	89 c7                	mov    %eax,%edi
   10d1a:	e8 41 27 ff ff       	call   3460 <glfwCreateWindow@plt>
   10d1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10d23:	48 89 02             	mov    %rax,(%rdx)
                             nullptr, nullptr);
}
   10d26:	90                   	nop
   10d27:	c9                   	leave
   10d28:	c3                   	ret
   10d29:	90                   	nop

0000000000010d2a <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
   10d2a:	55                   	push   %rbp
   10d2b:	48 89 e5             	mov    %rsp,%rbp
   10d2e:	48 83 ec 10          	sub    $0x10,%rsp
   10d32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d3a:	48 8b 00             	mov    (%rax),%rax
   10d3d:	48 89 c7             	mov    %rax,%rdi
   10d40:	e8 3b 23 ff ff       	call   3080 <glfwDestroyWindow@plt>
   10d45:	90                   	nop
   10d46:	c9                   	leave
   10d47:	c3                   	ret

0000000000010d48 <_ZN4neko6Window4openEv>:

void Window::open() {
   10d48:	55                   	push   %rbp
   10d49:	48 89 e5             	mov    %rsp,%rbp
   10d4c:	48 83 ec 10          	sub    $0x10,%rsp
   10d50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
   10d54:	eb 05                	jmp    10d5b <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
   10d56:	e8 45 25 ff ff       	call   32a0 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
   10d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d5f:	48 8b 00             	mov    (%rax),%rax
   10d62:	48 89 c7             	mov    %rax,%rdi
   10d65:	e8 a6 27 ff ff       	call   3510 <glfwWindowShouldClose@plt>
   10d6a:	85 c0                	test   %eax,%eax
   10d6c:	0f 94 c0             	sete   %al
   10d6f:	84 c0                	test   %al,%al
   10d71:	75 e3                	jne    10d56 <_ZN4neko6Window4openEv+0xe>
  }
}
   10d73:	90                   	nop
   10d74:	90                   	nop
   10d75:	c9                   	leave
   10d76:	c3                   	ret
   10d77:	90                   	nop

0000000000010d78 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
   10d78:	55                   	push   %rbp
   10d79:	48 89 e5             	mov    %rsp,%rbp
   10d7c:	41 54                	push   %r12
   10d7e:	53                   	push   %rbx
   10d7f:	48 83 ec 20          	sub    $0x20,%rsp
   10d83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10d8b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
   10d8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d93:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10d97:	48 89 10             	mov    %rdx,(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
   10d9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d9e:	4c 8d 60 08          	lea    0x8(%rax),%r12
   10da2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10da6:	48 89 c7             	mov    %rax,%rdi
   10da9:	e8 c8 00 00 00       	call   10e76 <_ZNK4neko6WindowdeEv>
   10dae:	48 8b 18             	mov    (%rax),%rbx
   10db1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10db5:	48 89 c7             	mov    %rax,%rdi
   10db8:	e8 39 ac ff ff       	call   b9f6 <_ZNK4neko8InstancedeEv>
   10dbd:	48 8b 00             	mov    (%rax),%rax
   10dc0:	4c 89 e1             	mov    %r12,%rcx
   10dc3:	ba 00 00 00 00       	mov    $0x0,%edx
   10dc8:	48 89 de             	mov    %rbx,%rsi
   10dcb:	48 89 c7             	mov    %rax,%rdi
   10dce:	e8 7d 26 ff ff       	call   3450 <glfwCreateWindowSurface@plt>
   10dd3:	85 c0                	test   %eax,%eax
   10dd5:	0f 95 c0             	setne  %al
   10dd8:	84 c0                	test   %al,%al
   10dda:	74 51                	je     10e2d <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
   10ddc:	bf 10 00 00 00       	mov    $0x10,%edi
   10de1:	e8 2a 23 ff ff       	call   3110 <__cxa_allocate_exception@plt>
   10de6:	48 89 c3             	mov    %rax,%rbx
   10de9:	48 8d 05 d8 2b 00 00 	lea    0x2bd8(%rip),%rax        # 139c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   10df0:	48 89 c6             	mov    %rax,%rsi
   10df3:	48 89 df             	mov    %rbx,%rdi
   10df6:	e8 b5 22 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
   10dfb:	48 8b 05 b6 f1 00 00 	mov    0xf1b6(%rip),%rax        # 1ffb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10e02:	48 89 c2             	mov    %rax,%rdx
   10e05:	48 8d 05 34 ef 00 00 	lea    0xef34(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10e0c:	48 89 c6             	mov    %rax,%rsi
   10e0f:	48 89 df             	mov    %rbx,%rdi
   10e12:	e8 99 26 ff ff       	call   34b0 <__cxa_throw@plt>
   10e17:	49 89 c4             	mov    %rax,%r12
   10e1a:	48 89 df             	mov    %rbx,%rdi
   10e1d:	e8 8e 23 ff ff       	call   31b0 <__cxa_free_exception@plt>
   10e22:	4c 89 e0             	mov    %r12,%rax
   10e25:	48 89 c7             	mov    %rax,%rdi
   10e28:	e8 a3 26 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
}
   10e2d:	90                   	nop
   10e2e:	48 83 c4 20          	add    $0x20,%rsp
   10e32:	5b                   	pop    %rbx
   10e33:	41 5c                	pop    %r12
   10e35:	5d                   	pop    %rbp
   10e36:	c3                   	ret
   10e37:	90                   	nop

0000000000010e38 <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
   10e38:	55                   	push   %rbp
   10e39:	48 89 e5             	mov    %rsp,%rbp
   10e3c:	53                   	push   %rbx
   10e3d:	48 83 ec 18          	sub    $0x18,%rsp
   10e41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10e45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e49:	48 8b 58 08          	mov    0x8(%rax),%rbx
   10e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e51:	48 8b 00             	mov    (%rax),%rax
   10e54:	48 89 c7             	mov    %rax,%rdi
   10e57:	e8 9a ab ff ff       	call   b9f6 <_ZNK4neko8InstancedeEv>
   10e5c:	48 8b 00             	mov    (%rax),%rax
   10e5f:	ba 00 00 00 00       	mov    $0x0,%edx
   10e64:	48 89 de             	mov    %rbx,%rsi
   10e67:	48 89 c7             	mov    %rax,%rdi
   10e6a:	e8 51 26 ff ff       	call   34c0 <vkDestroySurfaceKHR@plt>
   10e6f:	90                   	nop
   10e70:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10e74:	c9                   	leave
   10e75:	c3                   	ret

0000000000010e76 <_ZNK4neko6WindowdeEv>:

  Window &operator=(Window &&) = default;

  ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
   10e76:	55                   	push   %rbp
   10e77:	48 89 e5             	mov    %rsp,%rbp
   10e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e82:	5d                   	pop    %rbp
   10e83:	c3                   	ret

0000000000010e84 <_Z41__static_initialization_and_destruction_0ii>:
#include "engine.hpp"

   10e84:	55                   	push   %rbp
   10e85:	48 89 e5             	mov    %rsp,%rbp
   10e88:	48 83 ec 10          	sub    $0x10,%rsp
   10e8c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   10e8f:	89 75 f8             	mov    %esi,-0x8(%rbp)
   10e92:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   10e96:	75 3b                	jne    10ed3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10e98:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   10e9f:	75 32                	jne    10ed3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10ea1:	48 8d 05 55 f6 00 00 	lea    0xf655(%rip),%rax        # 204fd <_ZStL8__ioinit>
   10ea8:	48 89 c7             	mov    %rax,%rdi
   10eab:	e8 90 25 ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
   10eb0:	48 8d 05 d1 f3 00 00 	lea    0xf3d1(%rip),%rax        # 20288 <__dso_handle>
   10eb7:	48 89 c2             	mov    %rax,%rdx
   10eba:	48 8d 05 3c f6 00 00 	lea    0xf63c(%rip),%rax        # 204fd <_ZStL8__ioinit>
   10ec1:	48 89 c6             	mov    %rax,%rsi
   10ec4:	48 8b 05 0d f1 00 00 	mov    0xf10d(%rip),%rax        # 1ffd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   10ecb:	48 89 c7             	mov    %rax,%rdi
   10ece:	e8 8d 23 ff ff       	call   3260 <__cxa_atexit@plt>
   10ed3:	90                   	nop
   10ed4:	c9                   	leave
   10ed5:	c3                   	ret

0000000000010ed6 <_GLOBAL__sub_I_engine.cpp>:
   10ed6:	55                   	push   %rbp
   10ed7:	48 89 e5             	mov    %rsp,%rbp
   10eda:	be ff ff 00 00       	mov    $0xffff,%esi
   10edf:	bf 01 00 00 00       	mov    $0x1,%edi
   10ee4:	e8 9b ff ff ff       	call   10e84 <_Z41__static_initialization_and_destruction_0ii>
   10ee9:	5d                   	pop    %rbp
   10eea:	c3                   	ret

Disassembly of section .fini:

0000000000010eec <_fini>:
   10eec:	48 83 ec 08          	sub    $0x8,%rsp
   10ef0:	48 83 c4 08          	add    $0x8,%rsp
   10ef4:	c3                   	ret
